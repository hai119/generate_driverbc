; ModuleID = '../bcout/drivers/isdn/hardware/mISDN/hfcmulti.llvm.bc'
source_filename = "drivers/isdn/hardware/mISDN/hfcmulti.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_HFCmulti_init6:\09\09\09"
module asm ".long\09HFCmulti_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.module_version_attribute = type { %struct.module_attribute, i8*, i8* }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.attribute = type { i8*, i16 }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.132, %struct.list_head, %struct.list_head, %union.anon.133 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.130 }
%union.anon.130 = type { %struct.anon.131 }
%struct.anon.131 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.122, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.122 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.123, i32 }
%union.anon.123 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.kgid_t = type { i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rb_root = type { %struct.rb_node* }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.64, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.93, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.96, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.38, %union.anon.40, %union.anon.41, i16, i8, i8, i32, %union.anon.43, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.60, [0 x i32], %union.anon.61, i16, %union.anon.62, %struct.refcount_struct, [0 x i32], %union.anon.63 }
%union.anon.38 = type { i64 }
%union.anon.40 = type { i32 }
%union.anon.41 = type { i32 }
%union.anon.43 = type { %struct.hlist_node }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.144, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.160, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.144 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.145, %union.anon.146 }
%union.anon.145 = type { [16 x i8] }
%union.anon.146 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.94 }
%union.anon.94 = type { i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.148 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.148 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.149 }
%union.anon.149 = type { %struct.anon.150 }
%struct.anon.150 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.153 }
%union.anon.153 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.154, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.154 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.155 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.155 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.92 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.65, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.65 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.66, i8, i8, i16, i32 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.72 }
%struct.anon.72 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.115, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.pid_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.100, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.100 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.101, %union.anon.102, i32 }
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.135, %union.anon.136, %union.anon.137, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.140, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.135 = type { %struct.hlist_node }
%union.anon.136 = type { %struct.rb_node }
%union.anon.137 = type { %struct.anon.139 }
%struct.anon.139 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.140 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.141, void (i8*)*, i8* }
%union.anon.141 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.142, i16, i16 }
%union.anon.142 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%union.anon.101 = type { %struct.list_head }
%union.anon.102 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.103 }
%struct.anon.103 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.107 }
%struct.anon.107 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.114, i32, [12 x i8] }
%union.anon.114 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.115 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.116, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.119 }
%union.anon.116 = type { %struct.anon.117 }
%struct.anon.117 = type { i64, i64 }
%union.anon.119 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%union.anon.92 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type opaque
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.156, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.156 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.157 }
%union.anon.157 = type { %struct.anon.158 }
%struct.anon.158 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type opaque
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.160 = type { i8* }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.98, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.98 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.99 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.percpu_counter = type { i64 }
%struct.seg6_pernet_data = type opaque
%struct.anon.99 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.59 }
%union.anon.59 = type { [4 x i32] }
%union.anon.60 = type { i64 }
%union.anon.61 = type { %struct.hlist_node }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.64 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.93 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%struct.lwtunnel_state = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.96 = type { %struct.sk_buff* }
%struct.sk_buff = type { %union.anon.46, %union.anon.49, %union.anon.50, [48 x i8], %union.anon.51, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.53, i32, i32, i32, i16, i16, %union.anon.55, %union.anon.56, %union.anon.57, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.48 }
%union.anon.48 = type { %struct.net_device* }
%union.anon.49 = type { %struct.sock* }
%union.anon.50 = type { i64 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, void (%struct.sk_buff*)* }
%union.anon.53 = type { i32 }
%union.anon.55 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i16 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.58, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.45, i8, i64, i32, %struct.kiocb* }
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%union.anon.45 = type { i8* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type opaque
%struct.timewait_sock_ops = type opaque
%union.anon.58 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.97, i32 }
%union.anon.97 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.sock_reuseport = type opaque
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.132 = type { %struct.list_head }
%union.anon.133 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.124, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.125, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.126, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.129, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.124 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.125 = type { %struct.callback_head }
%union.anon.126 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type opaque
%union.anon.129 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.127 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.127 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.134, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.134 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.module = type opaque
%struct.module_param_attrs = type opaque
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.161 }
%union.anon.161 = type { i8* }
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.162, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.162 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.hfc_multi = type { %struct.list_head, %struct.hm_map*, i32, i32, i32, i32, i32, i32, %struct.pci_dev*, i32, void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)*, i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)*, i16 (%struct.hfc_multi*, i8)*, i16 (%struct.hfc_multi*, i8)*, void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)*, void (%struct.hfc_multi*, i8*, i32)*, void (%struct.hfc_multi*, i8*, i32)*, i64, i64, i8*, i8*, i64, i8*, i64*, i64*, i64, i64, %struct.hfcm_hw, i64, i32, i8, [128 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, [32 x i32], [32 x i8], [32 x i8], i32, i32, [8 x i32], i64, i8, i32, i32, i32, i32, %struct.spinlock, %struct.mISDNclock*, i32, [32 x %struct.hfc_chan], [256 x i8] }
%struct.hm_map = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hfcm_hw = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i8, i32 }
%struct.mISDNclock = type { %struct.list_head, [64 x i8], i32, i32 (i8*, i32)*, i8* }
%struct.hfc_chan = type { %struct.dchannel*, %struct.bchannel*, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32* }
%struct.dchannel = type { %struct.mISDNdevice, i64, %struct.work_struct, void (%struct.dchannel*)*, i32, i8*, i8*, i32, %struct.timer_list, %struct.sk_buff*, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.sk_buff*, i32, i32, i32, i32, i32 }
%struct.mISDNdevice = type { %struct.mISDNchannel, i32, i32, i32, i32, [16 x i8], %struct.list_head, %struct.mISDNchannel*, %struct.device }
%struct.mISDNchannel = type { %struct.list_head, i32, i32, i64, i32, %struct.mISDNstack*, %struct.mISDNchannel*, i32 (%struct.mISDNchannel*, %struct.sk_buff*)*, i32 (%struct.mISDNchannel*, %struct.sk_buff*)*, i32 (%struct.mISDNchannel*, i32, i8*)* }
%struct.mISDNstack = type { i64, %struct.mISDNdevice*, %struct.task_struct*, %struct.completion*, %struct.wait_queue_head, %struct.sk_buff_head, %struct.list_head, %struct.mISDNchannel*, %struct.mISDNchannel, %struct.mutex, %struct.mISDN_sock_list }
%struct.mISDN_sock_list = type { %struct.hlist_head, %struct.rwlock_t }
%struct.bchannel = type { %struct.mISDNchannel, i32, i64, %struct.work_struct, i32, i8*, i32, %struct.timer_list, [4 x i8], %struct.sk_buff*, i16, i16, i16, i16, i16, i16, %struct.sk_buff*, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i32, i32, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.layer1 = type opaque
%struct.mISDNhead = type { i32, i32 }
%struct.channel_req = type { i32, %struct.sockaddr_mISDN, %struct.mISDNchannel* }
%struct.sockaddr_mISDN = type { i16, i8, i8, i8, i8 }
%struct.mISDN_ctrl_req = type { i32, i32, i32, i32 }
%struct.dsp_features = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@__UNIQUE_ID_author508 = internal constant [34 x i8] c"hfcmulti.author=Andreas Eversberg\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_file509 = internal constant [51 x i8] c"hfcmulti.file=drivers/isdn/hardware/mISDN/hfcmulti\00", section ".modinfo", align 1, !dbg !9705
@__UNIQUE_ID_license510 = internal constant [21 x i8] c"hfcmulti.license=GPL\00", section ".modinfo", align 1, !dbg !9710
@__UNIQUE_ID_version511 = internal constant [22 x i8] c"hfcmulti.version=2.03\00", section ".modinfo", align 1, !dbg !9715
@___modver_attr = internal global %struct.module_version_attribute { %struct.module_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i16 292 }, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)* @__modver_version_show, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)* null, void (%struct.module*, i8*)* null, i32 (%struct.module*)* null, void (%struct.module*)* null }, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0) }, align 8, !dbg !9893
@__modver_attr = internal constant %struct.module_version_attribute* @___modver_attr, section "__modver", align 8, !dbg !9718
@__param_str_debug = internal constant [15 x i8] c"hfcmulti.debug\00", align 1, !dbg !9895
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@debug = internal global i32 0, align 4, !dbg !9884
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.161 { i8* bitcast (i32* @debug to i8*) } }, section "__param", align 8, !dbg !9763
@__UNIQUE_ID_debugtype512 = internal constant [29 x i8] c"hfcmulti.parmtype=debug:uint\00", section ".modinfo", align 1, !dbg !9813
@__param_str_poll = internal constant [14 x i8] c"hfcmulti.poll\00", align 1, !dbg !9900
@poll = internal global i32 0, align 4, !dbg !9887
@__param_poll = internal constant %struct.kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_poll, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.161 { i8* bitcast (i32* @poll to i8*) } }, section "__param", align 8, !dbg !9818
@__UNIQUE_ID_polltype513 = internal constant [28 x i8] c"hfcmulti.parmtype=poll:uint\00", section ".modinfo", align 1, !dbg !9820
@__param_str_clock = internal constant [15 x i8] c"hfcmulti.clock\00", align 1, !dbg !9903
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@clock = internal global i32 0, align 4, !dbg !9889
@__param_clock = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_clock, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.161 { i8* bitcast (i32* @clock to i8*) } }, section "__param", align 8, !dbg !9823
@__UNIQUE_ID_clocktype514 = internal constant [28 x i8] c"hfcmulti.parmtype=clock:int\00", section ".modinfo", align 1, !dbg !9825
@__param_str_timer = internal constant [15 x i8] c"hfcmulti.timer\00", align 1, !dbg !9905
@timer = internal global i32 0, align 4, !dbg !9891
@__param_timer = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_timer, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.161 { i8* bitcast (i32* @timer to i8*) } }, section "__param", align 8, !dbg !9827
@__UNIQUE_ID_timertype515 = internal constant [29 x i8] c"hfcmulti.parmtype=timer:uint\00", section ".modinfo", align 1, !dbg !9829
@__param_str_clockdelay_te = internal constant [23 x i8] c"hfcmulti.clockdelay_te\00", align 16, !dbg !9907
@clockdelay_te = internal global i32 15, align 4, !dbg !9912
@__param_clockdelay_te = internal constant %struct.kernel_param { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__param_str_clockdelay_te, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.161 { i8* bitcast (i32* @clockdelay_te to i8*) } }, section "__param", align 8, !dbg !9831
@__UNIQUE_ID_clockdelay_tetype516 = internal constant [37 x i8] c"hfcmulti.parmtype=clockdelay_te:uint\00", section ".modinfo", align 1, !dbg !9833
@__param_str_clockdelay_nt = internal constant [23 x i8] c"hfcmulti.clockdelay_nt\00", align 16, !dbg !9914
@clockdelay_nt = internal global i32 108, align 4, !dbg !9916
@__param_clockdelay_nt = internal constant %struct.kernel_param { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__param_str_clockdelay_nt, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.161 { i8* bitcast (i32* @clockdelay_nt to i8*) } }, section "__param", align 8, !dbg !9836
@__UNIQUE_ID_clockdelay_nttype517 = internal constant [37 x i8] c"hfcmulti.parmtype=clockdelay_nt:uint\00", section ".modinfo", align 1, !dbg !9838
@__param_str_type = internal constant [14 x i8] c"hfcmulti.type\00", align 1, !dbg !9918
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 8
@__param_arr_type = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_uint, i8* bitcast ([8 x i32]* @type to i8*) }, align 8, !dbg !9920
@__param_type = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_type, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_type } }, section "__param", align 8, !dbg !9840
@__UNIQUE_ID_typetype518 = internal constant [37 x i8] c"hfcmulti.parmtype=type:array of uint\00", section ".modinfo", align 1, !dbg !9842
@__param_str_pcm = internal constant [13 x i8] c"hfcmulti.pcm\00", align 1, !dbg !9925
@__param_arr_pcm = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([8 x i32]* @pcm to i8*) }, align 8, !dbg !9928
@__param_pcm = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__param_str_pcm, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_pcm } }, section "__param", align 8, !dbg !9844
@__UNIQUE_ID_pcmtype519 = internal constant [35 x i8] c"hfcmulti.parmtype=pcm:array of int\00", section ".modinfo", align 1, !dbg !9846
@__param_str_dmask = internal constant [15 x i8] c"hfcmulti.dmask\00", align 1, !dbg !9933
@__param_arr_dmask = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_uint, i8* bitcast ([8 x i32]* @dmask to i8*) }, align 8, !dbg !9935
@__param_dmask = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_dmask, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_dmask } }, section "__param", align 8, !dbg !9851
@__UNIQUE_ID_dmasktype520 = internal constant [38 x i8] c"hfcmulti.parmtype=dmask:array of uint\00", section ".modinfo", align 1, !dbg !9853
@__param_str_bmask = internal constant [15 x i8] c"hfcmulti.bmask\00", align 1, !dbg !9939
@__param_arr_bmask = internal constant %struct.kparam_array { i32 256, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_uint, i8* bitcast ([256 x i32]* @bmask to i8*) }, align 8, !dbg !9941
@__param_bmask = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_bmask, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_bmask } }, section "__param", align 8, !dbg !9858
@__UNIQUE_ID_bmasktype521 = internal constant [38 x i8] c"hfcmulti.parmtype=bmask:array of uint\00", section ".modinfo", align 1, !dbg !9860
@__param_str_iomode = internal constant [16 x i8] c"hfcmulti.iomode\00", align 16, !dbg !9946
@__param_arr_iomode = internal constant %struct.kparam_array { i32 8, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_uint, i8* bitcast ([8 x i32]* @iomode to i8*) }, align 8, !dbg !9949
@__param_iomode = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_iomode, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_iomode } }, section "__param", align 8, !dbg !9862
@__UNIQUE_ID_iomodetype522 = internal constant [39 x i8] c"hfcmulti.parmtype=iomode:array of uint\00", section ".modinfo", align 1, !dbg !9864
@__param_str_port = internal constant [14 x i8] c"hfcmulti.port\00", align 1, !dbg !9953
@__param_arr_port = internal constant %struct.kparam_array { i32 64, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_uint, i8* bitcast ([64 x i32]* @port to i8*) }, align 8, !dbg !9955
@__param_port = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_port, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_port } }, section "__param", align 8, !dbg !9869
@__UNIQUE_ID_porttype523 = internal constant [37 x i8] c"hfcmulti.parmtype=port:array of uint\00", section ".modinfo", align 1, !dbg !9871
@__param_str_hwid = internal constant [14 x i8] c"hfcmulti.hwid\00", align 1, !dbg !9960
@hwid = internal global i32 0, align 4, !dbg !9962
@__param_hwid = internal constant %struct.kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_hwid, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.161 { i8* bitcast (i32* @hwid to i8*) } }, section "__param", align 8, !dbg !9873
@__UNIQUE_ID_hwidtype524 = internal constant [28 x i8] c"hfcmulti.parmtype=hwid:uint\00", section ".modinfo", align 1, !dbg !9875
@HFClist = internal global %struct.list_head { %struct.list_head* @HFClist, %struct.list_head* @HFClist }, align 8, !dbg !9964
@hfcmultipci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([39 x %struct.pci_device_id], [39 x %struct.pci_device_id]* @hfmultipci_ids, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @hfcmulti_probe, void (%struct.pci_dev*)* @hfc_remove_pci, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !9972
@__UNIQUE_ID___addressable_HFCmulti_init546 = internal global i8* bitcast (i32 ()* @HFCmulti_init to i8*), section ".discard.addressable", align 8, !dbg !9877
@__exitcall_HFCmulti_cleanup = internal global void ()* @HFCmulti_cleanup, section ".exitcall.exit", align 8, !dbg !9879
@.str = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"hfcmulti\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"2.03\00", align 1
@type = internal global [8 x i32] zeroinitializer, align 16, !dbg !9922
@pcm = internal global [8 x i32] zeroinitializer, align 16, !dbg !9930
@dmask = internal global [8 x i32] zeroinitializer, align 16, !dbg !9937
@bmask = internal global [256 x i32] zeroinitializer, align 16, !dbg !9943
@iomode = internal global [8 x i32] zeroinitializer, align 16, !dbg !9951
@port = internal global [64 x i32] zeroinitializer, align 16, !dbg !9957
@.str.3 = private unnamed_addr constant [33 x i8] c"\017%s: release card (%d) entered\0A\00", align 1
@__func__.release_card = private unnamed_addr constant [13 x i8] c"release_card\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"\017%s: free irq %d (hc=%p)\0A\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"\017%s: disable all channels (d and b)\0A\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"\017%s: remove instance from list\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\017%s: delete instance\0A\00", align 1
@syncmaster = internal global %struct.hfc_multi* null, align 8, !dbg !9970
@.str.8 = private unnamed_addr constant [33 x i8] c"\017%s: card successfully removed\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.9 = private unnamed_addr constant [27 x i8] c"\017%s: entered for port %d\0A\00", align 1
@__func__.release_port = private unnamed_addr constant [13 x i8] c"release_port\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"\014%s: ERROR port out of range (%d).\0A\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"\017%s: releasing port=%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"\017%s: free port %d channel %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"\017%s: free port %d channel D(%d)\0A\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"\017%s: done!\0A\00", align 1
@.str.15 = private unnamed_addr constant [35 x i8] c"\017%s: GOT sync on card %d (id=%d)\0A\00", align 1
@__func__.plxsd_checksync = private unnamed_addr constant [16 x i8] c"plxsd_checksync\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"\017%s: LOST sync on card %d (id=%d)\0A\00", align 1
@HFClock = internal global %struct.spinlock zeroinitializer, align 1, !dbg !9966
@plx_lock = internal global %struct.spinlock zeroinitializer, align 1, !dbg !9968
@.str.17 = private unnamed_addr constant [31 x i8] c"\017%s: RESYNC(syncmaster=0x%p)\0A\00", align 1
@__func__.hfcmulti_resync = private unnamed_addr constant [16 x i8] c"hfcmulti_resync\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"\017using provided controller\0A\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"\017Schedule SYNC_I\0A\00", align 1
@.str.20 = private unnamed_addr constant [46 x i8] c"\017id=%d (0x%p) = syncronized with interface.\0A\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"\017Schedule jatt PLL\0A\00", align 1
@.str.22 = private unnamed_addr constant [53 x i8] c"\017id=%d (0x%p) = PCM master syncronized with QUARTZ\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"\017Schedule QUARTZ for HFC-E1\0A\00", align 1
@.str.24 = private unnamed_addr constant [46 x i8] c"\017QUARTZ is automatically enabled by HFC-%dS\0A\00", align 1
@.str.25 = private unnamed_addr constant [43 x i8] c"\013%s no pcm master, this MUST not happen!\0A\00", align 1
@.str.26 = private unnamed_addr constant [49 x i8] c"\017Wrote 0x%x to register 0x%x but got back 0x%x\0A\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"\017%s: entered\0A\00", align 1
@__func__.release_io_hfcmulti = private unnamed_addr constant [20 x i8] c"release_io_hfcmulti\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"\017%s: release PLXSD card %d\0A\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"\017%s: PCM off: PLX_GPIO=%x\0A\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.30 = private unnamed_addr constant [12 x i8] c"\017%s: done\0A\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"hfc_multi\00", align 1
@hfmultipci_ids = internal constant [39 x %struct.pci_device_id] [%struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46439, i32 0, i32 0, i64 ptrtoint ([35 x %struct.hm_map]* @hfcm_map to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46438, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 48) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46441, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 96) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46432, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 144) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46440, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 192) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 2228, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 240) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46368, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 288) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46624, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 336) to i64) }, %struct.pci_device_id { i32 53601, i32 46096, i32 53601, i32 46096, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 384) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46400, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 432) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46416, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 480) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 4660, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 528) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 59528, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1344) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 59524, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1392) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46945, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1584) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 5015, i32 46946, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1632) to i64) }, %struct.pci_device_id { i32 5015, i32 5816, i32 5015, i32 46434, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 576) to i64) }, %struct.pci_device_id { i32 5015, i32 5816, i32 5015, i32 46443, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 624) to i64) }, %struct.pci_device_id { i32 5015, i32 5816, i32 5015, i32 5816, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 672) to i64) }, %struct.pci_device_id { i32 5015, i32 5816, i32 5015, i32 46369, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 720) to i64) }, %struct.pci_device_id { i32 5015, i32 5816, i32 5015, i32 46370, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 768) to i64) }, %struct.pci_device_id { i32 5015, i32 5816, i32 5015, i32 46418, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 816) to i64) }, %struct.pci_device_id { i32 5015, i32 5816, i32 5015, i32 46626, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 864) to i64) }, %struct.pci_device_id { i32 5015, i32 5816, i32 5015, i32 59800, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1440) to i64) }, %struct.pci_device_id { i32 5015, i32 5816, i32 5015, i32 46427, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1536) to i64) }, %struct.pci_device_id { i32 5015, i32 12465, i32 5015, i32 46435, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 912) to i64) }, %struct.pci_device_id { i32 5015, i32 12465, i32 5015, i32 46442, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 960) to i64) }, %struct.pci_device_id { i32 5015, i32 12465, i32 5015, i32 46437, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1008) to i64) }, %struct.pci_device_id { i32 5015, i32 12465, i32 5015, i32 46436, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1056) to i64) }, %struct.pci_device_id { i32 5015, i32 12465, i32 5015, i32 12465, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1104) to i64) }, %struct.pci_device_id { i32 5015, i32 12465, i32 5015, i32 46371, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1152) to i64) }, %struct.pci_device_id { i32 5015, i32 12465, i32 5015, i32 50467, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1200) to i64) }, %struct.pci_device_id { i32 4277, i32 36912, i32 5015, i32 12598, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1248) to i64) }, %struct.pci_device_id { i32 4277, i32 36912, i32 5015, i32 12599, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1296) to i64) }, %struct.pci_device_id { i32 5015, i32 12465, i32 5015, i32 46419, i32 0, i32 0, i64 ptrtoint (i8* getelementptr (i8, i8* bitcast ([35 x %struct.hm_map]* @hfcm_map to i8*), i64 1200) to i64) }, %struct.pci_device_id { i32 5015, i32 2228, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 5015, i32 5816, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 5015, i32 12465, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !9974
@hfcm_map = internal constant [35 x %struct.hm_map] [%struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0), i32 4, i32 1, i32 1, i32 3, i32 0, i32 1, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), i32 4, i32 2, i32 1, i32 3, i32 0, i32 1, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i32 0, i32 0), i32 4, i32 2, i32 1, i32 3, i32 0, i32 1, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i32 4, i32 4, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i32 0, i32 0), i32 4, i32 4, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i32 0, i32 0), i32 4, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i32 4, i32 4, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i32 0, i32 0), i32 4, i32 4, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i32 0, i32 0), i32 4, i32 4, i32 0, i32 2, i32 0, i32 0, i32 1, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i32 4, i32 4, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i32 0, i32 0), i32 4, i32 4, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.47, i32 0, i32 0), i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48, i32 0, i32 0), i32 8, i32 8, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.49, i32 0, i32 0), i32 8, i32 8, i32 1, i32 8, i32 0, i32 2, i32 1, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i32 0, i32 0), i32 8, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i32 0, i32 0), i32 8, i32 8, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0), i32 8, i32 8, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 8, i32 8, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 8, i32 8, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.54, i32 0, i32 0), i32 1, i32 1, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i32 0, i32 0), i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i32 0, i32 0), i32 1, i32 1, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.57, i32 0, i32 0), i32 1, i32 1, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58, i32 0, i32 0), i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i32 0, i32 0), i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0), i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.61, i32 0, i32 0), i32 4, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i32 0, i32 0), i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i32 4, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0), i32 4, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i32 8, i32 8, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i32 0, i32 0), i32 5, i32 4, i32 0, i32 0, i32 0, i32 0, i32 3, i32 4 }, %struct.hm_map { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i32 0, i32 0), i32 8, i32 8, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.68, i32 0, i32 0), i32 4, i32 2, i32 1, i32 3, i32 0, i32 1, i32 0, i32 0 }, %struct.hm_map { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.69, i32 0, i32 0), i32 4, i32 4, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0 }], align 16, !dbg !9977
@.str.32 = private unnamed_addr constant [13 x i8] c"beroNet GmbH\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"HFC-1S Card (mini PCI)\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"HFC-2S Card\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"HFC-2S Card (mini PCI)\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"HFC-4S Card\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"HFC-4S Card (mini PCI)\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"Cologne Chip AG\00", align 1
@.str.39 = private unnamed_addr constant [18 x i8] c"HFC-4S Eval (old)\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"HFC-4S IOB4ST\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"HFC-4S\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"Digium Inc.\00", align 1
@.str.43 = private unnamed_addr constant [29 x i8] c"HFC-4S Swyx 4xS0 SX2 QuadBri\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"Junghanns.NET GmbH\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"HFC-4S (junghanns 2.0)\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"PrimuX\00", align 1
@.str.47 = private unnamed_addr constant [19 x i8] c"HFC-2S Primux Card\00", align 1
@.str.48 = private unnamed_addr constant [12 x i8] c"HFC-8S Card\00", align 1
@.str.49 = private unnamed_addr constant [16 x i8] c"HFC-8S Card (+)\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"HFC-8S Eval (old)\00", align 1
@.str.51 = private unnamed_addr constant [24 x i8] c"HFC-8S IOB4ST Recording\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"HFC-8S IOB8ST\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"HFC-8S\00", align 1
@.str.54 = private unnamed_addr constant [12 x i8] c"HFC-E1 Card\00", align 1
@.str.55 = private unnamed_addr constant [23 x i8] c"HFC-E1 Card (mini PCI)\00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c"HFC-E1+ Card (Dual)\00", align 1
@.str.57 = private unnamed_addr constant [19 x i8] c"HFC-E1 Card (Dual)\00", align 1
@.str.58 = private unnamed_addr constant [18 x i8] c"HFC-E1 Eval (old)\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"HFC-E1 IOB1E1\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"HFC-E1\00", align 1
@.str.61 = private unnamed_addr constant [21 x i8] c"HFC-4S Speech Design\00", align 1
@.str.62 = private unnamed_addr constant [21 x i8] c"HFC-E1 Speech Design\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"HFC-4S OpenVox\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"HFC-2S OpenVox\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"HFC-8S OpenVox\00", align 1
@.str.66 = private unnamed_addr constant [22 x i8] c"XHFC-4S Speech Design\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"HFC-8S (junghanns)\00", align 1
@.str.68 = private unnamed_addr constant [25 x i8] c"HFC-2S Beronet Card PCIe\00", align 1
@.str.69 = private unnamed_addr constant [25 x i8] c"HFC-4S Beronet Card PCIe\00", align 1
@.str.70 = private unnamed_addr constant [92 x i8] c"\013Unknown HFC multiport controller (vendor:%04x device:%04x subvendor:%04x subdevice:%04x)\0A\00", align 1
@.str.71 = private unnamed_addr constant [53 x i8] c"\013Please contact the driver maintainer for support.\0A\00", align 1
@HFC_cnt = internal global i32 0, align 4, !dbg !10001
@.str.72 = private unnamed_addr constant [25 x i8] c"\016%d devices registered\0A\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"\013too many cards (max=%d).\0A\00", align 1
@.str.74 = private unnamed_addr constant [90 x i8] c"\014HFC-MULTI: Card '%s:%s' type %d found but type[%d] %d was supplied as module parameter\0A\00", align 1
@.str.75 = private unnamed_addr constant [81 x i8] c"\014HFC-MULTI: Load module without parameters first, to see cards and their types.\00", align 1
@.str.76 = private unnamed_addr constant [45 x i8] c"\017%s: Registering %s:%s chip type %d (0x%x)\0A\00", align 1
@__func__.hfcmulti_init = private unnamed_addr constant [14 x i8] c"hfcmulti_init\00", align 1
@.str.77 = private unnamed_addr constant [30 x i8] c"\013No kmem for HFC-Multi card\0A\00", align 1
@E1_cnt = internal global i32 0, align 4, !dbg !9981
@bmask_cnt = internal global i32 0, align 4, !dbg !9983
@.str.78 = private unnamed_addr constant [57 x i8] c"\016HFC-E1 #%d has overlapping B-channels on fragment #%d\0A\00", align 1
@.str.79 = private unnamed_addr constant [70 x i8] c"\016HFC-E1 #%d uses D-channel on slot %d and a B-channel map of 0x%08x\0A\00", align 1
@.str.80 = private unnamed_addr constant [54 x i8] c"\013HFCMULTI error: silence_data too small, please fix\0A\00", align 1
@.str.81 = private unnamed_addr constant [20 x i8] c"\015Watchdog enabled\0A\00", align 1
@.str.82 = private unnamed_addr constant [33 x i8] c"\014Embedded IO Mode not selected\0A\00", align 1
@Port_cnt = internal global i32 0, align 4, !dbg !9985
@.str.83 = private unnamed_addr constant [28 x i8] c"\013too many ports (max=%d).\0A\00", align 1
@.str.84 = private unnamed_addr constant [58 x i8] c"\017%s: Registering D-channel, card(%d) port(%d) result %d\0A\00", align 1
@.str.85 = private unnamed_addr constant [35 x i8] c"\016%s: %s DIPs(0x%x) jumpers(0x%x)\0A\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"\016%s: %s DIPs(0x%x)\0A\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"HFCMulti\00", align 1
@.str.88 = private unnamed_addr constant [24 x i8] c"\013init card returns %d\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.89 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.90 = private unnamed_addr constant [64 x i8] c"\016HFC-multi: card manufacturer: '%s' card name: '%s' clock: %s\0A\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.93 = private unnamed_addr constant [41 x i8] c"\014HFC-multi: No IRQ for PCI card found.\0A\00", align 1
@.str.94 = private unnamed_addr constant [39 x i8] c"\014HFC-multi: Error enabling PCI card.\0A\00", align 1
@.str.95 = private unnamed_addr constant [52 x i8] c"\014HFC-multi: No IO-Memory for PCI PLX bridge found\0A\00", align 1
@.str.96 = private unnamed_addr constant [66 x i8] c"\014HFC-multi: failed to remap plx address space. (internal error)\0A\00", align 1
@.str.97 = private unnamed_addr constant [52 x i8] c"\016HFC-multi: plx_membase:%#lx plx_origmembase:%#lx\0A\00", align 1
@.str.98 = private unnamed_addr constant [46 x i8] c"\014HFC-multi: No IO-Memory for PCI card found\0A\00", align 1
@.str.99 = private unnamed_addr constant [65 x i8] c"\014HFC-multi: failed to remap io address space. (internal error)\0A\00", align 1
@.str.100 = private unnamed_addr constant [69 x i8] c"\016card %d: defined at MEMBASE %#lx (%#lx) IRQ %d HZ %d leds-type %d\0A\00", align 1
@.str.101 = private unnamed_addr constant [39 x i8] c"\014HFC-multi: No IO for PCI card found\0A\00", align 1
@.str.102 = private unnamed_addr constant [74 x i8] c"\014HFC-multi: failed to request address space at 0x%08lx (internal error)\0A\00", align 1
@.str.103 = private unnamed_addr constant [58 x i8] c"\016%s %s: defined at IOBASE %#x IRQ %d HZ %d leds-type %d\0A\00", align 1
@.str.104 = private unnamed_addr constant [31 x i8] c"\014HFC-multi: Invalid IO mode.\0A\00", align 1
@.str.105 = private unnamed_addr constant [30 x i8] c"\013%s: no memory for bchannel\0A\00", align 1
@__func__.init_e1_port = private unnamed_addr constant [13 x i8] c"init_e1_port\00", align 1
@.str.106 = private unnamed_addr constant [28 x i8] c"\013%s: no memory for coeffs\0A\00", align 1
@.str.107 = private unnamed_addr constant [13 x i8] c"hfc-e1.%d-%d\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"hfc-e1.%d\00", align 1
@.str.109 = private unnamed_addr constant [31 x i8] c"\014%s: ERROR given dch is NULL\0A\00", align 1
@__func__.ph_state_change = private unnamed_addr constant [16 x i8] c"ph_state_change\00", align 1
@.str.110 = private unnamed_addr constant [33 x i8] c"\017%s: E1 TE (id=%d) newstate %x\0A\00", align 1
@.str.111 = private unnamed_addr constant [33 x i8] c"\017%s: E1 NT (id=%d) newstate %x\0A\00", align 1
@.str.112 = private unnamed_addr constant [26 x i8] c"\017%s: S/T TE newstate %x\0A\00", align 1
@.str.113 = private unnamed_addr constant [26 x i8] c"\017%s: S/T NT newstate %x\0A\00", align 1
@nt_t1_count = internal global [8 x i32] [i32 3840, i32 1920, i32 960, i32 480, i32 240, i32 120, i32 60, i32 30], align 16, !dbg !9987
@poll_timer = internal global i32 6, align 4, !dbg !9989
@.str.114 = private unnamed_addr constant [35 x i8] c"\017%s: PH_ACTIVATE port %d (0..%d)\0A\00", align 1
@__func__.handle_dmsg = private unnamed_addr constant [12 x i8] c"handle_dmsg\00", align 1
@.str.115 = private unnamed_addr constant [27 x i8] c"\017%s: E1 report state %x \0A\00", align 1
@.str.116 = private unnamed_addr constant [37 x i8] c"\017%s: PH_DEACTIVATE port %d (0..%d)\0A\00", align 1
@.str.117 = private unnamed_addr constant [28 x i8] c"\017%s: PH_DEACTIVATE no BRI\0A\00", align 1
@.str.118 = private unnamed_addr constant [41 x i8] c"\017%s(card %d): reread f2 because %d!=%d\0A\00", align 1
@__func__.hfcmulti_tx = private unnamed_addr constant [12 x i8] c"hfcmulti_tx\00", align 1
@.str.119 = private unnamed_addr constant [41 x i8] c"\017%s(card %d): reread z2 because %d!=%d\0A\00", align 1
@.str.120 = private unnamed_addr constant [72 x i8] c"\017%s: reconnecting PCM due to no more FIFO data: channel %d slot_tx %d\0A\00", align 1
@.str.121 = private unnamed_addr constant [41 x i8] c"\017%s: buffer empty, so we have underrun\0A\00", align 1
@.str.122 = private unnamed_addr constant [65 x i8] c"\017%s: disconnecting PCM due to FIFO data: channel %d slot_tx %d\0A\00", align 1
@.str.123 = private unnamed_addr constant [94 x i8] c"\017%s(card %d): fifo(%d) has %d bytes space left (z1=%04x, z2=%04x) sending %d of %d bytes %s\0A\00", align 1
@.str.124 = private unnamed_addr constant [5 x i8] c"HDLC\00", align 1
@.str.125 = private unnamed_addr constant [6 x i8] c"TRANS\00", align 1
@.str.126 = private unnamed_addr constant [17 x i8] c"\017%s: cmd:%x %p\0A\00", align 1
@__func__.hfcm_dctrl = private unnamed_addr constant [11 x i8] c"hfcm_dctrl\00", align 1
@.str.127 = private unnamed_addr constant [29 x i8] c"\017%s: dev(%d) close from %p\0A\00", align 1
@.str.128 = private unnamed_addr constant [26 x i8] c"\017%s: unknown command %x\0A\00", align 1
@.str.129 = private unnamed_addr constant [28 x i8] c"\017%s: dev(%d) open from %p\0A\00", align 1
@__func__.open_dchannel = private unnamed_addr constant [14 x i8] c"open_dchannel\00", align 1
@.str.130 = private unnamed_addr constant [32 x i8] c"\017%s: change protocol %x to %x\0A\00", align 1
@.str.131 = private unnamed_addr constant [24 x i8] c"\014%s:cannot get module\0A\00", align 1
@.str.132 = private unnamed_addr constant [27 x i8] c"\017%s: HW_RESET_REQ no BRI\0A\00", align 1
@__func__.hfcm_l1callback = private unnamed_addr constant [16 x i8] c"hfcm_l1callback\00", align 1
@.str.133 = private unnamed_addr constant [27 x i8] c"\017%s: HW_DEACT_REQ no BRI\0A\00", align 1
@.str.134 = private unnamed_addr constant [29 x i8] c"\017%s: HW_POWERUP_REQ no BRI\0A\00", align 1
@__func__.hfcmulti_initmode = private unnamed_addr constant [18 x i8] c"hfcmulti_initmode\00", align 1
@.str.135 = private unnamed_addr constant [26 x i8] c"\017%s: E1 port is NT-mode\0A\00", align 1
@.str.136 = private unnamed_addr constant [26 x i8] c"\017%s: E1 port is TE-mode\0A\00", align 1
@.str.137 = private unnamed_addr constant [48 x i8] c"\017%s: E1 port is clock master (clock from PCM)\0A\00", align 1
@.str.138 = private unnamed_addr constant [45 x i8] c"\017%s: E1 port is clock slave (clock to PCM)\0A\00", align 1
@.str.139 = private unnamed_addr constant [51 x i8] c"\017%s: E1 port is clock master (clock from QUARTZ)\0A\00", align 1
@.str.140 = private unnamed_addr constant [29 x i8] c"\017%s: ST port %d is NT-mode\0A\00", align 1
@.str.141 = private unnamed_addr constant [29 x i8] c"\017%s: ST port %d is TE-mode\0A\00", align 1
@.str.142 = private unnamed_addr constant [10 x i8] c"%s: done\0A\00", align 1
@.str.143 = private unnamed_addr constant [110 x i8] c"\017%s: card %d channel %d protocol %x slot old=%d new=%d bank new=%d (TX) slot old=%d new=%d bank new=%d (RX)\0A\00", align 1
@__func__.mode_hfcmulti = private unnamed_addr constant [14 x i8] c"mode_hfcmulti\00", align 1
@.str.144 = private unnamed_addr constant [32 x i8] c"\017%s: remove from slot %d (TX)\0A\00", align 1
@.str.145 = private unnamed_addr constant [64 x i8] c"\017%s: we are not owner of this tx slot anymore, channel %d is.\0A\00", align 1
@.str.146 = private unnamed_addr constant [32 x i8] c"\017%s: remove from slot %d (RX)\0A\00", align 1
@.str.147 = private unnamed_addr constant [64 x i8] c"\017%s: we are not owner of this rx slot anymore, channel %d is.\0A\00", align 1
@.str.148 = private unnamed_addr constant [77 x i8] c"\017%s: put channel %d to slot %d bank %d flow %02x routing %02x conf %d (TX)\0A\00", align 1
@.str.149 = private unnamed_addr constant [77 x i8] c"\017%s: put channel %d to slot %d bank %d flow %02x routing %02x conf %d (RX)\0A\00", align 1
@.str.150 = private unnamed_addr constant [64 x i8] c"\017Setting B-channel %d to echo cancelable state on PCM slot %d\0A\00", align 1
@.str.151 = private unnamed_addr constant [37 x i8] c"\017Enabling pass through for channel\0A\00", align 1
@.str.152 = private unnamed_addr constant [29 x i8] c"\017%s: protocol not known %x\0A\00", align 1
@.str.153 = private unnamed_addr constant [38 x i8] c"\013%s:internal error ch %d has no bch\0A\00", align 1
@__func__.open_bchannel = private unnamed_addr constant [14 x i8] c"open_bchannel\00", align 1
@.str.154 = private unnamed_addr constant [52 x i8] c"\017%s: MISDN_CTRL_HFC_WD_INIT mode %s, counter 0x%x\0A\00", align 1
@__func__.channel_dctrl = private unnamed_addr constant [14 x i8] c"channel_dctrl\00", align 1
@.str.155 = private unnamed_addr constant [5 x i8] c"AUTO\00", align 1
@.str.156 = private unnamed_addr constant [7 x i8] c"MANUAL\00", align 1
@.str.157 = private unnamed_addr constant [31 x i8] c"\017%s: MISDN_CTRL_HFC_WD_RESET\0A\00", align 1
@.str.158 = private unnamed_addr constant [21 x i8] c"\014%s: unknown Op %x\0A\00", align 1
@.str.159 = private unnamed_addr constant [33 x i8] c"\017%s: PH_ACTIVATE ch %d (0..32)\0A\00", align 1
@__func__.handle_bmsg = private unnamed_addr constant [12 x i8] c"handle_bmsg\00", align 1
@.str.160 = private unnamed_addr constant [26 x i8] c"\017%s: start dtmf decoder\0A\00", align 1
@.str.161 = private unnamed_addr constant [34 x i8] c"\017%s: HFC_SPL_LOOP_ON (len = %d)\0A\00", align 1
@.str.162 = private unnamed_addr constant [24 x i8] c"\017%s: HFC_SPL_LOOP_OFF\0A\00", align 1
@.str.163 = private unnamed_addr constant [38 x i8] c"\013%s: unknown PH_CONTROL_REQ info %x\0A\00", align 1
@__func__.hfcm_bctrl = private unnamed_addr constant [11 x i8] c"hfcm_bctrl\00", align 1
@.str.164 = private unnamed_addr constant [24 x i8] c"\014%s: unknown prim(%x)\0A\00", align 1
@.str.165 = private unnamed_addr constant [37 x i8] c"\017%s: RX_OFF request (nr=%d off=%d)\0A\00", align 1
@__func__.channel_bctrl = private unnamed_addr constant [14 x i8] c"channel_bctrl\00", align 1
@.str.166 = private unnamed_addr constant [26 x i8] c"\017%s: HW_FEATURE request\0A\00", align 1
@.str.167 = private unnamed_addr constant [62 x i8] c"\017%s: HFC_PCM_CONN slot %d bank %d (TX) slot %d bank %d (RX)\0A\00", align 1
@.str.168 = private unnamed_addr constant [75 x i8] c"\014%s: HFC_PCM_CONN slot %d bank %d (TX) slot %d bank %d (RX) out of range\0A\00", align 1
@.str.169 = private unnamed_addr constant [20 x i8] c"\017%s: HFC_PCM_DISC\0A\00", align 1
@.str.170 = private unnamed_addr constant [29 x i8] c"\017%s: HFC_CONF_JOIN conf %d\0A\00", align 1
@.str.171 = private unnamed_addr constant [41 x i8] c"\014%s: HW_CONF_JOIN conf %d out of range\0A\00", align 1
@.str.172 = private unnamed_addr constant [22 x i8] c"\017%s: HFC_CONF_SPLIT\0A\00", align 1
@.str.173 = private unnamed_addr constant [22 x i8] c"\017%s: HFC_ECHOCAN_ON\0A\00", align 1
@.str.174 = private unnamed_addr constant [23 x i8] c"\017%s: HFC_ECHOCAN_OFF\0A\00", align 1
@.str.175 = private unnamed_addr constant [50 x i8] c"\015vpm_echocan_on called taps [%d] on timeslot %d\0A\00", align 1
@.str.176 = private unnamed_addr constant [41 x i8] c"\015vpm_echocan_off called on timeslot %d\0A\00", align 1
@.str.177 = private unnamed_addr constant [37 x i8] c"\016This board has no optical support\0A\00", align 1
@.str.178 = private unnamed_addr constant [53 x i8] c"\017%s: PORT set optical interfacs: card(%d) port(%d)\0A\00", align 1
@__func__.init_e1_port_hw = private unnamed_addr constant [16 x i8] c"init_e1_port_hw\00", align 1
@.str.179 = private unnamed_addr constant [46 x i8] c"\017%s: PORT set LOS report: card(%d) port(%d)\0A\00", align 1
@.str.180 = private unnamed_addr constant [46 x i8] c"\017%s: PORT set AIS report: card(%d) port(%d)\0A\00", align 1
@.str.181 = private unnamed_addr constant [47 x i8] c"\017%s: PORT set SLIP report: card(%d) port(%d)\0A\00", align 1
@.str.182 = private unnamed_addr constant [46 x i8] c"\017%s: PORT set RDI report: card(%d) port(%d)\0A\00", align 1
@.str.183 = private unnamed_addr constant [51 x i8] c"\017%s: PORT turn on CRC4 report: card(%d) port(%d)\0A\00", align 1
@.str.184 = private unnamed_addr constant [52 x i8] c"\017%s: PORT turn off CRC4 report: card(%d) port(%d)\0A\00", align 1
@.str.185 = private unnamed_addr constant [59 x i8] c"\017%s: PORT force getting clock from E1: card(%d) port(%d)\0A\00", align 1
@.str.186 = private unnamed_addr constant [57 x i8] c"\017%s: PORT force putting clock to E1: card(%d) port(%d)\0A\00", align 1
@.str.187 = private unnamed_addr constant [54 x i8] c"\017%s: PORT disable JATT PLL on E1: card(%d) port(%d)\0A\00", align 1
@.str.188 = private unnamed_addr constant [56 x i8] c"\017%s: PORT set elastic buffer to %d: card(%d) port(%d)\0A\00", align 1
@__func__.init_multi_port = private unnamed_addr constant [16 x i8] c"init_multi_port\00", align 1
@.str.189 = private unnamed_addr constant [52 x i8] c"\017%s: PROTOCOL set master clock: card(%d) port(%d)\0A\00", align 1
@.str.190 = private unnamed_addr constant [78 x i8] c"\013Error: Master clock for port(%d) of card(%d) is only possible with TE-mode\0A\00", align 1
@.str.191 = private unnamed_addr constant [77 x i8] c"\013Error: Master clock for port(%d) of card(%d) already defined for port(%d)\0A\00", align 1
@.str.192 = private unnamed_addr constant [66 x i8] c"\017%s: PROTOCOL set non capacitive transmitter: card(%d) port(%d)\0A\00", align 1
@.str.193 = private unnamed_addr constant [53 x i8] c"\017%s: PROTOCOL disable E-channel: card(%d) port(%d)\0A\00", align 1
@.str.194 = private unnamed_addr constant [11 x i8] c"xhfc.%d-%d\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"hfc-%ds.%d-%d\00", align 1
@__func__.init_card = private unnamed_addr constant [10 x i8] c"init_card\00", align 1
@.str.196 = private unnamed_addr constant [10 x i8] c"HFC-multi\00", align 1
@.str.197 = private unnamed_addr constant [38 x i8] c"\014mISDN: Could not get interrupt %d.\0A\00", align 1
@.str.198 = private unnamed_addr constant [23 x i8] c"\017%s: IRQ %d count %d\0A\00", align 1
@.str.199 = private unnamed_addr constant [31 x i8] c"\016ignoring missing interrupts\0A\00", align 1
@.str.200 = private unnamed_addr constant [55 x i8] c"\013HFC PCI: IRQ(%d) getting no interrupts during init.\0A\00", align 1
@.str.201 = private unnamed_addr constant [19 x i8] c"\017%s: free irq %d\0A\00", align 1
@.str.202 = private unnamed_addr constant [21 x i8] c"\017%s: done (err=%d)\0A\00", align 1
@.str.203 = private unnamed_addr constant [34 x i8] c"\013HFC-multi: Spurious interrupt!\0A\00", align 1
@.str.204 = private unnamed_addr constant [35 x i8] c"\017%s: reread STATE because %d!=%d\0A\00", align 1
@__func__.hfcmulti_interrupt = private unnamed_addr constant [19 x i8] c"hfcmulti_interrupt\00", align 1
@.str.205 = private unnamed_addr constant [30 x i8] c"\017%s: E1 (id=%d) newstate %x\0A\00", align 1
@hfcmulti_interrupt.irq_proc_cnt = internal global i32 0, align 4, !dbg !9991
@.str.206 = private unnamed_addr constant [47 x i8] c"\017%s: got V_IRQ_PROC - this should not happen\0A\00", align 1
@__func__.ph_state_irq = private unnamed_addr constant [13 x i8] c"ph_state_irq\00", align 1
@.str.207 = private unnamed_addr constant [31 x i8] c"\017%s: S/T newstate %x port %d\0A\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.208 = private unnamed_addr constant [17 x i8] c"\017Enable SYNC_I\0A\00", align 1
@.str.209 = private unnamed_addr constant [19 x i8] c"\017Enable jatt PLL\0A\00", align 1
@.str.210 = private unnamed_addr constant [28 x i8] c"\017Enable QUARTZ for HFC-E1\0A\00", align 1
@.str.211 = private unnamed_addr constant [28 x i8] c"\017%s: nt_timer at state %x\0A\00", align 1
@__func__.handle_timer_irq = private unnamed_addr constant [17 x i8] c"handle_timer_irq\00", align 1
@.str.212 = private unnamed_addr constant [13 x i8] c"LOS detected\00", align 1
@.str.213 = private unnamed_addr constant [9 x i8] c"LOS gone\00", align 1
@.str.214 = private unnamed_addr constant [13 x i8] c"AIS detected\00", align 1
@.str.215 = private unnamed_addr constant [9 x i8] c"AIS gone\00", align 1
@.str.216 = private unnamed_addr constant [22 x i8] c" bit SLIP detected RX\00", align 1
@.str.217 = private unnamed_addr constant [22 x i8] c" bit SLIP detected TX\00", align 1
@.str.218 = private unnamed_addr constant [13 x i8] c"RDI detected\00", align 1
@.str.219 = private unnamed_addr constant [9 x i8] c"RDI gone\00", align 1
@.str.220 = private unnamed_addr constant [36 x i8] c"\017%s: (id=%d) E1 now in clock sync\0A\00", align 1
@.str.221 = private unnamed_addr constant [34 x i8] c"\017%s: (id=%d) E1 lost clock sync\0A\00", align 1
@.str.222 = private unnamed_addr constant [36 x i8] c"\017%s: (id=%d) E1 now in frame sync\0A\00", align 1
@.str.223 = private unnamed_addr constant [42 x i8] c"\017%s: (id=%d) E1 lost clock & frame sync\0A\00", align 1
@.str.224 = private unnamed_addr constant [34 x i8] c"\017%s: (id=%d) E1 lost frame sync\0A\00", align 1
@.str.225 = private unnamed_addr constant [41 x i8] c"\017%s(card %d): reread f1 because %d!=%d\0A\00", align 1
@__func__.hfcmulti_rx = private unnamed_addr constant [12 x i8] c"hfcmulti_rx\00", align 1
@.str.226 = private unnamed_addr constant [43 x i8] c"\014card%d.B%d: No bufferspace for %d bytes\0A\00", align 1
@.str.227 = private unnamed_addr constant [33 x i8] c"\014card%d: No mem for dch rx_skb\0A\00", align 1
@.str.228 = private unnamed_addr constant [102 x i8] c"\017%s(card %d): fifo(%d) reading %d bytes (z1=%04x, z2=%04x) HDLC %s (f1=%d, f2=%d) got=%d (again %d)\0A\00", align 1
@.str.229 = private unnamed_addr constant [9 x i8] c"fragment\00", align 1
@.str.230 = private unnamed_addr constant [9 x i8] c"COMPLETE\00", align 1
@.str.231 = private unnamed_addr constant [38 x i8] c"\017%s(card %d): hdlc-frame too large.\0A\00", align 1
@.str.232 = private unnamed_addr constant [41 x i8] c"\017%s(card %d): Frame below minimum size\0A\00", align 1
@.str.233 = private unnamed_addr constant [17 x i8] c"\017%s: CRC-error\0A\00", align 1
@.str.234 = private unnamed_addr constant [14 x i8] c"\017%s: No mem\0A\00", align 1
@.str.235 = private unnamed_addr constant [15 x i8] c"\017%s(card %d):\00", align 1
@.str.236 = private unnamed_addr constant [6 x i8] c" %02x\00", align 1
@.str.237 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.238 = private unnamed_addr constant [67 x i8] c"\017%s(card %d): fifo(%d) reading %d bytes (z1=%04x, z2=%04x) TRANS\0A\00", align 1
@.str.239 = private unnamed_addr constant [10 x i8] c"\017%s: %s\0A\00", align 1
@__func__.signal_state_up = private unnamed_addr constant [16 x i8] c"signal_state_up\00", align 1
@.str.240 = private unnamed_addr constant [26 x i8] c"\017%s: dtmf detection irq\0A\00", align 1
@__func__.hfcmulti_dtmf = private unnamed_addr constant [14 x i8] c"hfcmulti_dtmf\00", align 1
@.str.241 = private unnamed_addr constant [23 x i8] c"\017%s: dtmf channel %d:\00", align 1
@.str.242 = private unnamed_addr constant [6 x i8] c" %04x\00", align 1
@.str.243 = private unnamed_addr constant [53 x i8] c" DTMF ready %08x %08x %08x %08x %08x %08x %08x %08x\0A\00", align 1
@.str.244 = private unnamed_addr constant [25 x i8] c"\017%s: No memory for skb\0A\00", align 1
@__func__.init_chip = private unnamed_addr constant [10 x i8] c"init_chip\00", align 1
@.str.245 = private unnamed_addr constant [33 x i8] c"\016HFC_multi: unknown CHIP_ID:%x\0A\00", align 1
@.str.246 = private unnamed_addr constant [61 x i8] c"\016HFC_multi: detected HFC with chip ID=0x%lx revision=%ld%s\0A\00", align 1
@.str.247 = private unnamed_addr constant [21 x i8] c" (old FIFO handling)\00", align 1
@.str.248 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.249 = private unnamed_addr constant [191 x i8] c"\014HFC_multi: NOTE: Your chip is revision 0, ask Cologne Chip for update. Newer chips have a better FIFO handling. Old chips still work but may have slightly lower HDLC transmit performance.\0A\00", align 1
@.str.250 = private unnamed_addr constant [105 x i8] c"\014HFC_multi: WARNING: This driver doesn't consider chip revision = %ld. The chip / bridge may not work.\0A\00", align 1
@.str.251 = private unnamed_addr constant [37 x i8] c"\017%s: changing to 128K external RAM\0A\00", align 1
@.str.252 = private unnamed_addr constant [37 x i8] c"\017%s: changing to 512K external RAM\0A\00", align 1
@.str.253 = private unnamed_addr constant [34 x i8] c"\017%s: initializing PLXSD card %d\0A\00", align 1
@.str.254 = private unnamed_addr constant [31 x i8] c"\017%s: slave/term: PLX_GPIO=%x\0A\00", align 1
@.str.255 = private unnamed_addr constant [53 x i8] c"\017%s: card %d is between, so we disable termination\0A\00", align 1
@.str.256 = private unnamed_addr constant [29 x i8] c"\017%s: term off: PLX_GPIO=%x\0A\00", align 1
@.str.257 = private unnamed_addr constant [35 x i8] c"\017%s: setting PCM into slave mode\0A\00", align 1
@plxsd_master = internal global i32 0, align 4, !dbg !9997
@.str.258 = private unnamed_addr constant [36 x i8] c"\017%s: setting PCM into master mode\0A\00", align 1
@.str.259 = private unnamed_addr constant [34 x i8] c"\017%s: performing PCM auto detect\0A\00", align 1
@.str.260 = private unnamed_addr constant [27 x i8] c"\017%s: master: PLX_GPIO=%x\0A\00", align 1
@.str.261 = private unnamed_addr constant [26 x i8] c"\017%s: slave: PLX_GPIO=%x\0A\00", align 1
@.str.262 = private unnamed_addr constant [28 x i8] c"\017%s: setting double clock\0A\00", align 1
@.str.263 = private unnamed_addr constant [17 x i8] c"\015Setting GPIOs\0A\00", align 1
@.str.264 = private unnamed_addr constant [20 x i8] c"\015calling vpm_init\0A\00", align 1
@.str.265 = private unnamed_addr constant [36 x i8] c"\017HFC_multi F0_CNT %ld after reset\0A\00", align 1
@.str.266 = private unnamed_addr constant [46 x i8] c"\017HFC_multi F0_CNT %ld after 10 ms (1st try)\0A\00", align 1
@.str.267 = private unnamed_addr constant [32 x i8] c"\016controller is PCM bus MASTER\0A\00", align 1
@.str.268 = private unnamed_addr constant [31 x i8] c"\016controller is PCM bus SLAVE\0A\00", align 1
@.str.269 = private unnamed_addr constant [47 x i8] c"\016controller is PCM bus SLAVE (auto detected)\0A\00", align 1
@.str.270 = private unnamed_addr constant [73 x i8] c"\013HFC_multi ERROR, getting no 125us pulse. Seems that controller fails.\0A\00", align 1
@.str.271 = private unnamed_addr constant [60 x i8] c"\016controller is PCM bus SLAVE (ignoring missing PCM clock)\0A\00", align 1
@.str.272 = private unnamed_addr constant [103 x i8] c"\013HFC_multi ERROR, no clock on another Speech Design card found. Please be sure to connect PCM cable.\0A\00", align 1
@.str.273 = private unnamed_addr constant [46 x i8] c"\017HFC_multi F0_CNT %ld after 10 ms (2nd try)\0A\00", align 1
@.str.274 = private unnamed_addr constant [48 x i8] c"\016controller is PCM bus MASTER (auto detected)\0A\00", align 1
@.str.275 = private unnamed_addr constant [30 x i8] c"\017%s: reset off: PLX_GPIO=%x\0A\00", align 1
@.str.276 = private unnamed_addr constant [38 x i8] c"\016controller has given PCM BUS ID %d\0A\00", align 1
@PCM_cnt = internal global i32 99, align 4, !dbg !9999
@.str.277 = private unnamed_addr constant [48 x i8] c"\016controller has PCM BUS ID %d (auto selected)\0A\00", align 1
@.str.278 = private unnamed_addr constant [49 x i8] c"\017%s: enabling DTMF detection for all B-channel\0A\00", align 1
@.str.279 = private unnamed_addr constant [50 x i8] c"\017%s: setting ST master clock to port %d (0..%d)\0A\00", align 1
@.str.280 = private unnamed_addr constant [25 x i8] c"\017r_irqmsk_misc.2: 0x%x\0A\00", align 1
@.str.281 = private unnamed_addr constant [28 x i8] c"\017addr:%x val:%x should:%x\0A\00", align 1
@.str.282 = private unnamed_addr constant [35 x i8] c"\017aborting - %d RAM access errors\0A\00", align 1
@.str.283 = private unnamed_addr constant [26 x i8] c"\017VPM: Chip %d: ver %02x\0A\00", align 1
@.str.284 = private unnamed_addr constant [19 x i8] c"\017VPM: A-law mode\0A\00", align 1
@.str.285 = private unnamed_addr constant [22 x i8] c"\017VPM reg 0x20 is %x\0A\00", align 1
@.str.286 = private unnamed_addr constant [34 x i8] c"\017NLP Thresh is set to %d (0x%x)\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.287 = private unnamed_addr constant [73 x i8] c"\016removing hfc_multi card vendor:%x device:%x subvendor:%x subdevice:%x\0A\00", align 1
@.str.288 = private unnamed_addr constant [31 x i8] c"\017%s: drvdata already removed\0A\00", align 1
@__func__.hfc_remove_pci = private unnamed_addr constant [15 x i8] c"hfc_remove_pci\00", align 1
@.str.289 = private unnamed_addr constant [30 x i8] c"\016mISDN: HFC-multi driver %s\0A\00", align 1
@.str.290 = private unnamed_addr constant [20 x i8] c"\017%s: init entered\0A\00", align 1
@__func__.HFCmulti_init = private unnamed_addr constant [14 x i8] c"HFCmulti_init\00", align 1
@.str.291 = private unnamed_addr constant [30 x i8] c"\013%s: Wrong poll value (%d).\0A\00", align 1
@.str.292 = private unnamed_addr constant [41 x i8] c"\013error registering embedded driver: %x\0A\00", align 1
@.str.293 = private unnamed_addr constant [36 x i8] c"\013error registering pci driver: %x\0A\00", align 1
@llvm.used = appending global [34 x i8*] [i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_author508, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_file509, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license510, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_version511, i32 0, i32 0), i8* bitcast (%struct.module_version_attribute** @__modver_attr to i8*), i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_debugtype512, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_poll to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_polltype513, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_clock to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_clocktype514, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_timer to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_timertype515, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_clockdelay_te to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_clockdelay_tetype516, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_clockdelay_nt to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_clockdelay_nttype517, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_type to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_typetype518, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_pcm to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_pcmtype519, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_dmask to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_dmasktype520, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_bmask to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_bmasktype521, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_iomode to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_iomodetype522, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_port to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_porttype523, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_hwid to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_hwidtype524, i32 0, i32 0), i8* bitcast (void ()* @HFCmulti_cleanup to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_HFCmulti_init546 to i8*), i8* bitcast (void ()** @__exitcall_HFCmulti_cleanup to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @HFCmulti_cleanup() #0 section ".exit.text" !dbg !10012 {
entry:
  %card = alloca %struct.hfc_multi*, align 8
  %next = alloca %struct.hfc_multi*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hfc_multi*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.hfc_multi*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp13 = alloca %struct.hfc_multi*, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %card, metadata !10013, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %next, metadata !10015, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10017, metadata !DIExpression()), !dbg !10020
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @HFClist, i32 0, i32 0), align 8, !dbg !10020
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !10020
  store i8* %1, i8** %__mptr, align 8, !dbg !10020
  br label %do.body, !dbg !10020

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10021

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10020
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10020
  %3 = bitcast i8* %add.ptr to %struct.hfc_multi*, !dbg !10020
  store %struct.hfc_multi* %3, %struct.hfc_multi** %tmp, align 8, !dbg !10021
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp, align 8, !dbg !10020
  store %struct.hfc_multi* %4, %struct.hfc_multi** %card, align 8, !dbg !10023
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !10024, metadata !DIExpression()), !dbg !10026
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %card, align 8, !dbg !10026
  %list = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 0, !dbg !10026
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !10026
  %6 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !10026
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !10026
  store i8* %7, i8** %__mptr1, align 8, !dbg !10026
  br label %do.body3, !dbg !10026

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !10027

do.end4:                                          ; preds = %do.body3
  %8 = load i8*, i8** %__mptr1, align 8, !dbg !10026
  %add.ptr6 = getelementptr i8, i8* %8, i64 0, !dbg !10026
  %9 = bitcast i8* %add.ptr6 to %struct.hfc_multi*, !dbg !10026
  store %struct.hfc_multi* %9, %struct.hfc_multi** %tmp5, align 8, !dbg !10027
  %10 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp5, align 8, !dbg !10026
  store %struct.hfc_multi* %10, %struct.hfc_multi** %next, align 8, !dbg !10023
  br label %for.cond, !dbg !10023

for.cond:                                         ; preds = %do.end12, %do.end4
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %card, align 8, !dbg !10029
  %list7 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %11, i32 0, i32 0, !dbg !10029
  %cmp = icmp eq %struct.list_head* %list7, @HFClist, !dbg !10029
  %lnot = xor i1 %cmp, true, !dbg !10029
  br i1 %lnot, label %for.body, label %for.end, !dbg !10023

for.body:                                         ; preds = %for.cond
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %card, align 8, !dbg !10031
  call void @release_card(%struct.hfc_multi* %12) #12, !dbg !10032
  br label %for.inc, !dbg !10032

for.inc:                                          ; preds = %for.body
  %13 = load %struct.hfc_multi*, %struct.hfc_multi** %next, align 8, !dbg !10029
  store %struct.hfc_multi* %13, %struct.hfc_multi** %card, align 8, !dbg !10029
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !10033, metadata !DIExpression()), !dbg !10035
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %next, align 8, !dbg !10035
  %list9 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %14, i32 0, i32 0, !dbg !10035
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %list9, i32 0, i32 0, !dbg !10035
  %15 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !10035
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !10035
  store i8* %16, i8** %__mptr8, align 8, !dbg !10035
  br label %do.body11, !dbg !10035

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !10036

do.end12:                                         ; preds = %do.body11
  %17 = load i8*, i8** %__mptr8, align 8, !dbg !10035
  %add.ptr14 = getelementptr i8, i8* %17, i64 0, !dbg !10035
  %18 = bitcast i8* %add.ptr14 to %struct.hfc_multi*, !dbg !10035
  store %struct.hfc_multi* %18, %struct.hfc_multi** %tmp13, align 8, !dbg !10036
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp13, align 8, !dbg !10035
  store %struct.hfc_multi* %19, %struct.hfc_multi** %next, align 8, !dbg !10029
  br label %for.cond, !dbg !10029, !llvm.loop !10038

for.end:                                          ; preds = %for.cond
  call void @pci_unregister_driver(%struct.pci_driver* @hfcmultipci_driver) #12, !dbg !10040
  ret void, !dbg !10041
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @release_card(%struct.hfc_multi* %hc) #2 !dbg !10042 {
entry:
  %lock.addr.i73 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i73, metadata !10043, metadata !DIExpression()), !dbg !10048
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !10051
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !10057
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %flags = alloca i64, align 8
  %ch = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !10064, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10066, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !10068, metadata !DIExpression()), !dbg !10069
  %0 = load i32, i32* @debug, align 4, !dbg !10070
  %and = and i32 %0, 262144, !dbg !10072
  %tobool = icmp ne i32 %and, 0, !dbg !10072
  br i1 %tobool, label %if.then, label %if.end, !dbg !10073

if.then:                                          ; preds = %entry
  %1 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10074
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %1, i32 0, i32 2, !dbg !10075
  %2 = load i32, i32* %id, align 8, !dbg !10075
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_card, i64 0, i64 0), i32 %2) #13, !dbg !10076
  br label %if.end, !dbg !10076

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10077
  %iclock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 58, !dbg !10079
  %4 = load %struct.mISDNclock*, %struct.mISDNclock** %iclock, align 8, !dbg !10079
  %tobool1 = icmp ne %struct.mISDNclock* %4, null, !dbg !10077
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !10080

if.then2:                                         ; preds = %if.end
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10081
  %iclock3 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 58, !dbg !10082
  %6 = load %struct.mISDNclock*, %struct.mISDNclock** %iclock3, align 8, !dbg !10082
  call void @mISDN_unregister_clock(%struct.mISDNclock* %6) #12, !dbg !10083
  br label %if.end4, !dbg !10083

if.end4:                                          ; preds = %if.then2, %if.end
  br label %do.body, !dbg !10084

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !10085

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10086, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10089, metadata !DIExpression()), !dbg !10088
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10088
  %conv = zext i1 %cmp to i32, !dbg !10088
  store i32 1, i32* %tmp, align 4, !dbg !10088
  %7 = load i32, i32* %tmp, align 4, !dbg !10088
  br label %do.body6, !dbg !10090

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !10091

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !10092

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !10094, metadata !DIExpression()), !dbg !10097
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !10098, metadata !DIExpression()), !dbg !10097
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !10097
  %conv12 = zext i1 %cmp11 to i32, !dbg !10097
  store i32 1, i32* %tmp13, align 4, !dbg !10097
  %8 = load i32, i32* %tmp13, align 4, !dbg !10097
  %call14 = call i64 @arch_local_irq_save() #12, !dbg !10099
  store i64 %call14, i64* %flags, align 8, !dbg !10099
  br label %do.end, !dbg !10099

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !10092

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !10091

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10100, !srcloc !10101
  br label %do.body17, !dbg !10100

do.body17:                                        ; preds = %do.body16
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10102
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %9, i32 0, i32 57, !dbg !10102
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10103
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !10104
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !10104
  br label %do.end19, !dbg !10102

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !10100

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10091

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10090

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !10085

do.end23:                                         ; preds = %do.end22
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10105
  call void @disable_hwirq(%struct.hfc_multi* %12) #12, !dbg !10106
  %13 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10107
  %lock24 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %13, i32 0, i32 57, !dbg !10108
  %14 = load i64, i64* %flags, align 8, !dbg !10109
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i73, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !10113
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !10113
  store i32 1, i32* %tmp.i, align 4, !dbg !10113
  %15 = load i32, i32* %tmp.i, align 4, !dbg !10113
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !10120
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !10120
  store i32 1, i32* %tmp8.i, align 4, !dbg !10120
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !10120
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !10122
  call void @arch_local_irq_restore(i64 %17) #14, !dbg !10122
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10123, !srcloc !10125
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i73, align 8, !dbg !10126
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !10126
  %rlock.i74 = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !10126
  call void @__const_udelay(i64 4295000) #12, !dbg !10128
  %20 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10133
  %irq = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %20, i32 0, i32 6, !dbg !10135
  %21 = load i32, i32* %irq, align 8, !dbg !10135
  %tobool25 = icmp ne i32 %21, 0, !dbg !10133
  br i1 %tobool25, label %if.then26, label %if.end36, !dbg !10136

if.then26:                                        ; preds = %do.end23
  %22 = load i32, i32* @debug, align 4, !dbg !10137
  %and27 = and i32 %22, 262144, !dbg !10140
  %tobool28 = icmp ne i32 %and27, 0, !dbg !10140
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !10141

if.then29:                                        ; preds = %if.then26
  %23 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10142
  %irq30 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %23, i32 0, i32 6, !dbg !10143
  %24 = load i32, i32* %irq30, align 8, !dbg !10143
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10144
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_card, i64 0, i64 0), i32 %24, %struct.hfc_multi* %25) #13, !dbg !10145
  br label %if.end32, !dbg !10145

if.end32:                                         ; preds = %if.then29, %if.then26
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10146
  %irq33 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %26, i32 0, i32 6, !dbg !10147
  %27 = load i32, i32* %irq33, align 8, !dbg !10147
  %28 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10148
  %29 = bitcast %struct.hfc_multi* %28 to i8*, !dbg !10148
  %call34 = call i8* @free_irq(i32 %27, i8* %29) #12, !dbg !10149
  %30 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10150
  %irq35 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %30, i32 0, i32 6, !dbg !10151
  store i32 0, i32* %irq35, align 8, !dbg !10152
  br label %if.end36, !dbg !10153

if.end36:                                         ; preds = %if.end32, %do.end23
  %31 = load i32, i32* @debug, align 4, !dbg !10154
  %and37 = and i32 %31, 262144, !dbg !10156
  %tobool38 = icmp ne i32 %and37, 0, !dbg !10156
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !10157

if.then39:                                        ; preds = %if.end36
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_card, i64 0, i64 0)) #13, !dbg !10158
  br label %if.end41, !dbg !10158

if.end41:                                         ; preds = %if.then39, %if.end36
  store i32 0, i32* %ch, align 4, !dbg !10159
  br label %for.cond, !dbg !10161

for.cond:                                         ; preds = %for.inc, %if.end41
  %32 = load i32, i32* %ch, align 4, !dbg !10162
  %cmp42 = icmp sle i32 %32, 31, !dbg !10164
  br i1 %cmp42, label %for.body, label %for.end, !dbg !10165

for.body:                                         ; preds = %for.cond
  %33 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10166
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %33, i32 0, i32 60, !dbg !10169
  %34 = load i32, i32* %ch, align 4, !dbg !10170
  %idxprom = sext i32 %34 to i64, !dbg !10166
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !10166
  %dch = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 0, !dbg !10171
  %35 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !10171
  %tobool44 = icmp ne %struct.dchannel* %35, null, !dbg !10166
  br i1 %tobool44, label %if.then45, label %if.end50, !dbg !10172

if.then45:                                        ; preds = %for.body
  %36 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10173
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10174
  %chan46 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %37, i32 0, i32 60, !dbg !10175
  %38 = load i32, i32* %ch, align 4, !dbg !10176
  %idxprom47 = sext i32 %38 to i64, !dbg !10174
  %arrayidx48 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan46, i64 0, i64 %idxprom47, !dbg !10174
  %dch49 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx48, i32 0, i32 0, !dbg !10177
  %39 = load %struct.dchannel*, %struct.dchannel** %dch49, align 8, !dbg !10177
  call void @release_port(%struct.hfc_multi* %36, %struct.dchannel* %39) #12, !dbg !10178
  br label %if.end50, !dbg !10178

if.end50:                                         ; preds = %if.then45, %for.body
  br label %for.inc, !dbg !10179

for.inc:                                          ; preds = %if.end50
  %40 = load i32, i32* %ch, align 4, !dbg !10180
  %inc = add i32 %40, 1, !dbg !10180
  store i32 %inc, i32* %ch, align 4, !dbg !10180
  br label %for.cond, !dbg !10181, !llvm.loop !10182

for.end:                                          ; preds = %for.cond
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10184
  %leds = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %41, i32 0, i32 42, !dbg !10186
  %42 = load i32, i32* %leds, align 4, !dbg !10186
  %tobool51 = icmp ne i32 %42, 0, !dbg !10184
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !10187

if.then52:                                        ; preds = %for.end
  %43 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10188
  call void @hfcmulti_leds(%struct.hfc_multi* %43) #12, !dbg !10189
  br label %if.end53, !dbg !10189

if.end53:                                         ; preds = %if.then52, %for.end
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10190
  call void @release_io_hfcmulti(%struct.hfc_multi* %44) #12, !dbg !10191
  %45 = load i32, i32* @debug, align 4, !dbg !10192
  %and54 = and i32 %45, 262144, !dbg !10194
  %tobool55 = icmp ne i32 %and54, 0, !dbg !10194
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !10195

if.then56:                                        ; preds = %if.end53
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_card, i64 0, i64 0)) #13, !dbg !10196
  br label %if.end58, !dbg !10196

if.end58:                                         ; preds = %if.then56, %if.end53
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10197
  %list = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 0, !dbg !10198
  call void @list_del(%struct.list_head* %list) #12, !dbg !10199
  %47 = load i32, i32* @debug, align 4, !dbg !10200
  %and59 = and i32 %47, 262144, !dbg !10202
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10202
  br i1 %tobool60, label %if.then61, label %if.end63, !dbg !10203

if.then61:                                        ; preds = %if.end58
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_card, i64 0, i64 0)) #13, !dbg !10204
  br label %if.end63, !dbg !10204

if.end63:                                         ; preds = %if.then61, %if.end58
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10205
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** @syncmaster, align 8, !dbg !10207
  %cmp64 = icmp eq %struct.hfc_multi* %48, %49, !dbg !10208
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !10209

if.then66:                                        ; preds = %if.end63
  store %struct.hfc_multi* null, %struct.hfc_multi** @syncmaster, align 8, !dbg !10210
  br label %if.end67, !dbg !10211

if.end67:                                         ; preds = %if.then66, %if.end63
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10212
  %51 = bitcast %struct.hfc_multi* %50 to i8*, !dbg !10212
  call void @kfree(i8* %51) #12, !dbg !10213
  %52 = load i32, i32* @debug, align 4, !dbg !10214
  %and68 = and i32 %52, 262144, !dbg !10216
  %tobool69 = icmp ne i32 %and68, 0, !dbg !10216
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !10217

if.then70:                                        ; preds = %if.end67
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_card, i64 0, i64 0)) #13, !dbg !10218
  br label %if.end72, !dbg !10218

if.end72:                                         ; preds = %if.then70, %if.end67
  ret void, !dbg !10219
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @HFCmulti_init() #0 section ".init.text" !dbg !10220 {
entry:
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !10052, metadata !DIExpression()), !dbg !10223
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !10226
  %retval = alloca i32, align 4
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %xhfc = alloca i32, align 4
  %m = alloca %struct.hm_map, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral4 = alloca %struct.spinlock, align 1
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10229, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10231, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.declare(metadata i32* %xhfc, metadata !10233, metadata !DIExpression()), !dbg !10234
  store i32 0, i32* %xhfc, align 4, !dbg !10234
  call void @llvm.dbg.declare(metadata %struct.hm_map* %m, metadata !10235, metadata !DIExpression()), !dbg !10236
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.289, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !10237
  br label %do.body, !dbg !10238

do.body:                                          ; preds = %entry
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i, align 8
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10239
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !10240
  %rlock.i = bitcast %union.anon.1* %1 to %struct.raw_spinlock*, !dbg !10240
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !10241
  %rlock = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !10241
  %3 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !10241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 bitcast (%struct.spinlock* @HFClock to i8*), i8* align 1 %3, i64 0, i1 false), !dbg !10241
  br label %do.end, !dbg !10241

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !10242

do.body2:                                         ; preds = %do.end
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i35, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !10243
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !10244
  %rlock.i36 = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !10244
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral4, i32 0, i32 0, !dbg !10245
  %rlock5 = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !10245
  %7 = bitcast %struct.spinlock* %.compoundliteral4 to i8*, !dbg !10245
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 bitcast (%struct.spinlock* @plx_lock to i8*), i8* align 1 %7, i64 0, i1 false), !dbg !10245
  br label %do.end6, !dbg !10245

do.end6:                                          ; preds = %do.body2
  %8 = load i32, i32* @debug, align 4, !dbg !10246
  %and = and i32 %8, 262144, !dbg !10248
  %tobool = icmp ne i32 %and, 0, !dbg !10248
  br i1 %tobool, label %if.then, label %if.end, !dbg !10249

if.then:                                          ; preds = %do.end6
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.290, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.HFCmulti_init, i64 0, i64 0)) #13, !dbg !10250
  br label %if.end, !dbg !10250

if.end:                                           ; preds = %if.then, %do.end6
  %9 = load i32, i32* @poll, align 4, !dbg !10251
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 8, label %sw.bb8
    i32 16, label %sw.bb9
    i32 32, label %sw.bb10
    i32 64, label %sw.bb11
    i32 128, label %sw.bb12
    i32 256, label %sw.bb13
  ], !dbg !10252

sw.bb:                                            ; preds = %if.end
  store i32 6, i32* @poll_timer, align 4, !dbg !10253
  store i32 128, i32* @poll, align 4, !dbg !10255
  br label %sw.epilog, !dbg !10256

sw.bb8:                                           ; preds = %if.end
  store i32 2, i32* @poll_timer, align 4, !dbg !10257
  br label %sw.epilog, !dbg !10258

sw.bb9:                                           ; preds = %if.end
  store i32 3, i32* @poll_timer, align 4, !dbg !10259
  br label %sw.epilog, !dbg !10260

sw.bb10:                                          ; preds = %if.end
  store i32 4, i32* @poll_timer, align 4, !dbg !10261
  br label %sw.epilog, !dbg !10262

sw.bb11:                                          ; preds = %if.end
  store i32 5, i32* @poll_timer, align 4, !dbg !10263
  br label %sw.epilog, !dbg !10264

sw.bb12:                                          ; preds = %if.end
  store i32 6, i32* @poll_timer, align 4, !dbg !10265
  br label %sw.epilog, !dbg !10266

sw.bb13:                                          ; preds = %if.end
  store i32 7, i32* @poll_timer, align 4, !dbg !10267
  br label %sw.epilog, !dbg !10268

sw.default:                                       ; preds = %if.end
  %10 = load i32, i32* @poll, align 4, !dbg !10269
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.291, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.HFCmulti_init, i64 0, i64 0), i32 %10) #13, !dbg !10270
  store i32 -22, i32* %err, align 4, !dbg !10271
  %11 = load i32, i32* %err, align 4, !dbg !10272
  store i32 %11, i32* %retval, align 4, !dbg !10273
  br label %return, !dbg !10273

sw.epilog:                                        ; preds = %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb
  %12 = load i32, i32* @clock, align 4, !dbg !10274
  %tobool15 = icmp ne i32 %12, 0, !dbg !10274
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !10276

if.then16:                                        ; preds = %sw.epilog
  store i32 1, i32* @clock, align 4, !dbg !10277
  br label %if.end17, !dbg !10278

if.end17:                                         ; preds = %if.then16, %sw.epilog
  %13 = load i32, i32* @hwid, align 4, !dbg !10279
  switch i32 %13, label %sw.default21 [
    i32 1, label %sw.bb18
    i32 2, label %sw.bb19
    i32 3, label %sw.bb20
  ], !dbg !10280

sw.bb18:                                          ; preds = %if.end17
  store i32 1, i32* %xhfc, align 4, !dbg !10281
  %14 = bitcast %struct.hm_map* %m to i8*, !dbg !10283
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 16 bitcast (%struct.hm_map* getelementptr inbounds ([35 x %struct.hm_map], [35 x %struct.hm_map]* @hfcm_map, i64 0, i64 31) to i8*), i64 48, i1 false), !dbg !10283
  br label %sw.epilog22, !dbg !10284

sw.bb19:                                          ; preds = %if.end17
  store i32 2, i32* %xhfc, align 4, !dbg !10285
  %15 = bitcast %struct.hm_map* %m to i8*, !dbg !10286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 16 bitcast (%struct.hm_map* getelementptr inbounds ([35 x %struct.hm_map], [35 x %struct.hm_map]* @hfcm_map, i64 0, i64 31) to i8*), i64 48, i1 false), !dbg !10286
  br label %sw.epilog22, !dbg !10287

sw.bb20:                                          ; preds = %if.end17
  store i32 4, i32* %xhfc, align 4, !dbg !10288
  %16 = bitcast %struct.hm_map* %m to i8*, !dbg !10289
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 16 bitcast (%struct.hm_map* getelementptr inbounds ([35 x %struct.hm_map], [35 x %struct.hm_map]* @hfcm_map, i64 0, i64 31) to i8*), i64 48, i1 false), !dbg !10289
  br label %sw.epilog22, !dbg !10290

sw.default21:                                     ; preds = %if.end17
  store i32 0, i32* %xhfc, align 4, !dbg !10291
  br label %sw.epilog22, !dbg !10292

sw.epilog22:                                      ; preds = %sw.default21, %sw.bb20, %sw.bb19, %sw.bb18
  store i32 0, i32* %i, align 4, !dbg !10293
  br label %for.cond, !dbg !10295

for.cond:                                         ; preds = %for.inc, %sw.epilog22
  %17 = load i32, i32* %i, align 4, !dbg !10296
  %18 = load i32, i32* %xhfc, align 4, !dbg !10298
  %cmp = icmp slt i32 %17, %18, !dbg !10299
  br i1 %cmp, label %for.body, label %for.end, !dbg !10300

for.body:                                         ; preds = %for.cond
  %call23 = call i32 @hfcmulti_init(%struct.hm_map* %m, %struct.pci_dev* null, %struct.pci_device_id* null) #12, !dbg !10301
  store i32 %call23, i32* %err, align 4, !dbg !10303
  %19 = load i32, i32* %err, align 4, !dbg !10304
  %tobool24 = icmp ne i32 %19, 0, !dbg !10304
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !10306

if.then25:                                        ; preds = %for.body
  %20 = load i32, i32* %err, align 4, !dbg !10307
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.292, i64 0, i64 0), i32 %20) #13, !dbg !10309
  %21 = load i32, i32* %err, align 4, !dbg !10310
  store i32 %21, i32* %retval, align 4, !dbg !10311
  br label %return, !dbg !10311

if.end27:                                         ; preds = %for.body
  %22 = load i32, i32* @HFC_cnt, align 4, !dbg !10312
  %inc = add i32 %22, 1, !dbg !10312
  store i32 %inc, i32* @HFC_cnt, align 4, !dbg !10312
  %23 = load i32, i32* @HFC_cnt, align 4, !dbg !10313
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i64 0, i64 0), i32 %23) #13, !dbg !10314
  br label %for.inc, !dbg !10315

for.inc:                                          ; preds = %if.end27
  %24 = load i32, i32* %i, align 4, !dbg !10316
  %inc29 = add i32 %24, 1, !dbg !10316
  store i32 %inc29, i32* %i, align 4, !dbg !10316
  br label %for.cond, !dbg !10317, !llvm.loop !10318

for.end:                                          ; preds = %for.cond
  %call30 = call i32 @__pci_register_driver(%struct.pci_driver* @hfcmultipci_driver, %struct.module* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !10320
  store i32 %call30, i32* %err, align 4, !dbg !10321
  %25 = load i32, i32* %err, align 4, !dbg !10322
  %cmp31 = icmp slt i32 %25, 0, !dbg !10324
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !10325

if.then32:                                        ; preds = %for.end
  %26 = load i32, i32* %err, align 4, !dbg !10326
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.293, i64 0, i64 0), i32 %26) #13, !dbg !10328
  %27 = load i32, i32* %err, align 4, !dbg !10329
  store i32 %27, i32* %retval, align 4, !dbg !10330
  br label %return, !dbg !10330

if.end34:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !10331
  br label %return, !dbg !10331

return:                                           ; preds = %if.end34, %if.then32, %if.then25, %sw.default
  %28 = load i32, i32* %retval, align 4, !dbg !10332
  ret i32 %28, !dbg !10332
}

; Function Attrs: noredzone
declare dso_local i64 @__modver_version_show(%struct.module_attribute*, %struct.module_kobject*, i8*) #3

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @mISDN_unregister_clock(%struct.mISDNclock*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !10333 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !10337, metadata !DIExpression()), !dbg !10338
  %call = call i64 @arch_local_save_flags() #12, !dbg !10339
  store i64 %call, i64* %f, align 8, !dbg !10340
  call void @arch_local_irq_disable() #12, !dbg !10341
  %0 = load i64, i64* %f, align 8, !dbg !10342
  ret i64 %0, !dbg !10343
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_hwirq(%struct.hfc_multi* %hc) #2 !dbg !10344 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !10345, metadata !DIExpression()), !dbg !10346
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10347
  %hw = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 30, !dbg !10348
  %r_irq_ctrl = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw, i32 0, i32 1, !dbg !10349
  %1 = load i8, i8* %r_irq_ctrl, align 1, !dbg !10350
  %conv = zext i8 %1 to i32, !dbg !10350
  %and = and i32 %conv, -9, !dbg !10350
  %conv1 = trunc i32 %and to i8, !dbg !10350
  store i8 %conv1, i8* %r_irq_ctrl, align 1, !dbg !10350
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10351
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %2, i32 0, i32 10, !dbg !10351
  %3 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !10351
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10351
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10351
  %hw2 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 30, !dbg !10351
  %r_irq_ctrl3 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw2, i32 0, i32 1, !dbg !10351
  %6 = load i8, i8* %r_irq_ctrl3, align 1, !dbg !10351
  call void %3(%struct.hfc_multi* %4, i8 zeroext 19, i8 zeroext %6) #12, !dbg !10351
  ret void, !dbg !10352
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #3

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @release_port(%struct.hfc_multi* %hc, %struct.dchannel* %dch) #2 !dbg !10353 {
entry:
  %lock.addr.i296 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i296, metadata !10052, metadata !DIExpression()), !dbg !10356
  %lock.addr.i291 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i291, metadata !10043, metadata !DIExpression()), !dbg !10367
  %flags.addr.i292 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i292, metadata !10050, metadata !DIExpression()), !dbg !10369
  %tmp.i293 = alloca i32, align 4
  %tmp8.i294 = alloca i32, align 4
  %lock.addr.i289 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i289, metadata !10052, metadata !DIExpression()), !dbg !10370
  %lock.addr.i284 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i284, metadata !10043, metadata !DIExpression()), !dbg !10379
  %flags.addr.i285 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i285, metadata !10050, metadata !DIExpression()), !dbg !10381
  %tmp.i286 = alloca i32, align 4
  %tmp8.i287 = alloca i32, align 4
  %lock.addr.i282 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i282, metadata !10052, metadata !DIExpression()), !dbg !10382
  %lock.addr.i277 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i277, metadata !10043, metadata !DIExpression()), !dbg !10395
  %flags.addr.i278 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i278, metadata !10050, metadata !DIExpression()), !dbg !10397
  %tmp.i279 = alloca i32, align 4
  %tmp8.i280 = alloca i32, align 4
  %lock.addr.i275 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i275, metadata !10043, metadata !DIExpression()), !dbg !10398
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !10400
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !10401
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %dch.addr = alloca %struct.dchannel*, align 8
  %pt = alloca i32, align 4
  %ci = alloca i32, align 4
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %pb = alloca %struct.bchannel*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy33 = alloca i64, align 8
  %__dummy234 = alloca i64, align 8
  %tmp37 = alloca i32, align 4
  %__dummy98 = alloca i64, align 8
  %__dummy299 = alloca i64, align 8
  %tmp102 = alloca i32, align 4
  %__dummy106 = alloca i64, align 8
  %__dummy2107 = alloca i64, align 8
  %tmp110 = alloca i32, align 4
  %__dummy171 = alloca i64, align 8
  %__dummy2172 = alloca i64, align 8
  %tmp175 = alloca i32, align 4
  %__dummy179 = alloca i64, align 8
  %__dummy2180 = alloca i64, align 8
  %tmp183 = alloca i32, align 4
  %__dummy235 = alloca i64, align 8
  %__dummy2236 = alloca i64, align 8
  %tmp239 = alloca i32, align 4
  %__dummy243 = alloca i64, align 8
  %__dummy2244 = alloca i64, align 8
  %tmp247 = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !10408, metadata !DIExpression()), !dbg !10409
  store %struct.dchannel* %dch, %struct.dchannel** %dch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch.addr, metadata !10410, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.declare(metadata i32* %pt, metadata !10412, metadata !DIExpression()), !dbg !10413
  call void @llvm.dbg.declare(metadata i32* %ci, metadata !10414, metadata !DIExpression()), !dbg !10415
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10416, metadata !DIExpression()), !dbg !10417
  store i32 0, i32* %i, align 4, !dbg !10417
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10418, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.declare(metadata %struct.bchannel** %pb, metadata !10420, metadata !DIExpression()), !dbg !10421
  %0 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !10422
  %slot = getelementptr inbounds %struct.dchannel, %struct.dchannel* %0, i32 0, i32 7, !dbg !10423
  %1 = load i32, i32* %slot, align 8, !dbg !10423
  store i32 %1, i32* %ci, align 4, !dbg !10424
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10425
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %2, i32 0, i32 60, !dbg !10426
  %3 = load i32, i32* %ci, align 4, !dbg !10427
  %idxprom = sext i32 %3 to i64, !dbg !10425
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !10425
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 2, !dbg !10428
  %4 = load i32, i32* %port, align 8, !dbg !10428
  store i32 %4, i32* %pt, align 4, !dbg !10429
  %5 = load i32, i32* @debug, align 4, !dbg !10430
  %and = and i32 %5, 262144, !dbg !10432
  %tobool = icmp ne i32 %and, 0, !dbg !10432
  br i1 %tobool, label %if.then, label %if.end, !dbg !10433

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %pt, align 4, !dbg !10434
  %add = add i32 %6, 1, !dbg !10435
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_port, i64 0, i64 0), i32 %add) #13, !dbg !10436
  br label %if.end, !dbg !10436

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %pt, align 4, !dbg !10437
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10439
  %ports = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 5, !dbg !10440
  %9 = load i32, i32* %ports, align 4, !dbg !10440
  %cmp = icmp sge i32 %7, %9, !dbg !10441
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !10442

if.then1:                                         ; preds = %if.end
  %10 = load i32, i32* %pt, align 4, !dbg !10443
  %add2 = add i32 %10, 1, !dbg !10445
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_port, i64 0, i64 0), i32 %add2) #13, !dbg !10446
  br label %if.end274, !dbg !10447

if.end4:                                          ; preds = %if.end
  %11 = load i32, i32* @debug, align 4, !dbg !10448
  %and5 = and i32 %11, 262144, !dbg !10450
  %tobool6 = icmp ne i32 %and5, 0, !dbg !10450
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !10451

if.then7:                                         ; preds = %if.end4
  %12 = load i32, i32* %pt, align 4, !dbg !10452
  %add8 = add i32 %12, 1, !dbg !10453
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_port, i64 0, i64 0), i32 %add8) #13, !dbg !10454
  br label %if.end10, !dbg !10454

if.end10:                                         ; preds = %if.then7, %if.end4
  %13 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !10455
  %dev = getelementptr inbounds %struct.dchannel, %struct.dchannel* %13, i32 0, i32 0, !dbg !10457
  %D = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev, i32 0, i32 0, !dbg !10458
  %protocol = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D, i32 0, i32 1, !dbg !10459
  %14 = load i32, i32* %protocol, align 8, !dbg !10459
  %cmp11 = icmp eq i32 %14, 1, !dbg !10460
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !10461

if.then12:                                        ; preds = %if.end10
  %15 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !10462
  %l1 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %15, i32 0, i32 5, !dbg !10463
  %16 = load i8*, i8** %l1, align 8, !dbg !10463
  %17 = bitcast i8* %16 to %struct.layer1*, !dbg !10462
  %call13 = call i32 @l1_event(%struct.layer1* %17, i32 512) #12, !dbg !10464
  br label %if.end14, !dbg !10464

if.end14:                                         ; preds = %if.then12, %if.end10
  %18 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10465
  %chan15 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %18, i32 0, i32 60, !dbg !10466
  %19 = load i32, i32* %ci, align 4, !dbg !10467
  %idxprom16 = sext i32 %19 to i64, !dbg !10465
  %arrayidx17 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan15, i64 0, i64 %idxprom16, !dbg !10465
  %dch18 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx17, i32 0, i32 0, !dbg !10468
  store %struct.dchannel* null, %struct.dchannel** %dch18, align 8, !dbg !10469
  %20 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10470
  %created = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %20, i32 0, i32 47, !dbg !10472
  %21 = load i32, i32* %pt, align 4, !dbg !10473
  %idxprom19 = sext i32 %21 to i64, !dbg !10470
  %arrayidx20 = getelementptr [32 x i8], [32 x i8]* %created, i64 0, i64 %idxprom19, !dbg !10470
  %22 = load i8, i8* %arrayidx20, align 1, !dbg !10470
  %tobool21 = icmp ne i8 %22, 0, !dbg !10470
  br i1 %tobool21, label %if.then22, label %if.end27, !dbg !10474

if.then22:                                        ; preds = %if.end14
  %23 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10475
  %created23 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %23, i32 0, i32 47, !dbg !10477
  %24 = load i32, i32* %pt, align 4, !dbg !10478
  %idxprom24 = sext i32 %24 to i64, !dbg !10475
  %arrayidx25 = getelementptr [32 x i8], [32 x i8]* %created23, i64 0, i64 %idxprom24, !dbg !10475
  store i8 0, i8* %arrayidx25, align 1, !dbg !10479
  %25 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !10480
  %dev26 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %25, i32 0, i32 0, !dbg !10481
  call void @mISDN_unregister_device(%struct.mISDNdevice* %dev26) #12, !dbg !10482
  br label %if.end27, !dbg !10483

if.end27:                                         ; preds = %if.then22, %if.end14
  br label %do.body, !dbg !10484

do.body:                                          ; preds = %if.end27
  br label %do.body28, !dbg !10485

do.body28:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10486, metadata !DIExpression()), !dbg !10488
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10489, metadata !DIExpression()), !dbg !10488
  %cmp29 = icmp eq i64* %__dummy, %__dummy2, !dbg !10488
  %conv = zext i1 %cmp29 to i32, !dbg !10488
  store i32 1, i32* %tmp, align 4, !dbg !10488
  %26 = load i32, i32* %tmp, align 4, !dbg !10488
  br label %do.body30, !dbg !10490

do.body30:                                        ; preds = %do.body28
  br label %do.body31, !dbg !10491

do.body31:                                        ; preds = %do.body30
  br label %do.body32, !dbg !10492

do.body32:                                        ; preds = %do.body31
  call void @llvm.dbg.declare(metadata i64* %__dummy33, metadata !10494, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.declare(metadata i64* %__dummy234, metadata !10498, metadata !DIExpression()), !dbg !10497
  %cmp35 = icmp eq i64* %__dummy33, %__dummy234, !dbg !10497
  %conv36 = zext i1 %cmp35 to i32, !dbg !10497
  store i32 1, i32* %tmp37, align 4, !dbg !10497
  %27 = load i32, i32* %tmp37, align 4, !dbg !10497
  %call38 = call i64 @arch_local_irq_save() #12, !dbg !10499
  store i64 %call38, i64* %flags, align 8, !dbg !10499
  br label %do.end, !dbg !10499

do.end:                                           ; preds = %do.body32
  br label %do.end39, !dbg !10492

do.end39:                                         ; preds = %do.end
  br label %do.body40, !dbg !10491

do.body40:                                        ; preds = %do.end39
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10500, !srcloc !10501
  br label %do.body41, !dbg !10500

do.body41:                                        ; preds = %do.body40
  %28 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10502
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %28, i32 0, i32 57, !dbg !10502
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10503
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !10504
  %rlock.i = bitcast %union.anon.1* %30 to %struct.raw_spinlock*, !dbg !10504
  br label %do.end43, !dbg !10502

do.end43:                                         ; preds = %do.body41
  br label %do.end44, !dbg !10500

do.end44:                                         ; preds = %do.end43
  br label %do.end45, !dbg !10491

do.end45:                                         ; preds = %do.end44
  br label %do.end46, !dbg !10490

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !10485

do.end47:                                         ; preds = %do.end46
  %31 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !10505
  %timer = getelementptr inbounds %struct.dchannel, %struct.dchannel* %31, i32 0, i32 8, !dbg !10507
  %function = getelementptr inbounds %struct.timer_list, %struct.timer_list* %timer, i32 0, i32 2, !dbg !10508
  %32 = load void (%struct.timer_list*)*, void (%struct.timer_list*)** %function, align 8, !dbg !10508
  %tobool48 = icmp ne void (%struct.timer_list*)* %32, null, !dbg !10505
  br i1 %tobool48, label %if.then49, label %if.end54, !dbg !10509

if.then49:                                        ; preds = %do.end47
  %33 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !10510
  %timer50 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %33, i32 0, i32 8, !dbg !10512
  %call51 = call i32 @del_timer(%struct.timer_list* %timer50) #12, !dbg !10513
  %34 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !10514
  %timer52 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %34, i32 0, i32 8, !dbg !10515
  %function53 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %timer52, i32 0, i32 2, !dbg !10516
  store void (%struct.timer_list*)* null, void (%struct.timer_list*)** %function53, align 8, !dbg !10517
  br label %if.end54, !dbg !10518

if.end54:                                         ; preds = %if.then49, %do.end47
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10519
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 4, !dbg !10520
  %36 = load i32, i32* %ctype, align 8, !dbg !10520
  %cmp55 = icmp eq i32 %36, 1, !dbg !10521
  br i1 %cmp55, label %if.then57, label %if.else, !dbg !10522

if.then57:                                        ; preds = %if.end54
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10523
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %37, i32 0, i32 31, !dbg !10525
  %call58 = call zeroext i1 @test_bit(i64 14, i64* %chip) #12, !dbg !10526
  br i1 %call58, label %if.then59, label %if.end60, !dbg !10527

if.then59:                                        ; preds = %if.then57
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10528
  %syncronized = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 55, !dbg !10530
  store i32 0, i32* %syncronized, align 4, !dbg !10531
  %39 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10532
  call void @plxsd_checksync(%struct.hfc_multi* %39, i32 1) #12, !dbg !10533
  br label %if.end60, !dbg !10534

if.end60:                                         ; preds = %if.then59, %if.then57
  store i32 0, i32* %i, align 4, !dbg !10535
  br label %for.cond, !dbg !10536

for.cond:                                         ; preds = %for.inc, %if.end60
  %40 = load i32, i32* %i, align 4, !dbg !10537
  %cmp61 = icmp sle i32 %40, 31, !dbg !10538
  br i1 %cmp61, label %for.body, label %for.end, !dbg !10539

for.body:                                         ; preds = %for.cond
  %41 = load i32, i32* %i, align 4, !dbg !10540
  %shl = shl i32 1, %41, !dbg !10542
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10543
  %bmask = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %42, i32 0, i32 45, !dbg !10544
  %43 = load i32, i32* %pt, align 4, !dbg !10545
  %idxprom63 = sext i32 %43 to i64, !dbg !10543
  %arrayidx64 = getelementptr [32 x i32], [32 x i32]* %bmask, i64 0, i64 %idxprom63, !dbg !10543
  %44 = load i32, i32* %arrayidx64, align 4, !dbg !10543
  %and65 = and i32 %shl, %44, !dbg !10546
  %tobool66 = icmp ne i32 %and65, 0, !dbg !10546
  br i1 %tobool66, label %if.end68, label %if.then67, !dbg !10547

if.then67:                                        ; preds = %for.body
  br label %for.inc, !dbg !10548

if.end68:                                         ; preds = %for.body
  %45 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10549
  %chan69 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %45, i32 0, i32 60, !dbg !10550
  %46 = load i32, i32* %i, align 4, !dbg !10551
  %idxprom70 = sext i32 %46 to i64, !dbg !10549
  %arrayidx71 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan69, i64 0, i64 %idxprom70, !dbg !10549
  %bch = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx71, i32 0, i32 1, !dbg !10552
  %47 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !10552
  %tobool72 = icmp ne %struct.bchannel* %47, null, !dbg !10549
  br i1 %tobool72, label %if.then73, label %if.end123, !dbg !10553

if.then73:                                        ; preds = %if.end68
  %48 = load i32, i32* @debug, align 4, !dbg !10554
  %and74 = and i32 %48, 262144, !dbg !10556
  %tobool75 = icmp ne i32 %and74, 0, !dbg !10556
  br i1 %tobool75, label %if.then76, label %if.end83, !dbg !10557

if.then76:                                        ; preds = %if.then73
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10558
  %chan77 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 60, !dbg !10559
  %50 = load i32, i32* %i, align 4, !dbg !10560
  %idxprom78 = sext i32 %50 to i64, !dbg !10558
  %arrayidx79 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan77, i64 0, i64 %idxprom78, !dbg !10558
  %port80 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx79, i32 0, i32 2, !dbg !10561
  %51 = load i32, i32* %port80, align 8, !dbg !10561
  %add81 = add i32 %51, 1, !dbg !10562
  %52 = load i32, i32* %i, align 4, !dbg !10563
  %call82 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_port, i64 0, i64 0), i32 %add81, i32 %52) #13, !dbg !10564
  br label %if.end83, !dbg !10564

if.end83:                                         ; preds = %if.then76, %if.then73
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10565
  %chan84 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %53, i32 0, i32 60, !dbg !10566
  %54 = load i32, i32* %i, align 4, !dbg !10567
  %idxprom85 = sext i32 %54 to i64, !dbg !10565
  %arrayidx86 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan84, i64 0, i64 %idxprom85, !dbg !10565
  %bch87 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx86, i32 0, i32 1, !dbg !10568
  %55 = load %struct.bchannel*, %struct.bchannel** %bch87, align 8, !dbg !10568
  store %struct.bchannel* %55, %struct.bchannel** %pb, align 8, !dbg !10569
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10570
  %chan88 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %56, i32 0, i32 60, !dbg !10571
  %57 = load i32, i32* %i, align 4, !dbg !10572
  %idxprom89 = sext i32 %57 to i64, !dbg !10570
  %arrayidx90 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan88, i64 0, i64 %idxprom89, !dbg !10570
  %bch91 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx90, i32 0, i32 1, !dbg !10573
  store %struct.bchannel* null, %struct.bchannel** %bch91, align 8, !dbg !10574
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10575
  %lock92 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %58, i32 0, i32 57, !dbg !10576
  %59 = load i64, i64* %flags, align 8, !dbg !10577
  store %struct.spinlock* %lock92, %struct.spinlock** %lock.addr.i277, align 8
  store i64 %59, i64* %flags.addr.i278, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !10578
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !10578
  store i32 1, i32* %tmp.i279, align 4, !dbg !10578
  %60 = load i32, i32* %tmp.i279, align 4, !dbg !10578
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !10579
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !10579
  store i32 1, i32* %tmp8.i280, align 4, !dbg !10579
  %61 = load i32, i32* %tmp8.i280, align 4, !dbg !10579
  %62 = load i64, i64* %flags.addr.i278, align 8, !dbg !10580
  call void @arch_local_irq_restore(i64 %62) #14, !dbg !10580
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10581, !srcloc !10125
  %63 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i277, align 8, !dbg !10582
  %64 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %63, i32 0, i32 0, !dbg !10582
  %rlock.i281 = bitcast %union.anon.1* %64 to %struct.raw_spinlock*, !dbg !10582
  %65 = load %struct.bchannel*, %struct.bchannel** %pb, align 8, !dbg !10583
  call void @mISDN_freebchannel(%struct.bchannel* %65) #12, !dbg !10584
  %66 = load %struct.bchannel*, %struct.bchannel** %pb, align 8, !dbg !10585
  %67 = bitcast %struct.bchannel* %66 to i8*, !dbg !10585
  call void @kfree(i8* %67) #12, !dbg !10586
  %68 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10587
  %chan93 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %68, i32 0, i32 60, !dbg !10588
  %69 = load i32, i32* %i, align 4, !dbg !10589
  %idxprom94 = sext i32 %69 to i64, !dbg !10587
  %arrayidx95 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan93, i64 0, i64 %idxprom94, !dbg !10587
  %coeff = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx95, i32 0, i32 22, !dbg !10590
  %70 = load i32*, i32** %coeff, align 8, !dbg !10590
  %71 = bitcast i32* %70 to i8*, !dbg !10587
  call void @kfree(i8* %71) #12, !dbg !10591
  br label %do.body96, !dbg !10592

do.body96:                                        ; preds = %if.end83
  br label %do.body97, !dbg !10593

do.body97:                                        ; preds = %do.body96
  call void @llvm.dbg.declare(metadata i64* %__dummy98, metadata !10594, metadata !DIExpression()), !dbg !10596
  call void @llvm.dbg.declare(metadata i64* %__dummy299, metadata !10597, metadata !DIExpression()), !dbg !10596
  %cmp100 = icmp eq i64* %__dummy98, %__dummy299, !dbg !10596
  %conv101 = zext i1 %cmp100 to i32, !dbg !10596
  store i32 1, i32* %tmp102, align 4, !dbg !10596
  %72 = load i32, i32* %tmp102, align 4, !dbg !10596
  br label %do.body103, !dbg !10598

do.body103:                                       ; preds = %do.body97
  br label %do.body104, !dbg !10599

do.body104:                                       ; preds = %do.body103
  br label %do.body105, !dbg !10600

do.body105:                                       ; preds = %do.body104
  call void @llvm.dbg.declare(metadata i64* %__dummy106, metadata !10602, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.declare(metadata i64* %__dummy2107, metadata !10606, metadata !DIExpression()), !dbg !10605
  %cmp108 = icmp eq i64* %__dummy106, %__dummy2107, !dbg !10605
  %conv109 = zext i1 %cmp108 to i32, !dbg !10605
  store i32 1, i32* %tmp110, align 4, !dbg !10605
  %73 = load i32, i32* %tmp110, align 4, !dbg !10605
  %call111 = call i64 @arch_local_irq_save() #12, !dbg !10607
  store i64 %call111, i64* %flags, align 8, !dbg !10607
  br label %do.end112, !dbg !10607

do.end112:                                        ; preds = %do.body105
  br label %do.end113, !dbg !10600

do.end113:                                        ; preds = %do.end112
  br label %do.body114, !dbg !10599

do.body114:                                       ; preds = %do.end113
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10608, !srcloc !10609
  br label %do.body115, !dbg !10608

do.body115:                                       ; preds = %do.body114
  %74 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10610
  %lock116 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %74, i32 0, i32 57, !dbg !10610
  store %struct.spinlock* %lock116, %struct.spinlock** %lock.addr.i282, align 8
  %75 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i282, align 8, !dbg !10611
  %76 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %75, i32 0, i32 0, !dbg !10612
  %rlock.i283 = bitcast %union.anon.1* %76 to %struct.raw_spinlock*, !dbg !10612
  br label %do.end118, !dbg !10610

do.end118:                                        ; preds = %do.body115
  br label %do.end119, !dbg !10608

do.end119:                                        ; preds = %do.end118
  br label %do.end120, !dbg !10599

do.end120:                                        ; preds = %do.end119
  br label %do.end121, !dbg !10598

do.end121:                                        ; preds = %do.end120
  br label %do.end122, !dbg !10593

do.end122:                                        ; preds = %do.end121
  br label %if.end123, !dbg !10613

if.end123:                                        ; preds = %do.end122, %if.end68
  br label %for.inc, !dbg !10614

for.inc:                                          ; preds = %if.end123, %if.then67
  %77 = load i32, i32* %i, align 4, !dbg !10615
  %inc = add i32 %77, 1, !dbg !10615
  store i32 %inc, i32* %i, align 4, !dbg !10615
  br label %for.cond, !dbg !10616, !llvm.loop !10617

for.end:                                          ; preds = %for.cond
  br label %if.end261, !dbg !10619

if.else:                                          ; preds = %if.end54
  %78 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10620
  %chip124 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %78, i32 0, i32 31, !dbg !10622
  %call125 = call zeroext i1 @test_bit(i64 14, i64* %chip124) #12, !dbg !10623
  br i1 %call125, label %if.then126, label %if.end134, !dbg !10624

if.then126:                                       ; preds = %if.else
  %79 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10625
  %chan127 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %79, i32 0, i32 60, !dbg !10627
  %80 = load i32, i32* %ci, align 4, !dbg !10628
  %idxprom128 = sext i32 %80 to i64, !dbg !10625
  %arrayidx129 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan127, i64 0, i64 %idxprom128, !dbg !10625
  %port130 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx129, i32 0, i32 2, !dbg !10629
  %81 = load i32, i32* %port130, align 8, !dbg !10629
  %shl131 = shl i32 1, %81, !dbg !10630
  %neg = xor i32 %shl131, -1, !dbg !10631
  %82 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10632
  %syncronized132 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %82, i32 0, i32 55, !dbg !10633
  %83 = load i32, i32* %syncronized132, align 4, !dbg !10634
  %and133 = and i32 %83, %neg, !dbg !10634
  store i32 %and133, i32* %syncronized132, align 4, !dbg !10634
  %84 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10635
  call void @plxsd_checksync(%struct.hfc_multi* %84, i32 1) #12, !dbg !10636
  br label %if.end134, !dbg !10637

if.end134:                                        ; preds = %if.then126, %if.else
  %85 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10638
  %chan135 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %85, i32 0, i32 60, !dbg !10639
  %86 = load i32, i32* %ci, align 4, !dbg !10640
  %sub = sub i32 %86, 2, !dbg !10641
  %idxprom136 = sext i32 %sub to i64, !dbg !10638
  %arrayidx137 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan135, i64 0, i64 %idxprom136, !dbg !10638
  %bch138 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx137, i32 0, i32 1, !dbg !10642
  %87 = load %struct.bchannel*, %struct.bchannel** %bch138, align 8, !dbg !10642
  %tobool139 = icmp ne %struct.bchannel* %87, null, !dbg !10638
  br i1 %tobool139, label %if.then140, label %if.end196, !dbg !10643

if.then140:                                       ; preds = %if.end134
  %88 = load i32, i32* @debug, align 4, !dbg !10644
  %and141 = and i32 %88, 262144, !dbg !10646
  %tobool142 = icmp ne i32 %and141, 0, !dbg !10646
  br i1 %tobool142, label %if.then143, label %if.end152, !dbg !10647

if.then143:                                       ; preds = %if.then140
  %89 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10648
  %chan144 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %89, i32 0, i32 60, !dbg !10649
  %90 = load i32, i32* %ci, align 4, !dbg !10650
  %sub145 = sub i32 %90, 2, !dbg !10651
  %idxprom146 = sext i32 %sub145 to i64, !dbg !10648
  %arrayidx147 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan144, i64 0, i64 %idxprom146, !dbg !10648
  %port148 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx147, i32 0, i32 2, !dbg !10652
  %91 = load i32, i32* %port148, align 8, !dbg !10652
  %add149 = add i32 %91, 1, !dbg !10653
  %92 = load i32, i32* %ci, align 4, !dbg !10654
  %sub150 = sub i32 %92, 2, !dbg !10655
  %call151 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_port, i64 0, i64 0), i32 %add149, i32 %sub150) #13, !dbg !10656
  br label %if.end152, !dbg !10656

if.end152:                                        ; preds = %if.then143, %if.then140
  %93 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10657
  %chan153 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %93, i32 0, i32 60, !dbg !10658
  %94 = load i32, i32* %ci, align 4, !dbg !10659
  %sub154 = sub i32 %94, 2, !dbg !10660
  %idxprom155 = sext i32 %sub154 to i64, !dbg !10657
  %arrayidx156 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan153, i64 0, i64 %idxprom155, !dbg !10657
  %bch157 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx156, i32 0, i32 1, !dbg !10661
  %95 = load %struct.bchannel*, %struct.bchannel** %bch157, align 8, !dbg !10661
  store %struct.bchannel* %95, %struct.bchannel** %pb, align 8, !dbg !10662
  %96 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10663
  %chan158 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %96, i32 0, i32 60, !dbg !10664
  %97 = load i32, i32* %ci, align 4, !dbg !10665
  %sub159 = sub i32 %97, 2, !dbg !10666
  %idxprom160 = sext i32 %sub159 to i64, !dbg !10663
  %arrayidx161 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan158, i64 0, i64 %idxprom160, !dbg !10663
  %bch162 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx161, i32 0, i32 1, !dbg !10667
  store %struct.bchannel* null, %struct.bchannel** %bch162, align 8, !dbg !10668
  %98 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10669
  %lock163 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %98, i32 0, i32 57, !dbg !10670
  %99 = load i64, i64* %flags, align 8, !dbg !10671
  store %struct.spinlock* %lock163, %struct.spinlock** %lock.addr.i284, align 8
  store i64 %99, i64* %flags.addr.i285, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !10672
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !10672
  store i32 1, i32* %tmp.i286, align 4, !dbg !10672
  %100 = load i32, i32* %tmp.i286, align 4, !dbg !10672
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !10673
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !10673
  store i32 1, i32* %tmp8.i287, align 4, !dbg !10673
  %101 = load i32, i32* %tmp8.i287, align 4, !dbg !10673
  %102 = load i64, i64* %flags.addr.i285, align 8, !dbg !10674
  call void @arch_local_irq_restore(i64 %102) #14, !dbg !10674
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10675, !srcloc !10125
  %103 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i284, align 8, !dbg !10676
  %104 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %103, i32 0, i32 0, !dbg !10676
  %rlock.i288 = bitcast %union.anon.1* %104 to %struct.raw_spinlock*, !dbg !10676
  %105 = load %struct.bchannel*, %struct.bchannel** %pb, align 8, !dbg !10677
  call void @mISDN_freebchannel(%struct.bchannel* %105) #12, !dbg !10678
  %106 = load %struct.bchannel*, %struct.bchannel** %pb, align 8, !dbg !10679
  %107 = bitcast %struct.bchannel* %106 to i8*, !dbg !10679
  call void @kfree(i8* %107) #12, !dbg !10680
  %108 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10681
  %chan164 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %108, i32 0, i32 60, !dbg !10682
  %109 = load i32, i32* %ci, align 4, !dbg !10683
  %sub165 = sub i32 %109, 2, !dbg !10684
  %idxprom166 = sext i32 %sub165 to i64, !dbg !10681
  %arrayidx167 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan164, i64 0, i64 %idxprom166, !dbg !10681
  %coeff168 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx167, i32 0, i32 22, !dbg !10685
  %110 = load i32*, i32** %coeff168, align 8, !dbg !10685
  %111 = bitcast i32* %110 to i8*, !dbg !10681
  call void @kfree(i8* %111) #12, !dbg !10686
  br label %do.body169, !dbg !10687

do.body169:                                       ; preds = %if.end152
  br label %do.body170, !dbg !10688

do.body170:                                       ; preds = %do.body169
  call void @llvm.dbg.declare(metadata i64* %__dummy171, metadata !10689, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.declare(metadata i64* %__dummy2172, metadata !10692, metadata !DIExpression()), !dbg !10691
  %cmp173 = icmp eq i64* %__dummy171, %__dummy2172, !dbg !10691
  %conv174 = zext i1 %cmp173 to i32, !dbg !10691
  store i32 1, i32* %tmp175, align 4, !dbg !10691
  %112 = load i32, i32* %tmp175, align 4, !dbg !10691
  br label %do.body176, !dbg !10693

do.body176:                                       ; preds = %do.body170
  br label %do.body177, !dbg !10694

do.body177:                                       ; preds = %do.body176
  br label %do.body178, !dbg !10695

do.body178:                                       ; preds = %do.body177
  call void @llvm.dbg.declare(metadata i64* %__dummy179, metadata !10697, metadata !DIExpression()), !dbg !10700
  call void @llvm.dbg.declare(metadata i64* %__dummy2180, metadata !10701, metadata !DIExpression()), !dbg !10700
  %cmp181 = icmp eq i64* %__dummy179, %__dummy2180, !dbg !10700
  %conv182 = zext i1 %cmp181 to i32, !dbg !10700
  store i32 1, i32* %tmp183, align 4, !dbg !10700
  %113 = load i32, i32* %tmp183, align 4, !dbg !10700
  %call184 = call i64 @arch_local_irq_save() #12, !dbg !10702
  store i64 %call184, i64* %flags, align 8, !dbg !10702
  br label %do.end185, !dbg !10702

do.end185:                                        ; preds = %do.body178
  br label %do.end186, !dbg !10695

do.end186:                                        ; preds = %do.end185
  br label %do.body187, !dbg !10694

do.body187:                                       ; preds = %do.end186
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10703, !srcloc !10704
  br label %do.body188, !dbg !10703

do.body188:                                       ; preds = %do.body187
  %114 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10705
  %lock189 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %114, i32 0, i32 57, !dbg !10705
  store %struct.spinlock* %lock189, %struct.spinlock** %lock.addr.i289, align 8
  %115 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i289, align 8, !dbg !10706
  %116 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %115, i32 0, i32 0, !dbg !10707
  %rlock.i290 = bitcast %union.anon.1* %116 to %struct.raw_spinlock*, !dbg !10707
  br label %do.end191, !dbg !10705

do.end191:                                        ; preds = %do.body188
  br label %do.end192, !dbg !10703

do.end192:                                        ; preds = %do.end191
  br label %do.end193, !dbg !10694

do.end193:                                        ; preds = %do.end192
  br label %do.end194, !dbg !10693

do.end194:                                        ; preds = %do.end193
  br label %do.end195, !dbg !10688

do.end195:                                        ; preds = %do.end194
  br label %if.end196, !dbg !10708

if.end196:                                        ; preds = %do.end195, %if.end134
  %117 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10709
  %chan197 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %117, i32 0, i32 60, !dbg !10710
  %118 = load i32, i32* %ci, align 4, !dbg !10711
  %sub198 = sub i32 %118, 1, !dbg !10712
  %idxprom199 = sext i32 %sub198 to i64, !dbg !10709
  %arrayidx200 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan197, i64 0, i64 %idxprom199, !dbg !10709
  %bch201 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx200, i32 0, i32 1, !dbg !10713
  %119 = load %struct.bchannel*, %struct.bchannel** %bch201, align 8, !dbg !10713
  %tobool202 = icmp ne %struct.bchannel* %119, null, !dbg !10709
  br i1 %tobool202, label %if.then203, label %if.end260, !dbg !10714

if.then203:                                       ; preds = %if.end196
  %120 = load i32, i32* @debug, align 4, !dbg !10715
  %and204 = and i32 %120, 262144, !dbg !10717
  %tobool205 = icmp ne i32 %and204, 0, !dbg !10717
  br i1 %tobool205, label %if.then206, label %if.end215, !dbg !10718

if.then206:                                       ; preds = %if.then203
  %121 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10719
  %chan207 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %121, i32 0, i32 60, !dbg !10720
  %122 = load i32, i32* %ci, align 4, !dbg !10721
  %sub208 = sub i32 %122, 1, !dbg !10722
  %idxprom209 = sext i32 %sub208 to i64, !dbg !10719
  %arrayidx210 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan207, i64 0, i64 %idxprom209, !dbg !10719
  %port211 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx210, i32 0, i32 2, !dbg !10723
  %123 = load i32, i32* %port211, align 8, !dbg !10723
  %add212 = add i32 %123, 1, !dbg !10724
  %124 = load i32, i32* %ci, align 4, !dbg !10725
  %sub213 = sub i32 %124, 1, !dbg !10726
  %call214 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_port, i64 0, i64 0), i32 %add212, i32 %sub213) #13, !dbg !10727
  br label %if.end215, !dbg !10727

if.end215:                                        ; preds = %if.then206, %if.then203
  %125 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10728
  %chan216 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %125, i32 0, i32 60, !dbg !10729
  %126 = load i32, i32* %ci, align 4, !dbg !10730
  %sub217 = sub i32 %126, 1, !dbg !10731
  %idxprom218 = sext i32 %sub217 to i64, !dbg !10728
  %arrayidx219 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan216, i64 0, i64 %idxprom218, !dbg !10728
  %bch220 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx219, i32 0, i32 1, !dbg !10732
  %127 = load %struct.bchannel*, %struct.bchannel** %bch220, align 8, !dbg !10732
  store %struct.bchannel* %127, %struct.bchannel** %pb, align 8, !dbg !10733
  %128 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10734
  %chan221 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %128, i32 0, i32 60, !dbg !10735
  %129 = load i32, i32* %ci, align 4, !dbg !10736
  %sub222 = sub i32 %129, 1, !dbg !10737
  %idxprom223 = sext i32 %sub222 to i64, !dbg !10734
  %arrayidx224 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan221, i64 0, i64 %idxprom223, !dbg !10734
  %bch225 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx224, i32 0, i32 1, !dbg !10738
  store %struct.bchannel* null, %struct.bchannel** %bch225, align 8, !dbg !10739
  %130 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10740
  %lock226 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %130, i32 0, i32 57, !dbg !10741
  %131 = load i64, i64* %flags, align 8, !dbg !10742
  store %struct.spinlock* %lock226, %struct.spinlock** %lock.addr.i291, align 8
  store i64 %131, i64* %flags.addr.i292, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !10743
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !10743
  store i32 1, i32* %tmp.i293, align 4, !dbg !10743
  %132 = load i32, i32* %tmp.i293, align 4, !dbg !10743
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !10744
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !10744
  store i32 1, i32* %tmp8.i294, align 4, !dbg !10744
  %133 = load i32, i32* %tmp8.i294, align 4, !dbg !10744
  %134 = load i64, i64* %flags.addr.i292, align 8, !dbg !10745
  call void @arch_local_irq_restore(i64 %134) #14, !dbg !10745
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10746, !srcloc !10125
  %135 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i291, align 8, !dbg !10747
  %136 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %135, i32 0, i32 0, !dbg !10747
  %rlock.i295 = bitcast %union.anon.1* %136 to %struct.raw_spinlock*, !dbg !10747
  %137 = load %struct.bchannel*, %struct.bchannel** %pb, align 8, !dbg !10748
  call void @mISDN_freebchannel(%struct.bchannel* %137) #12, !dbg !10749
  %138 = load %struct.bchannel*, %struct.bchannel** %pb, align 8, !dbg !10750
  %139 = bitcast %struct.bchannel* %138 to i8*, !dbg !10750
  call void @kfree(i8* %139) #12, !dbg !10751
  %140 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10752
  %chan227 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %140, i32 0, i32 60, !dbg !10753
  %141 = load i32, i32* %ci, align 4, !dbg !10754
  %sub228 = sub i32 %141, 1, !dbg !10755
  %idxprom229 = sext i32 %sub228 to i64, !dbg !10752
  %arrayidx230 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan227, i64 0, i64 %idxprom229, !dbg !10752
  %coeff231 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx230, i32 0, i32 22, !dbg !10756
  %142 = load i32*, i32** %coeff231, align 8, !dbg !10756
  %143 = bitcast i32* %142 to i8*, !dbg !10752
  call void @kfree(i8* %143) #12, !dbg !10757
  br label %do.body232, !dbg !10758

do.body232:                                       ; preds = %if.end215
  br label %do.body233, !dbg !10759

do.body233:                                       ; preds = %do.body232
  call void @llvm.dbg.declare(metadata i64* %__dummy235, metadata !10760, metadata !DIExpression()), !dbg !10762
  call void @llvm.dbg.declare(metadata i64* %__dummy2236, metadata !10763, metadata !DIExpression()), !dbg !10762
  %cmp237 = icmp eq i64* %__dummy235, %__dummy2236, !dbg !10762
  %conv238 = zext i1 %cmp237 to i32, !dbg !10762
  store i32 1, i32* %tmp239, align 4, !dbg !10762
  %144 = load i32, i32* %tmp239, align 4, !dbg !10762
  br label %do.body240, !dbg !10764

do.body240:                                       ; preds = %do.body233
  br label %do.body241, !dbg !10765

do.body241:                                       ; preds = %do.body240
  br label %do.body242, !dbg !10766

do.body242:                                       ; preds = %do.body241
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !10768, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.declare(metadata i64* %__dummy2244, metadata !10772, metadata !DIExpression()), !dbg !10771
  %cmp245 = icmp eq i64* %__dummy243, %__dummy2244, !dbg !10771
  %conv246 = zext i1 %cmp245 to i32, !dbg !10771
  store i32 1, i32* %tmp247, align 4, !dbg !10771
  %145 = load i32, i32* %tmp247, align 4, !dbg !10771
  %call248 = call i64 @arch_local_irq_save() #12, !dbg !10773
  store i64 %call248, i64* %flags, align 8, !dbg !10773
  br label %do.end249, !dbg !10773

do.end249:                                        ; preds = %do.body242
  br label %do.end250, !dbg !10766

do.end250:                                        ; preds = %do.end249
  br label %do.body251, !dbg !10765

do.body251:                                       ; preds = %do.end250
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10774, !srcloc !10775
  br label %do.body252, !dbg !10774

do.body252:                                       ; preds = %do.body251
  %146 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10776
  %lock253 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %146, i32 0, i32 57, !dbg !10776
  store %struct.spinlock* %lock253, %struct.spinlock** %lock.addr.i296, align 8
  %147 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i296, align 8, !dbg !10777
  %148 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %147, i32 0, i32 0, !dbg !10778
  %rlock.i297 = bitcast %union.anon.1* %148 to %struct.raw_spinlock*, !dbg !10778
  br label %do.end255, !dbg !10776

do.end255:                                        ; preds = %do.body252
  br label %do.end256, !dbg !10774

do.end256:                                        ; preds = %do.end255
  br label %do.end257, !dbg !10765

do.end257:                                        ; preds = %do.end256
  br label %do.end258, !dbg !10764

do.end258:                                        ; preds = %do.end257
  br label %do.end259, !dbg !10759

do.end259:                                        ; preds = %do.end258
  br label %if.end260, !dbg !10779

if.end260:                                        ; preds = %do.end259, %if.end196
  br label %if.end261

if.end261:                                        ; preds = %if.end260, %for.end
  %149 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10780
  %lock262 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %149, i32 0, i32 57, !dbg !10781
  %150 = load i64, i64* %flags, align 8, !dbg !10782
  store %struct.spinlock* %lock262, %struct.spinlock** %lock.addr.i275, align 8
  store i64 %150, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !10783
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !10783
  store i32 1, i32* %tmp.i, align 4, !dbg !10783
  %151 = load i32, i32* %tmp.i, align 4, !dbg !10783
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !10784
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !10784
  store i32 1, i32* %tmp8.i, align 4, !dbg !10784
  %152 = load i32, i32* %tmp8.i, align 4, !dbg !10784
  %153 = load i64, i64* %flags.addr.i, align 8, !dbg !10785
  call void @arch_local_irq_restore(i64 %153) #14, !dbg !10785
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10786, !srcloc !10125
  %154 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i275, align 8, !dbg !10787
  %155 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %154, i32 0, i32 0, !dbg !10787
  %rlock.i276 = bitcast %union.anon.1* %155 to %struct.raw_spinlock*, !dbg !10787
  %156 = load i32, i32* @debug, align 4, !dbg !10788
  %and263 = and i32 %156, 262144, !dbg !10790
  %tobool264 = icmp ne i32 %and263, 0, !dbg !10790
  br i1 %tobool264, label %if.then265, label %if.end268, !dbg !10791

if.then265:                                       ; preds = %if.end261
  %157 = load i32, i32* %pt, align 4, !dbg !10792
  %add266 = add i32 %157, 1, !dbg !10793
  %158 = load i32, i32* %ci, align 4, !dbg !10794
  %call267 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_port, i64 0, i64 0), i32 %add266, i32 %158) #13, !dbg !10795
  br label %if.end268, !dbg !10795

if.end268:                                        ; preds = %if.then265, %if.end261
  %159 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !10796
  %call269 = call i32 @mISDN_freedchannel(%struct.dchannel* %159) #12, !dbg !10797
  %160 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !10798
  %161 = bitcast %struct.dchannel* %160 to i8*, !dbg !10798
  call void @kfree(i8* %161) #12, !dbg !10799
  %162 = load i32, i32* @debug, align 4, !dbg !10800
  %and270 = and i32 %162, 262144, !dbg !10802
  %tobool271 = icmp ne i32 %and270, 0, !dbg !10802
  br i1 %tobool271, label %if.then272, label %if.end274, !dbg !10803

if.then272:                                       ; preds = %if.end268
  %call273 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.release_port, i64 0, i64 0)) #13, !dbg !10804
  br label %if.end274, !dbg !10804

if.end274:                                        ; preds = %if.then1, %if.then272, %if.end268
  ret void, !dbg !10805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfcmulti_leds(%struct.hfc_multi* %hc) #2 !dbg !10806 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %lled = alloca i64, align 8
  %leddw = alloca i64, align 8
  %i = alloca i32, align 4
  %state = alloca i32, align 4
  %active = alloca i32, align 4
  %leds = alloca i32, align 4
  %dch = alloca %struct.dchannel*, align 8
  %led = alloca [4 x i32], align 16
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !10807, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.declare(metadata i64* %lled, metadata !10809, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.declare(metadata i64* %leddw, metadata !10811, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10813, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.declare(metadata i32* %state, metadata !10815, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.declare(metadata i32* %active, metadata !10817, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.declare(metadata i32* %leds, metadata !10819, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !10821, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.declare(metadata [4 x i32]* %led, metadata !10823, metadata !DIExpression()), !dbg !10825
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10826
  %leds1 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 42, !dbg !10827
  %1 = load i32, i32* %leds1, align 4, !dbg !10827
  switch i32 %1, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb106
    i32 3, label %sw.bb277
    i32 8, label %sw.bb411
  ], !dbg !10828

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 0, !dbg !10829
  store i32 0, i32* %arrayidx, align 16, !dbg !10831
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 1, !dbg !10832
  store i32 0, i32* %arrayidx2, align 4, !dbg !10833
  %arrayidx3 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 2, !dbg !10834
  store i32 0, i32* %arrayidx3, align 8, !dbg !10835
  %arrayidx4 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 3, !dbg !10836
  store i32 0, i32* %arrayidx4, align 4, !dbg !10837
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10838
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %2, i32 0, i32 60, !dbg !10839
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10840
  %dnum = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 46, !dbg !10841
  %arrayidx5 = getelementptr [32 x i8], [32 x i8]* %dnum, i64 0, i64 0, !dbg !10840
  %4 = load i8, i8* %arrayidx5, align 4, !dbg !10840
  %idxprom = zext i8 %4 to i64, !dbg !10838
  %arrayidx6 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !10838
  %dch7 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx6, i32 0, i32 0, !dbg !10842
  %5 = load %struct.dchannel*, %struct.dchannel** %dch7, align 8, !dbg !10842
  store %struct.dchannel* %5, %struct.dchannel** %dch, align 8, !dbg !10843
  %6 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !10844
  %tobool = icmp ne %struct.dchannel* %6, null, !dbg !10844
  br i1 %tobool, label %if.then, label %if.end90, !dbg !10846

if.then:                                          ; preds = %sw.bb
  %7 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10847
  %chan8 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %7, i32 0, i32 60, !dbg !10850
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10851
  %dnum9 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 46, !dbg !10852
  %arrayidx10 = getelementptr [32 x i8], [32 x i8]* %dnum9, i64 0, i64 0, !dbg !10851
  %9 = load i8, i8* %arrayidx10, align 4, !dbg !10851
  %idxprom11 = zext i8 %9 to i64, !dbg !10847
  %arrayidx12 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan8, i64 0, i64 %idxprom11, !dbg !10847
  %los = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx12, i32 0, i32 4, !dbg !10853
  %10 = load i32, i32* %los, align 8, !dbg !10853
  %tobool13 = icmp ne i32 %10, 0, !dbg !10847
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !10854

if.then14:                                        ; preds = %if.then
  %arrayidx15 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 1, !dbg !10855
  store i32 1, i32* %arrayidx15, align 4, !dbg !10856
  br label %if.end, !dbg !10855

if.end:                                           ; preds = %if.then14, %if.then
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10857
  %e1_state = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %11, i32 0, i32 53, !dbg !10859
  %12 = load i32, i32* %e1_state, align 4, !dbg !10859
  %cmp = icmp ne i32 %12, 1, !dbg !10860
  br i1 %cmp, label %if.then16, label %if.else, !dbg !10861

if.then16:                                        ; preds = %if.end
  %arrayidx17 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 0, !dbg !10862
  store i32 1, i32* %arrayidx17, align 16, !dbg !10864
  %13 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10865
  %flash = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %13, i32 0, i32 50, !dbg !10866
  %arrayidx18 = getelementptr [8 x i32], [8 x i32]* %flash, i64 0, i64 2, !dbg !10865
  store i32 0, i32* %arrayidx18, align 4, !dbg !10867
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10868
  %flash19 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %14, i32 0, i32 50, !dbg !10869
  %arrayidx20 = getelementptr [8 x i32], [8 x i32]* %flash19, i64 0, i64 3, !dbg !10868
  store i32 0, i32* %arrayidx20, align 4, !dbg !10870
  br label %if.end89, !dbg !10871

if.else:                                          ; preds = %if.end
  %arrayidx21 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 2, !dbg !10872
  store i32 1, i32* %arrayidx21, align 8, !dbg !10874
  %arrayidx22 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 3, !dbg !10875
  store i32 1, i32* %arrayidx22, align 4, !dbg !10876
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10877
  %flash23 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 50, !dbg !10879
  %arrayidx24 = getelementptr [8 x i32], [8 x i32]* %flash23, i64 0, i64 2, !dbg !10877
  %16 = load i32, i32* %arrayidx24, align 4, !dbg !10877
  %tobool25 = icmp ne i32 %16, 0, !dbg !10877
  br i1 %tobool25, label %if.end30, label %land.lhs.true, !dbg !10880

land.lhs.true:                                    ; preds = %if.else
  %17 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10881
  %activity_tx = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %17, i32 0, i32 48, !dbg !10882
  %18 = load i32, i32* %activity_tx, align 4, !dbg !10882
  %tobool26 = icmp ne i32 %18, 0, !dbg !10881
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !10883

if.then27:                                        ; preds = %land.lhs.true
  %19 = load i32, i32* @poll, align 4, !dbg !10884
  %20 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10885
  %flash28 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %20, i32 0, i32 50, !dbg !10886
  %arrayidx29 = getelementptr [8 x i32], [8 x i32]* %flash28, i64 0, i64 2, !dbg !10885
  store i32 %19, i32* %arrayidx29, align 4, !dbg !10887
  br label %if.end30, !dbg !10885

if.end30:                                         ; preds = %if.then27, %land.lhs.true, %if.else
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10888
  %flash31 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 50, !dbg !10890
  %arrayidx32 = getelementptr [8 x i32], [8 x i32]* %flash31, i64 0, i64 3, !dbg !10888
  %22 = load i32, i32* %arrayidx32, align 4, !dbg !10888
  %tobool33 = icmp ne i32 %22, 0, !dbg !10888
  br i1 %tobool33, label %if.end39, label %land.lhs.true34, !dbg !10891

land.lhs.true34:                                  ; preds = %if.end30
  %23 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10892
  %activity_rx = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %23, i32 0, i32 49, !dbg !10893
  %24 = load i32, i32* %activity_rx, align 8, !dbg !10893
  %tobool35 = icmp ne i32 %24, 0, !dbg !10892
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !10894

if.then36:                                        ; preds = %land.lhs.true34
  %25 = load i32, i32* @poll, align 4, !dbg !10895
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10896
  %flash37 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %26, i32 0, i32 50, !dbg !10897
  %arrayidx38 = getelementptr [8 x i32], [8 x i32]* %flash37, i64 0, i64 3, !dbg !10896
  store i32 %25, i32* %arrayidx38, align 4, !dbg !10898
  br label %if.end39, !dbg !10896

if.end39:                                         ; preds = %if.then36, %land.lhs.true34, %if.end30
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10899
  %flash40 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %27, i32 0, i32 50, !dbg !10901
  %arrayidx41 = getelementptr [8 x i32], [8 x i32]* %flash40, i64 0, i64 2, !dbg !10899
  %28 = load i32, i32* %arrayidx41, align 4, !dbg !10899
  %tobool42 = icmp ne i32 %28, 0, !dbg !10899
  br i1 %tobool42, label %land.lhs.true43, label %if.end49, !dbg !10902

land.lhs.true43:                                  ; preds = %if.end39
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10903
  %flash44 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %29, i32 0, i32 50, !dbg !10904
  %arrayidx45 = getelementptr [8 x i32], [8 x i32]* %flash44, i64 0, i64 2, !dbg !10903
  %30 = load i32, i32* %arrayidx45, align 4, !dbg !10903
  %cmp46 = icmp ult i32 %30, 1024, !dbg !10905
  br i1 %cmp46, label %if.then47, label %if.end49, !dbg !10906

if.then47:                                        ; preds = %land.lhs.true43
  %arrayidx48 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 2, !dbg !10907
  store i32 0, i32* %arrayidx48, align 8, !dbg !10908
  br label %if.end49, !dbg !10907

if.end49:                                         ; preds = %if.then47, %land.lhs.true43, %if.end39
  %31 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10909
  %flash50 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %31, i32 0, i32 50, !dbg !10911
  %arrayidx51 = getelementptr [8 x i32], [8 x i32]* %flash50, i64 0, i64 3, !dbg !10909
  %32 = load i32, i32* %arrayidx51, align 4, !dbg !10909
  %tobool52 = icmp ne i32 %32, 0, !dbg !10909
  br i1 %tobool52, label %land.lhs.true53, label %if.end59, !dbg !10912

land.lhs.true53:                                  ; preds = %if.end49
  %33 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10913
  %flash54 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %33, i32 0, i32 50, !dbg !10914
  %arrayidx55 = getelementptr [8 x i32], [8 x i32]* %flash54, i64 0, i64 3, !dbg !10913
  %34 = load i32, i32* %arrayidx55, align 4, !dbg !10913
  %cmp56 = icmp ult i32 %34, 1024, !dbg !10915
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !10916

if.then57:                                        ; preds = %land.lhs.true53
  %arrayidx58 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 3, !dbg !10917
  store i32 0, i32* %arrayidx58, align 4, !dbg !10918
  br label %if.end59, !dbg !10917

if.end59:                                         ; preds = %if.then57, %land.lhs.true53, %if.end49
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10919
  %flash60 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 50, !dbg !10921
  %arrayidx61 = getelementptr [8 x i32], [8 x i32]* %flash60, i64 0, i64 2, !dbg !10919
  %36 = load i32, i32* %arrayidx61, align 4, !dbg !10919
  %cmp62 = icmp uge i32 %36, 2048, !dbg !10922
  br i1 %cmp62, label %if.then63, label %if.end66, !dbg !10923

if.then63:                                        ; preds = %if.end59
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10924
  %flash64 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %37, i32 0, i32 50, !dbg !10925
  %arrayidx65 = getelementptr [8 x i32], [8 x i32]* %flash64, i64 0, i64 2, !dbg !10924
  store i32 0, i32* %arrayidx65, align 4, !dbg !10926
  br label %if.end66, !dbg !10924

if.end66:                                         ; preds = %if.then63, %if.end59
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10927
  %flash67 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 50, !dbg !10929
  %arrayidx68 = getelementptr [8 x i32], [8 x i32]* %flash67, i64 0, i64 3, !dbg !10927
  %39 = load i32, i32* %arrayidx68, align 4, !dbg !10927
  %cmp69 = icmp uge i32 %39, 2048, !dbg !10930
  br i1 %cmp69, label %if.then70, label %if.end73, !dbg !10931

if.then70:                                        ; preds = %if.end66
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10932
  %flash71 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %40, i32 0, i32 50, !dbg !10933
  %arrayidx72 = getelementptr [8 x i32], [8 x i32]* %flash71, i64 0, i64 3, !dbg !10932
  store i32 0, i32* %arrayidx72, align 4, !dbg !10934
  br label %if.end73, !dbg !10932

if.end73:                                         ; preds = %if.then70, %if.end66
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10935
  %flash74 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %41, i32 0, i32 50, !dbg !10937
  %arrayidx75 = getelementptr [8 x i32], [8 x i32]* %flash74, i64 0, i64 2, !dbg !10935
  %42 = load i32, i32* %arrayidx75, align 4, !dbg !10935
  %tobool76 = icmp ne i32 %42, 0, !dbg !10935
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !10938

if.then77:                                        ; preds = %if.end73
  %43 = load i32, i32* @poll, align 4, !dbg !10939
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10940
  %flash78 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %44, i32 0, i32 50, !dbg !10941
  %arrayidx79 = getelementptr [8 x i32], [8 x i32]* %flash78, i64 0, i64 2, !dbg !10940
  %45 = load i32, i32* %arrayidx79, align 4, !dbg !10942
  %add = add i32 %45, %43, !dbg !10942
  store i32 %add, i32* %arrayidx79, align 4, !dbg !10942
  br label %if.end80, !dbg !10940

if.end80:                                         ; preds = %if.then77, %if.end73
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10943
  %flash81 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 50, !dbg !10945
  %arrayidx82 = getelementptr [8 x i32], [8 x i32]* %flash81, i64 0, i64 3, !dbg !10943
  %47 = load i32, i32* %arrayidx82, align 4, !dbg !10943
  %tobool83 = icmp ne i32 %47, 0, !dbg !10943
  br i1 %tobool83, label %if.then84, label %if.end88, !dbg !10946

if.then84:                                        ; preds = %if.end80
  %48 = load i32, i32* @poll, align 4, !dbg !10947
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10948
  %flash85 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 50, !dbg !10949
  %arrayidx86 = getelementptr [8 x i32], [8 x i32]* %flash85, i64 0, i64 3, !dbg !10948
  %50 = load i32, i32* %arrayidx86, align 4, !dbg !10950
  %add87 = add i32 %50, %48, !dbg !10950
  store i32 %add87, i32* %arrayidx86, align 4, !dbg !10950
  br label %if.end88, !dbg !10948

if.end88:                                         ; preds = %if.then84, %if.end80
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then16
  br label %if.end90, !dbg !10951

if.end90:                                         ; preds = %if.end89, %sw.bb
  %arrayidx91 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 0, !dbg !10952
  %51 = load i32, i32* %arrayidx91, align 16, !dbg !10952
  %arrayidx92 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 1, !dbg !10953
  %52 = load i32, i32* %arrayidx92, align 4, !dbg !10953
  %shl = shl i32 %52, 2, !dbg !10954
  %or = or i32 %51, %shl, !dbg !10955
  %arrayidx93 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 2, !dbg !10956
  %53 = load i32, i32* %arrayidx93, align 8, !dbg !10956
  %shl94 = shl i32 %53, 1, !dbg !10957
  %or95 = or i32 %or, %shl94, !dbg !10958
  %arrayidx96 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 3, !dbg !10959
  %54 = load i32, i32* %arrayidx96, align 4, !dbg !10959
  %shl97 = shl i32 %54, 3, !dbg !10960
  %or98 = or i32 %or95, %shl97, !dbg !10961
  %xor = xor i32 %or98, 15, !dbg !10962
  store i32 %xor, i32* %leds, align 4, !dbg !10963
  %55 = load i32, i32* %leds, align 4, !dbg !10964
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10966
  %ledstate = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %56, i32 0, i32 43, !dbg !10967
  %57 = load i64, i64* %ledstate, align 8, !dbg !10967
  %conv = trunc i64 %57 to i32, !dbg !10968
  %cmp99 = icmp ne i32 %55, %conv, !dbg !10969
  br i1 %cmp99, label %if.then101, label %if.end105, !dbg !10970

if.then101:                                       ; preds = %if.end90
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10971
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %58, i32 0, i32 11, !dbg !10971
  %59 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !10971
  %60 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10971
  %61 = load i32, i32* %leds, align 4, !dbg !10971
  %conv102 = trunc i32 %61 to i8, !dbg !10971
  call void %59(%struct.hfc_multi* %60, i8 zeroext 65, i8 zeroext %conv102) #12, !dbg !10971
  %62 = load i32, i32* %leds, align 4, !dbg !10973
  %conv103 = sext i32 %62 to i64, !dbg !10973
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10974
  %ledstate104 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %63, i32 0, i32 43, !dbg !10975
  store i64 %conv103, i64* %ledstate104, align 8, !dbg !10976
  br label %if.end105, !dbg !10977

if.end105:                                        ; preds = %if.then101, %if.end90
  br label %sw.epilog, !dbg !10978

sw.bb106:                                         ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !10979
  br label %for.cond, !dbg !10981

for.cond:                                         ; preds = %for.inc, %sw.bb106
  %64 = load i32, i32* %i, align 4, !dbg !10982
  %cmp107 = icmp slt i32 %64, 4, !dbg !10984
  br i1 %cmp107, label %for.body, label %for.end, !dbg !10985

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %state, align 4, !dbg !10986
  store i32 -1, i32* %active, align 4, !dbg !10988
  %65 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !10989
  %chan109 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %65, i32 0, i32 60, !dbg !10990
  %66 = load i32, i32* %i, align 4, !dbg !10991
  %shl110 = shl i32 %66, 2, !dbg !10992
  %or111 = or i32 %shl110, 2, !dbg !10993
  %idxprom112 = sext i32 %or111 to i64, !dbg !10989
  %arrayidx113 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan109, i64 0, i64 %idxprom112, !dbg !10989
  %dch114 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx113, i32 0, i32 0, !dbg !10994
  %67 = load %struct.dchannel*, %struct.dchannel** %dch114, align 8, !dbg !10994
  store %struct.dchannel* %67, %struct.dchannel** %dch, align 8, !dbg !10995
  %68 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !10996
  %tobool115 = icmp ne %struct.dchannel* %68, null, !dbg !10996
  br i1 %tobool115, label %if.then116, label %if.end123, !dbg !10998

if.then116:                                       ; preds = %for.body
  %69 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !10999
  %state117 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %69, i32 0, i32 4, !dbg !11001
  %70 = load i32, i32* %state117, align 8, !dbg !11001
  store i32 %70, i32* %state, align 4, !dbg !11002
  %71 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !11003
  %dev = getelementptr inbounds %struct.dchannel, %struct.dchannel* %71, i32 0, i32 0, !dbg !11005
  %D = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev, i32 0, i32 0, !dbg !11006
  %protocol = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D, i32 0, i32 1, !dbg !11007
  %72 = load i32, i32* %protocol, align 8, !dbg !11007
  %cmp118 = icmp eq i32 %72, 2, !dbg !11008
  br i1 %cmp118, label %if.then120, label %if.else121, !dbg !11009

if.then120:                                       ; preds = %if.then116
  store i32 3, i32* %active, align 4, !dbg !11010
  br label %if.end122, !dbg !11011

if.else121:                                       ; preds = %if.then116
  store i32 7, i32* %active, align 4, !dbg !11012
  br label %if.end122

if.end122:                                        ; preds = %if.else121, %if.then120
  br label %if.end123, !dbg !11013

if.end123:                                        ; preds = %if.end122, %for.body
  %73 = load i32, i32* %state, align 4, !dbg !11014
  %tobool124 = icmp ne i32 %73, 0, !dbg !11014
  br i1 %tobool124, label %if.then125, label %if.else188, !dbg !11016

if.then125:                                       ; preds = %if.end123
  %74 = load i32, i32* %state, align 4, !dbg !11017
  %75 = load i32, i32* %active, align 4, !dbg !11020
  %cmp126 = icmp eq i32 %74, %75, !dbg !11021
  br i1 %cmp126, label %if.then128, label %if.else181, !dbg !11022

if.then128:                                       ; preds = %if.then125
  %76 = load i32, i32* %i, align 4, !dbg !11023
  %idxprom129 = sext i32 %76 to i64, !dbg !11025
  %arrayidx130 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 %idxprom129, !dbg !11025
  store i32 1, i32* %arrayidx130, align 4, !dbg !11026
  %77 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11027
  %activity_rx131 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %77, i32 0, i32 49, !dbg !11028
  %78 = load i32, i32* %activity_rx131, align 8, !dbg !11028
  %79 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11029
  %activity_tx132 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %79, i32 0, i32 48, !dbg !11030
  %80 = load i32, i32* %activity_tx132, align 4, !dbg !11031
  %or133 = or i32 %80, %78, !dbg !11031
  store i32 %or133, i32* %activity_tx132, align 4, !dbg !11031
  %81 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11032
  %flash134 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %81, i32 0, i32 50, !dbg !11034
  %82 = load i32, i32* %i, align 4, !dbg !11035
  %idxprom135 = sext i32 %82 to i64, !dbg !11032
  %arrayidx136 = getelementptr [8 x i32], [8 x i32]* %flash134, i64 0, i64 %idxprom135, !dbg !11032
  %83 = load i32, i32* %arrayidx136, align 4, !dbg !11032
  %tobool137 = icmp ne i32 %83, 0, !dbg !11032
  br i1 %tobool137, label %if.end146, label %land.lhs.true138, !dbg !11036

land.lhs.true138:                                 ; preds = %if.then128
  %84 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11037
  %activity_tx139 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %84, i32 0, i32 48, !dbg !11038
  %85 = load i32, i32* %activity_tx139, align 4, !dbg !11038
  %86 = load i32, i32* %i, align 4, !dbg !11039
  %shl140 = shl i32 1, %86, !dbg !11040
  %and = and i32 %85, %shl140, !dbg !11041
  %tobool141 = icmp ne i32 %and, 0, !dbg !11041
  br i1 %tobool141, label %if.then142, label %if.end146, !dbg !11042

if.then142:                                       ; preds = %land.lhs.true138
  %87 = load i32, i32* @poll, align 4, !dbg !11043
  %88 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11044
  %flash143 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %88, i32 0, i32 50, !dbg !11045
  %89 = load i32, i32* %i, align 4, !dbg !11046
  %idxprom144 = sext i32 %89 to i64, !dbg !11044
  %arrayidx145 = getelementptr [8 x i32], [8 x i32]* %flash143, i64 0, i64 %idxprom144, !dbg !11044
  store i32 %87, i32* %arrayidx145, align 4, !dbg !11047
  br label %if.end146, !dbg !11044

if.end146:                                        ; preds = %if.then142, %land.lhs.true138, %if.then128
  %90 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11048
  %flash147 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %90, i32 0, i32 50, !dbg !11050
  %91 = load i32, i32* %i, align 4, !dbg !11051
  %idxprom148 = sext i32 %91 to i64, !dbg !11048
  %arrayidx149 = getelementptr [8 x i32], [8 x i32]* %flash147, i64 0, i64 %idxprom148, !dbg !11048
  %92 = load i32, i32* %arrayidx149, align 4, !dbg !11048
  %tobool150 = icmp ne i32 %92, 0, !dbg !11048
  br i1 %tobool150, label %land.lhs.true151, label %if.end160, !dbg !11052

land.lhs.true151:                                 ; preds = %if.end146
  %93 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11053
  %flash152 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %93, i32 0, i32 50, !dbg !11054
  %94 = load i32, i32* %i, align 4, !dbg !11055
  %idxprom153 = sext i32 %94 to i64, !dbg !11053
  %arrayidx154 = getelementptr [8 x i32], [8 x i32]* %flash152, i64 0, i64 %idxprom153, !dbg !11053
  %95 = load i32, i32* %arrayidx154, align 4, !dbg !11053
  %cmp155 = icmp ult i32 %95, 1024, !dbg !11056
  br i1 %cmp155, label %if.then157, label %if.end160, !dbg !11057

if.then157:                                       ; preds = %land.lhs.true151
  %96 = load i32, i32* %i, align 4, !dbg !11058
  %idxprom158 = sext i32 %96 to i64, !dbg !11059
  %arrayidx159 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 %idxprom158, !dbg !11059
  store i32 0, i32* %arrayidx159, align 4, !dbg !11060
  br label %if.end160, !dbg !11059

if.end160:                                        ; preds = %if.then157, %land.lhs.true151, %if.end146
  %97 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11061
  %flash161 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %97, i32 0, i32 50, !dbg !11063
  %98 = load i32, i32* %i, align 4, !dbg !11064
  %idxprom162 = sext i32 %98 to i64, !dbg !11061
  %arrayidx163 = getelementptr [8 x i32], [8 x i32]* %flash161, i64 0, i64 %idxprom162, !dbg !11061
  %99 = load i32, i32* %arrayidx163, align 4, !dbg !11061
  %cmp164 = icmp uge i32 %99, 2048, !dbg !11065
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !11066

if.then166:                                       ; preds = %if.end160
  %100 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11067
  %flash167 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %100, i32 0, i32 50, !dbg !11068
  %101 = load i32, i32* %i, align 4, !dbg !11069
  %idxprom168 = sext i32 %101 to i64, !dbg !11067
  %arrayidx169 = getelementptr [8 x i32], [8 x i32]* %flash167, i64 0, i64 %idxprom168, !dbg !11067
  store i32 0, i32* %arrayidx169, align 4, !dbg !11070
  br label %if.end170, !dbg !11067

if.end170:                                        ; preds = %if.then166, %if.end160
  %102 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11071
  %flash171 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %102, i32 0, i32 50, !dbg !11073
  %103 = load i32, i32* %i, align 4, !dbg !11074
  %idxprom172 = sext i32 %103 to i64, !dbg !11071
  %arrayidx173 = getelementptr [8 x i32], [8 x i32]* %flash171, i64 0, i64 %idxprom172, !dbg !11071
  %104 = load i32, i32* %arrayidx173, align 4, !dbg !11071
  %tobool174 = icmp ne i32 %104, 0, !dbg !11071
  br i1 %tobool174, label %if.then175, label %if.end180, !dbg !11075

if.then175:                                       ; preds = %if.end170
  %105 = load i32, i32* @poll, align 4, !dbg !11076
  %106 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11077
  %flash176 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %106, i32 0, i32 50, !dbg !11078
  %107 = load i32, i32* %i, align 4, !dbg !11079
  %idxprom177 = sext i32 %107 to i64, !dbg !11077
  %arrayidx178 = getelementptr [8 x i32], [8 x i32]* %flash176, i64 0, i64 %idxprom177, !dbg !11077
  %108 = load i32, i32* %arrayidx178, align 4, !dbg !11080
  %add179 = add i32 %108, %105, !dbg !11080
  store i32 %add179, i32* %arrayidx178, align 4, !dbg !11080
  br label %if.end180, !dbg !11077

if.end180:                                        ; preds = %if.then175, %if.end170
  br label %if.end187, !dbg !11081

if.else181:                                       ; preds = %if.then125
  %109 = load i32, i32* %i, align 4, !dbg !11082
  %idxprom182 = sext i32 %109 to i64, !dbg !11084
  %arrayidx183 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 %idxprom182, !dbg !11084
  store i32 2, i32* %arrayidx183, align 4, !dbg !11085
  %110 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11086
  %flash184 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %110, i32 0, i32 50, !dbg !11087
  %111 = load i32, i32* %i, align 4, !dbg !11088
  %idxprom185 = sext i32 %111 to i64, !dbg !11086
  %arrayidx186 = getelementptr [8 x i32], [8 x i32]* %flash184, i64 0, i64 %idxprom185, !dbg !11086
  store i32 0, i32* %arrayidx186, align 4, !dbg !11089
  br label %if.end187

if.end187:                                        ; preds = %if.else181, %if.end180
  br label %if.end191, !dbg !11090

if.else188:                                       ; preds = %if.end123
  %112 = load i32, i32* %i, align 4, !dbg !11091
  %idxprom189 = sext i32 %112 to i64, !dbg !11092
  %arrayidx190 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 %idxprom189, !dbg !11092
  store i32 0, i32* %arrayidx190, align 4, !dbg !11093
  br label %if.end191

if.end191:                                        ; preds = %if.else188, %if.end187
  br label %for.inc, !dbg !11094

for.inc:                                          ; preds = %if.end191
  %113 = load i32, i32* %i, align 4, !dbg !11095
  %inc = add i32 %113, 1, !dbg !11095
  store i32 %inc, i32* %i, align 4, !dbg !11095
  br label %for.cond, !dbg !11096, !llvm.loop !11097

for.end:                                          ; preds = %for.cond
  %114 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11099
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %114, i32 0, i32 31, !dbg !11101
  %call = call zeroext i1 @test_bit(i64 13, i64* %chip) #12, !dbg !11102
  br i1 %call, label %if.then192, label %if.else227, !dbg !11103

if.then192:                                       ; preds = %for.end
  store i32 0, i32* %leds, align 4, !dbg !11104
  store i32 0, i32* %i, align 4, !dbg !11106
  br label %for.cond193, !dbg !11108

for.cond193:                                      ; preds = %for.inc215, %if.then192
  %115 = load i32, i32* %i, align 4, !dbg !11109
  %cmp194 = icmp slt i32 %115, 4, !dbg !11111
  br i1 %cmp194, label %for.body196, label %for.end217, !dbg !11112

for.body196:                                      ; preds = %for.cond193
  %116 = load i32, i32* %i, align 4, !dbg !11113
  %idxprom197 = sext i32 %116 to i64, !dbg !11116
  %arrayidx198 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 %idxprom197, !dbg !11116
  %117 = load i32, i32* %arrayidx198, align 4, !dbg !11116
  %cmp199 = icmp eq i32 %117, 1, !dbg !11117
  br i1 %cmp199, label %if.then201, label %if.else204, !dbg !11118

if.then201:                                       ; preds = %for.body196
  %118 = load i32, i32* %i, align 4, !dbg !11119
  %mul = mul i32 %118, 2, !dbg !11121
  %shl202 = shl i32 2, %mul, !dbg !11122
  %119 = load i32, i32* %leds, align 4, !dbg !11123
  %or203 = or i32 %119, %shl202, !dbg !11123
  store i32 %or203, i32* %leds, align 4, !dbg !11123
  br label %if.end214, !dbg !11124

if.else204:                                       ; preds = %for.body196
  %120 = load i32, i32* %i, align 4, !dbg !11125
  %idxprom205 = sext i32 %120 to i64, !dbg !11127
  %arrayidx206 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 %idxprom205, !dbg !11127
  %121 = load i32, i32* %arrayidx206, align 4, !dbg !11127
  %cmp207 = icmp eq i32 %121, 2, !dbg !11128
  br i1 %cmp207, label %if.then209, label %if.end213, !dbg !11129

if.then209:                                       ; preds = %if.else204
  %122 = load i32, i32* %i, align 4, !dbg !11130
  %mul210 = mul i32 %122, 2, !dbg !11132
  %shl211 = shl i32 1, %mul210, !dbg !11133
  %123 = load i32, i32* %leds, align 4, !dbg !11134
  %or212 = or i32 %123, %shl211, !dbg !11134
  store i32 %or212, i32* %leds, align 4, !dbg !11134
  br label %if.end213, !dbg !11135

if.end213:                                        ; preds = %if.then209, %if.else204
  br label %if.end214

if.end214:                                        ; preds = %if.end213, %if.then201
  br label %for.inc215, !dbg !11136

for.inc215:                                       ; preds = %if.end214
  %124 = load i32, i32* %i, align 4, !dbg !11137
  %inc216 = add i32 %124, 1, !dbg !11137
  store i32 %inc216, i32* %i, align 4, !dbg !11137
  br label %for.cond193, !dbg !11138, !llvm.loop !11139

for.end217:                                       ; preds = %for.cond193
  %125 = load i32, i32* %leds, align 4, !dbg !11141
  %126 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11143
  %ledstate218 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %126, i32 0, i32 43, !dbg !11144
  %127 = load i64, i64* %ledstate218, align 8, !dbg !11144
  %conv219 = trunc i64 %127 to i32, !dbg !11145
  %cmp220 = icmp ne i32 %125, %conv219, !dbg !11146
  br i1 %cmp220, label %if.then222, label %if.end226, !dbg !11147

if.then222:                                       ; preds = %for.end217
  %128 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11148
  %129 = load i32, i32* %leds, align 4, !dbg !11150
  %conv223 = trunc i32 %129 to i8, !dbg !11150
  call void @vpm_out(%struct.hfc_multi* %128, i32 0, i16 zeroext 427, i8 zeroext %conv223) #12, !dbg !11151
  %130 = load i32, i32* %leds, align 4, !dbg !11152
  %conv224 = sext i32 %130 to i64, !dbg !11152
  %131 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11153
  %ledstate225 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %131, i32 0, i32 43, !dbg !11154
  store i64 %conv224, i64* %ledstate225, align 8, !dbg !11155
  br label %if.end226, !dbg !11156

if.end226:                                        ; preds = %if.then222, %for.end217
  br label %if.end276, !dbg !11157

if.else227:                                       ; preds = %for.end
  %arrayidx228 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 3, !dbg !11158
  %132 = load i32, i32* %arrayidx228, align 4, !dbg !11158
  %cmp229 = icmp sgt i32 %132, 0, !dbg !11160
  %conv230 = zext i1 %cmp229 to i32, !dbg !11160
  %shl231 = shl i32 %conv230, 0, !dbg !11161
  %arrayidx232 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 1, !dbg !11162
  %133 = load i32, i32* %arrayidx232, align 4, !dbg !11162
  %cmp233 = icmp sgt i32 %133, 0, !dbg !11163
  %conv234 = zext i1 %cmp233 to i32, !dbg !11163
  %shl235 = shl i32 %conv234, 1, !dbg !11164
  %or236 = or i32 %shl231, %shl235, !dbg !11165
  %arrayidx237 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 0, !dbg !11166
  %134 = load i32, i32* %arrayidx237, align 16, !dbg !11166
  %cmp238 = icmp sgt i32 %134, 0, !dbg !11167
  %conv239 = zext i1 %cmp238 to i32, !dbg !11167
  %shl240 = shl i32 %conv239, 2, !dbg !11168
  %or241 = or i32 %or236, %shl240, !dbg !11169
  %arrayidx242 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 2, !dbg !11170
  %135 = load i32, i32* %arrayidx242, align 8, !dbg !11170
  %cmp243 = icmp sgt i32 %135, 0, !dbg !11171
  %conv244 = zext i1 %cmp243 to i32, !dbg !11171
  %shl245 = shl i32 %conv244, 3, !dbg !11172
  %or246 = or i32 %or241, %shl245, !dbg !11173
  %arrayidx247 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 3, !dbg !11174
  %136 = load i32, i32* %arrayidx247, align 4, !dbg !11174
  %and248 = and i32 %136, 1, !dbg !11175
  %shl249 = shl i32 %and248, 4, !dbg !11176
  %or250 = or i32 %or246, %shl249, !dbg !11177
  %arrayidx251 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 1, !dbg !11178
  %137 = load i32, i32* %arrayidx251, align 4, !dbg !11178
  %and252 = and i32 %137, 1, !dbg !11179
  %shl253 = shl i32 %and252, 5, !dbg !11180
  %or254 = or i32 %or250, %shl253, !dbg !11181
  %arrayidx255 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 0, !dbg !11182
  %138 = load i32, i32* %arrayidx255, align 16, !dbg !11182
  %and256 = and i32 %138, 1, !dbg !11183
  %shl257 = shl i32 %and256, 6, !dbg !11184
  %or258 = or i32 %or254, %shl257, !dbg !11185
  %arrayidx259 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 2, !dbg !11186
  %139 = load i32, i32* %arrayidx259, align 8, !dbg !11186
  %and260 = and i32 %139, 1, !dbg !11187
  %shl261 = shl i32 %and260, 7, !dbg !11188
  %or262 = or i32 %or258, %shl261, !dbg !11189
  store i32 %or262, i32* %leds, align 4, !dbg !11190
  %140 = load i32, i32* %leds, align 4, !dbg !11191
  %141 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11193
  %ledstate263 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %141, i32 0, i32 43, !dbg !11194
  %142 = load i64, i64* %ledstate263, align 8, !dbg !11194
  %conv264 = trunc i64 %142 to i32, !dbg !11195
  %cmp265 = icmp ne i32 %140, %conv264, !dbg !11196
  br i1 %cmp265, label %if.then267, label %if.end275, !dbg !11197

if.then267:                                       ; preds = %if.else227
  %143 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11198
  %HFC_outb_nodebug268 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %143, i32 0, i32 11, !dbg !11198
  %144 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug268, align 8, !dbg !11198
  %145 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11198
  %146 = load i32, i32* %leds, align 4, !dbg !11198
  %and269 = and i32 %146, 15, !dbg !11198
  %conv270 = trunc i32 %and269 to i8, !dbg !11198
  call void %144(%struct.hfc_multi* %145, i8 zeroext 67, i8 zeroext %conv270) #12, !dbg !11198
  %147 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11200
  %HFC_outb_nodebug271 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %147, i32 0, i32 11, !dbg !11200
  %148 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug271, align 8, !dbg !11200
  %149 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11200
  %150 = load i32, i32* %leds, align 4, !dbg !11200
  %shr = ashr i32 %150, 4, !dbg !11200
  %conv272 = trunc i32 %shr to i8, !dbg !11200
  call void %148(%struct.hfc_multi* %149, i8 zeroext 65, i8 zeroext %conv272) #12, !dbg !11200
  %151 = load i32, i32* %leds, align 4, !dbg !11201
  %conv273 = sext i32 %151 to i64, !dbg !11201
  %152 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11202
  %ledstate274 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %152, i32 0, i32 43, !dbg !11203
  store i64 %conv273, i64* %ledstate274, align 8, !dbg !11204
  br label %if.end275, !dbg !11205

if.end275:                                        ; preds = %if.then267, %if.else227
  br label %if.end276

if.end276:                                        ; preds = %if.end275, %if.end226
  br label %sw.epilog, !dbg !11206

sw.bb277:                                         ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !11207
  br label %for.cond278, !dbg !11209

for.cond278:                                      ; preds = %for.inc364, %sw.bb277
  %153 = load i32, i32* %i, align 4, !dbg !11210
  %cmp279 = icmp slt i32 %153, 2, !dbg !11212
  br i1 %cmp279, label %for.body281, label %for.end366, !dbg !11213

for.body281:                                      ; preds = %for.cond278
  store i32 0, i32* %state, align 4, !dbg !11214
  store i32 -1, i32* %active, align 4, !dbg !11216
  %154 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11217
  %chan282 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %154, i32 0, i32 60, !dbg !11218
  %155 = load i32, i32* %i, align 4, !dbg !11219
  %shl283 = shl i32 %155, 2, !dbg !11220
  %or284 = or i32 %shl283, 2, !dbg !11221
  %idxprom285 = sext i32 %or284 to i64, !dbg !11217
  %arrayidx286 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan282, i64 0, i64 %idxprom285, !dbg !11217
  %dch287 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx286, i32 0, i32 0, !dbg !11222
  %156 = load %struct.dchannel*, %struct.dchannel** %dch287, align 8, !dbg !11222
  store %struct.dchannel* %156, %struct.dchannel** %dch, align 8, !dbg !11223
  %157 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !11224
  %tobool288 = icmp ne %struct.dchannel* %157, null, !dbg !11224
  br i1 %tobool288, label %if.then289, label %if.end299, !dbg !11226

if.then289:                                       ; preds = %for.body281
  %158 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !11227
  %state290 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %158, i32 0, i32 4, !dbg !11229
  %159 = load i32, i32* %state290, align 8, !dbg !11229
  store i32 %159, i32* %state, align 4, !dbg !11230
  %160 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !11231
  %dev291 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %160, i32 0, i32 0, !dbg !11233
  %D292 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev291, i32 0, i32 0, !dbg !11234
  %protocol293 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D292, i32 0, i32 1, !dbg !11235
  %161 = load i32, i32* %protocol293, align 8, !dbg !11235
  %cmp294 = icmp eq i32 %161, 2, !dbg !11236
  br i1 %cmp294, label %if.then296, label %if.else297, !dbg !11237

if.then296:                                       ; preds = %if.then289
  store i32 3, i32* %active, align 4, !dbg !11238
  br label %if.end298, !dbg !11239

if.else297:                                       ; preds = %if.then289
  store i32 7, i32* %active, align 4, !dbg !11240
  br label %if.end298

if.end298:                                        ; preds = %if.else297, %if.then296
  br label %if.end299, !dbg !11241

if.end299:                                        ; preds = %if.end298, %for.body281
  %162 = load i32, i32* %state, align 4, !dbg !11242
  %tobool300 = icmp ne i32 %162, 0, !dbg !11242
  br i1 %tobool300, label %if.then301, label %if.else360, !dbg !11244

if.then301:                                       ; preds = %if.end299
  %163 = load i32, i32* %state, align 4, !dbg !11245
  %164 = load i32, i32* %active, align 4, !dbg !11248
  %cmp302 = icmp eq i32 %163, %164, !dbg !11249
  br i1 %cmp302, label %if.then304, label %if.else353, !dbg !11250

if.then304:                                       ; preds = %if.then301
  %165 = load i32, i32* %i, align 4, !dbg !11251
  %idxprom305 = sext i32 %165 to i64, !dbg !11253
  %arrayidx306 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 %idxprom305, !dbg !11253
  store i32 1, i32* %arrayidx306, align 4, !dbg !11254
  %166 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11255
  %activity_rx307 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %166, i32 0, i32 49, !dbg !11256
  %167 = load i32, i32* %activity_rx307, align 8, !dbg !11256
  %168 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11257
  %activity_tx308 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %168, i32 0, i32 48, !dbg !11258
  %169 = load i32, i32* %activity_tx308, align 4, !dbg !11259
  %or309 = or i32 %169, %167, !dbg !11259
  store i32 %or309, i32* %activity_tx308, align 4, !dbg !11259
  %170 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11260
  %flash310 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %170, i32 0, i32 50, !dbg !11262
  %171 = load i32, i32* %i, align 4, !dbg !11263
  %idxprom311 = sext i32 %171 to i64, !dbg !11260
  %arrayidx312 = getelementptr [8 x i32], [8 x i32]* %flash310, i64 0, i64 %idxprom311, !dbg !11260
  %172 = load i32, i32* %arrayidx312, align 4, !dbg !11260
  %tobool313 = icmp ne i32 %172, 0, !dbg !11260
  br i1 %tobool313, label %if.end323, label %land.lhs.true314, !dbg !11264

land.lhs.true314:                                 ; preds = %if.then304
  %173 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11265
  %activity_tx315 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %173, i32 0, i32 48, !dbg !11266
  %174 = load i32, i32* %activity_tx315, align 4, !dbg !11266
  %175 = load i32, i32* %i, align 4, !dbg !11267
  %shl316 = shl i32 1, %175, !dbg !11268
  %and317 = and i32 %174, %shl316, !dbg !11269
  %tobool318 = icmp ne i32 %and317, 0, !dbg !11269
  br i1 %tobool318, label %if.then319, label %if.end323, !dbg !11270

if.then319:                                       ; preds = %land.lhs.true314
  %176 = load i32, i32* @poll, align 4, !dbg !11271
  %177 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11272
  %flash320 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %177, i32 0, i32 50, !dbg !11273
  %178 = load i32, i32* %i, align 4, !dbg !11274
  %idxprom321 = sext i32 %178 to i64, !dbg !11272
  %arrayidx322 = getelementptr [8 x i32], [8 x i32]* %flash320, i64 0, i64 %idxprom321, !dbg !11272
  store i32 %176, i32* %arrayidx322, align 4, !dbg !11275
  br label %if.end323, !dbg !11272

if.end323:                                        ; preds = %if.then319, %land.lhs.true314, %if.then304
  %179 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11276
  %flash324 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %179, i32 0, i32 50, !dbg !11278
  %180 = load i32, i32* %i, align 4, !dbg !11279
  %idxprom325 = sext i32 %180 to i64, !dbg !11276
  %arrayidx326 = getelementptr [8 x i32], [8 x i32]* %flash324, i64 0, i64 %idxprom325, !dbg !11276
  %181 = load i32, i32* %arrayidx326, align 4, !dbg !11276
  %cmp327 = icmp ult i32 %181, 1024, !dbg !11280
  br i1 %cmp327, label %if.then329, label %if.end332, !dbg !11281

if.then329:                                       ; preds = %if.end323
  %182 = load i32, i32* %i, align 4, !dbg !11282
  %idxprom330 = sext i32 %182 to i64, !dbg !11283
  %arrayidx331 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 %idxprom330, !dbg !11283
  store i32 0, i32* %arrayidx331, align 4, !dbg !11284
  br label %if.end332, !dbg !11283

if.end332:                                        ; preds = %if.then329, %if.end323
  %183 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11285
  %flash333 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %183, i32 0, i32 50, !dbg !11287
  %184 = load i32, i32* %i, align 4, !dbg !11288
  %idxprom334 = sext i32 %184 to i64, !dbg !11285
  %arrayidx335 = getelementptr [8 x i32], [8 x i32]* %flash333, i64 0, i64 %idxprom334, !dbg !11285
  %185 = load i32, i32* %arrayidx335, align 4, !dbg !11285
  %cmp336 = icmp uge i32 %185, 2048, !dbg !11289
  br i1 %cmp336, label %if.then338, label %if.end342, !dbg !11290

if.then338:                                       ; preds = %if.end332
  %186 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11291
  %flash339 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %186, i32 0, i32 50, !dbg !11292
  %187 = load i32, i32* %i, align 4, !dbg !11293
  %idxprom340 = sext i32 %187 to i64, !dbg !11291
  %arrayidx341 = getelementptr [8 x i32], [8 x i32]* %flash339, i64 0, i64 %idxprom340, !dbg !11291
  store i32 0, i32* %arrayidx341, align 4, !dbg !11294
  br label %if.end342, !dbg !11291

if.end342:                                        ; preds = %if.then338, %if.end332
  %188 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11295
  %flash343 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %188, i32 0, i32 50, !dbg !11297
  %189 = load i32, i32* %i, align 4, !dbg !11298
  %idxprom344 = sext i32 %189 to i64, !dbg !11295
  %arrayidx345 = getelementptr [8 x i32], [8 x i32]* %flash343, i64 0, i64 %idxprom344, !dbg !11295
  %190 = load i32, i32* %arrayidx345, align 4, !dbg !11295
  %tobool346 = icmp ne i32 %190, 0, !dbg !11295
  br i1 %tobool346, label %if.then347, label %if.end352, !dbg !11299

if.then347:                                       ; preds = %if.end342
  %191 = load i32, i32* @poll, align 4, !dbg !11300
  %192 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11301
  %flash348 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %192, i32 0, i32 50, !dbg !11302
  %193 = load i32, i32* %i, align 4, !dbg !11303
  %idxprom349 = sext i32 %193 to i64, !dbg !11301
  %arrayidx350 = getelementptr [8 x i32], [8 x i32]* %flash348, i64 0, i64 %idxprom349, !dbg !11301
  %194 = load i32, i32* %arrayidx350, align 4, !dbg !11304
  %add351 = add i32 %194, %191, !dbg !11304
  store i32 %add351, i32* %arrayidx350, align 4, !dbg !11304
  br label %if.end352, !dbg !11301

if.end352:                                        ; preds = %if.then347, %if.end342
  br label %if.end359, !dbg !11305

if.else353:                                       ; preds = %if.then301
  %195 = load i32, i32* %i, align 4, !dbg !11306
  %idxprom354 = sext i32 %195 to i64, !dbg !11308
  %arrayidx355 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 %idxprom354, !dbg !11308
  store i32 2, i32* %arrayidx355, align 4, !dbg !11309
  %196 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11310
  %flash356 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %196, i32 0, i32 50, !dbg !11311
  %197 = load i32, i32* %i, align 4, !dbg !11312
  %idxprom357 = sext i32 %197 to i64, !dbg !11310
  %arrayidx358 = getelementptr [8 x i32], [8 x i32]* %flash356, i64 0, i64 %idxprom357, !dbg !11310
  store i32 0, i32* %arrayidx358, align 4, !dbg !11313
  br label %if.end359

if.end359:                                        ; preds = %if.else353, %if.end352
  br label %if.end363, !dbg !11314

if.else360:                                       ; preds = %if.end299
  %198 = load i32, i32* %i, align 4, !dbg !11315
  %idxprom361 = sext i32 %198 to i64, !dbg !11316
  %arrayidx362 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 %idxprom361, !dbg !11316
  store i32 0, i32* %arrayidx362, align 4, !dbg !11317
  br label %if.end363

if.end363:                                        ; preds = %if.else360, %if.end359
  br label %for.inc364, !dbg !11318

for.inc364:                                       ; preds = %if.end363
  %199 = load i32, i32* %i, align 4, !dbg !11319
  %inc365 = add i32 %199, 1, !dbg !11319
  store i32 %inc365, i32* %i, align 4, !dbg !11319
  br label %for.cond278, !dbg !11320, !llvm.loop !11321

for.end366:                                       ; preds = %for.cond278
  %arrayidx367 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 0, !dbg !11323
  %200 = load i32, i32* %arrayidx367, align 16, !dbg !11323
  %cmp368 = icmp sgt i32 %200, 0, !dbg !11324
  %conv369 = zext i1 %cmp368 to i32, !dbg !11324
  %arrayidx370 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 1, !dbg !11325
  %201 = load i32, i32* %arrayidx370, align 4, !dbg !11325
  %cmp371 = icmp sgt i32 %201, 0, !dbg !11326
  %conv372 = zext i1 %cmp371 to i32, !dbg !11326
  %shl373 = shl i32 %conv372, 1, !dbg !11327
  %or374 = or i32 %conv369, %shl373, !dbg !11328
  %arrayidx375 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 0, !dbg !11329
  %202 = load i32, i32* %arrayidx375, align 16, !dbg !11329
  %and376 = and i32 %202, 1, !dbg !11330
  %shl377 = shl i32 %and376, 2, !dbg !11331
  %or378 = or i32 %or374, %shl377, !dbg !11332
  %arrayidx379 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 1, !dbg !11333
  %203 = load i32, i32* %arrayidx379, align 4, !dbg !11333
  %and380 = and i32 %203, 1, !dbg !11334
  %shl381 = shl i32 %and380, 3, !dbg !11335
  %or382 = or i32 %or378, %shl381, !dbg !11336
  store i32 %or382, i32* %leds, align 4, !dbg !11337
  %204 = load i32, i32* %leds, align 4, !dbg !11338
  %205 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11340
  %ledstate383 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %205, i32 0, i32 43, !dbg !11341
  %206 = load i64, i64* %ledstate383, align 8, !dbg !11341
  %conv384 = trunc i64 %206 to i32, !dbg !11342
  %cmp385 = icmp ne i32 %204, %conv384, !dbg !11343
  br i1 %cmp385, label %if.then387, label %if.end410, !dbg !11344

if.then387:                                       ; preds = %for.end366
  %207 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11345
  %HFC_outb_nodebug388 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %207, i32 0, i32 11, !dbg !11345
  %208 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug388, align 8, !dbg !11345
  %209 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11345
  %arrayidx389 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 0, !dbg !11345
  %210 = load i32, i32* %arrayidx389, align 16, !dbg !11345
  %cmp390 = icmp sgt i32 %210, 0, !dbg !11345
  %conv391 = zext i1 %cmp390 to i32, !dbg !11345
  %shl392 = shl i32 %conv391, 2, !dbg !11345
  %arrayidx393 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 1, !dbg !11345
  %211 = load i32, i32* %arrayidx393, align 4, !dbg !11345
  %cmp394 = icmp sgt i32 %211, 0, !dbg !11345
  %conv395 = zext i1 %cmp394 to i32, !dbg !11345
  %shl396 = shl i32 %conv395, 3, !dbg !11345
  %or397 = or i32 %shl392, %shl396, !dbg !11345
  %conv398 = trunc i32 %or397 to i8, !dbg !11345
  call void %208(%struct.hfc_multi* %209, i8 zeroext 67, i8 zeroext %conv398) #12, !dbg !11345
  %212 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11347
  %HFC_outb_nodebug399 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %212, i32 0, i32 11, !dbg !11347
  %213 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug399, align 8, !dbg !11347
  %214 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11347
  %arrayidx400 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 0, !dbg !11347
  %215 = load i32, i32* %arrayidx400, align 16, !dbg !11347
  %and401 = and i32 %215, 1, !dbg !11347
  %shl402 = shl i32 %and401, 2, !dbg !11347
  %arrayidx403 = getelementptr [4 x i32], [4 x i32]* %led, i64 0, i64 1, !dbg !11347
  %216 = load i32, i32* %arrayidx403, align 4, !dbg !11347
  %and404 = and i32 %216, 1, !dbg !11347
  %shl405 = shl i32 %and404, 3, !dbg !11347
  %or406 = or i32 %shl402, %shl405, !dbg !11347
  %conv407 = trunc i32 %or406 to i8, !dbg !11347
  call void %213(%struct.hfc_multi* %214, i8 zeroext 65, i8 zeroext %conv407) #12, !dbg !11347
  %217 = load i32, i32* %leds, align 4, !dbg !11348
  %conv408 = sext i32 %217 to i64, !dbg !11348
  %218 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11349
  %ledstate409 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %218, i32 0, i32 43, !dbg !11350
  store i64 %conv408, i64* %ledstate409, align 8, !dbg !11351
  br label %if.end410, !dbg !11352

if.end410:                                        ; preds = %if.then387, %for.end366
  br label %sw.epilog, !dbg !11353

sw.bb411:                                         ; preds = %entry
  store i64 255, i64* %lled, align 8, !dbg !11354
  store i32 0, i32* %i, align 4, !dbg !11355
  br label %for.cond412, !dbg !11357

for.cond412:                                      ; preds = %for.inc495, %sw.bb411
  %219 = load i32, i32* %i, align 4, !dbg !11358
  %cmp413 = icmp slt i32 %219, 8, !dbg !11360
  br i1 %cmp413, label %for.body415, label %for.end497, !dbg !11361

for.body415:                                      ; preds = %for.cond412
  store i32 0, i32* %state, align 4, !dbg !11362
  store i32 -1, i32* %active, align 4, !dbg !11364
  %220 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11365
  %chan416 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %220, i32 0, i32 60, !dbg !11366
  %221 = load i32, i32* %i, align 4, !dbg !11367
  %shl417 = shl i32 %221, 2, !dbg !11368
  %or418 = or i32 %shl417, 2, !dbg !11369
  %idxprom419 = sext i32 %or418 to i64, !dbg !11365
  %arrayidx420 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan416, i64 0, i64 %idxprom419, !dbg !11365
  %dch421 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx420, i32 0, i32 0, !dbg !11370
  %222 = load %struct.dchannel*, %struct.dchannel** %dch421, align 8, !dbg !11370
  store %struct.dchannel* %222, %struct.dchannel** %dch, align 8, !dbg !11371
  %223 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !11372
  %tobool422 = icmp ne %struct.dchannel* %223, null, !dbg !11372
  br i1 %tobool422, label %if.then423, label %if.end433, !dbg !11374

if.then423:                                       ; preds = %for.body415
  %224 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !11375
  %state424 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %224, i32 0, i32 4, !dbg !11377
  %225 = load i32, i32* %state424, align 8, !dbg !11377
  store i32 %225, i32* %state, align 4, !dbg !11378
  %226 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !11379
  %dev425 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %226, i32 0, i32 0, !dbg !11381
  %D426 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev425, i32 0, i32 0, !dbg !11382
  %protocol427 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D426, i32 0, i32 1, !dbg !11383
  %227 = load i32, i32* %protocol427, align 8, !dbg !11383
  %cmp428 = icmp eq i32 %227, 2, !dbg !11384
  br i1 %cmp428, label %if.then430, label %if.else431, !dbg !11385

if.then430:                                       ; preds = %if.then423
  store i32 3, i32* %active, align 4, !dbg !11386
  br label %if.end432, !dbg !11387

if.else431:                                       ; preds = %if.then423
  store i32 7, i32* %active, align 4, !dbg !11388
  br label %if.end432

if.end432:                                        ; preds = %if.else431, %if.then430
  br label %if.end433, !dbg !11389

if.end433:                                        ; preds = %if.end432, %for.body415
  %228 = load i32, i32* %state, align 4, !dbg !11390
  %tobool434 = icmp ne i32 %228, 0, !dbg !11390
  br i1 %tobool434, label %if.then435, label %if.end494, !dbg !11392

if.then435:                                       ; preds = %if.end433
  %229 = load i32, i32* %state, align 4, !dbg !11393
  %230 = load i32, i32* %active, align 4, !dbg !11396
  %cmp436 = icmp eq i32 %229, %230, !dbg !11397
  br i1 %cmp436, label %if.then438, label %if.else489, !dbg !11398

if.then438:                                       ; preds = %if.then435
  %231 = load i32, i32* %i, align 4, !dbg !11399
  %shl439 = shl i32 1, %231, !dbg !11401
  %neg = xor i32 %shl439, -1, !dbg !11402
  %conv440 = sext i32 %neg to i64, !dbg !11402
  %232 = load i64, i64* %lled, align 8, !dbg !11403
  %and441 = and i64 %232, %conv440, !dbg !11403
  store i64 %and441, i64* %lled, align 8, !dbg !11403
  %233 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11404
  %activity_rx442 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %233, i32 0, i32 49, !dbg !11405
  %234 = load i32, i32* %activity_rx442, align 8, !dbg !11405
  %235 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11406
  %activity_tx443 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %235, i32 0, i32 48, !dbg !11407
  %236 = load i32, i32* %activity_tx443, align 4, !dbg !11408
  %or444 = or i32 %236, %234, !dbg !11408
  store i32 %or444, i32* %activity_tx443, align 4, !dbg !11408
  %237 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11409
  %flash445 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %237, i32 0, i32 50, !dbg !11411
  %238 = load i32, i32* %i, align 4, !dbg !11412
  %idxprom446 = sext i32 %238 to i64, !dbg !11409
  %arrayidx447 = getelementptr [8 x i32], [8 x i32]* %flash445, i64 0, i64 %idxprom446, !dbg !11409
  %239 = load i32, i32* %arrayidx447, align 4, !dbg !11409
  %tobool448 = icmp ne i32 %239, 0, !dbg !11409
  br i1 %tobool448, label %if.end458, label %land.lhs.true449, !dbg !11413

land.lhs.true449:                                 ; preds = %if.then438
  %240 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11414
  %activity_tx450 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %240, i32 0, i32 48, !dbg !11415
  %241 = load i32, i32* %activity_tx450, align 4, !dbg !11415
  %242 = load i32, i32* %i, align 4, !dbg !11416
  %shl451 = shl i32 1, %242, !dbg !11417
  %and452 = and i32 %241, %shl451, !dbg !11418
  %tobool453 = icmp ne i32 %and452, 0, !dbg !11418
  br i1 %tobool453, label %if.then454, label %if.end458, !dbg !11419

if.then454:                                       ; preds = %land.lhs.true449
  %243 = load i32, i32* @poll, align 4, !dbg !11420
  %244 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11421
  %flash455 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %244, i32 0, i32 50, !dbg !11422
  %245 = load i32, i32* %i, align 4, !dbg !11423
  %idxprom456 = sext i32 %245 to i64, !dbg !11421
  %arrayidx457 = getelementptr [8 x i32], [8 x i32]* %flash455, i64 0, i64 %idxprom456, !dbg !11421
  store i32 %243, i32* %arrayidx457, align 4, !dbg !11424
  br label %if.end458, !dbg !11421

if.end458:                                        ; preds = %if.then454, %land.lhs.true449, %if.then438
  %246 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11425
  %flash459 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %246, i32 0, i32 50, !dbg !11427
  %247 = load i32, i32* %i, align 4, !dbg !11428
  %idxprom460 = sext i32 %247 to i64, !dbg !11425
  %arrayidx461 = getelementptr [8 x i32], [8 x i32]* %flash459, i64 0, i64 %idxprom460, !dbg !11425
  %248 = load i32, i32* %arrayidx461, align 4, !dbg !11425
  %cmp462 = icmp ult i32 %248, 1024, !dbg !11429
  br i1 %cmp462, label %if.then464, label %if.end468, !dbg !11430

if.then464:                                       ; preds = %if.end458
  %249 = load i32, i32* %i, align 4, !dbg !11431
  %shl465 = shl i32 1, %249, !dbg !11432
  %conv466 = sext i32 %shl465 to i64, !dbg !11433
  %250 = load i64, i64* %lled, align 8, !dbg !11434
  %or467 = or i64 %250, %conv466, !dbg !11434
  store i64 %or467, i64* %lled, align 8, !dbg !11434
  br label %if.end468, !dbg !11435

if.end468:                                        ; preds = %if.then464, %if.end458
  %251 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11436
  %flash469 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %251, i32 0, i32 50, !dbg !11438
  %252 = load i32, i32* %i, align 4, !dbg !11439
  %idxprom470 = sext i32 %252 to i64, !dbg !11436
  %arrayidx471 = getelementptr [8 x i32], [8 x i32]* %flash469, i64 0, i64 %idxprom470, !dbg !11436
  %253 = load i32, i32* %arrayidx471, align 4, !dbg !11436
  %cmp472 = icmp uge i32 %253, 2048, !dbg !11440
  br i1 %cmp472, label %if.then474, label %if.end478, !dbg !11441

if.then474:                                       ; preds = %if.end468
  %254 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11442
  %flash475 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %254, i32 0, i32 50, !dbg !11443
  %255 = load i32, i32* %i, align 4, !dbg !11444
  %idxprom476 = sext i32 %255 to i64, !dbg !11442
  %arrayidx477 = getelementptr [8 x i32], [8 x i32]* %flash475, i64 0, i64 %idxprom476, !dbg !11442
  store i32 0, i32* %arrayidx477, align 4, !dbg !11445
  br label %if.end478, !dbg !11442

if.end478:                                        ; preds = %if.then474, %if.end468
  %256 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11446
  %flash479 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %256, i32 0, i32 50, !dbg !11448
  %257 = load i32, i32* %i, align 4, !dbg !11449
  %idxprom480 = sext i32 %257 to i64, !dbg !11446
  %arrayidx481 = getelementptr [8 x i32], [8 x i32]* %flash479, i64 0, i64 %idxprom480, !dbg !11446
  %258 = load i32, i32* %arrayidx481, align 4, !dbg !11446
  %tobool482 = icmp ne i32 %258, 0, !dbg !11446
  br i1 %tobool482, label %if.then483, label %if.end488, !dbg !11450

if.then483:                                       ; preds = %if.end478
  %259 = load i32, i32* @poll, align 4, !dbg !11451
  %260 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11452
  %flash484 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %260, i32 0, i32 50, !dbg !11453
  %261 = load i32, i32* %i, align 4, !dbg !11454
  %idxprom485 = sext i32 %261 to i64, !dbg !11452
  %arrayidx486 = getelementptr [8 x i32], [8 x i32]* %flash484, i64 0, i64 %idxprom485, !dbg !11452
  %262 = load i32, i32* %arrayidx486, align 4, !dbg !11455
  %add487 = add i32 %262, %259, !dbg !11455
  store i32 %add487, i32* %arrayidx486, align 4, !dbg !11455
  br label %if.end488, !dbg !11452

if.end488:                                        ; preds = %if.then483, %if.end478
  br label %if.end493, !dbg !11456

if.else489:                                       ; preds = %if.then435
  %263 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11457
  %flash490 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %263, i32 0, i32 50, !dbg !11458
  %264 = load i32, i32* %i, align 4, !dbg !11459
  %idxprom491 = sext i32 %264 to i64, !dbg !11457
  %arrayidx492 = getelementptr [8 x i32], [8 x i32]* %flash490, i64 0, i64 %idxprom491, !dbg !11457
  store i32 0, i32* %arrayidx492, align 4, !dbg !11460
  br label %if.end493

if.end493:                                        ; preds = %if.else489, %if.end488
  br label %if.end494, !dbg !11461

if.end494:                                        ; preds = %if.end493, %if.end433
  br label %for.inc495, !dbg !11462

for.inc495:                                       ; preds = %if.end494
  %265 = load i32, i32* %i, align 4, !dbg !11463
  %inc496 = add i32 %265, 1, !dbg !11463
  store i32 %inc496, i32* %i, align 4, !dbg !11463
  br label %for.cond412, !dbg !11464, !llvm.loop !11465

for.end497:                                       ; preds = %for.cond412
  %266 = load i64, i64* %lled, align 8, !dbg !11467
  %shl498 = shl i64 %266, 24, !dbg !11468
  %267 = load i64, i64* %lled, align 8, !dbg !11469
  %shl499 = shl i64 %267, 16, !dbg !11470
  %or500 = or i64 %shl498, %shl499, !dbg !11471
  %268 = load i64, i64* %lled, align 8, !dbg !11472
  %shl501 = shl i64 %268, 8, !dbg !11473
  %or502 = or i64 %or500, %shl501, !dbg !11474
  %269 = load i64, i64* %lled, align 8, !dbg !11475
  %or503 = or i64 %or502, %269, !dbg !11476
  store i64 %or503, i64* %leddw, align 8, !dbg !11477
  %270 = load i64, i64* %leddw, align 8, !dbg !11478
  %271 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11480
  %ledstate504 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %271, i32 0, i32 43, !dbg !11481
  %272 = load i64, i64* %ledstate504, align 8, !dbg !11481
  %cmp505 = icmp ne i64 %270, %272, !dbg !11482
  br i1 %cmp505, label %if.then507, label %if.end516, !dbg !11483

if.then507:                                       ; preds = %for.end497
  %273 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11484
  %HFC_outb_nodebug508 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %273, i32 0, i32 11, !dbg !11484
  %274 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug508, align 8, !dbg !11484
  %275 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11484
  call void %274(%struct.hfc_multi* %275, i8 zeroext 2, i8 zeroext 33) #12, !dbg !11484
  %276 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11486
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %276, i32 0, i32 29, !dbg !11487
  %277 = load i64, i64* %pci_iobase, align 8, !dbg !11487
  %add509 = add i64 %277, 4, !dbg !11488
  %conv510 = trunc i64 %add509 to i32, !dbg !11486
  call void @outw(i16 zeroext 16384, i32 %conv510) #12, !dbg !11489
  %278 = load i64, i64* %leddw, align 8, !dbg !11490
  %conv511 = trunc i64 %278 to i32, !dbg !11490
  %279 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11491
  %pci_iobase512 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %279, i32 0, i32 29, !dbg !11492
  %280 = load i64, i64* %pci_iobase512, align 8, !dbg !11492
  %conv513 = trunc i64 %280 to i32, !dbg !11491
  call void @outl(i32 %conv511, i32 %conv513) #12, !dbg !11493
  %281 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11494
  %HFC_outb_nodebug514 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %281, i32 0, i32 11, !dbg !11494
  %282 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug514, align 8, !dbg !11494
  %283 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11494
  call void %282(%struct.hfc_multi* %283, i8 zeroext 2, i8 zeroext 32) #12, !dbg !11494
  %284 = load i64, i64* %leddw, align 8, !dbg !11495
  %285 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11496
  %ledstate515 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %285, i32 0, i32 43, !dbg !11497
  store i64 %284, i64* %ledstate515, align 8, !dbg !11498
  br label %if.end516, !dbg !11499

if.end516:                                        ; preds = %if.then507, %for.end497
  br label %sw.epilog, !dbg !11500

sw.epilog:                                        ; preds = %entry, %if.end516, %if.end410, %if.end276, %if.end105
  %286 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11501
  %activity_tx517 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %286, i32 0, i32 48, !dbg !11502
  store i32 0, i32* %activity_tx517, align 4, !dbg !11503
  %287 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11504
  %activity_rx518 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %287, i32 0, i32 49, !dbg !11505
  store i32 0, i32* %activity_rx518, align 8, !dbg !11506
  ret void, !dbg !11507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @release_io_hfcmulti(%struct.hfc_multi* %hc) #2 !dbg !11508 {
entry:
  %lock.addr.i89 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i89, metadata !10043, metadata !DIExpression()), !dbg !11509
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !11513
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !11514
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %plx_acc_32 = alloca i8*, align 8
  %pv = alloca i32, align 4
  %plx_flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !11521, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.declare(metadata i8** %plx_acc_32, metadata !11523, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.declare(metadata i32* %pv, metadata !11525, metadata !DIExpression()), !dbg !11526
  call void @llvm.dbg.declare(metadata i64* %plx_flags, metadata !11527, metadata !DIExpression()), !dbg !11528
  %0 = load i32, i32* @debug, align 4, !dbg !11529
  %and = and i32 %0, 262144, !dbg !11531
  %tobool = icmp ne i32 %and, 0, !dbg !11531
  br i1 %tobool, label %if.then, label %if.end, !dbg !11532

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.release_io_hfcmulti, i64 0, i64 0)) #13, !dbg !11533
  br label %if.end, !dbg !11533

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11534
  %hw = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %1, i32 0, i32 30, !dbg !11535
  %r_cirm = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw, i32 0, i32 2, !dbg !11536
  %2 = load i8, i8* %r_cirm, align 2, !dbg !11537
  %conv = zext i8 %2 to i32, !dbg !11537
  %or = or i32 %conv, 8, !dbg !11537
  %conv1 = trunc i32 %or to i8, !dbg !11537
  store i8 %conv1, i8* %r_cirm, align 2, !dbg !11537
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11538
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 10, !dbg !11538
  %4 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !11538
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11538
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11538
  %hw2 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 30, !dbg !11538
  %r_cirm3 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw2, i32 0, i32 2, !dbg !11538
  %7 = load i8, i8* %r_cirm3, align 2, !dbg !11538
  call void %4(%struct.hfc_multi* %5, i8 zeroext 0, i8 zeroext %7) #12, !dbg !11538
  call void @__const_udelay(i64 4295000) #12, !dbg !11539
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11544
  %hw4 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 30, !dbg !11545
  %r_cirm5 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw4, i32 0, i32 2, !dbg !11546
  %9 = load i8, i8* %r_cirm5, align 2, !dbg !11547
  %conv6 = zext i8 %9 to i32, !dbg !11547
  %and7 = and i32 %conv6, -9, !dbg !11547
  %conv8 = trunc i32 %and7 to i8, !dbg !11547
  store i8 %conv8, i8* %r_cirm5, align 2, !dbg !11547
  %10 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11548
  %HFC_outb9 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %10, i32 0, i32 10, !dbg !11548
  %11 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb9, align 8, !dbg !11548
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11548
  %13 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11548
  %hw10 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %13, i32 0, i32 30, !dbg !11548
  %r_cirm11 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw10, i32 0, i32 2, !dbg !11548
  %14 = load i8, i8* %r_cirm11, align 2, !dbg !11548
  call void %11(%struct.hfc_multi* %12, i8 zeroext 0, i8 zeroext %14) #12, !dbg !11548
  call void @__const_udelay(i64 4295000) #12, !dbg !11549
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11554
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 31, !dbg !11555
  %call12 = call zeroext i1 @test_bit(i64 14, i64* %chip) #12, !dbg !11556
  br i1 %call12, label %land.lhs.true, label %if.end53, !dbg !11557

land.lhs.true:                                    ; preds = %if.end
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11558
  %plx_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %16, i32 0, i32 23, !dbg !11559
  %17 = load i8*, i8** %plx_membase, align 8, !dbg !11559
  %tobool14 = icmp ne i8* %17, null, !dbg !11558
  br i1 %tobool14, label %if.then15, label %if.end53, !dbg !11560

if.then15:                                        ; preds = %land.lhs.true
  %18 = load i32, i32* @debug, align 4, !dbg !11561
  %and16 = and i32 %18, 524288, !dbg !11563
  %tobool17 = icmp ne i32 %and16, 0, !dbg !11563
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !11564

if.then18:                                        ; preds = %if.then15
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11565
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %19, i32 0, i32 2, !dbg !11566
  %20 = load i32, i32* %id, align 8, !dbg !11566
  %add = add i32 %20, 1, !dbg !11567
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.release_io_hfcmulti, i64 0, i64 0), i32 %add) #13, !dbg !11568
  br label %if.end20, !dbg !11568

if.end20:                                         ; preds = %if.then18, %if.then15
  br label %do.body, !dbg !11569

do.body:                                          ; preds = %if.end20
  br label %do.body21, !dbg !11570

do.body21:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11571, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11574, metadata !DIExpression()), !dbg !11573
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11573
  %conv22 = zext i1 %cmp to i32, !dbg !11573
  store i32 1, i32* %tmp, align 4, !dbg !11573
  %21 = load i32, i32* %tmp, align 4, !dbg !11573
  br label %do.body23, !dbg !11575

do.body23:                                        ; preds = %do.body21
  br label %do.body24, !dbg !11576

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !11577

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11579, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !11583, metadata !DIExpression()), !dbg !11582
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !11582
  %conv29 = zext i1 %cmp28 to i32, !dbg !11582
  store i32 1, i32* %tmp30, align 4, !dbg !11582
  %22 = load i32, i32* %tmp30, align 4, !dbg !11582
  %call31 = call i64 @arch_local_irq_save() #12, !dbg !11584
  store i64 %call31, i64* %plx_flags, align 8, !dbg !11584
  br label %do.end, !dbg !11584

do.end:                                           ; preds = %do.body25
  br label %do.end32, !dbg !11577

do.end32:                                         ; preds = %do.end
  br label %do.body33, !dbg !11576

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11585, !srcloc !11586
  br label %do.body34, !dbg !11585

do.body34:                                        ; preds = %do.body33
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11587
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !11588
  %rlock.i = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !11588
  br label %do.end36, !dbg !11589

do.end36:                                         ; preds = %do.body34
  br label %do.end37, !dbg !11585

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !11576

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !11575

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !11570

do.end40:                                         ; preds = %do.end39
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11590
  %plx_membase41 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %25, i32 0, i32 23, !dbg !11591
  %26 = load i8*, i8** %plx_membase41, align 8, !dbg !11591
  %add.ptr = getelementptr i8, i8* %26, i64 84, !dbg !11592
  store i8* %add.ptr, i8** %plx_acc_32, align 8, !dbg !11593
  %27 = load i8*, i8** %plx_acc_32, align 8, !dbg !11594
  call void @writel(i32 38477824, i8* %27) #12, !dbg !11595
  %28 = load i8*, i8** %plx_acc_32, align 8, !dbg !11596
  %call42 = call i32 @readl(i8* %28) #12, !dbg !11597
  store i32 %call42, i32* %pv, align 4, !dbg !11598
  %29 = load i32, i32* %pv, align 4, !dbg !11599
  %and43 = and i32 %29, -8388609, !dbg !11599
  store i32 %and43, i32* %pv, align 4, !dbg !11599
  %30 = load i32, i32* %pv, align 4, !dbg !11600
  %or44 = or i32 %30, 131072, !dbg !11600
  store i32 %or44, i32* %pv, align 4, !dbg !11600
  %31 = load i32, i32* %pv, align 4, !dbg !11601
  %and45 = and i32 %31, -1048577, !dbg !11601
  store i32 %and45, i32* %pv, align 4, !dbg !11601
  %32 = load i32, i32* %pv, align 4, !dbg !11602
  %and46 = and i32 %32, -16385, !dbg !11602
  store i32 %and46, i32* %pv, align 4, !dbg !11602
  %33 = load i32, i32* %pv, align 4, !dbg !11603
  %and47 = and i32 %33, -67108865, !dbg !11603
  store i32 %and47, i32* %pv, align 4, !dbg !11603
  %34 = load i32, i32* %pv, align 4, !dbg !11604
  %35 = load i8*, i8** %plx_acc_32, align 8, !dbg !11605
  call void @writel(i32 %34, i8* %35) #12, !dbg !11606
  %36 = load i32, i32* @debug, align 4, !dbg !11607
  %and48 = and i32 %36, 262144, !dbg !11609
  %tobool49 = icmp ne i32 %and48, 0, !dbg !11609
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !11610

if.then50:                                        ; preds = %do.end40
  %37 = load i32, i32* %pv, align 4, !dbg !11611
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.release_io_hfcmulti, i64 0, i64 0), i32 %37) #13, !dbg !11612
  br label %if.end52, !dbg !11612

if.end52:                                         ; preds = %if.then50, %do.end40
  %38 = load i64, i64* %plx_flags, align 8, !dbg !11613
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i89, align 8
  store i64 %38, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !11614
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !11614
  store i32 1, i32* %tmp.i, align 4, !dbg !11614
  %39 = load i32, i32* %tmp.i, align 4, !dbg !11614
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !11615
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !11615
  store i32 1, i32* %tmp8.i, align 4, !dbg !11615
  %40 = load i32, i32* %tmp8.i, align 4, !dbg !11615
  %41 = load i64, i64* %flags.addr.i, align 8, !dbg !11616
  call void @arch_local_irq_restore(i64 %41) #14, !dbg !11616
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11617, !srcloc !10125
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i89, align 8, !dbg !11618
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !11618
  %rlock.i90 = bitcast %union.anon.1* %43 to %struct.raw_spinlock*, !dbg !11618
  br label %if.end53, !dbg !11619

if.end53:                                         ; preds = %if.end52, %land.lhs.true, %if.end
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11620
  %chip54 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %44, i32 0, i32 31, !dbg !11621
  %call55 = call zeroext i1 @test_and_clear_bit(i64 14, i64* %chip54) #12, !dbg !11622
  %45 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11623
  %pci_dev = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %45, i32 0, i32 8, !dbg !11625
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !11625
  %tobool56 = icmp ne %struct.pci_dev* %46, null, !dbg !11623
  br i1 %tobool56, label %if.then57, label %if.end60, !dbg !11626

if.then57:                                        ; preds = %if.end53
  %47 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11627
  %pci_dev58 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %47, i32 0, i32 8, !dbg !11628
  %48 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev58, align 8, !dbg !11628
  %call59 = call i32 @pci_write_config_word(%struct.pci_dev* %48, i32 4, i16 zeroext 0) #12, !dbg !11629
  br label %if.end60, !dbg !11629

if.end60:                                         ; preds = %if.then57, %if.end53
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11630
  %pci_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 22, !dbg !11632
  %50 = load i8*, i8** %pci_membase, align 8, !dbg !11632
  %tobool61 = icmp ne i8* %50, null, !dbg !11630
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !11633

if.then62:                                        ; preds = %if.end60
  %51 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11634
  %pci_membase63 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %51, i32 0, i32 22, !dbg !11635
  %52 = load i8*, i8** %pci_membase63, align 8, !dbg !11635
  call void @iounmap(i8* %52) #12, !dbg !11636
  br label %if.end64, !dbg !11636

if.end64:                                         ; preds = %if.then62, %if.end60
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11637
  %plx_membase65 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %53, i32 0, i32 23, !dbg !11639
  %54 = load i8*, i8** %plx_membase65, align 8, !dbg !11639
  %tobool66 = icmp ne i8* %54, null, !dbg !11637
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !11640

if.then67:                                        ; preds = %if.end64
  %55 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11641
  %plx_membase68 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %55, i32 0, i32 23, !dbg !11642
  %56 = load i8*, i8** %plx_membase68, align 8, !dbg !11642
  call void @iounmap(i8* %56) #12, !dbg !11643
  br label %if.end69, !dbg !11643

if.end69:                                         ; preds = %if.then67, %if.end64
  %57 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11644
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %57, i32 0, i32 29, !dbg !11646
  %58 = load i64, i64* %pci_iobase, align 8, !dbg !11646
  %tobool70 = icmp ne i64 %58, 0, !dbg !11644
  br i1 %tobool70, label %if.then71, label %if.end73, !dbg !11647

if.then71:                                        ; preds = %if.end69
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11648
  %pci_iobase72 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %59, i32 0, i32 29, !dbg !11648
  %60 = load i64, i64* %pci_iobase72, align 8, !dbg !11648
  call void @__release_region(%struct.resource* @ioport_resource, i64 %60, i64 8) #12, !dbg !11648
  br label %if.end73, !dbg !11648

if.end73:                                         ; preds = %if.then71, %if.end69
  %61 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11649
  %xhfc_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %61, i32 0, i32 25, !dbg !11651
  %62 = load i8*, i8** %xhfc_membase, align 8, !dbg !11651
  %tobool74 = icmp ne i8* %62, null, !dbg !11649
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !11652

if.then75:                                        ; preds = %if.end73
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11653
  %xhfc_membase76 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %63, i32 0, i32 25, !dbg !11654
  %64 = load i8*, i8** %xhfc_membase76, align 8, !dbg !11654
  call void @iounmap(i8* %64) #12, !dbg !11655
  br label %if.end77, !dbg !11655

if.end77:                                         ; preds = %if.then75, %if.end73
  %65 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11656
  %pci_dev78 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %65, i32 0, i32 8, !dbg !11658
  %66 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev78, align 8, !dbg !11658
  %tobool79 = icmp ne %struct.pci_dev* %66, null, !dbg !11656
  br i1 %tobool79, label %if.then80, label %if.end83, !dbg !11659

if.then80:                                        ; preds = %if.end77
  %67 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11660
  %pci_dev81 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %67, i32 0, i32 8, !dbg !11662
  %68 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev81, align 8, !dbg !11662
  call void @pci_disable_device(%struct.pci_dev* %68) #12, !dbg !11663
  %69 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11664
  %pci_dev82 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %69, i32 0, i32 8, !dbg !11665
  %70 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev82, align 8, !dbg !11665
  call void @pci_set_drvdata(%struct.pci_dev* %70, i8* null) #12, !dbg !11666
  br label %if.end83, !dbg !11667

if.end83:                                         ; preds = %if.then80, %if.end77
  %71 = load i32, i32* @debug, align 4, !dbg !11668
  %and84 = and i32 %71, 262144, !dbg !11670
  %tobool85 = icmp ne i32 %and84, 0, !dbg !11670
  br i1 %tobool85, label %if.then86, label %if.end88, !dbg !11671

if.then86:                                        ; preds = %if.end83
  %call87 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.release_io_hfcmulti, i64 0, i64 0)) #13, !dbg !11672
  br label %if.end88, !dbg !11672

if.end88:                                         ; preds = %if.then86, %if.end83
  ret void, !dbg !11673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #2 !dbg !11674 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11678, metadata !DIExpression()), !dbg !11679
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11680
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !11681
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11682
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !11683
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !11684
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11685
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !11686
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !11687
  ret void, !dbg !11688
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !11689 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !11690, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11693, metadata !DIExpression()), !dbg !11692
  %0 = load i64, i64* %__edi, align 8, !dbg !11692
  store i64 %0, i64* %__edi, align 8, !dbg !11692
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11694, metadata !DIExpression()), !dbg !11692
  %1 = load i64, i64* %__esi, align 8, !dbg !11692
  store i64 %1, i64* %__esi, align 8, !dbg !11692
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11695, metadata !DIExpression()), !dbg !11692
  %2 = load i64, i64* %__edx, align 8, !dbg !11692
  store i64 %2, i64* %__edx, align 8, !dbg !11692
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11696, metadata !DIExpression()), !dbg !11692
  %3 = load i64, i64* %__ecx, align 8, !dbg !11692
  store i64 %3, i64* %__ecx, align 8, !dbg !11692
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11697, metadata !DIExpression()), !dbg !11692
  %4 = load i64, i64* %__eax, align 8, !dbg !11692
  store i64 %4, i64* %__eax, align 8, !dbg !11692
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !11692
  %6 = call i64 @llvm.read_register.i64(metadata !10006), !dbg !11698
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !11698, !srcloc !11701
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11698
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11698
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11698
  call void @llvm.write_register.i64(metadata !10006, i64 %asmresult1), !dbg !11698
  %8 = load i64, i64* %__eax, align 8, !dbg !11698
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !11702, metadata !DIExpression()), !dbg !11704
  store i64 -1, i64* %__mask, align 8, !dbg !11704
  %9 = load i64, i64* %__mask, align 8, !dbg !11704
  store i64 %9, i64* %tmp, align 8, !dbg !11704
  %10 = load i64, i64* %tmp, align 8, !dbg !11704
  %and = and i64 %8, %10, !dbg !11698
  store i64 %and, i64* %__ret, align 8, !dbg !11698
  %11 = load i64, i64* %__ret, align 8, !dbg !11692
  store i64 %11, i64* %tmp2, align 8, !dbg !11705
  %12 = load i64, i64* %tmp2, align 8, !dbg !11692
  ret i64 %12, !dbg !11706
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !11707 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11708, metadata !DIExpression()), !dbg !11710
  %0 = load i64, i64* %__edi, align 8, !dbg !11710
  store i64 %0, i64* %__edi, align 8, !dbg !11710
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11711, metadata !DIExpression()), !dbg !11710
  %1 = load i64, i64* %__esi, align 8, !dbg !11710
  store i64 %1, i64* %__esi, align 8, !dbg !11710
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11712, metadata !DIExpression()), !dbg !11710
  %2 = load i64, i64* %__edx, align 8, !dbg !11710
  store i64 %2, i64* %__edx, align 8, !dbg !11710
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11713, metadata !DIExpression()), !dbg !11710
  %3 = load i64, i64* %__ecx, align 8, !dbg !11710
  store i64 %3, i64* %__ecx, align 8, !dbg !11710
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11714, metadata !DIExpression()), !dbg !11710
  %4 = load i64, i64* %__eax, align 8, !dbg !11710
  store i64 %4, i64* %__eax, align 8, !dbg !11710
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !11710
  %6 = call i64 @llvm.read_register.i64(metadata !10006), !dbg !11710
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !11710, !srcloc !11715
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11710
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11710
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11710
  call void @llvm.write_register.i64(metadata !10006, i64 %asmresult1), !dbg !11710
  ret void, !dbg !11716
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !11717 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !11720, metadata !DIExpression()), !dbg !11721
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11722, metadata !DIExpression()), !dbg !11724
  %0 = load i64, i64* %__edi, align 8, !dbg !11724
  store i64 %0, i64* %__edi, align 8, !dbg !11724
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11725, metadata !DIExpression()), !dbg !11724
  %1 = load i64, i64* %__esi, align 8, !dbg !11724
  store i64 %1, i64* %__esi, align 8, !dbg !11724
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11726, metadata !DIExpression()), !dbg !11724
  %2 = load i64, i64* %__edx, align 8, !dbg !11724
  store i64 %2, i64* %__edx, align 8, !dbg !11724
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11727, metadata !DIExpression()), !dbg !11724
  %3 = load i64, i64* %__ecx, align 8, !dbg !11724
  store i64 %3, i64* %__ecx, align 8, !dbg !11724
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11728, metadata !DIExpression()), !dbg !11724
  %4 = load i64, i64* %__eax, align 8, !dbg !11724
  store i64 %4, i64* %__eax, align 8, !dbg !11724
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !11724
  %6 = call i64 @llvm.read_register.i64(metadata !10006), !dbg !11724
  %7 = load i64, i64* %f.addr, align 8, !dbg !11724
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !11724, !srcloc !11729
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !11724
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !11724
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11724
  call void @llvm.write_register.i64(metadata !10006, i64 %asmresult1), !dbg !11724
  ret void, !dbg !11730
}

; Function Attrs: noredzone
declare dso_local i32 @l1_event(%struct.layer1*, i32) #3

; Function Attrs: noredzone
declare dso_local void @mISDN_unregister_device(%struct.mISDNdevice*) #3

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #2 !dbg !11731 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !11738, metadata !DIExpression()), !dbg !11741
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !11743, metadata !DIExpression()), !dbg !11744
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !11745, metadata !DIExpression()), !dbg !11746
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11747, metadata !DIExpression()), !dbg !11749
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11751, metadata !DIExpression()), !dbg !11752
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11753, metadata !DIExpression()), !dbg !11761
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11763, metadata !DIExpression()), !dbg !11764
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11765, metadata !DIExpression()), !dbg !11766
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11767, metadata !DIExpression()), !dbg !11768
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11769
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11770
  %div = sdiv i64 %1, 64, !dbg !11770
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11771
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11769
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11772
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11773
  %conv.i = trunc i64 %4 to i32, !dbg !11773
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !11774
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11775
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11775
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !11775
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11776
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !11776
  br i1 %8, label %cond.true, label %cond.false, !dbg !11776

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !11776
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !11776
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !11777
  %and.i = and i64 %11, 63, !dbg !11778
  %shl.i = shl i64 1, %and.i, !dbg !11779
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !11780
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11781
  %shr.i = ashr i64 %13, 6, !dbg !11782
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !11780
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !11780
  %and1.i = and i64 %shl.i, %14, !dbg !11783
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !11784
  %conv = zext i1 %cmp.i to i32, !dbg !11776
  br label %cond.end, !dbg !11776

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !11776
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !11776
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !11785
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !11786
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #6, !dbg !11787, !srcloc !11788
  store i8 %19, i8* %oldbit.i, align 1, !dbg !11787
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !11789
  %tobool.i = trunc i8 %20 to i1, !dbg !11789
  %conv2 = zext i1 %tobool.i to i32, !dbg !11776
  br label %cond.end, !dbg !11776

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !11776
  %tobool = icmp ne i32 %cond, 0, !dbg !11776
  ret i1 %tobool, !dbg !11790
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @plxsd_checksync(%struct.hfc_multi* %hc, i32 %rm) #2 !dbg !11791 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %rm.addr = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !11794, metadata !DIExpression()), !dbg !11795
  store i32 %rm, i32* %rm.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rm.addr, metadata !11796, metadata !DIExpression()), !dbg !11797
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11798
  %syncronized = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 55, !dbg !11800
  %1 = load i32, i32* %syncronized, align 4, !dbg !11800
  %tobool = icmp ne i32 %1, 0, !dbg !11798
  br i1 %tobool, label %if.then, label %if.else, !dbg !11801

if.then:                                          ; preds = %entry
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** @syncmaster, align 8, !dbg !11802
  %cmp = icmp eq %struct.hfc_multi* %2, null, !dbg !11805
  br i1 %cmp, label %if.then1, label %if.end5, !dbg !11806

if.then1:                                         ; preds = %if.then
  %3 = load i32, i32* @debug, align 4, !dbg !11807
  %and = and i32 %3, 524288, !dbg !11810
  %tobool2 = icmp ne i32 %and, 0, !dbg !11810
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !11811

if.then3:                                         ; preds = %if.then1
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11812
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %4, i32 0, i32 2, !dbg !11813
  %5 = load i32, i32* %id, align 8, !dbg !11813
  %add = add i32 %5, 1, !dbg !11814
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11815
  %id4 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 2, !dbg !11816
  %7 = load i32, i32* %id4, align 8, !dbg !11816
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.plxsd_checksync, i64 0, i64 0), i32 %add, i32 %7) #13, !dbg !11817
  br label %if.end, !dbg !11817

if.end:                                           ; preds = %if.then3, %if.then1
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11818
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11819
  %10 = load i32, i32* %rm.addr, align 4, !dbg !11820
  call void @hfcmulti_resync(%struct.hfc_multi* %8, %struct.hfc_multi* %9, i32 %10) #12, !dbg !11821
  br label %if.end5, !dbg !11822

if.end5:                                          ; preds = %if.end, %if.then
  br label %if.end17, !dbg !11823

if.else:                                          ; preds = %entry
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** @syncmaster, align 8, !dbg !11824
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11827
  %cmp6 = icmp eq %struct.hfc_multi* %11, %12, !dbg !11828
  br i1 %cmp6, label %if.then7, label %if.end16, !dbg !11829

if.then7:                                         ; preds = %if.else
  %13 = load i32, i32* @debug, align 4, !dbg !11830
  %and8 = and i32 %13, 524288, !dbg !11833
  %tobool9 = icmp ne i32 %and8, 0, !dbg !11833
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !11834

if.then10:                                        ; preds = %if.then7
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11835
  %id11 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %14, i32 0, i32 2, !dbg !11836
  %15 = load i32, i32* %id11, align 8, !dbg !11836
  %add12 = add i32 %15, 1, !dbg !11837
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11838
  %id13 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %16, i32 0, i32 2, !dbg !11839
  %17 = load i32, i32* %id13, align 8, !dbg !11839
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.plxsd_checksync, i64 0, i64 0), i32 %add12, i32 %17) #13, !dbg !11840
  br label %if.end15, !dbg !11840

if.end15:                                         ; preds = %if.then10, %if.then7
  %18 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !11841
  %19 = load i32, i32* %rm.addr, align 4, !dbg !11842
  call void @hfcmulti_resync(%struct.hfc_multi* %18, %struct.hfc_multi* null, i32 %19) #12, !dbg !11843
  br label %if.end16, !dbg !11844

if.end16:                                         ; preds = %if.end15, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end5
  ret void, !dbg !11845
}

; Function Attrs: noredzone
declare dso_local void @mISDN_freebchannel(%struct.bchannel*) #3

; Function Attrs: noredzone
declare dso_local i32 @mISDN_freedchannel(%struct.dchannel*) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !11846 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11850, metadata !DIExpression()), !dbg !11851
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11852, metadata !DIExpression()), !dbg !11853
  ret i1 true, !dbg !11854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !11855 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11859, metadata !DIExpression()), !dbg !11860
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11861, metadata !DIExpression()), !dbg !11862
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11863, metadata !DIExpression()), !dbg !11864
  ret void, !dbg !11865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfcmulti_resync(%struct.hfc_multi* %locked, %struct.hfc_multi* %newmaster, i32 %rm) #2 !dbg !11866 {
entry:
  %lock.addr.i168 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i168, metadata !11869, metadata !DIExpression()), !dbg !11873
  %lock.addr.i166 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i166, metadata !11875, metadata !DIExpression()), !dbg !11877
  %lock.addr.i164 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i164, metadata !10043, metadata !DIExpression()), !dbg !11879
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !11881
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !11882
  %locked.addr = alloca %struct.hfc_multi*, align 8
  %newmaster.addr = alloca %struct.hfc_multi*, align 8
  %rm.addr = alloca i32, align 4
  %hc = alloca %struct.hfc_multi*, align 8
  %next = alloca %struct.hfc_multi*, align 8
  %pcmmaster = alloca %struct.hfc_multi*, align 8
  %plx_acc_32 = alloca i8*, align 8
  %pv = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp29 = alloca %struct.hfc_multi*, align 8
  %__mptr30 = alloca i8*, align 8
  %tmp34 = alloca %struct.hfc_multi*, align 8
  %__mptr45 = alloca i8*, align 8
  %tmp50 = alloca %struct.hfc_multi*, align 8
  %__mptr53 = alloca i8*, align 8
  %tmp56 = alloca %struct.hfc_multi*, align 8
  %__mptr58 = alloca i8*, align 8
  %tmp63 = alloca %struct.hfc_multi*, align 8
  %__mptr92 = alloca i8*, align 8
  %tmp97 = alloca %struct.hfc_multi*, align 8
  store %struct.hfc_multi* %locked, %struct.hfc_multi** %locked.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %locked.addr, metadata !11889, metadata !DIExpression()), !dbg !11890
  store %struct.hfc_multi* %newmaster, %struct.hfc_multi** %newmaster.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %newmaster.addr, metadata !11891, metadata !DIExpression()), !dbg !11892
  store i32 %rm, i32* %rm.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rm.addr, metadata !11893, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !11895, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %next, metadata !11897, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %pcmmaster, metadata !11899, metadata !DIExpression()), !dbg !11900
  store %struct.hfc_multi* null, %struct.hfc_multi** %pcmmaster, align 8, !dbg !11900
  call void @llvm.dbg.declare(metadata i8** %plx_acc_32, metadata !11901, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.declare(metadata i32* %pv, metadata !11903, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11905, metadata !DIExpression()), !dbg !11906
  br label %do.body, !dbg !11907

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11908

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11909, metadata !DIExpression()), !dbg !11911
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11912, metadata !DIExpression()), !dbg !11911
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11911
  %conv = zext i1 %cmp to i32, !dbg !11911
  store i32 1, i32* %tmp, align 4, !dbg !11911
  %0 = load i32, i32* %tmp, align 4, !dbg !11911
  br label %do.body2, !dbg !11913

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !11914

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11915

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !11917, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11921, metadata !DIExpression()), !dbg !11920
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !11920
  %conv8 = zext i1 %cmp7 to i32, !dbg !11920
  store i32 1, i32* %tmp9, align 4, !dbg !11920
  %1 = load i32, i32* %tmp9, align 4, !dbg !11920
  %call = call i64 @arch_local_irq_save() #12, !dbg !11922
  store i64 %call, i64* %flags, align 8, !dbg !11922
  br label %do.end, !dbg !11922

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !11915

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !11914

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11923, !srcloc !11924
  br label %do.body12, !dbg !11923

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11925
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !11926
  %rlock.i = bitcast %union.anon.1* %3 to %struct.raw_spinlock*, !dbg !11926
  br label %do.end14, !dbg !11927

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !11923

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !11914

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !11913

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11908

do.end18:                                         ; preds = %do.end17
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i166, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11928, !srcloc !11930
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i166, align 8, !dbg !11931
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !11931
  %rlock.i167 = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !11931
  %6 = load i32, i32* @debug, align 4, !dbg !11933
  %and = and i32 %6, 524288, !dbg !11935
  %tobool = icmp ne i32 %and, 0, !dbg !11935
  br i1 %tobool, label %if.then, label %if.end, !dbg !11936

if.then:                                          ; preds = %do.end18
  %7 = load %struct.hfc_multi*, %struct.hfc_multi** @syncmaster, align 8, !dbg !11937
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hfcmulti_resync, i64 0, i64 0), %struct.hfc_multi* %7) #13, !dbg !11938
  br label %if.end, !dbg !11938

if.end:                                           ; preds = %if.then, %do.end18
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %newmaster.addr, align 8, !dbg !11939
  %tobool20 = icmp ne %struct.hfc_multi* %8, null, !dbg !11939
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !11941

if.then21:                                        ; preds = %if.end
  %9 = load i32, i32* @debug, align 4, !dbg !11942
  %and22 = and i32 %9, 524288, !dbg !11945
  %tobool23 = icmp ne i32 %and22, 0, !dbg !11945
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !11946

if.then24:                                        ; preds = %if.then21
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i64 0, i64 0)) #13, !dbg !11947
  br label %if.end26, !dbg !11947

if.end26:                                         ; preds = %if.then24, %if.then21
  br label %if.end52, !dbg !11948

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11949, metadata !DIExpression()), !dbg !11953
  %10 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @HFClist, i32 0, i32 0), align 8, !dbg !11953
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !11953
  store i8* %11, i8** %__mptr, align 8, !dbg !11953
  br label %do.body27, !dbg !11953

do.body27:                                        ; preds = %if.else
  br label %do.end28, !dbg !11954

do.end28:                                         ; preds = %do.body27
  %12 = load i8*, i8** %__mptr, align 8, !dbg !11953
  %add.ptr = getelementptr i8, i8* %12, i64 0, !dbg !11953
  %13 = bitcast i8* %add.ptr to %struct.hfc_multi*, !dbg !11953
  store %struct.hfc_multi* %13, %struct.hfc_multi** %tmp29, align 8, !dbg !11954
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp29, align 8, !dbg !11953
  store %struct.hfc_multi* %14, %struct.hfc_multi** %hc, align 8, !dbg !11956
  call void @llvm.dbg.declare(metadata i8** %__mptr30, metadata !11957, metadata !DIExpression()), !dbg !11959
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !11959
  %list = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 0, !dbg !11959
  %next31 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !11959
  %16 = load %struct.list_head*, %struct.list_head** %next31, align 8, !dbg !11959
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !11959
  store i8* %17, i8** %__mptr30, align 8, !dbg !11959
  br label %do.body32, !dbg !11959

do.body32:                                        ; preds = %do.end28
  br label %do.end33, !dbg !11960

do.end33:                                         ; preds = %do.body32
  %18 = load i8*, i8** %__mptr30, align 8, !dbg !11959
  %add.ptr35 = getelementptr i8, i8* %18, i64 0, !dbg !11959
  %19 = bitcast i8* %add.ptr35 to %struct.hfc_multi*, !dbg !11959
  store %struct.hfc_multi* %19, %struct.hfc_multi** %tmp34, align 8, !dbg !11960
  %20 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp34, align 8, !dbg !11959
  store %struct.hfc_multi* %20, %struct.hfc_multi** %next, align 8, !dbg !11956
  br label %for.cond, !dbg !11956

for.cond:                                         ; preds = %do.end49, %do.end33
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !11962
  %list36 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 0, !dbg !11962
  %cmp37 = icmp eq %struct.list_head* %list36, @HFClist, !dbg !11962
  %lnot = xor i1 %cmp37, true, !dbg !11962
  br i1 %lnot, label %for.body, label %for.end, !dbg !11956

for.body:                                         ; preds = %for.cond
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !11964
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 31, !dbg !11967
  %call39 = call zeroext i1 @test_bit(i64 14, i64* %chip) #12, !dbg !11968
  br i1 %call39, label %if.then40, label %if.end44, !dbg !11969

if.then40:                                        ; preds = %for.body
  %23 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !11970
  %syncronized = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %23, i32 0, i32 55, !dbg !11973
  %24 = load i32, i32* %syncronized, align 4, !dbg !11973
  %tobool41 = icmp ne i32 %24, 0, !dbg !11970
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !11974

if.then42:                                        ; preds = %if.then40
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !11975
  store %struct.hfc_multi* %25, %struct.hfc_multi** %newmaster.addr, align 8, !dbg !11977
  br label %for.end, !dbg !11978

if.end43:                                         ; preds = %if.then40
  br label %if.end44, !dbg !11979

if.end44:                                         ; preds = %if.end43, %for.body
  br label %for.inc, !dbg !11980

for.inc:                                          ; preds = %if.end44
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %next, align 8, !dbg !11962
  store %struct.hfc_multi* %26, %struct.hfc_multi** %hc, align 8, !dbg !11962
  call void @llvm.dbg.declare(metadata i8** %__mptr45, metadata !11981, metadata !DIExpression()), !dbg !11983
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %next, align 8, !dbg !11983
  %list46 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %27, i32 0, i32 0, !dbg !11983
  %next47 = getelementptr inbounds %struct.list_head, %struct.list_head* %list46, i32 0, i32 0, !dbg !11983
  %28 = load %struct.list_head*, %struct.list_head** %next47, align 8, !dbg !11983
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !11983
  store i8* %29, i8** %__mptr45, align 8, !dbg !11983
  br label %do.body48, !dbg !11983

do.body48:                                        ; preds = %for.inc
  br label %do.end49, !dbg !11984

do.end49:                                         ; preds = %do.body48
  %30 = load i8*, i8** %__mptr45, align 8, !dbg !11983
  %add.ptr51 = getelementptr i8, i8* %30, i64 0, !dbg !11983
  %31 = bitcast i8* %add.ptr51 to %struct.hfc_multi*, !dbg !11983
  store %struct.hfc_multi* %31, %struct.hfc_multi** %tmp50, align 8, !dbg !11984
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp50, align 8, !dbg !11983
  store %struct.hfc_multi* %32, %struct.hfc_multi** %next, align 8, !dbg !11962
  br label %for.cond, !dbg !11962, !llvm.loop !11986

for.end:                                          ; preds = %if.then42, %for.cond
  br label %if.end52

if.end52:                                         ; preds = %for.end, %if.end26
  call void @llvm.dbg.declare(metadata i8** %__mptr53, metadata !11988, metadata !DIExpression()), !dbg !11991
  %33 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @HFClist, i32 0, i32 0), align 8, !dbg !11991
  %34 = bitcast %struct.list_head* %33 to i8*, !dbg !11991
  store i8* %34, i8** %__mptr53, align 8, !dbg !11991
  br label %do.body54, !dbg !11991

do.body54:                                        ; preds = %if.end52
  br label %do.end55, !dbg !11992

do.end55:                                         ; preds = %do.body54
  %35 = load i8*, i8** %__mptr53, align 8, !dbg !11991
  %add.ptr57 = getelementptr i8, i8* %35, i64 0, !dbg !11991
  %36 = bitcast i8* %add.ptr57 to %struct.hfc_multi*, !dbg !11991
  store %struct.hfc_multi* %36, %struct.hfc_multi** %tmp56, align 8, !dbg !11992
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp56, align 8, !dbg !11991
  store %struct.hfc_multi* %37, %struct.hfc_multi** %hc, align 8, !dbg !11994
  call void @llvm.dbg.declare(metadata i8** %__mptr58, metadata !11995, metadata !DIExpression()), !dbg !11997
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !11997
  %list59 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 0, !dbg !11997
  %next60 = getelementptr inbounds %struct.list_head, %struct.list_head* %list59, i32 0, i32 0, !dbg !11997
  %39 = load %struct.list_head*, %struct.list_head** %next60, align 8, !dbg !11997
  %40 = bitcast %struct.list_head* %39 to i8*, !dbg !11997
  store i8* %40, i8** %__mptr58, align 8, !dbg !11997
  br label %do.body61, !dbg !11997

do.body61:                                        ; preds = %do.end55
  br label %do.end62, !dbg !11998

do.end62:                                         ; preds = %do.body61
  %41 = load i8*, i8** %__mptr58, align 8, !dbg !11997
  %add.ptr64 = getelementptr i8, i8* %41, i64 0, !dbg !11997
  %42 = bitcast i8* %add.ptr64 to %struct.hfc_multi*, !dbg !11997
  store %struct.hfc_multi* %42, %struct.hfc_multi** %tmp63, align 8, !dbg !11998
  %43 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp63, align 8, !dbg !11997
  store %struct.hfc_multi* %43, %struct.hfc_multi** %next, align 8, !dbg !11994
  br label %for.cond65, !dbg !11994

for.cond65:                                       ; preds = %do.end96, %do.end62
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12000
  %list66 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %44, i32 0, i32 0, !dbg !12000
  %cmp67 = icmp eq %struct.list_head* %list66, @HFClist, !dbg !12000
  %lnot69 = xor i1 %cmp67, true, !dbg !12000
  br i1 %lnot69, label %for.body70, label %for.end99, !dbg !11994

for.body70:                                       ; preds = %for.cond65
  %45 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12002
  %chip71 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %45, i32 0, i32 31, !dbg !12005
  %call72 = call zeroext i1 @test_bit(i64 14, i64* %chip71) #12, !dbg !12006
  br i1 %call72, label %if.then73, label %if.end90, !dbg !12007

if.then73:                                        ; preds = %for.body70
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12008
  %plx_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 23, !dbg !12010
  %47 = load i8*, i8** %plx_membase, align 8, !dbg !12010
  %add.ptr74 = getelementptr i8, i8* %47, i64 84, !dbg !12011
  store i8* %add.ptr74, i8** %plx_acc_32, align 8, !dbg !12012
  %48 = load i8*, i8** %plx_acc_32, align 8, !dbg !12013
  %call75 = call i32 @readl(i8* %48) #12, !dbg !12014
  store i32 %call75, i32* %pv, align 4, !dbg !12015
  %49 = load i32, i32* %pv, align 4, !dbg !12016
  %and76 = and i32 %49, -16385, !dbg !12016
  store i32 %and76, i32* %pv, align 4, !dbg !12016
  %50 = load i32, i32* %pv, align 4, !dbg !12017
  %51 = load i8*, i8** %plx_acc_32, align 8, !dbg !12018
  call void @writel(i32 %50, i8* %51) #12, !dbg !12019
  %52 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12020
  %chip77 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %52, i32 0, i32 31, !dbg !12022
  %call78 = call zeroext i1 @test_bit(i64 4, i64* %chip77) #12, !dbg !12023
  br i1 %call78, label %if.then79, label %if.end89, !dbg !12024

if.then79:                                        ; preds = %if.then73
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12025
  store %struct.hfc_multi* %53, %struct.hfc_multi** %pcmmaster, align 8, !dbg !12027
  %54 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12028
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %54, i32 0, i32 4, !dbg !12030
  %55 = load i32, i32* %ctype, align 8, !dbg !12030
  %cmp80 = icmp eq i32 %55, 1, !dbg !12031
  br i1 %cmp80, label %if.then82, label %if.end88, !dbg !12032

if.then82:                                        ; preds = %if.then79
  %56 = load i32, i32* @debug, align 4, !dbg !12033
  %and83 = and i32 %56, 524288, !dbg !12036
  %tobool84 = icmp ne i32 %and83, 0, !dbg !12036
  br i1 %tobool84, label %if.then85, label %if.end87, !dbg !12037

if.then85:                                        ; preds = %if.then82
  %call86 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0)) #13, !dbg !12038
  br label %if.end87, !dbg !12038

if.end87:                                         ; preds = %if.then85, %if.then82
  %57 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12039
  %e1_resync = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %57, i32 0, i32 56, !dbg !12040
  %58 = load i32, i32* %e1_resync, align 8, !dbg !12041
  %or = or i32 %58, 1, !dbg !12041
  store i32 %or, i32* %e1_resync, align 8, !dbg !12041
  br label %if.end88, !dbg !12042

if.end88:                                         ; preds = %if.end87, %if.then79
  br label %if.end89, !dbg !12043

if.end89:                                         ; preds = %if.end88, %if.then73
  br label %if.end90, !dbg !12044

if.end90:                                         ; preds = %if.end89, %for.body70
  br label %for.inc91, !dbg !12045

for.inc91:                                        ; preds = %if.end90
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %next, align 8, !dbg !12000
  store %struct.hfc_multi* %59, %struct.hfc_multi** %hc, align 8, !dbg !12000
  call void @llvm.dbg.declare(metadata i8** %__mptr92, metadata !12046, metadata !DIExpression()), !dbg !12048
  %60 = load %struct.hfc_multi*, %struct.hfc_multi** %next, align 8, !dbg !12048
  %list93 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %60, i32 0, i32 0, !dbg !12048
  %next94 = getelementptr inbounds %struct.list_head, %struct.list_head* %list93, i32 0, i32 0, !dbg !12048
  %61 = load %struct.list_head*, %struct.list_head** %next94, align 8, !dbg !12048
  %62 = bitcast %struct.list_head* %61 to i8*, !dbg !12048
  store i8* %62, i8** %__mptr92, align 8, !dbg !12048
  br label %do.body95, !dbg !12048

do.body95:                                        ; preds = %for.inc91
  br label %do.end96, !dbg !12049

do.end96:                                         ; preds = %do.body95
  %63 = load i8*, i8** %__mptr92, align 8, !dbg !12048
  %add.ptr98 = getelementptr i8, i8* %63, i64 0, !dbg !12048
  %64 = bitcast i8* %add.ptr98 to %struct.hfc_multi*, !dbg !12048
  store %struct.hfc_multi* %64, %struct.hfc_multi** %tmp97, align 8, !dbg !12049
  %65 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp97, align 8, !dbg !12048
  store %struct.hfc_multi* %65, %struct.hfc_multi** %next, align 8, !dbg !12000
  br label %for.cond65, !dbg !12000, !llvm.loop !12051

for.end99:                                        ; preds = %for.cond65
  %66 = load %struct.hfc_multi*, %struct.hfc_multi** %newmaster.addr, align 8, !dbg !12053
  %tobool100 = icmp ne %struct.hfc_multi* %66, null, !dbg !12053
  br i1 %tobool100, label %if.then101, label %if.else125, !dbg !12055

if.then101:                                       ; preds = %for.end99
  %67 = load %struct.hfc_multi*, %struct.hfc_multi** %newmaster.addr, align 8, !dbg !12056
  store %struct.hfc_multi* %67, %struct.hfc_multi** %hc, align 8, !dbg !12058
  %68 = load i32, i32* @debug, align 4, !dbg !12059
  %and102 = and i32 %68, 524288, !dbg !12061
  %tobool103 = icmp ne i32 %and102, 0, !dbg !12061
  br i1 %tobool103, label %if.then104, label %if.end106, !dbg !12062

if.then104:                                       ; preds = %if.then101
  %69 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12063
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %69, i32 0, i32 2, !dbg !12064
  %70 = load i32, i32* %id, align 8, !dbg !12064
  %71 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12065
  %call105 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.20, i64 0, i64 0), i32 %70, %struct.hfc_multi* %71) #13, !dbg !12066
  br label %if.end106, !dbg !12066

if.end106:                                        ; preds = %if.then104, %if.then101
  %72 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12067
  %plx_membase107 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %72, i32 0, i32 23, !dbg !12068
  %73 = load i8*, i8** %plx_membase107, align 8, !dbg !12068
  %add.ptr108 = getelementptr i8, i8* %73, i64 84, !dbg !12069
  store i8* %add.ptr108, i8** %plx_acc_32, align 8, !dbg !12070
  %74 = load i8*, i8** %plx_acc_32, align 8, !dbg !12071
  %call109 = call i32 @readl(i8* %74) #12, !dbg !12072
  store i32 %call109, i32* %pv, align 4, !dbg !12073
  %75 = load i32, i32* %pv, align 4, !dbg !12074
  %or110 = or i32 %75, 16384, !dbg !12074
  store i32 %or110, i32* %pv, align 4, !dbg !12074
  %76 = load i32, i32* %pv, align 4, !dbg !12075
  %77 = load i8*, i8** %plx_acc_32, align 8, !dbg !12076
  call void @writel(i32 %76, i8* %77) #12, !dbg !12077
  %78 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12078
  %ctype111 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %78, i32 0, i32 4, !dbg !12080
  %79 = load i32, i32* %ctype111, align 8, !dbg !12080
  %cmp112 = icmp eq i32 %79, 1, !dbg !12081
  br i1 %cmp112, label %land.lhs.true, label %if.end124, !dbg !12082

land.lhs.true:                                    ; preds = %if.end106
  %80 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12083
  %chip114 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %80, i32 0, i32 31, !dbg !12084
  %call115 = call zeroext i1 @test_bit(i64 5, i64* %chip114) #12, !dbg !12085
  br i1 %call115, label %if.end124, label %if.then116, !dbg !12086

if.then116:                                       ; preds = %land.lhs.true
  %81 = load i32, i32* @debug, align 4, !dbg !12087
  %and117 = and i32 %81, 524288, !dbg !12090
  %tobool118 = icmp ne i32 %and117, 0, !dbg !12090
  br i1 %tobool118, label %if.then119, label %if.end121, !dbg !12091

if.then119:                                       ; preds = %if.then116
  %call120 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !12092
  br label %if.end121, !dbg !12092

if.end121:                                        ; preds = %if.then119, %if.then116
  %82 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12093
  %e1_resync122 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %82, i32 0, i32 56, !dbg !12094
  %83 = load i32, i32* %e1_resync122, align 8, !dbg !12095
  %or123 = or i32 %83, 2, !dbg !12095
  store i32 %or123, i32* %e1_resync122, align 8, !dbg !12095
  br label %if.end124, !dbg !12096

if.end124:                                        ; preds = %if.end121, %land.lhs.true, %if.end106
  br label %if.end163, !dbg !12097

if.else125:                                       ; preds = %for.end99
  %84 = load %struct.hfc_multi*, %struct.hfc_multi** %pcmmaster, align 8, !dbg !12098
  %tobool126 = icmp ne %struct.hfc_multi* %84, null, !dbg !12098
  br i1 %tobool126, label %if.then127, label %if.else157, !dbg !12101

if.then127:                                       ; preds = %if.else125
  %85 = load %struct.hfc_multi*, %struct.hfc_multi** %pcmmaster, align 8, !dbg !12102
  store %struct.hfc_multi* %85, %struct.hfc_multi** %hc, align 8, !dbg !12104
  %86 = load i32, i32* @debug, align 4, !dbg !12105
  %and128 = and i32 %86, 524288, !dbg !12107
  %tobool129 = icmp ne i32 %and128, 0, !dbg !12107
  br i1 %tobool129, label %if.then130, label %if.end133, !dbg !12108

if.then130:                                       ; preds = %if.then127
  %87 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12109
  %id131 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %87, i32 0, i32 2, !dbg !12110
  %88 = load i32, i32* %id131, align 8, !dbg !12110
  %89 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12111
  %call132 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.22, i64 0, i64 0), i32 %88, %struct.hfc_multi* %89) #13, !dbg !12112
  br label %if.end133, !dbg !12112

if.end133:                                        ; preds = %if.then130, %if.then127
  %90 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12113
  %ctype134 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %90, i32 0, i32 4, !dbg !12115
  %91 = load i32, i32* %ctype134, align 8, !dbg !12115
  %cmp135 = icmp eq i32 %91, 1, !dbg !12116
  br i1 %cmp135, label %if.then137, label %if.else145, !dbg !12117

if.then137:                                       ; preds = %if.end133
  %92 = load i32, i32* @debug, align 4, !dbg !12118
  %and138 = and i32 %92, 524288, !dbg !12121
  %tobool139 = icmp ne i32 %and138, 0, !dbg !12121
  br i1 %tobool139, label %if.then140, label %if.end142, !dbg !12122

if.then140:                                       ; preds = %if.then137
  %call141 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i64 0, i64 0)) #13, !dbg !12123
  br label %if.end142, !dbg !12123

if.end142:                                        ; preds = %if.then140, %if.then137
  %93 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12124
  %e1_resync143 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %93, i32 0, i32 56, !dbg !12125
  %94 = load i32, i32* %e1_resync143, align 8, !dbg !12126
  %or144 = or i32 %94, 4, !dbg !12126
  store i32 %or144, i32* %e1_resync143, align 8, !dbg !12126
  br label %if.end152, !dbg !12127

if.else145:                                       ; preds = %if.end133
  %95 = load i32, i32* @debug, align 4, !dbg !12128
  %and146 = and i32 %95, 524288, !dbg !12131
  %tobool147 = icmp ne i32 %and146, 0, !dbg !12131
  br i1 %tobool147, label %if.then148, label %if.end151, !dbg !12132

if.then148:                                       ; preds = %if.else145
  %96 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12133
  %ctype149 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %96, i32 0, i32 4, !dbg !12134
  %97 = load i32, i32* %ctype149, align 8, !dbg !12134
  %call150 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.24, i64 0, i64 0), i32 %97) #13, !dbg !12135
  br label %if.end151, !dbg !12135

if.end151:                                        ; preds = %if.then148, %if.else145
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.end142
  %98 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12136
  %plx_membase153 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %98, i32 0, i32 23, !dbg !12137
  %99 = load i8*, i8** %plx_membase153, align 8, !dbg !12137
  %add.ptr154 = getelementptr i8, i8* %99, i64 84, !dbg !12138
  store i8* %add.ptr154, i8** %plx_acc_32, align 8, !dbg !12139
  %100 = load i8*, i8** %plx_acc_32, align 8, !dbg !12140
  %call155 = call i32 @readl(i8* %100) #12, !dbg !12141
  store i32 %call155, i32* %pv, align 4, !dbg !12142
  %101 = load i32, i32* %pv, align 4, !dbg !12143
  %or156 = or i32 %101, 16384, !dbg !12143
  store i32 %or156, i32* %pv, align 4, !dbg !12143
  %102 = load i32, i32* %pv, align 4, !dbg !12144
  %103 = load i8*, i8** %plx_acc_32, align 8, !dbg !12145
  call void @writel(i32 %102, i8* %103) #12, !dbg !12146
  br label %if.end162, !dbg !12147

if.else157:                                       ; preds = %if.else125
  %104 = load i32, i32* %rm.addr, align 4, !dbg !12148
  %tobool158 = icmp ne i32 %104, 0, !dbg !12148
  br i1 %tobool158, label %if.end161, label %if.then159, !dbg !12150

if.then159:                                       ; preds = %if.else157
  %call160 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hfcmulti_resync, i64 0, i64 0)) #13, !dbg !12151
  br label %if.end161, !dbg !12151

if.end161:                                        ; preds = %if.then159, %if.else157
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.end152
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.end124
  %105 = load %struct.hfc_multi*, %struct.hfc_multi** %newmaster.addr, align 8, !dbg !12152
  store %struct.hfc_multi* %105, %struct.hfc_multi** @syncmaster, align 8, !dbg !12153
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i168, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12154, !srcloc !12156
  %106 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i168, align 8, !dbg !12157
  %107 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %106, i32 0, i32 0, !dbg !12157
  %rlock.i169 = bitcast %union.anon.1* %107 to %struct.raw_spinlock*, !dbg !12157
  %108 = load i64, i64* %flags, align 8, !dbg !12159
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i164, align 8
  store i64 %108, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !12160
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !12160
  store i32 1, i32* %tmp.i, align 4, !dbg !12160
  %109 = load i32, i32* %tmp.i, align 4, !dbg !12160
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !12161
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !12161
  store i32 1, i32* %tmp8.i, align 4, !dbg !12161
  %110 = load i32, i32* %tmp8.i, align 4, !dbg !12161
  %111 = load i64, i64* %flags.addr.i, align 8, !dbg !12162
  call void @arch_local_irq_restore(i64 %111) #14, !dbg !12162
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12163, !srcloc !10125
  %112 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i164, align 8, !dbg !12164
  %113 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %112, i32 0, i32 0, !dbg !12164
  %rlock.i165 = bitcast %union.anon.1* %113 to %struct.raw_spinlock*, !dbg !12164
  ret void, !dbg !12165
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !12166 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12170, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12172, metadata !DIExpression()), !dbg !12171
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !12171
  %1 = bitcast i8* %0 to i32*, !dbg !12171
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #6, !dbg !12171, !srcloc !12173
  store i32 %2, i32* %ret, align 4, !dbg !12171
  %3 = load i32, i32* %ret, align 4, !dbg !12171
  ret i32 %3, !dbg !12171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !12174 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12178, metadata !DIExpression()), !dbg !12179
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !12180, metadata !DIExpression()), !dbg !12179
  %0 = load i32, i32* %val.addr, align 4, !dbg !12179
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !12179
  %2 = bitcast i8* %1 to i32*, !dbg !12179
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #6, !dbg !12179, !srcloc !12181
  ret void, !dbg !12179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vpm_out(%struct.hfc_multi* %c, i32 %which, i16 zeroext %addr, i8 zeroext %data) #2 !dbg !12182 {
entry:
  %c.addr = alloca %struct.hfc_multi*, align 8
  %which.addr = alloca i32, align 4
  %addr.addr = alloca i16, align 2
  %data.addr = alloca i8, align 1
  %regin = alloca i8, align 1
  store %struct.hfc_multi* %c, %struct.hfc_multi** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %c.addr, metadata !12185, metadata !DIExpression()), !dbg !12186
  store i32 %which, i32* %which.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which.addr, metadata !12187, metadata !DIExpression()), !dbg !12188
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !12189, metadata !DIExpression()), !dbg !12190
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !12191, metadata !DIExpression()), !dbg !12192
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12193
  %1 = load i16, i16* %addr.addr, align 2, !dbg !12194
  call void @vpm_write_address(%struct.hfc_multi* %0, i16 zeroext %1) #12, !dbg !12195
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12196
  call void @enablepcibridge(%struct.hfc_multi* %2) #12, !dbg !12197
  %3 = load i32, i32* %which.addr, align 4, !dbg !12198
  %tobool = icmp ne i32 %3, 0, !dbg !12198
  br i1 %tobool, label %if.else, label %if.then, !dbg !12200

if.then:                                          ; preds = %entry
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12201
  call void @cpld_set_reg(%struct.hfc_multi* %4, i8 zeroext 2) #12, !dbg !12202
  br label %if.end, !dbg !12202

if.else:                                          ; preds = %entry
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12203
  call void @cpld_set_reg(%struct.hfc_multi* %5, i8 zeroext 3) #12, !dbg !12204
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12205
  %7 = load i8, i8* %data.addr, align 1, !dbg !12206
  call void @writepcibridge(%struct.hfc_multi* %6, i8 zeroext 1, i8 zeroext %7) #12, !dbg !12207
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12208
  call void @cpld_set_reg(%struct.hfc_multi* %8, i8 zeroext 0) #12, !dbg !12209
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12210
  call void @disablepcibridge(%struct.hfc_multi* %9) #12, !dbg !12211
  call void @llvm.dbg.declare(metadata i8* %regin, metadata !12212, metadata !DIExpression()), !dbg !12214
  %10 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12215
  %11 = load i32, i32* %which.addr, align 4, !dbg !12216
  %12 = load i16, i16* %addr.addr, align 2, !dbg !12217
  %call = call zeroext i8 @vpm_in(%struct.hfc_multi* %10, i32 %11, i16 zeroext %12) #12, !dbg !12218
  store i8 %call, i8* %regin, align 1, !dbg !12219
  %13 = load i8, i8* %regin, align 1, !dbg !12220
  %conv = zext i8 %13 to i32, !dbg !12220
  %14 = load i8, i8* %data.addr, align 1, !dbg !12222
  %conv1 = zext i8 %14 to i32, !dbg !12222
  %cmp = icmp ne i32 %conv, %conv1, !dbg !12223
  br i1 %cmp, label %if.then3, label %if.end8, !dbg !12224

if.then3:                                         ; preds = %if.end
  %15 = load i8, i8* %data.addr, align 1, !dbg !12225
  %conv4 = zext i8 %15 to i32, !dbg !12225
  %16 = load i16, i16* %addr.addr, align 2, !dbg !12226
  %conv5 = zext i16 %16 to i32, !dbg !12226
  %17 = load i8, i8* %regin, align 1, !dbg !12227
  %conv6 = zext i8 %17 to i32, !dbg !12227
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26, i64 0, i64 0), i32 %conv4, i32 %conv5, i32 %conv6) #13, !dbg !12228
  br label %if.end8, !dbg !12228

if.end8:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !12229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outw(i16 zeroext %value, i32 %port) #2 !dbg !12230 {
entry:
  %value.addr = alloca i16, align 2
  %port.addr = alloca i32, align 4
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !12233, metadata !DIExpression()), !dbg !12234
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12235, metadata !DIExpression()), !dbg !12234
  %0 = load i16, i16* %value.addr, align 2, !dbg !12234
  %1 = load i32, i32* %port.addr, align 4, !dbg !12234
  call void asm sideeffect "outw ${0:w}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 %1) #6, !dbg !12234, !srcloc !12236
  ret void, !dbg !12234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outl(i32 %value, i32 %port) #2 !dbg !12237 {
entry:
  %value.addr = alloca i32, align 4
  %port.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !12240, metadata !DIExpression()), !dbg !12241
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12242, metadata !DIExpression()), !dbg !12241
  %0 = load i32, i32* %value.addr, align 4, !dbg !12241
  %1 = load i32, i32* %port.addr, align 4, !dbg !12241
  call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32 %1) #6, !dbg !12241, !srcloc !12243
  ret void, !dbg !12241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vpm_write_address(%struct.hfc_multi* %hc, i16 zeroext %addr) #2 !dbg !12244 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %addr.addr = alloca i16, align 2
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !12247, metadata !DIExpression()), !dbg !12248
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !12249, metadata !DIExpression()), !dbg !12250
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12251
  %1 = load i16, i16* %addr.addr, align 2, !dbg !12252
  %conv = zext i16 %1 to i32, !dbg !12252
  %and = and i32 255, %conv, !dbg !12253
  %conv1 = trunc i32 %and to i8, !dbg !12254
  call void @cpld_write_reg(%struct.hfc_multi* %0, i8 zeroext 0, i8 zeroext %conv1) #12, !dbg !12255
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12256
  %3 = load i16, i16* %addr.addr, align 2, !dbg !12257
  %conv2 = zext i16 %3 to i32, !dbg !12257
  %shr = ashr i32 %conv2, 8, !dbg !12258
  %and3 = and i32 1, %shr, !dbg !12259
  %conv4 = trunc i32 %and3 to i8, !dbg !12260
  call void @cpld_write_reg(%struct.hfc_multi* %2, i8 zeroext 1, i8 zeroext %conv4) #12, !dbg !12261
  ret void, !dbg !12262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enablepcibridge(%struct.hfc_multi* %c) #2 !dbg !12263 {
entry:
  %c.addr = alloca %struct.hfc_multi*, align 8
  store %struct.hfc_multi* %c, %struct.hfc_multi** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %c.addr, metadata !12264, metadata !DIExpression()), !dbg !12265
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12266
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 10, !dbg !12266
  %1 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !12266
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12266
  call void %1(%struct.hfc_multi* %2, i8 zeroext 2, i8 zeroext 3) #12, !dbg !12266
  ret void, !dbg !12267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cpld_set_reg(%struct.hfc_multi* %hc, i8 zeroext %reg) #2 !dbg !12268 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %reg.addr = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !12271, metadata !DIExpression()), !dbg !12272
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !12273, metadata !DIExpression()), !dbg !12274
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12275
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 10, !dbg !12275
  %1 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !12275
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12275
  %3 = load i8, i8* %reg.addr, align 1, !dbg !12275
  call void %1(%struct.hfc_multi* %2, i8 zeroext 65, i8 zeroext %3) #12, !dbg !12275
  ret void, !dbg !12276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writepcibridge(%struct.hfc_multi* %hc, i8 zeroext %address, i8 zeroext %data) #2 !dbg !12277 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %address.addr = alloca i8, align 1
  %data.addr = alloca i8, align 1
  %cipv = alloca i16, align 2
  %datav = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !12280, metadata !DIExpression()), !dbg !12281
  store i8 %address, i8* %address.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %address.addr, metadata !12282, metadata !DIExpression()), !dbg !12283
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !12284, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.declare(metadata i16* %cipv, metadata !12286, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.declare(metadata i32* %datav, metadata !12288, metadata !DIExpression()), !dbg !12289
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12290
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 29, !dbg !12292
  %1 = load i64, i64* %pci_iobase, align 8, !dbg !12292
  %tobool = icmp ne i64 %1, 0, !dbg !12290
  br i1 %tobool, label %if.end, label %if.then, !dbg !12293

if.then:                                          ; preds = %entry
  br label %return, !dbg !12294

if.end:                                           ; preds = %entry
  %2 = load i8, i8* %address.addr, align 1, !dbg !12295
  %conv = zext i8 %2 to i32, !dbg !12295
  %cmp = icmp eq i32 %conv, 0, !dbg !12297
  br i1 %cmp, label %if.then2, label %if.else, !dbg !12298

if.then2:                                         ; preds = %if.end
  store i16 16384, i16* %cipv, align 2, !dbg !12299
  br label %if.end3, !dbg !12300

if.else:                                          ; preds = %if.end
  store i16 22528, i16* %cipv, align 2, !dbg !12301
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2
  %3 = load i16, i16* %cipv, align 2, !dbg !12302
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12303
  %pci_iobase4 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %4, i32 0, i32 29, !dbg !12304
  %5 = load i64, i64* %pci_iobase4, align 8, !dbg !12304
  %add = add i64 %5, 4, !dbg !12305
  %conv5 = trunc i64 %add to i32, !dbg !12303
  call void @outw(i16 zeroext %3, i32 %conv5) #12, !dbg !12306
  %6 = load i8, i8* %data.addr, align 1, !dbg !12307
  %conv6 = zext i8 %6 to i32, !dbg !12307
  %7 = load i8, i8* %data.addr, align 1, !dbg !12308
  %conv7 = zext i8 %7 to i32, !dbg !12309
  %shl = shl i32 %conv7, 8, !dbg !12310
  %or = or i32 %conv6, %shl, !dbg !12311
  %8 = load i8, i8* %data.addr, align 1, !dbg !12312
  %conv8 = zext i8 %8 to i32, !dbg !12313
  %shl9 = shl i32 %conv8, 16, !dbg !12314
  %or10 = or i32 %or, %shl9, !dbg !12315
  %9 = load i8, i8* %data.addr, align 1, !dbg !12316
  %conv11 = zext i8 %9 to i32, !dbg !12317
  %shl12 = shl i32 %conv11, 24, !dbg !12318
  %or13 = or i32 %or10, %shl12, !dbg !12319
  store i32 %or13, i32* %datav, align 4, !dbg !12320
  %10 = load i32, i32* %datav, align 4, !dbg !12321
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12322
  %pci_iobase14 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %11, i32 0, i32 29, !dbg !12323
  %12 = load i64, i64* %pci_iobase14, align 8, !dbg !12323
  %conv15 = trunc i64 %12 to i32, !dbg !12322
  call void @outl(i32 %10, i32 %conv15) #12, !dbg !12324
  br label %return, !dbg !12325

return:                                           ; preds = %if.end3, %if.then
  ret void, !dbg !12325
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disablepcibridge(%struct.hfc_multi* %c) #2 !dbg !12326 {
entry:
  %c.addr = alloca %struct.hfc_multi*, align 8
  store %struct.hfc_multi* %c, %struct.hfc_multi** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %c.addr, metadata !12327, metadata !DIExpression()), !dbg !12328
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12329
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 10, !dbg !12329
  %1 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !12329
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12329
  call void %1(%struct.hfc_multi* %2, i8 zeroext 2, i8 zeroext 2) #12, !dbg !12329
  ret void, !dbg !12330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @vpm_in(%struct.hfc_multi* %c, i32 %which, i16 zeroext %addr) #2 !dbg !12331 {
entry:
  %c.addr = alloca %struct.hfc_multi*, align 8
  %which.addr = alloca i32, align 4
  %addr.addr = alloca i16, align 2
  %res = alloca i8, align 1
  store %struct.hfc_multi* %c, %struct.hfc_multi** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %c.addr, metadata !12334, metadata !DIExpression()), !dbg !12335
  store i32 %which, i32* %which.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which.addr, metadata !12336, metadata !DIExpression()), !dbg !12337
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !12338, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.declare(metadata i8* %res, metadata !12340, metadata !DIExpression()), !dbg !12341
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12342
  %1 = load i16, i16* %addr.addr, align 2, !dbg !12343
  call void @vpm_write_address(%struct.hfc_multi* %0, i16 zeroext %1) #12, !dbg !12344
  %2 = load i32, i32* %which.addr, align 4, !dbg !12345
  %tobool = icmp ne i32 %2, 0, !dbg !12345
  br i1 %tobool, label %if.else, label %if.then, !dbg !12347

if.then:                                          ; preds = %entry
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12348
  call void @cpld_set_reg(%struct.hfc_multi* %3, i8 zeroext 2) #12, !dbg !12349
  br label %if.end, !dbg !12349

if.else:                                          ; preds = %entry
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12350
  call void @cpld_set_reg(%struct.hfc_multi* %4, i8 zeroext 3) #12, !dbg !12351
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12352
  call void @enablepcibridge(%struct.hfc_multi* %5) #12, !dbg !12353
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12354
  %call = call zeroext i8 @readpcibridge(%struct.hfc_multi* %6, i8 zeroext 1) #12, !dbg !12355
  store i8 %call, i8* %res, align 1, !dbg !12356
  %7 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12357
  call void @disablepcibridge(%struct.hfc_multi* %7) #12, !dbg !12358
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %c.addr, align 8, !dbg !12359
  call void @cpld_set_reg(%struct.hfc_multi* %8, i8 zeroext 0) #12, !dbg !12360
  %9 = load i8, i8* %res, align 1, !dbg !12361
  ret i8 %9, !dbg !12362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cpld_write_reg(%struct.hfc_multi* %hc, i8 zeroext %reg, i8 zeroext %val) #2 !dbg !12363 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %reg.addr = alloca i8, align 1
  %val.addr = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !12364, metadata !DIExpression()), !dbg !12365
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !12366, metadata !DIExpression()), !dbg !12367
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !12368, metadata !DIExpression()), !dbg !12369
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12370
  %1 = load i8, i8* %reg.addr, align 1, !dbg !12371
  call void @cpld_set_reg(%struct.hfc_multi* %0, i8 zeroext %1) #12, !dbg !12372
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12373
  call void @enablepcibridge(%struct.hfc_multi* %2) #12, !dbg !12374
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12375
  %4 = load i8, i8* %val.addr, align 1, !dbg !12376
  call void @writepcibridge(%struct.hfc_multi* %3, i8 zeroext 1, i8 zeroext %4) #12, !dbg !12377
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12378
  call void @disablepcibridge(%struct.hfc_multi* %5) #12, !dbg !12379
  ret void, !dbg !12380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readpcibridge(%struct.hfc_multi* %hc, i8 zeroext %address) #2 !dbg !12381 {
entry:
  %retval = alloca i8, align 1
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %address.addr = alloca i8, align 1
  %cipv = alloca i16, align 2
  %data = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !12384, metadata !DIExpression()), !dbg !12385
  store i8 %address, i8* %address.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %address.addr, metadata !12386, metadata !DIExpression()), !dbg !12387
  call void @llvm.dbg.declare(metadata i16* %cipv, metadata !12388, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.declare(metadata i8* %data, metadata !12390, metadata !DIExpression()), !dbg !12391
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12392
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 29, !dbg !12394
  %1 = load i64, i64* %pci_iobase, align 8, !dbg !12394
  %tobool = icmp ne i64 %1, 0, !dbg !12392
  br i1 %tobool, label %if.end, label %if.then, !dbg !12395

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12396
  br label %return, !dbg !12396

if.end:                                           ; preds = %entry
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12397
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %2, i32 0, i32 10, !dbg !12397
  %3 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !12397
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12397
  call void %3(%struct.hfc_multi* %4, i8 zeroext 1, i8 zeroext 4) #12, !dbg !12397
  %5 = load i8, i8* %address.addr, align 1, !dbg !12398
  %conv = zext i8 %5 to i32, !dbg !12398
  %cmp = icmp eq i32 %conv, 0, !dbg !12400
  br i1 %cmp, label %if.then2, label %if.else, !dbg !12401

if.then2:                                         ; preds = %if.end
  store i16 16384, i16* %cipv, align 2, !dbg !12402
  br label %if.end3, !dbg !12403

if.else:                                          ; preds = %if.end
  store i16 22528, i16* %cipv, align 2, !dbg !12404
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2
  %6 = load i16, i16* %cipv, align 2, !dbg !12405
  %7 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12406
  %pci_iobase4 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %7, i32 0, i32 29, !dbg !12407
  %8 = load i64, i64* %pci_iobase4, align 8, !dbg !12407
  %add = add i64 %8, 4, !dbg !12408
  %conv5 = trunc i64 %add to i32, !dbg !12406
  call void @outw(i16 zeroext %6, i32 %conv5) #12, !dbg !12409
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12410
  %pci_iobase6 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %9, i32 0, i32 29, !dbg !12411
  %10 = load i64, i64* %pci_iobase6, align 8, !dbg !12411
  %conv7 = trunc i64 %10 to i32, !dbg !12410
  %call = call zeroext i8 @inb(i32 %conv7) #12, !dbg !12412
  store i8 %call, i8* %data, align 1, !dbg !12413
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12414
  %HFC_outb8 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %11, i32 0, i32 10, !dbg !12414
  %12 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb8, align 8, !dbg !12414
  %13 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !12414
  call void %12(%struct.hfc_multi* %13, i8 zeroext 1, i8 zeroext 0) #12, !dbg !12414
  %14 = load i8, i8* %data, align 1, !dbg !12415
  store i8 %14, i8* %retval, align 1, !dbg !12416
  br label %return, !dbg !12416

return:                                           ; preds = %if.end3, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !12417
  ret i8 %15, !dbg !12417
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #2 !dbg !12418 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  call void @llvm.dbg.declare(metadata i8* %value, metadata !12423, metadata !DIExpression()), !dbg !12422
  %0 = load i32, i32* %port.addr, align 4, !dbg !12422
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #6, !dbg !12422, !srcloc !12424
  store i8 %1, i8* %value, align 1, !dbg !12422
  %2 = load i8, i8* %value, align 1, !dbg !12422
  ret i8 %2, !dbg !12422
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #2 !dbg !12425 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12430, metadata !DIExpression()), !dbg !12432
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12434, metadata !DIExpression()), !dbg !12435
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !12436, metadata !DIExpression()), !dbg !12438
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12439, metadata !DIExpression()), !dbg !12441
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12443, metadata !DIExpression()), !dbg !12444
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12445, metadata !DIExpression()), !dbg !12446
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12447, metadata !DIExpression()), !dbg !12448
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12449
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12450
  %div = sdiv i64 %1, 64, !dbg !12450
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12451
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12449
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12452
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12453
  %conv.i = trunc i64 %4 to i32, !dbg !12453
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !12454
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12455
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12455
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !12455
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12456
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12457
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !12438
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !12438
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #6, !dbg !12438, !srcloc !12458
  store i8 %11, i8* %c.i, align 1, !dbg !12438
  %12 = load i8, i8* %c.i, align 1, !dbg !12438
  %tobool.i = trunc i8 %12 to i1, !dbg !12438
  %frombool.i = zext i1 %tobool.i to i8, !dbg !12438
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !12438
  %13 = load i8, i8* %tmp.i, align 1, !dbg !12438
  %tobool1.i = trunc i8 %13 to i1, !dbg !12438
  ret i1 %tobool1.i, !dbg !12459
}

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_word(%struct.pci_dev*, i32, i16 zeroext) #3

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #3

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #3

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #2 !dbg !12460 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12463, metadata !DIExpression()), !dbg !12464
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12465, metadata !DIExpression()), !dbg !12466
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12467
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !12468
  %1 = load i8*, i8** %data.addr, align 8, !dbg !12469
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #12, !dbg !12470
  ret void, !dbg !12471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !12472 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12473, metadata !DIExpression()), !dbg !12474
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12475, metadata !DIExpression()), !dbg !12476
  ret i1 true, !dbg !12477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !12478 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12481, metadata !DIExpression()), !dbg !12482
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12483, metadata !DIExpression()), !dbg !12484
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12485
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12486
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !12487
  store i8* %0, i8** %driver_data, align 8, !dbg !12488
  ret void, !dbg !12489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #2 !dbg !12490 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !12491, metadata !DIExpression()), !dbg !12492
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12493
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #12, !dbg !12495
  br i1 %call, label %if.end, label %if.then, !dbg !12496

if.then:                                          ; preds = %entry
  br label %return, !dbg !12497

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12498
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !12499
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !12499
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12500
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !12501
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12501
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #12, !dbg !12502
  br label %return, !dbg !12503

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #2 !dbg !12504 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !12507, metadata !DIExpression()), !dbg !12508
  ret i1 true, !dbg !12509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !12510 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12513, metadata !DIExpression()), !dbg !12514
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12515, metadata !DIExpression()), !dbg !12516
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12517
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12518
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !12519
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !12520
  br label %do.body, !dbg !12521

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !12522

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !12524

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !12522

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12526
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12526
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !12526
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !12526
  br label %do.end5, !dbg !12526

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !12522

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !12528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hfcmulti_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #2 !dbg !12529 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %m = alloca %struct.hm_map*, align 8
  %ret = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12530, metadata !DIExpression()), !dbg !12531
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !12532, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.declare(metadata %struct.hm_map** %m, metadata !12534, metadata !DIExpression()), !dbg !12535
  %0 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !12536
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %0, i32 0, i32 6, !dbg !12537
  %1 = load i64, i64* %driver_data, align 8, !dbg !12537
  %2 = inttoptr i64 %1 to %struct.hm_map*, !dbg !12538
  store %struct.hm_map* %2, %struct.hm_map** %m, align 8, !dbg !12535
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12539, metadata !DIExpression()), !dbg !12540
  %3 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !12541
  %cmp = icmp eq %struct.hm_map* %3, null, !dbg !12543
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12544

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !12545
  %vendor = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %4, i32 0, i32 0, !dbg !12546
  %5 = load i32, i32* %vendor, align 8, !dbg !12546
  %cmp1 = icmp eq i32 %5, 5015, !dbg !12547
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !12548

land.lhs.true2:                                   ; preds = %land.lhs.true
  %6 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !12549
  %device = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %6, i32 0, i32 1, !dbg !12550
  %7 = load i32, i32* %device, align 4, !dbg !12550
  %cmp3 = icmp eq i32 %7, 2228, !dbg !12551
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !12552

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %8 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !12553
  %device4 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %8, i32 0, i32 1, !dbg !12554
  %9 = load i32, i32* %device4, align 4, !dbg !12554
  %cmp5 = icmp eq i32 %9, 5816, !dbg !12555
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !12556

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %10 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !12557
  %device7 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %10, i32 0, i32 1, !dbg !12558
  %11 = load i32, i32* %device7, align 4, !dbg !12558
  %cmp8 = icmp eq i32 %11, 12465, !dbg !12559
  br i1 %cmp8, label %if.then, label %if.end, !dbg !12560

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %land.lhs.true2
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12561
  %vendor9 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 7, !dbg !12563
  %13 = load i16, i16* %vendor9, align 4, !dbg !12563
  %conv = zext i16 %13 to i32, !dbg !12561
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12564
  %device10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 8, !dbg !12565
  %15 = load i16, i16* %device10, align 2, !dbg !12565
  %conv11 = zext i16 %15 to i32, !dbg !12564
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12566
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 9, !dbg !12567
  %17 = load i16, i16* %subsystem_vendor, align 8, !dbg !12567
  %conv12 = zext i16 %17 to i32, !dbg !12566
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12568
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 10, !dbg !12569
  %19 = load i16, i16* %subsystem_device, align 2, !dbg !12569
  %conv13 = zext i16 %19 to i32, !dbg !12568
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.70, i64 0, i64 0), i32 %conv, i32 %conv11, i32 %conv12, i32 %conv13) #13, !dbg !12570
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.71, i64 0, i64 0)) #13, !dbg !12571
  store i32 -19, i32* %retval, align 4, !dbg !12572
  br label %return, !dbg !12572

if.end:                                           ; preds = %lor.lhs.false6, %land.lhs.true, %entry
  %20 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !12573
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12574
  %22 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !12575
  %call15 = call i32 @hfcmulti_init(%struct.hm_map* %20, %struct.pci_dev* %21, %struct.pci_device_id* %22) #12, !dbg !12576
  store i32 %call15, i32* %ret, align 4, !dbg !12577
  %23 = load i32, i32* %ret, align 4, !dbg !12578
  %tobool = icmp ne i32 %23, 0, !dbg !12578
  br i1 %tobool, label %if.then16, label %if.end17, !dbg !12580

if.then16:                                        ; preds = %if.end
  %24 = load i32, i32* %ret, align 4, !dbg !12581
  store i32 %24, i32* %retval, align 4, !dbg !12582
  br label %return, !dbg !12582

if.end17:                                         ; preds = %if.end
  %25 = load i32, i32* @HFC_cnt, align 4, !dbg !12583
  %inc = add i32 %25, 1, !dbg !12583
  store i32 %inc, i32* @HFC_cnt, align 4, !dbg !12583
  %26 = load i32, i32* @HFC_cnt, align 4, !dbg !12584
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i64 0, i64 0), i32 %26) #13, !dbg !12585
  store i32 0, i32* %retval, align 4, !dbg !12586
  br label %return, !dbg !12586

return:                                           ; preds = %if.end17, %if.then16, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !12587
  ret i32 %27, !dbg !12587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfc_remove_pci(%struct.pci_dev* %pdev) #2 !dbg !12588 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !10043, metadata !DIExpression()), !dbg !12589
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !12593
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !12594
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %card = alloca %struct.hfc_multi*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12601, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %card, metadata !12603, metadata !DIExpression()), !dbg !12604
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12605
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !12606
  %1 = bitcast i8* %call to %struct.hfc_multi*, !dbg !12606
  store %struct.hfc_multi* %1, %struct.hfc_multi** %card, align 8, !dbg !12604
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12607, metadata !DIExpression()), !dbg !12608
  %2 = load i32, i32* @debug, align 4, !dbg !12609
  %tobool = icmp ne i32 %2, 0, !dbg !12609
  br i1 %tobool, label %if.then, label %if.end, !dbg !12611

if.then:                                          ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12612
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 7, !dbg !12613
  %4 = load i16, i16* %vendor, align 4, !dbg !12613
  %conv = zext i16 %4 to i32, !dbg !12612
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12614
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 8, !dbg !12615
  %6 = load i16, i16* %device, align 2, !dbg !12615
  %conv1 = zext i16 %6 to i32, !dbg !12614
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12616
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 9, !dbg !12617
  %8 = load i16, i16* %subsystem_vendor, align 8, !dbg !12617
  %conv2 = zext i16 %8 to i32, !dbg !12616
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !12618
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 10, !dbg !12619
  %10 = load i16, i16* %subsystem_device, align 2, !dbg !12619
  %conv3 = zext i16 %10 to i32, !dbg !12618
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.287, i64 0, i64 0), i32 %conv, i32 %conv1, i32 %conv2, i32 %conv3) #13, !dbg !12620
  br label %if.end, !dbg !12620

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %card, align 8, !dbg !12621
  %tobool5 = icmp ne %struct.hfc_multi* %11, null, !dbg !12621
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !12622

if.then6:                                         ; preds = %if.end
  br label %do.body, !dbg !12623

do.body:                                          ; preds = %if.then6
  br label %do.body7, !dbg !12624

do.body7:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12625, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12628, metadata !DIExpression()), !dbg !12627
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12627
  %conv8 = zext i1 %cmp to i32, !dbg !12627
  store i32 1, i32* %tmp, align 4, !dbg !12627
  %12 = load i32, i32* %tmp, align 4, !dbg !12627
  br label %do.body9, !dbg !12629

do.body9:                                         ; preds = %do.body7
  br label %do.body10, !dbg !12630

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !12631

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !12633, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !12637, metadata !DIExpression()), !dbg !12636
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !12636
  %conv15 = zext i1 %cmp14 to i32, !dbg !12636
  store i32 1, i32* %tmp16, align 4, !dbg !12636
  %13 = load i32, i32* %tmp16, align 4, !dbg !12636
  %call17 = call i64 @arch_local_irq_save() #12, !dbg !12638
  store i64 %call17, i64* %flags, align 8, !dbg !12638
  br label %do.end, !dbg !12638

do.end:                                           ; preds = %do.body11
  br label %do.end18, !dbg !12631

do.end18:                                         ; preds = %do.end
  br label %do.body19, !dbg !12630

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12639, !srcloc !12640
  br label %do.body20, !dbg !12639

do.body20:                                        ; preds = %do.body19
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12641
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !12642
  %rlock.i = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !12642
  br label %do.end22, !dbg !12643

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !12639

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !12630

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !12629

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !12624

do.end26:                                         ; preds = %do.end25
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %card, align 8, !dbg !12644
  call void @release_card(%struct.hfc_multi* %16) #12, !dbg !12645
  %17 = load i64, i64* %flags, align 8, !dbg !12646
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %17, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !12647
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !12647
  store i32 1, i32* %tmp.i, align 4, !dbg !12647
  %18 = load i32, i32* %tmp.i, align 4, !dbg !12647
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !12648
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !12648
  store i32 1, i32* %tmp8.i, align 4, !dbg !12648
  %19 = load i32, i32* %tmp8.i, align 4, !dbg !12648
  %20 = load i64, i64* %flags.addr.i, align 8, !dbg !12649
  call void @arch_local_irq_restore(i64 %20) #14, !dbg !12649
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12650, !srcloc !10125
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !12651
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !12651
  %rlock.i33 = bitcast %union.anon.1* %22 to %struct.raw_spinlock*, !dbg !12651
  br label %if.end31, !dbg !12652

if.else:                                          ; preds = %if.end
  %23 = load i32, i32* @debug, align 4, !dbg !12653
  %tobool27 = icmp ne i32 %23, 0, !dbg !12653
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !12656

if.then28:                                        ; preds = %if.else
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.288, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.hfc_remove_pci, i64 0, i64 0)) #13, !dbg !12657
  br label %if.end30, !dbg !12657

if.end30:                                         ; preds = %if.then28, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %do.end26
  ret void, !dbg !12658
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hfcmulti_init(%struct.hm_map* %m, %struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #2 !dbg !12659 {
entry:
  %lock.addr.i427 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i427, metadata !10052, metadata !DIExpression()), !dbg !12662
  %lock.addr.i422 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i422, metadata !10043, metadata !DIExpression()), !dbg !12669
  %flags.addr.i423 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i423, metadata !10050, metadata !DIExpression()), !dbg !12671
  %tmp.i424 = alloca i32, align 4
  %tmp8.i425 = alloca i32, align 4
  %lock.addr.i420 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i420, metadata !10043, metadata !DIExpression()), !dbg !12672
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !12674
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i418 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i418, metadata !10052, metadata !DIExpression()), !dbg !12675
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !12682
  %retval = alloca i32, align 4
  %m.addr = alloca %struct.hm_map*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %ret_err = alloca i32, align 4
  %pt = alloca i32, align 4
  %hc = alloca %struct.hfc_multi*, align 8
  %flags = alloca i64, align 8
  %dips = alloca i8, align 1
  %pmj = alloca i8, align 1
  %i = alloca i32, align 4
  %ch = alloca i32, align 4
  %maskcheck = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy356 = alloca i64, align 8
  %__dummy2357 = alloca i64, align 8
  %tmp360 = alloca i32, align 4
  %__dummy388 = alloca i64, align 8
  %__dummy2389 = alloca i64, align 8
  %tmp392 = alloca i32, align 4
  %__dummy396 = alloca i64, align 8
  %__dummy2397 = alloca i64, align 8
  %tmp400 = alloca i32, align 4
  store %struct.hm_map* %m, %struct.hm_map** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hm_map** %m.addr, metadata !12685, metadata !DIExpression()), !dbg !12686
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !12687, metadata !DIExpression()), !dbg !12688
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !12689, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.declare(metadata i32* %ret_err, metadata !12691, metadata !DIExpression()), !dbg !12692
  store i32 0, i32* %ret_err, align 4, !dbg !12692
  call void @llvm.dbg.declare(metadata i32* %pt, metadata !12693, metadata !DIExpression()), !dbg !12694
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !12695, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12697, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.declare(metadata i8* %dips, metadata !12699, metadata !DIExpression()), !dbg !12700
  store i8 0, i8* %dips, align 1, !dbg !12700
  call void @llvm.dbg.declare(metadata i8* %pmj, metadata !12701, metadata !DIExpression()), !dbg !12702
  store i8 0, i8* %pmj, align 1, !dbg !12702
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12703, metadata !DIExpression()), !dbg !12704
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !12705, metadata !DIExpression()), !dbg !12706
  call void @llvm.dbg.declare(metadata i32* %maskcheck, metadata !12707, metadata !DIExpression()), !dbg !12708
  %0 = load i32, i32* @HFC_cnt, align 4, !dbg !12709
  %cmp = icmp sge i32 %0, 8, !dbg !12711
  br i1 %cmp, label %if.then, label %if.end, !dbg !12712

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0), i32 8) #13, !dbg !12713
  store i32 -22, i32* %retval, align 4, !dbg !12715
  br label %return, !dbg !12715

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @HFC_cnt, align 4, !dbg !12716
  %idxprom = sext i32 %1 to i64, !dbg !12718
  %arrayidx = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom, !dbg !12718
  %2 = load i32, i32* %arrayidx, align 4, !dbg !12718
  %and = and i32 %2, 255, !dbg !12719
  %tobool = icmp ne i32 %and, 0, !dbg !12719
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !12720

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32, i32* @HFC_cnt, align 4, !dbg !12721
  %idxprom1 = sext i32 %3 to i64, !dbg !12722
  %arrayidx2 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom1, !dbg !12722
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !12722
  %and3 = and i32 %4, 255, !dbg !12723
  %5 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !12724
  %type = getelementptr inbounds %struct.hm_map, %struct.hm_map* %5, i32 0, i32 2, !dbg !12725
  %6 = load i32, i32* %type, align 8, !dbg !12725
  %cmp4 = icmp ne i32 %and3, %6, !dbg !12726
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !12727

if.then5:                                         ; preds = %land.lhs.true
  %7 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !12728
  %vendor_name = getelementptr inbounds %struct.hm_map, %struct.hm_map* %7, i32 0, i32 0, !dbg !12730
  %8 = load i8*, i8** %vendor_name, align 8, !dbg !12730
  %9 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !12731
  %card_name = getelementptr inbounds %struct.hm_map, %struct.hm_map* %9, i32 0, i32 1, !dbg !12732
  %10 = load i8*, i8** %card_name, align 8, !dbg !12732
  %11 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !12733
  %type6 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %11, i32 0, i32 2, !dbg !12734
  %12 = load i32, i32* %type6, align 8, !dbg !12734
  %13 = load i32, i32* @HFC_cnt, align 4, !dbg !12735
  %14 = load i32, i32* @HFC_cnt, align 4, !dbg !12736
  %idxprom7 = sext i32 %14 to i64, !dbg !12737
  %arrayidx8 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom7, !dbg !12737
  %15 = load i32, i32* %arrayidx8, align 4, !dbg !12737
  %and9 = and i32 %15, 255, !dbg !12738
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.74, i64 0, i64 0), i8* %8, i8* %10, i32 %12, i32 %13, i32 %and9) #13, !dbg !12739
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.75, i64 0, i64 0)) #13, !dbg !12740
  store i32 -22, i32* %retval, align 4, !dbg !12741
  br label %return, !dbg !12741

if.end12:                                         ; preds = %land.lhs.true, %if.end
  %16 = load i32, i32* @debug, align 4, !dbg !12742
  %and13 = and i32 %16, 262144, !dbg !12744
  %tobool14 = icmp ne i32 %and13, 0, !dbg !12744
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !12745

if.then15:                                        ; preds = %if.end12
  %17 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !12746
  %vendor_name16 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %17, i32 0, i32 0, !dbg !12747
  %18 = load i8*, i8** %vendor_name16, align 8, !dbg !12747
  %19 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !12748
  %card_name17 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %19, i32 0, i32 1, !dbg !12749
  %20 = load i8*, i8** %card_name17, align 8, !dbg !12749
  %21 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !12750
  %type18 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %21, i32 0, i32 2, !dbg !12751
  %22 = load i32, i32* %type18, align 8, !dbg !12751
  %23 = load i32, i32* @HFC_cnt, align 4, !dbg !12752
  %idxprom19 = sext i32 %23 to i64, !dbg !12753
  %arrayidx20 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom19, !dbg !12753
  %24 = load i32, i32* %arrayidx20, align 4, !dbg !12753
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hfcmulti_init, i64 0, i64 0), i8* %18, i8* %20, i32 %22, i32 %24) #13, !dbg !12754
  br label %if.end22, !dbg !12754

if.end22:                                         ; preds = %if.then15, %if.end12
  %call23 = call i8* @kzalloc(i64 4560, i32 3264) #12, !dbg !12755
  %25 = bitcast i8* %call23 to %struct.hfc_multi*, !dbg !12755
  store %struct.hfc_multi* %25, %struct.hfc_multi** %hc, align 8, !dbg !12756
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12757
  %tobool24 = icmp ne %struct.hfc_multi* %26, null, !dbg !12757
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !12759

if.then25:                                        ; preds = %if.end22
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.77, i64 0, i64 0)) #13, !dbg !12760
  store i32 -12, i32* %retval, align 4, !dbg !12762
  br label %return, !dbg !12762

if.end27:                                         ; preds = %if.end22
  br label %do.body, !dbg !12763

do.body:                                          ; preds = %if.end27
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12764
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %27, i32 0, i32 57, !dbg !12764
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12765
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !12766
  %rlock.i = bitcast %union.anon.1* %29 to %struct.raw_spinlock*, !dbg !12766
  %30 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12764
  %lock29 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %30, i32 0, i32 57, !dbg !12764
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !12764
  %rlock = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !12764
  %32 = bitcast %struct.spinlock* %lock29 to i8*, !dbg !12764
  %33 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !12764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 1 %33, i64 0, i1 false), !dbg !12764
  br label %do.end, !dbg !12764

do.end:                                           ; preds = %do.body
  %34 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !12767
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12768
  %mtyp = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 1, !dbg !12769
  store %struct.hm_map* %34, %struct.hm_map** %mtyp, align 8, !dbg !12770
  %36 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !12771
  %type30 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %36, i32 0, i32 2, !dbg !12772
  %37 = load i32, i32* %type30, align 8, !dbg !12772
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12773
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 4, !dbg !12774
  store i32 %37, i32* %ctype, align 8, !dbg !12775
  %39 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !12776
  %ports = getelementptr inbounds %struct.hm_map, %struct.hm_map* %39, i32 0, i32 3, !dbg !12777
  %40 = load i32, i32* %ports, align 4, !dbg !12777
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12778
  %ports31 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %41, i32 0, i32 5, !dbg !12779
  store i32 %40, i32* %ports31, align 4, !dbg !12780
  %42 = load i32, i32* @HFC_cnt, align 4, !dbg !12781
  %43 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12782
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %43, i32 0, i32 2, !dbg !12783
  store i32 %42, i32* %id, align 8, !dbg !12784
  %44 = load i32, i32* @HFC_cnt, align 4, !dbg !12785
  %idxprom32 = sext i32 %44 to i64, !dbg !12786
  %arrayidx33 = getelementptr [8 x i32], [8 x i32]* @pcm, i64 0, i64 %idxprom32, !dbg !12786
  %45 = load i32, i32* %arrayidx33, align 4, !dbg !12786
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12787
  %pcm = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 3, !dbg !12788
  store i32 %45, i32* %pcm, align 4, !dbg !12789
  %47 = load i32, i32* @HFC_cnt, align 4, !dbg !12790
  %idxprom34 = sext i32 %47 to i64, !dbg !12791
  %arrayidx35 = getelementptr [8 x i32], [8 x i32]* @iomode, i64 0, i64 %idxprom34, !dbg !12791
  %48 = load i32, i32* %arrayidx35, align 4, !dbg !12791
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12792
  %io_mode = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 9, !dbg !12793
  store i32 %48, i32* %io_mode, align 8, !dbg !12794
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12795
  %ctype36 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %50, i32 0, i32 4, !dbg !12797
  %51 = load i32, i32* %ctype36, align 8, !dbg !12797
  %cmp37 = icmp eq i32 %51, 1, !dbg !12798
  br i1 %cmp37, label %land.lhs.true38, label %if.end82, !dbg !12799

land.lhs.true38:                                  ; preds = %do.end
  %52 = load i32, i32* @E1_cnt, align 4, !dbg !12800
  %idxprom39 = sext i32 %52 to i64, !dbg !12801
  %arrayidx40 = getelementptr [8 x i32], [8 x i32]* @dmask, i64 0, i64 %idxprom39, !dbg !12801
  %53 = load i32, i32* %arrayidx40, align 4, !dbg !12801
  %tobool41 = icmp ne i32 %53, 0, !dbg !12801
  br i1 %tobool41, label %if.then42, label %if.end82, !dbg !12802

if.then42:                                        ; preds = %land.lhs.true38
  store i32 0, i32* %pt, align 4, !dbg !12803
  store i32 0, i32* %maskcheck, align 4, !dbg !12805
  store i32 0, i32* %ch, align 4, !dbg !12806
  br label %for.cond, !dbg !12808

for.cond:                                         ; preds = %for.inc, %if.then42
  %54 = load i32, i32* %ch, align 4, !dbg !12809
  %cmp43 = icmp sle i32 %54, 31, !dbg !12811
  br i1 %cmp43, label %for.body, label %for.end, !dbg !12812

for.body:                                         ; preds = %for.cond
  %55 = load i32, i32* %ch, align 4, !dbg !12813
  %shl = shl i32 1, %55, !dbg !12816
  %56 = load i32, i32* @E1_cnt, align 4, !dbg !12817
  %idxprom44 = sext i32 %56 to i64, !dbg !12818
  %arrayidx45 = getelementptr [8 x i32], [8 x i32]* @dmask, i64 0, i64 %idxprom44, !dbg !12818
  %57 = load i32, i32* %arrayidx45, align 4, !dbg !12818
  %and46 = and i32 %shl, %57, !dbg !12819
  %tobool47 = icmp ne i32 %and46, 0, !dbg !12819
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !12820

if.then48:                                        ; preds = %for.body
  br label %for.inc, !dbg !12821

if.end49:                                         ; preds = %for.body
  %58 = load i32, i32* %ch, align 4, !dbg !12822
  %conv = trunc i32 %58 to i8, !dbg !12822
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12823
  %dnum = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %59, i32 0, i32 46, !dbg !12824
  %60 = load i32, i32* %pt, align 4, !dbg !12825
  %idxprom50 = sext i32 %60 to i64, !dbg !12823
  %arrayidx51 = getelementptr [32 x i8], [32 x i8]* %dnum, i64 0, i64 %idxprom50, !dbg !12823
  store i8 %conv, i8* %arrayidx51, align 1, !dbg !12826
  %61 = load i32, i32* @bmask_cnt, align 4, !dbg !12827
  %inc = add i32 %61, 1, !dbg !12827
  store i32 %inc, i32* @bmask_cnt, align 4, !dbg !12827
  %idxprom52 = sext i32 %61 to i64, !dbg !12828
  %arrayidx53 = getelementptr [256 x i32], [256 x i32]* @bmask, i64 0, i64 %idxprom52, !dbg !12828
  %62 = load i32, i32* %arrayidx53, align 4, !dbg !12828
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12829
  %bmask = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %63, i32 0, i32 45, !dbg !12830
  %64 = load i32, i32* %pt, align 4, !dbg !12831
  %idxprom54 = sext i32 %64 to i64, !dbg !12829
  %arrayidx55 = getelementptr [32 x i32], [32 x i32]* %bmask, i64 0, i64 %idxprom54, !dbg !12829
  store i32 %62, i32* %arrayidx55, align 4, !dbg !12832
  %65 = load i32, i32* %maskcheck, align 4, !dbg !12833
  %66 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12835
  %bmask56 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %66, i32 0, i32 45, !dbg !12836
  %67 = load i32, i32* %pt, align 4, !dbg !12837
  %idxprom57 = sext i32 %67 to i64, !dbg !12835
  %arrayidx58 = getelementptr [32 x i32], [32 x i32]* %bmask56, i64 0, i64 %idxprom57, !dbg !12835
  %68 = load i32, i32* %arrayidx58, align 4, !dbg !12835
  %and59 = and i32 %65, %68, !dbg !12838
  %tobool60 = icmp ne i32 %and59, 0, !dbg !12838
  br i1 %tobool60, label %if.then68, label %lor.lhs.false, !dbg !12839

lor.lhs.false:                                    ; preds = %if.end49
  %69 = load i32, i32* @E1_cnt, align 4, !dbg !12840
  %idxprom61 = sext i32 %69 to i64, !dbg !12841
  %arrayidx62 = getelementptr [8 x i32], [8 x i32]* @dmask, i64 0, i64 %idxprom61, !dbg !12841
  %70 = load i32, i32* %arrayidx62, align 4, !dbg !12841
  %71 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12842
  %bmask63 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %71, i32 0, i32 45, !dbg !12843
  %72 = load i32, i32* %pt, align 4, !dbg !12844
  %idxprom64 = sext i32 %72 to i64, !dbg !12842
  %arrayidx65 = getelementptr [32 x i32], [32 x i32]* %bmask63, i64 0, i64 %idxprom64, !dbg !12842
  %73 = load i32, i32* %arrayidx65, align 4, !dbg !12842
  %and66 = and i32 %70, %73, !dbg !12845
  %tobool67 = icmp ne i32 %and66, 0, !dbg !12845
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !12846

if.then68:                                        ; preds = %lor.lhs.false, %if.end49
  %74 = load i32, i32* @E1_cnt, align 4, !dbg !12847
  %add = add i32 %74, 1, !dbg !12849
  %75 = load i32, i32* %pt, align 4, !dbg !12850
  %call69 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.78, i64 0, i64 0), i32 %add, i32 %75) #13, !dbg !12851
  %76 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12852
  %77 = bitcast %struct.hfc_multi* %76 to i8*, !dbg !12852
  call void @kfree(i8* %77) #12, !dbg !12853
  store i32 -22, i32* %retval, align 4, !dbg !12854
  br label %return, !dbg !12854

if.end70:                                         ; preds = %lor.lhs.false
  %78 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12855
  %bmask71 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %78, i32 0, i32 45, !dbg !12856
  %79 = load i32, i32* %pt, align 4, !dbg !12857
  %idxprom72 = sext i32 %79 to i64, !dbg !12855
  %arrayidx73 = getelementptr [32 x i32], [32 x i32]* %bmask71, i64 0, i64 %idxprom72, !dbg !12855
  %80 = load i32, i32* %arrayidx73, align 4, !dbg !12855
  %81 = load i32, i32* %maskcheck, align 4, !dbg !12858
  %or = or i32 %81, %80, !dbg !12858
  store i32 %or, i32* %maskcheck, align 4, !dbg !12858
  %82 = load i32, i32* @E1_cnt, align 4, !dbg !12859
  %add74 = add i32 %82, 1, !dbg !12860
  %83 = load i32, i32* %ch, align 4, !dbg !12861
  %84 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12862
  %bmask75 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %84, i32 0, i32 45, !dbg !12863
  %85 = load i32, i32* %pt, align 4, !dbg !12864
  %idxprom76 = sext i32 %85 to i64, !dbg !12862
  %arrayidx77 = getelementptr [32 x i32], [32 x i32]* %bmask75, i64 0, i64 %idxprom76, !dbg !12862
  %86 = load i32, i32* %arrayidx77, align 4, !dbg !12862
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.79, i64 0, i64 0), i32 %add74, i32 %83, i32 %86) #13, !dbg !12865
  %87 = load i32, i32* %pt, align 4, !dbg !12866
  %inc79 = add i32 %87, 1, !dbg !12866
  store i32 %inc79, i32* %pt, align 4, !dbg !12866
  br label %for.inc, !dbg !12867

for.inc:                                          ; preds = %if.end70, %if.then48
  %88 = load i32, i32* %ch, align 4, !dbg !12868
  %inc80 = add i32 %88, 1, !dbg !12868
  store i32 %inc80, i32* %ch, align 4, !dbg !12868
  br label %for.cond, !dbg !12869, !llvm.loop !12870

for.end:                                          ; preds = %for.cond
  %89 = load i32, i32* %pt, align 4, !dbg !12872
  %90 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12873
  %ports81 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %90, i32 0, i32 5, !dbg !12874
  store i32 %89, i32* %ports81, align 4, !dbg !12875
  br label %if.end82, !dbg !12876

if.end82:                                         ; preds = %for.end, %land.lhs.true38, %do.end
  %91 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12877
  %ctype83 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %91, i32 0, i32 4, !dbg !12879
  %92 = load i32, i32* %ctype83, align 8, !dbg !12879
  %cmp84 = icmp eq i32 %92, 1, !dbg !12880
  br i1 %cmp84, label %land.lhs.true86, label %if.end96, !dbg !12881

land.lhs.true86:                                  ; preds = %if.end82
  %93 = load i32, i32* @E1_cnt, align 4, !dbg !12882
  %idxprom87 = sext i32 %93 to i64, !dbg !12883
  %arrayidx88 = getelementptr [8 x i32], [8 x i32]* @dmask, i64 0, i64 %idxprom87, !dbg !12883
  %94 = load i32, i32* %arrayidx88, align 4, !dbg !12883
  %tobool89 = icmp ne i32 %94, 0, !dbg !12883
  br i1 %tobool89, label %if.end96, label %if.then90, !dbg !12884

if.then90:                                        ; preds = %land.lhs.true86
  %95 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12885
  %dnum91 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %95, i32 0, i32 46, !dbg !12887
  %arrayidx92 = getelementptr [32 x i8], [32 x i8]* %dnum91, i64 0, i64 0, !dbg !12885
  store i8 16, i8* %arrayidx92, align 4, !dbg !12888
  %96 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12889
  %bmask93 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %96, i32 0, i32 45, !dbg !12890
  %arrayidx94 = getelementptr [32 x i32], [32 x i32]* %bmask93, i64 0, i64 0, !dbg !12889
  store i32 -65538, i32* %arrayidx94, align 4, !dbg !12891
  %97 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12892
  %ports95 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %97, i32 0, i32 5, !dbg !12893
  store i32 1, i32* %ports95, align 4, !dbg !12894
  br label %if.end96, !dbg !12895

if.end96:                                         ; preds = %if.then90, %land.lhs.true86, %if.end82
  %98 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12896
  %masterclk = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %98, i32 0, i32 32, !dbg !12897
  store i32 -1, i32* %masterclk, align 8, !dbg !12898
  %99 = load i32, i32* @HFC_cnt, align 4, !dbg !12899
  %idxprom97 = sext i32 %99 to i64, !dbg !12901
  %arrayidx98 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom97, !dbg !12901
  %100 = load i32, i32* %arrayidx98, align 4, !dbg !12901
  %and99 = and i32 %100, 256, !dbg !12902
  %tobool100 = icmp ne i32 %and99, 0, !dbg !12902
  br i1 %tobool100, label %if.then101, label %if.else, !dbg !12903

if.then101:                                       ; preds = %if.end96
  %101 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12904
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %101, i32 0, i32 31, !dbg !12906
  %call102 = call zeroext i1 @test_and_set_bit(i64 8, i64* %chip) #12, !dbg !12907
  %102 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12908
  %silence = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %102, i32 0, i32 33, !dbg !12909
  store i8 -1, i8* %silence, align 4, !dbg !12910
  br label %if.end104, !dbg !12911

if.else:                                          ; preds = %if.end96
  %103 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12912
  %silence103 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %103, i32 0, i32 33, !dbg !12913
  store i8 42, i8* %silence103, align 4, !dbg !12914
  br label %if.end104

if.end104:                                        ; preds = %if.else, %if.then101
  %104 = load i32, i32* @poll, align 4, !dbg !12915
  %shr = lshr i32 %104, 1, !dbg !12917
  %conv105 = zext i32 %shr to i64, !dbg !12918
  %cmp106 = icmp ugt i64 %conv105, 128, !dbg !12919
  br i1 %cmp106, label %if.then108, label %if.end110, !dbg !12920

if.then108:                                       ; preds = %if.end104
  %call109 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.80, i64 0, i64 0)) #13, !dbg !12921
  %105 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12923
  %106 = bitcast %struct.hfc_multi* %105 to i8*, !dbg !12923
  call void @kfree(i8* %106) #12, !dbg !12924
  store i32 -22, i32* %retval, align 4, !dbg !12925
  br label %return, !dbg !12925

if.end110:                                        ; preds = %if.end104
  store i32 0, i32* %i, align 4, !dbg !12926
  br label %for.cond111, !dbg !12928

for.cond111:                                      ; preds = %for.inc119, %if.end110
  %107 = load i32, i32* %i, align 4, !dbg !12929
  %108 = load i32, i32* @poll, align 4, !dbg !12931
  %shr112 = lshr i32 %108, 1, !dbg !12932
  %cmp113 = icmp ult i32 %107, %shr112, !dbg !12933
  br i1 %cmp113, label %for.body115, label %for.end121, !dbg !12934

for.body115:                                      ; preds = %for.cond111
  %109 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12935
  %silence116 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %109, i32 0, i32 33, !dbg !12936
  %110 = load i8, i8* %silence116, align 4, !dbg !12936
  %111 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12937
  %silence_data = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %111, i32 0, i32 34, !dbg !12938
  %112 = load i32, i32* %i, align 4, !dbg !12939
  %idxprom117 = sext i32 %112 to i64, !dbg !12937
  %arrayidx118 = getelementptr [128 x i8], [128 x i8]* %silence_data, i64 0, i64 %idxprom117, !dbg !12937
  store i8 %110, i8* %arrayidx118, align 1, !dbg !12940
  br label %for.inc119, !dbg !12937

for.inc119:                                       ; preds = %for.body115
  %113 = load i32, i32* %i, align 4, !dbg !12941
  %inc120 = add i32 %113, 1, !dbg !12941
  store i32 %inc120, i32* %i, align 4, !dbg !12941
  br label %for.cond111, !dbg !12942, !llvm.loop !12943

for.end121:                                       ; preds = %for.cond111
  %114 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12945
  %ctype122 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %114, i32 0, i32 4, !dbg !12947
  %115 = load i32, i32* %ctype122, align 8, !dbg !12947
  %cmp123 = icmp ne i32 %115, 5, !dbg !12948
  br i1 %cmp123, label %if.then125, label %if.end136, !dbg !12949

if.then125:                                       ; preds = %for.end121
  %116 = load i32, i32* @HFC_cnt, align 4, !dbg !12950
  %idxprom126 = sext i32 %116 to i64, !dbg !12953
  %arrayidx127 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom126, !dbg !12953
  %117 = load i32, i32* %arrayidx127, align 4, !dbg !12953
  %and128 = and i32 %117, 512, !dbg !12954
  %tobool129 = icmp ne i32 %and128, 0, !dbg !12954
  br i1 %tobool129, label %if.end133, label %if.then130, !dbg !12955

if.then130:                                       ; preds = %if.then125
  %118 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12956
  %chip131 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %118, i32 0, i32 31, !dbg !12957
  %call132 = call zeroext i1 @test_and_set_bit(i64 6, i64* %chip131) #12, !dbg !12958
  br label %if.end133, !dbg !12958

if.end133:                                        ; preds = %if.then130, %if.then125
  %119 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12959
  %chip134 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %119, i32 0, i32 31, !dbg !12960
  %call135 = call zeroext i1 @test_and_set_bit(i64 7, i64* %chip134) #12, !dbg !12961
  br label %if.end136, !dbg !12962

if.end136:                                        ; preds = %if.end133, %for.end121
  %120 = load i32, i32* @HFC_cnt, align 4, !dbg !12963
  %idxprom137 = sext i32 %120 to i64, !dbg !12965
  %arrayidx138 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom137, !dbg !12965
  %121 = load i32, i32* %arrayidx138, align 4, !dbg !12965
  %and139 = and i32 %121, 2048, !dbg !12966
  %tobool140 = icmp ne i32 %and139, 0, !dbg !12966
  br i1 %tobool140, label %if.then141, label %if.end144, !dbg !12967

if.then141:                                       ; preds = %if.end136
  %122 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12968
  %chip142 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %122, i32 0, i32 31, !dbg !12969
  %call143 = call zeroext i1 @test_and_set_bit(i64 3, i64* %chip142) #12, !dbg !12970
  br label %if.end144, !dbg !12970

if.end144:                                        ; preds = %if.then141, %if.end136
  %123 = load i32, i32* @HFC_cnt, align 4, !dbg !12971
  %idxprom145 = sext i32 %123 to i64, !dbg !12973
  %arrayidx146 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom145, !dbg !12973
  %124 = load i32, i32* %arrayidx146, align 4, !dbg !12973
  %and147 = and i32 %124, 4096, !dbg !12974
  %tobool148 = icmp ne i32 %and147, 0, !dbg !12974
  br i1 %tobool148, label %if.then149, label %if.end154, !dbg !12975

if.then149:                                       ; preds = %if.end144
  %125 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12976
  %chip150 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %125, i32 0, i32 31, !dbg !12978
  %call151 = call zeroext i1 @test_and_set_bit(i64 4, i64* %chip150) #12, !dbg !12979
  %126 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12980
  %chip152 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %126, i32 0, i32 31, !dbg !12981
  %call153 = call zeroext i1 @test_and_clear_bit(i64 3, i64* %chip152) #12, !dbg !12982
  br label %if.end154, !dbg !12983

if.end154:                                        ; preds = %if.then149, %if.end144
  %127 = load i32, i32* @HFC_cnt, align 4, !dbg !12984
  %idxprom155 = sext i32 %127 to i64, !dbg !12986
  %arrayidx156 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom155, !dbg !12986
  %128 = load i32, i32* %arrayidx156, align 4, !dbg !12986
  %and157 = and i32 %128, 16384, !dbg !12987
  %tobool158 = icmp ne i32 %and157, 0, !dbg !12987
  br i1 %tobool158, label %if.then159, label %if.end162, !dbg !12988

if.then159:                                       ; preds = %if.end154
  %129 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12989
  %chip160 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %129, i32 0, i32 31, !dbg !12990
  %call161 = call zeroext i1 @test_and_set_bit(i64 0, i64* %chip160) #12, !dbg !12991
  br label %if.end162, !dbg !12991

if.end162:                                        ; preds = %if.then159, %if.end154
  %130 = load i32, i32* @HFC_cnt, align 4, !dbg !12992
  %idxprom163 = sext i32 %130 to i64, !dbg !12994
  %arrayidx164 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom163, !dbg !12994
  %131 = load i32, i32* %arrayidx164, align 4, !dbg !12994
  %and165 = and i32 %131, 32768, !dbg !12995
  %tobool166 = icmp ne i32 %and165, 0, !dbg !12995
  br i1 %tobool166, label %if.then167, label %if.end170, !dbg !12996

if.then167:                                       ; preds = %if.end162
  %132 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !12997
  %chip168 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %132, i32 0, i32 31, !dbg !12998
  %call169 = call zeroext i1 @test_and_set_bit(i64 1, i64* %chip168) #12, !dbg !12999
  br label %if.end170, !dbg !12999

if.end170:                                        ; preds = %if.then167, %if.end162
  %133 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13000
  %slots = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %133, i32 0, i32 41, !dbg !13001
  store i32 32, i32* %slots, align 8, !dbg !13002
  %134 = load i32, i32* @HFC_cnt, align 4, !dbg !13003
  %idxprom171 = sext i32 %134 to i64, !dbg !13005
  %arrayidx172 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom171, !dbg !13005
  %135 = load i32, i32* %arrayidx172, align 4, !dbg !13005
  %and173 = and i32 %135, 65536, !dbg !13006
  %tobool174 = icmp ne i32 %and173, 0, !dbg !13006
  br i1 %tobool174, label %if.then175, label %if.end177, !dbg !13007

if.then175:                                       ; preds = %if.end170
  %136 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13008
  %slots176 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %136, i32 0, i32 41, !dbg !13009
  store i32 64, i32* %slots176, align 8, !dbg !13010
  br label %if.end177, !dbg !13008

if.end177:                                        ; preds = %if.then175, %if.end170
  %137 = load i32, i32* @HFC_cnt, align 4, !dbg !13011
  %idxprom178 = sext i32 %137 to i64, !dbg !13013
  %arrayidx179 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom178, !dbg !13013
  %138 = load i32, i32* %arrayidx179, align 4, !dbg !13013
  %and180 = and i32 %138, 131072, !dbg !13014
  %tobool181 = icmp ne i32 %and180, 0, !dbg !13014
  br i1 %tobool181, label %if.then182, label %if.end184, !dbg !13015

if.then182:                                       ; preds = %if.end177
  %139 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13016
  %slots183 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %139, i32 0, i32 41, !dbg !13017
  store i32 128, i32* %slots183, align 8, !dbg !13018
  br label %if.end184, !dbg !13016

if.end184:                                        ; preds = %if.then182, %if.end177
  %140 = load i32, i32* @HFC_cnt, align 4, !dbg !13019
  %idxprom185 = sext i32 %140 to i64, !dbg !13021
  %arrayidx186 = getelementptr [8 x i32], [8 x i32]* @type, i64 0, i64 %idxprom185, !dbg !13021
  %141 = load i32, i32* %arrayidx186, align 4, !dbg !13021
  %and187 = and i32 %141, 524288, !dbg !13022
  %tobool188 = icmp ne i32 %and187, 0, !dbg !13022
  br i1 %tobool188, label %if.then189, label %if.end193, !dbg !13023

if.then189:                                       ; preds = %if.end184
  %142 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13024
  %chip190 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %142, i32 0, i32 31, !dbg !13026
  %call191 = call zeroext i1 @test_and_set_bit(i64 12, i64* %chip190) #12, !dbg !13027
  %143 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13028
  %wdcount = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %143, i32 0, i32 51, !dbg !13029
  store i64 0, i64* %wdcount, align 8, !dbg !13030
  %144 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13031
  %wdbyte = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %144, i32 0, i32 52, !dbg !13032
  store i8 4, i8* %wdbyte, align 8, !dbg !13033
  %call192 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81, i64 0, i64 0)) #13, !dbg !13034
  br label %if.end193, !dbg !13035

if.end193:                                        ; preds = %if.then189, %if.end184
  %145 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13036
  %tobool194 = icmp ne %struct.pci_dev* %145, null, !dbg !13036
  br i1 %tobool194, label %land.lhs.true195, label %if.else199, !dbg !13038

land.lhs.true195:                                 ; preds = %if.end193
  %146 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !13039
  %tobool196 = icmp ne %struct.pci_device_id* %146, null, !dbg !13039
  br i1 %tobool196, label %if.then197, label %if.else199, !dbg !13040

if.then197:                                       ; preds = %land.lhs.true195
  %147 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13041
  %148 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13042
  %149 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !13043
  %call198 = call i32 @setup_pci(%struct.hfc_multi* %147, %struct.pci_dev* %148, %struct.pci_device_id* %149) #12, !dbg !13044
  store i32 %call198, i32* %ret_err, align 4, !dbg !13045
  br label %if.end201, !dbg !13046

if.else199:                                       ; preds = %land.lhs.true195, %if.end193
  %call200 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.82, i64 0, i64 0)) #13, !dbg !13047
  store i32 -5, i32* %ret_err, align 4, !dbg !13049
  br label %if.end201

if.end201:                                        ; preds = %if.else199, %if.then197
  %150 = load i32, i32* %ret_err, align 4, !dbg !13050
  %tobool202 = icmp ne i32 %150, 0, !dbg !13050
  br i1 %tobool202, label %if.then203, label %if.end208, !dbg !13052

if.then203:                                       ; preds = %if.end201
  %151 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13053
  %152 = load %struct.hfc_multi*, %struct.hfc_multi** @syncmaster, align 8, !dbg !13056
  %cmp204 = icmp eq %struct.hfc_multi* %151, %152, !dbg !13057
  br i1 %cmp204, label %if.then206, label %if.end207, !dbg !13058

if.then206:                                       ; preds = %if.then203
  store %struct.hfc_multi* null, %struct.hfc_multi** @syncmaster, align 8, !dbg !13059
  br label %if.end207, !dbg !13060

if.end207:                                        ; preds = %if.then206, %if.then203
  %153 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13061
  %154 = bitcast %struct.hfc_multi* %153 to i8*, !dbg !13061
  call void @kfree(i8* %154) #12, !dbg !13062
  %155 = load i32, i32* %ret_err, align 4, !dbg !13063
  store i32 %155, i32* %retval, align 4, !dbg !13064
  br label %return, !dbg !13064

if.end208:                                        ; preds = %if.end201
  %156 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13065
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %156, i32 0, i32 10, !dbg !13066
  %157 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !13066
  %158 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13067
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %158, i32 0, i32 11, !dbg !13068
  store void (%struct.hfc_multi*, i8, i8)* %157, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !13069
  %159 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13070
  %HFC_inb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %159, i32 0, i32 12, !dbg !13071
  %160 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb, align 8, !dbg !13071
  %161 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13072
  %HFC_inb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %161, i32 0, i32 13, !dbg !13073
  store i8 (%struct.hfc_multi*, i8)* %160, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug, align 8, !dbg !13074
  %162 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13075
  %HFC_inw = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %162, i32 0, i32 14, !dbg !13076
  %163 = load i16 (%struct.hfc_multi*, i8)*, i16 (%struct.hfc_multi*, i8)** %HFC_inw, align 8, !dbg !13076
  %164 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13077
  %HFC_inw_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %164, i32 0, i32 15, !dbg !13078
  store i16 (%struct.hfc_multi*, i8)* %163, i16 (%struct.hfc_multi*, i8)** %HFC_inw_nodebug, align 8, !dbg !13079
  %165 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13080
  %HFC_wait = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %165, i32 0, i32 16, !dbg !13081
  %166 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait, align 8, !dbg !13081
  %167 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13082
  %HFC_wait_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %167, i32 0, i32 17, !dbg !13083
  store void (%struct.hfc_multi*)* %166, void (%struct.hfc_multi*)** %HFC_wait_nodebug, align 8, !dbg !13084
  store i32 0, i32* %pt, align 4, !dbg !13085
  br label %for.cond209, !dbg !13087

for.cond209:                                      ; preds = %for.inc261, %if.end208
  %168 = load i32, i32* %pt, align 4, !dbg !13088
  %169 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13090
  %ports210 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %169, i32 0, i32 5, !dbg !13091
  %170 = load i32, i32* %ports210, align 4, !dbg !13091
  %cmp211 = icmp slt i32 %168, %170, !dbg !13092
  br i1 %cmp211, label %for.body213, label %for.end263, !dbg !13093

for.body213:                                      ; preds = %for.cond209
  %171 = load i32, i32* @Port_cnt, align 4, !dbg !13094
  %cmp214 = icmp sge i32 %171, 64, !dbg !13097
  br i1 %cmp214, label %if.then216, label %if.end218, !dbg !13098

if.then216:                                       ; preds = %for.body213
  %call217 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i64 0, i64 0), i32 64) #13, !dbg !13099
  store i32 -22, i32* %ret_err, align 4, !dbg !13101
  br label %free_card, !dbg !13102

if.end218:                                        ; preds = %for.body213
  %172 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13103
  %ctype219 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %172, i32 0, i32 4, !dbg !13105
  %173 = load i32, i32* %ctype219, align 8, !dbg !13105
  %cmp220 = icmp eq i32 %173, 1, !dbg !13106
  br i1 %cmp220, label %if.then222, label %if.else224, !dbg !13107

if.then222:                                       ; preds = %if.end218
  %174 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13108
  %175 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !13109
  %176 = load i32, i32* %pt, align 4, !dbg !13110
  %call223 = call i32 @init_e1_port(%struct.hfc_multi* %174, %struct.hm_map* %175, i32 %176) #12, !dbg !13111
  store i32 %call223, i32* %ret_err, align 4, !dbg !13112
  br label %if.end226, !dbg !13113

if.else224:                                       ; preds = %if.end218
  %177 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13114
  %178 = load i32, i32* %pt, align 4, !dbg !13115
  %call225 = call i32 @init_multi_port(%struct.hfc_multi* %177, i32 %178) #12, !dbg !13116
  store i32 %call225, i32* %ret_err, align 4, !dbg !13117
  br label %if.end226

if.end226:                                        ; preds = %if.else224, %if.then222
  %179 = load i32, i32* @debug, align 4, !dbg !13118
  %and227 = and i32 %179, 262144, !dbg !13120
  %tobool228 = icmp ne i32 %and227, 0, !dbg !13120
  br i1 %tobool228, label %if.then229, label %if.end233, !dbg !13121

if.then229:                                       ; preds = %if.end226
  %180 = load i32, i32* @HFC_cnt, align 4, !dbg !13122
  %add230 = add i32 %180, 1, !dbg !13123
  %181 = load i32, i32* %pt, align 4, !dbg !13124
  %add231 = add i32 %181, 1, !dbg !13125
  %182 = load i32, i32* %ret_err, align 4, !dbg !13126
  %call232 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hfcmulti_init, i64 0, i64 0), i32 %add230, i32 %add231, i32 %182) #13, !dbg !13127
  br label %if.end233, !dbg !13127

if.end233:                                        ; preds = %if.then229, %if.end226
  %183 = load i32, i32* %ret_err, align 4, !dbg !13128
  %tobool234 = icmp ne i32 %183, 0, !dbg !13128
  br i1 %tobool234, label %if.then235, label %if.end254, !dbg !13130

if.then235:                                       ; preds = %if.end233
  br label %while.cond, !dbg !13131

while.cond:                                       ; preds = %if.end253, %if.then235
  %184 = load i32, i32* %pt, align 4, !dbg !13133
  %tobool236 = icmp ne i32 %184, 0, !dbg !13131
  br i1 %tobool236, label %while.body, label %while.end, !dbg !13131

while.body:                                       ; preds = %while.cond
  %185 = load i32, i32* %pt, align 4, !dbg !13134
  %dec = add i32 %185, -1, !dbg !13134
  store i32 %dec, i32* %pt, align 4, !dbg !13134
  %186 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13136
  %ctype237 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %186, i32 0, i32 4, !dbg !13138
  %187 = load i32, i32* %ctype237, align 8, !dbg !13138
  %cmp238 = icmp eq i32 %187, 1, !dbg !13139
  br i1 %cmp238, label %if.then240, label %if.else246, !dbg !13140

if.then240:                                       ; preds = %while.body
  %188 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13141
  %189 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13142
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %189, i32 0, i32 60, !dbg !13143
  %190 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13144
  %dnum241 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %190, i32 0, i32 46, !dbg !13145
  %191 = load i32, i32* %pt, align 4, !dbg !13146
  %idxprom242 = sext i32 %191 to i64, !dbg !13144
  %arrayidx243 = getelementptr [32 x i8], [32 x i8]* %dnum241, i64 0, i64 %idxprom242, !dbg !13144
  %192 = load i8, i8* %arrayidx243, align 1, !dbg !13144
  %idxprom244 = zext i8 %192 to i64, !dbg !13142
  %arrayidx245 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom244, !dbg !13142
  %dch = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx245, i32 0, i32 0, !dbg !13147
  %193 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !13147
  call void @release_port(%struct.hfc_multi* %188, %struct.dchannel* %193) #12, !dbg !13148
  br label %if.end253, !dbg !13148

if.else246:                                       ; preds = %while.body
  %194 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13149
  %195 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13150
  %chan247 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %195, i32 0, i32 60, !dbg !13151
  %196 = load i32, i32* %pt, align 4, !dbg !13152
  %shl248 = shl i32 %196, 2, !dbg !13153
  %add249 = add i32 %shl248, 2, !dbg !13154
  %idxprom250 = sext i32 %add249 to i64, !dbg !13150
  %arrayidx251 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan247, i64 0, i64 %idxprom250, !dbg !13150
  %dch252 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx251, i32 0, i32 0, !dbg !13155
  %197 = load %struct.dchannel*, %struct.dchannel** %dch252, align 8, !dbg !13155
  call void @release_port(%struct.hfc_multi* %194, %struct.dchannel* %197) #12, !dbg !13156
  br label %if.end253

if.end253:                                        ; preds = %if.else246, %if.then240
  br label %while.cond, !dbg !13131, !llvm.loop !13157

while.end:                                        ; preds = %while.cond
  br label %free_card, !dbg !13159

if.end254:                                        ; preds = %if.end233
  %198 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13160
  %ctype255 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %198, i32 0, i32 4, !dbg !13162
  %199 = load i32, i32* %ctype255, align 8, !dbg !13162
  %cmp256 = icmp ne i32 %199, 1, !dbg !13163
  br i1 %cmp256, label %if.then258, label %if.end260, !dbg !13164

if.then258:                                       ; preds = %if.end254
  %200 = load i32, i32* @Port_cnt, align 4, !dbg !13165
  %inc259 = add i32 %200, 1, !dbg !13165
  store i32 %inc259, i32* @Port_cnt, align 4, !dbg !13165
  br label %if.end260, !dbg !13166

if.end260:                                        ; preds = %if.then258, %if.end254
  br label %for.inc261, !dbg !13167

for.inc261:                                       ; preds = %if.end260
  %201 = load i32, i32* %pt, align 4, !dbg !13168
  %inc262 = add i32 %201, 1, !dbg !13168
  store i32 %inc262, i32* %pt, align 4, !dbg !13168
  br label %for.cond209, !dbg !13169, !llvm.loop !13170

for.end263:                                       ; preds = %for.cond209
  %202 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13172
  %ctype264 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %202, i32 0, i32 4, !dbg !13174
  %203 = load i32, i32* %ctype264, align 8, !dbg !13174
  %cmp265 = icmp eq i32 %203, 1, !dbg !13175
  br i1 %cmp265, label %if.then267, label %if.end270, !dbg !13176

if.then267:                                       ; preds = %for.end263
  %204 = load i32, i32* @Port_cnt, align 4, !dbg !13177
  %inc268 = add i32 %204, 1, !dbg !13177
  store i32 %inc268, i32* @Port_cnt, align 4, !dbg !13177
  %205 = load i32, i32* @E1_cnt, align 4, !dbg !13179
  %inc269 = add i32 %205, 1, !dbg !13179
  store i32 %inc269, i32* @E1_cnt, align 4, !dbg !13179
  br label %if.end270, !dbg !13180

if.end270:                                        ; preds = %if.then267, %for.end263
  %206 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !13181
  %dip_type = getelementptr inbounds %struct.hm_map, %struct.hm_map* %206, i32 0, i32 7, !dbg !13182
  %207 = load i32, i32* %dip_type, align 4, !dbg !13182
  switch i32 %207, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb309
    i32 3, label %sw.bb337
  ], !dbg !13183

sw.bb:                                            ; preds = %if.end270
  %208 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13184
  %HFC_inb271 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %208, i32 0, i32 12, !dbg !13184
  %209 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb271, align 8, !dbg !13184
  %210 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13184
  %call272 = call zeroext i8 %209(%struct.hfc_multi* %210, i8 zeroext 65) #12, !dbg !13184
  %conv273 = zext i8 %call272 to i32, !dbg !13184
  %neg = xor i32 %conv273, -1, !dbg !13186
  %and274 = and i32 %neg, 224, !dbg !13187
  %shr275 = ashr i32 %and274, 5, !dbg !13188
  %211 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13189
  %HFC_inb276 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %211, i32 0, i32 12, !dbg !13189
  %212 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb276, align 8, !dbg !13189
  %213 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13189
  %call277 = call zeroext i8 %212(%struct.hfc_multi* %213, i8 zeroext 70) #12, !dbg !13189
  %conv278 = zext i8 %call277 to i32, !dbg !13189
  %neg279 = xor i32 %conv278, -1, !dbg !13190
  %and280 = and i32 %neg279, 128, !dbg !13191
  %shr281 = ashr i32 %and280, 3, !dbg !13192
  %or282 = or i32 %shr275, %shr281, !dbg !13193
  %214 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13194
  %HFC_inb283 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %214, i32 0, i32 12, !dbg !13194
  %215 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb283, align 8, !dbg !13194
  %216 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13194
  %call284 = call zeroext i8 %215(%struct.hfc_multi* %216, i8 zeroext 70) #12, !dbg !13194
  %conv285 = zext i8 %call284 to i32, !dbg !13194
  %neg286 = xor i32 %conv285, -1, !dbg !13195
  %and287 = and i32 %neg286, 8, !dbg !13196
  %or288 = or i32 %or282, %and287, !dbg !13197
  %conv289 = trunc i32 %or288 to i8, !dbg !13198
  store i8 %conv289, i8* %dips, align 1, !dbg !13199
  %217 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13200
  %HFC_inb290 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %217, i32 0, i32 12, !dbg !13200
  %218 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb290, align 8, !dbg !13200
  %219 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13200
  %call291 = call zeroext i8 %218(%struct.hfc_multi* %219, i8 zeroext 71) #12, !dbg !13200
  %conv292 = zext i8 %call291 to i32, !dbg !13200
  %shr293 = ashr i32 %conv292, 4, !dbg !13201
  %and294 = and i32 %shr293, 15, !dbg !13202
  %conv295 = trunc i32 %and294 to i8, !dbg !13203
  store i8 %conv295, i8* %pmj, align 1, !dbg !13204
  %220 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13205
  %chip296 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %220, i32 0, i32 31, !dbg !13207
  %call297 = call zeroext i1 @test_bit(i64 13, i64* %chip296) #12, !dbg !13208
  br i1 %call297, label %if.then298, label %if.end303, !dbg !13209

if.then298:                                       ; preds = %sw.bb
  %221 = load i8, i8* %pmj, align 1, !dbg !13210
  %conv299 = zext i8 %221 to i32, !dbg !13210
  %neg300 = xor i32 %conv299, -1, !dbg !13211
  %and301 = and i32 %neg300, 15, !dbg !13212
  %conv302 = trunc i32 %and301 to i8, !dbg !13211
  store i8 %conv302, i8* %pmj, align 1, !dbg !13213
  br label %if.end303, !dbg !13214

if.end303:                                        ; preds = %if.then298, %sw.bb
  %222 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !13215
  %vendor_name304 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %222, i32 0, i32 0, !dbg !13216
  %223 = load i8*, i8** %vendor_name304, align 8, !dbg !13216
  %224 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !13217
  %card_name305 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %224, i32 0, i32 1, !dbg !13218
  %225 = load i8*, i8** %card_name305, align 8, !dbg !13218
  %226 = load i8, i8* %dips, align 1, !dbg !13219
  %conv306 = zext i8 %226 to i32, !dbg !13219
  %227 = load i8, i8* %pmj, align 1, !dbg !13220
  %conv307 = zext i8 %227 to i32, !dbg !13220
  %call308 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.85, i64 0, i64 0), i8* %223, i8* %225, i32 %conv306, i32 %conv307) #13, !dbg !13221
  br label %sw.epilog, !dbg !13222

sw.bb309:                                         ; preds = %if.end270
  %228 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13223
  %HFC_outb310 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %228, i32 0, i32 10, !dbg !13223
  %229 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb310, align 8, !dbg !13223
  %230 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13223
  call void %229(%struct.hfc_multi* %230, i8 zeroext 2, i8 zeroext 33) #12, !dbg !13223
  %231 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13224
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %231, i32 0, i32 29, !dbg !13225
  %232 = load i64, i64* %pci_iobase, align 8, !dbg !13225
  %add311 = add i64 %232, 4, !dbg !13226
  %conv312 = trunc i64 %add311 to i32, !dbg !13224
  call void @outw(i16 zeroext 16384, i32 %conv312) #12, !dbg !13227
  %233 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13228
  %pci_iobase313 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %233, i32 0, i32 29, !dbg !13229
  %234 = load i64, i64* %pci_iobase313, align 8, !dbg !13229
  %conv314 = trunc i64 %234 to i32, !dbg !13228
  %call315 = call zeroext i8 @inb(i32 %conv314) #12, !dbg !13230
  store i8 %call315, i8* %dips, align 1, !dbg !13231
  %235 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13232
  %pci_iobase316 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %235, i32 0, i32 29, !dbg !13233
  %236 = load i64, i64* %pci_iobase316, align 8, !dbg !13233
  %conv317 = trunc i64 %236 to i32, !dbg !13232
  %call318 = call zeroext i8 @inb(i32 %conv317) #12, !dbg !13234
  store i8 %call318, i8* %dips, align 1, !dbg !13235
  %237 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13236
  %pci_iobase319 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %237, i32 0, i32 29, !dbg !13237
  %238 = load i64, i64* %pci_iobase319, align 8, !dbg !13237
  %conv320 = trunc i64 %238 to i32, !dbg !13236
  %call321 = call zeroext i8 @inb(i32 %conv320) #12, !dbg !13238
  store i8 %call321, i8* %dips, align 1, !dbg !13239
  %239 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13240
  %pci_iobase322 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %239, i32 0, i32 29, !dbg !13241
  %240 = load i64, i64* %pci_iobase322, align 8, !dbg !13241
  %conv323 = trunc i64 %240 to i32, !dbg !13240
  %call324 = call zeroext i8 @inb(i32 %conv323) #12, !dbg !13242
  %conv325 = zext i8 %call324 to i32, !dbg !13242
  %neg326 = xor i32 %conv325, -1, !dbg !13243
  %and327 = and i32 %neg326, 63, !dbg !13244
  %conv328 = trunc i32 %and327 to i8, !dbg !13243
  store i8 %conv328, i8* %dips, align 1, !dbg !13245
  %241 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13246
  %pci_iobase329 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %241, i32 0, i32 29, !dbg !13247
  %242 = load i64, i64* %pci_iobase329, align 8, !dbg !13247
  %add330 = add i64 %242, 4, !dbg !13248
  %conv331 = trunc i64 %add330 to i32, !dbg !13246
  call void @outw(i16 zeroext 0, i32 %conv331) #12, !dbg !13249
  %243 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13250
  %HFC_outb332 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %243, i32 0, i32 10, !dbg !13250
  %244 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb332, align 8, !dbg !13250
  %245 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13250
  call void %244(%struct.hfc_multi* %245, i8 zeroext 2, i8 zeroext 32) #12, !dbg !13250
  %246 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !13251
  %vendor_name333 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %246, i32 0, i32 0, !dbg !13252
  %247 = load i8*, i8** %vendor_name333, align 8, !dbg !13252
  %248 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !13253
  %card_name334 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %248, i32 0, i32 1, !dbg !13254
  %249 = load i8*, i8** %card_name334, align 8, !dbg !13254
  %250 = load i8, i8* %dips, align 1, !dbg !13255
  %conv335 = zext i8 %250 to i32, !dbg !13255
  %call336 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i64 0, i64 0), i8* %247, i8* %249, i32 %conv335) #13, !dbg !13256
  br label %sw.epilog, !dbg !13257

sw.bb337:                                         ; preds = %if.end270
  %251 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13258
  %HFC_inb338 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %251, i32 0, i32 12, !dbg !13258
  %252 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb338, align 8, !dbg !13258
  %253 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13258
  %call339 = call zeroext i8 %252(%struct.hfc_multi* %253, i8 zeroext 68) #12, !dbg !13258
  %conv340 = zext i8 %call339 to i32, !dbg !13258
  %neg341 = xor i32 %conv340, -1, !dbg !13259
  %and342 = and i32 %neg341, 240, !dbg !13260
  %shr343 = ashr i32 %and342, 4, !dbg !13261
  %conv344 = trunc i32 %shr343 to i8, !dbg !13262
  store i8 %conv344, i8* %dips, align 1, !dbg !13263
  %254 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !13264
  %vendor_name345 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %254, i32 0, i32 0, !dbg !13265
  %255 = load i8*, i8** %vendor_name345, align 8, !dbg !13265
  %256 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !13266
  %card_name346 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %256, i32 0, i32 1, !dbg !13267
  %257 = load i8*, i8** %card_name346, align 8, !dbg !13267
  %258 = load i8, i8* %dips, align 1, !dbg !13268
  %conv347 = zext i8 %258 to i32, !dbg !13268
  %call348 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i64 0, i64 0), i8* %255, i8* %257, i32 %conv347) #13, !dbg !13269
  br label %sw.epilog, !dbg !13270

sw.epilog:                                        ; preds = %if.end270, %sw.bb337, %sw.bb309, %if.end303
  br label %do.body349, !dbg !13271

do.body349:                                       ; preds = %sw.epilog
  br label %do.body350, !dbg !13272

do.body350:                                       ; preds = %do.body349
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13273, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13276, metadata !DIExpression()), !dbg !13275
  %cmp351 = icmp eq i64* %__dummy, %__dummy2, !dbg !13275
  %conv352 = zext i1 %cmp351 to i32, !dbg !13275
  store i32 1, i32* %tmp, align 4, !dbg !13275
  %259 = load i32, i32* %tmp, align 4, !dbg !13275
  br label %do.body353, !dbg !13277

do.body353:                                       ; preds = %do.body350
  br label %do.body354, !dbg !13278

do.body354:                                       ; preds = %do.body353
  br label %do.body355, !dbg !13279

do.body355:                                       ; preds = %do.body354
  call void @llvm.dbg.declare(metadata i64* %__dummy356, metadata !13281, metadata !DIExpression()), !dbg !13284
  call void @llvm.dbg.declare(metadata i64* %__dummy2357, metadata !13285, metadata !DIExpression()), !dbg !13284
  %cmp358 = icmp eq i64* %__dummy356, %__dummy2357, !dbg !13284
  %conv359 = zext i1 %cmp358 to i32, !dbg !13284
  store i32 1, i32* %tmp360, align 4, !dbg !13284
  %260 = load i32, i32* %tmp360, align 4, !dbg !13284
  %call361 = call i64 @arch_local_irq_save() #12, !dbg !13286
  store i64 %call361, i64* %flags, align 8, !dbg !13286
  br label %do.end362, !dbg !13286

do.end362:                                        ; preds = %do.body355
  br label %do.end363, !dbg !13279

do.end363:                                        ; preds = %do.end362
  br label %do.body364, !dbg !13278

do.body364:                                       ; preds = %do.end363
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !13287, !srcloc !13288
  br label %do.body365, !dbg !13287

do.body365:                                       ; preds = %do.body364
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i418, align 8
  %261 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i418, align 8, !dbg !13289
  %262 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %261, i32 0, i32 0, !dbg !13290
  %rlock.i419 = bitcast %union.anon.1* %262 to %struct.raw_spinlock*, !dbg !13290
  br label %do.end367, !dbg !13291

do.end367:                                        ; preds = %do.body365
  br label %do.end368, !dbg !13287

do.end368:                                        ; preds = %do.end367
  br label %do.end369, !dbg !13278

do.end369:                                        ; preds = %do.end368
  br label %do.end370, !dbg !13277

do.end370:                                        ; preds = %do.end369
  br label %do.end371, !dbg !13272

do.end371:                                        ; preds = %do.end370
  %263 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13292
  %list = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %263, i32 0, i32 0, !dbg !13293
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @HFClist) #12, !dbg !13294
  %264 = load i64, i64* %flags, align 8, !dbg !13295
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i422, align 8
  store i64 %264, i64* %flags.addr.i423, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !13296
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !13296
  store i32 1, i32* %tmp.i424, align 4, !dbg !13296
  %265 = load i32, i32* %tmp.i424, align 4, !dbg !13296
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !13297
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !13297
  store i32 1, i32* %tmp8.i425, align 4, !dbg !13297
  %266 = load i32, i32* %tmp8.i425, align 4, !dbg !13297
  %267 = load i64, i64* %flags.addr.i423, align 8, !dbg !13298
  call void @arch_local_irq_restore(i64 %267) #14, !dbg !13298
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !13299, !srcloc !10125
  %268 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i422, align 8, !dbg !13300
  %269 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %268, i32 0, i32 0, !dbg !13300
  %rlock.i426 = bitcast %union.anon.1* %269 to %struct.raw_spinlock*, !dbg !13300
  %270 = load i32, i32* @clock, align 4, !dbg !13301
  %271 = load i32, i32* @HFC_cnt, align 4, !dbg !13303
  %add372 = add i32 %271, 1, !dbg !13304
  %cmp373 = icmp eq i32 %270, %add372, !dbg !13305
  br i1 %cmp373, label %if.then375, label %if.end377, !dbg !13306

if.then375:                                       ; preds = %do.end371
  %272 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13307
  %273 = bitcast %struct.hfc_multi* %272 to i8*, !dbg !13307
  %call376 = call %struct.mISDNclock* @mISDN_register_clock(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i32 0, i32 (i8*, i32)* @clockctl, i8* %273) #12, !dbg !13308
  %274 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13309
  %iclock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %274, i32 0, i32 58, !dbg !13310
  store %struct.mISDNclock* %call376, %struct.mISDNclock** %iclock, align 8, !dbg !13311
  br label %if.end377, !dbg !13309

if.end377:                                        ; preds = %if.then375, %do.end371
  %275 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !13312
  %irq = getelementptr inbounds %struct.hm_map, %struct.hm_map* %275, i32 0, i32 9, !dbg !13313
  %276 = load i32, i32* %irq, align 4, !dbg !13313
  %tobool378 = icmp ne i32 %276, 0, !dbg !13314
  br i1 %tobool378, label %cond.true, label %cond.false, !dbg !13314

cond.true:                                        ; preds = %if.end377
  br label %cond.end, !dbg !13314

cond.false:                                       ; preds = %if.end377
  %277 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13315
  %pci_dev = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %277, i32 0, i32 8, !dbg !13316
  %278 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !13316
  %irq379 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %278, i32 0, i32 43, !dbg !13317
  %279 = load i32, i32* %irq379, align 4, !dbg !13317
  br label %cond.end, !dbg !13314

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %276, %cond.true ], [ %279, %cond.false ], !dbg !13314
  %280 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13318
  %irq380 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %280, i32 0, i32 6, !dbg !13319
  store i32 %cond, i32* %irq380, align 8, !dbg !13320
  %281 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13321
  %call381 = call i32 @init_card(%struct.hfc_multi* %281) #12, !dbg !13322
  store i32 %call381, i32* %ret_err, align 4, !dbg !13323
  %282 = load i32, i32* %ret_err, align 4, !dbg !13324
  %tobool382 = icmp ne i32 %282, 0, !dbg !13324
  br i1 %tobool382, label %if.then383, label %if.end385, !dbg !13326

if.then383:                                       ; preds = %cond.end
  %283 = load i32, i32* %ret_err, align 4, !dbg !13327
  %call384 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.88, i64 0, i64 0), i32 %283) #13, !dbg !13329
  %284 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13330
  call void @release_card(%struct.hfc_multi* %284) #12, !dbg !13331
  %285 = load i32, i32* %ret_err, align 4, !dbg !13332
  store i32 %285, i32* %retval, align 4, !dbg !13333
  br label %return, !dbg !13333

if.end385:                                        ; preds = %cond.end
  br label %do.body386, !dbg !13334

do.body386:                                       ; preds = %if.end385
  br label %do.body387, !dbg !13335

do.body387:                                       ; preds = %do.body386
  call void @llvm.dbg.declare(metadata i64* %__dummy388, metadata !13336, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.declare(metadata i64* %__dummy2389, metadata !13339, metadata !DIExpression()), !dbg !13338
  %cmp390 = icmp eq i64* %__dummy388, %__dummy2389, !dbg !13338
  %conv391 = zext i1 %cmp390 to i32, !dbg !13338
  store i32 1, i32* %tmp392, align 4, !dbg !13338
  %286 = load i32, i32* %tmp392, align 4, !dbg !13338
  br label %do.body393, !dbg !13340

do.body393:                                       ; preds = %do.body387
  br label %do.body394, !dbg !13341

do.body394:                                       ; preds = %do.body393
  br label %do.body395, !dbg !13342

do.body395:                                       ; preds = %do.body394
  call void @llvm.dbg.declare(metadata i64* %__dummy396, metadata !13344, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.declare(metadata i64* %__dummy2397, metadata !13348, metadata !DIExpression()), !dbg !13347
  %cmp398 = icmp eq i64* %__dummy396, %__dummy2397, !dbg !13347
  %conv399 = zext i1 %cmp398 to i32, !dbg !13347
  store i32 1, i32* %tmp400, align 4, !dbg !13347
  %287 = load i32, i32* %tmp400, align 4, !dbg !13347
  %call401 = call i64 @arch_local_irq_save() #12, !dbg !13349
  store i64 %call401, i64* %flags, align 8, !dbg !13349
  br label %do.end402, !dbg !13349

do.end402:                                        ; preds = %do.body395
  br label %do.end403, !dbg !13342

do.end403:                                        ; preds = %do.end402
  br label %do.body404, !dbg !13341

do.body404:                                       ; preds = %do.end403
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !13350, !srcloc !13351
  br label %do.body405, !dbg !13350

do.body405:                                       ; preds = %do.body404
  %288 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13352
  %lock406 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %288, i32 0, i32 57, !dbg !13352
  store %struct.spinlock* %lock406, %struct.spinlock** %lock.addr.i427, align 8
  %289 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i427, align 8, !dbg !13353
  %290 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %289, i32 0, i32 0, !dbg !13354
  %rlock.i428 = bitcast %union.anon.1* %290 to %struct.raw_spinlock*, !dbg !13354
  br label %do.end408, !dbg !13352

do.end408:                                        ; preds = %do.body405
  br label %do.end409, !dbg !13350

do.end409:                                        ; preds = %do.end408
  br label %do.end410, !dbg !13341

do.end410:                                        ; preds = %do.end409
  br label %do.end411, !dbg !13340

do.end411:                                        ; preds = %do.end410
  br label %do.end412, !dbg !13335

do.end412:                                        ; preds = %do.end411
  %291 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13355
  call void @enable_hwirq(%struct.hfc_multi* %291) #12, !dbg !13356
  %292 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13357
  %lock413 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %292, i32 0, i32 57, !dbg !13358
  %293 = load i64, i64* %flags, align 8, !dbg !13359
  store %struct.spinlock* %lock413, %struct.spinlock** %lock.addr.i420, align 8
  store i64 %293, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !13360
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !13360
  store i32 1, i32* %tmp.i, align 4, !dbg !13360
  %294 = load i32, i32* %tmp.i, align 4, !dbg !13360
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !13361
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !13361
  store i32 1, i32* %tmp8.i, align 4, !dbg !13361
  %295 = load i32, i32* %tmp8.i, align 4, !dbg !13361
  %296 = load i64, i64* %flags.addr.i, align 8, !dbg !13362
  call void @arch_local_irq_restore(i64 %296) #14, !dbg !13362
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !13363, !srcloc !10125
  %297 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i420, align 8, !dbg !13364
  %298 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %297, i32 0, i32 0, !dbg !13364
  %rlock.i421 = bitcast %union.anon.1* %298 to %struct.raw_spinlock*, !dbg !13364
  store i32 0, i32* %retval, align 4, !dbg !13365
  br label %return, !dbg !13365

free_card:                                        ; preds = %while.end, %if.then216
  call void @llvm.dbg.label(metadata !13366), !dbg !13367
  %299 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13368
  call void @release_io_hfcmulti(%struct.hfc_multi* %299) #12, !dbg !13369
  %300 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13370
  %301 = load %struct.hfc_multi*, %struct.hfc_multi** @syncmaster, align 8, !dbg !13372
  %cmp414 = icmp eq %struct.hfc_multi* %300, %301, !dbg !13373
  br i1 %cmp414, label %if.then416, label %if.end417, !dbg !13374

if.then416:                                       ; preds = %free_card
  store %struct.hfc_multi* null, %struct.hfc_multi** @syncmaster, align 8, !dbg !13375
  br label %if.end417, !dbg !13376

if.end417:                                        ; preds = %if.then416, %free_card
  %302 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !13377
  %303 = bitcast %struct.hfc_multi* %302 to i8*, !dbg !13377
  call void @kfree(i8* %303) #12, !dbg !13378
  %304 = load i32, i32* %ret_err, align 4, !dbg !13379
  store i32 %304, i32* %retval, align 4, !dbg !13380
  br label %return, !dbg !13380

return:                                           ; preds = %if.end417, %do.end412, %if.then383, %if.end207, %if.then108, %if.then68, %if.then25, %if.then5, %if.then
  %305 = load i32, i32* %retval, align 4, !dbg !13381
  ret i32 %305, !dbg !13381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !13382 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !13385, metadata !DIExpression()), !dbg !13389
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !13395, metadata !DIExpression()), !dbg !13396
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !13397, metadata !DIExpression()), !dbg !13398
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !13399, metadata !DIExpression()), !dbg !13400
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !13401, metadata !DIExpression()), !dbg !13405
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !13407, metadata !DIExpression()), !dbg !13411
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !13413, metadata !DIExpression()), !dbg !13417
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !13422, metadata !DIExpression()), !dbg !13423
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !13424, metadata !DIExpression()), !dbg !13425
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13426, metadata !DIExpression()), !dbg !13427
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !13428, metadata !DIExpression()), !dbg !13429
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !13430, metadata !DIExpression()), !dbg !13431
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13432, metadata !DIExpression()), !dbg !13433
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !13434, metadata !DIExpression()), !dbg !13435
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !13436, metadata !DIExpression()), !dbg !13437
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13438, metadata !DIExpression()), !dbg !13439
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13440, metadata !DIExpression()), !dbg !13441
  %0 = load i64, i64* %size.addr, align 8, !dbg !13442
  %1 = load i32, i32* %flags.addr, align 4, !dbg !13443
  %or = or i32 %1, 256, !dbg !13444
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !13445
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #6, !dbg !13446
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !13447

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13448
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !13449
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !13450

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !13451
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !13452
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13453
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !13454
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !13431
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !13455
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !13456
  %10 = load i32, i32* %order.i.i, align 4, !dbg !13457
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !13458
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !13459
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !13460
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !13461
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !13461
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !13461
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !13461
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !13461
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !13462
  br label %kmalloc.exit, !dbg !13462

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !13463
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13464
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !13464
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !13466

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !13467
  br label %kmalloc_index.exit.i, !dbg !13467

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13468
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !13470
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !13471

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13472
  br label %kmalloc_index.exit.i, !dbg !13472

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13473
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !13475
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !13476

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13477
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !13478
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !13479

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !13480
  br label %kmalloc_index.exit.i, !dbg !13480

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13481
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !13483
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !13484

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13485
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !13486
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !13487

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !13488
  br label %kmalloc_index.exit.i, !dbg !13488

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13489
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !13491
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !13492

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13493
  br label %kmalloc_index.exit.i, !dbg !13493

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13494
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !13496
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !13497

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !13498
  br label %kmalloc_index.exit.i, !dbg !13498

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13499
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !13501
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !13502

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !13503
  br label %kmalloc_index.exit.i, !dbg !13503

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13504
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !13506
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !13507

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !13508
  br label %kmalloc_index.exit.i, !dbg !13508

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13509
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !13511
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !13512

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !13513
  br label %kmalloc_index.exit.i, !dbg !13513

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13514
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !13516
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !13517

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !13518
  br label %kmalloc_index.exit.i, !dbg !13518

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13519
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !13521
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !13522

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !13523
  br label %kmalloc_index.exit.i, !dbg !13523

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13524
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !13526
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !13527

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !13528
  br label %kmalloc_index.exit.i, !dbg !13528

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13529
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !13531
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !13532

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !13533
  br label %kmalloc_index.exit.i, !dbg !13533

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13534
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !13536
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !13537

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !13538
  br label %kmalloc_index.exit.i, !dbg !13538

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13539
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !13541
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !13542

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !13543
  br label %kmalloc_index.exit.i, !dbg !13543

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13544
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !13546
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !13547

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !13548
  br label %kmalloc_index.exit.i, !dbg !13548

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13549
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !13551
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !13552

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !13553
  br label %kmalloc_index.exit.i, !dbg !13553

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13554
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !13556
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !13557

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !13558
  br label %kmalloc_index.exit.i, !dbg !13558

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13559
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !13561
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !13562

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !13563
  br label %kmalloc_index.exit.i, !dbg !13563

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13564
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !13566
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !13567

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !13568
  br label %kmalloc_index.exit.i, !dbg !13568

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13569
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !13571
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !13572

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !13573
  br label %kmalloc_index.exit.i, !dbg !13573

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13574
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !13576
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !13577

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !13578
  br label %kmalloc_index.exit.i, !dbg !13578

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13579
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !13581
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !13582

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !13583
  br label %kmalloc_index.exit.i, !dbg !13583

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13584
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !13586
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !13587

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !13588
  br label %kmalloc_index.exit.i, !dbg !13588

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13589
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !13591
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !13592

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !13593
  br label %kmalloc_index.exit.i, !dbg !13593

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13594
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !13596
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !13597

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !13598
  br label %kmalloc_index.exit.i, !dbg !13598

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13599
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !13601
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !13602

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !13603
  br label %kmalloc_index.exit.i, !dbg !13603

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13604
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !13606
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !13607

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !13608
  br label %kmalloc_index.exit.i, !dbg !13608

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.89, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !13609, !srcloc !13612
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 107) #6, !dbg !13613, !srcloc !13616
  unreachable, !dbg !13617

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !13618
  store i32 %45, i32* %index.i, align 4, !dbg !13619
  %46 = load i32, i32* %index.i, align 4, !dbg !13620
  %tobool.i = icmp ne i32 %46, 0, !dbg !13620
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !13622

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !13623
  br label %kmalloc.exit, !dbg !13623

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !13624
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13625
  %and.i.i = and i32 %48, 17, !dbg !13625
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !13625
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !13625
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !13625
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13625
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !13627

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !13628
  br label %kmalloc_type.exit.i, !dbg !13628

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13629
  %and2.i.i = and i32 %49, 1, !dbg !13630
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !13629
  %50 = zext i1 %tobool3.i.i to i64, !dbg !13629
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !13629
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !13631
  br label %kmalloc_type.exit.i, !dbg !13631

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !13632
  %idxprom.i = zext i32 %51 to i64, !dbg !13633
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !13633
  %52 = load i32, i32* %index.i, align 4, !dbg !13634
  %idxprom6.i = zext i32 %52 to i64, !dbg !13633
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !13633
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !13633
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !13635
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !13636
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13637
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13638
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !13639
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !13639
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !13639
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !13639
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !13639
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !13400
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13640
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !13641
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !13642
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13643
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !13644
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !13645
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !13646
  store i8* %62, i8** %retval.i, align 8, !dbg !13647
  br label %kmalloc.exit, !dbg !13647

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !13648
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !13649
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !13650
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !13650
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13650
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13650
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !13650
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !13651
  br label %kmalloc.exit, !dbg !13651

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !13652
  ret i8* %65, !dbg !13653
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #2 !dbg !13654 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13655, metadata !DIExpression()), !dbg !13657
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13659, metadata !DIExpression()), !dbg !13660
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !13661, metadata !DIExpression()), !dbg !13663
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12439, metadata !DIExpression()), !dbg !13664
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12443, metadata !DIExpression()), !dbg !13666
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13667, metadata !DIExpression()), !dbg !13668
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13669, metadata !DIExpression()), !dbg !13670
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13671
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13672
  %div = sdiv i64 %1, 64, !dbg !13672
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13673
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13671
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13674
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13675
  %conv.i = trunc i64 %4 to i32, !dbg !13675
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !13676
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13677
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13677
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !13677
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13678
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13679
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !13663
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !13663
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #6, !dbg !13663, !srcloc !13680
  store i8 %11, i8* %c.i, align 1, !dbg !13663
  %12 = load i8, i8* %c.i, align 1, !dbg !13663
  %tobool.i = trunc i8 %12 to i1, !dbg !13663
  %frombool.i = zext i1 %tobool.i to i8, !dbg !13663
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !13663
  %13 = load i8, i8* %tmp.i, align 1, !dbg !13663
  %tobool1.i = trunc i8 %13 to i1, !dbg !13663
  ret i1 %tobool1.i, !dbg !13681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @setup_pci(%struct.hfc_multi* %hc, %struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #2 !dbg !13682 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %m = alloca %struct.hm_map*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !13685, metadata !DIExpression()), !dbg !13686
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !13687, metadata !DIExpression()), !dbg !13688
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !13689, metadata !DIExpression()), !dbg !13690
  call void @llvm.dbg.declare(metadata %struct.hm_map** %m, metadata !13691, metadata !DIExpression()), !dbg !13692
  %0 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !13693
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %0, i32 0, i32 6, !dbg !13694
  %1 = load i64, i64* %driver_data, align 8, !dbg !13694
  %2 = inttoptr i64 %1 to %struct.hm_map*, !dbg !13695
  store %struct.hm_map* %2, %struct.hm_map** %m, align 8, !dbg !13692
  %3 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !13696
  %vendor_name = getelementptr inbounds %struct.hm_map, %struct.hm_map* %3, i32 0, i32 0, !dbg !13697
  %4 = load i8*, i8** %vendor_name, align 8, !dbg !13697
  %5 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !13698
  %card_name = getelementptr inbounds %struct.hm_map, %struct.hm_map* %5, i32 0, i32 1, !dbg !13699
  %6 = load i8*, i8** %card_name, align 8, !dbg !13699
  %7 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !13700
  %clock2 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %7, i32 0, i32 4, !dbg !13701
  %8 = load i32, i32* %clock2, align 8, !dbg !13701
  %tobool = icmp ne i32 %8, 0, !dbg !13700
  %9 = zext i1 %tobool to i64, !dbg !13700
  %cond = select i1 %tobool, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i64 0, i64 0), !dbg !13700
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.90, i64 0, i64 0), i8* %4, i8* %6, i8* %cond) #13, !dbg !13702
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !13703
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13704
  %pci_dev = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %11, i32 0, i32 8, !dbg !13705
  store %struct.pci_dev* %10, %struct.pci_dev** %pci_dev, align 8, !dbg !13706
  %12 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !13707
  %clock21 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %12, i32 0, i32 4, !dbg !13709
  %13 = load i32, i32* %clock21, align 8, !dbg !13709
  %tobool2 = icmp ne i32 %13, 0, !dbg !13707
  br i1 %tobool2, label %if.then, label %if.end, !dbg !13710

if.then:                                          ; preds = %entry
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13711
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %14, i32 0, i32 31, !dbg !13712
  %call3 = call zeroext i1 @test_and_set_bit(i64 9, i64* %chip) #12, !dbg !13713
  br label %if.end, !dbg !13713

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !13714
  %vendor = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %15, i32 0, i32 0, !dbg !13716
  %16 = load i32, i32* %vendor, align 8, !dbg !13716
  %cmp = icmp eq i32 %16, 53601, !dbg !13717
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !13718

land.lhs.true:                                    ; preds = %if.end
  %17 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !13719
  %device = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %17, i32 0, i32 1, !dbg !13720
  %18 = load i32, i32* %device, align 4, !dbg !13720
  %cmp4 = icmp eq i32 %18, 46096, !dbg !13721
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !13722

if.then5:                                         ; preds = %land.lhs.true
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13723
  %chip6 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %19, i32 0, i32 31, !dbg !13725
  %call7 = call zeroext i1 @test_and_set_bit(i64 13, i64* %chip6) #12, !dbg !13726
  %20 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13727
  %chip8 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %20, i32 0, i32 31, !dbg !13728
  %call9 = call zeroext i1 @test_and_set_bit(i64 4, i64* %chip8) #12, !dbg !13729
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13730
  %chip10 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 31, !dbg !13731
  %call11 = call zeroext i1 @test_and_clear_bit(i64 3, i64* %chip10) #12, !dbg !13732
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13733
  %slots = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 41, !dbg !13734
  store i32 32, i32* %slots, align 8, !dbg !13735
  br label %if.end12, !dbg !13736

if.end12:                                         ; preds = %if.then5, %land.lhs.true, %if.end
  %23 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13737
  %pci_dev13 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %23, i32 0, i32 8, !dbg !13739
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev13, align 8, !dbg !13739
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 43, !dbg !13740
  %25 = load i32, i32* %irq, align 4, !dbg !13740
  %cmp14 = icmp ule i32 %25, 0, !dbg !13741
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !13742

if.then15:                                        ; preds = %if.end12
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.93, i64 0, i64 0)) #13, !dbg !13743
  store i32 -5, i32* %retval, align 4, !dbg !13745
  br label %return, !dbg !13745

if.end17:                                         ; preds = %if.end12
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13746
  %pci_dev18 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %26, i32 0, i32 8, !dbg !13748
  %27 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev18, align 8, !dbg !13748
  %call19 = call i32 @pci_enable_device(%struct.pci_dev* %27) #12, !dbg !13749
  %tobool20 = icmp ne i32 %call19, 0, !dbg !13749
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !13750

if.then21:                                        ; preds = %if.end17
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.94, i64 0, i64 0)) #13, !dbg !13751
  store i32 -5, i32* %retval, align 4, !dbg !13753
  br label %return, !dbg !13753

if.end23:                                         ; preds = %if.end17
  %28 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !13754
  %leds = getelementptr inbounds %struct.hm_map, %struct.hm_map* %28, i32 0, i32 5, !dbg !13755
  %29 = load i32, i32* %leds, align 4, !dbg !13755
  %30 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13756
  %leds24 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %30, i32 0, i32 42, !dbg !13757
  store i32 %29, i32* %leds24, align 4, !dbg !13758
  %31 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13759
  %ledstate = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %31, i32 0, i32 43, !dbg !13760
  store i64 2952703998, i64* %ledstate, align 8, !dbg !13761
  %32 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !13762
  %opticalsupport = getelementptr inbounds %struct.hm_map, %struct.hm_map* %32, i32 0, i32 6, !dbg !13763
  %33 = load i32, i32* %opticalsupport, align 8, !dbg !13763
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13764
  %opticalsupport25 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %34, i32 0, i32 44, !dbg !13765
  store i32 %33, i32* %opticalsupport25, align 8, !dbg !13766
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13767
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 29, !dbg !13768
  store i64 0, i64* %pci_iobase, align 8, !dbg !13769
  %36 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13770
  %pci_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %36, i32 0, i32 22, !dbg !13771
  store i8* null, i8** %pci_membase, align 8, !dbg !13772
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13773
  %plx_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %37, i32 0, i32 23, !dbg !13774
  store i8* null, i8** %plx_membase, align 8, !dbg !13775
  %38 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !13776
  %io_mode = getelementptr inbounds %struct.hm_map, %struct.hm_map* %38, i32 0, i32 8, !dbg !13778
  %39 = load i32, i32* %io_mode, align 8, !dbg !13778
  %tobool26 = icmp ne i32 %39, 0, !dbg !13776
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !13779

if.then27:                                        ; preds = %if.end23
  %40 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !13780
  %io_mode28 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %40, i32 0, i32 8, !dbg !13781
  %41 = load i32, i32* %io_mode28, align 8, !dbg !13781
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13782
  %io_mode29 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %42, i32 0, i32 9, !dbg !13783
  store i32 %41, i32* %io_mode29, align 8, !dbg !13784
  br label %if.end30, !dbg !13782

if.end30:                                         ; preds = %if.then27, %if.end23
  %43 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13785
  %io_mode31 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %43, i32 0, i32 9, !dbg !13786
  %44 = load i32, i32* %io_mode31, align 8, !dbg !13786
  switch i32 %44, label %sw.default [
    i32 2, label %sw.bb
    i32 0, label %sw.bb81
    i32 1, label %sw.bb117
  ], !dbg !13787

sw.bb:                                            ; preds = %if.end30
  %45 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13788
  %chip32 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %45, i32 0, i32 31, !dbg !13790
  %call33 = call zeroext i1 @test_and_set_bit(i64 14, i64* %chip32) #12, !dbg !13791
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13792
  %slots34 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 41, !dbg !13793
  store i32 128, i32* %slots34, align 8, !dbg !13794
  %47 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13795
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %47, i32 0, i32 10, !dbg !13796
  store void (%struct.hfc_multi*, i8, i8)* @HFC_outb_pcimem, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !13797
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13798
  %HFC_inb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %48, i32 0, i32 12, !dbg !13799
  store i8 (%struct.hfc_multi*, i8)* @HFC_inb_pcimem, i8 (%struct.hfc_multi*, i8)** %HFC_inb, align 8, !dbg !13800
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13801
  %HFC_inw = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 14, !dbg !13802
  store i16 (%struct.hfc_multi*, i8)* @HFC_inw_pcimem, i16 (%struct.hfc_multi*, i8)** %HFC_inw, align 8, !dbg !13803
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13804
  %HFC_wait = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %50, i32 0, i32 16, !dbg !13805
  store void (%struct.hfc_multi*)* @HFC_wait_pcimem, void (%struct.hfc_multi*)** %HFC_wait, align 8, !dbg !13806
  %51 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13807
  %read_fifo = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %51, i32 0, i32 18, !dbg !13808
  store void (%struct.hfc_multi*, i8*, i32)* @read_fifo_pcimem, void (%struct.hfc_multi*, i8*, i32)** %read_fifo, align 8, !dbg !13809
  %52 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13810
  %write_fifo = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %52, i32 0, i32 19, !dbg !13811
  store void (%struct.hfc_multi*, i8*, i32)* @write_fifo_pcimem, void (%struct.hfc_multi*, i8*, i32)** %write_fifo, align 8, !dbg !13812
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13813
  %pci_dev35 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %53, i32 0, i32 8, !dbg !13814
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev35, align 8, !dbg !13814
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 44, !dbg !13815
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !13813
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !13816
  %55 = load i64, i64* %start, align 8, !dbg !13816
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13817
  %plx_origmembase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %56, i32 0, i32 21, !dbg !13818
  store i64 %55, i64* %plx_origmembase, align 8, !dbg !13819
  %57 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13820
  %plx_origmembase36 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %57, i32 0, i32 21, !dbg !13822
  %58 = load i64, i64* %plx_origmembase36, align 8, !dbg !13822
  %tobool37 = icmp ne i64 %58, 0, !dbg !13820
  br i1 %tobool37, label %if.end41, label %if.then38, !dbg !13823

if.then38:                                        ; preds = %sw.bb
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.95, i64 0, i64 0)) #13, !dbg !13824
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13826
  %pci_dev40 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %59, i32 0, i32 8, !dbg !13827
  %60 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev40, align 8, !dbg !13827
  call void @pci_disable_device(%struct.pci_dev* %60) #12, !dbg !13828
  store i32 -5, i32* %retval, align 4, !dbg !13829
  br label %return, !dbg !13829

if.end41:                                         ; preds = %sw.bb
  %61 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13830
  %plx_origmembase42 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %61, i32 0, i32 21, !dbg !13831
  %62 = load i64, i64* %plx_origmembase42, align 8, !dbg !13831
  %call43 = call i8* @ioremap(i64 %62, i64 128) #12, !dbg !13832
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13833
  %plx_membase44 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %63, i32 0, i32 23, !dbg !13834
  store i8* %call43, i8** %plx_membase44, align 8, !dbg !13835
  %64 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13836
  %plx_membase45 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %64, i32 0, i32 23, !dbg !13838
  %65 = load i8*, i8** %plx_membase45, align 8, !dbg !13838
  %tobool46 = icmp ne i8* %65, null, !dbg !13836
  br i1 %tobool46, label %if.end50, label %if.then47, !dbg !13839

if.then47:                                        ; preds = %if.end41
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.96, i64 0, i64 0)) #13, !dbg !13840
  %66 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13842
  %pci_dev49 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %66, i32 0, i32 8, !dbg !13843
  %67 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev49, align 8, !dbg !13843
  call void @pci_disable_device(%struct.pci_dev* %67) #12, !dbg !13844
  store i32 -5, i32* %retval, align 4, !dbg !13845
  br label %return, !dbg !13845

if.end50:                                         ; preds = %if.end41
  %68 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13846
  %plx_membase51 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %68, i32 0, i32 23, !dbg !13847
  %69 = load i8*, i8** %plx_membase51, align 8, !dbg !13847
  %70 = ptrtoint i8* %69 to i64, !dbg !13848
  %71 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13849
  %plx_origmembase52 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %71, i32 0, i32 21, !dbg !13850
  %72 = load i64, i64* %plx_origmembase52, align 8, !dbg !13850
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.97, i64 0, i64 0), i64 %70, i64 %72) #13, !dbg !13851
  %73 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13852
  %pci_dev54 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %73, i32 0, i32 8, !dbg !13853
  %74 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev54, align 8, !dbg !13853
  %resource55 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %74, i32 0, i32 44, !dbg !13854
  %arrayidx56 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource55, i64 0, i64 2, !dbg !13852
  %start57 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx56, i32 0, i32 0, !dbg !13855
  %75 = load i64, i64* %start57, align 8, !dbg !13855
  %76 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13856
  %pci_origmembase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %76, i32 0, i32 20, !dbg !13857
  store i64 %75, i64* %pci_origmembase, align 8, !dbg !13858
  %77 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13859
  %pci_origmembase58 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %77, i32 0, i32 20, !dbg !13861
  %78 = load i64, i64* %pci_origmembase58, align 8, !dbg !13861
  %tobool59 = icmp ne i64 %78, 0, !dbg !13859
  br i1 %tobool59, label %if.end63, label %if.then60, !dbg !13862

if.then60:                                        ; preds = %if.end50
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.98, i64 0, i64 0)) #13, !dbg !13863
  %79 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13865
  %pci_dev62 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %79, i32 0, i32 8, !dbg !13866
  %80 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev62, align 8, !dbg !13866
  call void @pci_disable_device(%struct.pci_dev* %80) #12, !dbg !13867
  store i32 -5, i32* %retval, align 4, !dbg !13868
  br label %return, !dbg !13868

if.end63:                                         ; preds = %if.end50
  %81 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13869
  %pci_origmembase64 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %81, i32 0, i32 20, !dbg !13870
  %82 = load i64, i64* %pci_origmembase64, align 8, !dbg !13870
  %call65 = call i8* @ioremap(i64 %82, i64 1024) #12, !dbg !13871
  %83 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13872
  %pci_membase66 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %83, i32 0, i32 22, !dbg !13873
  store i8* %call65, i8** %pci_membase66, align 8, !dbg !13874
  %84 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13875
  %pci_membase67 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %84, i32 0, i32 22, !dbg !13877
  %85 = load i8*, i8** %pci_membase67, align 8, !dbg !13877
  %tobool68 = icmp ne i8* %85, null, !dbg !13875
  br i1 %tobool68, label %if.end72, label %if.then69, !dbg !13878

if.then69:                                        ; preds = %if.end63
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.99, i64 0, i64 0)) #13, !dbg !13879
  %86 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13881
  %pci_dev71 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %86, i32 0, i32 8, !dbg !13882
  %87 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev71, align 8, !dbg !13882
  call void @pci_disable_device(%struct.pci_dev* %87) #12, !dbg !13883
  store i32 -5, i32* %retval, align 4, !dbg !13884
  br label %return, !dbg !13884

if.end72:                                         ; preds = %if.end63
  %88 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13885
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %88, i32 0, i32 2, !dbg !13886
  %89 = load i32, i32* %id, align 8, !dbg !13886
  %90 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13887
  %pci_membase73 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %90, i32 0, i32 22, !dbg !13888
  %91 = load i8*, i8** %pci_membase73, align 8, !dbg !13888
  %92 = ptrtoint i8* %91 to i64, !dbg !13889
  %93 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13890
  %pci_origmembase74 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %93, i32 0, i32 20, !dbg !13891
  %94 = load i64, i64* %pci_origmembase74, align 8, !dbg !13891
  %95 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13892
  %pci_dev75 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %95, i32 0, i32 8, !dbg !13893
  %96 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev75, align 8, !dbg !13893
  %irq76 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %96, i32 0, i32 43, !dbg !13894
  %97 = load i32, i32* %irq76, align 4, !dbg !13894
  %98 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13895
  %leds77 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %98, i32 0, i32 42, !dbg !13896
  %99 = load i32, i32* %leds77, align 4, !dbg !13896
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.100, i64 0, i64 0), i32 %89, i64 %92, i64 %94, i32 %97, i32 250, i32 %99) #13, !dbg !13897
  %100 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13898
  %pci_dev79 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %100, i32 0, i32 8, !dbg !13899
  %101 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev79, align 8, !dbg !13899
  %call80 = call i32 @pci_write_config_word(%struct.pci_dev* %101, i32 4, i16 zeroext 2) #12, !dbg !13900
  br label %sw.epilog, !dbg !13901

sw.bb81:                                          ; preds = %if.end30
  %102 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13902
  %HFC_outb82 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %102, i32 0, i32 10, !dbg !13903
  store void (%struct.hfc_multi*, i8, i8)* @HFC_outb_pcimem, void (%struct.hfc_multi*, i8, i8)** %HFC_outb82, align 8, !dbg !13904
  %103 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13905
  %HFC_inb83 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %103, i32 0, i32 12, !dbg !13906
  store i8 (%struct.hfc_multi*, i8)* @HFC_inb_pcimem, i8 (%struct.hfc_multi*, i8)** %HFC_inb83, align 8, !dbg !13907
  %104 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13908
  %HFC_inw84 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %104, i32 0, i32 14, !dbg !13909
  store i16 (%struct.hfc_multi*, i8)* @HFC_inw_pcimem, i16 (%struct.hfc_multi*, i8)** %HFC_inw84, align 8, !dbg !13910
  %105 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13911
  %HFC_wait85 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %105, i32 0, i32 16, !dbg !13912
  store void (%struct.hfc_multi*)* @HFC_wait_pcimem, void (%struct.hfc_multi*)** %HFC_wait85, align 8, !dbg !13913
  %106 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13914
  %read_fifo86 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %106, i32 0, i32 18, !dbg !13915
  store void (%struct.hfc_multi*, i8*, i32)* @read_fifo_pcimem, void (%struct.hfc_multi*, i8*, i32)** %read_fifo86, align 8, !dbg !13916
  %107 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13917
  %write_fifo87 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %107, i32 0, i32 19, !dbg !13918
  store void (%struct.hfc_multi*, i8*, i32)* @write_fifo_pcimem, void (%struct.hfc_multi*, i8*, i32)** %write_fifo87, align 8, !dbg !13919
  %108 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13920
  %pci_dev88 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %108, i32 0, i32 8, !dbg !13921
  %109 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev88, align 8, !dbg !13921
  %resource89 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %109, i32 0, i32 44, !dbg !13922
  %arrayidx90 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource89, i64 0, i64 1, !dbg !13920
  %start91 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx90, i32 0, i32 0, !dbg !13923
  %110 = load i64, i64* %start91, align 8, !dbg !13923
  %111 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13924
  %pci_origmembase92 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %111, i32 0, i32 20, !dbg !13925
  store i64 %110, i64* %pci_origmembase92, align 8, !dbg !13926
  %112 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13927
  %pci_origmembase93 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %112, i32 0, i32 20, !dbg !13929
  %113 = load i64, i64* %pci_origmembase93, align 8, !dbg !13929
  %tobool94 = icmp ne i64 %113, 0, !dbg !13927
  br i1 %tobool94, label %if.end98, label %if.then95, !dbg !13930

if.then95:                                        ; preds = %sw.bb81
  %call96 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.98, i64 0, i64 0)) #13, !dbg !13931
  %114 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13933
  %pci_dev97 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %114, i32 0, i32 8, !dbg !13934
  %115 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev97, align 8, !dbg !13934
  call void @pci_disable_device(%struct.pci_dev* %115) #12, !dbg !13935
  store i32 -5, i32* %retval, align 4, !dbg !13936
  br label %return, !dbg !13936

if.end98:                                         ; preds = %sw.bb81
  %116 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13937
  %pci_origmembase99 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %116, i32 0, i32 20, !dbg !13938
  %117 = load i64, i64* %pci_origmembase99, align 8, !dbg !13938
  %call100 = call i8* @ioremap(i64 %117, i64 256) #12, !dbg !13939
  %118 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13940
  %pci_membase101 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %118, i32 0, i32 22, !dbg !13941
  store i8* %call100, i8** %pci_membase101, align 8, !dbg !13942
  %119 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13943
  %pci_membase102 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %119, i32 0, i32 22, !dbg !13945
  %120 = load i8*, i8** %pci_membase102, align 8, !dbg !13945
  %tobool103 = icmp ne i8* %120, null, !dbg !13943
  br i1 %tobool103, label %if.end107, label %if.then104, !dbg !13946

if.then104:                                       ; preds = %if.end98
  %call105 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.99, i64 0, i64 0)) #13, !dbg !13947
  %121 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13949
  %pci_dev106 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %121, i32 0, i32 8, !dbg !13950
  %122 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev106, align 8, !dbg !13950
  call void @pci_disable_device(%struct.pci_dev* %122) #12, !dbg !13951
  store i32 -5, i32* %retval, align 4, !dbg !13952
  br label %return, !dbg !13952

if.end107:                                        ; preds = %if.end98
  %123 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13953
  %id108 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %123, i32 0, i32 2, !dbg !13954
  %124 = load i32, i32* %id108, align 8, !dbg !13954
  %125 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13955
  %pci_membase109 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %125, i32 0, i32 22, !dbg !13956
  %126 = load i8*, i8** %pci_membase109, align 8, !dbg !13956
  %127 = ptrtoint i8* %126 to i64, !dbg !13957
  %128 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13958
  %pci_origmembase110 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %128, i32 0, i32 20, !dbg !13959
  %129 = load i64, i64* %pci_origmembase110, align 8, !dbg !13959
  %130 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13960
  %pci_dev111 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %130, i32 0, i32 8, !dbg !13961
  %131 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev111, align 8, !dbg !13961
  %irq112 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %131, i32 0, i32 43, !dbg !13962
  %132 = load i32, i32* %irq112, align 4, !dbg !13962
  %133 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13963
  %leds113 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %133, i32 0, i32 42, !dbg !13964
  %134 = load i32, i32* %leds113, align 4, !dbg !13964
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.100, i64 0, i64 0), i32 %124, i64 %127, i64 %129, i32 %132, i32 250, i32 %134) #13, !dbg !13965
  %135 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13966
  %pci_dev115 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %135, i32 0, i32 8, !dbg !13967
  %136 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev115, align 8, !dbg !13967
  %call116 = call i32 @pci_write_config_word(%struct.pci_dev* %136, i32 4, i16 zeroext 2) #12, !dbg !13968
  br label %sw.epilog, !dbg !13969

sw.bb117:                                         ; preds = %if.end30
  %137 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13970
  %HFC_outb118 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %137, i32 0, i32 10, !dbg !13971
  store void (%struct.hfc_multi*, i8, i8)* @HFC_outb_regio, void (%struct.hfc_multi*, i8, i8)** %HFC_outb118, align 8, !dbg !13972
  %138 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13973
  %HFC_inb119 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %138, i32 0, i32 12, !dbg !13974
  store i8 (%struct.hfc_multi*, i8)* @HFC_inb_regio, i8 (%struct.hfc_multi*, i8)** %HFC_inb119, align 8, !dbg !13975
  %139 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13976
  %HFC_inw120 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %139, i32 0, i32 14, !dbg !13977
  store i16 (%struct.hfc_multi*, i8)* @HFC_inw_regio, i16 (%struct.hfc_multi*, i8)** %HFC_inw120, align 8, !dbg !13978
  %140 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13979
  %HFC_wait121 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %140, i32 0, i32 16, !dbg !13980
  store void (%struct.hfc_multi*)* @HFC_wait_regio, void (%struct.hfc_multi*)** %HFC_wait121, align 8, !dbg !13981
  %141 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13982
  %read_fifo122 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %141, i32 0, i32 18, !dbg !13983
  store void (%struct.hfc_multi*, i8*, i32)* @read_fifo_regio, void (%struct.hfc_multi*, i8*, i32)** %read_fifo122, align 8, !dbg !13984
  %142 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13985
  %write_fifo123 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %142, i32 0, i32 19, !dbg !13986
  store void (%struct.hfc_multi*, i8*, i32)* @write_fifo_regio, void (%struct.hfc_multi*, i8*, i32)** %write_fifo123, align 8, !dbg !13987
  %143 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13988
  %pci_dev124 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %143, i32 0, i32 8, !dbg !13989
  %144 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev124, align 8, !dbg !13989
  %resource125 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %144, i32 0, i32 44, !dbg !13990
  %arrayidx126 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource125, i64 0, i64 0, !dbg !13988
  %start127 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx126, i32 0, i32 0, !dbg !13991
  %145 = load i64, i64* %start127, align 8, !dbg !13991
  %conv = trunc i64 %145 to i32, !dbg !13992
  %conv128 = zext i32 %conv to i64, !dbg !13992
  %146 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13993
  %pci_iobase129 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %146, i32 0, i32 29, !dbg !13994
  store i64 %conv128, i64* %pci_iobase129, align 8, !dbg !13995
  %147 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !13996
  %pci_iobase130 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %147, i32 0, i32 29, !dbg !13998
  %148 = load i64, i64* %pci_iobase130, align 8, !dbg !13998
  %tobool131 = icmp ne i64 %148, 0, !dbg !13996
  br i1 %tobool131, label %if.end135, label %if.then132, !dbg !13999

if.then132:                                       ; preds = %sw.bb117
  %call133 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.101, i64 0, i64 0)) #13, !dbg !14000
  %149 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14002
  %pci_dev134 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %149, i32 0, i32 8, !dbg !14003
  %150 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev134, align 8, !dbg !14003
  call void @pci_disable_device(%struct.pci_dev* %150) #12, !dbg !14004
  store i32 -5, i32* %retval, align 4, !dbg !14005
  br label %return, !dbg !14005

if.end135:                                        ; preds = %sw.bb117
  %151 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14006
  %pci_iobase136 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %151, i32 0, i32 29, !dbg !14006
  %152 = load i64, i64* %pci_iobase136, align 8, !dbg !14006
  %call137 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %152, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 0) #12, !dbg !14006
  %tobool138 = icmp ne %struct.resource* %call137, null, !dbg !14006
  br i1 %tobool138, label %if.end143, label %if.then139, !dbg !14008

if.then139:                                       ; preds = %if.end135
  %153 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14009
  %pci_iobase140 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %153, i32 0, i32 29, !dbg !14011
  %154 = load i64, i64* %pci_iobase140, align 8, !dbg !14011
  %call141 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.102, i64 0, i64 0), i64 %154) #13, !dbg !14012
  %155 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14013
  %pci_dev142 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %155, i32 0, i32 8, !dbg !14014
  %156 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev142, align 8, !dbg !14014
  call void @pci_disable_device(%struct.pci_dev* %156) #12, !dbg !14015
  store i32 -5, i32* %retval, align 4, !dbg !14016
  br label %return, !dbg !14016

if.end143:                                        ; preds = %if.end135
  %157 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !14017
  %vendor_name144 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %157, i32 0, i32 0, !dbg !14018
  %158 = load i8*, i8** %vendor_name144, align 8, !dbg !14018
  %159 = load %struct.hm_map*, %struct.hm_map** %m, align 8, !dbg !14019
  %card_name145 = getelementptr inbounds %struct.hm_map, %struct.hm_map* %159, i32 0, i32 1, !dbg !14020
  %160 = load i8*, i8** %card_name145, align 8, !dbg !14020
  %161 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14021
  %pci_iobase146 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %161, i32 0, i32 29, !dbg !14022
  %162 = load i64, i64* %pci_iobase146, align 8, !dbg !14022
  %conv147 = trunc i64 %162 to i32, !dbg !14023
  %163 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14024
  %pci_dev148 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %163, i32 0, i32 8, !dbg !14025
  %164 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev148, align 8, !dbg !14025
  %irq149 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %164, i32 0, i32 43, !dbg !14026
  %165 = load i32, i32* %irq149, align 4, !dbg !14026
  %166 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14027
  %leds150 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %166, i32 0, i32 42, !dbg !14028
  %167 = load i32, i32* %leds150, align 4, !dbg !14028
  %call151 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i64 0, i64 0), i8* %158, i8* %160, i32 %conv147, i32 %165, i32 250, i32 %167) #13, !dbg !14029
  %168 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14030
  %pci_dev152 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %168, i32 0, i32 8, !dbg !14031
  %169 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev152, align 8, !dbg !14031
  %call153 = call i32 @pci_write_config_word(%struct.pci_dev* %169, i32 4, i16 zeroext 1) #12, !dbg !14032
  br label %sw.epilog, !dbg !14033

sw.default:                                       ; preds = %if.end30
  %call154 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.104, i64 0, i64 0)) #13, !dbg !14034
  %170 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14035
  %pci_dev155 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %170, i32 0, i32 8, !dbg !14036
  %171 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev155, align 8, !dbg !14036
  call void @pci_disable_device(%struct.pci_dev* %171) #12, !dbg !14037
  store i32 -5, i32* %retval, align 4, !dbg !14038
  br label %return, !dbg !14038

sw.epilog:                                        ; preds = %if.end143, %if.end107, %if.end72
  %172 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14039
  %pci_dev156 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %172, i32 0, i32 8, !dbg !14040
  %173 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev156, align 8, !dbg !14040
  %174 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14041
  %175 = bitcast %struct.hfc_multi* %174 to i8*, !dbg !14041
  call void @pci_set_drvdata(%struct.pci_dev* %173, i8* %175) #12, !dbg !14042
  store i32 0, i32* %retval, align 4, !dbg !14043
  br label %return, !dbg !14043

return:                                           ; preds = %sw.epilog, %sw.default, %if.then139, %if.then132, %if.then104, %if.then95, %if.then69, %if.then60, %if.then47, %if.then38, %if.then21, %if.then15
  %176 = load i32, i32* %retval, align 4, !dbg !14044
  ret i32 %176, !dbg !14044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_e1_port(%struct.hfc_multi* %hc, %struct.hm_map* %m, i32 %pt) #2 !dbg !14045 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %m.addr = alloca %struct.hm_map*, align 8
  %pt.addr = alloca i32, align 4
  %dch = alloca %struct.dchannel*, align 8
  %bch = alloca %struct.bchannel*, align 8
  %ch = alloca i32, align 4
  %ret = alloca i32, align 4
  %name = alloca [20 x i8], align 16
  %bcount = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !14048, metadata !DIExpression()), !dbg !14049
  store %struct.hm_map* %m, %struct.hm_map** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hm_map** %m.addr, metadata !14050, metadata !DIExpression()), !dbg !14051
  store i32 %pt, i32* %pt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pt.addr, metadata !14052, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !14054, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !14056, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !14058, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14060, metadata !DIExpression()), !dbg !14061
  store i32 0, i32* %ret, align 4, !dbg !14061
  call void @llvm.dbg.declare(metadata [20 x i8]* %name, metadata !14062, metadata !DIExpression()), !dbg !14064
  call void @llvm.dbg.declare(metadata i32* %bcount, metadata !14065, metadata !DIExpression()), !dbg !14066
  store i32 0, i32* %bcount, align 4, !dbg !14066
  %call = call i8* @kzalloc(i64 1048, i32 3264) #12, !dbg !14067
  %0 = bitcast i8* %call to %struct.dchannel*, !dbg !14067
  store %struct.dchannel* %0, %struct.dchannel** %dch, align 8, !dbg !14068
  %1 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14069
  %tobool = icmp ne %struct.dchannel* %1, null, !dbg !14069
  br i1 %tobool, label %if.end, label %if.then, !dbg !14071

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !14072
  br label %return, !dbg !14072

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @debug, align 4, !dbg !14073
  %3 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14074
  %debug = getelementptr inbounds %struct.dchannel, %struct.dchannel* %3, i32 0, i32 15, !dbg !14075
  store i32 %2, i32* %debug, align 4, !dbg !14076
  %4 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14077
  %call1 = call i32 @mISDN_initdchannel(%struct.dchannel* %4, i32 300, i8* bitcast (void (%struct.dchannel*)* @ph_state_change to i8*)) #12, !dbg !14078
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14079
  %6 = bitcast %struct.hfc_multi* %5 to i8*, !dbg !14079
  %7 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14080
  %hw = getelementptr inbounds %struct.dchannel, %struct.dchannel* %7, i32 0, i32 6, !dbg !14081
  store i8* %6, i8** %hw, align 8, !dbg !14082
  %8 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14083
  %dev = getelementptr inbounds %struct.dchannel, %struct.dchannel* %8, i32 0, i32 0, !dbg !14084
  %Dprotocols = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev, i32 0, i32 2, !dbg !14085
  store i32 24, i32* %Dprotocols, align 4, !dbg !14086
  %9 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14087
  %dev2 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %9, i32 0, i32 0, !dbg !14088
  %Bprotocols = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev2, i32 0, i32 3, !dbg !14089
  store i32 6, i32* %Bprotocols, align 8, !dbg !14090
  %10 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14091
  %dev3 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %10, i32 0, i32 0, !dbg !14092
  %D = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev3, i32 0, i32 0, !dbg !14093
  %send = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D, i32 0, i32 7, !dbg !14094
  store i32 (%struct.mISDNchannel*, %struct.sk_buff*)* @handle_dmsg, i32 (%struct.mISDNchannel*, %struct.sk_buff*)** %send, align 8, !dbg !14095
  %11 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14096
  %dev4 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %11, i32 0, i32 0, !dbg !14097
  %D5 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev4, i32 0, i32 0, !dbg !14098
  %ctrl = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D5, i32 0, i32 9, !dbg !14099
  store i32 (%struct.mISDNchannel*, i32, i8*)* @hfcm_dctrl, i32 (%struct.mISDNchannel*, i32, i8*)** %ctrl, align 8, !dbg !14100
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14101
  %dnum = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %12, i32 0, i32 46, !dbg !14102
  %13 = load i32, i32* %pt.addr, align 4, !dbg !14103
  %idxprom = sext i32 %13 to i64, !dbg !14101
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %dnum, i64 0, i64 %idxprom, !dbg !14101
  %14 = load i8, i8* %arrayidx, align 1, !dbg !14101
  %conv = zext i8 %14 to i32, !dbg !14101
  %15 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14104
  %slot = getelementptr inbounds %struct.dchannel, %struct.dchannel* %15, i32 0, i32 7, !dbg !14105
  store i32 %conv, i32* %slot, align 8, !dbg !14106
  %16 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14107
  %17 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14108
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %17, i32 0, i32 60, !dbg !14109
  %18 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14110
  %dnum6 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %18, i32 0, i32 46, !dbg !14111
  %19 = load i32, i32* %pt.addr, align 4, !dbg !14112
  %idxprom7 = sext i32 %19 to i64, !dbg !14110
  %arrayidx8 = getelementptr [32 x i8], [32 x i8]* %dnum6, i64 0, i64 %idxprom7, !dbg !14110
  %20 = load i8, i8* %arrayidx8, align 1, !dbg !14110
  %idxprom9 = zext i8 %20 to i64, !dbg !14108
  %arrayidx10 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom9, !dbg !14108
  %dch11 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx10, i32 0, i32 0, !dbg !14113
  store %struct.dchannel* %16, %struct.dchannel** %dch11, align 8, !dbg !14114
  %21 = load i32, i32* %pt.addr, align 4, !dbg !14115
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14116
  %chan12 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 60, !dbg !14117
  %23 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14118
  %dnum13 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %23, i32 0, i32 46, !dbg !14119
  %24 = load i32, i32* %pt.addr, align 4, !dbg !14120
  %idxprom14 = sext i32 %24 to i64, !dbg !14118
  %arrayidx15 = getelementptr [32 x i8], [32 x i8]* %dnum13, i64 0, i64 %idxprom14, !dbg !14118
  %25 = load i8, i8* %arrayidx15, align 1, !dbg !14118
  %idxprom16 = zext i8 %25 to i64, !dbg !14116
  %arrayidx17 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan12, i64 0, i64 %idxprom16, !dbg !14116
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx17, i32 0, i32 2, !dbg !14121
  store i32 %21, i32* %port, align 8, !dbg !14122
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14123
  %chan18 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %26, i32 0, i32 60, !dbg !14124
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14125
  %dnum19 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %27, i32 0, i32 46, !dbg !14126
  %28 = load i32, i32* %pt.addr, align 4, !dbg !14127
  %idxprom20 = sext i32 %28 to i64, !dbg !14125
  %arrayidx21 = getelementptr [32 x i8], [32 x i8]* %dnum19, i64 0, i64 %idxprom20, !dbg !14125
  %29 = load i8, i8* %arrayidx21, align 1, !dbg !14125
  %idxprom22 = zext i8 %29 to i64, !dbg !14123
  %arrayidx23 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan18, i64 0, i64 %idxprom22, !dbg !14123
  %nt_timer = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx23, i32 0, i32 3, !dbg !14128
  store i32 -1, i32* %nt_timer, align 4, !dbg !14129
  store i32 1, i32* %ch, align 4, !dbg !14130
  br label %for.cond, !dbg !14132

for.cond:                                         ; preds = %for.inc, %if.end
  %30 = load i32, i32* %ch, align 4, !dbg !14133
  %cmp = icmp sle i32 %30, 31, !dbg !14135
  br i1 %cmp, label %for.body, label %for.end, !dbg !14136

for.body:                                         ; preds = %for.cond
  %31 = load i32, i32* %ch, align 4, !dbg !14137
  %shl = shl i32 1, %31, !dbg !14140
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14141
  %bmask = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %32, i32 0, i32 45, !dbg !14142
  %33 = load i32, i32* %pt.addr, align 4, !dbg !14143
  %idxprom25 = sext i32 %33 to i64, !dbg !14141
  %arrayidx26 = getelementptr [32 x i32], [32 x i32]* %bmask, i64 0, i64 %idxprom25, !dbg !14141
  %34 = load i32, i32* %arrayidx26, align 4, !dbg !14141
  %and = and i32 %shl, %34, !dbg !14144
  %tobool27 = icmp ne i32 %and, 0, !dbg !14144
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !14145

if.then28:                                        ; preds = %for.body
  br label %for.inc, !dbg !14146

if.end29:                                         ; preds = %for.body
  %call30 = call i8* @kzalloc(i64 296, i32 3264) #12, !dbg !14147
  %35 = bitcast i8* %call30 to %struct.bchannel*, !dbg !14147
  store %struct.bchannel* %35, %struct.bchannel** %bch, align 8, !dbg !14148
  %36 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14149
  %tobool31 = icmp ne %struct.bchannel* %36, null, !dbg !14149
  br i1 %tobool31, label %if.end34, label %if.then32, !dbg !14151

if.then32:                                        ; preds = %if.end29
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.init_e1_port, i64 0, i64 0)) #13, !dbg !14152
  store i32 -12, i32* %ret, align 4, !dbg !14154
  br label %free_chan, !dbg !14155

if.end34:                                         ; preds = %if.end29
  %call35 = call i8* @kzalloc(i64 512, i32 3264) #12, !dbg !14156
  %37 = bitcast i8* %call35 to i32*, !dbg !14156
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14157
  %chan36 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 60, !dbg !14158
  %39 = load i32, i32* %ch, align 4, !dbg !14159
  %idxprom37 = sext i32 %39 to i64, !dbg !14157
  %arrayidx38 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan36, i64 0, i64 %idxprom37, !dbg !14157
  %coeff = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx38, i32 0, i32 22, !dbg !14160
  store i32* %37, i32** %coeff, align 8, !dbg !14161
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14162
  %chan39 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %40, i32 0, i32 60, !dbg !14164
  %41 = load i32, i32* %ch, align 4, !dbg !14165
  %idxprom40 = sext i32 %41 to i64, !dbg !14162
  %arrayidx41 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan39, i64 0, i64 %idxprom40, !dbg !14162
  %coeff42 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx41, i32 0, i32 22, !dbg !14166
  %42 = load i32*, i32** %coeff42, align 8, !dbg !14166
  %tobool43 = icmp ne i32* %42, null, !dbg !14162
  br i1 %tobool43, label %if.end46, label %if.then44, !dbg !14167

if.then44:                                        ; preds = %if.end34
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.init_e1_port, i64 0, i64 0)) #13, !dbg !14168
  store i32 -12, i32* %ret, align 4, !dbg !14170
  %43 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14171
  %44 = bitcast %struct.bchannel* %43 to i8*, !dbg !14171
  call void @kfree(i8* %44) #12, !dbg !14172
  br label %free_chan, !dbg !14173

if.end46:                                         ; preds = %if.end34
  %45 = load i32, i32* %ch, align 4, !dbg !14174
  %46 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14175
  %nr = getelementptr inbounds %struct.bchannel, %struct.bchannel* %46, i32 0, i32 1, !dbg !14176
  store i32 %45, i32* %nr, align 8, !dbg !14177
  %47 = load i32, i32* %ch, align 4, !dbg !14178
  %48 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14179
  %slot47 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %48, i32 0, i32 6, !dbg !14180
  store i32 %47, i32* %slot47, align 8, !dbg !14181
  %49 = load i32, i32* @debug, align 4, !dbg !14182
  %50 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14183
  %debug48 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %50, i32 0, i32 21, !dbg !14184
  store i32 %49, i32* %debug48, align 8, !dbg !14185
  %51 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14186
  %52 = load i32, i32* @poll, align 4, !dbg !14187
  %shr = lshr i32 %52, 1, !dbg !14188
  %conv49 = trunc i32 %shr to i16, !dbg !14187
  %call50 = call i32 @mISDN_initbchannel(%struct.bchannel* %51, i16 zeroext 2056, i16 zeroext %conv49) #12, !dbg !14189
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14190
  %54 = bitcast %struct.hfc_multi* %53 to i8*, !dbg !14190
  %55 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14191
  %hw51 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %55, i32 0, i32 5, !dbg !14192
  store i8* %54, i8** %hw51, align 8, !dbg !14193
  %56 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14194
  %ch52 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %56, i32 0, i32 0, !dbg !14195
  %send53 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %ch52, i32 0, i32 7, !dbg !14196
  store i32 (%struct.mISDNchannel*, %struct.sk_buff*)* @handle_bmsg, i32 (%struct.mISDNchannel*, %struct.sk_buff*)** %send53, align 8, !dbg !14197
  %57 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14198
  %ch54 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %57, i32 0, i32 0, !dbg !14199
  %ctrl55 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %ch54, i32 0, i32 9, !dbg !14200
  store i32 (%struct.mISDNchannel*, i32, i8*)* @hfcm_bctrl, i32 (%struct.mISDNchannel*, i32, i8*)** %ctrl55, align 8, !dbg !14201
  %58 = load i32, i32* %ch, align 4, !dbg !14202
  %59 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14203
  %ch56 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %59, i32 0, i32 0, !dbg !14204
  %nr57 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %ch56, i32 0, i32 2, !dbg !14205
  store i32 %58, i32* %nr57, align 4, !dbg !14206
  %60 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14207
  %ch58 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %60, i32 0, i32 0, !dbg !14208
  %list = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %ch58, i32 0, i32 0, !dbg !14209
  %61 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14210
  %dev59 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %61, i32 0, i32 0, !dbg !14211
  %bchannels = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev59, i32 0, i32 6, !dbg !14212
  call void @list_add(%struct.list_head* %list, %struct.list_head* %bchannels) #12, !dbg !14213
  %62 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14214
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14215
  %chan60 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %63, i32 0, i32 60, !dbg !14216
  %64 = load i32, i32* %ch, align 4, !dbg !14217
  %idxprom61 = sext i32 %64 to i64, !dbg !14215
  %arrayidx62 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan60, i64 0, i64 %idxprom61, !dbg !14215
  %bch63 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx62, i32 0, i32 1, !dbg !14218
  store %struct.bchannel* %62, %struct.bchannel** %bch63, align 8, !dbg !14219
  %65 = load i32, i32* %pt.addr, align 4, !dbg !14220
  %66 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14221
  %chan64 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %66, i32 0, i32 60, !dbg !14222
  %67 = load i32, i32* %ch, align 4, !dbg !14223
  %idxprom65 = sext i32 %67 to i64, !dbg !14221
  %arrayidx66 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan64, i64 0, i64 %idxprom65, !dbg !14221
  %port67 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx66, i32 0, i32 2, !dbg !14224
  store i32 %65, i32* %port67, align 8, !dbg !14225
  %68 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14226
  %nr68 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %68, i32 0, i32 1, !dbg !14227
  %69 = load i32, i32* %nr68, align 8, !dbg !14227
  %70 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14228
  %dev69 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %70, i32 0, i32 0, !dbg !14229
  %channelmap = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev69, i32 0, i32 5, !dbg !14230
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %channelmap, i64 0, i64 0, !dbg !14228
  call void @set_channelmap(i32 %69, i8* %arraydecay) #12, !dbg !14231
  %71 = load i32, i32* %bcount, align 4, !dbg !14232
  %inc = add i32 %71, 1, !dbg !14232
  store i32 %inc, i32* %bcount, align 4, !dbg !14232
  br label %for.inc, !dbg !14233

for.inc:                                          ; preds = %if.end46, %if.then28
  %72 = load i32, i32* %ch, align 4, !dbg !14234
  %inc70 = add i32 %72, 1, !dbg !14234
  store i32 %inc70, i32* %ch, align 4, !dbg !14234
  br label %for.cond, !dbg !14235, !llvm.loop !14236

for.end:                                          ; preds = %for.cond
  %73 = load i32, i32* %bcount, align 4, !dbg !14238
  %74 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14239
  %dev71 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %74, i32 0, i32 0, !dbg !14240
  %nrbchan = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev71, i32 0, i32 4, !dbg !14241
  store i32 %73, i32* %nrbchan, align 4, !dbg !14242
  %75 = load i32, i32* %pt.addr, align 4, !dbg !14243
  %cmp72 = icmp eq i32 %75, 0, !dbg !14245
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !14246

if.then74:                                        ; preds = %for.end
  %76 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14247
  %77 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !14248
  call void @init_e1_port_hw(%struct.hfc_multi* %76, %struct.hm_map* %77) #12, !dbg !14249
  br label %if.end75, !dbg !14249

if.end75:                                         ; preds = %if.then74, %for.end
  %78 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14250
  %ports = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %78, i32 0, i32 5, !dbg !14252
  %79 = load i32, i32* %ports, align 4, !dbg !14252
  %cmp76 = icmp sgt i32 %79, 1, !dbg !14253
  br i1 %cmp76, label %if.then78, label %if.else, !dbg !14254

if.then78:                                        ; preds = %if.end75
  %arraydecay79 = getelementptr inbounds [20 x i8], [20 x i8]* %name, i64 0, i64 0, !dbg !14255
  %80 = load i32, i32* @HFC_cnt, align 4, !dbg !14256
  %add = add i32 %80, 1, !dbg !14257
  %81 = load i32, i32* %pt.addr, align 4, !dbg !14258
  %add80 = add i32 %81, 1, !dbg !14259
  %call81 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay79, i64 19, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.107, i64 0, i64 0), i32 %add, i32 %add80) #12, !dbg !14260
  br label %if.end85, !dbg !14260

if.else:                                          ; preds = %if.end75
  %arraydecay82 = getelementptr inbounds [20 x i8], [20 x i8]* %name, i64 0, i64 0, !dbg !14261
  %82 = load i32, i32* @HFC_cnt, align 4, !dbg !14262
  %add83 = add i32 %82, 1, !dbg !14263
  %call84 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay82, i64 19, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i64 0, i64 0), i32 %add83) #12, !dbg !14264
  br label %if.end85

if.end85:                                         ; preds = %if.else, %if.then78
  %83 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14265
  %dev86 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %83, i32 0, i32 0, !dbg !14266
  %84 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14267
  %pci_dev = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %84, i32 0, i32 8, !dbg !14268
  %85 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !14268
  %dev87 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %85, i32 0, i32 41, !dbg !14269
  %arraydecay88 = getelementptr inbounds [20 x i8], [20 x i8]* %name, i64 0, i64 0, !dbg !14270
  %call89 = call i32 @mISDN_register_device(%struct.mISDNdevice* %dev86, %struct.device* %dev87, i8* %arraydecay88) #12, !dbg !14271
  store i32 %call89, i32* %ret, align 4, !dbg !14272
  %86 = load i32, i32* %ret, align 4, !dbg !14273
  %tobool90 = icmp ne i32 %86, 0, !dbg !14273
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !14275

if.then91:                                        ; preds = %if.end85
  br label %free_chan, !dbg !14276

if.end92:                                         ; preds = %if.end85
  %87 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14277
  %created = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %87, i32 0, i32 47, !dbg !14278
  %88 = load i32, i32* %pt.addr, align 4, !dbg !14279
  %idxprom93 = sext i32 %88 to i64, !dbg !14277
  %arrayidx94 = getelementptr [32 x i8], [32 x i8]* %created, i64 0, i64 %idxprom93, !dbg !14277
  store i8 1, i8* %arrayidx94, align 1, !dbg !14280
  %89 = load i32, i32* %ret, align 4, !dbg !14281
  store i32 %89, i32* %retval, align 4, !dbg !14282
  br label %return, !dbg !14282

free_chan:                                        ; preds = %if.then91, %if.then44, %if.then32
  call void @llvm.dbg.label(metadata !14283), !dbg !14284
  %90 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14285
  %91 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14286
  call void @release_port(%struct.hfc_multi* %90, %struct.dchannel* %91) #12, !dbg !14287
  %92 = load i32, i32* %ret, align 4, !dbg !14288
  store i32 %92, i32* %retval, align 4, !dbg !14289
  br label %return, !dbg !14289

return:                                           ; preds = %free_chan, %if.end92, %if.then
  %93 = load i32, i32* %retval, align 4, !dbg !14290
  ret i32 %93, !dbg !14290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_multi_port(%struct.hfc_multi* %hc, i32 %pt) #2 !dbg !14291 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %pt.addr = alloca i32, align 4
  %dch = alloca %struct.dchannel*, align 8
  %bch = alloca %struct.bchannel*, align 8
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %name = alloca [20 x i8], align 16
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !14294, metadata !DIExpression()), !dbg !14295
  store i32 %pt, i32* %pt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pt.addr, metadata !14296, metadata !DIExpression()), !dbg !14297
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !14298, metadata !DIExpression()), !dbg !14299
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !14300, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !14302, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14304, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14306, metadata !DIExpression()), !dbg !14307
  store i32 0, i32* %ret, align 4, !dbg !14307
  call void @llvm.dbg.declare(metadata [20 x i8]* %name, metadata !14308, metadata !DIExpression()), !dbg !14309
  %call = call i8* @kzalloc(i64 1048, i32 3264) #12, !dbg !14310
  %0 = bitcast i8* %call to %struct.dchannel*, !dbg !14310
  store %struct.dchannel* %0, %struct.dchannel** %dch, align 8, !dbg !14311
  %1 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14312
  %tobool = icmp ne %struct.dchannel* %1, null, !dbg !14312
  br i1 %tobool, label %if.end, label %if.then, !dbg !14314

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !14315
  br label %return, !dbg !14315

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @debug, align 4, !dbg !14316
  %3 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14317
  %debug = getelementptr inbounds %struct.dchannel, %struct.dchannel* %3, i32 0, i32 15, !dbg !14318
  store i32 %2, i32* %debug, align 4, !dbg !14319
  %4 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14320
  %call1 = call i32 @mISDN_initdchannel(%struct.dchannel* %4, i32 300, i8* bitcast (void (%struct.dchannel*)* @ph_state_change to i8*)) #12, !dbg !14321
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14322
  %6 = bitcast %struct.hfc_multi* %5 to i8*, !dbg !14322
  %7 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14323
  %hw = getelementptr inbounds %struct.dchannel, %struct.dchannel* %7, i32 0, i32 6, !dbg !14324
  store i8* %6, i8** %hw, align 8, !dbg !14325
  %8 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14326
  %dev = getelementptr inbounds %struct.dchannel, %struct.dchannel* %8, i32 0, i32 0, !dbg !14327
  %Dprotocols = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev, i32 0, i32 2, !dbg !14328
  store i32 6, i32* %Dprotocols, align 4, !dbg !14329
  %9 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14330
  %dev2 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %9, i32 0, i32 0, !dbg !14331
  %Bprotocols = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev2, i32 0, i32 3, !dbg !14332
  store i32 6, i32* %Bprotocols, align 8, !dbg !14333
  %10 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14334
  %dev3 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %10, i32 0, i32 0, !dbg !14335
  %D = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev3, i32 0, i32 0, !dbg !14336
  %send = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D, i32 0, i32 7, !dbg !14337
  store i32 (%struct.mISDNchannel*, %struct.sk_buff*)* @handle_dmsg, i32 (%struct.mISDNchannel*, %struct.sk_buff*)** %send, align 8, !dbg !14338
  %11 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14339
  %dev4 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %11, i32 0, i32 0, !dbg !14340
  %D5 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev4, i32 0, i32 0, !dbg !14341
  %ctrl = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D5, i32 0, i32 9, !dbg !14342
  store i32 (%struct.mISDNchannel*, i32, i8*)* @hfcm_dctrl, i32 (%struct.mISDNchannel*, i32, i8*)** %ctrl, align 8, !dbg !14343
  %12 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14344
  %dev6 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %12, i32 0, i32 0, !dbg !14345
  %nrbchan = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev6, i32 0, i32 4, !dbg !14346
  store i32 2, i32* %nrbchan, align 4, !dbg !14347
  %13 = load i32, i32* %pt.addr, align 4, !dbg !14348
  %shl = shl i32 %13, 2, !dbg !14349
  store i32 %shl, i32* %i, align 4, !dbg !14350
  %14 = load i32, i32* %i, align 4, !dbg !14351
  %add = add i32 %14, 2, !dbg !14352
  %15 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14353
  %slot = getelementptr inbounds %struct.dchannel, %struct.dchannel* %15, i32 0, i32 7, !dbg !14354
  store i32 %add, i32* %slot, align 8, !dbg !14355
  %16 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14356
  %17 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14357
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %17, i32 0, i32 60, !dbg !14358
  %18 = load i32, i32* %i, align 4, !dbg !14359
  %add7 = add i32 %18, 2, !dbg !14360
  %idxprom = sext i32 %add7 to i64, !dbg !14357
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !14357
  %dch8 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 0, !dbg !14361
  store %struct.dchannel* %16, %struct.dchannel** %dch8, align 8, !dbg !14362
  %19 = load i32, i32* %pt.addr, align 4, !dbg !14363
  %20 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14364
  %chan9 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %20, i32 0, i32 60, !dbg !14365
  %21 = load i32, i32* %i, align 4, !dbg !14366
  %add10 = add i32 %21, 2, !dbg !14367
  %idxprom11 = sext i32 %add10 to i64, !dbg !14364
  %arrayidx12 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan9, i64 0, i64 %idxprom11, !dbg !14364
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx12, i32 0, i32 2, !dbg !14368
  store i32 %19, i32* %port, align 8, !dbg !14369
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14370
  %chan13 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 60, !dbg !14371
  %23 = load i32, i32* %i, align 4, !dbg !14372
  %add14 = add i32 %23, 2, !dbg !14373
  %idxprom15 = sext i32 %add14 to i64, !dbg !14370
  %arrayidx16 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan13, i64 0, i64 %idxprom15, !dbg !14370
  %nt_timer = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx16, i32 0, i32 3, !dbg !14374
  store i32 -1, i32* %nt_timer, align 4, !dbg !14375
  store i32 0, i32* %ch, align 4, !dbg !14376
  br label %for.cond, !dbg !14378

for.cond:                                         ; preds = %for.inc, %if.end
  %24 = load i32, i32* %ch, align 4, !dbg !14379
  %25 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14381
  %dev17 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %25, i32 0, i32 0, !dbg !14382
  %nrbchan18 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev17, i32 0, i32 4, !dbg !14383
  %26 = load i32, i32* %nrbchan18, align 4, !dbg !14383
  %cmp = icmp ult i32 %24, %26, !dbg !14384
  br i1 %cmp, label %for.body, label %for.end, !dbg !14385

for.body:                                         ; preds = %for.cond
  %call19 = call i8* @kzalloc(i64 296, i32 3264) #12, !dbg !14386
  %27 = bitcast i8* %call19 to %struct.bchannel*, !dbg !14386
  store %struct.bchannel* %27, %struct.bchannel** %bch, align 8, !dbg !14388
  %28 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14389
  %tobool20 = icmp ne %struct.bchannel* %28, null, !dbg !14389
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !14391

if.then21:                                        ; preds = %for.body
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_multi_port, i64 0, i64 0)) #13, !dbg !14392
  store i32 -12, i32* %ret, align 4, !dbg !14394
  br label %free_chan, !dbg !14395

if.end23:                                         ; preds = %for.body
  %call24 = call i8* @kzalloc(i64 512, i32 3264) #12, !dbg !14396
  %29 = bitcast i8* %call24 to i32*, !dbg !14396
  %30 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14397
  %chan25 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %30, i32 0, i32 60, !dbg !14398
  %31 = load i32, i32* %i, align 4, !dbg !14399
  %32 = load i32, i32* %ch, align 4, !dbg !14400
  %add26 = add i32 %31, %32, !dbg !14401
  %idxprom27 = sext i32 %add26 to i64, !dbg !14397
  %arrayidx28 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan25, i64 0, i64 %idxprom27, !dbg !14397
  %coeff = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx28, i32 0, i32 22, !dbg !14402
  store i32* %29, i32** %coeff, align 8, !dbg !14403
  %33 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14404
  %chan29 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %33, i32 0, i32 60, !dbg !14406
  %34 = load i32, i32* %i, align 4, !dbg !14407
  %35 = load i32, i32* %ch, align 4, !dbg !14408
  %add30 = add i32 %34, %35, !dbg !14409
  %idxprom31 = sext i32 %add30 to i64, !dbg !14404
  %arrayidx32 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan29, i64 0, i64 %idxprom31, !dbg !14404
  %coeff33 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx32, i32 0, i32 22, !dbg !14410
  %36 = load i32*, i32** %coeff33, align 8, !dbg !14410
  %tobool34 = icmp ne i32* %36, null, !dbg !14404
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !14411

if.then35:                                        ; preds = %if.end23
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_multi_port, i64 0, i64 0)) #13, !dbg !14412
  store i32 -12, i32* %ret, align 4, !dbg !14414
  %37 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14415
  %38 = bitcast %struct.bchannel* %37 to i8*, !dbg !14415
  call void @kfree(i8* %38) #12, !dbg !14416
  br label %free_chan, !dbg !14417

if.end37:                                         ; preds = %if.end23
  %39 = load i32, i32* %ch, align 4, !dbg !14418
  %add38 = add i32 %39, 1, !dbg !14419
  %40 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14420
  %nr = getelementptr inbounds %struct.bchannel, %struct.bchannel* %40, i32 0, i32 1, !dbg !14421
  store i32 %add38, i32* %nr, align 8, !dbg !14422
  %41 = load i32, i32* %i, align 4, !dbg !14423
  %42 = load i32, i32* %ch, align 4, !dbg !14424
  %add39 = add i32 %41, %42, !dbg !14425
  %43 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14426
  %slot40 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %43, i32 0, i32 6, !dbg !14427
  store i32 %add39, i32* %slot40, align 8, !dbg !14428
  %44 = load i32, i32* @debug, align 4, !dbg !14429
  %45 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14430
  %debug41 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %45, i32 0, i32 21, !dbg !14431
  store i32 %44, i32* %debug41, align 8, !dbg !14432
  %46 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14433
  %47 = load i32, i32* @poll, align 4, !dbg !14434
  %shr = lshr i32 %47, 1, !dbg !14435
  %conv = trunc i32 %shr to i16, !dbg !14434
  %call42 = call i32 @mISDN_initbchannel(%struct.bchannel* %46, i16 zeroext 2056, i16 zeroext %conv) #12, !dbg !14436
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14437
  %49 = bitcast %struct.hfc_multi* %48 to i8*, !dbg !14437
  %50 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14438
  %hw43 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %50, i32 0, i32 5, !dbg !14439
  store i8* %49, i8** %hw43, align 8, !dbg !14440
  %51 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14441
  %ch44 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %51, i32 0, i32 0, !dbg !14442
  %send45 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %ch44, i32 0, i32 7, !dbg !14443
  store i32 (%struct.mISDNchannel*, %struct.sk_buff*)* @handle_bmsg, i32 (%struct.mISDNchannel*, %struct.sk_buff*)** %send45, align 8, !dbg !14444
  %52 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14445
  %ch46 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %52, i32 0, i32 0, !dbg !14446
  %ctrl47 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %ch46, i32 0, i32 9, !dbg !14447
  store i32 (%struct.mISDNchannel*, i32, i8*)* @hfcm_bctrl, i32 (%struct.mISDNchannel*, i32, i8*)** %ctrl47, align 8, !dbg !14448
  %53 = load i32, i32* %ch, align 4, !dbg !14449
  %add48 = add i32 %53, 1, !dbg !14450
  %54 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14451
  %ch49 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %54, i32 0, i32 0, !dbg !14452
  %nr50 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %ch49, i32 0, i32 2, !dbg !14453
  store i32 %add48, i32* %nr50, align 4, !dbg !14454
  %55 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14455
  %ch51 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %55, i32 0, i32 0, !dbg !14456
  %list = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %ch51, i32 0, i32 0, !dbg !14457
  %56 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14458
  %dev52 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %56, i32 0, i32 0, !dbg !14459
  %bchannels = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev52, i32 0, i32 6, !dbg !14460
  call void @list_add(%struct.list_head* %list, %struct.list_head* %bchannels) #12, !dbg !14461
  %57 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14462
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14463
  %chan53 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %58, i32 0, i32 60, !dbg !14464
  %59 = load i32, i32* %i, align 4, !dbg !14465
  %60 = load i32, i32* %ch, align 4, !dbg !14466
  %add54 = add i32 %59, %60, !dbg !14467
  %idxprom55 = sext i32 %add54 to i64, !dbg !14463
  %arrayidx56 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan53, i64 0, i64 %idxprom55, !dbg !14463
  %bch57 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx56, i32 0, i32 1, !dbg !14468
  store %struct.bchannel* %57, %struct.bchannel** %bch57, align 8, !dbg !14469
  %61 = load i32, i32* %pt.addr, align 4, !dbg !14470
  %62 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14471
  %chan58 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %62, i32 0, i32 60, !dbg !14472
  %63 = load i32, i32* %i, align 4, !dbg !14473
  %64 = load i32, i32* %ch, align 4, !dbg !14474
  %add59 = add i32 %63, %64, !dbg !14475
  %idxprom60 = sext i32 %add59 to i64, !dbg !14471
  %arrayidx61 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan58, i64 0, i64 %idxprom60, !dbg !14471
  %port62 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx61, i32 0, i32 2, !dbg !14476
  store i32 %61, i32* %port62, align 8, !dbg !14477
  %65 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !14478
  %nr63 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %65, i32 0, i32 1, !dbg !14479
  %66 = load i32, i32* %nr63, align 8, !dbg !14479
  %67 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14480
  %dev64 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %67, i32 0, i32 0, !dbg !14481
  %channelmap = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev64, i32 0, i32 5, !dbg !14482
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %channelmap, i64 0, i64 0, !dbg !14480
  call void @set_channelmap(i32 %66, i8* %arraydecay) #12, !dbg !14483
  br label %for.inc, !dbg !14484

for.inc:                                          ; preds = %if.end37
  %68 = load i32, i32* %ch, align 4, !dbg !14485
  %inc = add i32 %68, 1, !dbg !14485
  store i32 %inc, i32* %ch, align 4, !dbg !14485
  br label %for.cond, !dbg !14486, !llvm.loop !14487

for.end:                                          ; preds = %for.cond
  %69 = load i32, i32* @Port_cnt, align 4, !dbg !14489
  %idxprom65 = sext i32 %69 to i64, !dbg !14491
  %arrayidx66 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom65, !dbg !14491
  %70 = load i32, i32* %arrayidx66, align 4, !dbg !14491
  %and = and i32 %70, 1, !dbg !14492
  %tobool67 = icmp ne i32 %and, 0, !dbg !14492
  br i1 %tobool67, label %if.then68, label %if.end95, !dbg !14493

if.then68:                                        ; preds = %for.end
  %71 = load i32, i32* @debug, align 4, !dbg !14494
  %and69 = and i32 %71, 262144, !dbg !14497
  %tobool70 = icmp ne i32 %and69, 0, !dbg !14497
  br i1 %tobool70, label %if.then71, label %if.end75, !dbg !14498

if.then71:                                        ; preds = %if.then68
  %72 = load i32, i32* @HFC_cnt, align 4, !dbg !14499
  %add72 = add i32 %72, 1, !dbg !14500
  %73 = load i32, i32* %pt.addr, align 4, !dbg !14501
  %add73 = add i32 %73, 1, !dbg !14502
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.189, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_multi_port, i64 0, i64 0), i32 %add72, i32 %add73) #13, !dbg !14503
  br label %if.end75, !dbg !14503

if.end75:                                         ; preds = %if.then71, %if.then68
  %74 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14504
  %dev76 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %74, i32 0, i32 0, !dbg !14506
  %D77 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev76, i32 0, i32 0, !dbg !14507
  %protocol = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D77, i32 0, i32 1, !dbg !14508
  %75 = load i32, i32* %protocol, align 8, !dbg !14508
  %cmp78 = icmp ne i32 %75, 1, !dbg !14509
  br i1 %cmp78, label %if.then80, label %if.end84, !dbg !14510

if.then80:                                        ; preds = %if.end75
  %76 = load i32, i32* %pt.addr, align 4, !dbg !14511
  %add81 = add i32 %76, 1, !dbg !14513
  %77 = load i32, i32* @HFC_cnt, align 4, !dbg !14514
  %add82 = add i32 %77, 1, !dbg !14515
  %call83 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.190, i64 0, i64 0), i32 %add81, i32 %add82) #13, !dbg !14516
  store i32 -22, i32* %ret, align 4, !dbg !14517
  br label %free_chan, !dbg !14518

if.end84:                                         ; preds = %if.end75
  %78 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14519
  %masterclk = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %78, i32 0, i32 32, !dbg !14521
  %79 = load i32, i32* %masterclk, align 8, !dbg !14521
  %cmp85 = icmp sge i32 %79, 0, !dbg !14522
  br i1 %cmp85, label %if.then87, label %if.end93, !dbg !14523

if.then87:                                        ; preds = %if.end84
  %80 = load i32, i32* %pt.addr, align 4, !dbg !14524
  %add88 = add i32 %80, 1, !dbg !14526
  %81 = load i32, i32* @HFC_cnt, align 4, !dbg !14527
  %add89 = add i32 %81, 1, !dbg !14528
  %82 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14529
  %masterclk90 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %82, i32 0, i32 32, !dbg !14530
  %83 = load i32, i32* %masterclk90, align 8, !dbg !14530
  %add91 = add i32 %83, 1, !dbg !14531
  %call92 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.191, i64 0, i64 0), i32 %add88, i32 %add89, i32 %add91) #13, !dbg !14532
  store i32 -22, i32* %ret, align 4, !dbg !14533
  br label %free_chan, !dbg !14534

if.end93:                                         ; preds = %if.end84
  %84 = load i32, i32* %pt.addr, align 4, !dbg !14535
  %85 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14536
  %masterclk94 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %85, i32 0, i32 32, !dbg !14537
  store i32 %84, i32* %masterclk94, align 8, !dbg !14538
  br label %if.end95, !dbg !14539

if.end95:                                         ; preds = %if.end93, %for.end
  %86 = load i32, i32* @Port_cnt, align 4, !dbg !14540
  %idxprom96 = sext i32 %86 to i64, !dbg !14542
  %arrayidx97 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom96, !dbg !14542
  %87 = load i32, i32* %arrayidx97, align 4, !dbg !14542
  %and98 = and i32 %87, 2, !dbg !14543
  %tobool99 = icmp ne i32 %and98, 0, !dbg !14543
  br i1 %tobool99, label %if.then100, label %if.end113, !dbg !14544

if.then100:                                       ; preds = %if.end95
  %88 = load i32, i32* @debug, align 4, !dbg !14545
  %and101 = and i32 %88, 262144, !dbg !14548
  %tobool102 = icmp ne i32 %and101, 0, !dbg !14548
  br i1 %tobool102, label %if.then103, label %if.end107, !dbg !14549

if.then103:                                       ; preds = %if.then100
  %89 = load i32, i32* @HFC_cnt, align 4, !dbg !14550
  %add104 = add i32 %89, 1, !dbg !14551
  %90 = load i32, i32* %pt.addr, align 4, !dbg !14552
  %add105 = add i32 %90, 1, !dbg !14553
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.192, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_multi_port, i64 0, i64 0), i32 %add104, i32 %add105) #13, !dbg !14554
  br label %if.end107, !dbg !14554

if.end107:                                        ; preds = %if.then103, %if.then100
  %91 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14555
  %chan108 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %91, i32 0, i32 60, !dbg !14556
  %92 = load i32, i32* %i, align 4, !dbg !14557
  %add109 = add i32 %92, 2, !dbg !14558
  %idxprom110 = sext i32 %add109 to i64, !dbg !14555
  %arrayidx111 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan108, i64 0, i64 %idxprom110, !dbg !14555
  %cfg = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx111, i32 0, i32 10, !dbg !14559
  %call112 = call zeroext i1 @test_and_set_bit(i64 1, i64* %cfg) #12, !dbg !14560
  br label %if.end113, !dbg !14561

if.end113:                                        ; preds = %if.end107, %if.end95
  %93 = load i32, i32* @Port_cnt, align 4, !dbg !14562
  %idxprom114 = sext i32 %93 to i64, !dbg !14564
  %arrayidx115 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom114, !dbg !14564
  %94 = load i32, i32* %arrayidx115, align 4, !dbg !14564
  %and116 = and i32 %94, 4, !dbg !14565
  %tobool117 = icmp ne i32 %and116, 0, !dbg !14565
  br i1 %tobool117, label %if.then118, label %if.end132, !dbg !14566

if.then118:                                       ; preds = %if.end113
  %95 = load i32, i32* @debug, align 4, !dbg !14567
  %and119 = and i32 %95, 262144, !dbg !14570
  %tobool120 = icmp ne i32 %and119, 0, !dbg !14570
  br i1 %tobool120, label %if.then121, label %if.end125, !dbg !14571

if.then121:                                       ; preds = %if.then118
  %96 = load i32, i32* @HFC_cnt, align 4, !dbg !14572
  %add122 = add i32 %96, 1, !dbg !14573
  %97 = load i32, i32* %pt.addr, align 4, !dbg !14574
  %add123 = add i32 %97, 1, !dbg !14575
  %call124 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.193, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_multi_port, i64 0, i64 0), i32 %add122, i32 %add123) #13, !dbg !14576
  br label %if.end125, !dbg !14576

if.end125:                                        ; preds = %if.then121, %if.then118
  %98 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14577
  %chan126 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %98, i32 0, i32 60, !dbg !14578
  %99 = load i32, i32* %i, align 4, !dbg !14579
  %add127 = add i32 %99, 2, !dbg !14580
  %idxprom128 = sext i32 %add127 to i64, !dbg !14577
  %arrayidx129 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan126, i64 0, i64 %idxprom128, !dbg !14577
  %cfg130 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx129, i32 0, i32 10, !dbg !14581
  %call131 = call zeroext i1 @test_and_set_bit(i64 2, i64* %cfg130) #12, !dbg !14582
  br label %if.end132, !dbg !14583

if.end132:                                        ; preds = %if.end125, %if.end113
  %100 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14584
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %100, i32 0, i32 4, !dbg !14586
  %101 = load i32, i32* %ctype, align 8, !dbg !14586
  %cmp133 = icmp eq i32 %101, 5, !dbg !14587
  br i1 %cmp133, label %if.then135, label %if.else, !dbg !14588

if.then135:                                       ; preds = %if.end132
  %arraydecay136 = getelementptr inbounds [20 x i8], [20 x i8]* %name, i64 0, i64 0, !dbg !14589
  %102 = load i32, i32* @HFC_cnt, align 4, !dbg !14591
  %add137 = add i32 %102, 1, !dbg !14592
  %103 = load i32, i32* %pt.addr, align 4, !dbg !14593
  %add138 = add i32 %103, 1, !dbg !14594
  %call139 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay136, i64 19, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.194, i64 0, i64 0), i32 %add137, i32 %add138) #12, !dbg !14595
  %104 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14596
  %dev140 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %104, i32 0, i32 0, !dbg !14597
  %arraydecay141 = getelementptr inbounds [20 x i8], [20 x i8]* %name, i64 0, i64 0, !dbg !14598
  %call142 = call i32 @mISDN_register_device(%struct.mISDNdevice* %dev140, %struct.device* null, i8* %arraydecay141) #12, !dbg !14599
  store i32 %call142, i32* %ret, align 4, !dbg !14600
  br label %if.end152, !dbg !14601

if.else:                                          ; preds = %if.end132
  %arraydecay143 = getelementptr inbounds [20 x i8], [20 x i8]* %name, i64 0, i64 0, !dbg !14602
  %105 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14604
  %ctype144 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %105, i32 0, i32 4, !dbg !14605
  %106 = load i32, i32* %ctype144, align 8, !dbg !14605
  %107 = load i32, i32* @HFC_cnt, align 4, !dbg !14606
  %add145 = add i32 %107, 1, !dbg !14607
  %108 = load i32, i32* %pt.addr, align 4, !dbg !14608
  %add146 = add i32 %108, 1, !dbg !14609
  %call147 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay143, i64 19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i64 0, i64 0), i32 %106, i32 %add145, i32 %add146) #12, !dbg !14610
  %109 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14611
  %dev148 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %109, i32 0, i32 0, !dbg !14612
  %110 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14613
  %pci_dev = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %110, i32 0, i32 8, !dbg !14614
  %111 = load %struct.pci_dev*, %struct.pci_dev** %pci_dev, align 8, !dbg !14614
  %dev149 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %111, i32 0, i32 41, !dbg !14615
  %arraydecay150 = getelementptr inbounds [20 x i8], [20 x i8]* %name, i64 0, i64 0, !dbg !14616
  %call151 = call i32 @mISDN_register_device(%struct.mISDNdevice* %dev148, %struct.device* %dev149, i8* %arraydecay150) #12, !dbg !14617
  store i32 %call151, i32* %ret, align 4, !dbg !14618
  br label %if.end152

if.end152:                                        ; preds = %if.else, %if.then135
  %112 = load i32, i32* %ret, align 4, !dbg !14619
  %tobool153 = icmp ne i32 %112, 0, !dbg !14619
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !14621

if.then154:                                       ; preds = %if.end152
  br label %free_chan, !dbg !14622

if.end155:                                        ; preds = %if.end152
  %113 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14623
  %created = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %113, i32 0, i32 47, !dbg !14624
  %114 = load i32, i32* %pt.addr, align 4, !dbg !14625
  %idxprom156 = sext i32 %114 to i64, !dbg !14623
  %arrayidx157 = getelementptr [32 x i8], [32 x i8]* %created, i64 0, i64 %idxprom156, !dbg !14623
  store i8 1, i8* %arrayidx157, align 1, !dbg !14626
  %115 = load i32, i32* %ret, align 4, !dbg !14627
  store i32 %115, i32* %retval, align 4, !dbg !14628
  br label %return, !dbg !14628

free_chan:                                        ; preds = %if.then154, %if.then87, %if.then80, %if.then35, %if.then21
  call void @llvm.dbg.label(metadata !14629), !dbg !14630
  %116 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14631
  %117 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !14632
  call void @release_port(%struct.hfc_multi* %116, %struct.dchannel* %117) #12, !dbg !14633
  %118 = load i32, i32* %ret, align 4, !dbg !14634
  store i32 %118, i32* %retval, align 4, !dbg !14635
  br label %return, !dbg !14635

return:                                           ; preds = %free_chan, %if.end155, %if.then
  %119 = load i32, i32* %retval, align 4, !dbg !14636
  ret i32 %119, !dbg !14636
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !14637 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14638, metadata !DIExpression()), !dbg !14639
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !14640, metadata !DIExpression()), !dbg !14641
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14642
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14643
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14644
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !14644
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14645
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #12, !dbg !14646
  ret void, !dbg !14647
}

; Function Attrs: noredzone
declare dso_local %struct.mISDNclock* @mISDN_register_clock(i8*, i32, i32 (i8*, i32)*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clockctl(i8* %priv, i32 %enable) #2 !dbg !14648 {
entry:
  %priv.addr = alloca i8*, align 8
  %enable.addr = alloca i32, align 4
  %hc = alloca %struct.hfc_multi*, align 8
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !14649, metadata !DIExpression()), !dbg !14650
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !14651, metadata !DIExpression()), !dbg !14652
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !14653, metadata !DIExpression()), !dbg !14654
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !14655
  %1 = bitcast i8* %0 to %struct.hfc_multi*, !dbg !14655
  store %struct.hfc_multi* %1, %struct.hfc_multi** %hc, align 8, !dbg !14654
  %2 = load i32, i32* %enable.addr, align 4, !dbg !14656
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !14657
  %iclock_on = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 59, !dbg !14658
  store i32 %2, i32* %iclock_on, align 8, !dbg !14659
  ret i32 0, !dbg !14660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_card(%struct.hfc_multi* %hc) #2 !dbg !14661 {
entry:
  %lock.addr.i235 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i235, metadata !10052, metadata !DIExpression()), !dbg !14664
  %lock.addr.i230 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i230, metadata !10043, metadata !DIExpression()), !dbg !14673
  %flags.addr.i231 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i231, metadata !10050, metadata !DIExpression()), !dbg !14675
  %tmp.i232 = alloca i32, align 4
  %tmp8.i233 = alloca i32, align 4
  %lock.addr.i228 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i228, metadata !10052, metadata !DIExpression()), !dbg !14676
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !14683, metadata !DIExpression()), !dbg !14689
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !14694, metadata !DIExpression()), !dbg !14696
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !14697, metadata !DIExpression()), !dbg !14699
  %tmp.i227 = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %lock.addr.i222 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i222, metadata !10043, metadata !DIExpression()), !dbg !14700
  %flags.addr.i223 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i223, metadata !10050, metadata !DIExpression()), !dbg !14702
  %tmp.i224 = alloca i32, align 4
  %tmp8.i225 = alloca i32, align 4
  %lock.addr.i220 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i220, metadata !10052, metadata !DIExpression()), !dbg !14703
  %lock.addr.i215 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i215, metadata !10043, metadata !DIExpression()), !dbg !14710
  %flags.addr.i216 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i216, metadata !10050, metadata !DIExpression()), !dbg !14714
  %tmp.i217 = alloca i32, align 4
  %tmp8.i218 = alloca i32, align 4
  %lock.addr.i213 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i213, metadata !10052, metadata !DIExpression()), !dbg !14715
  %lock.addr.i208 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i208, metadata !10043, metadata !DIExpression()), !dbg !14722
  %flags.addr.i209 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i209, metadata !10050, metadata !DIExpression()), !dbg !14724
  %tmp.i210 = alloca i32, align 4
  %tmp8.i211 = alloca i32, align 4
  %lock.addr.i206 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i206, metadata !10043, metadata !DIExpression()), !dbg !14725
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !14727
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !14728
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %err = alloca i32, align 4
  %flags = alloca i64, align 8
  %plx_acc = alloca i8*, align 8
  %plx_flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy32 = alloca i64, align 8
  %__dummy233 = alloca i64, align 8
  %tmp36 = alloca i32, align 4
  %__dummy40 = alloca i64, align 8
  %__dummy241 = alloca i64, align 8
  %tmp44 = alloca i32, align 4
  %__dummy69 = alloca i64, align 8
  %__dummy270 = alloca i64, align 8
  %tmp73 = alloca i32, align 4
  %__dummy77 = alloca i64, align 8
  %__dummy278 = alloca i64, align 8
  %tmp81 = alloca i32, align 4
  %__dummy107 = alloca i64, align 8
  %__dummy2108 = alloca i64, align 8
  %tmp111 = alloca i32, align 4
  %__dummy115 = alloca i64, align 8
  %__dummy2116 = alloca i64, align 8
  %tmp119 = alloca i32, align 4
  %__dummy161 = alloca i64, align 8
  %__dummy2162 = alloca i64, align 8
  %tmp165 = alloca i32, align 4
  %__dummy169 = alloca i64, align 8
  %__dummy2170 = alloca i64, align 8
  %tmp173 = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !14735, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14737, metadata !DIExpression()), !dbg !14738
  store i32 -5, i32* %err, align 4, !dbg !14738
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14739, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.declare(metadata i8** %plx_acc, metadata !14741, metadata !DIExpression()), !dbg !14742
  call void @llvm.dbg.declare(metadata i64* %plx_flags, metadata !14743, metadata !DIExpression()), !dbg !14744
  %0 = load i32, i32* @debug, align 4, !dbg !14745
  %and = and i32 %0, 262144, !dbg !14747
  %tobool = icmp ne i32 %and, 0, !dbg !14747
  br i1 %tobool, label %if.then, label %if.end, !dbg !14748

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_card, i64 0, i64 0)) #13, !dbg !14749
  br label %if.end, !dbg !14749

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !14750

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !14751

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14752, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14755, metadata !DIExpression()), !dbg !14754
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14754
  %conv = zext i1 %cmp to i32, !dbg !14754
  store i32 1, i32* %tmp, align 4, !dbg !14754
  %1 = load i32, i32* %tmp, align 4, !dbg !14754
  br label %do.body2, !dbg !14756

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14757

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14758

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14760, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14764, metadata !DIExpression()), !dbg !14763
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14763
  %conv8 = zext i1 %cmp7 to i32, !dbg !14763
  store i32 1, i32* %tmp9, align 4, !dbg !14763
  %2 = load i32, i32* %tmp9, align 4, !dbg !14763
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !14765
  store i64 %call10, i64* %flags, align 8, !dbg !14765
  br label %do.end, !dbg !14765

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !14758

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !14757

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14766, !srcloc !14767
  br label %do.body13, !dbg !14766

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14768
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 57, !dbg !14768
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14769
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !14770
  %rlock.i = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !14770
  br label %do.end15, !dbg !14768

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !14766

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14757

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14756

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14751

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14771
  %hw = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 30, !dbg !14772
  %r_irq_ctrl = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw, i32 0, i32 1, !dbg !14773
  store i8 1, i8* %r_irq_ctrl, align 1, !dbg !14774
  %7 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14775
  call void @disable_hwirq(%struct.hfc_multi* %7) #12, !dbg !14776
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14777
  %lock20 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 57, !dbg !14778
  %9 = load i64, i64* %flags, align 8, !dbg !14779
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i208, align 8
  store i64 %9, i64* %flags.addr.i209, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !14780
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !14780
  store i32 1, i32* %tmp.i210, align 4, !dbg !14780
  %10 = load i32, i32* %tmp.i210, align 4, !dbg !14780
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !14781
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !14781
  store i32 1, i32* %tmp8.i211, align 4, !dbg !14781
  %11 = load i32, i32* %tmp8.i211, align 4, !dbg !14781
  %12 = load i64, i64* %flags.addr.i209, align 8, !dbg !14782
  call void @arch_local_irq_restore(i64 %12) #14, !dbg !14782
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14783, !srcloc !10125
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i208, align 8, !dbg !14784
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !14784
  %rlock.i212 = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !14784
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14785
  %irq = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 6, !dbg !14787
  %16 = load i32, i32* %irq, align 8, !dbg !14787
  %17 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14788
  %18 = bitcast %struct.hfc_multi* %17 to i8*, !dbg !14788
  %call21 = call i32 @request_irq(i32 %16, i32 (i32, i8*)* @hfcmulti_interrupt, i64 128, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.196, i64 0, i64 0), i8* %18) #12, !dbg !14789
  %tobool22 = icmp ne i32 %call21, 0, !dbg !14789
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !14790

if.then23:                                        ; preds = %do.end19
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14791
  %irq24 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %19, i32 0, i32 6, !dbg !14793
  %20 = load i32, i32* %irq24, align 8, !dbg !14793
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.197, i64 0, i64 0), i32 %20) #13, !dbg !14794
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14795
  %irq26 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 6, !dbg !14796
  store i32 0, i32* %irq26, align 8, !dbg !14797
  store i32 -5, i32* %retval, align 4, !dbg !14798
  br label %return, !dbg !14798

if.end27:                                         ; preds = %do.end19
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14799
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 31, !dbg !14800
  %call28 = call zeroext i1 @test_bit(i64 14, i64* %chip) #12, !dbg !14801
  br i1 %call28, label %if.then29, label %if.end56, !dbg !14802

if.then29:                                        ; preds = %if.end27
  br label %do.body30, !dbg !14803

do.body30:                                        ; preds = %if.then29
  br label %do.body31, !dbg !14804

do.body31:                                        ; preds = %do.body30
  call void @llvm.dbg.declare(metadata i64* %__dummy32, metadata !14805, metadata !DIExpression()), !dbg !14807
  call void @llvm.dbg.declare(metadata i64* %__dummy233, metadata !14808, metadata !DIExpression()), !dbg !14807
  %cmp34 = icmp eq i64* %__dummy32, %__dummy233, !dbg !14807
  %conv35 = zext i1 %cmp34 to i32, !dbg !14807
  store i32 1, i32* %tmp36, align 4, !dbg !14807
  %23 = load i32, i32* %tmp36, align 4, !dbg !14807
  br label %do.body37, !dbg !14809

do.body37:                                        ; preds = %do.body31
  br label %do.body38, !dbg !14810

do.body38:                                        ; preds = %do.body37
  br label %do.body39, !dbg !14811

do.body39:                                        ; preds = %do.body38
  call void @llvm.dbg.declare(metadata i64* %__dummy40, metadata !14813, metadata !DIExpression()), !dbg !14816
  call void @llvm.dbg.declare(metadata i64* %__dummy241, metadata !14817, metadata !DIExpression()), !dbg !14816
  %cmp42 = icmp eq i64* %__dummy40, %__dummy241, !dbg !14816
  %conv43 = zext i1 %cmp42 to i32, !dbg !14816
  store i32 1, i32* %tmp44, align 4, !dbg !14816
  %24 = load i32, i32* %tmp44, align 4, !dbg !14816
  %call45 = call i64 @arch_local_irq_save() #12, !dbg !14818
  store i64 %call45, i64* %plx_flags, align 8, !dbg !14818
  br label %do.end46, !dbg !14818

do.end46:                                         ; preds = %do.body39
  br label %do.end47, !dbg !14811

do.end47:                                         ; preds = %do.end46
  br label %do.body48, !dbg !14810

do.body48:                                        ; preds = %do.end47
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14819, !srcloc !14820
  br label %do.body49, !dbg !14819

do.body49:                                        ; preds = %do.body48
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i213, align 8
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i213, align 8, !dbg !14821
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !14822
  %rlock.i214 = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !14822
  br label %do.end51, !dbg !14823

do.end51:                                         ; preds = %do.body49
  br label %do.end52, !dbg !14819

do.end52:                                         ; preds = %do.end51
  br label %do.end53, !dbg !14810

do.end53:                                         ; preds = %do.end52
  br label %do.end54, !dbg !14809

do.end54:                                         ; preds = %do.end53
  br label %do.end55, !dbg !14804

do.end55:                                         ; preds = %do.end54
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14824
  %plx_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %27, i32 0, i32 23, !dbg !14825
  %28 = load i8*, i8** %plx_membase, align 8, !dbg !14825
  %add.ptr = getelementptr i8, i8* %28, i64 76, !dbg !14826
  store i8* %add.ptr, i8** %plx_acc, align 8, !dbg !14827
  %29 = load i8*, i8** %plx_acc, align 8, !dbg !14828
  call void @writew(i16 zeroext 65, i8* %29) #12, !dbg !14829
  %30 = load i64, i64* %plx_flags, align 8, !dbg !14830
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i215, align 8
  store i64 %30, i64* %flags.addr.i216, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !14831
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !14831
  store i32 1, i32* %tmp.i217, align 4, !dbg !14831
  %31 = load i32, i32* %tmp.i217, align 4, !dbg !14831
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !14832
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !14832
  store i32 1, i32* %tmp8.i218, align 4, !dbg !14832
  %32 = load i32, i32* %tmp8.i218, align 4, !dbg !14832
  %33 = load i64, i64* %flags.addr.i216, align 8, !dbg !14833
  call void @arch_local_irq_restore(i64 %33) #14, !dbg !14833
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14834, !srcloc !10125
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i215, align 8, !dbg !14835
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !14835
  %rlock.i219 = bitcast %union.anon.1* %35 to %struct.raw_spinlock*, !dbg !14835
  br label %if.end56, !dbg !14836

if.end56:                                         ; preds = %do.end55, %if.end27
  %36 = load i32, i32* @debug, align 4, !dbg !14837
  %and57 = and i32 %36, 262144, !dbg !14839
  %tobool58 = icmp ne i32 %and57, 0, !dbg !14839
  br i1 %tobool58, label %if.then59, label %if.end62, !dbg !14840

if.then59:                                        ; preds = %if.end56
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14841
  %irq60 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %37, i32 0, i32 6, !dbg !14842
  %38 = load i32, i32* %irq60, align 8, !dbg !14842
  %39 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14843
  %irqcnt = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %39, i32 0, i32 7, !dbg !14844
  %40 = load i32, i32* %irqcnt, align 4, !dbg !14844
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.198, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_card, i64 0, i64 0), i32 %38, i32 %40) #13, !dbg !14845
  br label %if.end62, !dbg !14845

if.end62:                                         ; preds = %if.then59, %if.end56
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14846
  %call63 = call i32 @init_chip(%struct.hfc_multi* %41) #12, !dbg !14847
  store i32 %call63, i32* %err, align 4, !dbg !14848
  %42 = load i32, i32* %err, align 4, !dbg !14849
  %tobool64 = icmp ne i32 %42, 0, !dbg !14849
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !14851

if.then65:                                        ; preds = %if.end62
  br label %error, !dbg !14852

if.end66:                                         ; preds = %if.end62
  br label %do.body67, !dbg !14853

do.body67:                                        ; preds = %if.end66
  br label %do.body68, !dbg !14854

do.body68:                                        ; preds = %do.body67
  call void @llvm.dbg.declare(metadata i64* %__dummy69, metadata !14855, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.declare(metadata i64* %__dummy270, metadata !14858, metadata !DIExpression()), !dbg !14857
  %cmp71 = icmp eq i64* %__dummy69, %__dummy270, !dbg !14857
  %conv72 = zext i1 %cmp71 to i32, !dbg !14857
  store i32 1, i32* %tmp73, align 4, !dbg !14857
  %43 = load i32, i32* %tmp73, align 4, !dbg !14857
  br label %do.body74, !dbg !14859

do.body74:                                        ; preds = %do.body68
  br label %do.body75, !dbg !14860

do.body75:                                        ; preds = %do.body74
  br label %do.body76, !dbg !14861

do.body76:                                        ; preds = %do.body75
  call void @llvm.dbg.declare(metadata i64* %__dummy77, metadata !14863, metadata !DIExpression()), !dbg !14866
  call void @llvm.dbg.declare(metadata i64* %__dummy278, metadata !14867, metadata !DIExpression()), !dbg !14866
  %cmp79 = icmp eq i64* %__dummy77, %__dummy278, !dbg !14866
  %conv80 = zext i1 %cmp79 to i32, !dbg !14866
  store i32 1, i32* %tmp81, align 4, !dbg !14866
  %44 = load i32, i32* %tmp81, align 4, !dbg !14866
  %call82 = call i64 @arch_local_irq_save() #12, !dbg !14868
  store i64 %call82, i64* %flags, align 8, !dbg !14868
  br label %do.end83, !dbg !14868

do.end83:                                         ; preds = %do.body76
  br label %do.end84, !dbg !14861

do.end84:                                         ; preds = %do.end83
  br label %do.body85, !dbg !14860

do.body85:                                        ; preds = %do.end84
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14869, !srcloc !14870
  br label %do.body86, !dbg !14869

do.body86:                                        ; preds = %do.body85
  %45 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14871
  %lock87 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %45, i32 0, i32 57, !dbg !14871
  store %struct.spinlock* %lock87, %struct.spinlock** %lock.addr.i220, align 8
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i220, align 8, !dbg !14872
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !14873
  %rlock.i221 = bitcast %union.anon.1* %47 to %struct.raw_spinlock*, !dbg !14873
  br label %do.end89, !dbg !14871

do.end89:                                         ; preds = %do.body86
  br label %do.end90, !dbg !14869

do.end90:                                         ; preds = %do.end89
  br label %do.end91, !dbg !14860

do.end91:                                         ; preds = %do.end90
  br label %do.end92, !dbg !14859

do.end92:                                         ; preds = %do.end91
  br label %do.end93, !dbg !14854

do.end93:                                         ; preds = %do.end92
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14874
  call void @enable_hwirq(%struct.hfc_multi* %48) #12, !dbg !14875
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14876
  %lock94 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 57, !dbg !14877
  %50 = load i64, i64* %flags, align 8, !dbg !14878
  store %struct.spinlock* %lock94, %struct.spinlock** %lock.addr.i222, align 8
  store i64 %50, i64* %flags.addr.i223, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !14879
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !14879
  store i32 1, i32* %tmp.i224, align 4, !dbg !14879
  %51 = load i32, i32* %tmp.i224, align 4, !dbg !14879
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !14880
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !14880
  store i32 1, i32* %tmp8.i225, align 4, !dbg !14880
  %52 = load i32, i32* %tmp8.i225, align 4, !dbg !14880
  %53 = load i64, i64* %flags.addr.i223, align 8, !dbg !14881
  call void @arch_local_irq_restore(i64 %53) #14, !dbg !14881
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14882, !srcloc !10125
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i222, align 8, !dbg !14883
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !14883
  %rlock.i226 = bitcast %union.anon.1* %55 to %struct.raw_spinlock*, !dbg !14883
  br label %do.body95, !dbg !14884

do.body95:                                        ; preds = %do.end93
  br label %do.body96, !dbg !14885

do.body96:                                        ; preds = %do.body95
  br label %do.body97, !dbg !14886

do.body97:                                        ; preds = %do.body96
  br label %do.end98, !dbg !14887

do.end98:                                         ; preds = %do.body97
  br label %do.body99, !dbg !14886

do.body99:                                        ; preds = %do.end98
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !14696
  %56 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !14696
  %57 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #11, !dbg !14699, !srcloc !14889
  store i64 %57, i64* %pfo_val__.i, align 8, !dbg !14699
  %58 = load i64, i64* %pfo_val__.i, align 8, !dbg !14699
  %59 = inttoptr i64 %58 to %struct.task_struct*, !dbg !14699
  store %struct.task_struct* %59, %struct.task_struct** %tmp.i227, align 8, !dbg !14699
  %60 = load %struct.task_struct*, %struct.task_struct** %tmp.i227, align 8, !dbg !14699
  store %struct.task_struct* %60, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !14689
  %61 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !14689
  store %struct.task_struct* %61, %struct.task_struct** %tmp1.i, align 8, !dbg !14689
  %62 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !14689
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %62, i32 0, i32 1, !dbg !14890
  store volatile i64 2, i64* %state, align 16, !dbg !14890
  br label %do.end101, !dbg !14890

do.end101:                                        ; preds = %do.body99
  br label %do.end102, !dbg !14886

do.end102:                                        ; preds = %do.end101
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14885, !srcloc !14891
  br label %do.end103, !dbg !14885

do.end103:                                        ; preds = %do.end102
  %call104 = call i64 @schedule_timeout(i64 25) #12, !dbg !14892
  br label %do.body105, !dbg !14893

do.body105:                                       ; preds = %do.end103
  br label %do.body106, !dbg !14894

do.body106:                                       ; preds = %do.body105
  call void @llvm.dbg.declare(metadata i64* %__dummy107, metadata !14895, metadata !DIExpression()), !dbg !14897
  call void @llvm.dbg.declare(metadata i64* %__dummy2108, metadata !14898, metadata !DIExpression()), !dbg !14897
  %cmp109 = icmp eq i64* %__dummy107, %__dummy2108, !dbg !14897
  %conv110 = zext i1 %cmp109 to i32, !dbg !14897
  store i32 1, i32* %tmp111, align 4, !dbg !14897
  %63 = load i32, i32* %tmp111, align 4, !dbg !14897
  br label %do.body112, !dbg !14899

do.body112:                                       ; preds = %do.body106
  br label %do.body113, !dbg !14900

do.body113:                                       ; preds = %do.body112
  br label %do.body114, !dbg !14901

do.body114:                                       ; preds = %do.body113
  call void @llvm.dbg.declare(metadata i64* %__dummy115, metadata !14903, metadata !DIExpression()), !dbg !14906
  call void @llvm.dbg.declare(metadata i64* %__dummy2116, metadata !14907, metadata !DIExpression()), !dbg !14906
  %cmp117 = icmp eq i64* %__dummy115, %__dummy2116, !dbg !14906
  %conv118 = zext i1 %cmp117 to i32, !dbg !14906
  store i32 1, i32* %tmp119, align 4, !dbg !14906
  %64 = load i32, i32* %tmp119, align 4, !dbg !14906
  %call120 = call i64 @arch_local_irq_save() #12, !dbg !14908
  store i64 %call120, i64* %flags, align 8, !dbg !14908
  br label %do.end121, !dbg !14908

do.end121:                                        ; preds = %do.body114
  br label %do.end122, !dbg !14901

do.end122:                                        ; preds = %do.end121
  br label %do.body123, !dbg !14900

do.body123:                                       ; preds = %do.end122
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14909, !srcloc !14910
  br label %do.body124, !dbg !14909

do.body124:                                       ; preds = %do.body123
  %65 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14911
  %lock125 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %65, i32 0, i32 57, !dbg !14911
  store %struct.spinlock* %lock125, %struct.spinlock** %lock.addr.i228, align 8
  %66 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i228, align 8, !dbg !14912
  %67 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %66, i32 0, i32 0, !dbg !14913
  %rlock.i229 = bitcast %union.anon.1* %67 to %struct.raw_spinlock*, !dbg !14913
  br label %do.end127, !dbg !14911

do.end127:                                        ; preds = %do.body124
  br label %do.end128, !dbg !14909

do.end128:                                        ; preds = %do.end127
  br label %do.end129, !dbg !14900

do.end129:                                        ; preds = %do.end128
  br label %do.end130, !dbg !14899

do.end130:                                        ; preds = %do.end129
  br label %do.end131, !dbg !14894

do.end131:                                        ; preds = %do.end130
  %68 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14914
  call void @disable_hwirq(%struct.hfc_multi* %68) #12, !dbg !14915
  %69 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14916
  %lock132 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %69, i32 0, i32 57, !dbg !14917
  %70 = load i64, i64* %flags, align 8, !dbg !14918
  store %struct.spinlock* %lock132, %struct.spinlock** %lock.addr.i230, align 8
  store i64 %70, i64* %flags.addr.i231, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !14919
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !14919
  store i32 1, i32* %tmp.i232, align 4, !dbg !14919
  %71 = load i32, i32* %tmp.i232, align 4, !dbg !14919
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !14920
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !14920
  store i32 1, i32* %tmp8.i233, align 4, !dbg !14920
  %72 = load i32, i32* %tmp8.i233, align 4, !dbg !14920
  %73 = load i64, i64* %flags.addr.i231, align 8, !dbg !14921
  call void @arch_local_irq_restore(i64 %73) #14, !dbg !14921
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14922, !srcloc !10125
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i230, align 8, !dbg !14923
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !14923
  %rlock.i234 = bitcast %union.anon.1* %75 to %struct.raw_spinlock*, !dbg !14923
  %76 = load i32, i32* @debug, align 4, !dbg !14924
  %and133 = and i32 %76, 262144, !dbg !14926
  %tobool134 = icmp ne i32 %and133, 0, !dbg !14926
  br i1 %tobool134, label %if.then135, label %if.end139, !dbg !14927

if.then135:                                       ; preds = %do.end131
  %77 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14928
  %irq136 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %77, i32 0, i32 6, !dbg !14929
  %78 = load i32, i32* %irq136, align 8, !dbg !14929
  %79 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14930
  %irqcnt137 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %79, i32 0, i32 7, !dbg !14931
  %80 = load i32, i32* %irqcnt137, align 4, !dbg !14931
  %call138 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.198, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_card, i64 0, i64 0), i32 %78, i32 %80) #13, !dbg !14932
  br label %if.end139, !dbg !14932

if.end139:                                        ; preds = %if.then135, %do.end131
  %81 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14933
  %irqcnt140 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %81, i32 0, i32 7, !dbg !14935
  %82 = load i32, i32* %irqcnt140, align 4, !dbg !14935
  %tobool141 = icmp ne i32 %82, 0, !dbg !14933
  br i1 %tobool141, label %if.then142, label %if.end148, !dbg !14936

if.then142:                                       ; preds = %if.end139
  %83 = load i32, i32* @debug, align 4, !dbg !14937
  %and143 = and i32 %83, 262144, !dbg !14940
  %tobool144 = icmp ne i32 %and143, 0, !dbg !14940
  br i1 %tobool144, label %if.then145, label %if.end147, !dbg !14941

if.then145:                                       ; preds = %if.then142
  %call146 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_card, i64 0, i64 0)) #13, !dbg !14942
  br label %if.end147, !dbg !14942

if.end147:                                        ; preds = %if.then145, %if.then142
  store i32 0, i32* %retval, align 4, !dbg !14943
  br label %return, !dbg !14943

if.end148:                                        ; preds = %if.end139
  %84 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14944
  %chip149 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %84, i32 0, i32 31, !dbg !14946
  %call150 = call zeroext i1 @test_bit(i64 3, i64* %chip149) #12, !dbg !14947
  br i1 %call150, label %if.then151, label %if.end153, !dbg !14948

if.then151:                                       ; preds = %if.end148
  %call152 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.199, i64 0, i64 0)) #13, !dbg !14949
  store i32 0, i32* %retval, align 4, !dbg !14951
  br label %return, !dbg !14951

if.end153:                                        ; preds = %if.end148
  %85 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14952
  %irq154 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %85, i32 0, i32 6, !dbg !14953
  %86 = load i32, i32* %irq154, align 8, !dbg !14953
  %call155 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.200, i64 0, i64 0), i32 %86) #13, !dbg !14954
  store i32 -5, i32* %err, align 4, !dbg !14955
  br label %error, !dbg !14956

error:                                            ; preds = %if.end153, %if.then65
  call void @llvm.dbg.label(metadata !14957), !dbg !14958
  %87 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14959
  %chip156 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %87, i32 0, i32 31, !dbg !14960
  %call157 = call zeroext i1 @test_bit(i64 14, i64* %chip156) #12, !dbg !14961
  br i1 %call157, label %if.then158, label %if.end187, !dbg !14962

if.then158:                                       ; preds = %error
  br label %do.body159, !dbg !14963

do.body159:                                       ; preds = %if.then158
  br label %do.body160, !dbg !14964

do.body160:                                       ; preds = %do.body159
  call void @llvm.dbg.declare(metadata i64* %__dummy161, metadata !14965, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.declare(metadata i64* %__dummy2162, metadata !14968, metadata !DIExpression()), !dbg !14967
  %cmp163 = icmp eq i64* %__dummy161, %__dummy2162, !dbg !14967
  %conv164 = zext i1 %cmp163 to i32, !dbg !14967
  store i32 1, i32* %tmp165, align 4, !dbg !14967
  %88 = load i32, i32* %tmp165, align 4, !dbg !14967
  br label %do.body166, !dbg !14969

do.body166:                                       ; preds = %do.body160
  br label %do.body167, !dbg !14970

do.body167:                                       ; preds = %do.body166
  br label %do.body168, !dbg !14971

do.body168:                                       ; preds = %do.body167
  call void @llvm.dbg.declare(metadata i64* %__dummy169, metadata !14973, metadata !DIExpression()), !dbg !14976
  call void @llvm.dbg.declare(metadata i64* %__dummy2170, metadata !14977, metadata !DIExpression()), !dbg !14976
  %cmp171 = icmp eq i64* %__dummy169, %__dummy2170, !dbg !14976
  %conv172 = zext i1 %cmp171 to i32, !dbg !14976
  store i32 1, i32* %tmp173, align 4, !dbg !14976
  %89 = load i32, i32* %tmp173, align 4, !dbg !14976
  %call174 = call i64 @arch_local_irq_save() #12, !dbg !14978
  store i64 %call174, i64* %plx_flags, align 8, !dbg !14978
  br label %do.end175, !dbg !14978

do.end175:                                        ; preds = %do.body168
  br label %do.end176, !dbg !14971

do.end176:                                        ; preds = %do.end175
  br label %do.body177, !dbg !14970

do.body177:                                       ; preds = %do.end176
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14979, !srcloc !14980
  br label %do.body178, !dbg !14979

do.body178:                                       ; preds = %do.body177
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i235, align 8
  %90 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i235, align 8, !dbg !14981
  %91 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %90, i32 0, i32 0, !dbg !14982
  %rlock.i236 = bitcast %union.anon.1* %91 to %struct.raw_spinlock*, !dbg !14982
  br label %do.end180, !dbg !14983

do.end180:                                        ; preds = %do.body178
  br label %do.end181, !dbg !14979

do.end181:                                        ; preds = %do.end180
  br label %do.end182, !dbg !14970

do.end182:                                        ; preds = %do.end181
  br label %do.end183, !dbg !14969

do.end183:                                        ; preds = %do.end182
  br label %do.end184, !dbg !14964

do.end184:                                        ; preds = %do.end183
  %92 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !14984
  %plx_membase185 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %92, i32 0, i32 23, !dbg !14985
  %93 = load i8*, i8** %plx_membase185, align 8, !dbg !14985
  %add.ptr186 = getelementptr i8, i8* %93, i64 76, !dbg !14986
  store i8* %add.ptr186, i8** %plx_acc, align 8, !dbg !14987
  %94 = load i8*, i8** %plx_acc, align 8, !dbg !14988
  call void @writew(i16 zeroext 0, i8* %94) #12, !dbg !14989
  %95 = load i64, i64* %plx_flags, align 8, !dbg !14990
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i206, align 8
  store i64 %95, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !14991
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !14991
  store i32 1, i32* %tmp.i, align 4, !dbg !14991
  %96 = load i32, i32* %tmp.i, align 4, !dbg !14991
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !14992
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !14992
  store i32 1, i32* %tmp8.i, align 4, !dbg !14992
  %97 = load i32, i32* %tmp8.i, align 4, !dbg !14992
  %98 = load i64, i64* %flags.addr.i, align 8, !dbg !14993
  call void @arch_local_irq_restore(i64 %98) #14, !dbg !14993
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !14994, !srcloc !10125
  %99 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i206, align 8, !dbg !14995
  %100 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %99, i32 0, i32 0, !dbg !14995
  %rlock.i207 = bitcast %union.anon.1* %100 to %struct.raw_spinlock*, !dbg !14995
  br label %if.end187, !dbg !14996

if.end187:                                        ; preds = %do.end184, %error
  %101 = load i32, i32* @debug, align 4, !dbg !14997
  %and188 = and i32 %101, 262144, !dbg !14999
  %tobool189 = icmp ne i32 %and188, 0, !dbg !14999
  br i1 %tobool189, label %if.then190, label %if.end193, !dbg !15000

if.then190:                                       ; preds = %if.end187
  %102 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15001
  %irq191 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %102, i32 0, i32 6, !dbg !15002
  %103 = load i32, i32* %irq191, align 8, !dbg !15002
  %call192 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_card, i64 0, i64 0), i32 %103) #13, !dbg !15003
  br label %if.end193, !dbg !15003

if.end193:                                        ; preds = %if.then190, %if.end187
  %104 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15004
  %irq194 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %104, i32 0, i32 6, !dbg !15006
  %105 = load i32, i32* %irq194, align 8, !dbg !15006
  %tobool195 = icmp ne i32 %105, 0, !dbg !15004
  br i1 %tobool195, label %if.then196, label %if.end200, !dbg !15007

if.then196:                                       ; preds = %if.end193
  %106 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15008
  %irq197 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %106, i32 0, i32 6, !dbg !15010
  %107 = load i32, i32* %irq197, align 8, !dbg !15010
  %108 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15011
  %109 = bitcast %struct.hfc_multi* %108 to i8*, !dbg !15011
  %call198 = call i8* @free_irq(i32 %107, i8* %109) #12, !dbg !15012
  %110 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15013
  %irq199 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %110, i32 0, i32 6, !dbg !15014
  store i32 0, i32* %irq199, align 8, !dbg !15015
  br label %if.end200, !dbg !15016

if.end200:                                        ; preds = %if.then196, %if.end193
  %111 = load i32, i32* @debug, align 4, !dbg !15017
  %and201 = and i32 %111, 262144, !dbg !15019
  %tobool202 = icmp ne i32 %and201, 0, !dbg !15019
  br i1 %tobool202, label %if.then203, label %if.end205, !dbg !15020

if.then203:                                       ; preds = %if.end200
  %112 = load i32, i32* %err, align 4, !dbg !15021
  %call204 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.202, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_card, i64 0, i64 0), i32 %112) #13, !dbg !15022
  br label %if.end205, !dbg !15022

if.end205:                                        ; preds = %if.then203, %if.end200
  %113 = load i32, i32* %err, align 4, !dbg !15023
  store i32 %113, i32* %retval, align 4, !dbg !15024
  br label %return, !dbg !15024

return:                                           ; preds = %if.end205, %if.then151, %if.end147, %if.then23
  %114 = load i32, i32* %retval, align 4, !dbg !15025
  ret i32 %114, !dbg !15025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_hwirq(%struct.hfc_multi* %hc) #2 !dbg !15026 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15027, metadata !DIExpression()), !dbg !15028
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15029
  %hw = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 30, !dbg !15030
  %r_irq_ctrl = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw, i32 0, i32 1, !dbg !15031
  %1 = load i8, i8* %r_irq_ctrl, align 1, !dbg !15032
  %conv = zext i8 %1 to i32, !dbg !15032
  %or = or i32 %conv, 8, !dbg !15032
  %conv1 = trunc i32 %or to i8, !dbg !15032
  store i8 %conv1, i8* %r_irq_ctrl, align 1, !dbg !15032
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15033
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %2, i32 0, i32 10, !dbg !15033
  %3 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !15033
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15033
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15033
  %hw2 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 30, !dbg !15033
  %r_irq_ctrl3 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw2, i32 0, i32 1, !dbg !15033
  %6 = load i8, i8* %r_irq_ctrl3, align 1, !dbg !15033
  call void %3(%struct.hfc_multi* %4, i8 zeroext 19, i8 zeroext %6) #12, !dbg !15033
  ret void, !dbg !15034
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !15035 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !15039, metadata !DIExpression()), !dbg !15043
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !15045, metadata !DIExpression()), !dbg !15046
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15047, metadata !DIExpression()), !dbg !15048
  %0 = load i64, i64* %size.addr, align 8, !dbg !15049
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !15051
  br i1 %1, label %if.then, label %if.end447, !dbg !15052

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !15053
  %tobool = icmp ne i64 %2, 0, !dbg !15053
  br i1 %tobool, label %if.end, label %if.then1, !dbg !15056

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !15057
  br label %return, !dbg !15057

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !15058
  %cmp = icmp ult i64 %3, 4096, !dbg !15060
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !15061

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15062
  br label %return, !dbg !15062

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub = sub i64 %4, 1, !dbg !15063
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !15063
  br i1 %5, label %cond.true, label %cond.false442, !dbg !15063

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub4 = sub i64 %6, 1, !dbg !15063
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !15063
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !15063

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub6 = sub i64 %8, 1, !dbg !15063
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !15063
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !15063

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !15063

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub9 = sub i64 %9, 1, !dbg !15063
  %and = and i64 %sub9, -9223372036854775808, !dbg !15063
  %tobool10 = icmp ne i64 %and, 0, !dbg !15063
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !15063

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !15063

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub13 = sub i64 %10, 1, !dbg !15063
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !15063
  %tobool15 = icmp ne i64 %and14, 0, !dbg !15063
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !15063

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !15063

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub18 = sub i64 %11, 1, !dbg !15063
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !15063
  %tobool20 = icmp ne i64 %and19, 0, !dbg !15063
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !15063

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !15063

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub23 = sub i64 %12, 1, !dbg !15063
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !15063
  %tobool25 = icmp ne i64 %and24, 0, !dbg !15063
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !15063

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !15063

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub28 = sub i64 %13, 1, !dbg !15063
  %and29 = and i64 %sub28, 576460752303423488, !dbg !15063
  %tobool30 = icmp ne i64 %and29, 0, !dbg !15063
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !15063

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !15063

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub33 = sub i64 %14, 1, !dbg !15063
  %and34 = and i64 %sub33, 288230376151711744, !dbg !15063
  %tobool35 = icmp ne i64 %and34, 0, !dbg !15063
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !15063

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !15063

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub38 = sub i64 %15, 1, !dbg !15063
  %and39 = and i64 %sub38, 144115188075855872, !dbg !15063
  %tobool40 = icmp ne i64 %and39, 0, !dbg !15063
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !15063

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !15063

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub43 = sub i64 %16, 1, !dbg !15063
  %and44 = and i64 %sub43, 72057594037927936, !dbg !15063
  %tobool45 = icmp ne i64 %and44, 0, !dbg !15063
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !15063

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !15063

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub48 = sub i64 %17, 1, !dbg !15063
  %and49 = and i64 %sub48, 36028797018963968, !dbg !15063
  %tobool50 = icmp ne i64 %and49, 0, !dbg !15063
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !15063

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !15063

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub53 = sub i64 %18, 1, !dbg !15063
  %and54 = and i64 %sub53, 18014398509481984, !dbg !15063
  %tobool55 = icmp ne i64 %and54, 0, !dbg !15063
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !15063

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !15063

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub58 = sub i64 %19, 1, !dbg !15063
  %and59 = and i64 %sub58, 9007199254740992, !dbg !15063
  %tobool60 = icmp ne i64 %and59, 0, !dbg !15063
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !15063

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !15063

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub63 = sub i64 %20, 1, !dbg !15063
  %and64 = and i64 %sub63, 4503599627370496, !dbg !15063
  %tobool65 = icmp ne i64 %and64, 0, !dbg !15063
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !15063

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !15063

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub68 = sub i64 %21, 1, !dbg !15063
  %and69 = and i64 %sub68, 2251799813685248, !dbg !15063
  %tobool70 = icmp ne i64 %and69, 0, !dbg !15063
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !15063

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !15063

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub73 = sub i64 %22, 1, !dbg !15063
  %and74 = and i64 %sub73, 1125899906842624, !dbg !15063
  %tobool75 = icmp ne i64 %and74, 0, !dbg !15063
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !15063

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !15063

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub78 = sub i64 %23, 1, !dbg !15063
  %and79 = and i64 %sub78, 562949953421312, !dbg !15063
  %tobool80 = icmp ne i64 %and79, 0, !dbg !15063
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !15063

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !15063

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub83 = sub i64 %24, 1, !dbg !15063
  %and84 = and i64 %sub83, 281474976710656, !dbg !15063
  %tobool85 = icmp ne i64 %and84, 0, !dbg !15063
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !15063

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !15063

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub88 = sub i64 %25, 1, !dbg !15063
  %and89 = and i64 %sub88, 140737488355328, !dbg !15063
  %tobool90 = icmp ne i64 %and89, 0, !dbg !15063
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !15063

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !15063

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub93 = sub i64 %26, 1, !dbg !15063
  %and94 = and i64 %sub93, 70368744177664, !dbg !15063
  %tobool95 = icmp ne i64 %and94, 0, !dbg !15063
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !15063

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !15063

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub98 = sub i64 %27, 1, !dbg !15063
  %and99 = and i64 %sub98, 35184372088832, !dbg !15063
  %tobool100 = icmp ne i64 %and99, 0, !dbg !15063
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !15063

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !15063

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub103 = sub i64 %28, 1, !dbg !15063
  %and104 = and i64 %sub103, 17592186044416, !dbg !15063
  %tobool105 = icmp ne i64 %and104, 0, !dbg !15063
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !15063

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !15063

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub108 = sub i64 %29, 1, !dbg !15063
  %and109 = and i64 %sub108, 8796093022208, !dbg !15063
  %tobool110 = icmp ne i64 %and109, 0, !dbg !15063
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !15063

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !15063

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub113 = sub i64 %30, 1, !dbg !15063
  %and114 = and i64 %sub113, 4398046511104, !dbg !15063
  %tobool115 = icmp ne i64 %and114, 0, !dbg !15063
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !15063

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !15063

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub118 = sub i64 %31, 1, !dbg !15063
  %and119 = and i64 %sub118, 2199023255552, !dbg !15063
  %tobool120 = icmp ne i64 %and119, 0, !dbg !15063
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !15063

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !15063

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub123 = sub i64 %32, 1, !dbg !15063
  %and124 = and i64 %sub123, 1099511627776, !dbg !15063
  %tobool125 = icmp ne i64 %and124, 0, !dbg !15063
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !15063

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !15063

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub128 = sub i64 %33, 1, !dbg !15063
  %and129 = and i64 %sub128, 549755813888, !dbg !15063
  %tobool130 = icmp ne i64 %and129, 0, !dbg !15063
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !15063

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !15063

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub133 = sub i64 %34, 1, !dbg !15063
  %and134 = and i64 %sub133, 274877906944, !dbg !15063
  %tobool135 = icmp ne i64 %and134, 0, !dbg !15063
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !15063

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !15063

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub138 = sub i64 %35, 1, !dbg !15063
  %and139 = and i64 %sub138, 137438953472, !dbg !15063
  %tobool140 = icmp ne i64 %and139, 0, !dbg !15063
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !15063

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !15063

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub143 = sub i64 %36, 1, !dbg !15063
  %and144 = and i64 %sub143, 68719476736, !dbg !15063
  %tobool145 = icmp ne i64 %and144, 0, !dbg !15063
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !15063

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !15063

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub148 = sub i64 %37, 1, !dbg !15063
  %and149 = and i64 %sub148, 34359738368, !dbg !15063
  %tobool150 = icmp ne i64 %and149, 0, !dbg !15063
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !15063

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !15063

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub153 = sub i64 %38, 1, !dbg !15063
  %and154 = and i64 %sub153, 17179869184, !dbg !15063
  %tobool155 = icmp ne i64 %and154, 0, !dbg !15063
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !15063

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !15063

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub158 = sub i64 %39, 1, !dbg !15063
  %and159 = and i64 %sub158, 8589934592, !dbg !15063
  %tobool160 = icmp ne i64 %and159, 0, !dbg !15063
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !15063

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !15063

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub163 = sub i64 %40, 1, !dbg !15063
  %and164 = and i64 %sub163, 4294967296, !dbg !15063
  %tobool165 = icmp ne i64 %and164, 0, !dbg !15063
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !15063

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !15063

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub168 = sub i64 %41, 1, !dbg !15063
  %and169 = and i64 %sub168, 2147483648, !dbg !15063
  %tobool170 = icmp ne i64 %and169, 0, !dbg !15063
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !15063

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !15063

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub173 = sub i64 %42, 1, !dbg !15063
  %and174 = and i64 %sub173, 1073741824, !dbg !15063
  %tobool175 = icmp ne i64 %and174, 0, !dbg !15063
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !15063

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !15063

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub178 = sub i64 %43, 1, !dbg !15063
  %and179 = and i64 %sub178, 536870912, !dbg !15063
  %tobool180 = icmp ne i64 %and179, 0, !dbg !15063
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !15063

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !15063

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub183 = sub i64 %44, 1, !dbg !15063
  %and184 = and i64 %sub183, 268435456, !dbg !15063
  %tobool185 = icmp ne i64 %and184, 0, !dbg !15063
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !15063

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !15063

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub188 = sub i64 %45, 1, !dbg !15063
  %and189 = and i64 %sub188, 134217728, !dbg !15063
  %tobool190 = icmp ne i64 %and189, 0, !dbg !15063
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !15063

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !15063

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub193 = sub i64 %46, 1, !dbg !15063
  %and194 = and i64 %sub193, 67108864, !dbg !15063
  %tobool195 = icmp ne i64 %and194, 0, !dbg !15063
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !15063

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !15063

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub198 = sub i64 %47, 1, !dbg !15063
  %and199 = and i64 %sub198, 33554432, !dbg !15063
  %tobool200 = icmp ne i64 %and199, 0, !dbg !15063
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !15063

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !15063

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub203 = sub i64 %48, 1, !dbg !15063
  %and204 = and i64 %sub203, 16777216, !dbg !15063
  %tobool205 = icmp ne i64 %and204, 0, !dbg !15063
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !15063

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !15063

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub208 = sub i64 %49, 1, !dbg !15063
  %and209 = and i64 %sub208, 8388608, !dbg !15063
  %tobool210 = icmp ne i64 %and209, 0, !dbg !15063
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !15063

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !15063

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub213 = sub i64 %50, 1, !dbg !15063
  %and214 = and i64 %sub213, 4194304, !dbg !15063
  %tobool215 = icmp ne i64 %and214, 0, !dbg !15063
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !15063

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !15063

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub218 = sub i64 %51, 1, !dbg !15063
  %and219 = and i64 %sub218, 2097152, !dbg !15063
  %tobool220 = icmp ne i64 %and219, 0, !dbg !15063
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !15063

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !15063

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub223 = sub i64 %52, 1, !dbg !15063
  %and224 = and i64 %sub223, 1048576, !dbg !15063
  %tobool225 = icmp ne i64 %and224, 0, !dbg !15063
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !15063

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !15063

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub228 = sub i64 %53, 1, !dbg !15063
  %and229 = and i64 %sub228, 524288, !dbg !15063
  %tobool230 = icmp ne i64 %and229, 0, !dbg !15063
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !15063

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !15063

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub233 = sub i64 %54, 1, !dbg !15063
  %and234 = and i64 %sub233, 262144, !dbg !15063
  %tobool235 = icmp ne i64 %and234, 0, !dbg !15063
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !15063

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !15063

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub238 = sub i64 %55, 1, !dbg !15063
  %and239 = and i64 %sub238, 131072, !dbg !15063
  %tobool240 = icmp ne i64 %and239, 0, !dbg !15063
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !15063

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !15063

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub243 = sub i64 %56, 1, !dbg !15063
  %and244 = and i64 %sub243, 65536, !dbg !15063
  %tobool245 = icmp ne i64 %and244, 0, !dbg !15063
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !15063

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !15063

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub248 = sub i64 %57, 1, !dbg !15063
  %and249 = and i64 %sub248, 32768, !dbg !15063
  %tobool250 = icmp ne i64 %and249, 0, !dbg !15063
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !15063

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !15063

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub253 = sub i64 %58, 1, !dbg !15063
  %and254 = and i64 %sub253, 16384, !dbg !15063
  %tobool255 = icmp ne i64 %and254, 0, !dbg !15063
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !15063

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !15063

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub258 = sub i64 %59, 1, !dbg !15063
  %and259 = and i64 %sub258, 8192, !dbg !15063
  %tobool260 = icmp ne i64 %and259, 0, !dbg !15063
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !15063

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !15063

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub263 = sub i64 %60, 1, !dbg !15063
  %and264 = and i64 %sub263, 4096, !dbg !15063
  %tobool265 = icmp ne i64 %and264, 0, !dbg !15063
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !15063

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !15063

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub268 = sub i64 %61, 1, !dbg !15063
  %and269 = and i64 %sub268, 2048, !dbg !15063
  %tobool270 = icmp ne i64 %and269, 0, !dbg !15063
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !15063

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !15063

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub273 = sub i64 %62, 1, !dbg !15063
  %and274 = and i64 %sub273, 1024, !dbg !15063
  %tobool275 = icmp ne i64 %and274, 0, !dbg !15063
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !15063

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !15063

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub278 = sub i64 %63, 1, !dbg !15063
  %and279 = and i64 %sub278, 512, !dbg !15063
  %tobool280 = icmp ne i64 %and279, 0, !dbg !15063
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !15063

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !15063

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub283 = sub i64 %64, 1, !dbg !15063
  %and284 = and i64 %sub283, 256, !dbg !15063
  %tobool285 = icmp ne i64 %and284, 0, !dbg !15063
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !15063

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !15063

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub288 = sub i64 %65, 1, !dbg !15063
  %and289 = and i64 %sub288, 128, !dbg !15063
  %tobool290 = icmp ne i64 %and289, 0, !dbg !15063
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !15063

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !15063

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub293 = sub i64 %66, 1, !dbg !15063
  %and294 = and i64 %sub293, 64, !dbg !15063
  %tobool295 = icmp ne i64 %and294, 0, !dbg !15063
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !15063

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !15063

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub298 = sub i64 %67, 1, !dbg !15063
  %and299 = and i64 %sub298, 32, !dbg !15063
  %tobool300 = icmp ne i64 %and299, 0, !dbg !15063
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !15063

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !15063

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub303 = sub i64 %68, 1, !dbg !15063
  %and304 = and i64 %sub303, 16, !dbg !15063
  %tobool305 = icmp ne i64 %and304, 0, !dbg !15063
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !15063

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !15063

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub308 = sub i64 %69, 1, !dbg !15063
  %and309 = and i64 %sub308, 8, !dbg !15063
  %tobool310 = icmp ne i64 %and309, 0, !dbg !15063
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !15063

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !15063

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub313 = sub i64 %70, 1, !dbg !15063
  %and314 = and i64 %sub313, 4, !dbg !15063
  %tobool315 = icmp ne i64 %and314, 0, !dbg !15063
  %71 = zext i1 %tobool315 to i64, !dbg !15063
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !15063
  br label %cond.end, !dbg !15063

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !15063
  br label %cond.end317, !dbg !15063

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !15063
  br label %cond.end319, !dbg !15063

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !15063
  br label %cond.end321, !dbg !15063

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !15063
  br label %cond.end323, !dbg !15063

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !15063
  br label %cond.end325, !dbg !15063

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !15063
  br label %cond.end327, !dbg !15063

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !15063
  br label %cond.end329, !dbg !15063

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !15063
  br label %cond.end331, !dbg !15063

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !15063
  br label %cond.end333, !dbg !15063

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !15063
  br label %cond.end335, !dbg !15063

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !15063
  br label %cond.end337, !dbg !15063

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !15063
  br label %cond.end339, !dbg !15063

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !15063
  br label %cond.end341, !dbg !15063

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !15063
  br label %cond.end343, !dbg !15063

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !15063
  br label %cond.end345, !dbg !15063

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !15063
  br label %cond.end347, !dbg !15063

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !15063
  br label %cond.end349, !dbg !15063

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !15063
  br label %cond.end351, !dbg !15063

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !15063
  br label %cond.end353, !dbg !15063

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !15063
  br label %cond.end355, !dbg !15063

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !15063
  br label %cond.end357, !dbg !15063

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !15063
  br label %cond.end359, !dbg !15063

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !15063
  br label %cond.end361, !dbg !15063

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !15063
  br label %cond.end363, !dbg !15063

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !15063
  br label %cond.end365, !dbg !15063

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !15063
  br label %cond.end367, !dbg !15063

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !15063
  br label %cond.end369, !dbg !15063

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !15063
  br label %cond.end371, !dbg !15063

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !15063
  br label %cond.end373, !dbg !15063

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !15063
  br label %cond.end375, !dbg !15063

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !15063
  br label %cond.end377, !dbg !15063

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !15063
  br label %cond.end379, !dbg !15063

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !15063
  br label %cond.end381, !dbg !15063

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !15063
  br label %cond.end383, !dbg !15063

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !15063
  br label %cond.end385, !dbg !15063

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !15063
  br label %cond.end387, !dbg !15063

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !15063
  br label %cond.end389, !dbg !15063

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !15063
  br label %cond.end391, !dbg !15063

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !15063
  br label %cond.end393, !dbg !15063

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !15063
  br label %cond.end395, !dbg !15063

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !15063
  br label %cond.end397, !dbg !15063

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !15063
  br label %cond.end399, !dbg !15063

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !15063
  br label %cond.end401, !dbg !15063

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !15063
  br label %cond.end403, !dbg !15063

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !15063
  br label %cond.end405, !dbg !15063

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !15063
  br label %cond.end407, !dbg !15063

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !15063
  br label %cond.end409, !dbg !15063

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !15063
  br label %cond.end411, !dbg !15063

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !15063
  br label %cond.end413, !dbg !15063

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !15063
  br label %cond.end415, !dbg !15063

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !15063
  br label %cond.end417, !dbg !15063

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !15063
  br label %cond.end419, !dbg !15063

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !15063
  br label %cond.end421, !dbg !15063

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !15063
  br label %cond.end423, !dbg !15063

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !15063
  br label %cond.end425, !dbg !15063

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !15063
  br label %cond.end427, !dbg !15063

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !15063
  br label %cond.end429, !dbg !15063

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !15063
  br label %cond.end431, !dbg !15063

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !15063
  br label %cond.end433, !dbg !15063

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !15063
  br label %cond.end435, !dbg !15063

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !15063
  br label %cond.end437, !dbg !15063

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !15063
  br label %cond.end440, !dbg !15063

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !15063

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !15063
  br label %cond.end444, !dbg !15063

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !15063
  %sub443 = sub i64 %72, 1, !dbg !15063
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !15063
  br label %cond.end444, !dbg !15063

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !15063
  %sub446 = sub i32 %cond445, 12, !dbg !15064
  %add = add i32 %sub446, 1, !dbg !15065
  store i32 %add, i32* %retval, align 4, !dbg !15066
  br label %return, !dbg !15066

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !15067
  %dec = add i64 %73, -1, !dbg !15067
  store i64 %dec, i64* %size.addr, align 8, !dbg !15067
  %74 = load i64, i64* %size.addr, align 8, !dbg !15068
  %shr = lshr i64 %74, 12, !dbg !15068
  store i64 %shr, i64* %size.addr, align 8, !dbg !15068
  %75 = load i64, i64* %size.addr, align 8, !dbg !15069
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !15046
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !15070
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !15071
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #5, !dbg !15070, !srcloc !15072
  store i32 %78, i32* %bitpos.i, align 4, !dbg !15070
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !15073
  %add.i = add i32 %79, 1, !dbg !15074
  store i32 %add.i, i32* %retval, align 4, !dbg !15075
  br label %return, !dbg !15075

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !15076
  ret i32 %80, !dbg !15076
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !15077 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !15039, metadata !DIExpression()), !dbg !15081
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !15045, metadata !DIExpression()), !dbg !15083
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15084, metadata !DIExpression()), !dbg !15085
  %0 = load i64, i64* %n.addr, align 8, !dbg !15086
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !15083
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !15087
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !15088
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #5, !dbg !15087, !srcloc !15072
  store i32 %3, i32* %bitpos.i, align 4, !dbg !15087
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !15089
  %add.i = add i32 %4, 1, !dbg !15090
  %sub = sub i32 %add.i, 1, !dbg !15091
  ret i32 %sub, !dbg !15092
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !15093 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !15097, metadata !DIExpression()), !dbg !15098
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !15099, metadata !DIExpression()), !dbg !15100
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15101, metadata !DIExpression()), !dbg !15102
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15103, metadata !DIExpression()), !dbg !15104
  %0 = load i8*, i8** %object.addr, align 8, !dbg !15105
  ret i8* %0, !dbg !15106
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @HFC_outb_pcimem(%struct.hfc_multi* %hc, i8 zeroext %reg, i8 zeroext %val) #2 !dbg !15107 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %reg.addr = alloca i8, align 1
  %val.addr = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15108, metadata !DIExpression()), !dbg !15109
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !15110, metadata !DIExpression()), !dbg !15111
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !15112, metadata !DIExpression()), !dbg !15113
  %0 = load i8, i8* %val.addr, align 1, !dbg !15114
  %1 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15115
  %pci_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %1, i32 0, i32 22, !dbg !15116
  %2 = load i8*, i8** %pci_membase, align 8, !dbg !15116
  %3 = load i8, i8* %reg.addr, align 1, !dbg !15117
  %conv = zext i8 %3 to i32, !dbg !15117
  %idx.ext = sext i32 %conv to i64, !dbg !15118
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !15118
  call void @writeb(i8 zeroext %0, i8* %add.ptr) #12, !dbg !15119
  ret void, !dbg !15120
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @HFC_inb_pcimem(%struct.hfc_multi* %hc, i8 zeroext %reg) #2 !dbg !15121 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %reg.addr = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15122, metadata !DIExpression()), !dbg !15123
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !15124, metadata !DIExpression()), !dbg !15125
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15126
  %pci_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 22, !dbg !15127
  %1 = load i8*, i8** %pci_membase, align 8, !dbg !15127
  %2 = load i8, i8* %reg.addr, align 1, !dbg !15128
  %conv = zext i8 %2 to i32, !dbg !15128
  %idx.ext = sext i32 %conv to i64, !dbg !15129
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !15129
  %call = call zeroext i8 @readb(i8* %add.ptr) #12, !dbg !15130
  ret i8 %call, !dbg !15131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @HFC_inw_pcimem(%struct.hfc_multi* %hc, i8 zeroext %reg) #2 !dbg !15132 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %reg.addr = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15133, metadata !DIExpression()), !dbg !15134
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !15135, metadata !DIExpression()), !dbg !15136
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15137
  %pci_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 22, !dbg !15138
  %1 = load i8*, i8** %pci_membase, align 8, !dbg !15138
  %2 = load i8, i8* %reg.addr, align 1, !dbg !15139
  %conv = zext i8 %2 to i32, !dbg !15139
  %idx.ext = sext i32 %conv to i64, !dbg !15140
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !15140
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !15141
  ret i16 %call, !dbg !15142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @HFC_wait_pcimem(%struct.hfc_multi* %hc) #2 !dbg !15143 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15144, metadata !DIExpression()), !dbg !15145
  br label %while.cond, !dbg !15146

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15147
  %pci_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 22, !dbg !15148
  %1 = load i8*, i8** %pci_membase, align 8, !dbg !15148
  %add.ptr = getelementptr i8, i8* %1, i64 28, !dbg !15149
  %call = call zeroext i8 @readb(i8* %add.ptr) #12, !dbg !15150
  %conv = zext i8 %call to i32, !dbg !15150
  %and = and i32 %conv, 1, !dbg !15151
  %tobool = icmp ne i32 %and, 0, !dbg !15146
  br i1 %tobool, label %while.body, label %while.end, !dbg !15146

while.body:                                       ; preds = %while.cond
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !15152, !srcloc !15158
  br label %while.cond, !dbg !15146, !llvm.loop !15159

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15161
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @read_fifo_pcimem(%struct.hfc_multi* %hc, i8* %data, i32 %len) #2 !dbg !15162 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15163, metadata !DIExpression()), !dbg !15164
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15165, metadata !DIExpression()), !dbg !15166
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !15167, metadata !DIExpression()), !dbg !15168
  br label %while.cond, !dbg !15169

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %len.addr, align 4, !dbg !15170
  %shr = ashr i32 %0, 2, !dbg !15171
  %tobool = icmp ne i32 %shr, 0, !dbg !15169
  br i1 %tobool, label %while.body, label %while.end, !dbg !15169

while.body:                                       ; preds = %while.cond
  %1 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15172
  %pci_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %1, i32 0, i32 22, !dbg !15172
  %2 = load i8*, i8** %pci_membase, align 8, !dbg !15172
  %add.ptr = getelementptr i8, i8* %2, i64 128, !dbg !15172
  %call = call i32 @readl(i8* %add.ptr) #12, !dbg !15172
  %3 = load i8*, i8** %data.addr, align 8, !dbg !15174
  %4 = bitcast i8* %3 to i32*, !dbg !15175
  store i32 %call, i32* %4, align 4, !dbg !15176
  %5 = load i8*, i8** %data.addr, align 8, !dbg !15177
  %add.ptr1 = getelementptr i8, i8* %5, i64 4, !dbg !15177
  store i8* %add.ptr1, i8** %data.addr, align 8, !dbg !15177
  %6 = load i32, i32* %len.addr, align 4, !dbg !15178
  %sub = sub i32 %6, 4, !dbg !15178
  store i32 %sub, i32* %len.addr, align 4, !dbg !15178
  br label %while.cond, !dbg !15169, !llvm.loop !15179

while.end:                                        ; preds = %while.cond
  br label %while.cond2, !dbg !15181

while.cond2:                                      ; preds = %while.body5, %while.end
  %7 = load i32, i32* %len.addr, align 4, !dbg !15182
  %shr3 = ashr i32 %7, 1, !dbg !15183
  %tobool4 = icmp ne i32 %shr3, 0, !dbg !15181
  br i1 %tobool4, label %while.body5, label %while.end11, !dbg !15181

while.body5:                                      ; preds = %while.cond2
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15184
  %pci_membase6 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 22, !dbg !15184
  %9 = load i8*, i8** %pci_membase6, align 8, !dbg !15184
  %add.ptr7 = getelementptr i8, i8* %9, i64 128, !dbg !15184
  %call8 = call zeroext i16 @readw(i8* %add.ptr7) #12, !dbg !15184
  %10 = load i8*, i8** %data.addr, align 8, !dbg !15186
  %11 = bitcast i8* %10 to i16*, !dbg !15187
  store i16 %call8, i16* %11, align 2, !dbg !15188
  %12 = load i8*, i8** %data.addr, align 8, !dbg !15189
  %add.ptr9 = getelementptr i8, i8* %12, i64 2, !dbg !15189
  store i8* %add.ptr9, i8** %data.addr, align 8, !dbg !15189
  %13 = load i32, i32* %len.addr, align 4, !dbg !15190
  %sub10 = sub i32 %13, 2, !dbg !15190
  store i32 %sub10, i32* %len.addr, align 4, !dbg !15190
  br label %while.cond2, !dbg !15181, !llvm.loop !15191

while.end11:                                      ; preds = %while.cond2
  br label %while.cond12, !dbg !15193

while.cond12:                                     ; preds = %while.body14, %while.end11
  %14 = load i32, i32* %len.addr, align 4, !dbg !15194
  %tobool13 = icmp ne i32 %14, 0, !dbg !15193
  br i1 %tobool13, label %while.body14, label %while.end18, !dbg !15193

while.body14:                                     ; preds = %while.cond12
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15195
  %pci_membase15 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 22, !dbg !15197
  %16 = load i8*, i8** %pci_membase15, align 8, !dbg !15197
  %add.ptr16 = getelementptr i8, i8* %16, i64 128, !dbg !15198
  %call17 = call zeroext i8 @readb(i8* %add.ptr16) #12, !dbg !15199
  %17 = load i8*, i8** %data.addr, align 8, !dbg !15200
  store i8 %call17, i8* %17, align 1, !dbg !15201
  %18 = load i8*, i8** %data.addr, align 8, !dbg !15202
  %incdec.ptr = getelementptr i8, i8* %18, i32 1, !dbg !15202
  store i8* %incdec.ptr, i8** %data.addr, align 8, !dbg !15202
  %19 = load i32, i32* %len.addr, align 4, !dbg !15203
  %dec = add i32 %19, -1, !dbg !15203
  store i32 %dec, i32* %len.addr, align 4, !dbg !15203
  br label %while.cond12, !dbg !15193, !llvm.loop !15204

while.end18:                                      ; preds = %while.cond12
  ret void, !dbg !15206
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @write_fifo_pcimem(%struct.hfc_multi* %hc, i8* %data, i32 %len) #2 !dbg !15207 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15208, metadata !DIExpression()), !dbg !15209
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15210, metadata !DIExpression()), !dbg !15211
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !15212, metadata !DIExpression()), !dbg !15213
  br label %while.cond, !dbg !15214

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %len.addr, align 4, !dbg !15215
  %shr = ashr i32 %0, 2, !dbg !15216
  %tobool = icmp ne i32 %shr, 0, !dbg !15214
  br i1 %tobool, label %while.body, label %while.end, !dbg !15214

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %data.addr, align 8, !dbg !15217
  %2 = bitcast i8* %1 to i32*, !dbg !15217
  %3 = load i32, i32* %2, align 4, !dbg !15217
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15219
  %pci_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %4, i32 0, i32 22, !dbg !15220
  %5 = load i8*, i8** %pci_membase, align 8, !dbg !15220
  %add.ptr = getelementptr i8, i8* %5, i64 128, !dbg !15221
  call void @writel(i32 %3, i8* %add.ptr) #12, !dbg !15222
  %6 = load i8*, i8** %data.addr, align 8, !dbg !15223
  %add.ptr1 = getelementptr i8, i8* %6, i64 4, !dbg !15223
  store i8* %add.ptr1, i8** %data.addr, align 8, !dbg !15223
  %7 = load i32, i32* %len.addr, align 4, !dbg !15224
  %sub = sub i32 %7, 4, !dbg !15224
  store i32 %sub, i32* %len.addr, align 4, !dbg !15224
  br label %while.cond, !dbg !15214, !llvm.loop !15225

while.end:                                        ; preds = %while.cond
  br label %while.cond2, !dbg !15227

while.cond2:                                      ; preds = %while.body5, %while.end
  %8 = load i32, i32* %len.addr, align 4, !dbg !15228
  %shr3 = ashr i32 %8, 1, !dbg !15229
  %tobool4 = icmp ne i32 %shr3, 0, !dbg !15227
  br i1 %tobool4, label %while.body5, label %while.end10, !dbg !15227

while.body5:                                      ; preds = %while.cond2
  %9 = load i8*, i8** %data.addr, align 8, !dbg !15230
  %10 = bitcast i8* %9 to i16*, !dbg !15230
  %11 = load i16, i16* %10, align 2, !dbg !15230
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15232
  %pci_membase6 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %12, i32 0, i32 22, !dbg !15233
  %13 = load i8*, i8** %pci_membase6, align 8, !dbg !15233
  %add.ptr7 = getelementptr i8, i8* %13, i64 128, !dbg !15234
  call void @writew(i16 zeroext %11, i8* %add.ptr7) #12, !dbg !15235
  %14 = load i8*, i8** %data.addr, align 8, !dbg !15236
  %add.ptr8 = getelementptr i8, i8* %14, i64 2, !dbg !15236
  store i8* %add.ptr8, i8** %data.addr, align 8, !dbg !15236
  %15 = load i32, i32* %len.addr, align 4, !dbg !15237
  %sub9 = sub i32 %15, 2, !dbg !15237
  store i32 %sub9, i32* %len.addr, align 4, !dbg !15237
  br label %while.cond2, !dbg !15227, !llvm.loop !15238

while.end10:                                      ; preds = %while.cond2
  br label %while.cond11, !dbg !15240

while.cond11:                                     ; preds = %while.body13, %while.end10
  %16 = load i32, i32* %len.addr, align 4, !dbg !15241
  %tobool12 = icmp ne i32 %16, 0, !dbg !15240
  br i1 %tobool12, label %while.body13, label %while.end16, !dbg !15240

while.body13:                                     ; preds = %while.cond11
  %17 = load i8*, i8** %data.addr, align 8, !dbg !15242
  %18 = load i8, i8* %17, align 1, !dbg !15244
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15245
  %pci_membase14 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %19, i32 0, i32 22, !dbg !15246
  %20 = load i8*, i8** %pci_membase14, align 8, !dbg !15246
  %add.ptr15 = getelementptr i8, i8* %20, i64 128, !dbg !15247
  call void @writeb(i8 zeroext %18, i8* %add.ptr15) #12, !dbg !15248
  %21 = load i8*, i8** %data.addr, align 8, !dbg !15249
  %incdec.ptr = getelementptr i8, i8* %21, i32 1, !dbg !15249
  store i8* %incdec.ptr, i8** %data.addr, align 8, !dbg !15249
  %22 = load i32, i32* %len.addr, align 4, !dbg !15250
  %dec = add i32 %22, -1, !dbg !15250
  store i32 %dec, i32* %len.addr, align 4, !dbg !15250
  br label %while.cond11, !dbg !15240, !llvm.loop !15251

while.end16:                                      ; preds = %while.cond11
  ret void, !dbg !15253
}

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @HFC_outb_regio(%struct.hfc_multi* %hc, i8 zeroext %reg, i8 zeroext %val) #2 !dbg !15254 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %reg.addr = alloca i8, align 1
  %val.addr = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15255, metadata !DIExpression()), !dbg !15256
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !15257, metadata !DIExpression()), !dbg !15258
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !15259, metadata !DIExpression()), !dbg !15260
  %0 = load i8, i8* %reg.addr, align 1, !dbg !15261
  %1 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15262
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %1, i32 0, i32 29, !dbg !15263
  %2 = load i64, i64* %pci_iobase, align 8, !dbg !15263
  %add = add i64 %2, 4, !dbg !15264
  %conv = trunc i64 %add to i32, !dbg !15262
  call void @outb(i8 zeroext %0, i32 %conv) #12, !dbg !15265
  %3 = load i8, i8* %val.addr, align 1, !dbg !15266
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15267
  %pci_iobase1 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %4, i32 0, i32 29, !dbg !15268
  %5 = load i64, i64* %pci_iobase1, align 8, !dbg !15268
  %conv2 = trunc i64 %5 to i32, !dbg !15267
  call void @outb(i8 zeroext %3, i32 %conv2) #12, !dbg !15269
  ret void, !dbg !15270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @HFC_inb_regio(%struct.hfc_multi* %hc, i8 zeroext %reg) #2 !dbg !15271 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %reg.addr = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15272, metadata !DIExpression()), !dbg !15273
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !15274, metadata !DIExpression()), !dbg !15275
  %0 = load i8, i8* %reg.addr, align 1, !dbg !15276
  %1 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15277
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %1, i32 0, i32 29, !dbg !15278
  %2 = load i64, i64* %pci_iobase, align 8, !dbg !15278
  %add = add i64 %2, 4, !dbg !15279
  %conv = trunc i64 %add to i32, !dbg !15277
  call void @outb(i8 zeroext %0, i32 %conv) #12, !dbg !15280
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15281
  %pci_iobase1 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 29, !dbg !15282
  %4 = load i64, i64* %pci_iobase1, align 8, !dbg !15282
  %conv2 = trunc i64 %4 to i32, !dbg !15281
  %call = call zeroext i8 @inb(i32 %conv2) #12, !dbg !15283
  ret i8 %call, !dbg !15284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @HFC_inw_regio(%struct.hfc_multi* %hc, i8 zeroext %reg) #2 !dbg !15285 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %reg.addr = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15286, metadata !DIExpression()), !dbg !15287
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !15288, metadata !DIExpression()), !dbg !15289
  %0 = load i8, i8* %reg.addr, align 1, !dbg !15290
  %1 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15291
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %1, i32 0, i32 29, !dbg !15292
  %2 = load i64, i64* %pci_iobase, align 8, !dbg !15292
  %add = add i64 %2, 4, !dbg !15293
  %conv = trunc i64 %add to i32, !dbg !15291
  call void @outb(i8 zeroext %0, i32 %conv) #12, !dbg !15294
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15295
  %pci_iobase1 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 29, !dbg !15296
  %4 = load i64, i64* %pci_iobase1, align 8, !dbg !15296
  %conv2 = trunc i64 %4 to i32, !dbg !15295
  %call = call zeroext i16 @inw(i32 %conv2) #12, !dbg !15297
  ret i16 %call, !dbg !15298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @HFC_wait_regio(%struct.hfc_multi* %hc) #2 !dbg !15299 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15300, metadata !DIExpression()), !dbg !15301
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15302
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 29, !dbg !15303
  %1 = load i64, i64* %pci_iobase, align 8, !dbg !15303
  %add = add i64 %1, 4, !dbg !15304
  %conv = trunc i64 %add to i32, !dbg !15302
  call void @outb(i8 zeroext 28, i32 %conv) #12, !dbg !15305
  br label %while.cond, !dbg !15306

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15307
  %pci_iobase1 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %2, i32 0, i32 29, !dbg !15308
  %3 = load i64, i64* %pci_iobase1, align 8, !dbg !15308
  %conv2 = trunc i64 %3 to i32, !dbg !15307
  %call = call zeroext i8 @inb(i32 %conv2) #12, !dbg !15309
  %conv3 = zext i8 %call to i32, !dbg !15309
  %and = and i32 %conv3, 1, !dbg !15310
  %tobool = icmp ne i32 %and, 0, !dbg !15306
  br i1 %tobool, label %while.body, label %while.end, !dbg !15306

while.body:                                       ; preds = %while.cond
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !15311, !srcloc !15158
  br label %while.cond, !dbg !15306, !llvm.loop !15314

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15316
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @read_fifo_regio(%struct.hfc_multi* %hc, i8* %data, i32 %len) #2 !dbg !15317 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15318, metadata !DIExpression()), !dbg !15319
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15320, metadata !DIExpression()), !dbg !15321
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !15322, metadata !DIExpression()), !dbg !15323
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15324
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 29, !dbg !15325
  %1 = load i64, i64* %pci_iobase, align 8, !dbg !15325
  %add = add i64 %1, 4, !dbg !15326
  %conv = trunc i64 %add to i32, !dbg !15327
  call void @outb(i8 zeroext -128, i32 %conv) #12, !dbg !15328
  br label %while.cond, !dbg !15329

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %len.addr, align 4, !dbg !15330
  %shr = ashr i32 %2, 2, !dbg !15331
  %tobool = icmp ne i32 %shr, 0, !dbg !15329
  br i1 %tobool, label %while.body, label %while.end, !dbg !15329

while.body:                                       ; preds = %while.cond
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15332
  %pci_iobase1 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 29, !dbg !15332
  %4 = load i64, i64* %pci_iobase1, align 8, !dbg !15332
  %conv2 = trunc i64 %4 to i32, !dbg !15332
  %call = call i32 @inl(i32 %conv2) #12, !dbg !15332
  %5 = load i8*, i8** %data.addr, align 8, !dbg !15334
  %6 = bitcast i8* %5 to i32*, !dbg !15335
  store i32 %call, i32* %6, align 4, !dbg !15336
  %7 = load i8*, i8** %data.addr, align 8, !dbg !15337
  %add.ptr = getelementptr i8, i8* %7, i64 4, !dbg !15337
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !15337
  %8 = load i32, i32* %len.addr, align 4, !dbg !15338
  %sub = sub i32 %8, 4, !dbg !15338
  store i32 %sub, i32* %len.addr, align 4, !dbg !15338
  br label %while.cond, !dbg !15329, !llvm.loop !15339

while.end:                                        ; preds = %while.cond
  br label %while.cond3, !dbg !15341

while.cond3:                                      ; preds = %while.body6, %while.end
  %9 = load i32, i32* %len.addr, align 4, !dbg !15342
  %shr4 = ashr i32 %9, 1, !dbg !15343
  %tobool5 = icmp ne i32 %shr4, 0, !dbg !15341
  br i1 %tobool5, label %while.body6, label %while.end12, !dbg !15341

while.body6:                                      ; preds = %while.cond3
  %10 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15344
  %pci_iobase7 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %10, i32 0, i32 29, !dbg !15344
  %11 = load i64, i64* %pci_iobase7, align 8, !dbg !15344
  %conv8 = trunc i64 %11 to i32, !dbg !15344
  %call9 = call zeroext i16 @inw(i32 %conv8) #12, !dbg !15344
  %12 = load i8*, i8** %data.addr, align 8, !dbg !15346
  %13 = bitcast i8* %12 to i16*, !dbg !15347
  store i16 %call9, i16* %13, align 2, !dbg !15348
  %14 = load i8*, i8** %data.addr, align 8, !dbg !15349
  %add.ptr10 = getelementptr i8, i8* %14, i64 2, !dbg !15349
  store i8* %add.ptr10, i8** %data.addr, align 8, !dbg !15349
  %15 = load i32, i32* %len.addr, align 4, !dbg !15350
  %sub11 = sub i32 %15, 2, !dbg !15350
  store i32 %sub11, i32* %len.addr, align 4, !dbg !15350
  br label %while.cond3, !dbg !15341, !llvm.loop !15351

while.end12:                                      ; preds = %while.cond3
  br label %while.cond13, !dbg !15353

while.cond13:                                     ; preds = %while.body15, %while.end12
  %16 = load i32, i32* %len.addr, align 4, !dbg !15354
  %tobool14 = icmp ne i32 %16, 0, !dbg !15353
  br i1 %tobool14, label %while.body15, label %while.end19, !dbg !15353

while.body15:                                     ; preds = %while.cond13
  %17 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15355
  %pci_iobase16 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %17, i32 0, i32 29, !dbg !15357
  %18 = load i64, i64* %pci_iobase16, align 8, !dbg !15357
  %conv17 = trunc i64 %18 to i32, !dbg !15355
  %call18 = call zeroext i8 @inb(i32 %conv17) #12, !dbg !15358
  %19 = load i8*, i8** %data.addr, align 8, !dbg !15359
  store i8 %call18, i8* %19, align 1, !dbg !15360
  %20 = load i8*, i8** %data.addr, align 8, !dbg !15361
  %incdec.ptr = getelementptr i8, i8* %20, i32 1, !dbg !15361
  store i8* %incdec.ptr, i8** %data.addr, align 8, !dbg !15361
  %21 = load i32, i32* %len.addr, align 4, !dbg !15362
  %dec = add i32 %21, -1, !dbg !15362
  store i32 %dec, i32* %len.addr, align 4, !dbg !15362
  br label %while.cond13, !dbg !15353, !llvm.loop !15363

while.end19:                                      ; preds = %while.cond13
  ret void, !dbg !15365
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @write_fifo_regio(%struct.hfc_multi* %hc, i8* %data, i32 %len) #2 !dbg !15366 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !15367, metadata !DIExpression()), !dbg !15368
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15369, metadata !DIExpression()), !dbg !15370
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !15371, metadata !DIExpression()), !dbg !15372
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15373
  %pci_iobase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 29, !dbg !15374
  %1 = load i64, i64* %pci_iobase, align 8, !dbg !15374
  %add = add i64 %1, 4, !dbg !15375
  %conv = trunc i64 %add to i32, !dbg !15376
  call void @outb(i8 zeroext -128, i32 %conv) #12, !dbg !15377
  br label %while.cond, !dbg !15378

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %len.addr, align 4, !dbg !15379
  %shr = ashr i32 %2, 2, !dbg !15380
  %tobool = icmp ne i32 %shr, 0, !dbg !15378
  br i1 %tobool, label %while.body, label %while.end, !dbg !15378

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %data.addr, align 8, !dbg !15381
  %4 = bitcast i8* %3 to i32*, !dbg !15381
  %5 = load i32, i32* %4, align 4, !dbg !15381
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15383
  %pci_iobase1 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 29, !dbg !15384
  %7 = load i64, i64* %pci_iobase1, align 8, !dbg !15384
  %conv2 = trunc i64 %7 to i32, !dbg !15383
  call void @outl(i32 %5, i32 %conv2) #12, !dbg !15385
  %8 = load i8*, i8** %data.addr, align 8, !dbg !15386
  %add.ptr = getelementptr i8, i8* %8, i64 4, !dbg !15386
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !15386
  %9 = load i32, i32* %len.addr, align 4, !dbg !15387
  %sub = sub i32 %9, 4, !dbg !15387
  store i32 %sub, i32* %len.addr, align 4, !dbg !15387
  br label %while.cond, !dbg !15378, !llvm.loop !15388

while.end:                                        ; preds = %while.cond
  br label %while.cond3, !dbg !15390

while.cond3:                                      ; preds = %while.body6, %while.end
  %10 = load i32, i32* %len.addr, align 4, !dbg !15391
  %shr4 = ashr i32 %10, 1, !dbg !15392
  %tobool5 = icmp ne i32 %shr4, 0, !dbg !15390
  br i1 %tobool5, label %while.body6, label %while.end11, !dbg !15390

while.body6:                                      ; preds = %while.cond3
  %11 = load i8*, i8** %data.addr, align 8, !dbg !15393
  %12 = bitcast i8* %11 to i16*, !dbg !15393
  %13 = load i16, i16* %12, align 2, !dbg !15393
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15395
  %pci_iobase7 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %14, i32 0, i32 29, !dbg !15396
  %15 = load i64, i64* %pci_iobase7, align 8, !dbg !15396
  %conv8 = trunc i64 %15 to i32, !dbg !15395
  call void @outw(i16 zeroext %13, i32 %conv8) #12, !dbg !15397
  %16 = load i8*, i8** %data.addr, align 8, !dbg !15398
  %add.ptr9 = getelementptr i8, i8* %16, i64 2, !dbg !15398
  store i8* %add.ptr9, i8** %data.addr, align 8, !dbg !15398
  %17 = load i32, i32* %len.addr, align 4, !dbg !15399
  %sub10 = sub i32 %17, 2, !dbg !15399
  store i32 %sub10, i32* %len.addr, align 4, !dbg !15399
  br label %while.cond3, !dbg !15390, !llvm.loop !15400

while.end11:                                      ; preds = %while.cond3
  br label %while.cond12, !dbg !15402

while.cond12:                                     ; preds = %while.body14, %while.end11
  %18 = load i32, i32* %len.addr, align 4, !dbg !15403
  %tobool13 = icmp ne i32 %18, 0, !dbg !15402
  br i1 %tobool13, label %while.body14, label %while.end17, !dbg !15402

while.body14:                                     ; preds = %while.cond12
  %19 = load i8*, i8** %data.addr, align 8, !dbg !15404
  %20 = load i8, i8* %19, align 1, !dbg !15406
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !15407
  %pci_iobase15 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 29, !dbg !15408
  %22 = load i64, i64* %pci_iobase15, align 8, !dbg !15408
  %conv16 = trunc i64 %22 to i32, !dbg !15407
  call void @outb(i8 zeroext %20, i32 %conv16) #12, !dbg !15409
  %23 = load i8*, i8** %data.addr, align 8, !dbg !15410
  %incdec.ptr = getelementptr i8, i8* %23, i32 1, !dbg !15410
  store i8* %incdec.ptr, i8** %data.addr, align 8, !dbg !15410
  %24 = load i32, i32* %len.addr, align 4, !dbg !15411
  %dec = add i32 %24, -1, !dbg !15411
  store i32 %dec, i32* %len.addr, align 4, !dbg !15411
  br label %while.cond12, !dbg !15402, !llvm.loop !15412

while.end17:                                      ; preds = %while.cond12
  ret void, !dbg !15414
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #2 !dbg !15415 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !15418, metadata !DIExpression()), !dbg !15419
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !15420, metadata !DIExpression()), !dbg !15419
  %0 = load i8, i8* %val.addr, align 1, !dbg !15419
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !15419
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #6, !dbg !15419, !srcloc !15421
  ret void, !dbg !15419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #2 !dbg !15422 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !15425, metadata !DIExpression()), !dbg !15426
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !15427, metadata !DIExpression()), !dbg !15426
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !15426
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #6, !dbg !15426, !srcloc !15428
  store i8 %1, i8* %ret, align 1, !dbg !15426
  %2 = load i8, i8* %ret, align 1, !dbg !15426
  ret i8 %2, !dbg !15426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #2 !dbg !15429 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !15432, metadata !DIExpression()), !dbg !15433
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !15434, metadata !DIExpression()), !dbg !15433
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !15433
  %1 = bitcast i8* %0 to i16*, !dbg !15433
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #6, !dbg !15433, !srcloc !15435
  store i16 %2, i16* %ret, align 2, !dbg !15433
  %3 = load i16, i16* %ret, align 2, !dbg !15433
  ret i16 %3, !dbg !15433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #2 !dbg !15436 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !15439, metadata !DIExpression()), !dbg !15440
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !15441, metadata !DIExpression()), !dbg !15440
  %0 = load i16, i16* %val.addr, align 2, !dbg !15440
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !15440
  %2 = bitcast i8* %1 to i16*, !dbg !15440
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #6, !dbg !15440, !srcloc !15442
  ret void, !dbg !15440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #2 !dbg !15443 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !15446, metadata !DIExpression()), !dbg !15447
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !15448, metadata !DIExpression()), !dbg !15447
  %0 = load i8, i8* %value.addr, align 1, !dbg !15447
  %1 = load i32, i32* %port.addr, align 4, !dbg !15447
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #6, !dbg !15447, !srcloc !15449
  ret void, !dbg !15447
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @inw(i32 %port) #2 !dbg !15450 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i16, align 2
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !15453, metadata !DIExpression()), !dbg !15454
  call void @llvm.dbg.declare(metadata i16* %value, metadata !15455, metadata !DIExpression()), !dbg !15454
  %0 = load i32, i32* %port.addr, align 4, !dbg !15454
  %1 = call i16 asm sideeffect "inw ${1:w}, ${0:w}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #6, !dbg !15454, !srcloc !15456
  store i16 %1, i16* %value, align 2, !dbg !15454
  %2 = load i16, i16* %value, align 2, !dbg !15454
  ret i16 %2, !dbg !15454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @inl(i32 %port) #2 !dbg !15457 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !15460, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.declare(metadata i32* %value, metadata !15462, metadata !DIExpression()), !dbg !15461
  %0 = load i32, i32* %port.addr, align 4, !dbg !15461
  %1 = call i32 asm sideeffect "inl ${1:w}, $0", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #6, !dbg !15461, !srcloc !15463
  store i32 %1, i32* %value, align 4, !dbg !15461
  %2 = load i32, i32* %value, align 4, !dbg !15461
  ret i32 %2, !dbg !15461
}

; Function Attrs: noredzone
declare dso_local i32 @mISDN_initdchannel(%struct.dchannel*, i32, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ph_state_change(%struct.dchannel* %dch) #2 !dbg !15464 {
entry:
  %dch.addr = alloca %struct.dchannel*, align 8
  %hc = alloca %struct.hfc_multi*, align 8
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.dchannel* %dch, %struct.dchannel** %dch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch.addr, metadata !15465, metadata !DIExpression()), !dbg !15466
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !15467, metadata !DIExpression()), !dbg !15468
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !15469, metadata !DIExpression()), !dbg !15470
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15471, metadata !DIExpression()), !dbg !15472
  %0 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15473
  %tobool = icmp ne %struct.dchannel* %0, null, !dbg !15473
  br i1 %tobool, label %if.end, label %if.then, !dbg !15475

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.ph_state_change, i64 0, i64 0)) #13, !dbg !15476
  br label %if.end129, !dbg !15478

if.end:                                           ; preds = %entry
  %1 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15479
  %hw = getelementptr inbounds %struct.dchannel, %struct.dchannel* %1, i32 0, i32 6, !dbg !15480
  %2 = load i8*, i8** %hw, align 8, !dbg !15480
  %3 = bitcast i8* %2 to %struct.hfc_multi*, !dbg !15479
  store %struct.hfc_multi* %3, %struct.hfc_multi** %hc, align 8, !dbg !15481
  %4 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15482
  %slot = getelementptr inbounds %struct.dchannel, %struct.dchannel* %4, i32 0, i32 7, !dbg !15483
  %5 = load i32, i32* %slot, align 8, !dbg !15483
  store i32 %5, i32* %ch, align 4, !dbg !15484
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15485
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 4, !dbg !15487
  %7 = load i32, i32* %ctype, align 8, !dbg !15487
  %cmp = icmp eq i32 %7, 1, !dbg !15488
  br i1 %cmp, label %if.then1, label %if.else37, !dbg !15489

if.then1:                                         ; preds = %if.end
  %8 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15490
  %dev = getelementptr inbounds %struct.dchannel, %struct.dchannel* %8, i32 0, i32 0, !dbg !15493
  %D = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev, i32 0, i32 0, !dbg !15494
  %protocol = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D, i32 0, i32 1, !dbg !15495
  %9 = load i32, i32* %protocol, align 8, !dbg !15495
  %cmp2 = icmp eq i32 %9, 3, !dbg !15496
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !15497

if.then3:                                         ; preds = %if.then1
  %10 = load i32, i32* @debug, align 4, !dbg !15498
  %and = and i32 %10, 4194304, !dbg !15501
  %tobool4 = icmp ne i32 %and, 0, !dbg !15501
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !15502

if.then5:                                         ; preds = %if.then3
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15503
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %11, i32 0, i32 2, !dbg !15504
  %12 = load i32, i32* %id, align 8, !dbg !15504
  %13 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15505
  %state = getelementptr inbounds %struct.dchannel, %struct.dchannel* %13, i32 0, i32 4, !dbg !15506
  %14 = load i32, i32* %state, align 8, !dbg !15506
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.ph_state_change, i64 0, i64 0), i32 %12, i32 %14) #13, !dbg !15507
  br label %if.end7, !dbg !15507

if.end7:                                          ; preds = %if.then5, %if.then3
  br label %if.end15, !dbg !15508

if.else:                                          ; preds = %if.then1
  %15 = load i32, i32* @debug, align 4, !dbg !15509
  %and8 = and i32 %15, 4194304, !dbg !15512
  %tobool9 = icmp ne i32 %and8, 0, !dbg !15512
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !15513

if.then10:                                        ; preds = %if.else
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15514
  %id11 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %16, i32 0, i32 2, !dbg !15515
  %17 = load i32, i32* %id11, align 8, !dbg !15515
  %18 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15516
  %state12 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %18, i32 0, i32 4, !dbg !15517
  %19 = load i32, i32* %state12, align 8, !dbg !15517
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.ph_state_change, i64 0, i64 0), i32 %17, i32 %19) #13, !dbg !15518
  br label %if.end14, !dbg !15518

if.end14:                                         ; preds = %if.then10, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end7
  %20 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15519
  %state16 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %20, i32 0, i32 4, !dbg !15520
  %21 = load i32, i32* %state16, align 8, !dbg !15520
  switch i32 %21, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !15521

sw.bb:                                            ; preds = %if.end15
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15522
  %e1_state = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 53, !dbg !15525
  %23 = load i32, i32* %e1_state, align 4, !dbg !15525
  %cmp17 = icmp ne i32 %23, 1, !dbg !15526
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !15527

if.then18:                                        ; preds = %sw.bb
  store i32 1, i32* %i, align 4, !dbg !15528
  br label %for.cond, !dbg !15531

for.cond:                                         ; preds = %for.inc, %if.then18
  %24 = load i32, i32* %i, align 4, !dbg !15532
  %cmp19 = icmp sle i32 %24, 31, !dbg !15534
  br i1 %cmp19, label %for.body, label %for.end, !dbg !15535

for.body:                                         ; preds = %for.cond
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15536
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %25, i32 0, i32 11, !dbg !15536
  %26 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !15536
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15536
  %28 = load i32, i32* %i, align 4, !dbg !15536
  %shl = shl i32 %28, 1, !dbg !15536
  %or = or i32 %shl, 1, !dbg !15536
  %conv = trunc i32 %or to i8, !dbg !15536
  call void %26(%struct.hfc_multi* %27, i8 zeroext 15, i8 zeroext %conv) #12, !dbg !15536
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15538
  %HFC_wait_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %29, i32 0, i32 17, !dbg !15538
  %30 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug, align 8, !dbg !15538
  %31 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15538
  call void %30(%struct.hfc_multi* %31) #12, !dbg !15538
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15539
  %HFC_outb_nodebug20 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %32, i32 0, i32 11, !dbg !15539
  %33 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug20, align 8, !dbg !15539
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15539
  call void %33(%struct.hfc_multi* %34, i8 zeroext 14, i8 zeroext 2) #12, !dbg !15539
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15540
  %HFC_wait_nodebug21 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 17, !dbg !15540
  %36 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug21, align 8, !dbg !15540
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15540
  call void %36(%struct.hfc_multi* %37) #12, !dbg !15540
  br label %for.inc, !dbg !15541

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !15542
  %inc = add i32 %38, 1, !dbg !15542
  store i32 %inc, i32* %i, align 4, !dbg !15542
  br label %for.cond, !dbg !15543, !llvm.loop !15544

for.end:                                          ; preds = %for.cond
  br label %if.end22, !dbg !15546

if.end22:                                         ; preds = %for.end, %sw.bb
  %39 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15547
  %Flags = getelementptr inbounds %struct.dchannel, %struct.dchannel* %39, i32 0, i32 1, !dbg !15548
  %call23 = call zeroext i1 @test_and_set_bit(i64 6, i64* %Flags) #12, !dbg !15549
  %40 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15550
  %dev24 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %40, i32 0, i32 0, !dbg !15551
  %D25 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev24, i32 0, i32 0, !dbg !15552
  call void @_queue_data(%struct.mISDNchannel* %D25, i32 258, i32 65535, i32 0, i8* null, i32 2592) #12, !dbg !15553
  br label %sw.epilog, !dbg !15554

sw.default:                                       ; preds = %if.end15
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15555
  %e1_state26 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %41, i32 0, i32 53, !dbg !15557
  %42 = load i32, i32* %e1_state26, align 4, !dbg !15557
  %cmp27 = icmp ne i32 %42, 1, !dbg !15558
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !15559

if.then29:                                        ; preds = %sw.default
  br label %if.end129, !dbg !15560

if.end30:                                         ; preds = %sw.default
  %43 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15561
  %Flags31 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %43, i32 0, i32 1, !dbg !15562
  %call32 = call zeroext i1 @test_and_clear_bit(i64 6, i64* %Flags31) #12, !dbg !15563
  %44 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15564
  %dev33 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %44, i32 0, i32 0, !dbg !15565
  %D34 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev33, i32 0, i32 0, !dbg !15566
  call void @_queue_data(%struct.mISDNchannel* %D34, i32 514, i32 65535, i32 0, i8* null, i32 2592) #12, !dbg !15567
  br label %sw.epilog, !dbg !15568

sw.epilog:                                        ; preds = %if.end30, %if.end22
  %45 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15569
  %state35 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %45, i32 0, i32 4, !dbg !15570
  %46 = load i32, i32* %state35, align 8, !dbg !15570
  %47 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15571
  %e1_state36 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %47, i32 0, i32 53, !dbg !15572
  store i32 %46, i32* %e1_state36, align 4, !dbg !15573
  br label %if.end129, !dbg !15574

if.else37:                                        ; preds = %if.end
  %48 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15575
  %dev38 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %48, i32 0, i32 0, !dbg !15578
  %D39 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev38, i32 0, i32 0, !dbg !15579
  %protocol40 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D39, i32 0, i32 1, !dbg !15580
  %49 = load i32, i32* %protocol40, align 8, !dbg !15580
  %cmp41 = icmp eq i32 %49, 1, !dbg !15581
  br i1 %cmp41, label %if.then43, label %if.else66, !dbg !15582

if.then43:                                        ; preds = %if.else37
  %50 = load i32, i32* @debug, align 4, !dbg !15583
  %and44 = and i32 %50, 4194304, !dbg !15586
  %tobool45 = icmp ne i32 %and44, 0, !dbg !15586
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !15587

if.then46:                                        ; preds = %if.then43
  %51 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15588
  %state47 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %51, i32 0, i32 4, !dbg !15589
  %52 = load i32, i32* %state47, align 8, !dbg !15589
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.ph_state_change, i64 0, i64 0), i32 %52) #13, !dbg !15590
  br label %if.end49, !dbg !15590

if.end49:                                         ; preds = %if.then46, %if.then43
  %53 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15591
  %state50 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %53, i32 0, i32 4, !dbg !15592
  %54 = load i32, i32* %state50, align 8, !dbg !15592
  switch i32 %54, label %sw.epilog65 [
    i32 0, label %sw.bb51
    i32 3, label %sw.bb53
    i32 5, label %sw.bb56
    i32 8, label %sw.bb56
    i32 6, label %sw.bb59
    i32 7, label %sw.bb62
  ], !dbg !15593

sw.bb51:                                          ; preds = %if.end49
  %55 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15594
  %l1 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %55, i32 0, i32 5, !dbg !15596
  %56 = load i8*, i8** %l1, align 8, !dbg !15596
  %57 = bitcast i8* %56 to %struct.layer1*, !dbg !15594
  %call52 = call i32 @l1_event(%struct.layer1* %57, i32 36866) #12, !dbg !15597
  br label %sw.epilog65, !dbg !15598

sw.bb53:                                          ; preds = %if.end49
  %58 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15599
  %l154 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %58, i32 0, i32 5, !dbg !15600
  %59 = load i8*, i8** %l154, align 8, !dbg !15600
  %60 = bitcast i8* %59 to %struct.layer1*, !dbg !15599
  %call55 = call i32 @l1_event(%struct.layer1* %60, i32 37378) #12, !dbg !15601
  br label %sw.epilog65, !dbg !15602

sw.bb56:                                          ; preds = %if.end49, %if.end49
  %61 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15603
  %l157 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %61, i32 0, i32 5, !dbg !15604
  %62 = load i8*, i8** %l157, align 8, !dbg !15604
  %63 = bitcast i8* %62 to %struct.layer1*, !dbg !15603
  %call58 = call i32 @l1_event(%struct.layer1* %63, i32 34818) #12, !dbg !15605
  br label %sw.epilog65, !dbg !15606

sw.bb59:                                          ; preds = %if.end49
  %64 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15607
  %l160 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %64, i32 0, i32 5, !dbg !15608
  %65 = load i8*, i8** %l160, align 8, !dbg !15608
  %66 = bitcast i8* %65 to %struct.layer1*, !dbg !15607
  %call61 = call i32 @l1_event(%struct.layer1* %66, i32 33282) #12, !dbg !15609
  br label %sw.epilog65, !dbg !15610

sw.bb62:                                          ; preds = %if.end49
  %67 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15611
  %l163 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %67, i32 0, i32 5, !dbg !15612
  %68 = load i8*, i8** %l163, align 8, !dbg !15612
  %69 = bitcast i8* %68 to %struct.layer1*, !dbg !15611
  %call64 = call i32 @l1_event(%struct.layer1* %69, i32 34050) #12, !dbg !15613
  br label %sw.epilog65, !dbg !15614

sw.epilog65:                                      ; preds = %if.end49, %sw.bb62, %sw.bb59, %sw.bb56, %sw.bb53, %sw.bb51
  br label %if.end128, !dbg !15615

if.else66:                                        ; preds = %if.else37
  %70 = load i32, i32* @debug, align 4, !dbg !15616
  %and67 = and i32 %70, 4194304, !dbg !15619
  %tobool68 = icmp ne i32 %and67, 0, !dbg !15619
  br i1 %tobool68, label %if.then69, label %if.end72, !dbg !15620

if.then69:                                        ; preds = %if.else66
  %71 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15621
  %state70 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %71, i32 0, i32 4, !dbg !15622
  %72 = load i32, i32* %state70, align 8, !dbg !15622
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.ph_state_change, i64 0, i64 0), i32 %72) #13, !dbg !15623
  br label %if.end72, !dbg !15623

if.end72:                                         ; preds = %if.then69, %if.else66
  %73 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15624
  %state73 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %73, i32 0, i32 4, !dbg !15625
  %74 = load i32, i32* %state73, align 8, !dbg !15625
  switch i32 %74, label %sw.epilog127 [
    i32 2, label %sw.bb74
    i32 1, label %sw.bb104
    i32 4, label %sw.bb113
    i32 3, label %sw.bb118
  ], !dbg !15626

sw.bb74:                                          ; preds = %if.end72
  %75 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15627
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %75, i32 0, i32 60, !dbg !15630
  %76 = load i32, i32* %ch, align 4, !dbg !15631
  %idxprom = sext i32 %76 to i64, !dbg !15627
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !15627
  %nt_timer = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 3, !dbg !15632
  %77 = load i32, i32* %nt_timer, align 4, !dbg !15632
  %cmp75 = icmp eq i32 %77, 0, !dbg !15633
  br i1 %cmp75, label %if.then77, label %if.else89, !dbg !15634

if.then77:                                        ; preds = %sw.bb74
  %78 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15635
  %chan78 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %78, i32 0, i32 60, !dbg !15637
  %79 = load i32, i32* %ch, align 4, !dbg !15638
  %idxprom79 = sext i32 %79 to i64, !dbg !15635
  %arrayidx80 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan78, i64 0, i64 %idxprom79, !dbg !15635
  %nt_timer81 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx80, i32 0, i32 3, !dbg !15639
  store i32 -1, i32* %nt_timer81, align 4, !dbg !15640
  %80 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15641
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %80, i32 0, i32 10, !dbg !15641
  %81 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !15641
  %82 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15641
  %83 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15641
  %chan82 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %83, i32 0, i32 60, !dbg !15641
  %84 = load i32, i32* %ch, align 4, !dbg !15641
  %idxprom83 = sext i32 %84 to i64, !dbg !15641
  %arrayidx84 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan82, i64 0, i64 %idxprom83, !dbg !15641
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx84, i32 0, i32 2, !dbg !15641
  %85 = load i32, i32* %port, align 8, !dbg !15641
  %conv85 = trunc i32 %85 to i8, !dbg !15641
  call void %81(%struct.hfc_multi* %82, i8 zeroext 22, i8 zeroext %conv85) #12, !dbg !15641
  call void @__const_udelay(i64 4295) #12, !dbg !15642
  %86 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15647
  %HFC_outb86 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %86, i32 0, i32 10, !dbg !15647
  %87 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb86, align 8, !dbg !15647
  %88 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15647
  call void %87(%struct.hfc_multi* %88, i8 zeroext 48, i8 zeroext 20) #12, !dbg !15647
  call void @__const_udelay(i64 25770) #12, !dbg !15648
  %89 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15653
  %HFC_outb87 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %89, i32 0, i32 10, !dbg !15653
  %90 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb87, align 8, !dbg !15653
  %91 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15653
  call void %90(%struct.hfc_multi* %91, i8 zeroext 48, i8 zeroext 4) #12, !dbg !15653
  %92 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15654
  %state88 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %92, i32 0, i32 4, !dbg !15655
  store i32 4, i32* %state88, align 8, !dbg !15656
  br label %if.end103, !dbg !15657

if.else89:                                        ; preds = %sw.bb74
  %93 = load i32, i32* @poll_timer, align 4, !dbg !15658
  %idxprom90 = sext i32 %93 to i64, !dbg !15660
  %arrayidx91 = getelementptr [8 x i32], [8 x i32]* @nt_t1_count, i64 0, i64 %idxprom90, !dbg !15660
  %94 = load i32, i32* %arrayidx91, align 4, !dbg !15660
  %add = add i32 %94, 1, !dbg !15661
  %95 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15662
  %chan92 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %95, i32 0, i32 60, !dbg !15663
  %96 = load i32, i32* %ch, align 4, !dbg !15664
  %idxprom93 = sext i32 %96 to i64, !dbg !15662
  %arrayidx94 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan92, i64 0, i64 %idxprom93, !dbg !15662
  %nt_timer95 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx94, i32 0, i32 3, !dbg !15665
  store i32 %add, i32* %nt_timer95, align 4, !dbg !15666
  %97 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15667
  %HFC_outb96 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %97, i32 0, i32 10, !dbg !15667
  %98 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb96, align 8, !dbg !15667
  %99 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15667
  %100 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15667
  %chan97 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %100, i32 0, i32 60, !dbg !15667
  %101 = load i32, i32* %ch, align 4, !dbg !15667
  %idxprom98 = sext i32 %101 to i64, !dbg !15667
  %arrayidx99 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan97, i64 0, i64 %idxprom98, !dbg !15667
  %port100 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx99, i32 0, i32 2, !dbg !15667
  %102 = load i32, i32* %port100, align 8, !dbg !15667
  %conv101 = trunc i32 %102 to i8, !dbg !15667
  call void %98(%struct.hfc_multi* %99, i8 zeroext 22, i8 zeroext %conv101) #12, !dbg !15667
  call void @__const_udelay(i64 4295) #12, !dbg !15668
  %103 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15673
  %HFC_outb102 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %103, i32 0, i32 10, !dbg !15673
  %104 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb102, align 8, !dbg !15673
  %105 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15673
  call void %104(%struct.hfc_multi* %105, i8 zeroext 48, i8 zeroext -126) #12, !dbg !15673
  br label %if.end103

if.end103:                                        ; preds = %if.else89, %if.then77
  br label %sw.epilog127, !dbg !15674

sw.bb104:                                         ; preds = %if.end72
  %106 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15675
  %chan105 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %106, i32 0, i32 60, !dbg !15676
  %107 = load i32, i32* %ch, align 4, !dbg !15677
  %idxprom106 = sext i32 %107 to i64, !dbg !15675
  %arrayidx107 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan105, i64 0, i64 %idxprom106, !dbg !15675
  %nt_timer108 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx107, i32 0, i32 3, !dbg !15678
  store i32 -1, i32* %nt_timer108, align 4, !dbg !15679
  %108 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15680
  %Flags109 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %108, i32 0, i32 1, !dbg !15681
  %call110 = call zeroext i1 @test_and_clear_bit(i64 6, i64* %Flags109) #12, !dbg !15682
  %109 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15683
  %dev111 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %109, i32 0, i32 0, !dbg !15684
  %D112 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev111, i32 0, i32 0, !dbg !15685
  call void @_queue_data(%struct.mISDNchannel* %D112, i32 514, i32 65535, i32 0, i8* null, i32 2592) #12, !dbg !15686
  br label %sw.epilog127, !dbg !15687

sw.bb113:                                         ; preds = %if.end72
  %110 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15688
  %chan114 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %110, i32 0, i32 60, !dbg !15689
  %111 = load i32, i32* %ch, align 4, !dbg !15690
  %idxprom115 = sext i32 %111 to i64, !dbg !15688
  %arrayidx116 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan114, i64 0, i64 %idxprom115, !dbg !15688
  %nt_timer117 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx116, i32 0, i32 3, !dbg !15691
  store i32 -1, i32* %nt_timer117, align 4, !dbg !15692
  br label %sw.epilog127, !dbg !15693

sw.bb118:                                         ; preds = %if.end72
  %112 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15694
  %chan119 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %112, i32 0, i32 60, !dbg !15695
  %113 = load i32, i32* %ch, align 4, !dbg !15696
  %idxprom120 = sext i32 %113 to i64, !dbg !15694
  %arrayidx121 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan119, i64 0, i64 %idxprom120, !dbg !15694
  %nt_timer122 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx121, i32 0, i32 3, !dbg !15697
  store i32 -1, i32* %nt_timer122, align 4, !dbg !15698
  %114 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15699
  %Flags123 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %114, i32 0, i32 1, !dbg !15700
  %call124 = call zeroext i1 @test_and_set_bit(i64 6, i64* %Flags123) #12, !dbg !15701
  %115 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !15702
  %dev125 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %115, i32 0, i32 0, !dbg !15703
  %D126 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev125, i32 0, i32 0, !dbg !15704
  call void @_queue_data(%struct.mISDNchannel* %D126, i32 258, i32 65535, i32 0, i8* null, i32 2592) #12, !dbg !15705
  br label %sw.epilog127, !dbg !15706

sw.epilog127:                                     ; preds = %if.end72, %sw.bb118, %sw.bb113, %sw.bb104, %if.end103
  br label %if.end128

if.end128:                                        ; preds = %sw.epilog127, %sw.epilog65
  br label %if.end129

if.end129:                                        ; preds = %if.then, %if.then29, %if.end128, %sw.epilog
  ret void, !dbg !15707
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handle_dmsg(%struct.mISDNchannel* %ch, %struct.sk_buff* %skb) #2 !dbg !15708 {
entry:
  %lock.addr.i208 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i208, metadata !10043, metadata !DIExpression()), !dbg !15709
  %flags.addr.i209 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i209, metadata !10050, metadata !DIExpression()), !dbg !15714
  %tmp.i210 = alloca i32, align 4
  %tmp8.i211 = alloca i32, align 4
  %lock.addr.i206 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i206, metadata !10052, metadata !DIExpression()), !dbg !15715
  %lock.addr.i201 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i201, metadata !10043, metadata !DIExpression()), !dbg !15722
  %flags.addr.i202 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i202, metadata !10050, metadata !DIExpression()), !dbg !15726
  %tmp.i203 = alloca i32, align 4
  %tmp8.i204 = alloca i32, align 4
  %lock.addr.i199 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i199, metadata !10052, metadata !DIExpression()), !dbg !15727
  %lock.addr.i194 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i194, metadata !10043, metadata !DIExpression()), !dbg !15734
  %flags.addr.i195 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i195, metadata !10050, metadata !DIExpression()), !dbg !15737
  %tmp.i196 = alloca i32, align 4
  %tmp8.i197 = alloca i32, align 4
  %lock.addr.i192 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i192, metadata !10043, metadata !DIExpression()), !dbg !15738
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !15741
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !15742
  %retval = alloca i32, align 4
  %ch.addr = alloca %struct.mISDNchannel*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev = alloca %struct.mISDNdevice*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mISDNdevice*, align 8
  %dch = alloca %struct.dchannel*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.dchannel*, align 8
  %hc = alloca %struct.hfc_multi*, align 8
  %hh = alloca %struct.mISDNhead*, align 8
  %ret = alloca i32, align 4
  %id = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %__dummy43 = alloca i64, align 8
  %__dummy244 = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  %__dummy51 = alloca i64, align 8
  %__dummy252 = alloca i64, align 8
  %tmp55 = alloca i32, align 4
  %__dummy109 = alloca i64, align 8
  %__dummy2110 = alloca i64, align 8
  %tmp113 = alloca i32, align 4
  %__dummy117 = alloca i64, align 8
  %__dummy2118 = alloca i64, align 8
  %tmp121 = alloca i32, align 4
  store %struct.mISDNchannel* %ch, %struct.mISDNchannel** %ch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mISDNchannel** %ch.addr, metadata !15749, metadata !DIExpression()), !dbg !15750
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15751, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.declare(metadata %struct.mISDNdevice** %dev, metadata !15753, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15755, metadata !DIExpression()), !dbg !15757
  %0 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !15757
  %1 = bitcast %struct.mISDNchannel* %0 to i8*, !dbg !15757
  store i8* %1, i8** %__mptr, align 8, !dbg !15757
  br label %do.body, !dbg !15757

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15758

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15757
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15757
  %3 = bitcast i8* %add.ptr to %struct.mISDNdevice*, !dbg !15757
  store %struct.mISDNdevice* %3, %struct.mISDNdevice** %tmp, align 8, !dbg !15758
  %4 = load %struct.mISDNdevice*, %struct.mISDNdevice** %tmp, align 8, !dbg !15757
  store %struct.mISDNdevice* %4, %struct.mISDNdevice** %dev, align 8, !dbg !15754
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !15760, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !15762, metadata !DIExpression()), !dbg !15764
  %5 = load %struct.mISDNdevice*, %struct.mISDNdevice** %dev, align 8, !dbg !15764
  %6 = bitcast %struct.mISDNdevice* %5 to i8*, !dbg !15764
  store i8* %6, i8** %__mptr1, align 8, !dbg !15764
  br label %do.body2, !dbg !15764

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !15765

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr1, align 8, !dbg !15764
  %add.ptr5 = getelementptr i8, i8* %7, i64 0, !dbg !15764
  %8 = bitcast i8* %add.ptr5 to %struct.dchannel*, !dbg !15764
  store %struct.dchannel* %8, %struct.dchannel** %tmp4, align 8, !dbg !15765
  %9 = load %struct.dchannel*, %struct.dchannel** %tmp4, align 8, !dbg !15764
  store %struct.dchannel* %9, %struct.dchannel** %dch, align 8, !dbg !15761
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !15767, metadata !DIExpression()), !dbg !15768
  %10 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15769
  %hw = getelementptr inbounds %struct.dchannel, %struct.dchannel* %10, i32 0, i32 6, !dbg !15770
  %11 = load i8*, i8** %hw, align 8, !dbg !15770
  %12 = bitcast i8* %11 to %struct.hfc_multi*, !dbg !15769
  store %struct.hfc_multi* %12, %struct.hfc_multi** %hc, align 8, !dbg !15768
  call void @llvm.dbg.declare(metadata %struct.mISDNhead** %hh, metadata !15771, metadata !DIExpression()), !dbg !15772
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15773
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %13, i32 0, i32 3, !dbg !15773
  %arrayidx = getelementptr [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !15773
  %14 = bitcast i8* %arrayidx to %struct.mISDNhead*, !dbg !15773
  store %struct.mISDNhead* %14, %struct.mISDNhead** %hh, align 8, !dbg !15772
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15774, metadata !DIExpression()), !dbg !15775
  store i32 -22, i32* %ret, align 4, !dbg !15775
  call void @llvm.dbg.declare(metadata i32* %id, metadata !15776, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15778, metadata !DIExpression()), !dbg !15779
  %15 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !15780
  %prim = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %15, i32 0, i32 0, !dbg !15781
  %16 = load i32, i32* %prim, align 1, !dbg !15781
  switch i32 %16, label %sw.epilog [
    i32 8193, label %sw.bb
    i32 257, label %sw.bb36
    i32 513, label %sw.bb99
  ], !dbg !15782

sw.bb:                                            ; preds = %do.end3
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15783
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %17, i32 0, i32 5, !dbg !15785
  %18 = load i32, i32* %len, align 8, !dbg !15785
  %cmp = icmp ult i32 %18, 1, !dbg !15786
  br i1 %cmp, label %if.then, label %if.end, !dbg !15787

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !15788

if.end:                                           ; preds = %sw.bb
  br label %do.body6, !dbg !15789

do.body6:                                         ; preds = %if.end
  br label %do.body7, !dbg !15790

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15791, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15794, metadata !DIExpression()), !dbg !15793
  %cmp8 = icmp eq i64* %__dummy, %__dummy2, !dbg !15793
  %conv = zext i1 %cmp8 to i32, !dbg !15793
  store i32 1, i32* %tmp9, align 4, !dbg !15793
  %19 = load i32, i32* %tmp9, align 4, !dbg !15793
  br label %do.body10, !dbg !15795

do.body10:                                        ; preds = %do.body7
  br label %do.body11, !dbg !15796

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !15797

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !15799, metadata !DIExpression()), !dbg !15802
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !15803, metadata !DIExpression()), !dbg !15802
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !15802
  %conv16 = zext i1 %cmp15 to i32, !dbg !15802
  store i32 1, i32* %tmp17, align 4, !dbg !15802
  %20 = load i32, i32* %tmp17, align 4, !dbg !15802
  %call = call i64 @arch_local_irq_save() #12, !dbg !15804
  store i64 %call, i64* %flags, align 8, !dbg !15804
  br label %do.end18, !dbg !15804

do.end18:                                         ; preds = %do.body12
  br label %do.end19, !dbg !15797

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !15796

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !15805, !srcloc !15806
  br label %do.body21, !dbg !15805

do.body21:                                        ; preds = %do.body20
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15807
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 57, !dbg !15807
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15808
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !15809
  %rlock.i = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !15809
  br label %do.end23, !dbg !15807

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !15805

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !15796

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !15795

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !15790

do.end27:                                         ; preds = %do.end26
  %24 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15810
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15811
  %call28 = call i32 @dchannel_senddata(%struct.dchannel* %24, %struct.sk_buff* %25) #12, !dbg !15812
  store i32 %call28, i32* %ret, align 4, !dbg !15813
  %26 = load i32, i32* %ret, align 4, !dbg !15814
  %cmp29 = icmp sgt i32 %26, 0, !dbg !15815
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !15816

if.then31:                                        ; preds = %do.end27
  %27 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !15817
  %id32 = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %27, i32 0, i32 1, !dbg !15818
  %28 = load i32, i32* %id32, align 1, !dbg !15818
  store i32 %28, i32* %id, align 4, !dbg !15819
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15820
  %30 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15821
  %slot = getelementptr inbounds %struct.dchannel, %struct.dchannel* %30, i32 0, i32 7, !dbg !15822
  %31 = load i32, i32* %slot, align 8, !dbg !15822
  call void @hfcmulti_tx(%struct.hfc_multi* %29, i32 %31) #12, !dbg !15823
  store i32 0, i32* %ret, align 4, !dbg !15824
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15825
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %32, i32 0, i32 10, !dbg !15825
  %33 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !15825
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15825
  call void %33(%struct.hfc_multi* %34, i8 zeroext 15, i8 zeroext 0) #12, !dbg !15825
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15826
  %HFC_wait = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 16, !dbg !15826
  %36 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait, align 8, !dbg !15826
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15826
  call void %36(%struct.hfc_multi* %37) #12, !dbg !15826
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15827
  %lock33 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 57, !dbg !15828
  %39 = load i64, i64* %flags, align 8, !dbg !15829
  store %struct.spinlock* %lock33, %struct.spinlock** %lock.addr.i192, align 8
  store i64 %39, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !15830
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !15830
  store i32 1, i32* %tmp.i, align 4, !dbg !15830
  %40 = load i32, i32* %tmp.i, align 4, !dbg !15830
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !15831
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !15831
  store i32 1, i32* %tmp8.i, align 4, !dbg !15831
  %41 = load i32, i32* %tmp8.i, align 4, !dbg !15831
  %42 = load i64, i64* %flags.addr.i, align 8, !dbg !15832
  call void @arch_local_irq_restore(i64 %42) #14, !dbg !15832
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !15833, !srcloc !10125
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i192, align 8, !dbg !15834
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !15834
  %rlock.i193 = bitcast %union.anon.1* %44 to %struct.raw_spinlock*, !dbg !15834
  %45 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !15835
  %46 = load i32, i32* %id, align 4, !dbg !15836
  call void @queue_ch_frame(%struct.mISDNchannel* %45, i32 24578, i32 %46, %struct.sk_buff* null) #12, !dbg !15837
  br label %if.end35, !dbg !15838

if.else:                                          ; preds = %do.end27
  %47 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15839
  %lock34 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %47, i32 0, i32 57, !dbg !15840
  %48 = load i64, i64* %flags, align 8, !dbg !15841
  store %struct.spinlock* %lock34, %struct.spinlock** %lock.addr.i194, align 8
  store i64 %48, i64* %flags.addr.i195, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !15842
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !15842
  store i32 1, i32* %tmp.i196, align 4, !dbg !15842
  %49 = load i32, i32* %tmp.i196, align 4, !dbg !15842
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !15843
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !15843
  store i32 1, i32* %tmp8.i197, align 4, !dbg !15843
  %50 = load i32, i32* %tmp8.i197, align 4, !dbg !15843
  %51 = load i64, i64* %flags.addr.i195, align 8, !dbg !15844
  call void @arch_local_irq_restore(i64 %51) #14, !dbg !15844
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !15845, !srcloc !10125
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i194, align 8, !dbg !15846
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !15846
  %rlock.i198 = bitcast %union.anon.1* %53 to %struct.raw_spinlock*, !dbg !15846
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then31
  %54 = load i32, i32* %ret, align 4, !dbg !15847
  store i32 %54, i32* %retval, align 4, !dbg !15848
  br label %return, !dbg !15848

sw.bb36:                                          ; preds = %do.end3
  %55 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15849
  %dev37 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %55, i32 0, i32 0, !dbg !15850
  %D = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev37, i32 0, i32 0, !dbg !15851
  %protocol = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D, i32 0, i32 1, !dbg !15852
  %56 = load i32, i32* %protocol, align 8, !dbg !15852
  %cmp38 = icmp ne i32 %56, 1, !dbg !15853
  br i1 %cmp38, label %if.then40, label %if.else95, !dbg !15854

if.then40:                                        ; preds = %sw.bb36
  br label %do.body41, !dbg !15855

do.body41:                                        ; preds = %if.then40
  br label %do.body42, !dbg !15856

do.body42:                                        ; preds = %do.body41
  call void @llvm.dbg.declare(metadata i64* %__dummy43, metadata !15857, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !15860, metadata !DIExpression()), !dbg !15859
  %cmp45 = icmp eq i64* %__dummy43, %__dummy244, !dbg !15859
  %conv46 = zext i1 %cmp45 to i32, !dbg !15859
  store i32 1, i32* %tmp47, align 4, !dbg !15859
  %57 = load i32, i32* %tmp47, align 4, !dbg !15859
  br label %do.body48, !dbg !15861

do.body48:                                        ; preds = %do.body42
  br label %do.body49, !dbg !15862

do.body49:                                        ; preds = %do.body48
  br label %do.body50, !dbg !15863

do.body50:                                        ; preds = %do.body49
  call void @llvm.dbg.declare(metadata i64* %__dummy51, metadata !15865, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.declare(metadata i64* %__dummy252, metadata !15869, metadata !DIExpression()), !dbg !15868
  %cmp53 = icmp eq i64* %__dummy51, %__dummy252, !dbg !15868
  %conv54 = zext i1 %cmp53 to i32, !dbg !15868
  store i32 1, i32* %tmp55, align 4, !dbg !15868
  %58 = load i32, i32* %tmp55, align 4, !dbg !15868
  %call56 = call i64 @arch_local_irq_save() #12, !dbg !15870
  store i64 %call56, i64* %flags, align 8, !dbg !15870
  br label %do.end57, !dbg !15870

do.end57:                                         ; preds = %do.body50
  br label %do.end58, !dbg !15863

do.end58:                                         ; preds = %do.end57
  br label %do.body59, !dbg !15862

do.body59:                                        ; preds = %do.end58
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !15871, !srcloc !15872
  br label %do.body60, !dbg !15871

do.body60:                                        ; preds = %do.body59
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15873
  %lock61 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %59, i32 0, i32 57, !dbg !15873
  store %struct.spinlock* %lock61, %struct.spinlock** %lock.addr.i199, align 8
  %60 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i199, align 8, !dbg !15874
  %61 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %60, i32 0, i32 0, !dbg !15875
  %rlock.i200 = bitcast %union.anon.1* %61 to %struct.raw_spinlock*, !dbg !15875
  br label %do.end63, !dbg !15873

do.end63:                                         ; preds = %do.body60
  br label %do.end64, !dbg !15871

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !15862

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !15861

do.end66:                                         ; preds = %do.end65
  br label %do.end67, !dbg !15856

do.end67:                                         ; preds = %do.end66
  store i32 0, i32* %ret, align 4, !dbg !15876
  %62 = load i32, i32* @debug, align 4, !dbg !15877
  %and = and i32 %62, 2097152, !dbg !15879
  %tobool = icmp ne i32 %and, 0, !dbg !15879
  br i1 %tobool, label %if.then68, label %if.end72, !dbg !15880

if.then68:                                        ; preds = %do.end67
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15881
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %63, i32 0, i32 60, !dbg !15882
  %64 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15883
  %slot69 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %64, i32 0, i32 7, !dbg !15884
  %65 = load i32, i32* %slot69, align 8, !dbg !15884
  %idxprom = sext i32 %65 to i64, !dbg !15881
  %arrayidx70 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !15881
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx70, i32 0, i32 2, !dbg !15885
  %66 = load i32, i32* %port, align 8, !dbg !15885
  %67 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15886
  %ports = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %67, i32 0, i32 5, !dbg !15887
  %68 = load i32, i32* %ports, align 4, !dbg !15887
  %sub = sub i32 %68, 1, !dbg !15888
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.handle_dmsg, i64 0, i64 0), i32 %66, i32 %sub) #13, !dbg !15889
  br label %if.end72, !dbg !15889

if.end72:                                         ; preds = %if.then68, %do.end67
  %69 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15890
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %69, i32 0, i32 4, !dbg !15892
  %70 = load i32, i32* %ctype, align 8, !dbg !15892
  %cmp73 = icmp eq i32 %70, 1, !dbg !15893
  br i1 %cmp73, label %if.then75, label %if.else81, !dbg !15894

if.then75:                                        ; preds = %if.end72
  %71 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15895
  call void @ph_state_change(%struct.dchannel* %71) #12, !dbg !15897
  %72 = load i32, i32* @debug, align 4, !dbg !15898
  %and76 = and i32 %72, 4194304, !dbg !15900
  %tobool77 = icmp ne i32 %and76, 0, !dbg !15900
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !15901

if.then78:                                        ; preds = %if.then75
  %73 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15902
  %state = getelementptr inbounds %struct.dchannel, %struct.dchannel* %73, i32 0, i32 4, !dbg !15903
  %74 = load i32, i32* %state, align 8, !dbg !15903
  %call79 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.handle_dmsg, i64 0, i64 0), i32 %74) #13, !dbg !15904
  br label %if.end80, !dbg !15904

if.end80:                                         ; preds = %if.then78, %if.then75
  br label %if.end93, !dbg !15905

if.else81:                                        ; preds = %if.end72
  %75 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15906
  %HFC_outb82 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %75, i32 0, i32 10, !dbg !15906
  %76 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb82, align 8, !dbg !15906
  %77 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15906
  %78 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15906
  %chan83 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %78, i32 0, i32 60, !dbg !15906
  %79 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15906
  %slot84 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %79, i32 0, i32 7, !dbg !15906
  %80 = load i32, i32* %slot84, align 8, !dbg !15906
  %idxprom85 = sext i32 %80 to i64, !dbg !15906
  %arrayidx86 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan83, i64 0, i64 %idxprom85, !dbg !15906
  %port87 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx86, i32 0, i32 2, !dbg !15906
  %81 = load i32, i32* %port87, align 8, !dbg !15906
  %conv88 = trunc i32 %81 to i8, !dbg !15906
  call void %76(%struct.hfc_multi* %77, i8 zeroext 22, i8 zeroext %conv88) #12, !dbg !15906
  call void @__const_udelay(i64 4295) #12, !dbg !15908
  %82 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15913
  %HFC_outb89 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %82, i32 0, i32 10, !dbg !15913
  %83 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb89, align 8, !dbg !15913
  %84 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15913
  call void %83(%struct.hfc_multi* %84, i8 zeroext 48, i8 zeroext 17) #12, !dbg !15913
  call void @__const_udelay(i64 25770) #12, !dbg !15914
  %85 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15919
  %HFC_outb90 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %85, i32 0, i32 10, !dbg !15919
  %86 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb90, align 8, !dbg !15919
  %87 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15919
  call void %86(%struct.hfc_multi* %87, i8 zeroext 48, i8 zeroext 1) #12, !dbg !15919
  %88 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15920
  %HFC_outb91 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %88, i32 0, i32 10, !dbg !15920
  %89 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb91, align 8, !dbg !15920
  %90 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15920
  call void %89(%struct.hfc_multi* %90, i8 zeroext 48, i8 zeroext 97) #12, !dbg !15920
  %91 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15921
  %state92 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %91, i32 0, i32 4, !dbg !15922
  store i32 1, i32* %state92, align 8, !dbg !15923
  br label %if.end93

if.end93:                                         ; preds = %if.else81, %if.end80
  %92 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15924
  %lock94 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %92, i32 0, i32 57, !dbg !15925
  %93 = load i64, i64* %flags, align 8, !dbg !15926
  store %struct.spinlock* %lock94, %struct.spinlock** %lock.addr.i201, align 8
  store i64 %93, i64* %flags.addr.i202, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !15927
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !15927
  store i32 1, i32* %tmp.i203, align 4, !dbg !15927
  %94 = load i32, i32* %tmp.i203, align 4, !dbg !15927
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !15928
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !15928
  store i32 1, i32* %tmp8.i204, align 4, !dbg !15928
  %95 = load i32, i32* %tmp8.i204, align 4, !dbg !15928
  %96 = load i64, i64* %flags.addr.i202, align 8, !dbg !15929
  call void @arch_local_irq_restore(i64 %96) #14, !dbg !15929
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !15930, !srcloc !10125
  %97 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i201, align 8, !dbg !15931
  %98 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %97, i32 0, i32 0, !dbg !15931
  %rlock.i205 = bitcast %union.anon.1* %98 to %struct.raw_spinlock*, !dbg !15931
  br label %if.end98, !dbg !15932

if.else95:                                        ; preds = %sw.bb36
  %99 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15933
  %l1 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %99, i32 0, i32 5, !dbg !15934
  %100 = load i8*, i8** %l1, align 8, !dbg !15934
  %101 = bitcast i8* %100 to %struct.layer1*, !dbg !15933
  %102 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !15935
  %prim96 = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %102, i32 0, i32 0, !dbg !15936
  %103 = load i32, i32* %prim96, align 1, !dbg !15936
  %call97 = call i32 @l1_event(%struct.layer1* %101, i32 %103) #12, !dbg !15937
  store i32 %call97, i32* %ret, align 4, !dbg !15938
  br label %if.end98

if.end98:                                         ; preds = %if.else95, %if.end93
  br label %sw.epilog, !dbg !15939

sw.bb99:                                          ; preds = %do.end3
  %104 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15940
  %Flags = getelementptr inbounds %struct.dchannel, %struct.dchannel* %104, i32 0, i32 1, !dbg !15941
  %call100 = call zeroext i1 @test_and_clear_bit(i64 3, i64* %Flags) #12, !dbg !15942
  %105 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15943
  %dev101 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %105, i32 0, i32 0, !dbg !15944
  %D102 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev101, i32 0, i32 0, !dbg !15945
  %protocol103 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D102, i32 0, i32 1, !dbg !15946
  %106 = load i32, i32* %protocol103, align 8, !dbg !15946
  %cmp104 = icmp ne i32 %106, 1, !dbg !15947
  br i1 %cmp104, label %if.then106, label %if.else184, !dbg !15948

if.then106:                                       ; preds = %sw.bb99
  br label %do.body107, !dbg !15949

do.body107:                                       ; preds = %if.then106
  br label %do.body108, !dbg !15950

do.body108:                                       ; preds = %do.body107
  call void @llvm.dbg.declare(metadata i64* %__dummy109, metadata !15951, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.declare(metadata i64* %__dummy2110, metadata !15954, metadata !DIExpression()), !dbg !15953
  %cmp111 = icmp eq i64* %__dummy109, %__dummy2110, !dbg !15953
  %conv112 = zext i1 %cmp111 to i32, !dbg !15953
  store i32 1, i32* %tmp113, align 4, !dbg !15953
  %107 = load i32, i32* %tmp113, align 4, !dbg !15953
  br label %do.body114, !dbg !15955

do.body114:                                       ; preds = %do.body108
  br label %do.body115, !dbg !15956

do.body115:                                       ; preds = %do.body114
  br label %do.body116, !dbg !15957

do.body116:                                       ; preds = %do.body115
  call void @llvm.dbg.declare(metadata i64* %__dummy117, metadata !15959, metadata !DIExpression()), !dbg !15962
  call void @llvm.dbg.declare(metadata i64* %__dummy2118, metadata !15963, metadata !DIExpression()), !dbg !15962
  %cmp119 = icmp eq i64* %__dummy117, %__dummy2118, !dbg !15962
  %conv120 = zext i1 %cmp119 to i32, !dbg !15962
  store i32 1, i32* %tmp121, align 4, !dbg !15962
  %108 = load i32, i32* %tmp121, align 4, !dbg !15962
  %call122 = call i64 @arch_local_irq_save() #12, !dbg !15964
  store i64 %call122, i64* %flags, align 8, !dbg !15964
  br label %do.end123, !dbg !15964

do.end123:                                        ; preds = %do.body116
  br label %do.end124, !dbg !15957

do.end124:                                        ; preds = %do.end123
  br label %do.body125, !dbg !15956

do.body125:                                       ; preds = %do.end124
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !15965, !srcloc !15966
  br label %do.body126, !dbg !15965

do.body126:                                       ; preds = %do.body125
  %109 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15967
  %lock127 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %109, i32 0, i32 57, !dbg !15967
  store %struct.spinlock* %lock127, %struct.spinlock** %lock.addr.i206, align 8
  %110 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i206, align 8, !dbg !15968
  %111 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %110, i32 0, i32 0, !dbg !15969
  %rlock.i207 = bitcast %union.anon.1* %111 to %struct.raw_spinlock*, !dbg !15969
  br label %do.end129, !dbg !15967

do.end129:                                        ; preds = %do.body126
  br label %do.end130, !dbg !15965

do.end130:                                        ; preds = %do.end129
  br label %do.end131, !dbg !15956

do.end131:                                        ; preds = %do.end130
  br label %do.end132, !dbg !15955

do.end132:                                        ; preds = %do.end131
  br label %do.end133, !dbg !15950

do.end133:                                        ; preds = %do.end132
  %112 = load i32, i32* @debug, align 4, !dbg !15970
  %and134 = and i32 %112, 2097152, !dbg !15972
  %tobool135 = icmp ne i32 %and134, 0, !dbg !15972
  br i1 %tobool135, label %if.then136, label %if.end145, !dbg !15973

if.then136:                                       ; preds = %do.end133
  %113 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15974
  %chan137 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %113, i32 0, i32 60, !dbg !15975
  %114 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15976
  %slot138 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %114, i32 0, i32 7, !dbg !15977
  %115 = load i32, i32* %slot138, align 8, !dbg !15977
  %idxprom139 = sext i32 %115 to i64, !dbg !15974
  %arrayidx140 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan137, i64 0, i64 %idxprom139, !dbg !15974
  %port141 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx140, i32 0, i32 2, !dbg !15978
  %116 = load i32, i32* %port141, align 8, !dbg !15978
  %117 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15979
  %ports142 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %117, i32 0, i32 5, !dbg !15980
  %118 = load i32, i32* %ports142, align 4, !dbg !15980
  %sub143 = sub i32 %118, 1, !dbg !15981
  %call144 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.handle_dmsg, i64 0, i64 0), i32 %116, i32 %sub143) #13, !dbg !15982
  br label %if.end145, !dbg !15982

if.end145:                                        ; preds = %if.then136, %do.end133
  %119 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15983
  %ctype146 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %119, i32 0, i32 4, !dbg !15985
  %120 = load i32, i32* %ctype146, align 8, !dbg !15985
  %cmp147 = icmp eq i32 %120, 1, !dbg !15986
  br i1 %cmp147, label %if.then149, label %if.else155, !dbg !15987

if.then149:                                       ; preds = %if.end145
  %121 = load i32, i32* @debug, align 4, !dbg !15988
  %and150 = and i32 %121, 2097152, !dbg !15991
  %tobool151 = icmp ne i32 %and150, 0, !dbg !15991
  br i1 %tobool151, label %if.then152, label %if.end154, !dbg !15992

if.then152:                                       ; preds = %if.then149
  %call153 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.handle_dmsg, i64 0, i64 0)) #13, !dbg !15993
  br label %if.end154, !dbg !15993

if.end154:                                        ; preds = %if.then152, %if.then149
  br label %if.end165, !dbg !15994

if.else155:                                       ; preds = %if.end145
  %122 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15995
  %HFC_outb156 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %122, i32 0, i32 10, !dbg !15995
  %123 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb156, align 8, !dbg !15995
  %124 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15995
  %125 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !15995
  %chan157 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %125, i32 0, i32 60, !dbg !15995
  %126 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !15995
  %slot158 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %126, i32 0, i32 7, !dbg !15995
  %127 = load i32, i32* %slot158, align 8, !dbg !15995
  %idxprom159 = sext i32 %127 to i64, !dbg !15995
  %arrayidx160 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan157, i64 0, i64 %idxprom159, !dbg !15995
  %port161 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx160, i32 0, i32 2, !dbg !15995
  %128 = load i32, i32* %port161, align 8, !dbg !15995
  %conv162 = trunc i32 %128 to i8, !dbg !15995
  call void %123(%struct.hfc_multi* %124, i8 zeroext 22, i8 zeroext %conv162) #12, !dbg !15995
  call void @__const_udelay(i64 4295) #12, !dbg !15997
  %129 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16002
  %HFC_outb163 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %129, i32 0, i32 10, !dbg !16002
  %130 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb163, align 8, !dbg !16002
  %131 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16002
  call void %130(%struct.hfc_multi* %131, i8 zeroext 48, i8 zeroext 64) #12, !dbg !16002
  %132 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16003
  %state164 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %132, i32 0, i32 4, !dbg !16004
  store i32 1, i32* %state164, align 8, !dbg !16005
  br label %if.end165

if.end165:                                        ; preds = %if.else155, %if.end154
  %133 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16006
  %squeue = getelementptr inbounds %struct.dchannel, %struct.dchannel* %133, i32 0, i32 11, !dbg !16007
  call void @skb_queue_purge(%struct.sk_buff_head* %squeue) #12, !dbg !16008
  %134 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16009
  %tx_skb = getelementptr inbounds %struct.dchannel, %struct.dchannel* %134, i32 0, i32 13, !dbg !16011
  %135 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !16011
  %tobool166 = icmp ne %struct.sk_buff* %135, null, !dbg !16009
  br i1 %tobool166, label %if.then167, label %if.end170, !dbg !16012

if.then167:                                       ; preds = %if.end165
  %136 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16013
  %tx_skb168 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %136, i32 0, i32 13, !dbg !16013
  %137 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb168, align 8, !dbg !16013
  call void @consume_skb(%struct.sk_buff* %137) #12, !dbg !16013
  %138 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16015
  %tx_skb169 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %138, i32 0, i32 13, !dbg !16016
  store %struct.sk_buff* null, %struct.sk_buff** %tx_skb169, align 8, !dbg !16017
  br label %if.end170, !dbg !16018

if.end170:                                        ; preds = %if.then167, %if.end165
  %139 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16019
  %tx_idx = getelementptr inbounds %struct.dchannel, %struct.dchannel* %139, i32 0, i32 14, !dbg !16020
  store i32 0, i32* %tx_idx, align 8, !dbg !16021
  %140 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16022
  %rx_skb = getelementptr inbounds %struct.dchannel, %struct.dchannel* %140, i32 0, i32 9, !dbg !16024
  %141 = load %struct.sk_buff*, %struct.sk_buff** %rx_skb, align 8, !dbg !16024
  %tobool171 = icmp ne %struct.sk_buff* %141, null, !dbg !16022
  br i1 %tobool171, label %if.then172, label %if.end175, !dbg !16025

if.then172:                                       ; preds = %if.end170
  %142 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16026
  %rx_skb173 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %142, i32 0, i32 9, !dbg !16026
  %143 = load %struct.sk_buff*, %struct.sk_buff** %rx_skb173, align 8, !dbg !16026
  call void @consume_skb(%struct.sk_buff* %143) #12, !dbg !16026
  %144 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16028
  %rx_skb174 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %144, i32 0, i32 9, !dbg !16029
  store %struct.sk_buff* null, %struct.sk_buff** %rx_skb174, align 8, !dbg !16030
  br label %if.end175, !dbg !16031

if.end175:                                        ; preds = %if.then172, %if.end170
  %145 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16032
  %Flags176 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %145, i32 0, i32 1, !dbg !16033
  %call177 = call zeroext i1 @test_and_clear_bit(i64 0, i64* %Flags176) #12, !dbg !16034
  %146 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16035
  %Flags178 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %146, i32 0, i32 1, !dbg !16037
  %call179 = call zeroext i1 @test_and_clear_bit(i64 7, i64* %Flags178) #12, !dbg !16038
  br i1 %call179, label %if.then180, label %if.end182, !dbg !16039

if.then180:                                       ; preds = %if.end175
  %147 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16040
  %timer = getelementptr inbounds %struct.dchannel, %struct.dchannel* %147, i32 0, i32 8, !dbg !16041
  %call181 = call i32 @del_timer(%struct.timer_list* %timer) #12, !dbg !16042
  br label %if.end182, !dbg !16042

if.end182:                                        ; preds = %if.then180, %if.end175
  store i32 0, i32* %ret, align 4, !dbg !16043
  %148 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16044
  %lock183 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %148, i32 0, i32 57, !dbg !16045
  %149 = load i64, i64* %flags, align 8, !dbg !16046
  store %struct.spinlock* %lock183, %struct.spinlock** %lock.addr.i208, align 8
  store i64 %149, i64* %flags.addr.i209, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !16047
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !16047
  store i32 1, i32* %tmp.i210, align 4, !dbg !16047
  %150 = load i32, i32* %tmp.i210, align 4, !dbg !16047
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !16048
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !16048
  store i32 1, i32* %tmp8.i211, align 4, !dbg !16048
  %151 = load i32, i32* %tmp8.i211, align 4, !dbg !16048
  %152 = load i64, i64* %flags.addr.i209, align 8, !dbg !16049
  call void @arch_local_irq_restore(i64 %152) #14, !dbg !16049
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16050, !srcloc !10125
  %153 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i208, align 8, !dbg !16051
  %154 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %153, i32 0, i32 0, !dbg !16051
  %rlock.i212 = bitcast %union.anon.1* %154 to %struct.raw_spinlock*, !dbg !16051
  br label %if.end188, !dbg !16052

if.else184:                                       ; preds = %sw.bb99
  %155 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16053
  %l1185 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %155, i32 0, i32 5, !dbg !16054
  %156 = load i8*, i8** %l1185, align 8, !dbg !16054
  %157 = bitcast i8* %156 to %struct.layer1*, !dbg !16053
  %158 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !16055
  %prim186 = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %158, i32 0, i32 0, !dbg !16056
  %159 = load i32, i32* %prim186, align 1, !dbg !16056
  %call187 = call i32 @l1_event(%struct.layer1* %157, i32 %159) #12, !dbg !16057
  store i32 %call187, i32* %ret, align 4, !dbg !16058
  br label %if.end188

if.end188:                                        ; preds = %if.else184, %if.end182
  br label %sw.epilog, !dbg !16059

sw.epilog:                                        ; preds = %do.end3, %if.end188, %if.end98, %if.then
  %160 = load i32, i32* %ret, align 4, !dbg !16060
  %tobool189 = icmp ne i32 %160, 0, !dbg !16060
  br i1 %tobool189, label %if.end191, label %if.then190, !dbg !16062

if.then190:                                       ; preds = %sw.epilog
  %161 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16063
  call void @consume_skb(%struct.sk_buff* %161) #12, !dbg !16063
  br label %if.end191, !dbg !16063

if.end191:                                        ; preds = %if.then190, %sw.epilog
  %162 = load i32, i32* %ret, align 4, !dbg !16064
  store i32 %162, i32* %retval, align 4, !dbg !16065
  br label %return, !dbg !16065

return:                                           ; preds = %if.end191, %if.end35
  %163 = load i32, i32* %retval, align 4, !dbg !16066
  ret i32 %163, !dbg !16066
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hfcm_dctrl(%struct.mISDNchannel* %ch, i32 %cmd, i8* %arg) #2 !dbg !16067 {
entry:
  %lock.addr.i93 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i93, metadata !10052, metadata !DIExpression()), !dbg !16068
  %lock.addr.i88 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i88, metadata !10043, metadata !DIExpression()), !dbg !16076
  %flags.addr.i89 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i89, metadata !10050, metadata !DIExpression()), !dbg !16079
  %tmp.i90 = alloca i32, align 4
  %tmp8.i91 = alloca i32, align 4
  %lock.addr.i86 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i86, metadata !10043, metadata !DIExpression()), !dbg !16080
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !16082
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !16083
  %ch.addr = alloca %struct.mISDNchannel*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %dev = alloca %struct.mISDNdevice*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mISDNdevice*, align 8
  %dch = alloca %struct.dchannel*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.dchannel*, align 8
  %hc = alloca %struct.hfc_multi*, align 8
  %rq = alloca %struct.channel_req*, align 8
  %err = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp19 = alloca i32, align 4
  %__dummy23 = alloca i64, align 8
  %__dummy224 = alloca i64, align 8
  %tmp27 = alloca i32, align 4
  %__dummy51 = alloca i64, align 8
  %__dummy252 = alloca i64, align 8
  %tmp55 = alloca i32, align 4
  %__dummy59 = alloca i64, align 8
  %__dummy260 = alloca i64, align 8
  %tmp63 = alloca i32, align 4
  store %struct.mISDNchannel* %ch, %struct.mISDNchannel** %ch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mISDNchannel** %ch.addr, metadata !16090, metadata !DIExpression()), !dbg !16091
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !16092, metadata !DIExpression()), !dbg !16093
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16094, metadata !DIExpression()), !dbg !16095
  call void @llvm.dbg.declare(metadata %struct.mISDNdevice** %dev, metadata !16096, metadata !DIExpression()), !dbg !16097
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16098, metadata !DIExpression()), !dbg !16100
  %0 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16100
  %1 = bitcast %struct.mISDNchannel* %0 to i8*, !dbg !16100
  store i8* %1, i8** %__mptr, align 8, !dbg !16100
  br label %do.body, !dbg !16100

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16101

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !16100
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !16100
  %3 = bitcast i8* %add.ptr to %struct.mISDNdevice*, !dbg !16100
  store %struct.mISDNdevice* %3, %struct.mISDNdevice** %tmp, align 8, !dbg !16101
  %4 = load %struct.mISDNdevice*, %struct.mISDNdevice** %tmp, align 8, !dbg !16100
  store %struct.mISDNdevice* %4, %struct.mISDNdevice** %dev, align 8, !dbg !16097
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !16103, metadata !DIExpression()), !dbg !16104
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !16105, metadata !DIExpression()), !dbg !16107
  %5 = load %struct.mISDNdevice*, %struct.mISDNdevice** %dev, align 8, !dbg !16107
  %6 = bitcast %struct.mISDNdevice* %5 to i8*, !dbg !16107
  store i8* %6, i8** %__mptr1, align 8, !dbg !16107
  br label %do.body2, !dbg !16107

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !16108

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr1, align 8, !dbg !16107
  %add.ptr5 = getelementptr i8, i8* %7, i64 0, !dbg !16107
  %8 = bitcast i8* %add.ptr5 to %struct.dchannel*, !dbg !16107
  store %struct.dchannel* %8, %struct.dchannel** %tmp4, align 8, !dbg !16108
  %9 = load %struct.dchannel*, %struct.dchannel** %tmp4, align 8, !dbg !16107
  store %struct.dchannel* %9, %struct.dchannel** %dch, align 8, !dbg !16104
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !16110, metadata !DIExpression()), !dbg !16111
  %10 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16112
  %hw = getelementptr inbounds %struct.dchannel, %struct.dchannel* %10, i32 0, i32 6, !dbg !16113
  %11 = load i8*, i8** %hw, align 8, !dbg !16113
  %12 = bitcast i8* %11 to %struct.hfc_multi*, !dbg !16112
  store %struct.hfc_multi* %12, %struct.hfc_multi** %hc, align 8, !dbg !16111
  call void @llvm.dbg.declare(metadata %struct.channel_req** %rq, metadata !16114, metadata !DIExpression()), !dbg !16128
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16129, metadata !DIExpression()), !dbg !16130
  store i32 0, i32* %err, align 4, !dbg !16130
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16131, metadata !DIExpression()), !dbg !16132
  %13 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16133
  %debug = getelementptr inbounds %struct.dchannel, %struct.dchannel* %13, i32 0, i32 15, !dbg !16135
  %14 = load i32, i32* %debug, align 4, !dbg !16135
  %and = and i32 %14, 1, !dbg !16136
  %tobool = icmp ne i32 %and, 0, !dbg !16136
  br i1 %tobool, label %if.then, label %if.end, !dbg !16137

if.then:                                          ; preds = %do.end3
  %15 = load i32, i32* %cmd.addr, align 4, !dbg !16138
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !16139
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.hfcm_dctrl, i64 0, i64 0), i32 %15, i8* %16) #13, !dbg !16140
  br label %if.end, !dbg !16140

if.end:                                           ; preds = %if.then, %do.end3
  %17 = load i32, i32* %cmd.addr, align 4, !dbg !16141
  switch i32 %17, label %sw.default78 [
    i32 256, label %sw.bb
    i32 512, label %sw.bb41
    i32 768, label %sw.bb48
  ], !dbg !16142

sw.bb:                                            ; preds = %if.end
  %18 = load i8*, i8** %arg.addr, align 8, !dbg !16143
  %19 = bitcast i8* %18 to %struct.channel_req*, !dbg !16143
  store %struct.channel_req* %19, %struct.channel_req** %rq, align 8, !dbg !16144
  %20 = load %struct.channel_req*, %struct.channel_req** %rq, align 8, !dbg !16145
  %protocol = getelementptr inbounds %struct.channel_req, %struct.channel_req* %20, i32 0, i32 0, !dbg !16146
  %21 = load i32, i32* %protocol, align 8, !dbg !16146
  switch i32 %21, label %sw.default [
    i32 1, label %sw.bb6
    i32 2, label %sw.bb6
    i32 3, label %sw.bb10
    i32 4, label %sw.bb10
  ], !dbg !16147

sw.bb6:                                           ; preds = %sw.bb, %sw.bb
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16148
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 4, !dbg !16150
  %23 = load i32, i32* %ctype, align 8, !dbg !16150
  %cmp = icmp eq i32 %23, 1, !dbg !16151
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !16152

if.then7:                                         ; preds = %sw.bb6
  store i32 -22, i32* %err, align 4, !dbg !16153
  br label %sw.epilog, !dbg !16155

if.end8:                                          ; preds = %sw.bb6
  %24 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16156
  %25 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16157
  %26 = load %struct.channel_req*, %struct.channel_req** %rq, align 8, !dbg !16158
  %call9 = call i32 @open_dchannel(%struct.hfc_multi* %24, %struct.dchannel* %25, %struct.channel_req* %26) #12, !dbg !16159
  store i32 %call9, i32* %err, align 4, !dbg !16160
  br label %sw.epilog, !dbg !16161

sw.bb10:                                          ; preds = %sw.bb, %sw.bb
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16162
  %ctype11 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %27, i32 0, i32 4, !dbg !16164
  %28 = load i32, i32* %ctype11, align 8, !dbg !16164
  %cmp12 = icmp ne i32 %28, 1, !dbg !16165
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !16166

if.then13:                                        ; preds = %sw.bb10
  store i32 -22, i32* %err, align 4, !dbg !16167
  br label %sw.epilog, !dbg !16169

if.end14:                                         ; preds = %sw.bb10
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16170
  %30 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16171
  %31 = load %struct.channel_req*, %struct.channel_req** %rq, align 8, !dbg !16172
  %call15 = call i32 @open_dchannel(%struct.hfc_multi* %29, %struct.dchannel* %30, %struct.channel_req* %31) #12, !dbg !16173
  store i32 %call15, i32* %err, align 4, !dbg !16174
  br label %sw.epilog, !dbg !16175

sw.default:                                       ; preds = %sw.bb
  br label %do.body16, !dbg !16176

do.body16:                                        ; preds = %sw.default
  br label %do.body17, !dbg !16177

do.body17:                                        ; preds = %do.body16
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16178, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16181, metadata !DIExpression()), !dbg !16180
  %cmp18 = icmp eq i64* %__dummy, %__dummy2, !dbg !16180
  %conv = zext i1 %cmp18 to i32, !dbg !16180
  store i32 1, i32* %tmp19, align 4, !dbg !16180
  %32 = load i32, i32* %tmp19, align 4, !dbg !16180
  br label %do.body20, !dbg !16182

do.body20:                                        ; preds = %do.body17
  br label %do.body21, !dbg !16183

do.body21:                                        ; preds = %do.body20
  br label %do.body22, !dbg !16184

do.body22:                                        ; preds = %do.body21
  call void @llvm.dbg.declare(metadata i64* %__dummy23, metadata !16186, metadata !DIExpression()), !dbg !16189
  call void @llvm.dbg.declare(metadata i64* %__dummy224, metadata !16190, metadata !DIExpression()), !dbg !16189
  %cmp25 = icmp eq i64* %__dummy23, %__dummy224, !dbg !16189
  %conv26 = zext i1 %cmp25 to i32, !dbg !16189
  store i32 1, i32* %tmp27, align 4, !dbg !16189
  %33 = load i32, i32* %tmp27, align 4, !dbg !16189
  %call28 = call i64 @arch_local_irq_save() #12, !dbg !16191
  store i64 %call28, i64* %flags, align 8, !dbg !16191
  br label %do.end29, !dbg !16191

do.end29:                                         ; preds = %do.body22
  br label %do.end30, !dbg !16184

do.end30:                                         ; preds = %do.end29
  br label %do.body31, !dbg !16183

do.body31:                                        ; preds = %do.end30
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16192, !srcloc !16193
  br label %do.body32, !dbg !16192

do.body32:                                        ; preds = %do.body31
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16194
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %34, i32 0, i32 57, !dbg !16194
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16195
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !16196
  %rlock.i = bitcast %union.anon.1* %36 to %struct.raw_spinlock*, !dbg !16196
  br label %do.end34, !dbg !16194

do.end34:                                         ; preds = %do.body32
  br label %do.end35, !dbg !16192

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !16183

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !16182

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !16177

do.end38:                                         ; preds = %do.end37
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16197
  %38 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16198
  %39 = load %struct.channel_req*, %struct.channel_req** %rq, align 8, !dbg !16199
  %call39 = call i32 @open_bchannel(%struct.hfc_multi* %37, %struct.dchannel* %38, %struct.channel_req* %39) #12, !dbg !16200
  store i32 %call39, i32* %err, align 4, !dbg !16201
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16202
  %lock40 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %40, i32 0, i32 57, !dbg !16203
  %41 = load i64, i64* %flags, align 8, !dbg !16204
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i88, align 8
  store i64 %41, i64* %flags.addr.i89, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !16205
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !16205
  store i32 1, i32* %tmp.i90, align 4, !dbg !16205
  %42 = load i32, i32* %tmp.i90, align 4, !dbg !16205
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !16206
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !16206
  store i32 1, i32* %tmp8.i91, align 4, !dbg !16206
  %43 = load i32, i32* %tmp8.i91, align 4, !dbg !16206
  %44 = load i64, i64* %flags.addr.i89, align 8, !dbg !16207
  call void @arch_local_irq_restore(i64 %44) #14, !dbg !16207
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16208, !srcloc !10125
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i88, align 8, !dbg !16209
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !16209
  %rlock.i92 = bitcast %union.anon.1* %46 to %struct.raw_spinlock*, !dbg !16209
  br label %sw.epilog, !dbg !16210

sw.epilog:                                        ; preds = %do.end38, %if.end14, %if.then13, %if.end8, %if.then7
  br label %sw.epilog85, !dbg !16211

sw.bb41:                                          ; preds = %if.end
  %47 = load i32, i32* @debug, align 4, !dbg !16212
  %and42 = and i32 %47, 2, !dbg !16214
  %tobool43 = icmp ne i32 %and42, 0, !dbg !16214
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !16215

if.then44:                                        ; preds = %sw.bb41
  %48 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16216
  %dev45 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %48, i32 0, i32 0, !dbg !16217
  %id = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev45, i32 0, i32 1, !dbg !16218
  %49 = load i32, i32* %id, align 8, !dbg !16218
  %50 = call i8* @llvm.returnaddress(i32 0), !dbg !16219
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.hfcm_dctrl, i64 0, i64 0), i32 %49, i8* %50) #13, !dbg !16220
  br label %if.end47, !dbg !16220

if.end47:                                         ; preds = %if.then44, %sw.bb41
  call void @module_put(%struct.module* null) #12, !dbg !16221
  br label %sw.epilog85, !dbg !16222

sw.bb48:                                          ; preds = %if.end
  br label %do.body49, !dbg !16223

do.body49:                                        ; preds = %sw.bb48
  br label %do.body50, !dbg !16224

do.body50:                                        ; preds = %do.body49
  call void @llvm.dbg.declare(metadata i64* %__dummy51, metadata !16225, metadata !DIExpression()), !dbg !16227
  call void @llvm.dbg.declare(metadata i64* %__dummy252, metadata !16228, metadata !DIExpression()), !dbg !16227
  %cmp53 = icmp eq i64* %__dummy51, %__dummy252, !dbg !16227
  %conv54 = zext i1 %cmp53 to i32, !dbg !16227
  store i32 1, i32* %tmp55, align 4, !dbg !16227
  %51 = load i32, i32* %tmp55, align 4, !dbg !16227
  br label %do.body56, !dbg !16229

do.body56:                                        ; preds = %do.body50
  br label %do.body57, !dbg !16230

do.body57:                                        ; preds = %do.body56
  br label %do.body58, !dbg !16231

do.body58:                                        ; preds = %do.body57
  call void @llvm.dbg.declare(metadata i64* %__dummy59, metadata !16233, metadata !DIExpression()), !dbg !16236
  call void @llvm.dbg.declare(metadata i64* %__dummy260, metadata !16237, metadata !DIExpression()), !dbg !16236
  %cmp61 = icmp eq i64* %__dummy59, %__dummy260, !dbg !16236
  %conv62 = zext i1 %cmp61 to i32, !dbg !16236
  store i32 1, i32* %tmp63, align 4, !dbg !16236
  %52 = load i32, i32* %tmp63, align 4, !dbg !16236
  %call64 = call i64 @arch_local_irq_save() #12, !dbg !16238
  store i64 %call64, i64* %flags, align 8, !dbg !16238
  br label %do.end65, !dbg !16238

do.end65:                                         ; preds = %do.body58
  br label %do.end66, !dbg !16231

do.end66:                                         ; preds = %do.end65
  br label %do.body67, !dbg !16230

do.body67:                                        ; preds = %do.end66
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16239, !srcloc !16240
  br label %do.body68, !dbg !16239

do.body68:                                        ; preds = %do.body67
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16241
  %lock69 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %53, i32 0, i32 57, !dbg !16241
  store %struct.spinlock* %lock69, %struct.spinlock** %lock.addr.i93, align 8
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i93, align 8, !dbg !16242
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !16243
  %rlock.i94 = bitcast %union.anon.1* %55 to %struct.raw_spinlock*, !dbg !16243
  br label %do.end71, !dbg !16241

do.end71:                                         ; preds = %do.body68
  br label %do.end72, !dbg !16239

do.end72:                                         ; preds = %do.end71
  br label %do.end73, !dbg !16230

do.end73:                                         ; preds = %do.end72
  br label %do.end74, !dbg !16229

do.end74:                                         ; preds = %do.end73
  br label %do.end75, !dbg !16224

do.end75:                                         ; preds = %do.end74
  %56 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16244
  %57 = load i8*, i8** %arg.addr, align 8, !dbg !16245
  %58 = bitcast i8* %57 to %struct.mISDN_ctrl_req*, !dbg !16245
  %call76 = call i32 @channel_dctrl(%struct.dchannel* %56, %struct.mISDN_ctrl_req* %58) #12, !dbg !16246
  store i32 %call76, i32* %err, align 4, !dbg !16247
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16248
  %lock77 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %59, i32 0, i32 57, !dbg !16249
  %60 = load i64, i64* %flags, align 8, !dbg !16250
  store %struct.spinlock* %lock77, %struct.spinlock** %lock.addr.i86, align 8
  store i64 %60, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !16251
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !16251
  store i32 1, i32* %tmp.i, align 4, !dbg !16251
  %61 = load i32, i32* %tmp.i, align 4, !dbg !16251
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !16252
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !16252
  store i32 1, i32* %tmp8.i, align 4, !dbg !16252
  %62 = load i32, i32* %tmp8.i, align 4, !dbg !16252
  %63 = load i64, i64* %flags.addr.i, align 8, !dbg !16253
  call void @arch_local_irq_restore(i64 %63) #14, !dbg !16253
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16254, !srcloc !10125
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i86, align 8, !dbg !16255
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !16255
  %rlock.i87 = bitcast %union.anon.1* %65 to %struct.raw_spinlock*, !dbg !16255
  br label %sw.epilog85, !dbg !16256

sw.default78:                                     ; preds = %if.end
  %66 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !16257
  %debug79 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %66, i32 0, i32 15, !dbg !16259
  %67 = load i32, i32* %debug79, align 4, !dbg !16259
  %and80 = and i32 %67, 1, !dbg !16260
  %tobool81 = icmp ne i32 %and80, 0, !dbg !16260
  br i1 %tobool81, label %if.then82, label %if.end84, !dbg !16261

if.then82:                                        ; preds = %sw.default78
  %68 = load i32, i32* %cmd.addr, align 4, !dbg !16262
  %call83 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.hfcm_dctrl, i64 0, i64 0), i32 %68) #13, !dbg !16263
  br label %if.end84, !dbg !16263

if.end84:                                         ; preds = %if.then82, %sw.default78
  store i32 -22, i32* %err, align 4, !dbg !16264
  br label %sw.epilog85, !dbg !16265

sw.epilog85:                                      ; preds = %if.end84, %do.end75, %if.end47, %sw.epilog
  %69 = load i32, i32* %err, align 4, !dbg !16266
  ret i32 %69, !dbg !16267
}

; Function Attrs: noredzone
declare dso_local i32 @mISDN_initbchannel(%struct.bchannel*, i16 zeroext, i16 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handle_bmsg(%struct.mISDNchannel* %ch, %struct.sk_buff* %skb) #2 !dbg !16268 {
entry:
  %lock.addr.i169 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i169, metadata !10043, metadata !DIExpression()), !dbg !16269
  %flags.addr.i170 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i170, metadata !10050, metadata !DIExpression()), !dbg !16272
  %tmp.i171 = alloca i32, align 4
  %tmp8.i172 = alloca i32, align 4
  %lock.addr.i167 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i167, metadata !10052, metadata !DIExpression()), !dbg !16273
  %lock.addr.i162 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i162, metadata !10043, metadata !DIExpression()), !dbg !16280
  %flags.addr.i163 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i163, metadata !10050, metadata !DIExpression()), !dbg !16282
  %tmp.i164 = alloca i32, align 4
  %tmp8.i165 = alloca i32, align 4
  %lock.addr.i160 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i160, metadata !10052, metadata !DIExpression()), !dbg !16283
  %lock.addr.i158 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i158, metadata !10043, metadata !DIExpression()), !dbg !16290
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !16292
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !16293
  %retval = alloca i32, align 4
  %ch.addr = alloca %struct.mISDNchannel*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %bch = alloca %struct.bchannel*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.bchannel*, align 8
  %hc = alloca %struct.hfc_multi*, align 8
  %ret = alloca i32, align 4
  %hh = alloca %struct.mISDNhead*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  %__dummy44 = alloca i64, align 8
  %__dummy245 = alloca i64, align 8
  %tmp48 = alloca i32, align 4
  %__dummy112 = alloca i64, align 8
  %__dummy2113 = alloca i64, align 8
  %tmp116 = alloca i32, align 4
  %__dummy120 = alloca i64, align 8
  %__dummy2121 = alloca i64, align 8
  %tmp124 = alloca i32, align 4
  store %struct.mISDNchannel* %ch, %struct.mISDNchannel** %ch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mISDNchannel** %ch.addr, metadata !16300, metadata !DIExpression()), !dbg !16301
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16302, metadata !DIExpression()), !dbg !16303
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !16304, metadata !DIExpression()), !dbg !16305
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16306, metadata !DIExpression()), !dbg !16308
  %0 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16308
  %1 = bitcast %struct.mISDNchannel* %0 to i8*, !dbg !16308
  store i8* %1, i8** %__mptr, align 8, !dbg !16308
  br label %do.body, !dbg !16308

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16309

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !16308
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !16308
  %3 = bitcast i8* %add.ptr to %struct.bchannel*, !dbg !16308
  store %struct.bchannel* %3, %struct.bchannel** %tmp, align 8, !dbg !16309
  %4 = load %struct.bchannel*, %struct.bchannel** %tmp, align 8, !dbg !16308
  store %struct.bchannel* %4, %struct.bchannel** %bch, align 8, !dbg !16305
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !16311, metadata !DIExpression()), !dbg !16312
  %5 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16313
  %hw = getelementptr inbounds %struct.bchannel, %struct.bchannel* %5, i32 0, i32 5, !dbg !16314
  %6 = load i8*, i8** %hw, align 8, !dbg !16314
  %7 = bitcast i8* %6 to %struct.hfc_multi*, !dbg !16313
  store %struct.hfc_multi* %7, %struct.hfc_multi** %hc, align 8, !dbg !16312
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16315, metadata !DIExpression()), !dbg !16316
  store i32 -22, i32* %ret, align 4, !dbg !16316
  call void @llvm.dbg.declare(metadata %struct.mISDNhead** %hh, metadata !16317, metadata !DIExpression()), !dbg !16318
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16319
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %8, i32 0, i32 3, !dbg !16319
  %arrayidx = getelementptr [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !16319
  %9 = bitcast i8* %arrayidx to %struct.mISDNhead*, !dbg !16319
  store %struct.mISDNhead* %9, %struct.mISDNhead** %hh, align 8, !dbg !16318
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16320, metadata !DIExpression()), !dbg !16321
  %10 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !16322
  %prim = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %10, i32 0, i32 0, !dbg !16323
  %11 = load i32, i32* %prim, align 1, !dbg !16323
  switch i32 %11, label %sw.epilog154 [
    i32 8193, label %sw.bb
    i32 257, label %sw.bb28
    i32 2049, label %sw.bb109
    i32 513, label %sw.bb153
  ], !dbg !16324

sw.bb:                                            ; preds = %do.end
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16325
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %12, i32 0, i32 5, !dbg !16327
  %13 = load i32, i32* %len, align 8, !dbg !16327
  %tobool = icmp ne i32 %13, 0, !dbg !16325
  br i1 %tobool, label %if.end, label %if.then, !dbg !16328

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog154, !dbg !16329

if.end:                                           ; preds = %sw.bb
  br label %do.body1, !dbg !16330

do.body1:                                         ; preds = %if.end
  br label %do.body2, !dbg !16331

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16332, metadata !DIExpression()), !dbg !16334
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16335, metadata !DIExpression()), !dbg !16334
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16334
  %conv = zext i1 %cmp to i32, !dbg !16334
  store i32 1, i32* %tmp3, align 4, !dbg !16334
  %14 = load i32, i32* %tmp3, align 4, !dbg !16334
  br label %do.body4, !dbg !16336

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !16337

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !16338

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !16340, metadata !DIExpression()), !dbg !16343
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !16344, metadata !DIExpression()), !dbg !16343
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !16343
  %conv10 = zext i1 %cmp9 to i32, !dbg !16343
  store i32 1, i32* %tmp11, align 4, !dbg !16343
  %15 = load i32, i32* %tmp11, align 4, !dbg !16343
  %call = call i64 @arch_local_irq_save() #12, !dbg !16345
  store i64 %call, i64* %flags, align 8, !dbg !16345
  br label %do.end12, !dbg !16345

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !16338

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !16337

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16346, !srcloc !16347
  br label %do.body15, !dbg !16346

do.body15:                                        ; preds = %do.body14
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16348
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %16, i32 0, i32 57, !dbg !16348
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16349
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !16350
  %rlock.i = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !16350
  br label %do.end17, !dbg !16348

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !16346

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !16337

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !16336

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !16331

do.end21:                                         ; preds = %do.end20
  %19 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16351
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16352
  %call22 = call i32 @bchannel_senddata(%struct.bchannel* %19, %struct.sk_buff* %20) #12, !dbg !16353
  store i32 %call22, i32* %ret, align 4, !dbg !16354
  %21 = load i32, i32* %ret, align 4, !dbg !16355
  %cmp23 = icmp sgt i32 %21, 0, !dbg !16357
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !16358

if.then25:                                        ; preds = %do.end21
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16359
  %23 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16361
  %slot = getelementptr inbounds %struct.bchannel, %struct.bchannel* %23, i32 0, i32 6, !dbg !16362
  %24 = load i32, i32* %slot, align 8, !dbg !16362
  call void @hfcmulti_tx(%struct.hfc_multi* %22, i32 %24) #12, !dbg !16363
  store i32 0, i32* %ret, align 4, !dbg !16364
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16365
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %25, i32 0, i32 11, !dbg !16365
  %26 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !16365
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16365
  call void %26(%struct.hfc_multi* %27, i8 zeroext 15, i8 zeroext 0) #12, !dbg !16365
  %28 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16366
  %HFC_wait_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %28, i32 0, i32 17, !dbg !16366
  %29 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug, align 8, !dbg !16366
  %30 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16366
  call void %29(%struct.hfc_multi* %30) #12, !dbg !16366
  br label %if.end26, !dbg !16367

if.end26:                                         ; preds = %if.then25, %do.end21
  %31 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16368
  %lock27 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %31, i32 0, i32 57, !dbg !16369
  %32 = load i64, i64* %flags, align 8, !dbg !16370
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i158, align 8
  store i64 %32, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !16371
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !16371
  store i32 1, i32* %tmp.i, align 4, !dbg !16371
  %33 = load i32, i32* %tmp.i, align 4, !dbg !16371
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !16372
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !16372
  store i32 1, i32* %tmp8.i, align 4, !dbg !16372
  %34 = load i32, i32* %tmp8.i, align 4, !dbg !16372
  %35 = load i64, i64* %flags.addr.i, align 8, !dbg !16373
  call void @arch_local_irq_restore(i64 %35) #14, !dbg !16373
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16374, !srcloc !10125
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i158, align 8, !dbg !16375
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !16375
  %rlock.i159 = bitcast %union.anon.1* %37 to %struct.raw_spinlock*, !dbg !16375
  %38 = load i32, i32* %ret, align 4, !dbg !16376
  store i32 %38, i32* %retval, align 4, !dbg !16377
  br label %return, !dbg !16377

sw.bb28:                                          ; preds = %do.end
  %39 = load i32, i32* @debug, align 4, !dbg !16378
  %and = and i32 %39, 2097152, !dbg !16380
  %tobool29 = icmp ne i32 %and, 0, !dbg !16380
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !16381

if.then30:                                        ; preds = %sw.bb28
  %40 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16382
  %slot31 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %40, i32 0, i32 6, !dbg !16383
  %41 = load i32, i32* %slot31, align 8, !dbg !16383
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.handle_bmsg, i64 0, i64 0), i32 %41) #13, !dbg !16384
  br label %if.end33, !dbg !16384

if.end33:                                         ; preds = %if.then30, %sw.bb28
  br label %do.body34, !dbg !16385

do.body34:                                        ; preds = %if.end33
  br label %do.body35, !dbg !16386

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !16387, metadata !DIExpression()), !dbg !16389
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !16390, metadata !DIExpression()), !dbg !16389
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !16389
  %conv39 = zext i1 %cmp38 to i32, !dbg !16389
  store i32 1, i32* %tmp40, align 4, !dbg !16389
  %42 = load i32, i32* %tmp40, align 4, !dbg !16389
  br label %do.body41, !dbg !16391

do.body41:                                        ; preds = %do.body35
  br label %do.body42, !dbg !16392

do.body42:                                        ; preds = %do.body41
  br label %do.body43, !dbg !16393

do.body43:                                        ; preds = %do.body42
  call void @llvm.dbg.declare(metadata i64* %__dummy44, metadata !16395, metadata !DIExpression()), !dbg !16398
  call void @llvm.dbg.declare(metadata i64* %__dummy245, metadata !16399, metadata !DIExpression()), !dbg !16398
  %cmp46 = icmp eq i64* %__dummy44, %__dummy245, !dbg !16398
  %conv47 = zext i1 %cmp46 to i32, !dbg !16398
  store i32 1, i32* %tmp48, align 4, !dbg !16398
  %43 = load i32, i32* %tmp48, align 4, !dbg !16398
  %call49 = call i64 @arch_local_irq_save() #12, !dbg !16400
  store i64 %call49, i64* %flags, align 8, !dbg !16400
  br label %do.end50, !dbg !16400

do.end50:                                         ; preds = %do.body43
  br label %do.end51, !dbg !16393

do.end51:                                         ; preds = %do.end50
  br label %do.body52, !dbg !16392

do.body52:                                        ; preds = %do.end51
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16401, !srcloc !16402
  br label %do.body53, !dbg !16401

do.body53:                                        ; preds = %do.body52
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16403
  %lock54 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %44, i32 0, i32 57, !dbg !16403
  store %struct.spinlock* %lock54, %struct.spinlock** %lock.addr.i160, align 8
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i160, align 8, !dbg !16404
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !16405
  %rlock.i161 = bitcast %union.anon.1* %46 to %struct.raw_spinlock*, !dbg !16405
  br label %do.end56, !dbg !16403

do.end56:                                         ; preds = %do.body53
  br label %do.end57, !dbg !16401

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !16392

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !16391

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !16386

do.end60:                                         ; preds = %do.end59
  %47 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16406
  %Flags = getelementptr inbounds %struct.bchannel, %struct.bchannel* %47, i32 0, i32 2, !dbg !16408
  %call61 = call zeroext i1 @test_and_set_bit(i64 6, i64* %Flags) #12, !dbg !16409
  br i1 %call61, label %if.else, label %if.then62, !dbg !16410

if.then62:                                        ; preds = %do.end60
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16411
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %48, i32 0, i32 60, !dbg !16413
  %49 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16414
  %slot63 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %49, i32 0, i32 6, !dbg !16415
  %50 = load i32, i32* %slot63, align 8, !dbg !16415
  %idxprom = sext i32 %50 to i64, !dbg !16411
  %arrayidx64 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !16411
  %txpending = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx64, i32 0, i32 18, !dbg !16416
  store i32 0, i32* %txpending, align 4, !dbg !16417
  %51 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16418
  %52 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16419
  %slot65 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %52, i32 0, i32 6, !dbg !16420
  %53 = load i32, i32* %slot65, align 8, !dbg !16420
  %54 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16421
  %protocol = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %54, i32 0, i32 1, !dbg !16422
  %55 = load i32, i32* %protocol, align 8, !dbg !16422
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16423
  %chan66 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %56, i32 0, i32 60, !dbg !16424
  %57 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16425
  %slot67 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %57, i32 0, i32 6, !dbg !16426
  %58 = load i32, i32* %slot67, align 8, !dbg !16426
  %idxprom68 = sext i32 %58 to i64, !dbg !16423
  %arrayidx69 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan66, i64 0, i64 %idxprom68, !dbg !16423
  %slot_tx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx69, i32 0, i32 13, !dbg !16427
  %59 = load i32, i32* %slot_tx, align 8, !dbg !16427
  %60 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16428
  %chan70 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %60, i32 0, i32 60, !dbg !16429
  %61 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16430
  %slot71 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %61, i32 0, i32 6, !dbg !16431
  %62 = load i32, i32* %slot71, align 8, !dbg !16431
  %idxprom72 = sext i32 %62 to i64, !dbg !16428
  %arrayidx73 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan70, i64 0, i64 %idxprom72, !dbg !16428
  %bank_tx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx73, i32 0, i32 14, !dbg !16432
  %63 = load i32, i32* %bank_tx, align 4, !dbg !16432
  %64 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16433
  %chan74 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %64, i32 0, i32 60, !dbg !16434
  %65 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16435
  %slot75 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %65, i32 0, i32 6, !dbg !16436
  %66 = load i32, i32* %slot75, align 8, !dbg !16436
  %idxprom76 = sext i32 %66 to i64, !dbg !16433
  %arrayidx77 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan74, i64 0, i64 %idxprom76, !dbg !16433
  %slot_rx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx77, i32 0, i32 15, !dbg !16437
  %67 = load i32, i32* %slot_rx, align 8, !dbg !16437
  %68 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16438
  %chan78 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %68, i32 0, i32 60, !dbg !16439
  %69 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16440
  %slot79 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %69, i32 0, i32 6, !dbg !16441
  %70 = load i32, i32* %slot79, align 8, !dbg !16441
  %idxprom80 = sext i32 %70 to i64, !dbg !16438
  %arrayidx81 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan78, i64 0, i64 %idxprom80, !dbg !16438
  %bank_rx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx81, i32 0, i32 16, !dbg !16442
  %71 = load i32, i32* %bank_rx, align 4, !dbg !16442
  %call82 = call i32 @mode_hfcmulti(%struct.hfc_multi* %51, i32 %53, i32 %55, i32 %59, i32 %63, i32 %67, i32 %71) #12, !dbg !16443
  store i32 %call82, i32* %ret, align 4, !dbg !16444
  %72 = load i32, i32* %ret, align 4, !dbg !16445
  %tobool83 = icmp ne i32 %72, 0, !dbg !16445
  br i1 %tobool83, label %if.end103, label %if.then84, !dbg !16447

if.then84:                                        ; preds = %if.then62
  %73 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16448
  %protocol85 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %73, i32 0, i32 1, !dbg !16451
  %74 = load i32, i32* %protocol85, align 8, !dbg !16451
  %cmp86 = icmp eq i32 %74, 33, !dbg !16452
  br i1 %cmp86, label %land.lhs.true, label %if.end102, !dbg !16453

land.lhs.true:                                    ; preds = %if.then84
  %75 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16454
  %dtmf = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %75, i32 0, i32 35, !dbg !16455
  %76 = load i32, i32* %dtmf, align 8, !dbg !16455
  %tobool88 = icmp ne i32 %76, 0, !dbg !16454
  br i1 %tobool88, label %if.end102, label %land.lhs.true89, !dbg !16456

land.lhs.true89:                                  ; preds = %land.lhs.true
  %77 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16457
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %77, i32 0, i32 31, !dbg !16458
  %call90 = call zeroext i1 @test_bit(i64 6, i64* %chip) #12, !dbg !16459
  br i1 %call90, label %if.then92, label %if.end102, !dbg !16460

if.then92:                                        ; preds = %land.lhs.true89
  %78 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16461
  %dtmf93 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %78, i32 0, i32 35, !dbg !16463
  store i32 1, i32* %dtmf93, align 8, !dbg !16464
  %79 = load i32, i32* @debug, align 4, !dbg !16465
  %and94 = and i32 %79, 33554432, !dbg !16467
  %tobool95 = icmp ne i32 %and94, 0, !dbg !16467
  br i1 %tobool95, label %if.then96, label %if.end98, !dbg !16468

if.then96:                                        ; preds = %if.then92
  %call97 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.handle_bmsg, i64 0, i64 0)) #13, !dbg !16469
  br label %if.end98, !dbg !16469

if.end98:                                         ; preds = %if.then96, %if.then92
  %80 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16470
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %80, i32 0, i32 10, !dbg !16470
  %81 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !16470
  %82 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16470
  %83 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16470
  %hw99 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %83, i32 0, i32 30, !dbg !16470
  %r_dtmf = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw99, i32 0, i32 6, !dbg !16470
  %84 = load i8, i8* %r_dtmf, align 2, !dbg !16470
  %conv100 = zext i8 %84 to i32, !dbg !16470
  %or = or i32 %conv100, 64, !dbg !16470
  %conv101 = trunc i32 %or to i8, !dbg !16470
  call void %81(%struct.hfc_multi* %82, i8 zeroext 28, i8 zeroext %conv101) #12, !dbg !16470
  br label %if.end102, !dbg !16471

if.end102:                                        ; preds = %if.end98, %land.lhs.true89, %land.lhs.true, %if.then84
  br label %if.end103, !dbg !16472

if.end103:                                        ; preds = %if.end102, %if.then62
  br label %if.end104, !dbg !16473

if.else:                                          ; preds = %do.end60
  store i32 0, i32* %ret, align 4, !dbg !16474
  br label %if.end104

if.end104:                                        ; preds = %if.else, %if.end103
  %85 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16475
  %lock105 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %85, i32 0, i32 57, !dbg !16476
  %86 = load i64, i64* %flags, align 8, !dbg !16477
  store %struct.spinlock* %lock105, %struct.spinlock** %lock.addr.i162, align 8
  store i64 %86, i64* %flags.addr.i163, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !16478
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !16478
  store i32 1, i32* %tmp.i164, align 4, !dbg !16478
  %87 = load i32, i32* %tmp.i164, align 4, !dbg !16478
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !16479
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !16479
  store i32 1, i32* %tmp8.i165, align 4, !dbg !16479
  %88 = load i32, i32* %tmp8.i165, align 4, !dbg !16479
  %89 = load i64, i64* %flags.addr.i163, align 8, !dbg !16480
  call void @arch_local_irq_restore(i64 %89) #14, !dbg !16480
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16481, !srcloc !10125
  %90 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i162, align 8, !dbg !16482
  %91 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %90, i32 0, i32 0, !dbg !16482
  %rlock.i166 = bitcast %union.anon.1* %91 to %struct.raw_spinlock*, !dbg !16482
  %92 = load i32, i32* %ret, align 4, !dbg !16483
  %tobool106 = icmp ne i32 %92, 0, !dbg !16483
  br i1 %tobool106, label %if.end108, label %if.then107, !dbg !16485

if.then107:                                       ; preds = %if.end104
  %93 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16486
  call void @_queue_data(%struct.mISDNchannel* %93, i32 258, i32 65535, i32 0, i8* null, i32 3264) #12, !dbg !16487
  br label %if.end108, !dbg !16487

if.end108:                                        ; preds = %if.then107, %if.end104
  br label %sw.epilog154, !dbg !16488

sw.bb109:                                         ; preds = %do.end
  br label %do.body110, !dbg !16489

do.body110:                                       ; preds = %sw.bb109
  br label %do.body111, !dbg !16490

do.body111:                                       ; preds = %do.body110
  call void @llvm.dbg.declare(metadata i64* %__dummy112, metadata !16491, metadata !DIExpression()), !dbg !16493
  call void @llvm.dbg.declare(metadata i64* %__dummy2113, metadata !16494, metadata !DIExpression()), !dbg !16493
  %cmp114 = icmp eq i64* %__dummy112, %__dummy2113, !dbg !16493
  %conv115 = zext i1 %cmp114 to i32, !dbg !16493
  store i32 1, i32* %tmp116, align 4, !dbg !16493
  %94 = load i32, i32* %tmp116, align 4, !dbg !16493
  br label %do.body117, !dbg !16495

do.body117:                                       ; preds = %do.body111
  br label %do.body118, !dbg !16496

do.body118:                                       ; preds = %do.body117
  br label %do.body119, !dbg !16497

do.body119:                                       ; preds = %do.body118
  call void @llvm.dbg.declare(metadata i64* %__dummy120, metadata !16499, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.declare(metadata i64* %__dummy2121, metadata !16503, metadata !DIExpression()), !dbg !16502
  %cmp122 = icmp eq i64* %__dummy120, %__dummy2121, !dbg !16502
  %conv123 = zext i1 %cmp122 to i32, !dbg !16502
  store i32 1, i32* %tmp124, align 4, !dbg !16502
  %95 = load i32, i32* %tmp124, align 4, !dbg !16502
  %call125 = call i64 @arch_local_irq_save() #12, !dbg !16504
  store i64 %call125, i64* %flags, align 8, !dbg !16504
  br label %do.end126, !dbg !16504

do.end126:                                        ; preds = %do.body119
  br label %do.end127, !dbg !16497

do.end127:                                        ; preds = %do.end126
  br label %do.body128, !dbg !16496

do.body128:                                       ; preds = %do.end127
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16505, !srcloc !16506
  br label %do.body129, !dbg !16505

do.body129:                                       ; preds = %do.body128
  %96 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16507
  %lock130 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %96, i32 0, i32 57, !dbg !16507
  store %struct.spinlock* %lock130, %struct.spinlock** %lock.addr.i167, align 8
  %97 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i167, align 8, !dbg !16508
  %98 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %97, i32 0, i32 0, !dbg !16509
  %rlock.i168 = bitcast %union.anon.1* %98 to %struct.raw_spinlock*, !dbg !16509
  br label %do.end132, !dbg !16507

do.end132:                                        ; preds = %do.body129
  br label %do.end133, !dbg !16505

do.end133:                                        ; preds = %do.end132
  br label %do.end134, !dbg !16496

do.end134:                                        ; preds = %do.end133
  br label %do.end135, !dbg !16495

do.end135:                                        ; preds = %do.end134
  br label %do.end136, !dbg !16490

do.end136:                                        ; preds = %do.end135
  %99 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !16510
  %id = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %99, i32 0, i32 1, !dbg !16511
  %100 = load i32, i32* %id, align 1, !dbg !16511
  switch i32 %100, label %sw.default [
    i32 9731, label %sw.bb137
    i32 9732, label %sw.bb144
  ], !dbg !16512

sw.bb137:                                         ; preds = %do.end136
  %101 = load i32, i32* @debug, align 4, !dbg !16513
  %and138 = and i32 %101, 2097152, !dbg !16516
  %tobool139 = icmp ne i32 %and138, 0, !dbg !16516
  br i1 %tobool139, label %if.then140, label %if.end143, !dbg !16517

if.then140:                                       ; preds = %sw.bb137
  %102 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16518
  %len141 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %102, i32 0, i32 5, !dbg !16519
  %103 = load i32, i32* %len141, align 8, !dbg !16519
  %call142 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.handle_bmsg, i64 0, i64 0), i32 %103) #13, !dbg !16520
  br label %if.end143, !dbg !16520

if.end143:                                        ; preds = %if.then140, %sw.bb137
  store i32 0, i32* %ret, align 4, !dbg !16521
  br label %sw.epilog, !dbg !16522

sw.bb144:                                         ; preds = %do.end136
  %104 = load i32, i32* @debug, align 4, !dbg !16523
  %and145 = and i32 %104, 2097152, !dbg !16525
  %tobool146 = icmp ne i32 %and145, 0, !dbg !16525
  br i1 %tobool146, label %if.then147, label %if.end149, !dbg !16526

if.then147:                                       ; preds = %sw.bb144
  %call148 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.handle_bmsg, i64 0, i64 0)) #13, !dbg !16527
  br label %if.end149, !dbg !16527

if.end149:                                        ; preds = %if.then147, %sw.bb144
  store i32 0, i32* %ret, align 4, !dbg !16528
  br label %sw.epilog, !dbg !16529

sw.default:                                       ; preds = %do.end136
  %105 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !16530
  %id150 = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %105, i32 0, i32 1, !dbg !16531
  %106 = load i32, i32* %id150, align 1, !dbg !16531
  %call151 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.handle_bmsg, i64 0, i64 0), i32 %106) #13, !dbg !16532
  store i32 -22, i32* %ret, align 4, !dbg !16533
  br label %sw.epilog, !dbg !16534

sw.epilog:                                        ; preds = %sw.default, %if.end149, %if.end143
  %107 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16535
  %lock152 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %107, i32 0, i32 57, !dbg !16536
  %108 = load i64, i64* %flags, align 8, !dbg !16537
  store %struct.spinlock* %lock152, %struct.spinlock** %lock.addr.i169, align 8
  store i64 %108, i64* %flags.addr.i170, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !16538
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !16538
  store i32 1, i32* %tmp.i171, align 4, !dbg !16538
  %109 = load i32, i32* %tmp.i171, align 4, !dbg !16538
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !16539
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !16539
  store i32 1, i32* %tmp8.i172, align 4, !dbg !16539
  %110 = load i32, i32* %tmp8.i172, align 4, !dbg !16539
  %111 = load i64, i64* %flags.addr.i170, align 8, !dbg !16540
  call void @arch_local_irq_restore(i64 %111) #14, !dbg !16540
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16541, !srcloc !10125
  %112 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i169, align 8, !dbg !16542
  %113 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %112, i32 0, i32 0, !dbg !16542
  %rlock.i173 = bitcast %union.anon.1* %113 to %struct.raw_spinlock*, !dbg !16542
  br label %sw.epilog154, !dbg !16543

sw.bb153:                                         ; preds = %do.end
  %114 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16544
  call void @deactivate_bchannel(%struct.bchannel* %114) #12, !dbg !16545
  %115 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16546
  call void @_queue_data(%struct.mISDNchannel* %115, i32 514, i32 65535, i32 0, i8* null, i32 3264) #12, !dbg !16547
  store i32 0, i32* %ret, align 4, !dbg !16548
  br label %sw.epilog154, !dbg !16549

sw.epilog154:                                     ; preds = %do.end, %sw.bb153, %sw.epilog, %if.end108, %if.then
  %116 = load i32, i32* %ret, align 4, !dbg !16550
  %tobool155 = icmp ne i32 %116, 0, !dbg !16550
  br i1 %tobool155, label %if.end157, label %if.then156, !dbg !16552

if.then156:                                       ; preds = %sw.epilog154
  %117 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16553
  call void @consume_skb(%struct.sk_buff* %117) #12, !dbg !16553
  br label %if.end157, !dbg !16553

if.end157:                                        ; preds = %if.then156, %sw.epilog154
  %118 = load i32, i32* %ret, align 4, !dbg !16554
  store i32 %118, i32* %retval, align 4, !dbg !16555
  br label %return, !dbg !16555

return:                                           ; preds = %if.end157, %if.end26
  %119 = load i32, i32* %retval, align 4, !dbg !16556
  ret i32 %119, !dbg !16556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hfcm_bctrl(%struct.mISDNchannel* %ch, i32 %cmd, i8* %arg) #2 !dbg !16557 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !10043, metadata !DIExpression()), !dbg !16558
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !16561
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !16562
  %ch.addr = alloca %struct.mISDNchannel*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %bch = alloca %struct.bchannel*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.bchannel*, align 8
  %hc = alloca %struct.hfc_multi*, align 8
  %err = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp5 = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.mISDNchannel* %ch, %struct.mISDNchannel** %ch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mISDNchannel** %ch.addr, metadata !16569, metadata !DIExpression()), !dbg !16570
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !16571, metadata !DIExpression()), !dbg !16572
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !16573, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !16575, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16577, metadata !DIExpression()), !dbg !16579
  %0 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16579
  %1 = bitcast %struct.mISDNchannel* %0 to i8*, !dbg !16579
  store i8* %1, i8** %__mptr, align 8, !dbg !16579
  br label %do.body, !dbg !16579

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16580

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !16579
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !16579
  %3 = bitcast i8* %add.ptr to %struct.bchannel*, !dbg !16579
  store %struct.bchannel* %3, %struct.bchannel** %tmp, align 8, !dbg !16580
  %4 = load %struct.bchannel*, %struct.bchannel** %tmp, align 8, !dbg !16579
  store %struct.bchannel* %4, %struct.bchannel** %bch, align 8, !dbg !16576
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !16582, metadata !DIExpression()), !dbg !16583
  %5 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16584
  %hw = getelementptr inbounds %struct.bchannel, %struct.bchannel* %5, i32 0, i32 5, !dbg !16585
  %6 = load i8*, i8** %hw, align 8, !dbg !16585
  %7 = bitcast i8* %6 to %struct.hfc_multi*, !dbg !16584
  store %struct.hfc_multi* %7, %struct.hfc_multi** %hc, align 8, !dbg !16583
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16586, metadata !DIExpression()), !dbg !16587
  store i32 -22, i32* %err, align 4, !dbg !16587
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16588, metadata !DIExpression()), !dbg !16589
  %8 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16590
  %debug = getelementptr inbounds %struct.bchannel, %struct.bchannel* %8, i32 0, i32 21, !dbg !16592
  %9 = load i32, i32* %debug, align 8, !dbg !16592
  %and = and i32 %9, 1, !dbg !16593
  %tobool = icmp ne i32 %and, 0, !dbg !16593
  br i1 %tobool, label %if.then, label %if.end, !dbg !16594

if.then:                                          ; preds = %do.end
  %10 = load i32, i32* %cmd.addr, align 4, !dbg !16595
  %11 = load i8*, i8** %arg.addr, align 8, !dbg !16596
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.hfcm_bctrl, i64 0, i64 0), i32 %10, i8* %11) #13, !dbg !16597
  br label %if.end, !dbg !16597

if.end:                                           ; preds = %if.then, %do.end
  %12 = load i32, i32* %cmd.addr, align 4, !dbg !16598
  switch i32 %12, label %sw.default [
    i32 512, label %sw.bb
    i32 768, label %sw.bb2
  ], !dbg !16599

sw.bb:                                            ; preds = %if.end
  %13 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16600
  %Flags = getelementptr inbounds %struct.bchannel, %struct.bchannel* %13, i32 0, i32 2, !dbg !16601
  %call1 = call zeroext i1 @test_and_clear_bit(i64 5, i64* %Flags) #12, !dbg !16602
  %14 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16603
  call void @deactivate_bchannel(%struct.bchannel* %14) #12, !dbg !16604
  %15 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16605
  %protocol = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %15, i32 0, i32 1, !dbg !16606
  store i32 0, i32* %protocol, align 8, !dbg !16607
  %16 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16608
  %peer = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %16, i32 0, i32 6, !dbg !16609
  store %struct.mISDNchannel* null, %struct.mISDNchannel** %peer, align 8, !dbg !16610
  call void @module_put(%struct.module* null) #12, !dbg !16611
  store i32 0, i32* %err, align 4, !dbg !16612
  br label %sw.epilog, !dbg !16613

sw.bb2:                                           ; preds = %if.end
  br label %do.body3, !dbg !16614

do.body3:                                         ; preds = %sw.bb2
  br label %do.body4, !dbg !16615

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16616, metadata !DIExpression()), !dbg !16618
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16619, metadata !DIExpression()), !dbg !16618
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16618
  %conv = zext i1 %cmp to i32, !dbg !16618
  store i32 1, i32* %tmp5, align 4, !dbg !16618
  %17 = load i32, i32* %tmp5, align 4, !dbg !16618
  br label %do.body6, !dbg !16620

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !16621

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !16622

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !16624, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !16628, metadata !DIExpression()), !dbg !16627
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !16627
  %conv12 = zext i1 %cmp11 to i32, !dbg !16627
  store i32 1, i32* %tmp13, align 4, !dbg !16627
  %18 = load i32, i32* %tmp13, align 4, !dbg !16627
  %call14 = call i64 @arch_local_irq_save() #12, !dbg !16629
  store i64 %call14, i64* %flags, align 8, !dbg !16629
  br label %do.end15, !dbg !16629

do.end15:                                         ; preds = %do.body8
  br label %do.end16, !dbg !16622

do.end16:                                         ; preds = %do.end15
  br label %do.body17, !dbg !16621

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16630, !srcloc !16631
  br label %do.body18, !dbg !16630

do.body18:                                        ; preds = %do.body17
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16632
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %19, i32 0, i32 57, !dbg !16632
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16633
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !16634
  %rlock.i = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !16634
  br label %do.end20, !dbg !16632

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !16630

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !16621

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !16620

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !16615

do.end24:                                         ; preds = %do.end23
  %22 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !16635
  %23 = load i8*, i8** %arg.addr, align 8, !dbg !16636
  %24 = bitcast i8* %23 to %struct.mISDN_ctrl_req*, !dbg !16636
  %call25 = call i32 @channel_bctrl(%struct.bchannel* %22, %struct.mISDN_ctrl_req* %24) #12, !dbg !16637
  store i32 %call25, i32* %err, align 4, !dbg !16638
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !16639
  %lock26 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %25, i32 0, i32 57, !dbg !16640
  %26 = load i64, i64* %flags, align 8, !dbg !16641
  store %struct.spinlock* %lock26, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !16642
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !16642
  store i32 1, i32* %tmp.i, align 4, !dbg !16642
  %27 = load i32, i32* %tmp.i, align 4, !dbg !16642
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !16643
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !16643
  store i32 1, i32* %tmp8.i, align 4, !dbg !16643
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !16643
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !16644
  call void @arch_local_irq_restore(i64 %29) #14, !dbg !16644
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !16645, !srcloc !10125
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !16646
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !16646
  %rlock.i29 = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !16646
  br label %sw.epilog, !dbg !16647

sw.default:                                       ; preds = %if.end
  %32 = load i32, i32* %cmd.addr, align 4, !dbg !16648
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.hfcm_bctrl, i64 0, i64 0), i32 %32) #13, !dbg !16649
  br label %sw.epilog, !dbg !16650

sw.epilog:                                        ; preds = %sw.default, %do.end24, %sw.bb
  %33 = load i32, i32* %err, align 4, !dbg !16651
  ret i32 %33, !dbg !16652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !16653 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !16654, metadata !DIExpression()), !dbg !16655
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !16656, metadata !DIExpression()), !dbg !16657
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !16658
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !16659
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !16660
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !16661
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16661
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #12, !dbg !16662
  ret void, !dbg !16663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_channelmap(i32 %nr, i8* %map) #2 !dbg !16664 {
entry:
  %nr.addr = alloca i32, align 4
  %map.addr = alloca i8*, align 8
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !16667, metadata !DIExpression()), !dbg !16668
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !16669, metadata !DIExpression()), !dbg !16670
  %0 = load i32, i32* %nr.addr, align 4, !dbg !16671
  %and = and i32 %0, 7, !dbg !16672
  %shl = shl i32 1, %and, !dbg !16673
  %1 = load i8*, i8** %map.addr, align 8, !dbg !16674
  %2 = load i32, i32* %nr.addr, align 4, !dbg !16675
  %shr = lshr i32 %2, 3, !dbg !16676
  %idxprom = zext i32 %shr to i64, !dbg !16674
  %arrayidx = getelementptr i8, i8* %1, i64 %idxprom, !dbg !16674
  %3 = load i8, i8* %arrayidx, align 1, !dbg !16677
  %conv = zext i8 %3 to i32, !dbg !16677
  %or = or i32 %conv, %shl, !dbg !16677
  %conv1 = trunc i32 %or to i8, !dbg !16677
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !16677
  ret void, !dbg !16678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_e1_port_hw(%struct.hfc_multi* %hc, %struct.hm_map* %m) #2 !dbg !16679 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %m.addr = alloca %struct.hm_map*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !16682, metadata !DIExpression()), !dbg !16683
  store %struct.hm_map* %m, %struct.hm_map** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hm_map** %m.addr, metadata !16684, metadata !DIExpression()), !dbg !16685
  %0 = load i32, i32* @Port_cnt, align 4, !dbg !16686
  %idxprom = sext i32 %0 to i64, !dbg !16688
  %arrayidx = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom, !dbg !16688
  %1 = load i32, i32* %arrayidx, align 4, !dbg !16688
  %and = and i32 %1, 1, !dbg !16689
  %tobool = icmp ne i32 %and, 0, !dbg !16689
  br i1 %tobool, label %if.then, label %if.end12, !dbg !16690

if.then:                                          ; preds = %entry
  %2 = load %struct.hm_map*, %struct.hm_map** %m.addr, align 8, !dbg !16691
  %opticalsupport = getelementptr inbounds %struct.hm_map, %struct.hm_map* %2, i32 0, i32 6, !dbg !16694
  %3 = load i32, i32* %opticalsupport, align 8, !dbg !16694
  %tobool1 = icmp ne i32 %3, 0, !dbg !16691
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !16695

if.then2:                                         ; preds = %if.then
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.177, i64 0, i64 0)) #13, !dbg !16696
  br label %if.end11, !dbg !16698

if.else:                                          ; preds = %if.then
  %4 = load i32, i32* @debug, align 4, !dbg !16699
  %and3 = and i32 %4, 262144, !dbg !16702
  %tobool4 = icmp ne i32 %and3, 0, !dbg !16702
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16703

if.then5:                                         ; preds = %if.else
  %5 = load i32, i32* @HFC_cnt, align 4, !dbg !16704
  %add = add i32 %5, 1, !dbg !16705
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.178, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %add, i32 1) #13, !dbg !16706
  br label %if.end, !dbg !16706

if.end:                                           ; preds = %if.then5, %if.else
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16707
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 60, !dbg !16708
  %7 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16709
  %dnum = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %7, i32 0, i32 46, !dbg !16710
  %arrayidx7 = getelementptr [32 x i8], [32 x i8]* %dnum, i64 0, i64 0, !dbg !16709
  %8 = load i8, i8* %arrayidx7, align 4, !dbg !16709
  %idxprom8 = zext i8 %8 to i64, !dbg !16707
  %arrayidx9 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom8, !dbg !16707
  %cfg = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx9, i32 0, i32 10, !dbg !16711
  %call10 = call zeroext i1 @test_and_set_bit(i64 4, i64* %cfg) #12, !dbg !16712
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then2
  br label %if.end12, !dbg !16713

if.end12:                                         ; preds = %if.end11, %entry
  %9 = load i32, i32* @Port_cnt, align 4, !dbg !16714
  %idxprom13 = sext i32 %9 to i64, !dbg !16716
  %arrayidx14 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom13, !dbg !16716
  %10 = load i32, i32* %arrayidx14, align 4, !dbg !16716
  %and15 = and i32 %10, 4, !dbg !16717
  %tobool16 = icmp ne i32 %and15, 0, !dbg !16717
  br i1 %tobool16, label %if.then17, label %if.end31, !dbg !16718

if.then17:                                        ; preds = %if.end12
  %11 = load i32, i32* @debug, align 4, !dbg !16719
  %and18 = and i32 %11, 262144, !dbg !16722
  %tobool19 = icmp ne i32 %and18, 0, !dbg !16722
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !16723

if.then20:                                        ; preds = %if.then17
  %12 = load i32, i32* @HFC_cnt, align 4, !dbg !16724
  %add21 = add i32 %12, 1, !dbg !16725
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.179, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %add21, i32 1) #13, !dbg !16726
  br label %if.end23, !dbg !16726

if.end23:                                         ; preds = %if.then20, %if.then17
  %13 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16727
  %chan24 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %13, i32 0, i32 60, !dbg !16728
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16729
  %dnum25 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %14, i32 0, i32 46, !dbg !16730
  %arrayidx26 = getelementptr [32 x i8], [32 x i8]* %dnum25, i64 0, i64 0, !dbg !16729
  %15 = load i8, i8* %arrayidx26, align 4, !dbg !16729
  %idxprom27 = zext i8 %15 to i64, !dbg !16727
  %arrayidx28 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan24, i64 0, i64 %idxprom27, !dbg !16727
  %cfg29 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx28, i32 0, i32 10, !dbg !16731
  %call30 = call zeroext i1 @test_and_set_bit(i64 5, i64* %cfg29) #12, !dbg !16732
  br label %if.end31, !dbg !16733

if.end31:                                         ; preds = %if.end23, %if.end12
  %16 = load i32, i32* @Port_cnt, align 4, !dbg !16734
  %idxprom32 = sext i32 %16 to i64, !dbg !16736
  %arrayidx33 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom32, !dbg !16736
  %17 = load i32, i32* %arrayidx33, align 4, !dbg !16736
  %and34 = and i32 %17, 8, !dbg !16737
  %tobool35 = icmp ne i32 %and34, 0, !dbg !16737
  br i1 %tobool35, label %if.then36, label %if.end50, !dbg !16738

if.then36:                                        ; preds = %if.end31
  %18 = load i32, i32* @debug, align 4, !dbg !16739
  %and37 = and i32 %18, 262144, !dbg !16742
  %tobool38 = icmp ne i32 %and37, 0, !dbg !16742
  br i1 %tobool38, label %if.then39, label %if.end42, !dbg !16743

if.then39:                                        ; preds = %if.then36
  %19 = load i32, i32* @HFC_cnt, align 4, !dbg !16744
  %add40 = add i32 %19, 1, !dbg !16745
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.180, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %add40, i32 1) #13, !dbg !16746
  br label %if.end42, !dbg !16746

if.end42:                                         ; preds = %if.then39, %if.then36
  %20 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16747
  %chan43 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %20, i32 0, i32 60, !dbg !16748
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16749
  %dnum44 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 46, !dbg !16750
  %arrayidx45 = getelementptr [32 x i8], [32 x i8]* %dnum44, i64 0, i64 0, !dbg !16749
  %22 = load i8, i8* %arrayidx45, align 4, !dbg !16749
  %idxprom46 = zext i8 %22 to i64, !dbg !16747
  %arrayidx47 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan43, i64 0, i64 %idxprom46, !dbg !16747
  %cfg48 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx47, i32 0, i32 10, !dbg !16751
  %call49 = call zeroext i1 @test_and_set_bit(i64 6, i64* %cfg48) #12, !dbg !16752
  br label %if.end50, !dbg !16753

if.end50:                                         ; preds = %if.end42, %if.end31
  %23 = load i32, i32* @Port_cnt, align 4, !dbg !16754
  %idxprom51 = sext i32 %23 to i64, !dbg !16756
  %arrayidx52 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom51, !dbg !16756
  %24 = load i32, i32* %arrayidx52, align 4, !dbg !16756
  %and53 = and i32 %24, 16, !dbg !16757
  %tobool54 = icmp ne i32 %and53, 0, !dbg !16757
  br i1 %tobool54, label %if.then55, label %if.end69, !dbg !16758

if.then55:                                        ; preds = %if.end50
  %25 = load i32, i32* @debug, align 4, !dbg !16759
  %and56 = and i32 %25, 262144, !dbg !16762
  %tobool57 = icmp ne i32 %and56, 0, !dbg !16762
  br i1 %tobool57, label %if.then58, label %if.end61, !dbg !16763

if.then58:                                        ; preds = %if.then55
  %26 = load i32, i32* @HFC_cnt, align 4, !dbg !16764
  %add59 = add i32 %26, 1, !dbg !16765
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.181, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %add59, i32 1) #13, !dbg !16766
  br label %if.end61, !dbg !16766

if.end61:                                         ; preds = %if.then58, %if.then55
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16767
  %chan62 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %27, i32 0, i32 60, !dbg !16768
  %28 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16769
  %dnum63 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %28, i32 0, i32 46, !dbg !16770
  %arrayidx64 = getelementptr [32 x i8], [32 x i8]* %dnum63, i64 0, i64 0, !dbg !16769
  %29 = load i8, i8* %arrayidx64, align 4, !dbg !16769
  %idxprom65 = zext i8 %29 to i64, !dbg !16767
  %arrayidx66 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan62, i64 0, i64 %idxprom65, !dbg !16767
  %cfg67 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx66, i32 0, i32 10, !dbg !16771
  %call68 = call zeroext i1 @test_and_set_bit(i64 7, i64* %cfg67) #12, !dbg !16772
  br label %if.end69, !dbg !16773

if.end69:                                         ; preds = %if.end61, %if.end50
  %30 = load i32, i32* @Port_cnt, align 4, !dbg !16774
  %idxprom70 = sext i32 %30 to i64, !dbg !16776
  %arrayidx71 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom70, !dbg !16776
  %31 = load i32, i32* %arrayidx71, align 4, !dbg !16776
  %and72 = and i32 %31, 32, !dbg !16777
  %tobool73 = icmp ne i32 %and72, 0, !dbg !16777
  br i1 %tobool73, label %if.then74, label %if.end88, !dbg !16778

if.then74:                                        ; preds = %if.end69
  %32 = load i32, i32* @debug, align 4, !dbg !16779
  %and75 = and i32 %32, 262144, !dbg !16782
  %tobool76 = icmp ne i32 %and75, 0, !dbg !16782
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !16783

if.then77:                                        ; preds = %if.then74
  %33 = load i32, i32* @HFC_cnt, align 4, !dbg !16784
  %add78 = add i32 %33, 1, !dbg !16785
  %call79 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %add78, i32 1) #13, !dbg !16786
  br label %if.end80, !dbg !16786

if.end80:                                         ; preds = %if.then77, %if.then74
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16787
  %chan81 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %34, i32 0, i32 60, !dbg !16788
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16789
  %dnum82 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 46, !dbg !16790
  %arrayidx83 = getelementptr [32 x i8], [32 x i8]* %dnum82, i64 0, i64 0, !dbg !16789
  %36 = load i8, i8* %arrayidx83, align 4, !dbg !16789
  %idxprom84 = zext i8 %36 to i64, !dbg !16787
  %arrayidx85 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan81, i64 0, i64 %idxprom84, !dbg !16787
  %cfg86 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx85, i32 0, i32 10, !dbg !16791
  %call87 = call zeroext i1 @test_and_set_bit(i64 8, i64* %cfg86) #12, !dbg !16792
  br label %if.end88, !dbg !16793

if.end88:                                         ; preds = %if.end80, %if.end69
  %37 = load i32, i32* @Port_cnt, align 4, !dbg !16794
  %idxprom89 = sext i32 %37 to i64, !dbg !16796
  %arrayidx90 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom89, !dbg !16796
  %38 = load i32, i32* %arrayidx90, align 4, !dbg !16796
  %and91 = and i32 %38, 256, !dbg !16797
  %tobool92 = icmp ne i32 %and91, 0, !dbg !16797
  br i1 %tobool92, label %if.else107, label %if.then93, !dbg !16798

if.then93:                                        ; preds = %if.end88
  %39 = load i32, i32* @debug, align 4, !dbg !16799
  %and94 = and i32 %39, 262144, !dbg !16802
  %tobool95 = icmp ne i32 %and94, 0, !dbg !16802
  br i1 %tobool95, label %if.then96, label %if.end99, !dbg !16803

if.then96:                                        ; preds = %if.then93
  %40 = load i32, i32* @HFC_cnt, align 4, !dbg !16804
  %add97 = add i32 %40, 1, !dbg !16805
  %call98 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %add97, i32 1) #13, !dbg !16806
  br label %if.end99, !dbg !16806

if.end99:                                         ; preds = %if.then96, %if.then93
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16807
  %chan100 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %41, i32 0, i32 60, !dbg !16808
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16809
  %dnum101 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %42, i32 0, i32 46, !dbg !16810
  %arrayidx102 = getelementptr [32 x i8], [32 x i8]* %dnum101, i64 0, i64 0, !dbg !16809
  %43 = load i8, i8* %arrayidx102, align 4, !dbg !16809
  %idxprom103 = zext i8 %43 to i64, !dbg !16807
  %arrayidx104 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan100, i64 0, i64 %idxprom103, !dbg !16807
  %cfg105 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx104, i32 0, i32 10, !dbg !16811
  %call106 = call zeroext i1 @test_and_set_bit(i64 10, i64* %cfg105) #12, !dbg !16812
  br label %if.end114, !dbg !16813

if.else107:                                       ; preds = %if.end88
  %44 = load i32, i32* @debug, align 4, !dbg !16814
  %and108 = and i32 %44, 262144, !dbg !16817
  %tobool109 = icmp ne i32 %and108, 0, !dbg !16817
  br i1 %tobool109, label %if.then110, label %if.end113, !dbg !16818

if.then110:                                       ; preds = %if.else107
  %45 = load i32, i32* @HFC_cnt, align 4, !dbg !16819
  %add111 = add i32 %45, 1, !dbg !16820
  %call112 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.184, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %add111, i32 1) #13, !dbg !16821
  br label %if.end113, !dbg !16821

if.end113:                                        ; preds = %if.then110, %if.else107
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end99
  %46 = load i32, i32* @Port_cnt, align 4, !dbg !16822
  %idxprom115 = sext i32 %46 to i64, !dbg !16824
  %arrayidx116 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom115, !dbg !16824
  %47 = load i32, i32* %arrayidx116, align 4, !dbg !16824
  %and117 = and i32 %47, 512, !dbg !16825
  %tobool118 = icmp ne i32 %and117, 0, !dbg !16825
  br i1 %tobool118, label %if.then119, label %if.else127, !dbg !16826

if.then119:                                       ; preds = %if.end114
  %48 = load i32, i32* @debug, align 4, !dbg !16827
  %and120 = and i32 %48, 262144, !dbg !16830
  %tobool121 = icmp ne i32 %and120, 0, !dbg !16830
  br i1 %tobool121, label %if.then122, label %if.end125, !dbg !16831

if.then122:                                       ; preds = %if.then119
  %49 = load i32, i32* @HFC_cnt, align 4, !dbg !16832
  %add123 = add i32 %49, 1, !dbg !16833
  %call124 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.185, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %add123, i32 1) #13, !dbg !16834
  br label %if.end125, !dbg !16834

if.end125:                                        ; preds = %if.then122, %if.then119
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16835
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %50, i32 0, i32 31, !dbg !16836
  %call126 = call zeroext i1 @test_and_set_bit(i64 10, i64* %chip) #12, !dbg !16837
  br label %if.end142, !dbg !16838

if.else127:                                       ; preds = %if.end114
  %51 = load i32, i32* @Port_cnt, align 4, !dbg !16839
  %idxprom128 = sext i32 %51 to i64, !dbg !16841
  %arrayidx129 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom128, !dbg !16841
  %52 = load i32, i32* %arrayidx129, align 4, !dbg !16841
  %and130 = and i32 %52, 1024, !dbg !16842
  %tobool131 = icmp ne i32 %and130, 0, !dbg !16842
  br i1 %tobool131, label %if.then132, label %if.end141, !dbg !16843

if.then132:                                       ; preds = %if.else127
  %53 = load i32, i32* @debug, align 4, !dbg !16844
  %and133 = and i32 %53, 262144, !dbg !16847
  %tobool134 = icmp ne i32 %and133, 0, !dbg !16847
  br i1 %tobool134, label %if.then135, label %if.end138, !dbg !16848

if.then135:                                       ; preds = %if.then132
  %54 = load i32, i32* @HFC_cnt, align 4, !dbg !16849
  %add136 = add i32 %54, 1, !dbg !16850
  %call137 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.186, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %add136, i32 1) #13, !dbg !16851
  br label %if.end138, !dbg !16851

if.end138:                                        ; preds = %if.then135, %if.then132
  %55 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16852
  %chip139 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %55, i32 0, i32 31, !dbg !16853
  %call140 = call zeroext i1 @test_and_set_bit(i64 11, i64* %chip139) #12, !dbg !16854
  br label %if.end141, !dbg !16855

if.end141:                                        ; preds = %if.end138, %if.else127
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.end125
  %56 = load i32, i32* @Port_cnt, align 4, !dbg !16856
  %idxprom143 = sext i32 %56 to i64, !dbg !16858
  %arrayidx144 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom143, !dbg !16858
  %57 = load i32, i32* %arrayidx144, align 4, !dbg !16858
  %and145 = and i32 %57, 2048, !dbg !16859
  %tobool146 = icmp ne i32 %and145, 0, !dbg !16859
  br i1 %tobool146, label %if.then147, label %if.end156, !dbg !16860

if.then147:                                       ; preds = %if.end142
  %58 = load i32, i32* @debug, align 4, !dbg !16861
  %and148 = and i32 %58, 262144, !dbg !16864
  %tobool149 = icmp ne i32 %and148, 0, !dbg !16864
  br i1 %tobool149, label %if.then150, label %if.end153, !dbg !16865

if.then150:                                       ; preds = %if.then147
  %59 = load i32, i32* @HFC_cnt, align 4, !dbg !16866
  %add151 = add i32 %59, 1, !dbg !16867
  %call152 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.187, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %add151, i32 1) #13, !dbg !16868
  br label %if.end153, !dbg !16868

if.end153:                                        ; preds = %if.then150, %if.then147
  %60 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16869
  %chip154 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %60, i32 0, i32 31, !dbg !16870
  %call155 = call zeroext i1 @test_and_set_bit(i64 5, i64* %chip154) #12, !dbg !16871
  br label %if.end156, !dbg !16872

if.end156:                                        ; preds = %if.end153, %if.end142
  %61 = load i32, i32* @Port_cnt, align 4, !dbg !16873
  %idxprom157 = sext i32 %61 to i64, !dbg !16875
  %arrayidx158 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom157, !dbg !16875
  %62 = load i32, i32* %arrayidx158, align 4, !dbg !16875
  %and159 = and i32 %62, 12288, !dbg !16876
  %tobool160 = icmp ne i32 %and159, 0, !dbg !16876
  br i1 %tobool160, label %if.then161, label %if.else182, !dbg !16877

if.then161:                                       ; preds = %if.end156
  %63 = load i32, i32* @Port_cnt, align 4, !dbg !16878
  %idxprom162 = sext i32 %63 to i64, !dbg !16880
  %arrayidx163 = getelementptr [64 x i32], [64 x i32]* @port, i64 0, i64 %idxprom162, !dbg !16880
  %64 = load i32, i32* %arrayidx163, align 4, !dbg !16880
  %shr = lshr i32 %64, 12, !dbg !16881
  %and164 = and i32 %shr, 3, !dbg !16882
  %65 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16883
  %chan165 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %65, i32 0, i32 60, !dbg !16884
  %66 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16885
  %dnum166 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %66, i32 0, i32 46, !dbg !16886
  %arrayidx167 = getelementptr [32 x i8], [32 x i8]* %dnum166, i64 0, i64 0, !dbg !16885
  %67 = load i8, i8* %arrayidx167, align 4, !dbg !16885
  %idxprom168 = zext i8 %67 to i64, !dbg !16883
  %arrayidx169 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan165, i64 0, i64 %idxprom168, !dbg !16883
  %jitter = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx169, i32 0, i32 9, !dbg !16887
  store i32 %and164, i32* %jitter, align 4, !dbg !16888
  %68 = load i32, i32* @debug, align 4, !dbg !16889
  %and170 = and i32 %68, 262144, !dbg !16891
  %tobool171 = icmp ne i32 %and170, 0, !dbg !16891
  br i1 %tobool171, label %if.then172, label %if.end181, !dbg !16892

if.then172:                                       ; preds = %if.then161
  %69 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16893
  %chan173 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %69, i32 0, i32 60, !dbg !16894
  %70 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16895
  %dnum174 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %70, i32 0, i32 46, !dbg !16896
  %arrayidx175 = getelementptr [32 x i8], [32 x i8]* %dnum174, i64 0, i64 0, !dbg !16895
  %71 = load i8, i8* %arrayidx175, align 4, !dbg !16895
  %idxprom176 = zext i8 %71 to i64, !dbg !16893
  %arrayidx177 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan173, i64 0, i64 %idxprom176, !dbg !16893
  %jitter178 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx177, i32 0, i32 9, !dbg !16897
  %72 = load i32, i32* %jitter178, align 4, !dbg !16897
  %73 = load i32, i32* @HFC_cnt, align 4, !dbg !16898
  %add179 = add i32 %73, 1, !dbg !16899
  %call180 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.188, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.init_e1_port_hw, i64 0, i64 0), i32 %72, i32 %add179, i32 1) #13, !dbg !16900
  br label %if.end181, !dbg !16900

if.end181:                                        ; preds = %if.then172, %if.then161
  br label %if.end189, !dbg !16901

if.else182:                                       ; preds = %if.end156
  %74 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16902
  %chan183 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %74, i32 0, i32 60, !dbg !16903
  %75 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !16904
  %dnum184 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %75, i32 0, i32 46, !dbg !16905
  %arrayidx185 = getelementptr [32 x i8], [32 x i8]* %dnum184, i64 0, i64 0, !dbg !16904
  %76 = load i8, i8* %arrayidx185, align 4, !dbg !16904
  %idxprom186 = zext i8 %76 to i64, !dbg !16902
  %arrayidx187 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan183, i64 0, i64 %idxprom186, !dbg !16902
  %jitter188 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx187, i32 0, i32 9, !dbg !16906
  store i32 2, i32* %jitter188, align 4, !dbg !16907
  br label %if.end189

if.end189:                                        ; preds = %if.else182, %if.end181
  ret void, !dbg !16908
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @mISDN_register_device(%struct.mISDNdevice*, %struct.device*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_queue_data(%struct.mISDNchannel* %ch, i32 %prim, i32 %id, i32 %len, i8* %dp, i32 %gfp_mask) #2 !dbg !16909 {
entry:
  %ch.addr = alloca %struct.mISDNchannel*, align 8
  %prim.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %dp.addr = alloca i8*, align 8
  %gfp_mask.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.mISDNchannel* %ch, %struct.mISDNchannel** %ch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mISDNchannel** %ch.addr, metadata !16912, metadata !DIExpression()), !dbg !16913
  store i32 %prim, i32* %prim.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prim.addr, metadata !16914, metadata !DIExpression()), !dbg !16915
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !16916, metadata !DIExpression()), !dbg !16917
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16918, metadata !DIExpression()), !dbg !16919
  store i8* %dp, i8** %dp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dp.addr, metadata !16920, metadata !DIExpression()), !dbg !16921
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !16922, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !16924, metadata !DIExpression()), !dbg !16925
  %0 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16926
  %peer = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %0, i32 0, i32 6, !dbg !16928
  %1 = load %struct.mISDNchannel*, %struct.mISDNchannel** %peer, align 8, !dbg !16928
  %tobool = icmp ne %struct.mISDNchannel* %1, null, !dbg !16926
  br i1 %tobool, label %if.end, label %if.then, !dbg !16929

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !16930

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %prim.addr, align 4, !dbg !16931
  %3 = load i32, i32* %id.addr, align 4, !dbg !16932
  %4 = load i32, i32* %len.addr, align 4, !dbg !16933
  %5 = load i8*, i8** %dp.addr, align 8, !dbg !16934
  %6 = load i32, i32* %gfp_mask.addr, align 4, !dbg !16935
  %call = call %struct.sk_buff* @_alloc_mISDN_skb(i32 %2, i32 %3, i32 %4, i8* %5, i32 %6) #12, !dbg !16936
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !16937
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16938
  %tobool1 = icmp ne %struct.sk_buff* %7, null, !dbg !16938
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !16940

if.then2:                                         ; preds = %if.end
  br label %if.end8, !dbg !16941

if.end3:                                          ; preds = %if.end
  %8 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16942
  %recv = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %8, i32 0, i32 8, !dbg !16944
  %9 = load i32 (%struct.mISDNchannel*, %struct.sk_buff*)*, i32 (%struct.mISDNchannel*, %struct.sk_buff*)** %recv, align 8, !dbg !16944
  %10 = load %struct.mISDNchannel*, %struct.mISDNchannel** %ch.addr, align 8, !dbg !16945
  %peer4 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %10, i32 0, i32 6, !dbg !16946
  %11 = load %struct.mISDNchannel*, %struct.mISDNchannel** %peer4, align 8, !dbg !16946
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16947
  %call5 = call i32 %9(%struct.mISDNchannel* %11, %struct.sk_buff* %12) #12, !dbg !16942
  %tobool6 = icmp ne i32 %call5, 0, !dbg !16942
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !16948

if.then7:                                         ; preds = %if.end3
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16949
  call void @consume_skb(%struct.sk_buff* %13) #12, !dbg !16949
  br label %if.end8, !dbg !16949

if.end8:                                          ; preds = %if.then, %if.then2, %if.then7, %if.end3
  ret void, !dbg !16950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @_alloc_mISDN_skb(i32 %prim, i32 %id, i32 %len, i8* %dp, i32 %gfp_mask) #2 !dbg !16951 {
entry:
  %retval = alloca %struct.sk_buff*, align 8
  %prim.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %dp.addr = alloca i8*, align 8
  %gfp_mask.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %hh = alloca %struct.mISDNhead*, align 8
  store i32 %prim, i32* %prim.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prim.addr, metadata !16954, metadata !DIExpression()), !dbg !16955
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !16956, metadata !DIExpression()), !dbg !16957
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16958, metadata !DIExpression()), !dbg !16959
  store i8* %dp, i8** %dp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dp.addr, metadata !16960, metadata !DIExpression()), !dbg !16961
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !16962, metadata !DIExpression()), !dbg !16963
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !16964, metadata !DIExpression()), !dbg !16965
  %0 = load i32, i32* %len.addr, align 4, !dbg !16966
  %1 = load i32, i32* %gfp_mask.addr, align 4, !dbg !16967
  %call = call %struct.sk_buff* @mI_alloc_skb(i32 %0, i32 %1) #12, !dbg !16968
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !16965
  call void @llvm.dbg.declare(metadata %struct.mISDNhead** %hh, metadata !16969, metadata !DIExpression()), !dbg !16970
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16971
  %tobool = icmp ne %struct.sk_buff* %2, null, !dbg !16971
  br i1 %tobool, label %if.end, label %if.then, !dbg !16973

if.then:                                          ; preds = %entry
  store %struct.sk_buff* null, %struct.sk_buff** %retval, align 8, !dbg !16974
  br label %return, !dbg !16974

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %len.addr, align 4, !dbg !16975
  %tobool1 = icmp ne i32 %3, 0, !dbg !16975
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !16977

if.then2:                                         ; preds = %if.end
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16978
  %5 = load i8*, i8** %dp.addr, align 8, !dbg !16979
  %6 = load i32, i32* %len.addr, align 4, !dbg !16980
  %call3 = call i8* @skb_put_data(%struct.sk_buff* %4, i8* %5, i32 %6) #12, !dbg !16981
  br label %if.end4, !dbg !16981

if.end4:                                          ; preds = %if.then2, %if.end
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16982
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %7, i32 0, i32 3, !dbg !16982
  %arrayidx = getelementptr [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !16982
  %8 = bitcast i8* %arrayidx to %struct.mISDNhead*, !dbg !16982
  store %struct.mISDNhead* %8, %struct.mISDNhead** %hh, align 8, !dbg !16983
  %9 = load i32, i32* %prim.addr, align 4, !dbg !16984
  %10 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !16985
  %prim5 = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %10, i32 0, i32 0, !dbg !16986
  store i32 %9, i32* %prim5, align 1, !dbg !16987
  %11 = load i32, i32* %id.addr, align 4, !dbg !16988
  %12 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !16989
  %id6 = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %12, i32 0, i32 1, !dbg !16990
  store i32 %11, i32* %id6, align 1, !dbg !16991
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16992
  store %struct.sk_buff* %13, %struct.sk_buff** %retval, align 8, !dbg !16993
  br label %return, !dbg !16993

return:                                           ; preds = %if.end4, %if.then
  %14 = load %struct.sk_buff*, %struct.sk_buff** %retval, align 8, !dbg !16994
  ret %struct.sk_buff* %14, !dbg !16994
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #2 !dbg !16995 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16996, metadata !DIExpression()), !dbg !16997
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16998
  call void @kfree_skb(%struct.sk_buff* %0) #12, !dbg !16999
  ret void, !dbg !17000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @mI_alloc_skb(i32 %len, i32 %gfp_mask) #2 !dbg !17001 {
entry:
  %len.addr = alloca i32, align 4
  %gfp_mask.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !17004, metadata !DIExpression()), !dbg !17005
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !17006, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !17008, metadata !DIExpression()), !dbg !17009
  %0 = load i32, i32* %len.addr, align 4, !dbg !17010
  %conv = zext i32 %0 to i64, !dbg !17010
  %add = add i64 %conv, 8, !dbg !17011
  %conv1 = trunc i64 %add to i32, !dbg !17010
  %1 = load i32, i32* %gfp_mask.addr, align 4, !dbg !17012
  %call = call %struct.sk_buff* @alloc_skb(i32 %conv1, i32 %1) #12, !dbg !17013
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !17014
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17015
  %tobool = icmp ne %struct.sk_buff* %2, null, !dbg !17015
  %lnot = xor i1 %tobool, true, !dbg !17015
  %lnot2 = xor i1 %lnot, true, !dbg !17015
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !17015
  %conv3 = sext i32 %lnot.ext to i64, !dbg !17015
  %tobool4 = icmp ne i64 %conv3, 0, !dbg !17015
  br i1 %tobool4, label %if.then, label %if.end, !dbg !17017

if.then:                                          ; preds = %entry
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17018
  call void @skb_reserve(%struct.sk_buff* %3, i32 8) #12, !dbg !17019
  br label %if.end, !dbg !17019

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17020
  ret %struct.sk_buff* %4, !dbg !17021
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_put_data(%struct.sk_buff* %skb, i8* %data, i32 %len) #2 !dbg !17022 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17025, metadata !DIExpression()), !dbg !17026
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17027, metadata !DIExpression()), !dbg !17028
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !17029, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !17031, metadata !DIExpression()), !dbg !17032
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17033
  %1 = load i32, i32* %len.addr, align 4, !dbg !17034
  %call = call i8* @skb_put(%struct.sk_buff* %0, i32 %1) #12, !dbg !17035
  store i8* %call, i8** %tmp, align 8, !dbg !17032
  %2 = load i8*, i8** %tmp, align 8, !dbg !17036
  %3 = load i8*, i8** %data.addr, align 8, !dbg !17037
  %4 = load i32, i32* %len.addr, align 4, !dbg !17038
  %conv = zext i32 %4 to i64, !dbg !17038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 %conv, i1 false), !dbg !17039
  %5 = load i8*, i8** %tmp, align 8, !dbg !17040
  ret i8* %5, !dbg !17041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @alloc_skb(i32 %size, i32 %priority) #2 !dbg !17042 {
entry:
  %size.addr = alloca i32, align 4
  %priority.addr = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !17043, metadata !DIExpression()), !dbg !17044
  store i32 %priority, i32* %priority.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %priority.addr, metadata !17045, metadata !DIExpression()), !dbg !17046
  %0 = load i32, i32* %size.addr, align 4, !dbg !17047
  %1 = load i32, i32* %priority.addr, align 4, !dbg !17048
  %call = call %struct.sk_buff* @__alloc_skb(i32 %0, i32 %1, i32 0, i32 -1) #12, !dbg !17049
  ret %struct.sk_buff* %call, !dbg !17050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #2 !dbg !17051 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17054, metadata !DIExpression()), !dbg !17055
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !17056, metadata !DIExpression()), !dbg !17057
  %0 = load i32, i32* %len.addr, align 4, !dbg !17058
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17059
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !17060
  %2 = load i8*, i8** %data, align 8, !dbg !17061
  %idx.ext = sext i32 %0 to i64, !dbg !17061
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !17061
  store i8* %add.ptr, i8** %data, align 8, !dbg !17061
  %3 = load i32, i32* %len.addr, align 4, !dbg !17062
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17063
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !17064
  %5 = load i32, i32* %tail, align 8, !dbg !17065
  %add = add i32 %5, %3, !dbg !17065
  store i32 %add, i32* %tail, align 8, !dbg !17065
  ret void, !dbg !17066
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__alloc_skb(i32, i32, i32, i32) #3

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #3

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #3

; Function Attrs: noredzone
declare dso_local i32 @dchannel_senddata(%struct.dchannel*, %struct.sk_buff*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfcmulti_tx(%struct.hfc_multi* %hc, i32 %ch) #2 !dbg !17067 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %ch.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ii = alloca i32, align 4
  %temp = alloca i32, align 4
  %len = alloca i32, align 4
  %Zspace = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %Fspace = alloca i32, align 4
  %f1 = alloca i32, align 4
  %f2 = alloca i32, align 4
  %d = alloca i8*, align 8
  %txpending = alloca i32*, align 8
  %slot_tx = alloca i32, align 4
  %bch = alloca %struct.bchannel*, align 8
  %dch = alloca %struct.dchannel*, align 8
  %sp = alloca %struct.sk_buff**, align 8
  %idxp = alloca i32*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !17068, metadata !DIExpression()), !dbg !17069
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !17070, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17072, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !17074, metadata !DIExpression()), !dbg !17075
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !17076, metadata !DIExpression()), !dbg !17077
  call void @llvm.dbg.declare(metadata i32* %len, metadata !17078, metadata !DIExpression()), !dbg !17079
  store i32 0, i32* %len, align 4, !dbg !17079
  call void @llvm.dbg.declare(metadata i32* %Zspace, metadata !17080, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !17082, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !17084, metadata !DIExpression()), !dbg !17085
  call void @llvm.dbg.declare(metadata i32* %Fspace, metadata !17086, metadata !DIExpression()), !dbg !17087
  call void @llvm.dbg.declare(metadata i32* %f1, metadata !17088, metadata !DIExpression()), !dbg !17089
  call void @llvm.dbg.declare(metadata i32* %f2, metadata !17090, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.declare(metadata i8** %d, metadata !17092, metadata !DIExpression()), !dbg !17093
  call void @llvm.dbg.declare(metadata i32** %txpending, metadata !17094, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.declare(metadata i32* %slot_tx, metadata !17096, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !17098, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !17100, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.declare(metadata %struct.sk_buff*** %sp, metadata !17102, metadata !DIExpression()), !dbg !17103
  store %struct.sk_buff** null, %struct.sk_buff*** %sp, align 8, !dbg !17103
  call void @llvm.dbg.declare(metadata i32** %idxp, metadata !17104, metadata !DIExpression()), !dbg !17105
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17106
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 60, !dbg !17107
  %1 = load i32, i32* %ch.addr, align 4, !dbg !17108
  %idxprom = sext i32 %1 to i64, !dbg !17106
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !17106
  %bch1 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 1, !dbg !17109
  %2 = load %struct.bchannel*, %struct.bchannel** %bch1, align 8, !dbg !17109
  store %struct.bchannel* %2, %struct.bchannel** %bch, align 8, !dbg !17110
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17111
  %chan2 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 60, !dbg !17112
  %4 = load i32, i32* %ch.addr, align 4, !dbg !17113
  %idxprom3 = sext i32 %4 to i64, !dbg !17111
  %arrayidx4 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan2, i64 0, i64 %idxprom3, !dbg !17111
  %dch5 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx4, i32 0, i32 0, !dbg !17114
  %5 = load %struct.dchannel*, %struct.dchannel** %dch5, align 8, !dbg !17114
  store %struct.dchannel* %5, %struct.dchannel** %dch, align 8, !dbg !17115
  %6 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17116
  %tobool = icmp ne %struct.dchannel* %6, null, !dbg !17116
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17118

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17119
  %tobool6 = icmp ne %struct.bchannel* %7, null, !dbg !17119
  br i1 %tobool6, label %if.end, label %if.then, !dbg !17120

if.then:                                          ; preds = %land.lhs.true
  br label %if.end359, !dbg !17121

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17122
  %chan7 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 60, !dbg !17123
  %9 = load i32, i32* %ch.addr, align 4, !dbg !17124
  %idxprom8 = sext i32 %9 to i64, !dbg !17122
  %arrayidx9 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan7, i64 0, i64 %idxprom8, !dbg !17122
  %txpending10 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx9, i32 0, i32 18, !dbg !17125
  store i32* %txpending10, i32** %txpending, align 8, !dbg !17126
  %10 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17127
  %chan11 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %10, i32 0, i32 60, !dbg !17128
  %11 = load i32, i32* %ch.addr, align 4, !dbg !17129
  %idxprom12 = sext i32 %11 to i64, !dbg !17127
  %arrayidx13 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan11, i64 0, i64 %idxprom12, !dbg !17127
  %slot_tx14 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx13, i32 0, i32 13, !dbg !17130
  %12 = load i32, i32* %slot_tx14, align 8, !dbg !17130
  store i32 %12, i32* %slot_tx, align 4, !dbg !17131
  %13 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17132
  %tobool15 = icmp ne %struct.dchannel* %13, null, !dbg !17132
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !17134

if.then16:                                        ; preds = %if.end
  %14 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17135
  %Flags = getelementptr inbounds %struct.dchannel, %struct.dchannel* %14, i32 0, i32 1, !dbg !17138
  %call = call zeroext i1 @test_bit(i64 6, i64* %Flags) #12, !dbg !17139
  br i1 %call, label %if.end18, label %if.then17, !dbg !17140

if.then17:                                        ; preds = %if.then16
  br label %if.end359, !dbg !17141

if.end18:                                         ; preds = %if.then16
  %15 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17142
  %tx_skb = getelementptr inbounds %struct.dchannel, %struct.dchannel* %15, i32 0, i32 13, !dbg !17143
  store %struct.sk_buff** %tx_skb, %struct.sk_buff*** %sp, align 8, !dbg !17144
  %16 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17145
  %tx_idx = getelementptr inbounds %struct.dchannel, %struct.dchannel* %16, i32 0, i32 14, !dbg !17146
  store i32* %tx_idx, i32** %idxp, align 8, !dbg !17147
  br label %if.end25, !dbg !17148

if.else:                                          ; preds = %if.end
  %17 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17149
  %Flags19 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %17, i32 0, i32 2, !dbg !17152
  %call20 = call zeroext i1 @test_bit(i64 6, i64* %Flags19) #12, !dbg !17153
  br i1 %call20, label %if.end22, label %if.then21, !dbg !17154

if.then21:                                        ; preds = %if.else
  br label %if.end359, !dbg !17155

if.end22:                                         ; preds = %if.else
  %18 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17156
  %tx_skb23 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %18, i32 0, i32 17, !dbg !17157
  store %struct.sk_buff** %tx_skb23, %struct.sk_buff*** %sp, align 8, !dbg !17158
  %19 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17159
  %tx_idx24 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %19, i32 0, i32 20, !dbg !17160
  store i32* %tx_idx24, i32** %idxp, align 8, !dbg !17161
  br label %if.end25

if.end25:                                         ; preds = %if.end22, %if.end18
  %20 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !17162
  %21 = load %struct.sk_buff*, %struct.sk_buff** %20, align 8, !dbg !17164
  %tobool26 = icmp ne %struct.sk_buff* %21, null, !dbg !17164
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !17165

if.then27:                                        ; preds = %if.end25
  %22 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !17166
  %23 = load %struct.sk_buff*, %struct.sk_buff** %22, align 8, !dbg !17167
  %len28 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %23, i32 0, i32 5, !dbg !17168
  %24 = load i32, i32* %len28, align 8, !dbg !17168
  store i32 %24, i32* %len, align 4, !dbg !17169
  br label %if.end29, !dbg !17170

if.end29:                                         ; preds = %if.then27, %if.end25
  %25 = load i32, i32* %len, align 4, !dbg !17171
  %tobool30 = icmp ne i32 %25, 0, !dbg !17171
  br i1 %tobool30, label %if.end33, label %land.lhs.true31, !dbg !17173

land.lhs.true31:                                  ; preds = %if.end29
  %26 = load i32*, i32** %txpending, align 8, !dbg !17174
  %27 = load i32, i32* %26, align 4, !dbg !17175
  %cmp = icmp ne i32 %27, 1, !dbg !17176
  br i1 %cmp, label %if.then32, label %if.end33, !dbg !17177

if.then32:                                        ; preds = %land.lhs.true31
  br label %if.end359, !dbg !17178

if.end33:                                         ; preds = %land.lhs.true31, %if.end29
  %28 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17179
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %28, i32 0, i32 31, !dbg !17181
  %call34 = call zeroext i1 @test_bit(i64 13, i64* %chip) #12, !dbg !17182
  br i1 %call34, label %land.lhs.true35, label %if.else52, !dbg !17183

land.lhs.true35:                                  ; preds = %if.end33
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17184
  %chan36 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %29, i32 0, i32 60, !dbg !17185
  %30 = load i32, i32* %ch.addr, align 4, !dbg !17186
  %idxprom37 = sext i32 %30 to i64, !dbg !17184
  %arrayidx38 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan36, i64 0, i64 %idxprom37, !dbg !17184
  %protocol = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx38, i32 0, i32 12, !dbg !17187
  %31 = load i32, i32* %protocol, align 4, !dbg !17187
  %cmp39 = icmp eq i32 %31, 33, !dbg !17188
  br i1 %cmp39, label %land.lhs.true40, label %if.else52, !dbg !17189

land.lhs.true40:                                  ; preds = %land.lhs.true35
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17190
  %chan41 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %32, i32 0, i32 60, !dbg !17191
  %33 = load i32, i32* %ch.addr, align 4, !dbg !17192
  %idxprom42 = sext i32 %33 to i64, !dbg !17190
  %arrayidx43 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan41, i64 0, i64 %idxprom42, !dbg !17190
  %slot_rx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx43, i32 0, i32 15, !dbg !17193
  %34 = load i32, i32* %slot_rx, align 8, !dbg !17193
  %cmp44 = icmp slt i32 %34, 0, !dbg !17194
  br i1 %cmp44, label %land.lhs.true45, label %if.else52, !dbg !17195

land.lhs.true45:                                  ; preds = %land.lhs.true40
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17196
  %chan46 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 60, !dbg !17197
  %36 = load i32, i32* %ch.addr, align 4, !dbg !17198
  %idxprom47 = sext i32 %36 to i64, !dbg !17196
  %arrayidx48 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan46, i64 0, i64 %idxprom47, !dbg !17196
  %slot_tx49 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx48, i32 0, i32 13, !dbg !17199
  %37 = load i32, i32* %slot_tx49, align 8, !dbg !17199
  %cmp50 = icmp slt i32 %37, 0, !dbg !17200
  br i1 %cmp50, label %if.then51, label %if.else52, !dbg !17201

if.then51:                                        ; preds = %land.lhs.true45
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17202
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 11, !dbg !17202
  %39 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !17202
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17202
  %41 = load i32, i32* %ch.addr, align 4, !dbg !17202
  %shl = shl i32 %41, 1, !dbg !17202
  %or = or i32 32, %shl, !dbg !17202
  %conv = trunc i32 %or to i8, !dbg !17202
  call void %39(%struct.hfc_multi* %40, i8 zeroext 15, i8 zeroext %conv) #12, !dbg !17202
  br label %if.end56, !dbg !17202

if.else52:                                        ; preds = %land.lhs.true45, %land.lhs.true40, %land.lhs.true35, %if.end33
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17203
  %HFC_outb_nodebug53 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %42, i32 0, i32 11, !dbg !17203
  %43 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug53, align 8, !dbg !17203
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17203
  %45 = load i32, i32* %ch.addr, align 4, !dbg !17203
  %shl54 = shl i32 %45, 1, !dbg !17203
  %conv55 = trunc i32 %shl54 to i8, !dbg !17203
  call void %43(%struct.hfc_multi* %44, i8 zeroext 15, i8 zeroext %conv55) #12, !dbg !17203
  br label %if.end56

if.end56:                                         ; preds = %if.else52, %if.then51
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17204
  %HFC_wait_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 17, !dbg !17204
  %47 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug, align 8, !dbg !17204
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17204
  call void %47(%struct.hfc_multi* %48) #12, !dbg !17204
  %49 = load i32*, i32** %txpending, align 8, !dbg !17205
  %50 = load i32, i32* %49, align 4, !dbg !17207
  %cmp57 = icmp eq i32 %50, 2, !dbg !17208
  br i1 %cmp57, label %if.then59, label %if.end62, !dbg !17209

if.then59:                                        ; preds = %if.end56
  %51 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17210
  %HFC_outb_nodebug60 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %51, i32 0, i32 11, !dbg !17210
  %52 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug60, align 8, !dbg !17210
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17210
  call void %52(%struct.hfc_multi* %53, i8 zeroext 14, i8 zeroext 2) #12, !dbg !17210
  %54 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17212
  %HFC_wait_nodebug61 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %54, i32 0, i32 17, !dbg !17212
  %55 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug61, align 8, !dbg !17212
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17212
  call void %55(%struct.hfc_multi* %56) #12, !dbg !17212
  %57 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17213
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %57, i32 0, i32 10, !dbg !17213
  %58 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !17213
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17213
  call void %58(%struct.hfc_multi* %59, i8 zeroext -5, i8 zeroext 0) #12, !dbg !17213
  %60 = load i32*, i32** %txpending, align 8, !dbg !17214
  store i32 1, i32* %60, align 4, !dbg !17215
  br label %if.end62, !dbg !17216

if.end62:                                         ; preds = %if.then59, %if.end56
  br label %next_frame, !dbg !17217

next_frame:                                       ; preds = %if.then349, %if.then342, %if.end62
  call void @llvm.dbg.label(metadata !17218), !dbg !17219
  %61 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17220
  %tobool63 = icmp ne %struct.dchannel* %61, null, !dbg !17220
  br i1 %tobool63, label %if.then67, label %lor.lhs.false, !dbg !17222

lor.lhs.false:                                    ; preds = %next_frame
  %62 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17223
  %Flags64 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %62, i32 0, i32 2, !dbg !17224
  %call65 = call zeroext i1 @test_bit(i64 13, i64* %Flags64) #12, !dbg !17225
  br i1 %call65, label %if.then67, label %if.end111, !dbg !17226

if.then67:                                        ; preds = %lor.lhs.false, %next_frame
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17227
  %HFC_inb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %63, i32 0, i32 13, !dbg !17227
  %64 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug, align 8, !dbg !17227
  %65 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17227
  %call68 = call zeroext i8 %64(%struct.hfc_multi* %65, i8 zeroext 12) #12, !dbg !17227
  %conv69 = zext i8 %call68 to i32, !dbg !17227
  store i32 %conv69, i32* %f1, align 4, !dbg !17229
  %66 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17230
  %HFC_inb_nodebug70 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %66, i32 0, i32 13, !dbg !17230
  %67 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug70, align 8, !dbg !17230
  %68 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17230
  %call71 = call zeroext i8 %67(%struct.hfc_multi* %68, i8 zeroext 13) #12, !dbg !17230
  %conv72 = zext i8 %call71 to i32, !dbg !17230
  store i32 %conv72, i32* %f2, align 4, !dbg !17231
  br label %while.cond, !dbg !17232

while.cond:                                       ; preds = %if.end81, %if.then67
  %69 = load i32, i32* %f2, align 4, !dbg !17233
  %70 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17234
  %HFC_inb_nodebug73 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %70, i32 0, i32 13, !dbg !17234
  %71 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug73, align 8, !dbg !17234
  %72 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17234
  %call74 = call zeroext i8 %71(%struct.hfc_multi* %72, i8 zeroext 13) #12, !dbg !17234
  %conv75 = zext i8 %call74 to i32, !dbg !17234
  store i32 %conv75, i32* %temp, align 4, !dbg !17235
  %cmp76 = icmp ne i32 %69, %conv75, !dbg !17236
  br i1 %cmp76, label %while.body, label %while.end, !dbg !17232

while.body:                                       ; preds = %while.cond
  %73 = load i32, i32* @debug, align 4, !dbg !17237
  %and = and i32 %73, 65536, !dbg !17240
  %tobool78 = icmp ne i32 %and, 0, !dbg !17240
  br i1 %tobool78, label %if.then79, label %if.end81, !dbg !17241

if.then79:                                        ; preds = %while.body
  %74 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17242
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %74, i32 0, i32 2, !dbg !17243
  %75 = load i32, i32* %id, align 8, !dbg !17243
  %add = add i32 %75, 1, !dbg !17244
  %76 = load i32, i32* %temp, align 4, !dbg !17245
  %77 = load i32, i32* %f2, align 4, !dbg !17246
  %call80 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_tx, i64 0, i64 0), i32 %add, i32 %76, i32 %77) #13, !dbg !17247
  br label %if.end81, !dbg !17247

if.end81:                                         ; preds = %if.then79, %while.body
  %78 = load i32, i32* %temp, align 4, !dbg !17248
  store i32 %78, i32* %f2, align 4, !dbg !17249
  br label %while.cond, !dbg !17232, !llvm.loop !17250

while.end:                                        ; preds = %while.cond
  %79 = load i32, i32* %f2, align 4, !dbg !17252
  %80 = load i32, i32* %f1, align 4, !dbg !17253
  %sub = sub i32 %79, %80, !dbg !17254
  %sub82 = sub i32 %sub, 1, !dbg !17255
  store i32 %sub82, i32* %Fspace, align 4, !dbg !17256
  %81 = load i32, i32* %Fspace, align 4, !dbg !17257
  %cmp83 = icmp slt i32 %81, 0, !dbg !17259
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !17260

if.then85:                                        ; preds = %while.end
  %82 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17261
  %Flen = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %82, i32 0, i32 36, !dbg !17262
  %83 = load i32, i32* %Flen, align 4, !dbg !17262
  %84 = load i32, i32* %Fspace, align 4, !dbg !17263
  %add86 = add i32 %84, %83, !dbg !17263
  store i32 %add86, i32* %Fspace, align 4, !dbg !17263
  br label %if.end87, !dbg !17264

if.end87:                                         ; preds = %if.then85, %while.end
  %85 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17265
  %chip88 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %85, i32 0, i32 31, !dbg !17267
  %call89 = call zeroext i1 @test_bit(i64 2, i64* %chip88) #12, !dbg !17268
  br i1 %call89, label %if.then90, label %if.end96, !dbg !17269

if.then90:                                        ; preds = %if.end87
  %86 = load i32, i32* %f1, align 4, !dbg !17270
  %87 = load i32, i32* %f2, align 4, !dbg !17273
  %cmp91 = icmp ne i32 %86, %87, !dbg !17274
  br i1 %cmp91, label %if.then93, label %if.else94, !dbg !17275

if.then93:                                        ; preds = %if.then90
  store i32 0, i32* %Fspace, align 4, !dbg !17276
  br label %if.end95, !dbg !17277

if.else94:                                        ; preds = %if.then90
  store i32 1, i32* %Fspace, align 4, !dbg !17278
  br label %if.end95

if.end95:                                         ; preds = %if.else94, %if.then93
  br label %if.end96, !dbg !17279

if.end96:                                         ; preds = %if.end95, %if.end87
  %88 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17280
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %88, i32 0, i32 4, !dbg !17282
  %89 = load i32, i32* %ctype, align 8, !dbg !17282
  %cmp97 = icmp ne i32 %89, 1, !dbg !17283
  br i1 %cmp97, label %land.lhs.true99, label %if.end106, !dbg !17284

land.lhs.true99:                                  ; preds = %if.end96
  %90 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17285
  %tobool100 = icmp ne %struct.dchannel* %90, null, !dbg !17285
  br i1 %tobool100, label %if.then101, label %if.end106, !dbg !17286

if.then101:                                       ; preds = %land.lhs.true99
  %91 = load i32, i32* %f1, align 4, !dbg !17287
  %92 = load i32, i32* %f2, align 4, !dbg !17290
  %cmp102 = icmp ne i32 %91, %92, !dbg !17291
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !17292

if.then104:                                       ; preds = %if.then101
  store i32 0, i32* %Fspace, align 4, !dbg !17293
  br label %if.end105, !dbg !17294

if.end105:                                        ; preds = %if.then104, %if.then101
  br label %if.end106, !dbg !17295

if.end106:                                        ; preds = %if.end105, %land.lhs.true99, %if.end96
  %93 = load i32, i32* %Fspace, align 4, !dbg !17296
  %cmp107 = icmp eq i32 %93, 0, !dbg !17298
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !17299

if.then109:                                       ; preds = %if.end106
  br label %if.end359, !dbg !17300

if.end110:                                        ; preds = %if.end106
  br label %if.end111, !dbg !17301

if.end111:                                        ; preds = %if.end110, %lor.lhs.false
  %94 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17302
  %HFC_inw_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %94, i32 0, i32 15, !dbg !17302
  %95 = load i16 (%struct.hfc_multi*, i8)*, i16 (%struct.hfc_multi*, i8)** %HFC_inw_nodebug, align 8, !dbg !17302
  %96 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17302
  %call112 = call zeroext i16 %95(%struct.hfc_multi* %96, i8 zeroext 4) #12, !dbg !17302
  %conv113 = zext i16 %call112 to i32, !dbg !17302
  %97 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17303
  %Zmin = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %97, i32 0, i32 39, !dbg !17304
  %98 = load i32, i32* %Zmin, align 8, !dbg !17304
  %sub114 = sub i32 %conv113, %98, !dbg !17305
  store i32 %sub114, i32* %z1, align 4, !dbg !17306
  %99 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17307
  %HFC_inw_nodebug115 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %99, i32 0, i32 15, !dbg !17307
  %100 = load i16 (%struct.hfc_multi*, i8)*, i16 (%struct.hfc_multi*, i8)** %HFC_inw_nodebug115, align 8, !dbg !17307
  %101 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17307
  %call116 = call zeroext i16 %100(%struct.hfc_multi* %101, i8 zeroext 6) #12, !dbg !17307
  %conv117 = zext i16 %call116 to i32, !dbg !17307
  %102 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17308
  %Zmin118 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %102, i32 0, i32 39, !dbg !17309
  %103 = load i32, i32* %Zmin118, align 8, !dbg !17309
  %sub119 = sub i32 %conv117, %103, !dbg !17310
  store i32 %sub119, i32* %z2, align 4, !dbg !17311
  br label %while.cond120, !dbg !17312

while.cond120:                                    ; preds = %if.end135, %if.end111
  %104 = load i32, i32* %z2, align 4, !dbg !17313
  %105 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17314
  %HFC_inw_nodebug121 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %105, i32 0, i32 15, !dbg !17314
  %106 = load i16 (%struct.hfc_multi*, i8)*, i16 (%struct.hfc_multi*, i8)** %HFC_inw_nodebug121, align 8, !dbg !17314
  %107 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17314
  %call122 = call zeroext i16 %106(%struct.hfc_multi* %107, i8 zeroext 6) #12, !dbg !17314
  %conv123 = zext i16 %call122 to i32, !dbg !17314
  %108 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17315
  %Zmin124 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %108, i32 0, i32 39, !dbg !17316
  %109 = load i32, i32* %Zmin124, align 8, !dbg !17316
  %sub125 = sub i32 %conv123, %109, !dbg !17317
  store i32 %sub125, i32* %temp, align 4, !dbg !17318
  %cmp126 = icmp ne i32 %104, %sub125, !dbg !17319
  br i1 %cmp126, label %while.body128, label %while.end136, !dbg !17312

while.body128:                                    ; preds = %while.cond120
  %110 = load i32, i32* @debug, align 4, !dbg !17320
  %and129 = and i32 %110, 65536, !dbg !17323
  %tobool130 = icmp ne i32 %and129, 0, !dbg !17323
  br i1 %tobool130, label %if.then131, label %if.end135, !dbg !17324

if.then131:                                       ; preds = %while.body128
  %111 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17325
  %id132 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %111, i32 0, i32 2, !dbg !17326
  %112 = load i32, i32* %id132, align 8, !dbg !17326
  %add133 = add i32 %112, 1, !dbg !17327
  %113 = load i32, i32* %temp, align 4, !dbg !17328
  %114 = load i32, i32* %z2, align 4, !dbg !17329
  %call134 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_tx, i64 0, i64 0), i32 %add133, i32 %113, i32 %114) #13, !dbg !17330
  br label %if.end135, !dbg !17330

if.end135:                                        ; preds = %if.then131, %while.body128
  %115 = load i32, i32* %temp, align 4, !dbg !17331
  store i32 %115, i32* %z2, align 4, !dbg !17332
  br label %while.cond120, !dbg !17312, !llvm.loop !17333

while.end136:                                     ; preds = %while.cond120
  %116 = load i32, i32* %z1, align 4, !dbg !17335
  %117 = load i32, i32* %z2, align 4, !dbg !17336
  %sub137 = sub i32 %116, %117, !dbg !17337
  %118 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17338
  %chan138 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %118, i32 0, i32 60, !dbg !17339
  %119 = load i32, i32* %ch.addr, align 4, !dbg !17340
  %idxprom139 = sext i32 %119 to i64, !dbg !17338
  %arrayidx140 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan138, i64 0, i64 %idxprom139, !dbg !17338
  %Zfill = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx140, i32 0, i32 19, !dbg !17341
  store i32 %sub137, i32* %Zfill, align 8, !dbg !17342
  %120 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17343
  %chan141 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %120, i32 0, i32 60, !dbg !17345
  %121 = load i32, i32* %ch.addr, align 4, !dbg !17346
  %idxprom142 = sext i32 %121 to i64, !dbg !17343
  %arrayidx143 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan141, i64 0, i64 %idxprom142, !dbg !17343
  %Zfill144 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx143, i32 0, i32 19, !dbg !17347
  %122 = load i32, i32* %Zfill144, align 8, !dbg !17347
  %cmp145 = icmp slt i32 %122, 0, !dbg !17348
  br i1 %cmp145, label %if.then147, label %if.end153, !dbg !17349

if.then147:                                       ; preds = %while.end136
  %123 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17350
  %Zlen = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %123, i32 0, i32 37, !dbg !17351
  %124 = load i32, i32* %Zlen, align 8, !dbg !17351
  %125 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17352
  %chan148 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %125, i32 0, i32 60, !dbg !17353
  %126 = load i32, i32* %ch.addr, align 4, !dbg !17354
  %idxprom149 = sext i32 %126 to i64, !dbg !17352
  %arrayidx150 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan148, i64 0, i64 %idxprom149, !dbg !17352
  %Zfill151 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx150, i32 0, i32 19, !dbg !17355
  %127 = load i32, i32* %Zfill151, align 8, !dbg !17356
  %add152 = add i32 %127, %124, !dbg !17356
  store i32 %add152, i32* %Zfill151, align 8, !dbg !17356
  br label %if.end153, !dbg !17352

if.end153:                                        ; preds = %if.then147, %while.end136
  %128 = load i32, i32* %z2, align 4, !dbg !17357
  %129 = load i32, i32* %z1, align 4, !dbg !17358
  %sub154 = sub i32 %128, %129, !dbg !17359
  store i32 %sub154, i32* %Zspace, align 4, !dbg !17360
  %130 = load i32, i32* %Zspace, align 4, !dbg !17361
  %cmp155 = icmp sle i32 %130, 0, !dbg !17363
  br i1 %cmp155, label %if.then157, label %if.end160, !dbg !17364

if.then157:                                       ; preds = %if.end153
  %131 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17365
  %Zlen158 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %131, i32 0, i32 37, !dbg !17366
  %132 = load i32, i32* %Zlen158, align 8, !dbg !17366
  %133 = load i32, i32* %Zspace, align 4, !dbg !17367
  %add159 = add i32 %133, %132, !dbg !17367
  store i32 %add159, i32* %Zspace, align 4, !dbg !17367
  br label %if.end160, !dbg !17368

if.end160:                                        ; preds = %if.then157, %if.end153
  %134 = load i32, i32* %Zspace, align 4, !dbg !17369
  %sub161 = sub i32 %134, 4, !dbg !17369
  store i32 %sub161, i32* %Zspace, align 4, !dbg !17369
  %135 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17370
  %tobool162 = icmp ne %struct.bchannel* %135, null, !dbg !17370
  br i1 %tobool162, label %land.lhs.true163, label %if.end171, !dbg !17372

land.lhs.true163:                                 ; preds = %if.end160
  %136 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17373
  %Flags164 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %136, i32 0, i32 2, !dbg !17374
  %call165 = call zeroext i1 @test_bit(i64 12, i64* %Flags164) #12, !dbg !17375
  br i1 %call165, label %if.then167, label %if.end171, !dbg !17376

if.then167:                                       ; preds = %land.lhs.true163
  %137 = load i32, i32* %Zspace, align 4, !dbg !17377
  %138 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17378
  %Zlen168 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %138, i32 0, i32 37, !dbg !17379
  %139 = load i32, i32* %Zlen168, align 8, !dbg !17379
  %sub169 = sub i32 %137, %139, !dbg !17380
  %140 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17381
  %max_trans = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %140, i32 0, i32 38, !dbg !17382
  %141 = load i32, i32* %max_trans, align 4, !dbg !17382
  %add170 = add i32 %sub169, %141, !dbg !17383
  store i32 %add170, i32* %Zspace, align 4, !dbg !17384
  br label %if.end171, !dbg !17385

if.end171:                                        ; preds = %if.then167, %land.lhs.true163, %if.end160
  %142 = load i32, i32* %Zspace, align 4, !dbg !17386
  %cmp172 = icmp sle i32 %142, 0, !dbg !17388
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !17389

if.then174:                                       ; preds = %if.end171
  br label %if.end359, !dbg !17390

if.end175:                                        ; preds = %if.end171
  %143 = load i32, i32* %len, align 4, !dbg !17391
  %tobool176 = icmp ne i32 %143, 0, !dbg !17391
  br i1 %tobool176, label %if.end223, label %if.then177, !dbg !17393

if.then177:                                       ; preds = %if.end175
  %144 = load i32, i32* %z1, align 4, !dbg !17394
  %145 = load i32, i32* %z2, align 4, !dbg !17397
  %cmp178 = icmp eq i32 %144, %145, !dbg !17398
  br i1 %cmp178, label %if.then180, label %if.end222, !dbg !17399

if.then180:                                       ; preds = %if.then177
  %146 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17400
  %tobool181 = icmp ne %struct.bchannel* %146, null, !dbg !17400
  br i1 %tobool181, label %land.lhs.true182, label %if.end221, !dbg !17403

land.lhs.true182:                                 ; preds = %if.then180
  %147 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17404
  %Flags183 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %147, i32 0, i32 2, !dbg !17405
  %call184 = call zeroext i1 @test_bit(i64 13, i64* %Flags183) #12, !dbg !17406
  br i1 %call184, label %if.end221, label %land.lhs.true185, !dbg !17407

land.lhs.true185:                                 ; preds = %land.lhs.true182
  %148 = load i32*, i32** %txpending, align 8, !dbg !17408
  %149 = load i32, i32* %148, align 4, !dbg !17409
  %tobool186 = icmp ne i32 %149, 0, !dbg !17409
  br i1 %tobool186, label %land.lhs.true187, label %if.end221, !dbg !17410

land.lhs.true187:                                 ; preds = %land.lhs.true185
  %150 = load i32, i32* %slot_tx, align 4, !dbg !17411
  %cmp188 = icmp sge i32 %150, 0, !dbg !17412
  br i1 %cmp188, label %if.then190, label %if.end221, !dbg !17413

if.then190:                                       ; preds = %land.lhs.true187
  %151 = load i32, i32* @debug, align 4, !dbg !17414
  %and191 = and i32 %151, 1048576, !dbg !17417
  %tobool192 = icmp ne i32 %and191, 0, !dbg !17417
  br i1 %tobool192, label %if.then193, label %if.end195, !dbg !17418

if.then193:                                       ; preds = %if.then190
  %152 = load i32, i32* %ch.addr, align 4, !dbg !17419
  %153 = load i32, i32* %slot_tx, align 4, !dbg !17420
  %call194 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_tx, i64 0, i64 0), i32 %152, i32 %153) #13, !dbg !17421
  br label %if.end195, !dbg !17421

if.end195:                                        ; preds = %if.then193, %if.then190
  %154 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17422
  %ctype196 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %154, i32 0, i32 4, !dbg !17424
  %155 = load i32, i32* %ctype196, align 8, !dbg !17424
  %cmp197 = icmp eq i32 %155, 5, !dbg !17425
  br i1 %cmp197, label %if.then199, label %if.else201, !dbg !17426

if.then199:                                       ; preds = %if.end195
  %156 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17427
  %HFC_outb200 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %156, i32 0, i32 10, !dbg !17427
  %157 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb200, align 8, !dbg !17427
  %158 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17427
  call void %157(%struct.hfc_multi* %158, i8 zeroext -6, i8 zeroext -33) #12, !dbg !17427
  br label %if.end203, !dbg !17427

if.else201:                                       ; preds = %if.end195
  %159 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17428
  %HFC_outb202 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %159, i32 0, i32 10, !dbg !17428
  %160 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb202, align 8, !dbg !17428
  %161 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17428
  call void %160(%struct.hfc_multi* %161, i8 zeroext -6, i8 zeroext -61) #12, !dbg !17428
  br label %if.end203

if.end203:                                        ; preds = %if.else201, %if.then199
  %162 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17429
  %HFC_outb_nodebug204 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %162, i32 0, i32 11, !dbg !17429
  %163 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug204, align 8, !dbg !17429
  %164 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17429
  %165 = load i32, i32* %ch.addr, align 4, !dbg !17429
  %shl205 = shl i32 %165, 1, !dbg !17429
  %or206 = or i32 %shl205, 1, !dbg !17429
  %conv207 = trunc i32 %or206 to i8, !dbg !17429
  call void %163(%struct.hfc_multi* %164, i8 zeroext 15, i8 zeroext %conv207) #12, !dbg !17429
  %166 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17430
  %HFC_wait_nodebug208 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %166, i32 0, i32 17, !dbg !17430
  %167 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug208, align 8, !dbg !17430
  %168 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17430
  call void %167(%struct.hfc_multi* %168) #12, !dbg !17430
  %169 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17431
  %ctype209 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %169, i32 0, i32 4, !dbg !17433
  %170 = load i32, i32* %ctype209, align 8, !dbg !17433
  %cmp210 = icmp eq i32 %170, 5, !dbg !17434
  br i1 %cmp210, label %if.then212, label %if.else214, !dbg !17435

if.then212:                                       ; preds = %if.end203
  %171 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17436
  %HFC_outb213 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %171, i32 0, i32 10, !dbg !17436
  %172 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb213, align 8, !dbg !17436
  %173 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17436
  call void %172(%struct.hfc_multi* %173, i8 zeroext -6, i8 zeroext -33) #12, !dbg !17436
  br label %if.end216, !dbg !17436

if.else214:                                       ; preds = %if.end203
  %174 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17437
  %HFC_outb215 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %174, i32 0, i32 10, !dbg !17437
  %175 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb215, align 8, !dbg !17437
  %176 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17437
  call void %175(%struct.hfc_multi* %176, i8 zeroext -6, i8 zeroext -61) #12, !dbg !17437
  br label %if.end216

if.end216:                                        ; preds = %if.else214, %if.then212
  %177 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17438
  %HFC_outb_nodebug217 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %177, i32 0, i32 11, !dbg !17438
  %178 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug217, align 8, !dbg !17438
  %179 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17438
  %180 = load i32, i32* %ch.addr, align 4, !dbg !17438
  %shl218 = shl i32 %180, 1, !dbg !17438
  %conv219 = trunc i32 %shl218 to i8, !dbg !17438
  call void %178(%struct.hfc_multi* %179, i8 zeroext 15, i8 zeroext %conv219) #12, !dbg !17438
  %181 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17439
  %HFC_wait_nodebug220 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %181, i32 0, i32 17, !dbg !17439
  %182 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug220, align 8, !dbg !17439
  %183 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17439
  call void %182(%struct.hfc_multi* %183) #12, !dbg !17439
  br label %if.end221, !dbg !17440

if.end221:                                        ; preds = %if.end216, %land.lhs.true187, %land.lhs.true185, %land.lhs.true182, %if.then180
  %184 = load i32*, i32** %txpending, align 8, !dbg !17441
  store i32 0, i32* %184, align 4, !dbg !17442
  br label %if.end222, !dbg !17443

if.end222:                                        ; preds = %if.end221, %if.then177
  br label %if.end359, !dbg !17444

if.end223:                                        ; preds = %if.end175
  %185 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17445
  %tobool224 = icmp ne %struct.bchannel* %185, null, !dbg !17445
  br i1 %tobool224, label %land.lhs.true225, label %if.end243, !dbg !17447

land.lhs.true225:                                 ; preds = %if.end223
  %186 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17448
  %Flags226 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %186, i32 0, i32 2, !dbg !17449
  %call227 = call zeroext i1 @test_bit(i64 16, i64* %Flags226) #12, !dbg !17450
  br i1 %call227, label %land.lhs.true229, label %if.end243, !dbg !17451

land.lhs.true229:                                 ; preds = %land.lhs.true225
  %187 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17452
  %Flags230 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %187, i32 0, i32 2, !dbg !17453
  %call231 = call zeroext i1 @test_bit(i64 13, i64* %Flags230) #12, !dbg !17454
  br i1 %call231, label %if.end243, label %land.lhs.true232, !dbg !17455

land.lhs.true232:                                 ; preds = %land.lhs.true229
  %188 = load i32, i32* %z2, align 4, !dbg !17456
  %189 = load i32, i32* %z1, align 4, !dbg !17457
  %cmp233 = icmp eq i32 %188, %189, !dbg !17458
  br i1 %cmp233, label %if.then235, label %if.end243, !dbg !17459

if.then235:                                       ; preds = %land.lhs.true232
  %190 = load i32, i32* @debug, align 4, !dbg !17460
  %and236 = and i32 %190, 8388608, !dbg !17463
  %tobool237 = icmp ne i32 %and236, 0, !dbg !17463
  br i1 %tobool237, label %if.then238, label %if.end240, !dbg !17464

if.then238:                                       ; preds = %if.then235
  %call239 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_tx, i64 0, i64 0)) #13, !dbg !17465
  br label %if.end240, !dbg !17465

if.end240:                                        ; preds = %if.then238, %if.then235
  %191 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17466
  %write_fifo = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %191, i32 0, i32 19, !dbg !17467
  %192 = load void (%struct.hfc_multi*, i8*, i32)*, void (%struct.hfc_multi*, i8*, i32)** %write_fifo, align 8, !dbg !17467
  %193 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17468
  %194 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17469
  %silence_data = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %194, i32 0, i32 34, !dbg !17470
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %silence_data, i64 0, i64 0, !dbg !17469
  %195 = load i32, i32* @poll, align 4, !dbg !17471
  %shr = lshr i32 %195, 1, !dbg !17472
  call void %192(%struct.hfc_multi* %193, i8* %arraydecay, i32 %shr) #12, !dbg !17466
  %196 = load i32, i32* @poll, align 4, !dbg !17473
  %shr241 = lshr i32 %196, 1, !dbg !17474
  %197 = load i32, i32* %Zspace, align 4, !dbg !17475
  %sub242 = sub i32 %197, %shr241, !dbg !17475
  store i32 %sub242, i32* %Zspace, align 4, !dbg !17475
  br label %if.end243, !dbg !17476

if.end243:                                        ; preds = %if.end240, %land.lhs.true232, %land.lhs.true229, %land.lhs.true225, %if.end223
  %198 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17477
  %tobool244 = icmp ne %struct.bchannel* %198, null, !dbg !17477
  br i1 %tobool244, label %land.lhs.true245, label %if.end284, !dbg !17479

land.lhs.true245:                                 ; preds = %if.end243
  %199 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17480
  %Flags246 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %199, i32 0, i32 2, !dbg !17481
  %call247 = call zeroext i1 @test_bit(i64 13, i64* %Flags246) #12, !dbg !17482
  br i1 %call247, label %if.end284, label %land.lhs.true248, !dbg !17483

land.lhs.true248:                                 ; preds = %land.lhs.true245
  %200 = load i32*, i32** %txpending, align 8, !dbg !17484
  %201 = load i32, i32* %200, align 4, !dbg !17485
  %tobool249 = icmp ne i32 %201, 0, !dbg !17485
  br i1 %tobool249, label %if.end284, label %land.lhs.true250, !dbg !17486

land.lhs.true250:                                 ; preds = %land.lhs.true248
  %202 = load i32, i32* %slot_tx, align 4, !dbg !17487
  %cmp251 = icmp sge i32 %202, 0, !dbg !17488
  br i1 %cmp251, label %if.then253, label %if.end284, !dbg !17489

if.then253:                                       ; preds = %land.lhs.true250
  %203 = load i32, i32* @debug, align 4, !dbg !17490
  %and254 = and i32 %203, 1048576, !dbg !17493
  %tobool255 = icmp ne i32 %and254, 0, !dbg !17493
  br i1 %tobool255, label %if.then256, label %if.end258, !dbg !17494

if.then256:                                       ; preds = %if.then253
  %204 = load i32, i32* %ch.addr, align 4, !dbg !17495
  %205 = load i32, i32* %slot_tx, align 4, !dbg !17496
  %call257 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_tx, i64 0, i64 0), i32 %204, i32 %205) #13, !dbg !17497
  br label %if.end258, !dbg !17497

if.end258:                                        ; preds = %if.then256, %if.then253
  %206 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17498
  %ctype259 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %206, i32 0, i32 4, !dbg !17500
  %207 = load i32, i32* %ctype259, align 8, !dbg !17500
  %cmp260 = icmp eq i32 %207, 5, !dbg !17501
  br i1 %cmp260, label %if.then262, label %if.else264, !dbg !17502

if.then262:                                       ; preds = %if.end258
  %208 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17503
  %HFC_outb263 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %208, i32 0, i32 10, !dbg !17503
  %209 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb263, align 8, !dbg !17503
  %210 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17503
  call void %209(%struct.hfc_multi* %210, i8 zeroext -6, i8 zeroext -97) #12, !dbg !17503
  br label %if.end266, !dbg !17503

if.else264:                                       ; preds = %if.end258
  %211 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17504
  %HFC_outb265 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %211, i32 0, i32 10, !dbg !17504
  %212 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb265, align 8, !dbg !17504
  %213 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17504
  call void %212(%struct.hfc_multi* %213, i8 zeroext -6, i8 zeroext -125) #12, !dbg !17504
  br label %if.end266

if.end266:                                        ; preds = %if.else264, %if.then262
  %214 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17505
  %HFC_outb_nodebug267 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %214, i32 0, i32 11, !dbg !17505
  %215 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug267, align 8, !dbg !17505
  %216 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17505
  %217 = load i32, i32* %ch.addr, align 4, !dbg !17505
  %shl268 = shl i32 %217, 1, !dbg !17505
  %or269 = or i32 %shl268, 1, !dbg !17505
  %conv270 = trunc i32 %or269 to i8, !dbg !17505
  call void %215(%struct.hfc_multi* %216, i8 zeroext 15, i8 zeroext %conv270) #12, !dbg !17505
  %218 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17506
  %HFC_wait_nodebug271 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %218, i32 0, i32 17, !dbg !17506
  %219 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug271, align 8, !dbg !17506
  %220 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17506
  call void %219(%struct.hfc_multi* %220) #12, !dbg !17506
  %221 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17507
  %ctype272 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %221, i32 0, i32 4, !dbg !17509
  %222 = load i32, i32* %ctype272, align 8, !dbg !17509
  %cmp273 = icmp eq i32 %222, 5, !dbg !17510
  br i1 %cmp273, label %if.then275, label %if.else277, !dbg !17511

if.then275:                                       ; preds = %if.end266
  %223 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17512
  %HFC_outb276 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %223, i32 0, i32 10, !dbg !17512
  %224 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb276, align 8, !dbg !17512
  %225 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17512
  call void %224(%struct.hfc_multi* %225, i8 zeroext -6, i8 zeroext -97) #12, !dbg !17512
  br label %if.end279, !dbg !17512

if.else277:                                       ; preds = %if.end266
  %226 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17513
  %HFC_outb278 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %226, i32 0, i32 10, !dbg !17513
  %227 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb278, align 8, !dbg !17513
  %228 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17513
  call void %227(%struct.hfc_multi* %228, i8 zeroext -6, i8 zeroext -125) #12, !dbg !17513
  br label %if.end279

if.end279:                                        ; preds = %if.else277, %if.then275
  %229 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17514
  %HFC_outb_nodebug280 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %229, i32 0, i32 11, !dbg !17514
  %230 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug280, align 8, !dbg !17514
  %231 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17514
  %232 = load i32, i32* %ch.addr, align 4, !dbg !17514
  %shl281 = shl i32 %232, 1, !dbg !17514
  %conv282 = trunc i32 %shl281 to i8, !dbg !17514
  call void %230(%struct.hfc_multi* %231, i8 zeroext 15, i8 zeroext %conv282) #12, !dbg !17514
  %233 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17515
  %HFC_wait_nodebug283 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %233, i32 0, i32 17, !dbg !17515
  %234 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug283, align 8, !dbg !17515
  %235 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17515
  call void %234(%struct.hfc_multi* %235) #12, !dbg !17515
  br label %if.end284, !dbg !17516

if.end284:                                        ; preds = %if.end279, %land.lhs.true250, %land.lhs.true248, %land.lhs.true245, %if.end243
  %236 = load i32*, i32** %txpending, align 8, !dbg !17517
  store i32 1, i32* %236, align 4, !dbg !17518
  %237 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17519
  %tobool285 = icmp ne %struct.dchannel* %237, null, !dbg !17519
  br i1 %tobool285, label %if.then286, label %if.end292, !dbg !17521

if.then286:                                       ; preds = %if.end284
  %238 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17522
  %chan287 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %238, i32 0, i32 60, !dbg !17523
  %239 = load i32, i32* %ch.addr, align 4, !dbg !17524
  %idxprom288 = sext i32 %239 to i64, !dbg !17522
  %arrayidx289 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan287, i64 0, i64 %idxprom288, !dbg !17522
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx289, i32 0, i32 2, !dbg !17525
  %240 = load i32, i32* %port, align 8, !dbg !17525
  %shl290 = shl i32 1, %240, !dbg !17526
  %241 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17527
  %activity_tx = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %241, i32 0, i32 48, !dbg !17528
  %242 = load i32, i32* %activity_tx, align 4, !dbg !17529
  %or291 = or i32 %242, %shl290, !dbg !17529
  store i32 %or291, i32* %activity_tx, align 4, !dbg !17529
  br label %if.end292, !dbg !17527

if.end292:                                        ; preds = %if.then286, %if.end284
  %243 = load i32, i32* %len, align 4, !dbg !17530
  store i32 %243, i32* %ii, align 4, !dbg !17531
  %244 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17532
  %tobool293 = icmp ne %struct.dchannel* %244, null, !dbg !17532
  br i1 %tobool293, label %if.then298, label %lor.lhs.false294, !dbg !17534

lor.lhs.false294:                                 ; preds = %if.end292
  %245 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17535
  %Flags295 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %245, i32 0, i32 2, !dbg !17536
  %call296 = call zeroext i1 @test_bit(i64 13, i64* %Flags295) #12, !dbg !17537
  br i1 %call296, label %if.then298, label %if.else299, !dbg !17538

if.then298:                                       ; preds = %lor.lhs.false294, %if.end292
  store i32 1, i32* %temp, align 4, !dbg !17539
  br label %if.end300, !dbg !17540

if.else299:                                       ; preds = %lor.lhs.false294
  store i32 0, i32* %temp, align 4, !dbg !17541
  br label %if.end300

if.end300:                                        ; preds = %if.else299, %if.then298
  %246 = load i32*, i32** %idxp, align 8, !dbg !17542
  %247 = load i32, i32* %246, align 4, !dbg !17543
  store i32 %247, i32* %i, align 4, !dbg !17544
  %248 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !17545
  %249 = load %struct.sk_buff*, %struct.sk_buff** %248, align 8, !dbg !17546
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %249, i32 0, i32 37, !dbg !17547
  %250 = load i8*, i8** %data, align 8, !dbg !17547
  %251 = load i32, i32* %i, align 4, !dbg !17548
  %idx.ext = sext i32 %251 to i64, !dbg !17549
  %add.ptr = getelementptr i8, i8* %250, i64 %idx.ext, !dbg !17549
  store i8* %add.ptr, i8** %d, align 8, !dbg !17550
  %252 = load i32, i32* %ii, align 4, !dbg !17551
  %253 = load i32, i32* %i, align 4, !dbg !17553
  %sub301 = sub i32 %252, %253, !dbg !17554
  %254 = load i32, i32* %Zspace, align 4, !dbg !17555
  %cmp302 = icmp sgt i32 %sub301, %254, !dbg !17556
  br i1 %cmp302, label %if.then304, label %if.end306, !dbg !17557

if.then304:                                       ; preds = %if.end300
  %255 = load i32, i32* %Zspace, align 4, !dbg !17558
  %256 = load i32, i32* %i, align 4, !dbg !17559
  %add305 = add i32 %255, %256, !dbg !17560
  store i32 %add305, i32* %ii, align 4, !dbg !17561
  br label %if.end306, !dbg !17562

if.end306:                                        ; preds = %if.then304, %if.end300
  %257 = load i32, i32* @debug, align 4, !dbg !17563
  %and307 = and i32 %257, 65536, !dbg !17565
  %tobool308 = icmp ne i32 %and307, 0, !dbg !17565
  br i1 %tobool308, label %if.then309, label %if.end316, !dbg !17566

if.then309:                                       ; preds = %if.end306
  %258 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17567
  %id310 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %258, i32 0, i32 2, !dbg !17568
  %259 = load i32, i32* %id310, align 8, !dbg !17568
  %add311 = add i32 %259, 1, !dbg !17569
  %260 = load i32, i32* %ch.addr, align 4, !dbg !17570
  %261 = load i32, i32* %Zspace, align 4, !dbg !17571
  %262 = load i32, i32* %z1, align 4, !dbg !17572
  %263 = load i32, i32* %z2, align 4, !dbg !17573
  %264 = load i32, i32* %ii, align 4, !dbg !17574
  %265 = load i32, i32* %i, align 4, !dbg !17575
  %sub312 = sub i32 %264, %265, !dbg !17576
  %266 = load i32, i32* %len, align 4, !dbg !17577
  %267 = load i32, i32* %i, align 4, !dbg !17578
  %sub313 = sub i32 %266, %267, !dbg !17579
  %268 = load i32, i32* %temp, align 4, !dbg !17580
  %tobool314 = icmp ne i32 %268, 0, !dbg !17580
  %269 = zext i1 %tobool314 to i64, !dbg !17580
  %cond = select i1 %tobool314, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i64 0, i64 0), !dbg !17580
  %call315 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_tx, i64 0, i64 0), i32 %add311, i32 %260, i32 %261, i32 %262, i32 %263, i32 %sub312, i32 %sub313, i8* %cond) #13, !dbg !17581
  br label %if.end316, !dbg !17581

if.end316:                                        ; preds = %if.then309, %if.end306
  %270 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17582
  %write_fifo317 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %270, i32 0, i32 19, !dbg !17583
  %271 = load void (%struct.hfc_multi*, i8*, i32)*, void (%struct.hfc_multi*, i8*, i32)** %write_fifo317, align 8, !dbg !17583
  %272 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17584
  %273 = load i8*, i8** %d, align 8, !dbg !17585
  %274 = load i32, i32* %ii, align 4, !dbg !17586
  %275 = load i32, i32* %i, align 4, !dbg !17587
  %sub318 = sub i32 %274, %275, !dbg !17588
  call void %271(%struct.hfc_multi* %272, i8* %273, i32 %sub318) #12, !dbg !17582
  %276 = load i32, i32* %ii, align 4, !dbg !17589
  %277 = load i32, i32* %i, align 4, !dbg !17590
  %sub319 = sub i32 %276, %277, !dbg !17591
  %278 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17592
  %chan320 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %278, i32 0, i32 60, !dbg !17593
  %279 = load i32, i32* %ch.addr, align 4, !dbg !17594
  %idxprom321 = sext i32 %279 to i64, !dbg !17592
  %arrayidx322 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan320, i64 0, i64 %idxprom321, !dbg !17592
  %Zfill323 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx322, i32 0, i32 19, !dbg !17595
  %280 = load i32, i32* %Zfill323, align 8, !dbg !17596
  %add324 = add i32 %280, %sub319, !dbg !17596
  store i32 %add324, i32* %Zfill323, align 8, !dbg !17596
  %281 = load i32, i32* %ii, align 4, !dbg !17597
  %282 = load i32*, i32** %idxp, align 8, !dbg !17598
  store i32 %281, i32* %282, align 4, !dbg !17599
  %283 = load i32, i32* %ii, align 4, !dbg !17600
  %284 = load i32, i32* %len, align 4, !dbg !17602
  %cmp325 = icmp ne i32 %283, %284, !dbg !17603
  br i1 %cmp325, label %if.then327, label %if.end328, !dbg !17604

if.then327:                                       ; preds = %if.end316
  br label %if.end359, !dbg !17605

if.end328:                                        ; preds = %if.end316
  %285 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17607
  %tobool329 = icmp ne %struct.dchannel* %285, null, !dbg !17607
  br i1 %tobool329, label %if.then334, label %lor.lhs.false330, !dbg !17609

lor.lhs.false330:                                 ; preds = %if.end328
  %286 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17610
  %Flags331 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %286, i32 0, i32 2, !dbg !17611
  %call332 = call zeroext i1 @test_bit(i64 13, i64* %Flags331) #12, !dbg !17612
  br i1 %call332, label %if.then334, label %if.end337, !dbg !17613

if.then334:                                       ; preds = %lor.lhs.false330, %if.end328
  %287 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17614
  %HFC_outb_nodebug335 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %287, i32 0, i32 11, !dbg !17614
  %288 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug335, align 8, !dbg !17614
  %289 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17614
  call void %288(%struct.hfc_multi* %289, i8 zeroext 14, i8 zeroext 1) #12, !dbg !17614
  %290 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17616
  %HFC_wait_nodebug336 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %290, i32 0, i32 17, !dbg !17616
  %291 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug336, align 8, !dbg !17616
  %292 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17616
  call void %291(%struct.hfc_multi* %292) #12, !dbg !17616
  br label %if.end337, !dbg !17617

if.end337:                                        ; preds = %if.then334, %lor.lhs.false330
  %293 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !17618
  %294 = load %struct.sk_buff*, %struct.sk_buff** %293, align 8, !dbg !17618
  call void @consume_skb(%struct.sk_buff* %294) #12, !dbg !17618
  %295 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17619
  %tobool338 = icmp ne %struct.bchannel* %295, null, !dbg !17619
  br i1 %tobool338, label %land.lhs.true339, label %if.end344, !dbg !17621

land.lhs.true339:                                 ; preds = %if.end337
  %296 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17622
  %call340 = call i32 @get_next_bframe(%struct.bchannel* %296) #12, !dbg !17623
  %tobool341 = icmp ne i32 %call340, 0, !dbg !17623
  br i1 %tobool341, label %if.then342, label %if.end344, !dbg !17624

if.then342:                                       ; preds = %land.lhs.true339
  %297 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !17625
  %298 = load %struct.sk_buff*, %struct.sk_buff** %297, align 8, !dbg !17627
  %len343 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %298, i32 0, i32 5, !dbg !17628
  %299 = load i32, i32* %len343, align 8, !dbg !17628
  store i32 %299, i32* %len, align 4, !dbg !17629
  br label %next_frame, !dbg !17630

if.end344:                                        ; preds = %land.lhs.true339, %if.end337
  %300 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17631
  %tobool345 = icmp ne %struct.dchannel* %300, null, !dbg !17631
  br i1 %tobool345, label %land.lhs.true346, label %if.end351, !dbg !17633

land.lhs.true346:                                 ; preds = %if.end344
  %301 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !17634
  %call347 = call i32 @get_next_dframe(%struct.dchannel* %301) #12, !dbg !17635
  %tobool348 = icmp ne i32 %call347, 0, !dbg !17635
  br i1 %tobool348, label %if.then349, label %if.end351, !dbg !17636

if.then349:                                       ; preds = %land.lhs.true346
  %302 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !17637
  %303 = load %struct.sk_buff*, %struct.sk_buff** %302, align 8, !dbg !17639
  %len350 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %303, i32 0, i32 5, !dbg !17640
  %304 = load i32, i32* %len350, align 8, !dbg !17640
  store i32 %304, i32* %len, align 4, !dbg !17641
  br label %next_frame, !dbg !17642

if.end351:                                        ; preds = %land.lhs.true346, %if.end344
  %305 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17643
  %tobool352 = icmp ne %struct.bchannel* %305, null, !dbg !17643
  br i1 %tobool352, label %land.lhs.true353, label %if.end359, !dbg !17645

land.lhs.true353:                                 ; preds = %if.end351
  %306 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17646
  %Flags354 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %306, i32 0, i32 2, !dbg !17647
  %call355 = call zeroext i1 @test_bit(i64 12, i64* %Flags354) #12, !dbg !17648
  br i1 %call355, label %if.then357, label %if.end359, !dbg !17649

if.then357:                                       ; preds = %land.lhs.true353
  %307 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17650
  %HFC_outb_nodebug358 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %307, i32 0, i32 11, !dbg !17650
  %308 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug358, align 8, !dbg !17650
  %309 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17650
  %310 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17650
  %silence = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %310, i32 0, i32 33, !dbg !17650
  %311 = load i8, i8* %silence, align 4, !dbg !17650
  call void %308(%struct.hfc_multi* %309, i8 zeroext -124, i8 zeroext %311) #12, !dbg !17650
  br label %if.end359, !dbg !17650

if.end359:                                        ; preds = %if.then, %if.then17, %if.then21, %if.then32, %if.then109, %if.then174, %if.end222, %if.then327, %if.then357, %land.lhs.true353, %if.end351
  ret void, !dbg !17651
}

; Function Attrs: noredzone
declare dso_local void @queue_ch_frame(%struct.mISDNchannel*, i32, i32, %struct.sk_buff*) #3

; Function Attrs: noredzone
declare dso_local void @skb_queue_purge(%struct.sk_buff_head*) #3

; Function Attrs: noredzone
declare dso_local i32 @get_next_bframe(%struct.bchannel*) #3

; Function Attrs: noredzone
declare dso_local i32 @get_next_dframe(%struct.dchannel*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @open_dchannel(%struct.hfc_multi* %hc, %struct.dchannel* %dch, %struct.channel_req* %rq) #2 !dbg !17652 {
entry:
  %lock.addr.i83 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i83, metadata !10043, metadata !DIExpression()), !dbg !17655
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !17659
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !17660
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %dch.addr = alloca %struct.dchannel*, align 8
  %rq.addr = alloca %struct.channel_req*, align 8
  %err = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy55 = alloca i64, align 8
  %__dummy256 = alloca i64, align 8
  %tmp59 = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !17667, metadata !DIExpression()), !dbg !17668
  store %struct.dchannel* %dch, %struct.dchannel** %dch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch.addr, metadata !17669, metadata !DIExpression()), !dbg !17670
  store %struct.channel_req* %rq, %struct.channel_req** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.channel_req** %rq.addr, metadata !17671, metadata !DIExpression()), !dbg !17672
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17673, metadata !DIExpression()), !dbg !17674
  store i32 0, i32* %err, align 4, !dbg !17674
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17675, metadata !DIExpression()), !dbg !17676
  %0 = load i32, i32* @debug, align 4, !dbg !17677
  %and = and i32 %0, 2, !dbg !17679
  %tobool = icmp ne i32 %and, 0, !dbg !17679
  br i1 %tobool, label %if.then, label %if.end, !dbg !17680

if.then:                                          ; preds = %entry
  %1 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17681
  %dev = getelementptr inbounds %struct.dchannel, %struct.dchannel* %1, i32 0, i32 0, !dbg !17682
  %id = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev, i32 0, i32 1, !dbg !17683
  %2 = load i32, i32* %id, align 8, !dbg !17683
  %3 = call i8* @llvm.returnaddress(i32 0), !dbg !17684
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.open_dchannel, i64 0, i64 0), i32 %2, i8* %3) #13, !dbg !17685
  br label %if.end, !dbg !17685

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17686
  %protocol = getelementptr inbounds %struct.channel_req, %struct.channel_req* %4, i32 0, i32 0, !dbg !17688
  %5 = load i32, i32* %protocol, align 8, !dbg !17688
  %cmp = icmp eq i32 %5, 0, !dbg !17689
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !17690

if.then1:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !17691
  br label %return, !dbg !17691

if.end2:                                          ; preds = %if.end
  %6 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17692
  %dev3 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %6, i32 0, i32 0, !dbg !17694
  %D = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev3, i32 0, i32 0, !dbg !17695
  %protocol4 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D, i32 0, i32 1, !dbg !17696
  %7 = load i32, i32* %protocol4, align 8, !dbg !17696
  %cmp5 = icmp ne i32 %7, 0, !dbg !17697
  br i1 %cmp5, label %land.lhs.true, label %if.end21, !dbg !17698

land.lhs.true:                                    ; preds = %if.end2
  %8 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17699
  %dev6 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %8, i32 0, i32 0, !dbg !17700
  %D7 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev6, i32 0, i32 0, !dbg !17701
  %protocol8 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D7, i32 0, i32 1, !dbg !17702
  %9 = load i32, i32* %protocol8, align 8, !dbg !17702
  %10 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17703
  %protocol9 = getelementptr inbounds %struct.channel_req, %struct.channel_req* %10, i32 0, i32 0, !dbg !17704
  %11 = load i32, i32* %protocol9, align 8, !dbg !17704
  %cmp10 = icmp ne i32 %9, %11, !dbg !17705
  br i1 %cmp10, label %if.then11, label %if.end21, !dbg !17706

if.then11:                                        ; preds = %land.lhs.true
  %12 = load i32, i32* @debug, align 4, !dbg !17707
  %and12 = and i32 %12, 1048576, !dbg !17710
  %tobool13 = icmp ne i32 %and12, 0, !dbg !17710
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !17711

if.then14:                                        ; preds = %if.then11
  %13 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17712
  %dev15 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %13, i32 0, i32 0, !dbg !17713
  %D16 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev15, i32 0, i32 0, !dbg !17714
  %protocol17 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D16, i32 0, i32 1, !dbg !17715
  %14 = load i32, i32* %protocol17, align 8, !dbg !17715
  %15 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17716
  %protocol18 = getelementptr inbounds %struct.channel_req, %struct.channel_req* %15, i32 0, i32 0, !dbg !17717
  %16 = load i32, i32* %protocol18, align 8, !dbg !17717
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.open_dchannel, i64 0, i64 0), i32 %14, i32 %16) #13, !dbg !17718
  br label %if.end20, !dbg !17718

if.end20:                                         ; preds = %if.then14, %if.then11
  br label %if.end21, !dbg !17719

if.end21:                                         ; preds = %if.end20, %land.lhs.true, %if.end2
  %17 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17720
  %dev22 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %17, i32 0, i32 0, !dbg !17722
  %D23 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev22, i32 0, i32 0, !dbg !17723
  %protocol24 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D23, i32 0, i32 1, !dbg !17724
  %18 = load i32, i32* %protocol24, align 8, !dbg !17724
  %cmp25 = icmp eq i32 %18, 1, !dbg !17725
  br i1 %cmp25, label %land.lhs.true26, label %if.end31, !dbg !17726

land.lhs.true26:                                  ; preds = %if.end21
  %19 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17727
  %protocol27 = getelementptr inbounds %struct.channel_req, %struct.channel_req* %19, i32 0, i32 0, !dbg !17728
  %20 = load i32, i32* %protocol27, align 8, !dbg !17728
  %cmp28 = icmp ne i32 %20, 1, !dbg !17729
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !17730

if.then29:                                        ; preds = %land.lhs.true26
  %21 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17731
  %l1 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %21, i32 0, i32 5, !dbg !17732
  %22 = load i8*, i8** %l1, align 8, !dbg !17732
  %23 = bitcast i8* %22 to %struct.layer1*, !dbg !17731
  %call30 = call i32 @l1_event(%struct.layer1* %23, i32 512) #12, !dbg !17733
  br label %if.end31, !dbg !17733

if.end31:                                         ; preds = %if.then29, %land.lhs.true26, %if.end21
  %24 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17734
  %dev32 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %24, i32 0, i32 0, !dbg !17735
  %D33 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev32, i32 0, i32 0, !dbg !17736
  %protocol34 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D33, i32 0, i32 1, !dbg !17737
  %25 = load i32, i32* %protocol34, align 8, !dbg !17737
  %26 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17738
  %protocol35 = getelementptr inbounds %struct.channel_req, %struct.channel_req* %26, i32 0, i32 0, !dbg !17739
  %27 = load i32, i32* %protocol35, align 8, !dbg !17739
  %cmp36 = icmp ne i32 %25, %27, !dbg !17740
  br i1 %cmp36, label %if.then37, label %if.end71, !dbg !17741

if.then37:                                        ; preds = %if.end31
  %28 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17742
  %protocol38 = getelementptr inbounds %struct.channel_req, %struct.channel_req* %28, i32 0, i32 0, !dbg !17744
  %29 = load i32, i32* %protocol38, align 8, !dbg !17744
  %cmp39 = icmp eq i32 %29, 1, !dbg !17745
  br i1 %cmp39, label %if.then40, label %if.end45, !dbg !17746

if.then40:                                        ; preds = %if.then37
  %30 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17747
  %call41 = call i32 @create_l1(%struct.dchannel* %30, i32 (%struct.dchannel*, i32)* @hfcm_l1callback) #12, !dbg !17749
  store i32 %call41, i32* %err, align 4, !dbg !17750
  %31 = load i32, i32* %err, align 4, !dbg !17751
  %tobool42 = icmp ne i32 %31, 0, !dbg !17751
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !17753

if.then43:                                        ; preds = %if.then40
  %32 = load i32, i32* %err, align 4, !dbg !17754
  store i32 %32, i32* %retval, align 4, !dbg !17755
  br label %return, !dbg !17755

if.end44:                                         ; preds = %if.then40
  br label %if.end45, !dbg !17756

if.end45:                                         ; preds = %if.end44, %if.then37
  %33 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17757
  %protocol46 = getelementptr inbounds %struct.channel_req, %struct.channel_req* %33, i32 0, i32 0, !dbg !17758
  %34 = load i32, i32* %protocol46, align 8, !dbg !17758
  %35 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17759
  %dev47 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %35, i32 0, i32 0, !dbg !17760
  %D48 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev47, i32 0, i32 0, !dbg !17761
  %protocol49 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D48, i32 0, i32 1, !dbg !17762
  store i32 %34, i32* %protocol49, align 8, !dbg !17763
  br label %do.body, !dbg !17764

do.body:                                          ; preds = %if.end45
  br label %do.body50, !dbg !17765

do.body50:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17766, metadata !DIExpression()), !dbg !17768
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17769, metadata !DIExpression()), !dbg !17768
  %cmp51 = icmp eq i64* %__dummy, %__dummy2, !dbg !17768
  %conv = zext i1 %cmp51 to i32, !dbg !17768
  store i32 1, i32* %tmp, align 4, !dbg !17768
  %36 = load i32, i32* %tmp, align 4, !dbg !17768
  br label %do.body52, !dbg !17770

do.body52:                                        ; preds = %do.body50
  br label %do.body53, !dbg !17771

do.body53:                                        ; preds = %do.body52
  br label %do.body54, !dbg !17772

do.body54:                                        ; preds = %do.body53
  call void @llvm.dbg.declare(metadata i64* %__dummy55, metadata !17774, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.declare(metadata i64* %__dummy256, metadata !17778, metadata !DIExpression()), !dbg !17777
  %cmp57 = icmp eq i64* %__dummy55, %__dummy256, !dbg !17777
  %conv58 = zext i1 %cmp57 to i32, !dbg !17777
  store i32 1, i32* %tmp59, align 4, !dbg !17777
  %37 = load i32, i32* %tmp59, align 4, !dbg !17777
  %call60 = call i64 @arch_local_irq_save() #12, !dbg !17779
  store i64 %call60, i64* %flags, align 8, !dbg !17779
  br label %do.end, !dbg !17779

do.end:                                           ; preds = %do.body54
  br label %do.end61, !dbg !17772

do.end61:                                         ; preds = %do.end
  br label %do.body62, !dbg !17771

do.body62:                                        ; preds = %do.end61
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !17780, !srcloc !17781
  br label %do.body63, !dbg !17780

do.body63:                                        ; preds = %do.body62
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17782
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 57, !dbg !17782
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17783
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !17784
  %rlock.i = bitcast %union.anon.1* %40 to %struct.raw_spinlock*, !dbg !17784
  br label %do.end65, !dbg !17782

do.end65:                                         ; preds = %do.body63
  br label %do.end66, !dbg !17780

do.end66:                                         ; preds = %do.end65
  br label %do.end67, !dbg !17771

do.end67:                                         ; preds = %do.end66
  br label %do.end68, !dbg !17770

do.end68:                                         ; preds = %do.end67
  br label %do.end69, !dbg !17765

do.end69:                                         ; preds = %do.end68
  %41 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17785
  call void @hfcmulti_initmode(%struct.dchannel* %41) #12, !dbg !17786
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17787
  %lock70 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %42, i32 0, i32 57, !dbg !17788
  %43 = load i64, i64* %flags, align 8, !dbg !17789
  store %struct.spinlock* %lock70, %struct.spinlock** %lock.addr.i83, align 8
  store i64 %43, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !17790
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !17790
  store i32 1, i32* %tmp.i, align 4, !dbg !17790
  %44 = load i32, i32* %tmp.i, align 4, !dbg !17790
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !17791
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !17791
  store i32 1, i32* %tmp8.i, align 4, !dbg !17791
  %45 = load i32, i32* %tmp8.i, align 4, !dbg !17791
  %46 = load i64, i64* %flags.addr.i, align 8, !dbg !17792
  call void @arch_local_irq_restore(i64 %46) #14, !dbg !17792
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !17793, !srcloc !10125
  %47 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i83, align 8, !dbg !17794
  %48 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %47, i32 0, i32 0, !dbg !17794
  %rlock.i84 = bitcast %union.anon.1* %48 to %struct.raw_spinlock*, !dbg !17794
  br label %if.end71, !dbg !17795

if.end71:                                         ; preds = %do.end69, %if.end31
  %49 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17796
  %Flags = getelementptr inbounds %struct.dchannel, %struct.dchannel* %49, i32 0, i32 1, !dbg !17798
  %call72 = call zeroext i1 @test_bit(i64 6, i64* %Flags) #12, !dbg !17799
  br i1 %call72, label %if.then73, label %if.end76, !dbg !17800

if.then73:                                        ; preds = %if.end71
  %50 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17801
  %dev74 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %50, i32 0, i32 0, !dbg !17802
  %D75 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev74, i32 0, i32 0, !dbg !17803
  call void @_queue_data(%struct.mISDNchannel* %D75, i32 258, i32 65535, i32 0, i8* null, i32 3264) #12, !dbg !17804
  br label %if.end76, !dbg !17804

if.end76:                                         ; preds = %if.then73, %if.end71
  %51 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17805
  %dev77 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %51, i32 0, i32 0, !dbg !17806
  %D78 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev77, i32 0, i32 0, !dbg !17807
  %52 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17808
  %ch = getelementptr inbounds %struct.channel_req, %struct.channel_req* %52, i32 0, i32 2, !dbg !17809
  store %struct.mISDNchannel* %D78, %struct.mISDNchannel** %ch, align 8, !dbg !17810
  %call79 = call zeroext i1 @try_module_get(%struct.module* null) #12, !dbg !17811
  br i1 %call79, label %if.end82, label %if.then80, !dbg !17813

if.then80:                                        ; preds = %if.end76
  %call81 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.open_dchannel, i64 0, i64 0)) #13, !dbg !17814
  br label %if.end82, !dbg !17814

if.end82:                                         ; preds = %if.then80, %if.end76
  store i32 0, i32* %retval, align 4, !dbg !17815
  br label %return, !dbg !17815

return:                                           ; preds = %if.end82, %if.then43, %if.then1
  %53 = load i32, i32* %retval, align 4, !dbg !17816
  ret i32 %53, !dbg !17816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @open_bchannel(%struct.hfc_multi* %hc, %struct.dchannel* %dch, %struct.channel_req* %rq) #2 !dbg !17817 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %dch.addr = alloca %struct.dchannel*, align 8
  %rq.addr = alloca %struct.channel_req*, align 8
  %bch = alloca %struct.bchannel*, align 8
  %ch = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !17818, metadata !DIExpression()), !dbg !17819
  store %struct.dchannel* %dch, %struct.dchannel** %dch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch.addr, metadata !17820, metadata !DIExpression()), !dbg !17821
  store %struct.channel_req* %rq, %struct.channel_req** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.channel_req** %rq.addr, metadata !17822, metadata !DIExpression()), !dbg !17823
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !17824, metadata !DIExpression()), !dbg !17825
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !17826, metadata !DIExpression()), !dbg !17827
  %0 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17828
  %adr = getelementptr inbounds %struct.channel_req, %struct.channel_req* %0, i32 0, i32 1, !dbg !17830
  %channel = getelementptr inbounds %struct.sockaddr_mISDN, %struct.sockaddr_mISDN* %adr, i32 0, i32 2, !dbg !17831
  %1 = load i8, i8* %channel, align 1, !dbg !17831
  %conv = zext i8 %1 to i32, !dbg !17828
  %2 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17832
  %dev = getelementptr inbounds %struct.dchannel, %struct.dchannel* %2, i32 0, i32 0, !dbg !17833
  %channelmap = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev, i32 0, i32 5, !dbg !17834
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %channelmap, i64 0, i64 0, !dbg !17832
  %call = call i32 @test_channelmap(i32 %conv, i8* %arraydecay) #12, !dbg !17835
  %tobool = icmp ne i32 %call, 0, !dbg !17835
  br i1 %tobool, label %if.end, label %if.then, !dbg !17836

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !17837
  br label %return, !dbg !17837

if.end:                                           ; preds = %entry
  %3 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17838
  %protocol = getelementptr inbounds %struct.channel_req, %struct.channel_req* %3, i32 0, i32 0, !dbg !17840
  %4 = load i32, i32* %protocol, align 8, !dbg !17840
  %cmp = icmp eq i32 %4, 0, !dbg !17841
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !17842

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !17843
  br label %return, !dbg !17843

if.end3:                                          ; preds = %if.end
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17844
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 4, !dbg !17846
  %6 = load i32, i32* %ctype, align 8, !dbg !17846
  %cmp4 = icmp eq i32 %6, 1, !dbg !17847
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !17848

if.then6:                                         ; preds = %if.end3
  %7 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17849
  %adr7 = getelementptr inbounds %struct.channel_req, %struct.channel_req* %7, i32 0, i32 1, !dbg !17850
  %channel8 = getelementptr inbounds %struct.sockaddr_mISDN, %struct.sockaddr_mISDN* %adr7, i32 0, i32 2, !dbg !17851
  %8 = load i8, i8* %channel8, align 1, !dbg !17851
  %conv9 = zext i8 %8 to i32, !dbg !17849
  store i32 %conv9, i32* %ch, align 4, !dbg !17852
  br label %if.end14, !dbg !17853

if.else:                                          ; preds = %if.end3
  %9 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17854
  %adr10 = getelementptr inbounds %struct.channel_req, %struct.channel_req* %9, i32 0, i32 1, !dbg !17855
  %channel11 = getelementptr inbounds %struct.sockaddr_mISDN, %struct.sockaddr_mISDN* %adr10, i32 0, i32 2, !dbg !17856
  %10 = load i8, i8* %channel11, align 1, !dbg !17856
  %conv12 = zext i8 %10 to i32, !dbg !17854
  %sub = sub i32 %conv12, 1, !dbg !17857
  %11 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17858
  %slot = getelementptr inbounds %struct.dchannel, %struct.dchannel* %11, i32 0, i32 7, !dbg !17859
  %12 = load i32, i32* %slot, align 8, !dbg !17859
  %sub13 = sub i32 %12, 2, !dbg !17860
  %add = add i32 %sub, %sub13, !dbg !17861
  store i32 %add, i32* %ch, align 4, !dbg !17862
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then6
  %13 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17863
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %13, i32 0, i32 60, !dbg !17864
  %14 = load i32, i32* %ch, align 4, !dbg !17865
  %idxprom = sext i32 %14 to i64, !dbg !17863
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !17863
  %bch15 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 1, !dbg !17866
  %15 = load %struct.bchannel*, %struct.bchannel** %bch15, align 8, !dbg !17866
  store %struct.bchannel* %15, %struct.bchannel** %bch, align 8, !dbg !17867
  %16 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17868
  %tobool16 = icmp ne %struct.bchannel* %16, null, !dbg !17868
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !17870

if.then17:                                        ; preds = %if.end14
  %17 = load i32, i32* %ch, align 4, !dbg !17871
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.open_bchannel, i64 0, i64 0), i32 %17) #13, !dbg !17873
  store i32 -22, i32* %retval, align 4, !dbg !17874
  br label %return, !dbg !17874

if.end19:                                         ; preds = %if.end14
  %18 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17875
  %Flags = getelementptr inbounds %struct.bchannel, %struct.bchannel* %18, i32 0, i32 2, !dbg !17877
  %call20 = call zeroext i1 @test_and_set_bit(i64 5, i64* %Flags) #12, !dbg !17878
  br i1 %call20, label %if.then21, label %if.end22, !dbg !17879

if.then21:                                        ; preds = %if.end19
  store i32 -16, i32* %retval, align 4, !dbg !17880
  br label %return, !dbg !17880

if.end22:                                         ; preds = %if.end19
  %19 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17881
  %protocol23 = getelementptr inbounds %struct.channel_req, %struct.channel_req* %19, i32 0, i32 0, !dbg !17882
  %20 = load i32, i32* %protocol23, align 8, !dbg !17882
  %21 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17883
  %ch24 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %21, i32 0, i32 0, !dbg !17884
  %protocol25 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %ch24, i32 0, i32 1, !dbg !17885
  store i32 %20, i32* %protocol25, align 8, !dbg !17886
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !17887
  %chan26 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 60, !dbg !17888
  %23 = load i32, i32* %ch, align 4, !dbg !17889
  %idxprom27 = sext i32 %23 to i64, !dbg !17887
  %arrayidx28 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan26, i64 0, i64 %idxprom27, !dbg !17887
  %rx_off = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx28, i32 0, i32 20, !dbg !17890
  store i32 0, i32* %rx_off, align 4, !dbg !17891
  %24 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !17892
  %ch29 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %24, i32 0, i32 0, !dbg !17893
  %25 = load %struct.channel_req*, %struct.channel_req** %rq.addr, align 8, !dbg !17894
  %ch30 = getelementptr inbounds %struct.channel_req, %struct.channel_req* %25, i32 0, i32 2, !dbg !17895
  store %struct.mISDNchannel* %ch29, %struct.mISDNchannel** %ch30, align 8, !dbg !17896
  %call31 = call zeroext i1 @try_module_get(%struct.module* null) #12, !dbg !17897
  br i1 %call31, label %if.end34, label %if.then32, !dbg !17899

if.then32:                                        ; preds = %if.end22
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.open_bchannel, i64 0, i64 0)) #13, !dbg !17900
  br label %if.end34, !dbg !17900

if.end34:                                         ; preds = %if.then32, %if.end22
  store i32 0, i32* %retval, align 4, !dbg !17901
  br label %return, !dbg !17901

return:                                           ; preds = %if.end34, %if.then21, %if.then17, %if.then2, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !17902
  ret i32 %26, !dbg !17902
}

; Function Attrs: nounwind readnone
declare i8* @llvm.returnaddress(i32 immarg) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #2 !dbg !17903 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !17904, metadata !DIExpression()), !dbg !17905
  ret void, !dbg !17906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @channel_dctrl(%struct.dchannel* %dch, %struct.mISDN_ctrl_req* %cq) #2 !dbg !17907 {
entry:
  %dch.addr = alloca %struct.dchannel*, align 8
  %cq.addr = alloca %struct.mISDN_ctrl_req*, align 8
  %hc = alloca %struct.hfc_multi*, align 8
  %ret = alloca i32, align 4
  %wd_mode = alloca i32, align 4
  %wd_cnt = alloca i32, align 4
  store %struct.dchannel* %dch, %struct.dchannel** %dch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch.addr, metadata !17917, metadata !DIExpression()), !dbg !17918
  store %struct.mISDN_ctrl_req* %cq, %struct.mISDN_ctrl_req** %cq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mISDN_ctrl_req** %cq.addr, metadata !17919, metadata !DIExpression()), !dbg !17920
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !17921, metadata !DIExpression()), !dbg !17922
  %0 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17923
  %hw = getelementptr inbounds %struct.dchannel, %struct.dchannel* %0, i32 0, i32 6, !dbg !17924
  %1 = load i8*, i8** %hw, align 8, !dbg !17924
  %2 = bitcast i8* %1 to %struct.hfc_multi*, !dbg !17923
  store %struct.hfc_multi* %2, %struct.hfc_multi** %hc, align 8, !dbg !17922
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17925, metadata !DIExpression()), !dbg !17926
  store i32 0, i32* %ret, align 4, !dbg !17926
  call void @llvm.dbg.declare(metadata i32* %wd_mode, metadata !17927, metadata !DIExpression()), !dbg !17928
  call void @llvm.dbg.declare(metadata i32* %wd_cnt, metadata !17929, metadata !DIExpression()), !dbg !17930
  %3 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !17931
  %op = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %3, i32 0, i32 0, !dbg !17932
  %4 = load i32, i32* %op, align 4, !dbg !17932
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 16393, label %sw.bb2
    i32 16394, label %sw.bb33
    i32 2048, label %sw.bb45
  ], !dbg !17933

sw.bb:                                            ; preds = %entry
  %5 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !17934
  %op1 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %5, i32 0, i32 0, !dbg !17936
  store i32 18432, i32* %op1, align 4, !dbg !17937
  br label %sw.epilog, !dbg !17938

sw.bb2:                                           ; preds = %entry
  %6 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !17939
  %p1 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %6, i32 0, i32 2, !dbg !17940
  %7 = load i32, i32* %p1, align 4, !dbg !17940
  %and = and i32 %7, 15, !dbg !17941
  store i32 %and, i32* %wd_cnt, align 4, !dbg !17942
  %8 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !17943
  %p13 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %8, i32 0, i32 2, !dbg !17944
  %9 = load i32, i32* %p13, align 4, !dbg !17944
  %shr = ashr i32 %9, 4, !dbg !17945
  %tobool = icmp ne i32 %shr, 0, !dbg !17946
  %lnot = xor i1 %tobool, true, !dbg !17946
  %lnot4 = xor i1 %lnot, true, !dbg !17947
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !17947
  store i32 %lnot.ext, i32* %wd_mode, align 4, !dbg !17948
  %10 = load i32, i32* @debug, align 4, !dbg !17949
  %and5 = and i32 %10, 2097152, !dbg !17951
  %tobool6 = icmp ne i32 %and5, 0, !dbg !17951
  br i1 %tobool6, label %if.then, label %if.end, !dbg !17952

if.then:                                          ; preds = %sw.bb2
  %11 = load i32, i32* %wd_mode, align 4, !dbg !17953
  %tobool7 = icmp ne i32 %11, 0, !dbg !17953
  %12 = zext i1 %tobool7 to i64, !dbg !17953
  %cond = select i1 %tobool7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.156, i64 0, i64 0), !dbg !17953
  %13 = load i32, i32* %wd_cnt, align 4, !dbg !17954
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_dctrl, i64 0, i64 0), i8* %cond, i32 %13) #13, !dbg !17955
  br label %if.end, !dbg !17955

if.end:                                           ; preds = %if.then, %sw.bb2
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17956
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %14, i32 0, i32 10, !dbg !17956
  %15 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !17956
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17956
  %17 = load i32, i32* @poll_timer, align 4, !dbg !17956
  %18 = load i32, i32* %wd_cnt, align 4, !dbg !17956
  %shl = shl i32 %18, 4, !dbg !17956
  %or = or i32 %17, %shl, !dbg !17956
  %conv = trunc i32 %or to i8, !dbg !17956
  call void %15(%struct.hfc_multi* %16, i8 zeroext 26, i8 zeroext %conv) #12, !dbg !17956
  %19 = load i32, i32* %wd_mode, align 4, !dbg !17957
  %tobool8 = icmp ne i32 %19, 0, !dbg !17957
  %20 = zext i1 %tobool8 to i64, !dbg !17957
  %cond9 = select i1 %tobool8, i32 32, i32 0, !dbg !17957
  %conv10 = trunc i32 %cond9 to i8, !dbg !17958
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17959
  %hw11 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 30, !dbg !17960
  %r_bert_wd_md = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw11, i32 0, i32 12, !dbg !17961
  store i8 %conv10, i8* %r_bert_wd_md, align 1, !dbg !17962
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17963
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 4, !dbg !17965
  %23 = load i32, i32* %ctype, align 8, !dbg !17965
  %cmp = icmp eq i32 %23, 5, !dbg !17966
  br i1 %cmp, label %if.then13, label %if.end19, !dbg !17967

if.then13:                                        ; preds = %if.end
  %24 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17968
  %hw14 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %24, i32 0, i32 30, !dbg !17969
  %r_bert_wd_md15 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw14, i32 0, i32 12, !dbg !17970
  %25 = load i8, i8* %r_bert_wd_md15, align 1, !dbg !17971
  %conv16 = zext i8 %25 to i32, !dbg !17971
  %or17 = or i32 %conv16, 64, !dbg !17971
  %conv18 = trunc i32 %or17 to i8, !dbg !17971
  store i8 %conv18, i8* %r_bert_wd_md15, align 1, !dbg !17971
  br label %if.end19, !dbg !17968

if.end19:                                         ; preds = %if.then13, %if.end
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17972
  %HFC_outb20 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %26, i32 0, i32 10, !dbg !17972
  %27 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb20, align 8, !dbg !17972
  %28 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17972
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17972
  %hw21 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %29, i32 0, i32 30, !dbg !17972
  %r_bert_wd_md22 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw21, i32 0, i32 12, !dbg !17972
  %30 = load i8, i8* %r_bert_wd_md22, align 1, !dbg !17972
  %conv23 = zext i8 %30 to i32, !dbg !17972
  %or24 = or i32 %conv23, 128, !dbg !17972
  %conv25 = trunc i32 %or24 to i8, !dbg !17972
  call void %27(%struct.hfc_multi* %28, i8 zeroext 27, i8 zeroext %conv25) #12, !dbg !17972
  %31 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17973
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %31, i32 0, i32 31, !dbg !17975
  %call26 = call zeroext i1 @test_bit(i64 14, i64* %chip) #12, !dbg !17976
  br i1 %call26, label %if.then27, label %if.end32, !dbg !17977

if.then27:                                        ; preds = %if.end19
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17978
  %HFC_outb28 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %32, i32 0, i32 10, !dbg !17978
  %33 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb28, align 8, !dbg !17978
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17978
  call void %33(%struct.hfc_multi* %34, i8 zeroext 68, i8 zeroext -128) #12, !dbg !17978
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17980
  %HFC_outb29 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 10, !dbg !17980
  %36 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb29, align 8, !dbg !17980
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17980
  call void %36(%struct.hfc_multi* %37, i8 zeroext 67, i8 zeroext -128) #12, !dbg !17980
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17981
  %HFC_outb30 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 10, !dbg !17981
  %39 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb30, align 8, !dbg !17981
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17981
  call void %39(%struct.hfc_multi* %40, i8 zeroext 65, i8 zeroext 0) #12, !dbg !17981
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17982
  %HFC_outb31 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %41, i32 0, i32 10, !dbg !17982
  %42 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb31, align 8, !dbg !17982
  %43 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17982
  call void %42(%struct.hfc_multi* %43, i8 zeroext 65, i8 zeroext -128) #12, !dbg !17982
  br label %if.end32, !dbg !17983

if.end32:                                         ; preds = %if.then27, %if.end19
  br label %sw.epilog, !dbg !17984

sw.bb33:                                          ; preds = %entry
  %44 = load i32, i32* @debug, align 4, !dbg !17985
  %and34 = and i32 %44, 2097152, !dbg !17987
  %tobool35 = icmp ne i32 %and34, 0, !dbg !17987
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !17988

if.then36:                                        ; preds = %sw.bb33
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_dctrl, i64 0, i64 0)) #13, !dbg !17989
  br label %if.end38, !dbg !17989

if.end38:                                         ; preds = %if.then36, %sw.bb33
  %45 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17990
  %HFC_outb39 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %45, i32 0, i32 10, !dbg !17990
  %46 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb39, align 8, !dbg !17990
  %47 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17990
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !17990
  %hw40 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %48, i32 0, i32 30, !dbg !17990
  %r_bert_wd_md41 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw40, i32 0, i32 12, !dbg !17990
  %49 = load i8, i8* %r_bert_wd_md41, align 1, !dbg !17990
  %conv42 = zext i8 %49 to i32, !dbg !17990
  %or43 = or i32 %conv42, 128, !dbg !17990
  %conv44 = trunc i32 %or43 to i8, !dbg !17990
  call void %46(%struct.hfc_multi* %47, i8 zeroext 27, i8 zeroext %conv44) #12, !dbg !17990
  br label %sw.epilog, !dbg !17991

sw.bb45:                                          ; preds = %entry
  %50 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !17992
  %l1 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %50, i32 0, i32 5, !dbg !17993
  %51 = load i8*, i8** %l1, align 8, !dbg !17993
  %52 = bitcast i8* %51 to %struct.layer1*, !dbg !17992
  %53 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !17994
  %p146 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %53, i32 0, i32 2, !dbg !17995
  %54 = load i32, i32* %p146, align 4, !dbg !17995
  %and47 = and i32 %54, 255, !dbg !17996
  %or48 = or i32 39424, %and47, !dbg !17997
  %call49 = call i32 @l1_event(%struct.layer1* %52, i32 %or48) #12, !dbg !17998
  store i32 %call49, i32* %ret, align 4, !dbg !17999
  br label %sw.epilog, !dbg !18000

sw.default:                                       ; preds = %entry
  %55 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !18001
  %op50 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %55, i32 0, i32 0, !dbg !18002
  %56 = load i32, i32* %op50, align 4, !dbg !18002
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_dctrl, i64 0, i64 0), i32 %56) #13, !dbg !18003
  store i32 -22, i32* %ret, align 4, !dbg !18004
  br label %sw.epilog, !dbg !18005

sw.epilog:                                        ; preds = %sw.default, %sw.bb45, %if.end38, %if.end32, %sw.bb
  %57 = load i32, i32* %ret, align 4, !dbg !18006
  ret i32 %57, !dbg !18007
}

; Function Attrs: noredzone
declare dso_local i32 @create_l1(%struct.dchannel*, i32 (%struct.dchannel*, i32)*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hfcm_l1callback(%struct.dchannel* %dch, i32 %cmd) #2 !dbg !18008 {
entry:
  %lock.addr.i177 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i177, metadata !10043, metadata !DIExpression()), !dbg !18011
  %flags.addr.i178 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i178, metadata !10050, metadata !DIExpression()), !dbg !18014
  %tmp.i179 = alloca i32, align 4
  %tmp8.i180 = alloca i32, align 4
  %lock.addr.i175 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i175, metadata !10052, metadata !DIExpression()), !dbg !18015
  %lock.addr.i170 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i170, metadata !10043, metadata !DIExpression()), !dbg !18022
  %flags.addr.i171 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i171, metadata !10050, metadata !DIExpression()), !dbg !18024
  %tmp.i172 = alloca i32, align 4
  %tmp8.i173 = alloca i32, align 4
  %lock.addr.i168 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i168, metadata !10052, metadata !DIExpression()), !dbg !18025
  %lock.addr.i166 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i166, metadata !10043, metadata !DIExpression()), !dbg !18032
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !18034
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !18035
  %retval = alloca i32, align 4
  %dch.addr = alloca %struct.dchannel*, align 8
  %cmd.addr = alloca i32, align 4
  %hc = alloca %struct.hfc_multi*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__dummy34 = alloca i64, align 8
  %__dummy235 = alloca i64, align 8
  %tmp38 = alloca i32, align 4
  %__dummy42 = alloca i64, align 8
  %__dummy243 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  %__dummy107 = alloca i64, align 8
  %__dummy2108 = alloca i64, align 8
  %tmp111 = alloca i32, align 4
  %__dummy115 = alloca i64, align 8
  %__dummy2116 = alloca i64, align 8
  %tmp119 = alloca i32, align 4
  store %struct.dchannel* %dch, %struct.dchannel** %dch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch.addr, metadata !18042, metadata !DIExpression()), !dbg !18043
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !18044, metadata !DIExpression()), !dbg !18045
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !18046, metadata !DIExpression()), !dbg !18047
  %0 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18048
  %hw = getelementptr inbounds %struct.dchannel, %struct.dchannel* %0, i32 0, i32 6, !dbg !18049
  %1 = load i8*, i8** %hw, align 8, !dbg !18049
  %2 = bitcast i8* %1 to %struct.hfc_multi*, !dbg !18048
  store %struct.hfc_multi* %2, %struct.hfc_multi** %hc, align 8, !dbg !18047
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18050, metadata !DIExpression()), !dbg !18051
  %3 = load i32, i32* %cmd.addr, align 4, !dbg !18052
  switch i32 %3, label %sw.default [
    i32 33538, label %sw.bb
    i32 33794, label %sw.bb
    i32 35330, label %sw.bb1
    i32 35842, label %sw.bb31
    i32 35586, label %sw.bb104
    i32 258, label %sw.bb153
    i32 514, label %sw.bb156
  ], !dbg !18053

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !18054

sw.bb1:                                           ; preds = %entry
  br label %do.body, !dbg !18055

do.body:                                          ; preds = %sw.bb1
  br label %do.body2, !dbg !18056

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18057, metadata !DIExpression()), !dbg !18059
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18060, metadata !DIExpression()), !dbg !18059
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !18059
  %conv = zext i1 %cmp to i32, !dbg !18059
  store i32 1, i32* %tmp, align 4, !dbg !18059
  %4 = load i32, i32* %tmp, align 4, !dbg !18059
  br label %do.body3, !dbg !18061

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !18062

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !18063

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !18065, metadata !DIExpression()), !dbg !18068
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !18069, metadata !DIExpression()), !dbg !18068
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !18068
  %conv9 = zext i1 %cmp8 to i32, !dbg !18068
  store i32 1, i32* %tmp10, align 4, !dbg !18068
  %5 = load i32, i32* %tmp10, align 4, !dbg !18068
  %call = call i64 @arch_local_irq_save() #12, !dbg !18070
  store i64 %call, i64* %flags, align 8, !dbg !18070
  br label %do.end, !dbg !18070

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !18063

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !18062

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !18071, !srcloc !18072
  br label %do.body13, !dbg !18071

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18073
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 57, !dbg !18073
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18074
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !18075
  %rlock.i = bitcast %union.anon.1* %8 to %struct.raw_spinlock*, !dbg !18075
  br label %do.end15, !dbg !18073

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !18071

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !18062

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !18061

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !18056

do.end19:                                         ; preds = %do.end18
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18076
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %9, i32 0, i32 4, !dbg !18078
  %10 = load i32, i32* %ctype, align 8, !dbg !18078
  %cmp20 = icmp eq i32 %10, 1, !dbg !18079
  br i1 %cmp20, label %if.then, label %if.else, !dbg !18080

if.then:                                          ; preds = %do.end19
  %11 = load i32, i32* @debug, align 4, !dbg !18081
  %and = and i32 %11, 2097152, !dbg !18084
  %tobool = icmp ne i32 %and, 0, !dbg !18084
  br i1 %tobool, label %if.then22, label %if.end, !dbg !18085

if.then22:                                        ; preds = %if.then
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hfcm_l1callback, i64 0, i64 0)) #13, !dbg !18086
  br label %if.end, !dbg !18086

if.end:                                           ; preds = %if.then22, %if.then
  br label %if.end28, !dbg !18087

if.else:                                          ; preds = %do.end19
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18088
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %12, i32 0, i32 10, !dbg !18088
  %13 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !18088
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18088
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18088
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 60, !dbg !18088
  %16 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18088
  %slot = getelementptr inbounds %struct.dchannel, %struct.dchannel* %16, i32 0, i32 7, !dbg !18088
  %17 = load i32, i32* %slot, align 8, !dbg !18088
  %idxprom = sext i32 %17 to i64, !dbg !18088
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !18088
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 2, !dbg !18088
  %18 = load i32, i32* %port, align 8, !dbg !18088
  %conv24 = trunc i32 %18 to i8, !dbg !18088
  call void %13(%struct.hfc_multi* %14, i8 zeroext 22, i8 zeroext %conv24) #12, !dbg !18088
  call void @__const_udelay(i64 4295) #12, !dbg !18090
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18095
  %HFC_outb25 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %19, i32 0, i32 10, !dbg !18095
  %20 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb25, align 8, !dbg !18095
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18095
  call void %20(%struct.hfc_multi* %21, i8 zeroext 48, i8 zeroext 19) #12, !dbg !18095
  call void @__const_udelay(i64 25770) #12, !dbg !18096
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18101
  %HFC_outb26 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 10, !dbg !18101
  %23 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb26, align 8, !dbg !18101
  %24 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18101
  call void %23(%struct.hfc_multi* %24, i8 zeroext 48, i8 zeroext 3) #12, !dbg !18101
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18102
  %HFC_outb27 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %25, i32 0, i32 10, !dbg !18102
  %26 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb27, align 8, !dbg !18102
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18102
  call void %26(%struct.hfc_multi* %27, i8 zeroext 48, i8 zeroext 99) #12, !dbg !18102
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.end
  %28 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18103
  %lock29 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %28, i32 0, i32 57, !dbg !18104
  %29 = load i64, i64* %flags, align 8, !dbg !18105
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i166, align 8
  store i64 %29, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !18106
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !18106
  store i32 1, i32* %tmp.i, align 4, !dbg !18106
  %30 = load i32, i32* %tmp.i, align 4, !dbg !18106
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !18107
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !18107
  store i32 1, i32* %tmp8.i, align 4, !dbg !18107
  %31 = load i32, i32* %tmp8.i, align 4, !dbg !18107
  %32 = load i64, i64* %flags.addr.i, align 8, !dbg !18108
  call void @arch_local_irq_restore(i64 %32) #14, !dbg !18108
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !18109, !srcloc !10125
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i166, align 8, !dbg !18110
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !18110
  %rlock.i167 = bitcast %union.anon.1* %34 to %struct.raw_spinlock*, !dbg !18110
  %35 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18111
  %l1 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %35, i32 0, i32 5, !dbg !18112
  %36 = load i8*, i8** %l1, align 8, !dbg !18112
  %37 = bitcast i8* %36 to %struct.layer1*, !dbg !18111
  %call30 = call i32 @l1_event(%struct.layer1* %37, i32 37122) #12, !dbg !18113
  br label %sw.epilog, !dbg !18114

sw.bb31:                                          ; preds = %entry
  br label %do.body32, !dbg !18115

do.body32:                                        ; preds = %sw.bb31
  br label %do.body33, !dbg !18116

do.body33:                                        ; preds = %do.body32
  call void @llvm.dbg.declare(metadata i64* %__dummy34, metadata !18117, metadata !DIExpression()), !dbg !18119
  call void @llvm.dbg.declare(metadata i64* %__dummy235, metadata !18120, metadata !DIExpression()), !dbg !18119
  %cmp36 = icmp eq i64* %__dummy34, %__dummy235, !dbg !18119
  %conv37 = zext i1 %cmp36 to i32, !dbg !18119
  store i32 1, i32* %tmp38, align 4, !dbg !18119
  %38 = load i32, i32* %tmp38, align 4, !dbg !18119
  br label %do.body39, !dbg !18121

do.body39:                                        ; preds = %do.body33
  br label %do.body40, !dbg !18122

do.body40:                                        ; preds = %do.body39
  br label %do.body41, !dbg !18123

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy42, metadata !18125, metadata !DIExpression()), !dbg !18128
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !18129, metadata !DIExpression()), !dbg !18128
  %cmp44 = icmp eq i64* %__dummy42, %__dummy243, !dbg !18128
  %conv45 = zext i1 %cmp44 to i32, !dbg !18128
  store i32 1, i32* %tmp46, align 4, !dbg !18128
  %39 = load i32, i32* %tmp46, align 4, !dbg !18128
  %call47 = call i64 @arch_local_irq_save() #12, !dbg !18130
  store i64 %call47, i64* %flags, align 8, !dbg !18130
  br label %do.end48, !dbg !18130

do.end48:                                         ; preds = %do.body41
  br label %do.end49, !dbg !18123

do.end49:                                         ; preds = %do.end48
  br label %do.body50, !dbg !18122

do.body50:                                        ; preds = %do.end49
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !18131, !srcloc !18132
  br label %do.body51, !dbg !18131

do.body51:                                        ; preds = %do.body50
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18133
  %lock52 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %40, i32 0, i32 57, !dbg !18133
  store %struct.spinlock* %lock52, %struct.spinlock** %lock.addr.i168, align 8
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i168, align 8, !dbg !18134
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !18135
  %rlock.i169 = bitcast %union.anon.1* %42 to %struct.raw_spinlock*, !dbg !18135
  br label %do.end54, !dbg !18133

do.end54:                                         ; preds = %do.body51
  br label %do.end55, !dbg !18131

do.end55:                                         ; preds = %do.end54
  br label %do.end56, !dbg !18122

do.end56:                                         ; preds = %do.end55
  br label %do.end57, !dbg !18121

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !18116

do.end58:                                         ; preds = %do.end57
  %43 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18136
  %ctype59 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %43, i32 0, i32 4, !dbg !18138
  %44 = load i32, i32* %ctype59, align 8, !dbg !18138
  %cmp60 = icmp eq i32 %44, 1, !dbg !18139
  br i1 %cmp60, label %if.then62, label %if.else68, !dbg !18140

if.then62:                                        ; preds = %do.end58
  %45 = load i32, i32* @debug, align 4, !dbg !18141
  %and63 = and i32 %45, 2097152, !dbg !18144
  %tobool64 = icmp ne i32 %and63, 0, !dbg !18144
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !18145

if.then65:                                        ; preds = %if.then62
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hfcm_l1callback, i64 0, i64 0)) #13, !dbg !18146
  br label %if.end67, !dbg !18146

if.end67:                                         ; preds = %if.then65, %if.then62
  br label %if.end86, !dbg !18147

if.else68:                                        ; preds = %do.end58
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18148
  %HFC_outb69 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 10, !dbg !18148
  %47 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb69, align 8, !dbg !18148
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18148
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18148
  %chan70 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 60, !dbg !18148
  %50 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18148
  %slot71 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %50, i32 0, i32 7, !dbg !18148
  %51 = load i32, i32* %slot71, align 8, !dbg !18148
  %idxprom72 = sext i32 %51 to i64, !dbg !18148
  %arrayidx73 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan70, i64 0, i64 %idxprom72, !dbg !18148
  %port74 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx73, i32 0, i32 2, !dbg !18148
  %52 = load i32, i32* %port74, align 8, !dbg !18148
  %conv75 = trunc i32 %52 to i8, !dbg !18148
  call void %47(%struct.hfc_multi* %48, i8 zeroext 22, i8 zeroext %conv75) #12, !dbg !18148
  call void @__const_udelay(i64 4295) #12, !dbg !18150
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18155
  %HFC_outb76 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %53, i32 0, i32 10, !dbg !18155
  %54 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb76, align 8, !dbg !18155
  %55 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18155
  call void %54(%struct.hfc_multi* %55, i8 zeroext 48, i8 zeroext 64) #12, !dbg !18155
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18156
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %56, i32 0, i32 31, !dbg !18158
  %call77 = call zeroext i1 @test_bit(i64 14, i64* %chip) #12, !dbg !18159
  br i1 %call77, label %if.then78, label %if.end85, !dbg !18160

if.then78:                                        ; preds = %if.else68
  %57 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18161
  %chan79 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %57, i32 0, i32 60, !dbg !18163
  %58 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18164
  %slot80 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %58, i32 0, i32 7, !dbg !18165
  %59 = load i32, i32* %slot80, align 8, !dbg !18165
  %idxprom81 = sext i32 %59 to i64, !dbg !18161
  %arrayidx82 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan79, i64 0, i64 %idxprom81, !dbg !18161
  %port83 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx82, i32 0, i32 2, !dbg !18166
  %60 = load i32, i32* %port83, align 8, !dbg !18166
  %shl = shl i32 1, %60, !dbg !18167
  %neg = xor i32 %shl, -1, !dbg !18168
  %61 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18169
  %syncronized = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %61, i32 0, i32 55, !dbg !18170
  %62 = load i32, i32* %syncronized, align 4, !dbg !18171
  %and84 = and i32 %62, %neg, !dbg !18171
  store i32 %and84, i32* %syncronized, align 4, !dbg !18171
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18172
  call void @plxsd_checksync(%struct.hfc_multi* %63, i32 0) #12, !dbg !18173
  br label %if.end85, !dbg !18174

if.end85:                                         ; preds = %if.then78, %if.else68
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end67
  %64 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18175
  %squeue = getelementptr inbounds %struct.dchannel, %struct.dchannel* %64, i32 0, i32 11, !dbg !18176
  call void @skb_queue_purge(%struct.sk_buff_head* %squeue) #12, !dbg !18177
  %65 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18178
  %tx_skb = getelementptr inbounds %struct.dchannel, %struct.dchannel* %65, i32 0, i32 13, !dbg !18180
  %66 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !18180
  %tobool87 = icmp ne %struct.sk_buff* %66, null, !dbg !18178
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !18181

if.then88:                                        ; preds = %if.end86
  %67 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18182
  %tx_skb89 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %67, i32 0, i32 13, !dbg !18182
  %68 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb89, align 8, !dbg !18182
  call void @consume_skb(%struct.sk_buff* %68) #12, !dbg !18182
  %69 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18184
  %tx_skb90 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %69, i32 0, i32 13, !dbg !18185
  store %struct.sk_buff* null, %struct.sk_buff** %tx_skb90, align 8, !dbg !18186
  br label %if.end91, !dbg !18187

if.end91:                                         ; preds = %if.then88, %if.end86
  %70 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18188
  %tx_idx = getelementptr inbounds %struct.dchannel, %struct.dchannel* %70, i32 0, i32 14, !dbg !18189
  store i32 0, i32* %tx_idx, align 8, !dbg !18190
  %71 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18191
  %rx_skb = getelementptr inbounds %struct.dchannel, %struct.dchannel* %71, i32 0, i32 9, !dbg !18193
  %72 = load %struct.sk_buff*, %struct.sk_buff** %rx_skb, align 8, !dbg !18193
  %tobool92 = icmp ne %struct.sk_buff* %72, null, !dbg !18191
  br i1 %tobool92, label %if.then93, label %if.end96, !dbg !18194

if.then93:                                        ; preds = %if.end91
  %73 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18195
  %rx_skb94 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %73, i32 0, i32 9, !dbg !18195
  %74 = load %struct.sk_buff*, %struct.sk_buff** %rx_skb94, align 8, !dbg !18195
  call void @consume_skb(%struct.sk_buff* %74) #12, !dbg !18195
  %75 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18197
  %rx_skb95 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %75, i32 0, i32 9, !dbg !18198
  store %struct.sk_buff* null, %struct.sk_buff** %rx_skb95, align 8, !dbg !18199
  br label %if.end96, !dbg !18200

if.end96:                                         ; preds = %if.then93, %if.end91
  %76 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18201
  %Flags = getelementptr inbounds %struct.dchannel, %struct.dchannel* %76, i32 0, i32 1, !dbg !18202
  %call97 = call zeroext i1 @test_and_clear_bit(i64 0, i64* %Flags) #12, !dbg !18203
  %77 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18204
  %Flags98 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %77, i32 0, i32 1, !dbg !18206
  %call99 = call zeroext i1 @test_and_clear_bit(i64 7, i64* %Flags98) #12, !dbg !18207
  br i1 %call99, label %if.then100, label %if.end102, !dbg !18208

if.then100:                                       ; preds = %if.end96
  %78 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18209
  %timer = getelementptr inbounds %struct.dchannel, %struct.dchannel* %78, i32 0, i32 8, !dbg !18210
  %call101 = call i32 @del_timer(%struct.timer_list* %timer) #12, !dbg !18211
  br label %if.end102, !dbg !18211

if.end102:                                        ; preds = %if.then100, %if.end96
  %79 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18212
  %lock103 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %79, i32 0, i32 57, !dbg !18213
  %80 = load i64, i64* %flags, align 8, !dbg !18214
  store %struct.spinlock* %lock103, %struct.spinlock** %lock.addr.i170, align 8
  store i64 %80, i64* %flags.addr.i171, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !18215
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !18215
  store i32 1, i32* %tmp.i172, align 4, !dbg !18215
  %81 = load i32, i32* %tmp.i172, align 4, !dbg !18215
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !18216
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !18216
  store i32 1, i32* %tmp8.i173, align 4, !dbg !18216
  %82 = load i32, i32* %tmp8.i173, align 4, !dbg !18216
  %83 = load i64, i64* %flags.addr.i171, align 8, !dbg !18217
  call void @arch_local_irq_restore(i64 %83) #14, !dbg !18217
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !18218, !srcloc !10125
  %84 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i170, align 8, !dbg !18219
  %85 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %84, i32 0, i32 0, !dbg !18219
  %rlock.i174 = bitcast %union.anon.1* %85 to %struct.raw_spinlock*, !dbg !18219
  br label %sw.epilog, !dbg !18220

sw.bb104:                                         ; preds = %entry
  br label %do.body105, !dbg !18221

do.body105:                                       ; preds = %sw.bb104
  br label %do.body106, !dbg !18222

do.body106:                                       ; preds = %do.body105
  call void @llvm.dbg.declare(metadata i64* %__dummy107, metadata !18223, metadata !DIExpression()), !dbg !18225
  call void @llvm.dbg.declare(metadata i64* %__dummy2108, metadata !18226, metadata !DIExpression()), !dbg !18225
  %cmp109 = icmp eq i64* %__dummy107, %__dummy2108, !dbg !18225
  %conv110 = zext i1 %cmp109 to i32, !dbg !18225
  store i32 1, i32* %tmp111, align 4, !dbg !18225
  %86 = load i32, i32* %tmp111, align 4, !dbg !18225
  br label %do.body112, !dbg !18227

do.body112:                                       ; preds = %do.body106
  br label %do.body113, !dbg !18228

do.body113:                                       ; preds = %do.body112
  br label %do.body114, !dbg !18229

do.body114:                                       ; preds = %do.body113
  call void @llvm.dbg.declare(metadata i64* %__dummy115, metadata !18231, metadata !DIExpression()), !dbg !18234
  call void @llvm.dbg.declare(metadata i64* %__dummy2116, metadata !18235, metadata !DIExpression()), !dbg !18234
  %cmp117 = icmp eq i64* %__dummy115, %__dummy2116, !dbg !18234
  %conv118 = zext i1 %cmp117 to i32, !dbg !18234
  store i32 1, i32* %tmp119, align 4, !dbg !18234
  %87 = load i32, i32* %tmp119, align 4, !dbg !18234
  %call120 = call i64 @arch_local_irq_save() #12, !dbg !18236
  store i64 %call120, i64* %flags, align 8, !dbg !18236
  br label %do.end121, !dbg !18236

do.end121:                                        ; preds = %do.body114
  br label %do.end122, !dbg !18229

do.end122:                                        ; preds = %do.end121
  br label %do.body123, !dbg !18228

do.body123:                                       ; preds = %do.end122
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !18237, !srcloc !18238
  br label %do.body124, !dbg !18237

do.body124:                                       ; preds = %do.body123
  %88 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18239
  %lock125 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %88, i32 0, i32 57, !dbg !18239
  store %struct.spinlock* %lock125, %struct.spinlock** %lock.addr.i175, align 8
  %89 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i175, align 8, !dbg !18240
  %90 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %89, i32 0, i32 0, !dbg !18241
  %rlock.i176 = bitcast %union.anon.1* %90 to %struct.raw_spinlock*, !dbg !18241
  br label %do.end127, !dbg !18239

do.end127:                                        ; preds = %do.body124
  br label %do.end128, !dbg !18237

do.end128:                                        ; preds = %do.end127
  br label %do.end129, !dbg !18228

do.end129:                                        ; preds = %do.end128
  br label %do.end130, !dbg !18227

do.end130:                                        ; preds = %do.end129
  br label %do.end131, !dbg !18222

do.end131:                                        ; preds = %do.end130
  %91 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18242
  %ctype132 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %91, i32 0, i32 4, !dbg !18244
  %92 = load i32, i32* %ctype132, align 8, !dbg !18244
  %cmp133 = icmp eq i32 %92, 1, !dbg !18245
  br i1 %cmp133, label %if.then135, label %if.else141, !dbg !18246

if.then135:                                       ; preds = %do.end131
  %93 = load i32, i32* @debug, align 4, !dbg !18247
  %and136 = and i32 %93, 2097152, !dbg !18250
  %tobool137 = icmp ne i32 %and136, 0, !dbg !18250
  br i1 %tobool137, label %if.then138, label %if.end140, !dbg !18251

if.then138:                                       ; preds = %if.then135
  %call139 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hfcm_l1callback, i64 0, i64 0)) #13, !dbg !18252
  br label %if.end140, !dbg !18252

if.end140:                                        ; preds = %if.then138, %if.then135
  br label %if.end151, !dbg !18253

if.else141:                                       ; preds = %do.end131
  %94 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18254
  %HFC_outb142 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %94, i32 0, i32 10, !dbg !18254
  %95 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb142, align 8, !dbg !18254
  %96 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18254
  %97 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18254
  %chan143 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %97, i32 0, i32 60, !dbg !18254
  %98 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18254
  %slot144 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %98, i32 0, i32 7, !dbg !18254
  %99 = load i32, i32* %slot144, align 8, !dbg !18254
  %idxprom145 = sext i32 %99 to i64, !dbg !18254
  %arrayidx146 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan143, i64 0, i64 %idxprom145, !dbg !18254
  %port147 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx146, i32 0, i32 2, !dbg !18254
  %100 = load i32, i32* %port147, align 8, !dbg !18254
  %conv148 = trunc i32 %100 to i8, !dbg !18254
  call void %95(%struct.hfc_multi* %96, i8 zeroext 22, i8 zeroext %conv148) #12, !dbg !18254
  call void @__const_udelay(i64 4295) #12, !dbg !18256
  %101 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18261
  %HFC_outb149 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %101, i32 0, i32 10, !dbg !18261
  %102 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb149, align 8, !dbg !18261
  %103 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18261
  call void %102(%struct.hfc_multi* %103, i8 zeroext 48, i8 zeroext 19) #12, !dbg !18261
  call void @__const_udelay(i64 25770) #12, !dbg !18262
  %104 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18267
  %HFC_outb150 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %104, i32 0, i32 10, !dbg !18267
  %105 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb150, align 8, !dbg !18267
  %106 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18267
  call void %105(%struct.hfc_multi* %106, i8 zeroext 48, i8 zeroext 3) #12, !dbg !18267
  br label %if.end151

if.end151:                                        ; preds = %if.else141, %if.end140
  %107 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18268
  %lock152 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %107, i32 0, i32 57, !dbg !18269
  %108 = load i64, i64* %flags, align 8, !dbg !18270
  store %struct.spinlock* %lock152, %struct.spinlock** %lock.addr.i177, align 8
  store i64 %108, i64* %flags.addr.i178, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !18271
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !18271
  store i32 1, i32* %tmp.i179, align 4, !dbg !18271
  %109 = load i32, i32* %tmp.i179, align 4, !dbg !18271
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !18272
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !18272
  store i32 1, i32* %tmp8.i180, align 4, !dbg !18272
  %110 = load i32, i32* %tmp8.i180, align 4, !dbg !18272
  %111 = load i64, i64* %flags.addr.i178, align 8, !dbg !18273
  call void @arch_local_irq_restore(i64 %111) #14, !dbg !18273
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !18274, !srcloc !10125
  %112 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i177, align 8, !dbg !18275
  %113 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %112, i32 0, i32 0, !dbg !18275
  %rlock.i181 = bitcast %union.anon.1* %113 to %struct.raw_spinlock*, !dbg !18275
  br label %sw.epilog, !dbg !18276

sw.bb153:                                         ; preds = %entry
  %114 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18277
  %Flags154 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %114, i32 0, i32 1, !dbg !18278
  %call155 = call zeroext i1 @test_and_set_bit(i64 6, i64* %Flags154) #12, !dbg !18279
  %115 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18280
  %dev = getelementptr inbounds %struct.dchannel, %struct.dchannel* %115, i32 0, i32 0, !dbg !18281
  %D = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev, i32 0, i32 0, !dbg !18282
  %116 = load i32, i32* %cmd.addr, align 4, !dbg !18283
  call void @_queue_data(%struct.mISDNchannel* %D, i32 %116, i32 65535, i32 0, i8* null, i32 2592) #12, !dbg !18284
  br label %sw.epilog, !dbg !18285

sw.bb156:                                         ; preds = %entry
  %117 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18286
  %Flags157 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %117, i32 0, i32 1, !dbg !18287
  %call158 = call zeroext i1 @test_and_clear_bit(i64 6, i64* %Flags157) #12, !dbg !18288
  %118 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18289
  %dev159 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %118, i32 0, i32 0, !dbg !18290
  %D160 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev159, i32 0, i32 0, !dbg !18291
  %119 = load i32, i32* %cmd.addr, align 4, !dbg !18292
  call void @_queue_data(%struct.mISDNchannel* %D160, i32 %119, i32 65535, i32 0, i8* null, i32 2592) #12, !dbg !18293
  br label %sw.epilog, !dbg !18294

sw.default:                                       ; preds = %entry
  %120 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18295
  %debug = getelementptr inbounds %struct.dchannel, %struct.dchannel* %120, i32 0, i32 15, !dbg !18297
  %121 = load i32, i32* %debug, align 4, !dbg !18297
  %and161 = and i32 %121, 1, !dbg !18298
  %tobool162 = icmp ne i32 %and161, 0, !dbg !18298
  br i1 %tobool162, label %if.then163, label %if.end165, !dbg !18299

if.then163:                                       ; preds = %sw.default
  %122 = load i32, i32* %cmd.addr, align 4, !dbg !18300
  %call164 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hfcm_l1callback, i64 0, i64 0), i32 %122) #13, !dbg !18301
  br label %if.end165, !dbg !18301

if.end165:                                        ; preds = %if.then163, %sw.default
  store i32 -1, i32* %retval, align 4, !dbg !18302
  br label %return, !dbg !18302

sw.epilog:                                        ; preds = %sw.bb156, %sw.bb153, %if.end151, %if.end102, %if.end28, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !18303
  br label %return, !dbg !18303

return:                                           ; preds = %sw.epilog, %if.end165
  %123 = load i32, i32* %retval, align 4, !dbg !18304
  ret i32 %123, !dbg !18304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfcmulti_initmode(%struct.dchannel* %dch) #2 !dbg !18305 {
entry:
  %dch.addr = alloca %struct.dchannel*, align 8
  %hc = alloca %struct.hfc_multi*, align 8
  %a_st_wr_state = alloca i8, align 1
  %r_e1_wr_sta = alloca i8, align 1
  %i = alloca i32, align 4
  %pt = alloca i32, align 4
  store %struct.dchannel* %dch, %struct.dchannel** %dch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch.addr, metadata !18306, metadata !DIExpression()), !dbg !18307
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !18308, metadata !DIExpression()), !dbg !18309
  %0 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18310
  %hw = getelementptr inbounds %struct.dchannel, %struct.dchannel* %0, i32 0, i32 6, !dbg !18311
  %1 = load i8*, i8** %hw, align 8, !dbg !18311
  %2 = bitcast i8* %1 to %struct.hfc_multi*, !dbg !18310
  store %struct.hfc_multi* %2, %struct.hfc_multi** %hc, align 8, !dbg !18309
  call void @llvm.dbg.declare(metadata i8* %a_st_wr_state, metadata !18312, metadata !DIExpression()), !dbg !18313
  call void @llvm.dbg.declare(metadata i8* %r_e1_wr_sta, metadata !18314, metadata !DIExpression()), !dbg !18315
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18316, metadata !DIExpression()), !dbg !18317
  call void @llvm.dbg.declare(metadata i32* %pt, metadata !18318, metadata !DIExpression()), !dbg !18319
  %3 = load i32, i32* @debug, align 4, !dbg !18320
  %and = and i32 %3, 262144, !dbg !18322
  %tobool = icmp ne i32 %and, 0, !dbg !18322
  br i1 %tobool, label %if.then, label %if.end, !dbg !18323

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hfcmulti_initmode, i64 0, i64 0)) #13, !dbg !18324
  br label %if.end, !dbg !18324

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18325
  %slot = getelementptr inbounds %struct.dchannel, %struct.dchannel* %4, i32 0, i32 7, !dbg !18326
  %5 = load i32, i32* %slot, align 8, !dbg !18326
  store i32 %5, i32* %i, align 4, !dbg !18327
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18328
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 60, !dbg !18329
  %7 = load i32, i32* %i, align 4, !dbg !18330
  %idxprom = sext i32 %7 to i64, !dbg !18328
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !18328
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 2, !dbg !18331
  %8 = load i32, i32* %port, align 8, !dbg !18331
  store i32 %8, i32* %pt, align 4, !dbg !18332
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18333
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %9, i32 0, i32 4, !dbg !18335
  %10 = load i32, i32* %ctype, align 8, !dbg !18335
  %cmp = icmp eq i32 %10, 1, !dbg !18336
  br i1 %cmp, label %if.then1, label %if.end47, !dbg !18337

if.then1:                                         ; preds = %if.end
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18338
  %chan2 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %11, i32 0, i32 60, !dbg !18340
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18341
  %dnum = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %12, i32 0, i32 46, !dbg !18342
  %13 = load i32, i32* %pt, align 4, !dbg !18343
  %idxprom3 = sext i32 %13 to i64, !dbg !18341
  %arrayidx4 = getelementptr [32 x i8], [32 x i8]* %dnum, i64 0, i64 %idxprom3, !dbg !18341
  %14 = load i8, i8* %arrayidx4, align 1, !dbg !18341
  %idxprom5 = zext i8 %14 to i64, !dbg !18338
  %arrayidx6 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan2, i64 0, i64 %idxprom5, !dbg !18338
  %slot_tx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx6, i32 0, i32 13, !dbg !18344
  store i32 -1, i32* %slot_tx, align 8, !dbg !18345
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18346
  %chan7 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 60, !dbg !18347
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18348
  %dnum8 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %16, i32 0, i32 46, !dbg !18349
  %17 = load i32, i32* %pt, align 4, !dbg !18350
  %idxprom9 = sext i32 %17 to i64, !dbg !18348
  %arrayidx10 = getelementptr [32 x i8], [32 x i8]* %dnum8, i64 0, i64 %idxprom9, !dbg !18348
  %18 = load i8, i8* %arrayidx10, align 1, !dbg !18348
  %idxprom11 = zext i8 %18 to i64, !dbg !18346
  %arrayidx12 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan7, i64 0, i64 %idxprom11, !dbg !18346
  %slot_rx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx12, i32 0, i32 15, !dbg !18351
  store i32 -1, i32* %slot_rx, align 8, !dbg !18352
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18353
  %chan13 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %19, i32 0, i32 60, !dbg !18354
  %20 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18355
  %dnum14 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %20, i32 0, i32 46, !dbg !18356
  %21 = load i32, i32* %pt, align 4, !dbg !18357
  %idxprom15 = sext i32 %21 to i64, !dbg !18355
  %arrayidx16 = getelementptr [32 x i8], [32 x i8]* %dnum14, i64 0, i64 %idxprom15, !dbg !18355
  %22 = load i8, i8* %arrayidx16, align 1, !dbg !18355
  %idxprom17 = zext i8 %22 to i64, !dbg !18353
  %arrayidx18 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan13, i64 0, i64 %idxprom17, !dbg !18353
  %conf = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx18, i32 0, i32 17, !dbg !18358
  store i32 -1, i32* %conf, align 8, !dbg !18359
  %23 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18360
  %dnum19 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %23, i32 0, i32 46, !dbg !18362
  %24 = load i32, i32* %pt, align 4, !dbg !18363
  %idxprom20 = sext i32 %24 to i64, !dbg !18360
  %arrayidx21 = getelementptr [32 x i8], [32 x i8]* %dnum19, i64 0, i64 %idxprom20, !dbg !18360
  %25 = load i8, i8* %arrayidx21, align 1, !dbg !18360
  %tobool22 = icmp ne i8 %25, 0, !dbg !18360
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !18364

if.then23:                                        ; preds = %if.then1
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18365
  %27 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18367
  %slot24 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %27, i32 0, i32 7, !dbg !18368
  %28 = load i32, i32* %slot24, align 8, !dbg !18368
  %29 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18369
  %dev = getelementptr inbounds %struct.dchannel, %struct.dchannel* %29, i32 0, i32 0, !dbg !18370
  %D = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev, i32 0, i32 0, !dbg !18371
  %protocol = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D, i32 0, i32 1, !dbg !18372
  %30 = load i32, i32* %protocol, align 8, !dbg !18372
  %call25 = call i32 @mode_hfcmulti(%struct.hfc_multi* %26, i32 %28, i32 %30, i32 -1, i32 0, i32 -1, i32 0) #12, !dbg !18373
  %31 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18374
  %timer = getelementptr inbounds %struct.dchannel, %struct.dchannel* %31, i32 0, i32 8, !dbg !18374
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @hfcmulti_dbusy_timer, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !18374
  br label %if.end26, !dbg !18375

if.end26:                                         ; preds = %if.then23, %if.then1
  store i32 1, i32* %i, align 4, !dbg !18376
  br label %for.cond, !dbg !18378

for.cond:                                         ; preds = %for.inc, %if.end26
  %32 = load i32, i32* %i, align 4, !dbg !18379
  %cmp27 = icmp sle i32 %32, 31, !dbg !18381
  br i1 %cmp27, label %for.body, label %for.end, !dbg !18382

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* %i, align 4, !dbg !18383
  %shl = shl i32 1, %33, !dbg !18386
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18387
  %bmask = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %34, i32 0, i32 45, !dbg !18388
  %35 = load i32, i32* %pt, align 4, !dbg !18389
  %idxprom28 = sext i32 %35 to i64, !dbg !18387
  %arrayidx29 = getelementptr [32 x i32], [32 x i32]* %bmask, i64 0, i64 %idxprom28, !dbg !18387
  %36 = load i32, i32* %arrayidx29, align 4, !dbg !18387
  %and30 = and i32 %shl, %36, !dbg !18390
  %tobool31 = icmp ne i32 %and30, 0, !dbg !18390
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !18391

if.then32:                                        ; preds = %for.body
  br label %for.inc, !dbg !18392

if.end33:                                         ; preds = %for.body
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18393
  %chan34 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %37, i32 0, i32 60, !dbg !18394
  %38 = load i32, i32* %i, align 4, !dbg !18395
  %idxprom35 = sext i32 %38 to i64, !dbg !18393
  %arrayidx36 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan34, i64 0, i64 %idxprom35, !dbg !18393
  %slot_tx37 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx36, i32 0, i32 13, !dbg !18396
  store i32 -1, i32* %slot_tx37, align 8, !dbg !18397
  %39 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18398
  %chan38 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %39, i32 0, i32 60, !dbg !18399
  %40 = load i32, i32* %i, align 4, !dbg !18400
  %idxprom39 = sext i32 %40 to i64, !dbg !18398
  %arrayidx40 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan38, i64 0, i64 %idxprom39, !dbg !18398
  %slot_rx41 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx40, i32 0, i32 15, !dbg !18401
  store i32 -1, i32* %slot_rx41, align 8, !dbg !18402
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18403
  %chan42 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %41, i32 0, i32 60, !dbg !18404
  %42 = load i32, i32* %i, align 4, !dbg !18405
  %idxprom43 = sext i32 %42 to i64, !dbg !18403
  %arrayidx44 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan42, i64 0, i64 %idxprom43, !dbg !18403
  %conf45 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx44, i32 0, i32 17, !dbg !18406
  store i32 -1, i32* %conf45, align 8, !dbg !18407
  %43 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18408
  %44 = load i32, i32* %i, align 4, !dbg !18409
  %call46 = call i32 @mode_hfcmulti(%struct.hfc_multi* %43, i32 %44, i32 0, i32 -1, i32 0, i32 -1, i32 0) #12, !dbg !18410
  br label %for.inc, !dbg !18411

for.inc:                                          ; preds = %if.end33, %if.then32
  %45 = load i32, i32* %i, align 4, !dbg !18412
  %inc = add i32 %45, 1, !dbg !18412
  store i32 %inc, i32* %i, align 4, !dbg !18412
  br label %for.cond, !dbg !18413, !llvm.loop !18414

for.end:                                          ; preds = %for.cond
  br label %if.end47, !dbg !18416

if.end47:                                         ; preds = %for.end, %if.end
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18417
  %ctype48 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 4, !dbg !18419
  %47 = load i32, i32* %ctype48, align 8, !dbg !18419
  %cmp49 = icmp eq i32 %47, 1, !dbg !18420
  br i1 %cmp49, label %land.lhs.true, label %if.end185, !dbg !18421

land.lhs.true:                                    ; preds = %if.end47
  %48 = load i32, i32* %pt, align 4, !dbg !18422
  %cmp50 = icmp eq i32 %48, 0, !dbg !18423
  br i1 %cmp50, label %if.then51, label %if.end185, !dbg !18424

if.then51:                                        ; preds = %land.lhs.true
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18425
  %chan52 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 60, !dbg !18427
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18428
  %dnum53 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %50, i32 0, i32 46, !dbg !18429
  %arrayidx54 = getelementptr [32 x i8], [32 x i8]* %dnum53, i64 0, i64 0, !dbg !18428
  %51 = load i8, i8* %arrayidx54, align 4, !dbg !18428
  %idxprom55 = zext i8 %51 to i64, !dbg !18425
  %arrayidx56 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan52, i64 0, i64 %idxprom55, !dbg !18425
  %dch57 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx56, i32 0, i32 0, !dbg !18430
  %52 = load %struct.dchannel*, %struct.dchannel** %dch57, align 8, !dbg !18430
  store %struct.dchannel* %52, %struct.dchannel** %dch.addr, align 8, !dbg !18431
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18432
  %chan58 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %53, i32 0, i32 60, !dbg !18434
  %54 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18435
  %dnum59 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %54, i32 0, i32 46, !dbg !18436
  %arrayidx60 = getelementptr [32 x i8], [32 x i8]* %dnum59, i64 0, i64 0, !dbg !18435
  %55 = load i8, i8* %arrayidx60, align 4, !dbg !18435
  %idxprom61 = zext i8 %55 to i64, !dbg !18432
  %arrayidx62 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan58, i64 0, i64 %idxprom61, !dbg !18432
  %cfg = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx62, i32 0, i32 10, !dbg !18437
  %call63 = call zeroext i1 @test_bit(i64 5, i64* %cfg) #12, !dbg !18438
  br i1 %call63, label %if.then64, label %if.end66, !dbg !18439

if.then64:                                        ; preds = %if.then51
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18440
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %56, i32 0, i32 10, !dbg !18440
  %57 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !18440
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18440
  call void %57(%struct.hfc_multi* %58, i8 zeroext 34, i8 zeroext -1) #12, !dbg !18440
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18442
  %HFC_outb65 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %59, i32 0, i32 10, !dbg !18442
  %60 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb65, align 8, !dbg !18442
  %61 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18442
  call void %60(%struct.hfc_multi* %61, i8 zeroext 35, i8 zeroext -1) #12, !dbg !18442
  br label %if.end66, !dbg !18443

if.end66:                                         ; preds = %if.then64, %if.then51
  %62 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18444
  %chan67 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %62, i32 0, i32 60, !dbg !18446
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18447
  %dnum68 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %63, i32 0, i32 46, !dbg !18448
  %arrayidx69 = getelementptr [32 x i8], [32 x i8]* %dnum68, i64 0, i64 0, !dbg !18447
  %64 = load i8, i8* %arrayidx69, align 4, !dbg !18447
  %idxprom70 = zext i8 %64 to i64, !dbg !18444
  %arrayidx71 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan67, i64 0, i64 %idxprom70, !dbg !18444
  %cfg72 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx71, i32 0, i32 10, !dbg !18449
  %call73 = call zeroext i1 @test_bit(i64 4, i64* %cfg72) #12, !dbg !18450
  br i1 %call73, label %if.then74, label %if.else, !dbg !18451

if.then74:                                        ; preds = %if.end66
  %65 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18452
  %HFC_outb75 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %65, i32 0, i32 10, !dbg !18452
  %66 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb75, align 8, !dbg !18452
  %67 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18452
  call void %66(%struct.hfc_multi* %67, i8 zeroext 36, i8 zeroext 0) #12, !dbg !18452
  %68 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18454
  %hw76 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %68, i32 0, i32 30, !dbg !18455
  %r_tx0 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw76, i32 0, i32 9, !dbg !18456
  store i8 -128, i8* %r_tx0, align 1, !dbg !18457
  br label %if.end80, !dbg !18458

if.else:                                          ; preds = %if.end66
  %69 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18459
  %HFC_outb77 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %69, i32 0, i32 10, !dbg !18459
  %70 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb77, align 8, !dbg !18459
  %71 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18459
  call void %70(%struct.hfc_multi* %71, i8 zeroext 36, i8 zeroext 1) #12, !dbg !18459
  %72 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18461
  %hw78 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %72, i32 0, i32 30, !dbg !18462
  %r_tx079 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw78, i32 0, i32 9, !dbg !18463
  store i8 -127, i8* %r_tx079, align 1, !dbg !18464
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.then74
  %73 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18465
  %hw81 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %73, i32 0, i32 30, !dbg !18466
  %r_tx1 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw81, i32 0, i32 10, !dbg !18467
  store i8 96, i8* %r_tx1, align 2, !dbg !18468
  %74 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18469
  %HFC_outb82 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %74, i32 0, i32 10, !dbg !18469
  %75 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb82, align 8, !dbg !18469
  %76 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18469
  %77 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18469
  %hw83 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %77, i32 0, i32 30, !dbg !18469
  %r_tx084 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw83, i32 0, i32 9, !dbg !18469
  %78 = load i8, i8* %r_tx084, align 1, !dbg !18469
  call void %75(%struct.hfc_multi* %76, i8 zeroext 40, i8 zeroext %78) #12, !dbg !18469
  %79 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18470
  %HFC_outb85 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %79, i32 0, i32 10, !dbg !18470
  %80 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb85, align 8, !dbg !18470
  %81 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18470
  %82 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18470
  %hw86 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %82, i32 0, i32 30, !dbg !18470
  %r_tx187 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw86, i32 0, i32 10, !dbg !18470
  %83 = load i8, i8* %r_tx187, align 2, !dbg !18470
  call void %80(%struct.hfc_multi* %81, i8 zeroext 41, i8 zeroext %83) #12, !dbg !18470
  %84 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18471
  %HFC_outb88 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %84, i32 0, i32 10, !dbg !18471
  %85 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb88, align 8, !dbg !18471
  %86 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18471
  call void %85(%struct.hfc_multi* %86, i8 zeroext 44, i8 zeroext 0) #12, !dbg !18471
  %87 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18472
  %HFC_outb89 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %87, i32 0, i32 10, !dbg !18472
  %88 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb89, align 8, !dbg !18472
  %89 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18472
  call void %88(%struct.hfc_multi* %89, i8 zeroext 45, i8 zeroext -8) #12, !dbg !18472
  %90 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18473
  %chan90 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %90, i32 0, i32 60, !dbg !18475
  %91 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18476
  %dnum91 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %91, i32 0, i32 46, !dbg !18477
  %arrayidx92 = getelementptr [32 x i8], [32 x i8]* %dnum91, i64 0, i64 0, !dbg !18476
  %92 = load i8, i8* %arrayidx92, align 4, !dbg !18476
  %idxprom93 = zext i8 %92 to i64, !dbg !18473
  %arrayidx94 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan90, i64 0, i64 %idxprom93, !dbg !18473
  %cfg95 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx94, i32 0, i32 10, !dbg !18478
  %call96 = call zeroext i1 @test_bit(i64 10, i64* %cfg95) #12, !dbg !18479
  br i1 %call96, label %if.then97, label %if.end99, !dbg !18480

if.then97:                                        ; preds = %if.end80
  %93 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18481
  %HFC_outb98 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %93, i32 0, i32 10, !dbg !18481
  %94 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb98, align 8, !dbg !18481
  %95 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18481
  call void %94(%struct.hfc_multi* %95, i8 zeroext 46, i8 zeroext 49) #12, !dbg !18481
  br label %if.end99, !dbg !18481

if.end99:                                         ; preds = %if.then97, %if.end80
  %96 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18482
  %HFC_outb100 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %96, i32 0, i32 10, !dbg !18482
  %97 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb100, align 8, !dbg !18482
  %98 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18482
  call void %97(%struct.hfc_multi* %98, i8 zeroext 37, i8 zeroext 6) #12, !dbg !18482
  %99 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18483
  %chan101 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %99, i32 0, i32 60, !dbg !18485
  %100 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18486
  %dnum102 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %100, i32 0, i32 46, !dbg !18487
  %arrayidx103 = getelementptr [32 x i8], [32 x i8]* %dnum102, i64 0, i64 0, !dbg !18486
  %101 = load i8, i8* %arrayidx103, align 4, !dbg !18486
  %idxprom104 = zext i8 %101 to i64, !dbg !18483
  %arrayidx105 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan101, i64 0, i64 %idxprom104, !dbg !18483
  %cfg106 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx105, i32 0, i32 10, !dbg !18488
  %call107 = call zeroext i1 @test_bit(i64 10, i64* %cfg106) #12, !dbg !18489
  br i1 %call107, label %if.then108, label %if.end110, !dbg !18490

if.then108:                                       ; preds = %if.end99
  %102 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18491
  %HFC_outb109 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %102, i32 0, i32 10, !dbg !18491
  %103 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb109, align 8, !dbg !18491
  %104 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18491
  call void %103(%struct.hfc_multi* %104, i8 zeroext 38, i8 zeroext 3) #12, !dbg !18491
  br label %if.end110, !dbg !18491

if.end110:                                        ; preds = %if.then108, %if.end99
  %105 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18492
  %dev111 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %105, i32 0, i32 0, !dbg !18494
  %D112 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev111, i32 0, i32 0, !dbg !18495
  %protocol113 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D112, i32 0, i32 1, !dbg !18496
  %106 = load i32, i32* %protocol113, align 8, !dbg !18496
  %cmp114 = icmp eq i32 %106, 4, !dbg !18497
  br i1 %cmp114, label %if.then115, label %if.else121, !dbg !18498

if.then115:                                       ; preds = %if.end110
  %107 = load i32, i32* @debug, align 4, !dbg !18499
  %and116 = and i32 %107, 262144, !dbg !18502
  %tobool117 = icmp ne i32 %and116, 0, !dbg !18502
  br i1 %tobool117, label %if.then118, label %if.end120, !dbg !18503

if.then118:                                       ; preds = %if.then115
  %call119 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hfcmulti_initmode, i64 0, i64 0)) #13, !dbg !18504
  br label %if.end120, !dbg !18504

if.end120:                                        ; preds = %if.then118, %if.then115
  store i8 0, i8* %r_e1_wr_sta, align 1, !dbg !18505
  %108 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18506
  %e1_getclock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %108, i32 0, i32 54, !dbg !18507
  store i32 0, i32* %e1_getclock, align 8, !dbg !18508
  br label %if.end128, !dbg !18509

if.else121:                                       ; preds = %if.end110
  %109 = load i32, i32* @debug, align 4, !dbg !18510
  %and122 = and i32 %109, 262144, !dbg !18513
  %tobool123 = icmp ne i32 %and122, 0, !dbg !18513
  br i1 %tobool123, label %if.then124, label %if.end126, !dbg !18514

if.then124:                                       ; preds = %if.else121
  %call125 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hfcmulti_initmode, i64 0, i64 0)) #13, !dbg !18515
  br label %if.end126, !dbg !18515

if.end126:                                        ; preds = %if.then124, %if.else121
  store i8 0, i8* %r_e1_wr_sta, align 1, !dbg !18516
  %110 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18517
  %e1_getclock127 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %110, i32 0, i32 54, !dbg !18518
  store i32 1, i32* %e1_getclock127, align 8, !dbg !18519
  br label %if.end128

if.end128:                                        ; preds = %if.end126, %if.end120
  %111 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18520
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %111, i32 0, i32 31, !dbg !18522
  %call129 = call zeroext i1 @test_bit(i64 5, i64* %chip) #12, !dbg !18523
  br i1 %call129, label %if.then130, label %if.else132, !dbg !18524

if.then130:                                       ; preds = %if.end128
  %112 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18525
  %HFC_outb131 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %112, i32 0, i32 10, !dbg !18525
  %113 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb131, align 8, !dbg !18525
  %114 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18525
  call void %113(%struct.hfc_multi* %114, i8 zeroext 49, i8 zeroext 1) #12, !dbg !18525
  br label %if.end134, !dbg !18525

if.else132:                                       ; preds = %if.end128
  %115 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18526
  %HFC_outb133 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %115, i32 0, i32 10, !dbg !18526
  %116 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb133, align 8, !dbg !18526
  %117 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18526
  call void %116(%struct.hfc_multi* %117, i8 zeroext 49, i8 zeroext 0) #12, !dbg !18526
  br label %if.end134

if.end134:                                        ; preds = %if.else132, %if.then130
  %118 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18527
  %chip135 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %118, i32 0, i32 31, !dbg !18529
  %call136 = call zeroext i1 @test_bit(i64 10, i64* %chip135) #12, !dbg !18530
  br i1 %call136, label %if.then137, label %if.end139, !dbg !18531

if.then137:                                       ; preds = %if.end134
  %119 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18532
  %e1_getclock138 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %119, i32 0, i32 54, !dbg !18533
  store i32 1, i32* %e1_getclock138, align 8, !dbg !18534
  br label %if.end139, !dbg !18532

if.end139:                                        ; preds = %if.then137, %if.end134
  %120 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18535
  %chip140 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %120, i32 0, i32 31, !dbg !18537
  %call141 = call zeroext i1 @test_bit(i64 11, i64* %chip140) #12, !dbg !18538
  br i1 %call141, label %if.then142, label %if.end144, !dbg !18539

if.then142:                                       ; preds = %if.end139
  %121 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18540
  %e1_getclock143 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %121, i32 0, i32 54, !dbg !18541
  store i32 0, i32* %e1_getclock143, align 8, !dbg !18542
  br label %if.end144, !dbg !18540

if.end144:                                        ; preds = %if.then142, %if.end139
  %122 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18543
  %chip145 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %122, i32 0, i32 31, !dbg !18545
  %call146 = call zeroext i1 @test_bit(i64 3, i64* %chip145) #12, !dbg !18546
  br i1 %call146, label %if.then147, label %if.else154, !dbg !18547

if.then147:                                       ; preds = %if.end144
  %123 = load i32, i32* @debug, align 4, !dbg !18548
  %and148 = and i32 %123, 262144, !dbg !18551
  %tobool149 = icmp ne i32 %and148, 0, !dbg !18551
  br i1 %tobool149, label %if.then150, label %if.end152, !dbg !18552

if.then150:                                       ; preds = %if.then147
  %call151 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hfcmulti_initmode, i64 0, i64 0)) #13, !dbg !18553
  br label %if.end152, !dbg !18553

if.end152:                                        ; preds = %if.then150, %if.then147
  %124 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18554
  %HFC_outb153 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %124, i32 0, i32 10, !dbg !18554
  %125 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb153, align 8, !dbg !18554
  %126 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18554
  call void %125(%struct.hfc_multi* %126, i8 zeroext 53, i8 zeroext 5) #12, !dbg !18554
  br label %if.end173, !dbg !18555

if.else154:                                       ; preds = %if.end144
  %127 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18556
  %e1_getclock155 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %127, i32 0, i32 54, !dbg !18559
  %128 = load i32, i32* %e1_getclock155, align 8, !dbg !18559
  %tobool156 = icmp ne i32 %128, 0, !dbg !18556
  br i1 %tobool156, label %if.then157, label %if.else164, !dbg !18560

if.then157:                                       ; preds = %if.else154
  %129 = load i32, i32* @debug, align 4, !dbg !18561
  %and158 = and i32 %129, 262144, !dbg !18564
  %tobool159 = icmp ne i32 %and158, 0, !dbg !18564
  br i1 %tobool159, label %if.then160, label %if.end162, !dbg !18565

if.then160:                                       ; preds = %if.then157
  %call161 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hfcmulti_initmode, i64 0, i64 0)) #13, !dbg !18566
  br label %if.end162, !dbg !18566

if.end162:                                        ; preds = %if.then160, %if.then157
  %130 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18567
  %HFC_outb163 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %130, i32 0, i32 10, !dbg !18567
  %131 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb163, align 8, !dbg !18567
  %132 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18567
  call void %131(%struct.hfc_multi* %132, i8 zeroext 53, i8 zeroext 2) #12, !dbg !18567
  br label %if.end172, !dbg !18568

if.else164:                                       ; preds = %if.else154
  %133 = load i32, i32* @debug, align 4, !dbg !18569
  %and165 = and i32 %133, 262144, !dbg !18572
  %tobool166 = icmp ne i32 %and165, 0, !dbg !18572
  br i1 %tobool166, label %if.then167, label %if.end169, !dbg !18573

if.then167:                                       ; preds = %if.else164
  %call168 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hfcmulti_initmode, i64 0, i64 0)) #13, !dbg !18574
  br label %if.end169, !dbg !18574

if.end169:                                        ; preds = %if.then167, %if.else164
  %134 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18575
  %HFC_outb170 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %134, i32 0, i32 10, !dbg !18575
  %135 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb170, align 8, !dbg !18575
  %136 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18575
  call void %135(%struct.hfc_multi* %136, i8 zeroext 53, i8 zeroext -123) #12, !dbg !18575
  %137 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18576
  %HFC_outb171 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %137, i32 0, i32 10, !dbg !18576
  %138 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb171, align 8, !dbg !18576
  %139 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18576
  call void %138(%struct.hfc_multi* %139, i8 zeroext 49, i8 zeroext 0) #12, !dbg !18576
  br label %if.end172

if.end172:                                        ; preds = %if.end169, %if.end162
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.end152
  %140 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18577
  %HFC_outb174 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %140, i32 0, i32 10, !dbg !18577
  %141 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb174, align 8, !dbg !18577
  %142 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18577
  call void %141(%struct.hfc_multi* %142, i8 zeroext 47, i8 zeroext -100) #12, !dbg !18577
  %143 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18578
  %HFC_outb175 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %143, i32 0, i32 10, !dbg !18578
  %144 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb175, align 8, !dbg !18578
  %145 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18578
  call void %144(%struct.hfc_multi* %145, i8 zeroext 70, i8 zeroext 16) #12, !dbg !18578
  %146 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18579
  %HFC_outb176 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %146, i32 0, i32 10, !dbg !18579
  %147 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb176, align 8, !dbg !18579
  %148 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18579
  call void %147(%struct.hfc_multi* %148, i8 zeroext 56, i8 zeroext 80) #12, !dbg !18579
  %149 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18580
  %HFC_outb177 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %149, i32 0, i32 10, !dbg !18580
  %150 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb177, align 8, !dbg !18580
  %151 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18580
  call void %150(%struct.hfc_multi* %151, i8 zeroext 57, i8 zeroext -1) #12, !dbg !18580
  %152 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18581
  %HFC_outb178 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %152, i32 0, i32 10, !dbg !18581
  %153 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb178, align 8, !dbg !18581
  %154 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18581
  %155 = load i8, i8* %r_e1_wr_sta, align 1, !dbg !18581
  %conv = zext i8 %155 to i32, !dbg !18581
  %or = or i32 %conv, 16, !dbg !18581
  %conv179 = trunc i32 %or to i8, !dbg !18581
  call void %153(%struct.hfc_multi* %154, i8 zeroext 32, i8 zeroext %conv179) #12, !dbg !18581
  call void @__const_udelay(i64 25770) #12, !dbg !18582
  %156 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18587
  %HFC_outb180 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %156, i32 0, i32 10, !dbg !18587
  %157 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb180, align 8, !dbg !18587
  %158 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18587
  %159 = load i8, i8* %r_e1_wr_sta, align 1, !dbg !18587
  call void %157(%struct.hfc_multi* %158, i8 zeroext 32, i8 zeroext %159) #12, !dbg !18587
  %160 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18588
  %chip181 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %160, i32 0, i32 31, !dbg !18590
  %call182 = call zeroext i1 @test_bit(i64 14, i64* %chip181) #12, !dbg !18591
  br i1 %call182, label %if.then183, label %if.end184, !dbg !18592

if.then183:                                       ; preds = %if.end173
  %161 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18593
  %syncronized = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %161, i32 0, i32 55, !dbg !18595
  store i32 0, i32* %syncronized, align 4, !dbg !18596
  %162 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18597
  call void @plxsd_checksync(%struct.hfc_multi* %162, i32 0) #12, !dbg !18598
  br label %if.end184, !dbg !18599

if.end184:                                        ; preds = %if.then183, %if.end173
  br label %if.end185, !dbg !18600

if.end185:                                        ; preds = %if.end184, %land.lhs.true, %if.end47
  %163 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18601
  %ctype186 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %163, i32 0, i32 4, !dbg !18603
  %164 = load i32, i32* %ctype186, align 8, !dbg !18603
  %cmp187 = icmp ne i32 %164, 1, !dbg !18604
  br i1 %cmp187, label %if.then189, label %if.end345, !dbg !18605

if.then189:                                       ; preds = %if.end185
  %165 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18606
  %chan190 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %165, i32 0, i32 60, !dbg !18608
  %166 = load i32, i32* %i, align 4, !dbg !18609
  %idxprom191 = sext i32 %166 to i64, !dbg !18606
  %arrayidx192 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan190, i64 0, i64 %idxprom191, !dbg !18606
  %slot_tx193 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx192, i32 0, i32 13, !dbg !18610
  store i32 -1, i32* %slot_tx193, align 8, !dbg !18611
  %167 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18612
  %chan194 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %167, i32 0, i32 60, !dbg !18613
  %168 = load i32, i32* %i, align 4, !dbg !18614
  %idxprom195 = sext i32 %168 to i64, !dbg !18612
  %arrayidx196 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan194, i64 0, i64 %idxprom195, !dbg !18612
  %slot_rx197 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx196, i32 0, i32 15, !dbg !18615
  store i32 -1, i32* %slot_rx197, align 8, !dbg !18616
  %169 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18617
  %chan198 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %169, i32 0, i32 60, !dbg !18618
  %170 = load i32, i32* %i, align 4, !dbg !18619
  %idxprom199 = sext i32 %170 to i64, !dbg !18617
  %arrayidx200 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan198, i64 0, i64 %idxprom199, !dbg !18617
  %conf201 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx200, i32 0, i32 17, !dbg !18620
  store i32 -1, i32* %conf201, align 8, !dbg !18621
  %171 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18622
  %172 = load i32, i32* %i, align 4, !dbg !18623
  %173 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18624
  %dev202 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %173, i32 0, i32 0, !dbg !18625
  %D203 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev202, i32 0, i32 0, !dbg !18626
  %protocol204 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D203, i32 0, i32 1, !dbg !18627
  %174 = load i32, i32* %protocol204, align 8, !dbg !18627
  %call205 = call i32 @mode_hfcmulti(%struct.hfc_multi* %171, i32 %172, i32 %174, i32 -1, i32 0, i32 -1, i32 0) #12, !dbg !18628
  %175 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18629
  %timer206 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %175, i32 0, i32 8, !dbg !18629
  call void @init_timer_key(%struct.timer_list* %timer206, void (%struct.timer_list*)* @hfcmulti_dbusy_timer, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !18629
  %176 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18630
  %chan207 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %176, i32 0, i32 60, !dbg !18631
  %177 = load i32, i32* %i, align 4, !dbg !18632
  %sub = sub i32 %177, 2, !dbg !18633
  %idxprom208 = sext i32 %sub to i64, !dbg !18630
  %arrayidx209 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan207, i64 0, i64 %idxprom208, !dbg !18630
  %slot_tx210 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx209, i32 0, i32 13, !dbg !18634
  store i32 -1, i32* %slot_tx210, align 8, !dbg !18635
  %178 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18636
  %chan211 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %178, i32 0, i32 60, !dbg !18637
  %179 = load i32, i32* %i, align 4, !dbg !18638
  %sub212 = sub i32 %179, 2, !dbg !18639
  %idxprom213 = sext i32 %sub212 to i64, !dbg !18636
  %arrayidx214 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan211, i64 0, i64 %idxprom213, !dbg !18636
  %slot_rx215 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx214, i32 0, i32 15, !dbg !18640
  store i32 -1, i32* %slot_rx215, align 8, !dbg !18641
  %180 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18642
  %chan216 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %180, i32 0, i32 60, !dbg !18643
  %181 = load i32, i32* %i, align 4, !dbg !18644
  %sub217 = sub i32 %181, 2, !dbg !18645
  %idxprom218 = sext i32 %sub217 to i64, !dbg !18642
  %arrayidx219 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan216, i64 0, i64 %idxprom218, !dbg !18642
  %conf220 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx219, i32 0, i32 17, !dbg !18646
  store i32 -1, i32* %conf220, align 8, !dbg !18647
  %182 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18648
  %183 = load i32, i32* %i, align 4, !dbg !18649
  %sub221 = sub i32 %183, 2, !dbg !18650
  %call222 = call i32 @mode_hfcmulti(%struct.hfc_multi* %182, i32 %sub221, i32 0, i32 -1, i32 0, i32 -1, i32 0) #12, !dbg !18651
  %184 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18652
  %chan223 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %184, i32 0, i32 60, !dbg !18653
  %185 = load i32, i32* %i, align 4, !dbg !18654
  %sub224 = sub i32 %185, 1, !dbg !18655
  %idxprom225 = sext i32 %sub224 to i64, !dbg !18652
  %arrayidx226 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan223, i64 0, i64 %idxprom225, !dbg !18652
  %slot_tx227 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx226, i32 0, i32 13, !dbg !18656
  store i32 -1, i32* %slot_tx227, align 8, !dbg !18657
  %186 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18658
  %chan228 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %186, i32 0, i32 60, !dbg !18659
  %187 = load i32, i32* %i, align 4, !dbg !18660
  %sub229 = sub i32 %187, 1, !dbg !18661
  %idxprom230 = sext i32 %sub229 to i64, !dbg !18658
  %arrayidx231 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan228, i64 0, i64 %idxprom230, !dbg !18658
  %slot_rx232 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx231, i32 0, i32 15, !dbg !18662
  store i32 -1, i32* %slot_rx232, align 8, !dbg !18663
  %188 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18664
  %chan233 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %188, i32 0, i32 60, !dbg !18665
  %189 = load i32, i32* %i, align 4, !dbg !18666
  %sub234 = sub i32 %189, 1, !dbg !18667
  %idxprom235 = sext i32 %sub234 to i64, !dbg !18664
  %arrayidx236 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan233, i64 0, i64 %idxprom235, !dbg !18664
  %conf237 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx236, i32 0, i32 17, !dbg !18668
  store i32 -1, i32* %conf237, align 8, !dbg !18669
  %190 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18670
  %191 = load i32, i32* %i, align 4, !dbg !18671
  %sub238 = sub i32 %191, 1, !dbg !18672
  %call239 = call i32 @mode_hfcmulti(%struct.hfc_multi* %190, i32 %sub238, i32 0, i32 -1, i32 0, i32 -1, i32 0) #12, !dbg !18673
  %192 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18674
  %HFC_outb240 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %192, i32 0, i32 10, !dbg !18674
  %193 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb240, align 8, !dbg !18674
  %194 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18674
  %195 = load i32, i32* %pt, align 4, !dbg !18674
  %conv241 = trunc i32 %195 to i8, !dbg !18674
  call void %193(%struct.hfc_multi* %194, i8 zeroext 22, i8 zeroext %conv241) #12, !dbg !18674
  call void @__const_udelay(i64 4295) #12, !dbg !18675
  %196 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18680
  %dev242 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %196, i32 0, i32 0, !dbg !18682
  %D243 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev242, i32 0, i32 0, !dbg !18683
  %protocol244 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D243, i32 0, i32 1, !dbg !18684
  %197 = load i32, i32* %protocol244, align 8, !dbg !18684
  %cmp245 = icmp eq i32 %197, 2, !dbg !18685
  br i1 %cmp245, label %if.then247, label %if.else258, !dbg !18686

if.then247:                                       ; preds = %if.then189
  %198 = load i32, i32* @debug, align 4, !dbg !18687
  %and248 = and i32 %198, 262144, !dbg !18690
  %tobool249 = icmp ne i32 %and248, 0, !dbg !18690
  br i1 %tobool249, label %if.then250, label %if.end252, !dbg !18691

if.then250:                                       ; preds = %if.then247
  %199 = load i32, i32* %pt, align 4, !dbg !18692
  %call251 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hfcmulti_initmode, i64 0, i64 0), i32 %199) #13, !dbg !18693
  br label %if.end252, !dbg !18693

if.end252:                                        ; preds = %if.then250, %if.then247
  %200 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18694
  %HFC_outb253 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %200, i32 0, i32 10, !dbg !18694
  %201 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb253, align 8, !dbg !18694
  %202 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18694
  %203 = load i32, i32* @clockdelay_nt, align 4, !dbg !18694
  %conv254 = trunc i32 %203 to i8, !dbg !18694
  call void %201(%struct.hfc_multi* %202, i8 zeroext 55, i8 zeroext %conv254) #12, !dbg !18694
  store i8 1, i8* %a_st_wr_state, align 1, !dbg !18695
  %204 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18696
  %hw255 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %204, i32 0, i32 30, !dbg !18697
  %a_st_ctrl0 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw255, i32 0, i32 11, !dbg !18698
  %205 = load i32, i32* %pt, align 4, !dbg !18699
  %idxprom256 = sext i32 %205 to i64, !dbg !18696
  %arrayidx257 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0, i64 0, i64 %idxprom256, !dbg !18696
  store i8 4, i8* %arrayidx257, align 1, !dbg !18700
  br label %if.end270, !dbg !18701

if.else258:                                       ; preds = %if.then189
  %206 = load i32, i32* @debug, align 4, !dbg !18702
  %and259 = and i32 %206, 262144, !dbg !18705
  %tobool260 = icmp ne i32 %and259, 0, !dbg !18705
  br i1 %tobool260, label %if.then261, label %if.end263, !dbg !18706

if.then261:                                       ; preds = %if.else258
  %207 = load i32, i32* %pt, align 4, !dbg !18707
  %call262 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hfcmulti_initmode, i64 0, i64 0), i32 %207) #13, !dbg !18708
  br label %if.end263, !dbg !18708

if.end263:                                        ; preds = %if.then261, %if.else258
  %208 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18709
  %HFC_outb264 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %208, i32 0, i32 10, !dbg !18709
  %209 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb264, align 8, !dbg !18709
  %210 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18709
  %211 = load i32, i32* @clockdelay_te, align 4, !dbg !18709
  %conv265 = trunc i32 %211 to i8, !dbg !18709
  call void %209(%struct.hfc_multi* %210, i8 zeroext 55, i8 zeroext %conv265) #12, !dbg !18709
  store i8 2, i8* %a_st_wr_state, align 1, !dbg !18710
  %212 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18711
  %hw266 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %212, i32 0, i32 30, !dbg !18712
  %a_st_ctrl0267 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw266, i32 0, i32 11, !dbg !18713
  %213 = load i32, i32* %pt, align 4, !dbg !18714
  %idxprom268 = sext i32 %213 to i64, !dbg !18711
  %arrayidx269 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0267, i64 0, i64 %idxprom268, !dbg !18711
  store i8 0, i8* %arrayidx269, align 1, !dbg !18715
  br label %if.end270

if.end270:                                        ; preds = %if.end263, %if.end252
  %214 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18716
  %chan271 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %214, i32 0, i32 60, !dbg !18718
  %215 = load i32, i32* %i, align 4, !dbg !18719
  %idxprom272 = sext i32 %215 to i64, !dbg !18716
  %arrayidx273 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan271, i64 0, i64 %idxprom272, !dbg !18716
  %cfg274 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx273, i32 0, i32 10, !dbg !18720
  %call275 = call zeroext i1 @test_bit(i64 1, i64* %cfg274) #12, !dbg !18721
  br i1 %call275, label %if.end284, label %if.then276, !dbg !18722

if.then276:                                       ; preds = %if.end270
  %216 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18723
  %hw277 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %216, i32 0, i32 30, !dbg !18724
  %a_st_ctrl0278 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw277, i32 0, i32 11, !dbg !18725
  %217 = load i32, i32* %pt, align 4, !dbg !18726
  %idxprom279 = sext i32 %217 to i64, !dbg !18723
  %arrayidx280 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0278, i64 0, i64 %idxprom279, !dbg !18723
  %218 = load i8, i8* %arrayidx280, align 1, !dbg !18727
  %conv281 = zext i8 %218 to i32, !dbg !18727
  %or282 = or i32 %conv281, 64, !dbg !18727
  %conv283 = trunc i32 %or282 to i8, !dbg !18727
  store i8 %conv283, i8* %arrayidx280, align 1, !dbg !18727
  br label %if.end284, !dbg !18723

if.end284:                                        ; preds = %if.then276, %if.end270
  %219 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18728
  %ctype285 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %219, i32 0, i32 4, !dbg !18730
  %220 = load i32, i32* %ctype285, align 8, !dbg !18730
  %cmp286 = icmp eq i32 %220, 5, !dbg !18731
  br i1 %cmp286, label %if.then288, label %if.end297, !dbg !18732

if.then288:                                       ; preds = %if.end284
  %221 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18733
  %hw289 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %221, i32 0, i32 30, !dbg !18735
  %a_st_ctrl0290 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw289, i32 0, i32 11, !dbg !18736
  %222 = load i32, i32* %pt, align 4, !dbg !18737
  %idxprom291 = sext i32 %222 to i64, !dbg !18733
  %arrayidx292 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0290, i64 0, i64 %idxprom291, !dbg !18733
  %223 = load i8, i8* %arrayidx292, align 1, !dbg !18738
  %conv293 = zext i8 %223 to i32, !dbg !18738
  %or294 = or i32 %conv293, 64, !dbg !18738
  %conv295 = trunc i32 %or294 to i8, !dbg !18738
  store i8 %conv295, i8* %arrayidx292, align 1, !dbg !18738
  %224 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18739
  %HFC_outb296 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %224, i32 0, i32 10, !dbg !18739
  %225 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb296, align 8, !dbg !18739
  %226 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18739
  call void %225(%struct.hfc_multi* %226, i8 zeroext 53, i8 zeroext -8) #12, !dbg !18739
  br label %if.end297, !dbg !18740

if.end297:                                        ; preds = %if.then288, %if.end284
  %227 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18741
  %HFC_outb298 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %227, i32 0, i32 10, !dbg !18741
  %228 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb298, align 8, !dbg !18741
  %229 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18741
  %230 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18741
  %hw299 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %230, i32 0, i32 30, !dbg !18741
  %a_st_ctrl0300 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw299, i32 0, i32 11, !dbg !18741
  %231 = load i32, i32* %pt, align 4, !dbg !18741
  %idxprom301 = sext i32 %231 to i64, !dbg !18741
  %arrayidx302 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0300, i64 0, i64 %idxprom301, !dbg !18741
  %232 = load i8, i8* %arrayidx302, align 1, !dbg !18741
  call void %228(%struct.hfc_multi* %229, i8 zeroext 49, i8 zeroext %232) #12, !dbg !18741
  %233 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18742
  %dev303 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %233, i32 0, i32 0, !dbg !18744
  %D304 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev303, i32 0, i32 0, !dbg !18745
  %protocol305 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D304, i32 0, i32 1, !dbg !18746
  %234 = load i32, i32* %protocol305, align 8, !dbg !18746
  %cmp306 = icmp eq i32 %234, 2, !dbg !18747
  br i1 %cmp306, label %if.then314, label %lor.lhs.false, !dbg !18748

lor.lhs.false:                                    ; preds = %if.end297
  %235 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18749
  %chan308 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %235, i32 0, i32 60, !dbg !18750
  %236 = load i32, i32* %i, align 4, !dbg !18751
  %idxprom309 = sext i32 %236 to i64, !dbg !18749
  %arrayidx310 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan308, i64 0, i64 %idxprom309, !dbg !18749
  %cfg311 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx310, i32 0, i32 10, !dbg !18752
  %call312 = call zeroext i1 @test_bit(i64 2, i64* %cfg311) #12, !dbg !18753
  br i1 %call312, label %if.then314, label %if.else316, !dbg !18754

if.then314:                                       ; preds = %lor.lhs.false, %if.end297
  %237 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18755
  %HFC_outb315 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %237, i32 0, i32 10, !dbg !18755
  %238 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb315, align 8, !dbg !18755
  %239 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18755
  call void %238(%struct.hfc_multi* %239, i8 zeroext 50, i8 zeroext 8) #12, !dbg !18755
  br label %if.end318, !dbg !18755

if.else316:                                       ; preds = %lor.lhs.false
  %240 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18756
  %HFC_outb317 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %240, i32 0, i32 10, !dbg !18756
  %241 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb317, align 8, !dbg !18756
  %242 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18756
  call void %241(%struct.hfc_multi* %242, i8 zeroext 50, i8 zeroext 0) #12, !dbg !18756
  br label %if.end318

if.end318:                                        ; preds = %if.else316, %if.then314
  %243 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18757
  %HFC_outb319 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %243, i32 0, i32 10, !dbg !18757
  %244 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb319, align 8, !dbg !18757
  %245 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18757
  call void %244(%struct.hfc_multi* %245, i8 zeroext 51, i8 zeroext 3) #12, !dbg !18757
  %246 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18758
  %HFC_outb320 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %246, i32 0, i32 10, !dbg !18758
  %247 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb320, align 8, !dbg !18758
  %248 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18758
  %249 = load i8, i8* %a_st_wr_state, align 1, !dbg !18758
  %conv321 = zext i8 %249 to i32, !dbg !18758
  %or322 = or i32 %conv321, 16, !dbg !18758
  %conv323 = trunc i32 %or322 to i8, !dbg !18758
  call void %247(%struct.hfc_multi* %248, i8 zeroext 48, i8 zeroext %conv323) #12, !dbg !18758
  call void @__const_udelay(i64 25770) #12, !dbg !18759
  %250 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18764
  %HFC_outb324 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %250, i32 0, i32 10, !dbg !18764
  %251 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb324, align 8, !dbg !18764
  %252 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18764
  %253 = load i8, i8* %a_st_wr_state, align 1, !dbg !18764
  call void %251(%struct.hfc_multi* %252, i8 zeroext 48, i8 zeroext %253) #12, !dbg !18764
  %254 = load i32, i32* %pt, align 4, !dbg !18765
  %shl325 = shl i32 1, %254, !dbg !18766
  %255 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18767
  %hw326 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %255, i32 0, i32 30, !dbg !18768
  %r_sci_msk = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw326, i32 0, i32 8, !dbg !18769
  %256 = load i8, i8* %r_sci_msk, align 8, !dbg !18770
  %conv327 = zext i8 %256 to i32, !dbg !18770
  %or328 = or i32 %conv327, %shl325, !dbg !18770
  %conv329 = trunc i32 %or328 to i8, !dbg !18770
  store i8 %conv329, i8* %r_sci_msk, align 8, !dbg !18770
  %257 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18771
  %HFC_outb330 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %257, i32 0, i32 10, !dbg !18771
  %258 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb330, align 8, !dbg !18771
  %259 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18771
  %260 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18771
  %hw331 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %260, i32 0, i32 30, !dbg !18771
  %r_sci_msk332 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw331, i32 0, i32 8, !dbg !18771
  %261 = load i8, i8* %r_sci_msk332, align 8, !dbg !18771
  call void %258(%struct.hfc_multi* %259, i8 zeroext 18, i8 zeroext %261) #12, !dbg !18771
  %262 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18772
  %chip333 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %262, i32 0, i32 31, !dbg !18774
  %call334 = call zeroext i1 @test_bit(i64 14, i64* %chip333) #12, !dbg !18775
  br i1 %call334, label %if.then335, label %if.end344, !dbg !18776

if.then335:                                       ; preds = %if.end318
  %263 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18777
  %chan336 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %263, i32 0, i32 60, !dbg !18779
  %264 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !18780
  %slot337 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %264, i32 0, i32 7, !dbg !18781
  %265 = load i32, i32* %slot337, align 8, !dbg !18781
  %idxprom338 = sext i32 %265 to i64, !dbg !18777
  %arrayidx339 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan336, i64 0, i64 %idxprom338, !dbg !18777
  %port340 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx339, i32 0, i32 2, !dbg !18782
  %266 = load i32, i32* %port340, align 8, !dbg !18782
  %shl341 = shl i32 1, %266, !dbg !18783
  %neg = xor i32 %shl341, -1, !dbg !18784
  %267 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18785
  %syncronized342 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %267, i32 0, i32 55, !dbg !18786
  %268 = load i32, i32* %syncronized342, align 4, !dbg !18787
  %and343 = and i32 %268, %neg, !dbg !18787
  store i32 %and343, i32* %syncronized342, align 4, !dbg !18787
  %269 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !18788
  call void @plxsd_checksync(%struct.hfc_multi* %269, i32 0) #12, !dbg !18789
  br label %if.end344, !dbg !18790

if.end344:                                        ; preds = %if.then335, %if.end318
  br label %if.end345, !dbg !18791

if.end345:                                        ; preds = %if.end344, %if.end185
  %270 = load i32, i32* @debug, align 4, !dbg !18792
  %and346 = and i32 %270, 262144, !dbg !18794
  %tobool347 = icmp ne i32 %and346, 0, !dbg !18794
  br i1 %tobool347, label %if.then348, label %if.end350, !dbg !18795

if.then348:                                       ; preds = %if.end345
  %call349 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hfcmulti_initmode, i64 0, i64 0)) #13, !dbg !18796
  br label %if.end350, !dbg !18796

if.end350:                                        ; preds = %if.then348, %if.end345
  ret void, !dbg !18797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #2 !dbg !18798 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !18801, metadata !DIExpression()), !dbg !18802
  ret i1 true, !dbg !18803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mode_hfcmulti(%struct.hfc_multi* %hc, i32 %ch, i32 %protocol, i32 %slot_tx, i32 %bank_tx, i32 %slot_rx, i32 %bank_rx) #2 !dbg !18804 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %ch.addr = alloca i32, align 4
  %protocol.addr = alloca i32, align 4
  %slot_tx.addr = alloca i32, align 4
  %bank_tx.addr = alloca i32, align 4
  %slot_rx.addr = alloca i32, align 4
  %bank_rx.addr = alloca i32, align 4
  %flow_tx = alloca i32, align 4
  %flow_rx = alloca i32, align 4
  %routing = alloca i32, align 4
  %oslot_tx = alloca i32, align 4
  %oslot_rx = alloca i32, align 4
  %conf = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !18807, metadata !DIExpression()), !dbg !18808
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !18809, metadata !DIExpression()), !dbg !18810
  store i32 %protocol, i32* %protocol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %protocol.addr, metadata !18811, metadata !DIExpression()), !dbg !18812
  store i32 %slot_tx, i32* %slot_tx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot_tx.addr, metadata !18813, metadata !DIExpression()), !dbg !18814
  store i32 %bank_tx, i32* %bank_tx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bank_tx.addr, metadata !18815, metadata !DIExpression()), !dbg !18816
  store i32 %slot_rx, i32* %slot_rx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot_rx.addr, metadata !18817, metadata !DIExpression()), !dbg !18818
  store i32 %bank_rx, i32* %bank_rx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bank_rx.addr, metadata !18819, metadata !DIExpression()), !dbg !18820
  call void @llvm.dbg.declare(metadata i32* %flow_tx, metadata !18821, metadata !DIExpression()), !dbg !18822
  store i32 0, i32* %flow_tx, align 4, !dbg !18822
  call void @llvm.dbg.declare(metadata i32* %flow_rx, metadata !18823, metadata !DIExpression()), !dbg !18824
  store i32 0, i32* %flow_rx, align 4, !dbg !18824
  call void @llvm.dbg.declare(metadata i32* %routing, metadata !18825, metadata !DIExpression()), !dbg !18826
  store i32 0, i32* %routing, align 4, !dbg !18826
  call void @llvm.dbg.declare(metadata i32* %oslot_tx, metadata !18827, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.declare(metadata i32* %oslot_rx, metadata !18829, metadata !DIExpression()), !dbg !18830
  call void @llvm.dbg.declare(metadata i32* %conf, metadata !18831, metadata !DIExpression()), !dbg !18832
  %0 = load i32, i32* %ch.addr, align 4, !dbg !18833
  %cmp = icmp slt i32 %0, 0, !dbg !18835
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18836

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %ch.addr, align 4, !dbg !18837
  %cmp1 = icmp sgt i32 %1, 31, !dbg !18838
  br i1 %cmp1, label %if.then, label %if.end, !dbg !18839

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !18840
  br label %return, !dbg !18840

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18841
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %2, i32 0, i32 60, !dbg !18842
  %3 = load i32, i32* %ch.addr, align 4, !dbg !18843
  %idxprom = sext i32 %3 to i64, !dbg !18841
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !18841
  %slot_tx2 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 13, !dbg !18844
  %4 = load i32, i32* %slot_tx2, align 8, !dbg !18844
  store i32 %4, i32* %oslot_tx, align 4, !dbg !18845
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18846
  %chan3 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 60, !dbg !18847
  %6 = load i32, i32* %ch.addr, align 4, !dbg !18848
  %idxprom4 = sext i32 %6 to i64, !dbg !18846
  %arrayidx5 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan3, i64 0, i64 %idxprom4, !dbg !18846
  %slot_rx6 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx5, i32 0, i32 15, !dbg !18849
  %7 = load i32, i32* %slot_rx6, align 8, !dbg !18849
  store i32 %7, i32* %oslot_rx, align 4, !dbg !18850
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18851
  %chan7 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 60, !dbg !18852
  %9 = load i32, i32* %ch.addr, align 4, !dbg !18853
  %idxprom8 = sext i32 %9 to i64, !dbg !18851
  %arrayidx9 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan7, i64 0, i64 %idxprom8, !dbg !18851
  %conf10 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx9, i32 0, i32 17, !dbg !18854
  %10 = load i32, i32* %conf10, align 8, !dbg !18854
  store i32 %10, i32* %conf, align 4, !dbg !18855
  %11 = load i32, i32* @debug, align 4, !dbg !18856
  %and = and i32 %11, 1048576, !dbg !18858
  %tobool = icmp ne i32 %and, 0, !dbg !18858
  br i1 %tobool, label %if.then11, label %if.end12, !dbg !18859

if.then11:                                        ; preds = %if.end
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18860
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %12, i32 0, i32 2, !dbg !18861
  %13 = load i32, i32* %id, align 8, !dbg !18861
  %14 = load i32, i32* %ch.addr, align 4, !dbg !18862
  %15 = load i32, i32* %protocol.addr, align 4, !dbg !18863
  %16 = load i32, i32* %oslot_tx, align 4, !dbg !18864
  %17 = load i32, i32* %slot_tx.addr, align 4, !dbg !18865
  %18 = load i32, i32* %bank_tx.addr, align 4, !dbg !18866
  %19 = load i32, i32* %oslot_rx, align 4, !dbg !18867
  %20 = load i32, i32* %slot_rx.addr, align 4, !dbg !18868
  %21 = load i32, i32* %bank_rx.addr, align 4, !dbg !18869
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.mode_hfcmulti, i64 0, i64 0), i32 %13, i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19, i32 %20, i32 %21) #13, !dbg !18870
  br label %if.end12, !dbg !18870

if.end12:                                         ; preds = %if.then11, %if.end
  %22 = load i32, i32* %oslot_tx, align 4, !dbg !18871
  %cmp13 = icmp sge i32 %22, 0, !dbg !18873
  br i1 %cmp13, label %land.lhs.true, label %if.end49, !dbg !18874

land.lhs.true:                                    ; preds = %if.end12
  %23 = load i32, i32* %slot_tx.addr, align 4, !dbg !18875
  %24 = load i32, i32* %oslot_tx, align 4, !dbg !18876
  %cmp14 = icmp ne i32 %23, %24, !dbg !18877
  br i1 %cmp14, label %if.then15, label %if.end49, !dbg !18878

if.then15:                                        ; preds = %land.lhs.true
  %25 = load i32, i32* @debug, align 4, !dbg !18879
  %and16 = and i32 %25, 1048576, !dbg !18882
  %tobool17 = icmp ne i32 %and16, 0, !dbg !18882
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !18883

if.then18:                                        ; preds = %if.then15
  %26 = load i32, i32* %oslot_tx, align 4, !dbg !18884
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.mode_hfcmulti, i64 0, i64 0), i32 %26) #13, !dbg !18885
  br label %if.end20, !dbg !18885

if.end20:                                         ; preds = %if.then18, %if.then15
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18886
  %slot_owner = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %27, i32 0, i32 61, !dbg !18888
  %28 = load i32, i32* %oslot_tx, align 4, !dbg !18889
  %shl = shl i32 %28, 1, !dbg !18890
  %idxprom21 = sext i32 %shl to i64, !dbg !18886
  %arrayidx22 = getelementptr [256 x i8], [256 x i8]* %slot_owner, i64 0, i64 %idxprom21, !dbg !18886
  %29 = load i8, i8* %arrayidx22, align 1, !dbg !18886
  %conv = sext i8 %29 to i32, !dbg !18886
  %30 = load i32, i32* %ch.addr, align 4, !dbg !18891
  %cmp23 = icmp eq i32 %conv, %30, !dbg !18892
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !18893

if.then25:                                        ; preds = %if.end20
  %31 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18894
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %31, i32 0, i32 10, !dbg !18894
  %32 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !18894
  %33 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18894
  %34 = load i32, i32* %oslot_tx, align 4, !dbg !18894
  %shl26 = shl i32 %34, 1, !dbg !18894
  %conv27 = trunc i32 %shl26 to i8, !dbg !18894
  call void %32(%struct.hfc_multi* %33, i8 zeroext 16, i8 zeroext %conv27) #12, !dbg !18894
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18896
  %HFC_outb28 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 10, !dbg !18896
  %36 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb28, align 8, !dbg !18896
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18896
  call void %36(%struct.hfc_multi* %37, i8 zeroext -48, i8 zeroext 0) #12, !dbg !18896
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18897
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 4, !dbg !18899
  %39 = load i32, i32* %ctype, align 8, !dbg !18899
  %cmp29 = icmp ne i32 %39, 5, !dbg !18900
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !18901

if.then31:                                        ; preds = %if.then25
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18902
  %HFC_outb32 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %40, i32 0, i32 10, !dbg !18902
  %41 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb32, align 8, !dbg !18902
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18902
  call void %41(%struct.hfc_multi* %42, i8 zeroext -47, i8 zeroext 0) #12, !dbg !18902
  br label %if.end33, !dbg !18902

if.end33:                                         ; preds = %if.then31, %if.then25
  %43 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18903
  %slot_owner34 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %43, i32 0, i32 61, !dbg !18904
  %44 = load i32, i32* %oslot_tx, align 4, !dbg !18905
  %shl35 = shl i32 %44, 1, !dbg !18906
  %idxprom36 = sext i32 %shl35 to i64, !dbg !18903
  %arrayidx37 = getelementptr [256 x i8], [256 x i8]* %slot_owner34, i64 0, i64 %idxprom36, !dbg !18903
  store i8 -1, i8* %arrayidx37, align 1, !dbg !18907
  br label %if.end48, !dbg !18908

if.else:                                          ; preds = %if.end20
  %45 = load i32, i32* @debug, align 4, !dbg !18909
  %and38 = and i32 %45, 1048576, !dbg !18912
  %tobool39 = icmp ne i32 %and38, 0, !dbg !18912
  br i1 %tobool39, label %if.then40, label %if.end47, !dbg !18913

if.then40:                                        ; preds = %if.else
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18914
  %slot_owner41 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 61, !dbg !18915
  %47 = load i32, i32* %oslot_tx, align 4, !dbg !18916
  %shl42 = shl i32 %47, 1, !dbg !18917
  %idxprom43 = sext i32 %shl42 to i64, !dbg !18914
  %arrayidx44 = getelementptr [256 x i8], [256 x i8]* %slot_owner41, i64 0, i64 %idxprom43, !dbg !18914
  %48 = load i8, i8* %arrayidx44, align 1, !dbg !18914
  %conv45 = sext i8 %48 to i32, !dbg !18914
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.mode_hfcmulti, i64 0, i64 0), i32 %conv45) #13, !dbg !18918
  br label %if.end47, !dbg !18918

if.end47:                                         ; preds = %if.then40, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end33
  br label %if.end49, !dbg !18919

if.end49:                                         ; preds = %if.end48, %land.lhs.true, %if.end12
  %49 = load i32, i32* %oslot_rx, align 4, !dbg !18920
  %cmp50 = icmp sge i32 %49, 0, !dbg !18922
  br i1 %cmp50, label %land.lhs.true52, label %if.end92, !dbg !18923

land.lhs.true52:                                  ; preds = %if.end49
  %50 = load i32, i32* %slot_rx.addr, align 4, !dbg !18924
  %51 = load i32, i32* %oslot_rx, align 4, !dbg !18925
  %cmp53 = icmp ne i32 %50, %51, !dbg !18926
  br i1 %cmp53, label %if.then55, label %if.end92, !dbg !18927

if.then55:                                        ; preds = %land.lhs.true52
  %52 = load i32, i32* @debug, align 4, !dbg !18928
  %and56 = and i32 %52, 1048576, !dbg !18931
  %tobool57 = icmp ne i32 %and56, 0, !dbg !18931
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !18932

if.then58:                                        ; preds = %if.then55
  %53 = load i32, i32* %oslot_rx, align 4, !dbg !18933
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.mode_hfcmulti, i64 0, i64 0), i32 %53) #13, !dbg !18934
  br label %if.end60, !dbg !18934

if.end60:                                         ; preds = %if.then58, %if.then55
  %54 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18935
  %slot_owner61 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %54, i32 0, i32 61, !dbg !18937
  %55 = load i32, i32* %oslot_rx, align 4, !dbg !18938
  %shl62 = shl i32 %55, 1, !dbg !18939
  %or = or i32 %shl62, 1, !dbg !18940
  %idxprom63 = sext i32 %or to i64, !dbg !18935
  %arrayidx64 = getelementptr [256 x i8], [256 x i8]* %slot_owner61, i64 0, i64 %idxprom63, !dbg !18935
  %56 = load i8, i8* %arrayidx64, align 1, !dbg !18935
  %conv65 = sext i8 %56 to i32, !dbg !18935
  %57 = load i32, i32* %ch.addr, align 4, !dbg !18941
  %cmp66 = icmp eq i32 %conv65, %57, !dbg !18942
  br i1 %cmp66, label %if.then68, label %if.else79, !dbg !18943

if.then68:                                        ; preds = %if.end60
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18944
  %HFC_outb69 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %58, i32 0, i32 10, !dbg !18944
  %59 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb69, align 8, !dbg !18944
  %60 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18944
  %61 = load i32, i32* %oslot_rx, align 4, !dbg !18944
  %shl70 = shl i32 %61, 1, !dbg !18944
  %or71 = or i32 %shl70, 1, !dbg !18944
  %conv72 = trunc i32 %or71 to i8, !dbg !18944
  call void %59(%struct.hfc_multi* %60, i8 zeroext 16, i8 zeroext %conv72) #12, !dbg !18944
  %62 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18946
  %HFC_outb73 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %62, i32 0, i32 10, !dbg !18946
  %63 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb73, align 8, !dbg !18946
  %64 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18946
  call void %63(%struct.hfc_multi* %64, i8 zeroext -48, i8 zeroext 0) #12, !dbg !18946
  %65 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18947
  %slot_owner74 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %65, i32 0, i32 61, !dbg !18948
  %66 = load i32, i32* %oslot_rx, align 4, !dbg !18949
  %shl75 = shl i32 %66, 1, !dbg !18950
  %or76 = or i32 %shl75, 1, !dbg !18951
  %idxprom77 = sext i32 %or76 to i64, !dbg !18947
  %arrayidx78 = getelementptr [256 x i8], [256 x i8]* %slot_owner74, i64 0, i64 %idxprom77, !dbg !18947
  store i8 -1, i8* %arrayidx78, align 1, !dbg !18952
  br label %if.end91, !dbg !18953

if.else79:                                        ; preds = %if.end60
  %67 = load i32, i32* @debug, align 4, !dbg !18954
  %and80 = and i32 %67, 1048576, !dbg !18957
  %tobool81 = icmp ne i32 %and80, 0, !dbg !18957
  br i1 %tobool81, label %if.then82, label %if.end90, !dbg !18958

if.then82:                                        ; preds = %if.else79
  %68 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18959
  %slot_owner83 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %68, i32 0, i32 61, !dbg !18960
  %69 = load i32, i32* %oslot_rx, align 4, !dbg !18961
  %shl84 = shl i32 %69, 1, !dbg !18962
  %or85 = or i32 %shl84, 1, !dbg !18963
  %idxprom86 = sext i32 %or85 to i64, !dbg !18959
  %arrayidx87 = getelementptr [256 x i8], [256 x i8]* %slot_owner83, i64 0, i64 %idxprom86, !dbg !18959
  %70 = load i8, i8* %arrayidx87, align 1, !dbg !18959
  %conv88 = sext i8 %70 to i32, !dbg !18959
  %call89 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.mode_hfcmulti, i64 0, i64 0), i32 %conv88) #13, !dbg !18964
  br label %if.end90, !dbg !18964

if.end90:                                         ; preds = %if.then82, %if.else79
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then68
  br label %if.end92, !dbg !18965

if.end92:                                         ; preds = %if.end91, %land.lhs.true52, %if.end49
  %71 = load i32, i32* %slot_tx.addr, align 4, !dbg !18966
  %cmp93 = icmp slt i32 %71, 0, !dbg !18968
  br i1 %cmp93, label %if.then95, label %if.else104, !dbg !18969

if.then95:                                        ; preds = %if.end92
  store i32 128, i32* %flow_tx, align 4, !dbg !18970
  %72 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18972
  %chan96 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %72, i32 0, i32 60, !dbg !18973
  %73 = load i32, i32* %ch.addr, align 4, !dbg !18974
  %idxprom97 = sext i32 %73 to i64, !dbg !18972
  %arrayidx98 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan96, i64 0, i64 %idxprom97, !dbg !18972
  %slot_tx99 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx98, i32 0, i32 13, !dbg !18975
  store i32 -1, i32* %slot_tx99, align 8, !dbg !18976
  %74 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18977
  %chan100 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %74, i32 0, i32 60, !dbg !18978
  %75 = load i32, i32* %ch.addr, align 4, !dbg !18979
  %idxprom101 = sext i32 %75 to i64, !dbg !18977
  %arrayidx102 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan100, i64 0, i64 %idxprom101, !dbg !18977
  %bank_tx103 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx102, i32 0, i32 14, !dbg !18980
  store i32 0, i32* %bank_tx103, align 4, !dbg !18981
  br label %if.end156, !dbg !18982

if.else104:                                       ; preds = %if.end92
  %76 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !18983
  %chan105 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %76, i32 0, i32 60, !dbg !18986
  %77 = load i32, i32* %ch.addr, align 4, !dbg !18987
  %idxprom106 = sext i32 %77 to i64, !dbg !18983
  %arrayidx107 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan105, i64 0, i64 %idxprom106, !dbg !18983
  %txpending = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx107, i32 0, i32 18, !dbg !18988
  %78 = load i32, i32* %txpending, align 4, !dbg !18988
  %tobool108 = icmp ne i32 %78, 0, !dbg !18983
  br i1 %tobool108, label %if.then109, label %if.else110, !dbg !18989

if.then109:                                       ; preds = %if.else104
  store i32 128, i32* %flow_tx, align 4, !dbg !18990
  br label %if.end111, !dbg !18991

if.else110:                                       ; preds = %if.else104
  store i32 192, i32* %flow_tx, align 4, !dbg !18992
  br label %if.end111

if.end111:                                        ; preds = %if.else110, %if.then109
  %79 = load i32, i32* %bank_tx.addr, align 4, !dbg !18993
  %tobool112 = icmp ne i32 %79, 0, !dbg !18993
  %80 = zext i1 %tobool112 to i64, !dbg !18993
  %cond = select i1 %tobool112, i32 192, i32 128, !dbg !18993
  store i32 %cond, i32* %routing, align 4, !dbg !18994
  %81 = load i32, i32* %conf, align 4, !dbg !18995
  %cmp113 = icmp sge i32 %81, 0, !dbg !18997
  br i1 %cmp113, label %if.then118, label %lor.lhs.false115, !dbg !18998

lor.lhs.false115:                                 ; preds = %if.end111
  %82 = load i32, i32* %bank_tx.addr, align 4, !dbg !18999
  %cmp116 = icmp sgt i32 %82, 1, !dbg !19000
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !19001

if.then118:                                       ; preds = %lor.lhs.false115, %if.end111
  store i32 64, i32* %routing, align 4, !dbg !19002
  br label %if.end119, !dbg !19003

if.end119:                                        ; preds = %if.then118, %lor.lhs.false115
  %83 = load i32, i32* @debug, align 4, !dbg !19004
  %and120 = and i32 %83, 1048576, !dbg !19006
  %tobool121 = icmp ne i32 %and120, 0, !dbg !19006
  br i1 %tobool121, label %if.then122, label %if.end124, !dbg !19007

if.then122:                                       ; preds = %if.end119
  %84 = load i32, i32* %ch.addr, align 4, !dbg !19008
  %85 = load i32, i32* %slot_tx.addr, align 4, !dbg !19009
  %86 = load i32, i32* %bank_tx.addr, align 4, !dbg !19010
  %87 = load i32, i32* %flow_tx, align 4, !dbg !19011
  %88 = load i32, i32* %routing, align 4, !dbg !19012
  %89 = load i32, i32* %conf, align 4, !dbg !19013
  %call123 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.mode_hfcmulti, i64 0, i64 0), i32 %84, i32 %85, i32 %86, i32 %87, i32 %88, i32 %89) #13, !dbg !19014
  br label %if.end124, !dbg !19014

if.end124:                                        ; preds = %if.then122, %if.end119
  %90 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19015
  %HFC_outb125 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %90, i32 0, i32 10, !dbg !19015
  %91 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb125, align 8, !dbg !19015
  %92 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19015
  %93 = load i32, i32* %slot_tx.addr, align 4, !dbg !19015
  %shl126 = shl i32 %93, 1, !dbg !19015
  %conv127 = trunc i32 %shl126 to i8, !dbg !19015
  call void %91(%struct.hfc_multi* %92, i8 zeroext 16, i8 zeroext %conv127) #12, !dbg !19015
  %94 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19016
  %HFC_outb128 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %94, i32 0, i32 10, !dbg !19016
  %95 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb128, align 8, !dbg !19016
  %96 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19016
  %97 = load i32, i32* %ch.addr, align 4, !dbg !19016
  %shl129 = shl i32 %97, 1, !dbg !19016
  %98 = load i32, i32* %routing, align 4, !dbg !19016
  %or130 = or i32 %shl129, %98, !dbg !19016
  %conv131 = trunc i32 %or130 to i8, !dbg !19016
  call void %95(%struct.hfc_multi* %96, i8 zeroext -48, i8 zeroext %conv131) #12, !dbg !19016
  %99 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19017
  %ctype132 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %99, i32 0, i32 4, !dbg !19019
  %100 = load i32, i32* %ctype132, align 8, !dbg !19019
  %cmp133 = icmp ne i32 %100, 5, !dbg !19020
  br i1 %cmp133, label %if.then135, label %if.end142, !dbg !19021

if.then135:                                       ; preds = %if.end124
  %101 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19022
  %HFC_outb136 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %101, i32 0, i32 10, !dbg !19022
  %102 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb136, align 8, !dbg !19022
  %103 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19022
  %104 = load i32, i32* %conf, align 4, !dbg !19022
  %cmp137 = icmp slt i32 %104, 0, !dbg !19022
  br i1 %cmp137, label %cond.true, label %cond.false, !dbg !19022

cond.true:                                        ; preds = %if.then135
  br label %cond.end, !dbg !19022

cond.false:                                       ; preds = %if.then135
  %105 = load i32, i32* %conf, align 4, !dbg !19022
  %or139 = or i32 %105, 128, !dbg !19022
  br label %cond.end, !dbg !19022

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond140 = phi i32 [ 0, %cond.true ], [ %or139, %cond.false ], !dbg !19022
  %conv141 = trunc i32 %cond140 to i8, !dbg !19022
  call void %102(%struct.hfc_multi* %103, i8 zeroext -47, i8 zeroext %conv141) #12, !dbg !19022
  br label %if.end142, !dbg !19022

if.end142:                                        ; preds = %cond.end, %if.end124
  %106 = load i32, i32* %ch.addr, align 4, !dbg !19023
  %conv143 = trunc i32 %106 to i8, !dbg !19023
  %107 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19024
  %slot_owner144 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %107, i32 0, i32 61, !dbg !19025
  %108 = load i32, i32* %slot_tx.addr, align 4, !dbg !19026
  %shl145 = shl i32 %108, 1, !dbg !19027
  %idxprom146 = sext i32 %shl145 to i64, !dbg !19024
  %arrayidx147 = getelementptr [256 x i8], [256 x i8]* %slot_owner144, i64 0, i64 %idxprom146, !dbg !19024
  store i8 %conv143, i8* %arrayidx147, align 1, !dbg !19028
  %109 = load i32, i32* %slot_tx.addr, align 4, !dbg !19029
  %110 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19030
  %chan148 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %110, i32 0, i32 60, !dbg !19031
  %111 = load i32, i32* %ch.addr, align 4, !dbg !19032
  %idxprom149 = sext i32 %111 to i64, !dbg !19030
  %arrayidx150 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan148, i64 0, i64 %idxprom149, !dbg !19030
  %slot_tx151 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx150, i32 0, i32 13, !dbg !19033
  store i32 %109, i32* %slot_tx151, align 8, !dbg !19034
  %112 = load i32, i32* %bank_tx.addr, align 4, !dbg !19035
  %113 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19036
  %chan152 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %113, i32 0, i32 60, !dbg !19037
  %114 = load i32, i32* %ch.addr, align 4, !dbg !19038
  %idxprom153 = sext i32 %114 to i64, !dbg !19036
  %arrayidx154 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan152, i64 0, i64 %idxprom153, !dbg !19036
  %bank_tx155 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx154, i32 0, i32 14, !dbg !19039
  store i32 %112, i32* %bank_tx155, align 4, !dbg !19040
  br label %if.end156

if.end156:                                        ; preds = %if.end142, %if.then95
  %115 = load i32, i32* %slot_rx.addr, align 4, !dbg !19041
  %cmp157 = icmp slt i32 %115, 0, !dbg !19043
  br i1 %cmp157, label %if.then159, label %if.else168, !dbg !19044

if.then159:                                       ; preds = %if.end156
  store i32 128, i32* %flow_rx, align 4, !dbg !19045
  %116 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19047
  %chan160 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %116, i32 0, i32 60, !dbg !19048
  %117 = load i32, i32* %ch.addr, align 4, !dbg !19049
  %idxprom161 = sext i32 %117 to i64, !dbg !19047
  %arrayidx162 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan160, i64 0, i64 %idxprom161, !dbg !19047
  %slot_rx163 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx162, i32 0, i32 15, !dbg !19050
  store i32 -1, i32* %slot_rx163, align 8, !dbg !19051
  %118 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19052
  %chan164 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %118, i32 0, i32 60, !dbg !19053
  %119 = load i32, i32* %ch.addr, align 4, !dbg !19054
  %idxprom165 = sext i32 %119 to i64, !dbg !19052
  %arrayidx166 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan164, i64 0, i64 %idxprom165, !dbg !19052
  %bank_rx167 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx166, i32 0, i32 16, !dbg !19055
  store i32 0, i32* %bank_rx167, align 4, !dbg !19056
  br label %if.end214, !dbg !19057

if.else168:                                       ; preds = %if.end156
  %120 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19058
  %chan169 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %120, i32 0, i32 60, !dbg !19061
  %121 = load i32, i32* %ch.addr, align 4, !dbg !19062
  %idxprom170 = sext i32 %121 to i64, !dbg !19058
  %arrayidx171 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan169, i64 0, i64 %idxprom170, !dbg !19058
  %txpending172 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx171, i32 0, i32 18, !dbg !19063
  %122 = load i32, i32* %txpending172, align 4, !dbg !19063
  %tobool173 = icmp ne i32 %122, 0, !dbg !19058
  br i1 %tobool173, label %if.then174, label %if.else175, !dbg !19064

if.then174:                                       ; preds = %if.else168
  store i32 128, i32* %flow_rx, align 4, !dbg !19065
  br label %if.end176, !dbg !19066

if.else175:                                       ; preds = %if.else168
  store i32 192, i32* %flow_rx, align 4, !dbg !19067
  br label %if.end176

if.end176:                                        ; preds = %if.else175, %if.then174
  %123 = load i32, i32* %bank_rx.addr, align 4, !dbg !19068
  %tobool177 = icmp ne i32 %123, 0, !dbg !19068
  %124 = zext i1 %tobool177 to i64, !dbg !19068
  %cond178 = select i1 %tobool177, i32 128, i32 192, !dbg !19068
  store i32 %cond178, i32* %routing, align 4, !dbg !19069
  %125 = load i32, i32* %conf, align 4, !dbg !19070
  %cmp179 = icmp sge i32 %125, 0, !dbg !19072
  br i1 %cmp179, label %if.then184, label %lor.lhs.false181, !dbg !19073

lor.lhs.false181:                                 ; preds = %if.end176
  %126 = load i32, i32* %bank_rx.addr, align 4, !dbg !19074
  %cmp182 = icmp sgt i32 %126, 1, !dbg !19075
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !19076

if.then184:                                       ; preds = %lor.lhs.false181, %if.end176
  store i32 64, i32* %routing, align 4, !dbg !19077
  br label %if.end185, !dbg !19078

if.end185:                                        ; preds = %if.then184, %lor.lhs.false181
  %127 = load i32, i32* @debug, align 4, !dbg !19079
  %and186 = and i32 %127, 1048576, !dbg !19081
  %tobool187 = icmp ne i32 %and186, 0, !dbg !19081
  br i1 %tobool187, label %if.then188, label %if.end190, !dbg !19082

if.then188:                                       ; preds = %if.end185
  %128 = load i32, i32* %ch.addr, align 4, !dbg !19083
  %129 = load i32, i32* %slot_rx.addr, align 4, !dbg !19084
  %130 = load i32, i32* %bank_rx.addr, align 4, !dbg !19085
  %131 = load i32, i32* %flow_rx, align 4, !dbg !19086
  %132 = load i32, i32* %routing, align 4, !dbg !19087
  %133 = load i32, i32* %conf, align 4, !dbg !19088
  %call189 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.mode_hfcmulti, i64 0, i64 0), i32 %128, i32 %129, i32 %130, i32 %131, i32 %132, i32 %133) #13, !dbg !19089
  br label %if.end190, !dbg !19089

if.end190:                                        ; preds = %if.then188, %if.end185
  %134 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19090
  %HFC_outb191 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %134, i32 0, i32 10, !dbg !19090
  %135 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb191, align 8, !dbg !19090
  %136 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19090
  %137 = load i32, i32* %slot_rx.addr, align 4, !dbg !19090
  %shl192 = shl i32 %137, 1, !dbg !19090
  %or193 = or i32 %shl192, 1, !dbg !19090
  %conv194 = trunc i32 %or193 to i8, !dbg !19090
  call void %135(%struct.hfc_multi* %136, i8 zeroext 16, i8 zeroext %conv194) #12, !dbg !19090
  %138 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19091
  %HFC_outb195 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %138, i32 0, i32 10, !dbg !19091
  %139 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb195, align 8, !dbg !19091
  %140 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19091
  %141 = load i32, i32* %ch.addr, align 4, !dbg !19091
  %shl196 = shl i32 %141, 1, !dbg !19091
  %or197 = or i32 %shl196, 1, !dbg !19091
  %142 = load i32, i32* %routing, align 4, !dbg !19091
  %or198 = or i32 %or197, %142, !dbg !19091
  %conv199 = trunc i32 %or198 to i8, !dbg !19091
  call void %139(%struct.hfc_multi* %140, i8 zeroext -48, i8 zeroext %conv199) #12, !dbg !19091
  %143 = load i32, i32* %ch.addr, align 4, !dbg !19092
  %conv200 = trunc i32 %143 to i8, !dbg !19092
  %144 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19093
  %slot_owner201 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %144, i32 0, i32 61, !dbg !19094
  %145 = load i32, i32* %slot_rx.addr, align 4, !dbg !19095
  %shl202 = shl i32 %145, 1, !dbg !19096
  %or203 = or i32 %shl202, 1, !dbg !19097
  %idxprom204 = sext i32 %or203 to i64, !dbg !19093
  %arrayidx205 = getelementptr [256 x i8], [256 x i8]* %slot_owner201, i64 0, i64 %idxprom204, !dbg !19093
  store i8 %conv200, i8* %arrayidx205, align 1, !dbg !19098
  %146 = load i32, i32* %slot_rx.addr, align 4, !dbg !19099
  %147 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19100
  %chan206 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %147, i32 0, i32 60, !dbg !19101
  %148 = load i32, i32* %ch.addr, align 4, !dbg !19102
  %idxprom207 = sext i32 %148 to i64, !dbg !19100
  %arrayidx208 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan206, i64 0, i64 %idxprom207, !dbg !19100
  %slot_rx209 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx208, i32 0, i32 15, !dbg !19103
  store i32 %146, i32* %slot_rx209, align 8, !dbg !19104
  %149 = load i32, i32* %bank_rx.addr, align 4, !dbg !19105
  %150 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19106
  %chan210 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %150, i32 0, i32 60, !dbg !19107
  %151 = load i32, i32* %ch.addr, align 4, !dbg !19108
  %idxprom211 = sext i32 %151 to i64, !dbg !19106
  %arrayidx212 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan210, i64 0, i64 %idxprom211, !dbg !19106
  %bank_rx213 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx212, i32 0, i32 16, !dbg !19109
  store i32 %149, i32* %bank_rx213, align 4, !dbg !19110
  br label %if.end214

if.end214:                                        ; preds = %if.end190, %if.then159
  %152 = load i32, i32* %protocol.addr, align 4, !dbg !19111
  switch i32 %152, label %sw.default [
    i32 0, label %sw.bb
    i32 33, label %sw.bb291
    i32 34, label %sw.bb535
    i32 1, label %sw.bb535
    i32 2, label %sw.bb535
    i32 3, label %sw.bb535
    i32 4, label %sw.bb535
  ], !dbg !19112

sw.bb:                                            ; preds = %if.end214
  %153 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19113
  %HFC_outb215 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %153, i32 0, i32 10, !dbg !19113
  %154 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb215, align 8, !dbg !19113
  %155 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19113
  %156 = load i32, i32* %ch.addr, align 4, !dbg !19113
  %shl216 = shl i32 %156, 1, !dbg !19113
  %conv217 = trunc i32 %shl216 to i8, !dbg !19113
  call void %154(%struct.hfc_multi* %155, i8 zeroext 15, i8 zeroext %conv217) #12, !dbg !19113
  %157 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19115
  %HFC_wait = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %157, i32 0, i32 16, !dbg !19115
  %158 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait, align 8, !dbg !19115
  %159 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19115
  call void %158(%struct.hfc_multi* %159) #12, !dbg !19115
  %160 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19116
  %HFC_outb218 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %160, i32 0, i32 10, !dbg !19116
  %161 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb218, align 8, !dbg !19116
  %162 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19116
  %163 = load i32, i32* %flow_tx, align 4, !dbg !19116
  %or219 = or i32 %163, 1, !dbg !19116
  %conv220 = trunc i32 %or219 to i8, !dbg !19116
  call void %161(%struct.hfc_multi* %162, i8 zeroext -6, i8 zeroext %conv220) #12, !dbg !19116
  %164 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19117
  %HFC_outb221 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %164, i32 0, i32 10, !dbg !19117
  %165 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb221, align 8, !dbg !19117
  %166 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19117
  call void %165(%struct.hfc_multi* %166, i8 zeroext -5, i8 zeroext 0) #12, !dbg !19117
  %167 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19118
  %HFC_outb222 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %167, i32 0, i32 10, !dbg !19118
  %168 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb222, align 8, !dbg !19118
  %169 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19118
  call void %168(%struct.hfc_multi* %169, i8 zeroext -1, i8 zeroext 0) #12, !dbg !19118
  %170 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19119
  %HFC_outb223 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %170, i32 0, i32 10, !dbg !19119
  %171 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb223, align 8, !dbg !19119
  %172 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19119
  call void %171(%struct.hfc_multi* %172, i8 zeroext 14, i8 zeroext 2) #12, !dbg !19119
  %173 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19120
  %HFC_wait224 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %173, i32 0, i32 16, !dbg !19120
  %174 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait224, align 8, !dbg !19120
  %175 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19120
  call void %174(%struct.hfc_multi* %175) #12, !dbg !19120
  %176 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19121
  %HFC_outb225 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %176, i32 0, i32 10, !dbg !19121
  %177 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb225, align 8, !dbg !19121
  %178 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19121
  %179 = load i32, i32* %ch.addr, align 4, !dbg !19121
  %shl226 = shl i32 %179, 1, !dbg !19121
  %or227 = or i32 %shl226, 1, !dbg !19121
  %conv228 = trunc i32 %or227 to i8, !dbg !19121
  call void %177(%struct.hfc_multi* %178, i8 zeroext 15, i8 zeroext %conv228) #12, !dbg !19121
  %180 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19122
  %HFC_wait229 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %180, i32 0, i32 16, !dbg !19122
  %181 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait229, align 8, !dbg !19122
  %182 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19122
  call void %181(%struct.hfc_multi* %182) #12, !dbg !19122
  %183 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19123
  %HFC_outb230 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %183, i32 0, i32 10, !dbg !19123
  %184 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb230, align 8, !dbg !19123
  %185 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19123
  %186 = load i32, i32* %flow_rx, align 4, !dbg !19123
  %conv231 = trunc i32 %186 to i8, !dbg !19123
  call void %184(%struct.hfc_multi* %185, i8 zeroext -6, i8 zeroext %conv231) #12, !dbg !19123
  %187 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19124
  %HFC_outb232 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %187, i32 0, i32 10, !dbg !19124
  %188 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb232, align 8, !dbg !19124
  %189 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19124
  call void %188(%struct.hfc_multi* %189, i8 zeroext -5, i8 zeroext 0) #12, !dbg !19124
  %190 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19125
  %HFC_outb233 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %190, i32 0, i32 10, !dbg !19125
  %191 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb233, align 8, !dbg !19125
  %192 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19125
  call void %191(%struct.hfc_multi* %192, i8 zeroext -1, i8 zeroext 0) #12, !dbg !19125
  %193 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19126
  %HFC_outb234 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %193, i32 0, i32 10, !dbg !19126
  %194 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb234, align 8, !dbg !19126
  %195 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19126
  call void %194(%struct.hfc_multi* %195, i8 zeroext 14, i8 zeroext 2) #12, !dbg !19126
  %196 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19127
  %HFC_wait235 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %196, i32 0, i32 16, !dbg !19127
  %197 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait235, align 8, !dbg !19127
  %198 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19127
  call void %197(%struct.hfc_multi* %198) #12, !dbg !19127
  %199 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19128
  %chan236 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %199, i32 0, i32 60, !dbg !19130
  %200 = load i32, i32* %ch.addr, align 4, !dbg !19131
  %idxprom237 = sext i32 %200 to i64, !dbg !19128
  %arrayidx238 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan236, i64 0, i64 %idxprom237, !dbg !19128
  %bch = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx238, i32 0, i32 1, !dbg !19132
  %201 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !19132
  %tobool239 = icmp ne %struct.bchannel* %201, null, !dbg !19128
  br i1 %tobool239, label %land.lhs.true240, label %if.end272, !dbg !19133

land.lhs.true240:                                 ; preds = %sw.bb
  %202 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19134
  %ctype241 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %202, i32 0, i32 4, !dbg !19135
  %203 = load i32, i32* %ctype241, align 8, !dbg !19135
  %cmp242 = icmp ne i32 %203, 1, !dbg !19136
  br i1 %cmp242, label %if.then244, label %if.end272, !dbg !19137

if.then244:                                       ; preds = %land.lhs.true240
  %204 = load i32, i32* %ch.addr, align 4, !dbg !19138
  %and245 = and i32 %204, 3, !dbg !19140
  %cmp246 = icmp eq i32 %and245, 0, !dbg !19141
  %205 = zext i1 %cmp246 to i64, !dbg !19142
  %cond248 = select i1 %cmp246, i32 -2, i32 -3, !dbg !19142
  %206 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19143
  %hw = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %206, i32 0, i32 30, !dbg !19144
  %a_st_ctrl0 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw, i32 0, i32 11, !dbg !19145
  %207 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19146
  %chan249 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %207, i32 0, i32 60, !dbg !19147
  %208 = load i32, i32* %ch.addr, align 4, !dbg !19148
  %idxprom250 = sext i32 %208 to i64, !dbg !19146
  %arrayidx251 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan249, i64 0, i64 %idxprom250, !dbg !19146
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx251, i32 0, i32 2, !dbg !19149
  %209 = load i32, i32* %port, align 8, !dbg !19149
  %idxprom252 = sext i32 %209 to i64, !dbg !19143
  %arrayidx253 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0, i64 0, i64 %idxprom252, !dbg !19143
  %210 = load i8, i8* %arrayidx253, align 1, !dbg !19150
  %conv254 = zext i8 %210 to i32, !dbg !19150
  %and255 = and i32 %conv254, %cond248, !dbg !19150
  %conv256 = trunc i32 %and255 to i8, !dbg !19150
  store i8 %conv256, i8* %arrayidx253, align 1, !dbg !19150
  %211 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19151
  %HFC_outb257 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %211, i32 0, i32 10, !dbg !19151
  %212 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb257, align 8, !dbg !19151
  %213 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19151
  %214 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19151
  %chan258 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %214, i32 0, i32 60, !dbg !19151
  %215 = load i32, i32* %ch.addr, align 4, !dbg !19151
  %idxprom259 = sext i32 %215 to i64, !dbg !19151
  %arrayidx260 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan258, i64 0, i64 %idxprom259, !dbg !19151
  %port261 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx260, i32 0, i32 2, !dbg !19151
  %216 = load i32, i32* %port261, align 8, !dbg !19151
  %conv262 = trunc i32 %216 to i8, !dbg !19151
  call void %212(%struct.hfc_multi* %213, i8 zeroext 22, i8 zeroext %conv262) #12, !dbg !19151
  call void @__const_udelay(i64 4295) #12, !dbg !19152
  %217 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19157
  %HFC_outb263 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %217, i32 0, i32 10, !dbg !19157
  %218 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb263, align 8, !dbg !19157
  %219 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19157
  %220 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19157
  %hw264 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %220, i32 0, i32 30, !dbg !19157
  %a_st_ctrl0265 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw264, i32 0, i32 11, !dbg !19157
  %221 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19157
  %chan266 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %221, i32 0, i32 60, !dbg !19157
  %222 = load i32, i32* %ch.addr, align 4, !dbg !19157
  %idxprom267 = sext i32 %222 to i64, !dbg !19157
  %arrayidx268 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan266, i64 0, i64 %idxprom267, !dbg !19157
  %port269 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx268, i32 0, i32 2, !dbg !19157
  %223 = load i32, i32* %port269, align 8, !dbg !19157
  %idxprom270 = sext i32 %223 to i64, !dbg !19157
  %arrayidx271 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0265, i64 0, i64 %idxprom270, !dbg !19157
  %224 = load i8, i8* %arrayidx271, align 1, !dbg !19157
  call void %218(%struct.hfc_multi* %219, i8 zeroext 49, i8 zeroext %224) #12, !dbg !19157
  br label %if.end272, !dbg !19158

if.end272:                                        ; preds = %if.then244, %land.lhs.true240, %sw.bb
  %225 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19159
  %chan273 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %225, i32 0, i32 60, !dbg !19161
  %226 = load i32, i32* %ch.addr, align 4, !dbg !19162
  %idxprom274 = sext i32 %226 to i64, !dbg !19159
  %arrayidx275 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan273, i64 0, i64 %idxprom274, !dbg !19159
  %bch276 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx275, i32 0, i32 1, !dbg !19163
  %227 = load %struct.bchannel*, %struct.bchannel** %bch276, align 8, !dbg !19163
  %tobool277 = icmp ne %struct.bchannel* %227, null, !dbg !19159
  br i1 %tobool277, label %if.then278, label %if.end290, !dbg !19164

if.then278:                                       ; preds = %if.end272
  %228 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19165
  %chan279 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %228, i32 0, i32 60, !dbg !19167
  %229 = load i32, i32* %ch.addr, align 4, !dbg !19168
  %idxprom280 = sext i32 %229 to i64, !dbg !19165
  %arrayidx281 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan279, i64 0, i64 %idxprom280, !dbg !19165
  %bch282 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx281, i32 0, i32 1, !dbg !19169
  %230 = load %struct.bchannel*, %struct.bchannel** %bch282, align 8, !dbg !19169
  %Flags = getelementptr inbounds %struct.bchannel, %struct.bchannel* %230, i32 0, i32 2, !dbg !19170
  %call283 = call zeroext i1 @test_and_clear_bit(i64 13, i64* %Flags) #12, !dbg !19171
  %231 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19172
  %chan284 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %231, i32 0, i32 60, !dbg !19173
  %232 = load i32, i32* %ch.addr, align 4, !dbg !19174
  %idxprom285 = sext i32 %232 to i64, !dbg !19172
  %arrayidx286 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan284, i64 0, i64 %idxprom285, !dbg !19172
  %bch287 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx286, i32 0, i32 1, !dbg !19175
  %233 = load %struct.bchannel*, %struct.bchannel** %bch287, align 8, !dbg !19175
  %Flags288 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %233, i32 0, i32 2, !dbg !19176
  %call289 = call zeroext i1 @test_and_clear_bit(i64 12, i64* %Flags288) #12, !dbg !19177
  br label %if.end290, !dbg !19178

if.end290:                                        ; preds = %if.then278, %if.end272
  br label %sw.epilog, !dbg !19179

sw.bb291:                                         ; preds = %if.end214
  %234 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19180
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %234, i32 0, i32 31, !dbg !19182
  %call292 = call zeroext i1 @test_bit(i64 13, i64* %chip) #12, !dbg !19183
  br i1 %call292, label %land.lhs.true294, label %if.else422, !dbg !19184

land.lhs.true294:                                 ; preds = %sw.bb291
  %235 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19185
  %chan295 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %235, i32 0, i32 60, !dbg !19186
  %236 = load i32, i32* %ch.addr, align 4, !dbg !19187
  %idxprom296 = sext i32 %236 to i64, !dbg !19185
  %arrayidx297 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan295, i64 0, i64 %idxprom296, !dbg !19185
  %slot_rx298 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx297, i32 0, i32 15, !dbg !19188
  %237 = load i32, i32* %slot_rx298, align 8, !dbg !19188
  %cmp299 = icmp slt i32 %237, 0, !dbg !19189
  br i1 %cmp299, label %land.lhs.true301, label %if.else422, !dbg !19190

land.lhs.true301:                                 ; preds = %land.lhs.true294
  %238 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19191
  %chan302 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %238, i32 0, i32 60, !dbg !19192
  %239 = load i32, i32* %ch.addr, align 4, !dbg !19193
  %idxprom303 = sext i32 %239 to i64, !dbg !19191
  %arrayidx304 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan302, i64 0, i64 %idxprom303, !dbg !19191
  %slot_tx305 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx304, i32 0, i32 13, !dbg !19194
  %240 = load i32, i32* %slot_tx305, align 8, !dbg !19194
  %cmp306 = icmp slt i32 %240, 0, !dbg !19195
  br i1 %cmp306, label %if.then308, label %if.else422, !dbg !19196

if.then308:                                       ; preds = %land.lhs.true301
  %241 = load i32, i32* %ch.addr, align 4, !dbg !19197
  %242 = load i32, i32* %ch.addr, align 4, !dbg !19199
  %div = sdiv i32 %242, 4, !dbg !19200
  %mul = mul i32 %div, 8, !dbg !19201
  %243 = load i32, i32* %ch.addr, align 4, !dbg !19202
  %rem = srem i32 %243, 4, !dbg !19203
  %mul309 = mul i32 %rem, 4, !dbg !19204
  %add = add i32 %mul, %mul309, !dbg !19205
  %add310 = add i32 %add, 1, !dbg !19206
  %call311 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.150, i64 0, i64 0), i32 %241, i32 %add310) #13, !dbg !19207
  %call312 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.151, i64 0, i64 0)) #13, !dbg !19208
  %244 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19209
  %245 = load i32, i32* %ch.addr, align 4, !dbg !19210
  %246 = load i32, i32* %ch.addr, align 4, !dbg !19211
  %div313 = sdiv i32 %246, 4, !dbg !19212
  %mul314 = mul i32 %div313, 8, !dbg !19213
  %247 = load i32, i32* %ch.addr, align 4, !dbg !19214
  %rem315 = srem i32 %247, 4, !dbg !19215
  %mul316 = mul i32 %rem315, 4, !dbg !19216
  %add317 = add i32 %mul314, %mul316, !dbg !19217
  %add318 = add i32 %add317, 1, !dbg !19218
  %conv319 = trunc i32 %add318 to i16, !dbg !19219
  call void @vpm_out(%struct.hfc_multi* %244, i32 %245, i16 zeroext %conv319, i8 zeroext 1) #12, !dbg !19220
  %248 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19221
  %HFC_outb320 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %248, i32 0, i32 10, !dbg !19221
  %249 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb320, align 8, !dbg !19221
  %250 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19221
  %251 = load i32, i32* %ch.addr, align 4, !dbg !19221
  %shl321 = shl i32 %251, 1, !dbg !19221
  %conv322 = trunc i32 %shl321 to i8, !dbg !19221
  call void %249(%struct.hfc_multi* %250, i8 zeroext 15, i8 zeroext %conv322) #12, !dbg !19221
  %252 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19222
  %HFC_wait323 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %252, i32 0, i32 16, !dbg !19222
  %253 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait323, align 8, !dbg !19222
  %254 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19222
  call void %253(%struct.hfc_multi* %254) #12, !dbg !19222
  %255 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19223
  %HFC_outb324 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %255, i32 0, i32 10, !dbg !19223
  %256 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb324, align 8, !dbg !19223
  %257 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19223
  call void %256(%struct.hfc_multi* %257, i8 zeroext -6, i8 zeroext -61) #12, !dbg !19223
  %258 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19224
  %HFC_outb325 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %258, i32 0, i32 10, !dbg !19224
  %259 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb325, align 8, !dbg !19224
  %260 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19224
  %261 = load i32, i32* %ch.addr, align 4, !dbg !19224
  %div326 = sdiv i32 %261, 4, !dbg !19224
  %mul327 = mul i32 %div326, 8, !dbg !19224
  %262 = load i32, i32* %ch.addr, align 4, !dbg !19224
  %rem328 = srem i32 %262, 4, !dbg !19224
  %mul329 = mul i32 %rem328, 4, !dbg !19224
  %add330 = add i32 %mul327, %mul329, !dbg !19224
  %add331 = add i32 %add330, 1, !dbg !19224
  %shl332 = shl i32 %add331, 1, !dbg !19224
  %conv333 = trunc i32 %shl332 to i8, !dbg !19224
  call void %259(%struct.hfc_multi* %260, i8 zeroext 16, i8 zeroext %conv333) #12, !dbg !19224
  %263 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19225
  %HFC_outb334 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %263, i32 0, i32 10, !dbg !19225
  %264 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb334, align 8, !dbg !19225
  %265 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19225
  %266 = load i32, i32* %ch.addr, align 4, !dbg !19225
  %shl335 = shl i32 %266, 1, !dbg !19225
  %or336 = or i32 128, %shl335, !dbg !19225
  %conv337 = trunc i32 %or336 to i8, !dbg !19225
  call void %264(%struct.hfc_multi* %265, i8 zeroext -48, i8 zeroext %conv337) #12, !dbg !19225
  %267 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19226
  %HFC_outb338 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %267, i32 0, i32 10, !dbg !19226
  %268 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb338, align 8, !dbg !19226
  %269 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19226
  %270 = load i32, i32* %ch.addr, align 4, !dbg !19226
  %shl339 = shl i32 %270, 1, !dbg !19226
  %or340 = or i32 32, %shl339, !dbg !19226
  %or341 = or i32 %or340, 1, !dbg !19226
  %conv342 = trunc i32 %or341 to i8, !dbg !19226
  call void %268(%struct.hfc_multi* %269, i8 zeroext 15, i8 zeroext %conv342) #12, !dbg !19226
  %271 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19227
  %HFC_wait343 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %271, i32 0, i32 16, !dbg !19227
  %272 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait343, align 8, !dbg !19227
  %273 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19227
  call void %272(%struct.hfc_multi* %273) #12, !dbg !19227
  %274 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19228
  %HFC_outb344 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %274, i32 0, i32 10, !dbg !19228
  %275 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb344, align 8, !dbg !19228
  %276 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19228
  call void %275(%struct.hfc_multi* %276, i8 zeroext -6, i8 zeroext 35) #12, !dbg !19228
  %277 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19229
  %HFC_outb345 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %277, i32 0, i32 10, !dbg !19229
  %278 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb345, align 8, !dbg !19229
  %279 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19229
  call void %278(%struct.hfc_multi* %279, i8 zeroext -5, i8 zeroext 0) #12, !dbg !19229
  %280 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19230
  %HFC_outb346 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %280, i32 0, i32 10, !dbg !19230
  %281 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb346, align 8, !dbg !19230
  %282 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19230
  call void %281(%struct.hfc_multi* %282, i8 zeroext -1, i8 zeroext 0) #12, !dbg !19230
  %283 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19231
  %chan347 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %283, i32 0, i32 60, !dbg !19233
  %284 = load i32, i32* %ch.addr, align 4, !dbg !19234
  %idxprom348 = sext i32 %284 to i64, !dbg !19231
  %arrayidx349 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan347, i64 0, i64 %idxprom348, !dbg !19231
  %protocol350 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx349, i32 0, i32 12, !dbg !19235
  %285 = load i32, i32* %protocol350, align 4, !dbg !19235
  %286 = load i32, i32* %protocol.addr, align 4, !dbg !19236
  %cmp351 = icmp ne i32 %285, %286, !dbg !19237
  br i1 %cmp351, label %if.then353, label %if.end356, !dbg !19238

if.then353:                                       ; preds = %if.then308
  %287 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19239
  %HFC_outb354 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %287, i32 0, i32 10, !dbg !19239
  %288 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb354, align 8, !dbg !19239
  %289 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19239
  call void %288(%struct.hfc_multi* %289, i8 zeroext 14, i8 zeroext 2) #12, !dbg !19239
  %290 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19241
  %HFC_wait355 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %290, i32 0, i32 16, !dbg !19241
  %291 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait355, align 8, !dbg !19241
  %292 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19241
  call void %291(%struct.hfc_multi* %292) #12, !dbg !19241
  br label %if.end356, !dbg !19242

if.end356:                                        ; preds = %if.then353, %if.then308
  %293 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19243
  %HFC_outb357 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %293, i32 0, i32 10, !dbg !19243
  %294 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb357, align 8, !dbg !19243
  %295 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19243
  %296 = load i32, i32* %ch.addr, align 4, !dbg !19243
  %div358 = sdiv i32 %296, 4, !dbg !19243
  %mul359 = mul i32 %div358, 8, !dbg !19243
  %297 = load i32, i32* %ch.addr, align 4, !dbg !19243
  %rem360 = srem i32 %297, 4, !dbg !19243
  %mul361 = mul i32 %rem360, 4, !dbg !19243
  %add362 = add i32 %mul359, %mul361, !dbg !19243
  %add363 = add i32 %add362, 1, !dbg !19243
  %shl364 = shl i32 %add363, 1, !dbg !19243
  %or365 = or i32 %shl364, 1, !dbg !19243
  %conv366 = trunc i32 %or365 to i8, !dbg !19243
  call void %294(%struct.hfc_multi* %295, i8 zeroext 16, i8 zeroext %conv366) #12, !dbg !19243
  %298 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19244
  %HFC_outb367 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %298, i32 0, i32 10, !dbg !19244
  %299 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb367, align 8, !dbg !19244
  %300 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19244
  %301 = load i32, i32* %ch.addr, align 4, !dbg !19244
  %shl368 = shl i32 %301, 1, !dbg !19244
  %or369 = or i32 160, %shl368, !dbg !19244
  %or370 = or i32 %or369, 1, !dbg !19244
  %conv371 = trunc i32 %or370 to i8, !dbg !19244
  call void %299(%struct.hfc_multi* %300, i8 zeroext -48, i8 zeroext %conv371) #12, !dbg !19244
  %302 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19245
  %HFC_outb372 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %302, i32 0, i32 10, !dbg !19245
  %303 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb372, align 8, !dbg !19245
  %304 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19245
  %305 = load i32, i32* %ch.addr, align 4, !dbg !19245
  %shl373 = shl i32 %305, 1, !dbg !19245
  %or374 = or i32 %shl373, 1, !dbg !19245
  %conv375 = trunc i32 %or374 to i8, !dbg !19245
  call void %303(%struct.hfc_multi* %304, i8 zeroext 15, i8 zeroext %conv375) #12, !dbg !19245
  %306 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19246
  %HFC_wait376 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %306, i32 0, i32 16, !dbg !19246
  %307 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait376, align 8, !dbg !19246
  %308 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19246
  call void %307(%struct.hfc_multi* %308) #12, !dbg !19246
  %309 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19247
  %HFC_outb377 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %309, i32 0, i32 10, !dbg !19247
  %310 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb377, align 8, !dbg !19247
  %311 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19247
  call void %310(%struct.hfc_multi* %311, i8 zeroext -6, i8 zeroext -61) #12, !dbg !19247
  %312 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19248
  %HFC_outb378 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %312, i32 0, i32 10, !dbg !19248
  %313 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb378, align 8, !dbg !19248
  %314 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19248
  %315 = load i32, i32* %ch.addr, align 4, !dbg !19248
  %div379 = sdiv i32 %315, 4, !dbg !19248
  %mul380 = mul i32 %div379, 8, !dbg !19248
  %316 = load i32, i32* %ch.addr, align 4, !dbg !19248
  %rem381 = srem i32 %316, 4, !dbg !19248
  %mul382 = mul i32 %rem381, 4, !dbg !19248
  %add383 = add i32 %mul380, %mul382, !dbg !19248
  %shl384 = shl i32 %add383, 1, !dbg !19248
  %or385 = or i32 %shl384, 1, !dbg !19248
  %conv386 = trunc i32 %or385 to i8, !dbg !19248
  call void %313(%struct.hfc_multi* %314, i8 zeroext 16, i8 zeroext %conv386) #12, !dbg !19248
  %317 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19249
  %HFC_outb387 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %317, i32 0, i32 10, !dbg !19249
  %318 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb387, align 8, !dbg !19249
  %319 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19249
  %320 = load i32, i32* %ch.addr, align 4, !dbg !19249
  %shl388 = shl i32 %320, 1, !dbg !19249
  %or389 = or i32 192, %shl388, !dbg !19249
  %or390 = or i32 %or389, 1, !dbg !19249
  %conv391 = trunc i32 %or390 to i8, !dbg !19249
  call void %318(%struct.hfc_multi* %319, i8 zeroext -48, i8 zeroext %conv391) #12, !dbg !19249
  %321 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19250
  %HFC_outb392 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %321, i32 0, i32 10, !dbg !19250
  %322 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb392, align 8, !dbg !19250
  %323 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19250
  %324 = load i32, i32* %ch.addr, align 4, !dbg !19250
  %shl393 = shl i32 %324, 1, !dbg !19250
  %or394 = or i32 32, %shl393, !dbg !19250
  %conv395 = trunc i32 %or394 to i8, !dbg !19250
  call void %322(%struct.hfc_multi* %323, i8 zeroext 15, i8 zeroext %conv395) #12, !dbg !19250
  %325 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19251
  %HFC_wait396 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %325, i32 0, i32 16, !dbg !19251
  %326 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait396, align 8, !dbg !19251
  %327 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19251
  call void %326(%struct.hfc_multi* %327) #12, !dbg !19251
  %328 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19252
  %HFC_outb397 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %328, i32 0, i32 10, !dbg !19252
  %329 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb397, align 8, !dbg !19252
  %330 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19252
  call void %329(%struct.hfc_multi* %330, i8 zeroext -6, i8 zeroext 35) #12, !dbg !19252
  %331 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19253
  %HFC_outb398 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %331, i32 0, i32 10, !dbg !19253
  %332 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb398, align 8, !dbg !19253
  %333 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19253
  call void %332(%struct.hfc_multi* %333, i8 zeroext -5, i8 zeroext 0) #12, !dbg !19253
  %334 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19254
  %HFC_outb399 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %334, i32 0, i32 10, !dbg !19254
  %335 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb399, align 8, !dbg !19254
  %336 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19254
  call void %335(%struct.hfc_multi* %336, i8 zeroext -1, i8 zeroext 0) #12, !dbg !19254
  %337 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19255
  %chan400 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %337, i32 0, i32 60, !dbg !19257
  %338 = load i32, i32* %ch.addr, align 4, !dbg !19258
  %idxprom401 = sext i32 %338 to i64, !dbg !19255
  %arrayidx402 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan400, i64 0, i64 %idxprom401, !dbg !19255
  %protocol403 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx402, i32 0, i32 12, !dbg !19259
  %339 = load i32, i32* %protocol403, align 4, !dbg !19259
  %340 = load i32, i32* %protocol.addr, align 4, !dbg !19260
  %cmp404 = icmp ne i32 %339, %340, !dbg !19261
  br i1 %cmp404, label %if.then406, label %if.end409, !dbg !19262

if.then406:                                       ; preds = %if.end356
  %341 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19263
  %HFC_outb407 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %341, i32 0, i32 10, !dbg !19263
  %342 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb407, align 8, !dbg !19263
  %343 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19263
  call void %342(%struct.hfc_multi* %343, i8 zeroext 14, i8 zeroext 2) #12, !dbg !19263
  %344 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19265
  %HFC_wait408 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %344, i32 0, i32 16, !dbg !19265
  %345 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait408, align 8, !dbg !19265
  %346 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19265
  call void %345(%struct.hfc_multi* %346) #12, !dbg !19265
  br label %if.end409, !dbg !19266

if.end409:                                        ; preds = %if.then406, %if.end356
  %347 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19267
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %347, i32 0, i32 11, !dbg !19267
  %348 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !19267
  %349 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19267
  %350 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19267
  %silence = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %350, i32 0, i32 33, !dbg !19267
  %351 = load i8, i8* %silence, align 4, !dbg !19267
  call void %348(%struct.hfc_multi* %349, i8 zeroext -124, i8 zeroext %351) #12, !dbg !19267
  %352 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19268
  %HFC_outb410 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %352, i32 0, i32 10, !dbg !19268
  %353 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb410, align 8, !dbg !19268
  %354 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19268
  %355 = load i32, i32* %ch.addr, align 4, !dbg !19268
  %div411 = sdiv i32 %355, 4, !dbg !19268
  %mul412 = mul i32 %div411, 8, !dbg !19268
  %356 = load i32, i32* %ch.addr, align 4, !dbg !19268
  %rem413 = srem i32 %356, 4, !dbg !19268
  %mul414 = mul i32 %rem413, 4, !dbg !19268
  %add415 = add i32 %mul412, %mul414, !dbg !19268
  %shl416 = shl i32 %add415, 1, !dbg !19268
  %conv417 = trunc i32 %shl416 to i8, !dbg !19268
  call void %353(%struct.hfc_multi* %354, i8 zeroext 16, i8 zeroext %conv417) #12, !dbg !19268
  %357 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19269
  %HFC_outb418 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %357, i32 0, i32 10, !dbg !19269
  %358 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb418, align 8, !dbg !19269
  %359 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19269
  %360 = load i32, i32* %ch.addr, align 4, !dbg !19269
  %shl419 = shl i32 %360, 1, !dbg !19269
  %or420 = or i32 160, %shl419, !dbg !19269
  %conv421 = trunc i32 %or420 to i8, !dbg !19269
  call void %358(%struct.hfc_multi* %359, i8 zeroext -48, i8 zeroext %conv421) #12, !dbg !19269
  br label %if.end486, !dbg !19270

if.else422:                                       ; preds = %land.lhs.true301, %land.lhs.true294, %sw.bb291
  %361 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19271
  %HFC_outb423 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %361, i32 0, i32 10, !dbg !19271
  %362 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb423, align 8, !dbg !19271
  %363 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19271
  %364 = load i32, i32* %ch.addr, align 4, !dbg !19271
  %shl424 = shl i32 %364, 1, !dbg !19271
  %conv425 = trunc i32 %shl424 to i8, !dbg !19271
  call void %362(%struct.hfc_multi* %363, i8 zeroext 15, i8 zeroext %conv425) #12, !dbg !19271
  %365 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19273
  %HFC_wait426 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %365, i32 0, i32 16, !dbg !19273
  %366 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait426, align 8, !dbg !19273
  %367 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19273
  call void %366(%struct.hfc_multi* %367) #12, !dbg !19273
  %368 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19274
  %ctype427 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %368, i32 0, i32 4, !dbg !19276
  %369 = load i32, i32* %ctype427, align 8, !dbg !19276
  %cmp428 = icmp eq i32 %369, 5, !dbg !19277
  br i1 %cmp428, label %if.then430, label %if.else436, !dbg !19278

if.then430:                                       ; preds = %if.else422
  %370 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19279
  %HFC_outb431 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %370, i32 0, i32 10, !dbg !19279
  %371 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb431, align 8, !dbg !19279
  %372 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19279
  %373 = load i32, i32* %flow_tx, align 4, !dbg !19279
  %or432 = or i32 %373, 28, !dbg !19279
  %or433 = or i32 %or432, 2, !dbg !19279
  %or434 = or i32 %or433, 1, !dbg !19279
  %conv435 = trunc i32 %or434 to i8, !dbg !19279
  call void %371(%struct.hfc_multi* %372, i8 zeroext -6, i8 zeroext %conv435) #12, !dbg !19279
  br label %if.end441, !dbg !19279

if.else436:                                       ; preds = %if.else422
  %374 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19280
  %HFC_outb437 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %374, i32 0, i32 10, !dbg !19280
  %375 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb437, align 8, !dbg !19280
  %376 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19280
  %377 = load i32, i32* %flow_tx, align 4, !dbg !19280
  %or438 = or i32 %377, 2, !dbg !19280
  %or439 = or i32 %or438, 1, !dbg !19280
  %conv440 = trunc i32 %or439 to i8, !dbg !19280
  call void %375(%struct.hfc_multi* %376, i8 zeroext -6, i8 zeroext %conv440) #12, !dbg !19280
  br label %if.end441

if.end441:                                        ; preds = %if.else436, %if.then430
  %378 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19281
  %HFC_outb442 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %378, i32 0, i32 10, !dbg !19281
  %379 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb442, align 8, !dbg !19281
  %380 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19281
  call void %379(%struct.hfc_multi* %380, i8 zeroext -5, i8 zeroext 0) #12, !dbg !19281
  %381 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19282
  %HFC_outb443 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %381, i32 0, i32 10, !dbg !19282
  %382 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb443, align 8, !dbg !19282
  %383 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19282
  call void %382(%struct.hfc_multi* %383, i8 zeroext -1, i8 zeroext 0) #12, !dbg !19282
  %384 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19283
  %chan444 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %384, i32 0, i32 60, !dbg !19285
  %385 = load i32, i32* %ch.addr, align 4, !dbg !19286
  %idxprom445 = sext i32 %385 to i64, !dbg !19283
  %arrayidx446 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan444, i64 0, i64 %idxprom445, !dbg !19283
  %protocol447 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx446, i32 0, i32 12, !dbg !19287
  %386 = load i32, i32* %protocol447, align 4, !dbg !19287
  %387 = load i32, i32* %protocol.addr, align 4, !dbg !19288
  %cmp448 = icmp ne i32 %386, %387, !dbg !19289
  br i1 %cmp448, label %if.then450, label %if.end453, !dbg !19290

if.then450:                                       ; preds = %if.end441
  %388 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19291
  %HFC_outb451 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %388, i32 0, i32 10, !dbg !19291
  %389 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb451, align 8, !dbg !19291
  %390 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19291
  call void %389(%struct.hfc_multi* %390, i8 zeroext 14, i8 zeroext 2) #12, !dbg !19291
  %391 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19293
  %HFC_wait452 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %391, i32 0, i32 16, !dbg !19293
  %392 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait452, align 8, !dbg !19293
  %393 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19293
  call void %392(%struct.hfc_multi* %393) #12, !dbg !19293
  br label %if.end453, !dbg !19294

if.end453:                                        ; preds = %if.then450, %if.end441
  %394 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19295
  %HFC_outb_nodebug454 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %394, i32 0, i32 11, !dbg !19295
  %395 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug454, align 8, !dbg !19295
  %396 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19295
  %397 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19295
  %silence455 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %397, i32 0, i32 33, !dbg !19295
  %398 = load i8, i8* %silence455, align 4, !dbg !19295
  call void %395(%struct.hfc_multi* %396, i8 zeroext -124, i8 zeroext %398) #12, !dbg !19295
  %399 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19296
  %HFC_outb456 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %399, i32 0, i32 10, !dbg !19296
  %400 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb456, align 8, !dbg !19296
  %401 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19296
  %402 = load i32, i32* %ch.addr, align 4, !dbg !19296
  %shl457 = shl i32 %402, 1, !dbg !19296
  %or458 = or i32 %shl457, 1, !dbg !19296
  %conv459 = trunc i32 %or458 to i8, !dbg !19296
  call void %400(%struct.hfc_multi* %401, i8 zeroext 15, i8 zeroext %conv459) #12, !dbg !19296
  %403 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19297
  %HFC_wait460 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %403, i32 0, i32 16, !dbg !19297
  %404 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait460, align 8, !dbg !19297
  %405 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19297
  call void %404(%struct.hfc_multi* %405) #12, !dbg !19297
  %406 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19298
  %ctype461 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %406, i32 0, i32 4, !dbg !19300
  %407 = load i32, i32* %ctype461, align 8, !dbg !19300
  %cmp462 = icmp eq i32 %407, 5, !dbg !19301
  br i1 %cmp462, label %if.then464, label %if.else469, !dbg !19302

if.then464:                                       ; preds = %if.end453
  %408 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19303
  %HFC_outb465 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %408, i32 0, i32 10, !dbg !19303
  %409 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb465, align 8, !dbg !19303
  %410 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19303
  %411 = load i32, i32* %flow_rx, align 4, !dbg !19303
  %or466 = or i32 %411, 28, !dbg !19303
  %or467 = or i32 %or466, 2, !dbg !19303
  %conv468 = trunc i32 %or467 to i8, !dbg !19303
  call void %409(%struct.hfc_multi* %410, i8 zeroext -6, i8 zeroext %conv468) #12, !dbg !19303
  br label %if.end473, !dbg !19303

if.else469:                                       ; preds = %if.end453
  %412 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19304
  %HFC_outb470 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %412, i32 0, i32 10, !dbg !19304
  %413 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb470, align 8, !dbg !19304
  %414 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19304
  %415 = load i32, i32* %flow_rx, align 4, !dbg !19304
  %or471 = or i32 %415, 2, !dbg !19304
  %conv472 = trunc i32 %or471 to i8, !dbg !19304
  call void %413(%struct.hfc_multi* %414, i8 zeroext -6, i8 zeroext %conv472) #12, !dbg !19304
  br label %if.end473

if.end473:                                        ; preds = %if.else469, %if.then464
  %416 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19305
  %HFC_outb474 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %416, i32 0, i32 10, !dbg !19305
  %417 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb474, align 8, !dbg !19305
  %418 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19305
  call void %417(%struct.hfc_multi* %418, i8 zeroext -5, i8 zeroext 0) #12, !dbg !19305
  %419 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19306
  %HFC_outb475 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %419, i32 0, i32 10, !dbg !19306
  %420 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb475, align 8, !dbg !19306
  %421 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19306
  call void %420(%struct.hfc_multi* %421, i8 zeroext -1, i8 zeroext 0) #12, !dbg !19306
  %422 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19307
  %chan476 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %422, i32 0, i32 60, !dbg !19309
  %423 = load i32, i32* %ch.addr, align 4, !dbg !19310
  %idxprom477 = sext i32 %423 to i64, !dbg !19307
  %arrayidx478 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan476, i64 0, i64 %idxprom477, !dbg !19307
  %protocol479 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx478, i32 0, i32 12, !dbg !19311
  %424 = load i32, i32* %protocol479, align 4, !dbg !19311
  %425 = load i32, i32* %protocol.addr, align 4, !dbg !19312
  %cmp480 = icmp ne i32 %424, %425, !dbg !19313
  br i1 %cmp480, label %if.then482, label %if.end485, !dbg !19314

if.then482:                                       ; preds = %if.end473
  %426 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19315
  %HFC_outb483 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %426, i32 0, i32 10, !dbg !19315
  %427 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb483, align 8, !dbg !19315
  %428 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19315
  call void %427(%struct.hfc_multi* %428, i8 zeroext 14, i8 zeroext 2) #12, !dbg !19315
  %429 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19317
  %HFC_wait484 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %429, i32 0, i32 16, !dbg !19317
  %430 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait484, align 8, !dbg !19317
  %431 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19317
  call void %430(%struct.hfc_multi* %431) #12, !dbg !19317
  br label %if.end485, !dbg !19318

if.end485:                                        ; preds = %if.then482, %if.end473
  br label %if.end486

if.end486:                                        ; preds = %if.end485, %if.end409
  %432 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19319
  %ctype487 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %432, i32 0, i32 4, !dbg !19321
  %433 = load i32, i32* %ctype487, align 8, !dbg !19321
  %cmp488 = icmp ne i32 %433, 1, !dbg !19322
  br i1 %cmp488, label %if.then490, label %if.end521, !dbg !19323

if.then490:                                       ; preds = %if.end486
  %434 = load i32, i32* %ch.addr, align 4, !dbg !19324
  %and491 = and i32 %434, 3, !dbg !19326
  %cmp492 = icmp eq i32 %and491, 0, !dbg !19327
  %435 = zext i1 %cmp492 to i64, !dbg !19328
  %cond494 = select i1 %cmp492, i32 1, i32 2, !dbg !19328
  %436 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19329
  %hw495 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %436, i32 0, i32 30, !dbg !19330
  %a_st_ctrl0496 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw495, i32 0, i32 11, !dbg !19331
  %437 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19332
  %chan497 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %437, i32 0, i32 60, !dbg !19333
  %438 = load i32, i32* %ch.addr, align 4, !dbg !19334
  %idxprom498 = sext i32 %438 to i64, !dbg !19332
  %arrayidx499 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan497, i64 0, i64 %idxprom498, !dbg !19332
  %port500 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx499, i32 0, i32 2, !dbg !19335
  %439 = load i32, i32* %port500, align 8, !dbg !19335
  %idxprom501 = sext i32 %439 to i64, !dbg !19329
  %arrayidx502 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0496, i64 0, i64 %idxprom501, !dbg !19329
  %440 = load i8, i8* %arrayidx502, align 1, !dbg !19336
  %conv503 = zext i8 %440 to i32, !dbg !19336
  %or504 = or i32 %conv503, %cond494, !dbg !19336
  %conv505 = trunc i32 %or504 to i8, !dbg !19336
  store i8 %conv505, i8* %arrayidx502, align 1, !dbg !19336
  %441 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19337
  %HFC_outb506 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %441, i32 0, i32 10, !dbg !19337
  %442 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb506, align 8, !dbg !19337
  %443 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19337
  %444 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19337
  %chan507 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %444, i32 0, i32 60, !dbg !19337
  %445 = load i32, i32* %ch.addr, align 4, !dbg !19337
  %idxprom508 = sext i32 %445 to i64, !dbg !19337
  %arrayidx509 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan507, i64 0, i64 %idxprom508, !dbg !19337
  %port510 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx509, i32 0, i32 2, !dbg !19337
  %446 = load i32, i32* %port510, align 8, !dbg !19337
  %conv511 = trunc i32 %446 to i8, !dbg !19337
  call void %442(%struct.hfc_multi* %443, i8 zeroext 22, i8 zeroext %conv511) #12, !dbg !19337
  call void @__const_udelay(i64 4295) #12, !dbg !19338
  %447 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19343
  %HFC_outb512 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %447, i32 0, i32 10, !dbg !19343
  %448 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb512, align 8, !dbg !19343
  %449 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19343
  %450 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19343
  %hw513 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %450, i32 0, i32 30, !dbg !19343
  %a_st_ctrl0514 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw513, i32 0, i32 11, !dbg !19343
  %451 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19343
  %chan515 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %451, i32 0, i32 60, !dbg !19343
  %452 = load i32, i32* %ch.addr, align 4, !dbg !19343
  %idxprom516 = sext i32 %452 to i64, !dbg !19343
  %arrayidx517 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan515, i64 0, i64 %idxprom516, !dbg !19343
  %port518 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx517, i32 0, i32 2, !dbg !19343
  %453 = load i32, i32* %port518, align 8, !dbg !19343
  %idxprom519 = sext i32 %453 to i64, !dbg !19343
  %arrayidx520 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0514, i64 0, i64 %idxprom519, !dbg !19343
  %454 = load i8, i8* %arrayidx520, align 1, !dbg !19343
  call void %448(%struct.hfc_multi* %449, i8 zeroext 49, i8 zeroext %454) #12, !dbg !19343
  br label %if.end521, !dbg !19344

if.end521:                                        ; preds = %if.then490, %if.end486
  %455 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19345
  %chan522 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %455, i32 0, i32 60, !dbg !19347
  %456 = load i32, i32* %ch.addr, align 4, !dbg !19348
  %idxprom523 = sext i32 %456 to i64, !dbg !19345
  %arrayidx524 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan522, i64 0, i64 %idxprom523, !dbg !19345
  %bch525 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx524, i32 0, i32 1, !dbg !19349
  %457 = load %struct.bchannel*, %struct.bchannel** %bch525, align 8, !dbg !19349
  %tobool526 = icmp ne %struct.bchannel* %457, null, !dbg !19345
  br i1 %tobool526, label %if.then527, label %if.end534, !dbg !19350

if.then527:                                       ; preds = %if.end521
  %458 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19351
  %chan528 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %458, i32 0, i32 60, !dbg !19352
  %459 = load i32, i32* %ch.addr, align 4, !dbg !19353
  %idxprom529 = sext i32 %459 to i64, !dbg !19351
  %arrayidx530 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan528, i64 0, i64 %idxprom529, !dbg !19351
  %bch531 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx530, i32 0, i32 1, !dbg !19354
  %460 = load %struct.bchannel*, %struct.bchannel** %bch531, align 8, !dbg !19354
  %Flags532 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %460, i32 0, i32 2, !dbg !19355
  %call533 = call zeroext i1 @test_and_set_bit(i64 12, i64* %Flags532) #12, !dbg !19356
  br label %if.end534, !dbg !19356

if.end534:                                        ; preds = %if.then527, %if.end521
  br label %sw.epilog, !dbg !19357

sw.bb535:                                         ; preds = %if.end214, %if.end214, %if.end214, %if.end214, %if.end214
  %461 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19358
  %HFC_outb536 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %461, i32 0, i32 10, !dbg !19358
  %462 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb536, align 8, !dbg !19358
  %463 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19358
  %464 = load i32, i32* %ch.addr, align 4, !dbg !19358
  %shl537 = shl i32 %464, 1, !dbg !19358
  %conv538 = trunc i32 %shl537 to i8, !dbg !19358
  call void %462(%struct.hfc_multi* %463, i8 zeroext 15, i8 zeroext %conv538) #12, !dbg !19358
  %465 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19359
  %HFC_wait539 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %465, i32 0, i32 16, !dbg !19359
  %466 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait539, align 8, !dbg !19359
  %467 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19359
  call void %466(%struct.hfc_multi* %467) #12, !dbg !19359
  %468 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19360
  %ctype540 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %468, i32 0, i32 4, !dbg !19362
  %469 = load i32, i32* %ctype540, align 8, !dbg !19362
  %cmp541 = icmp eq i32 %469, 1, !dbg !19363
  br i1 %cmp541, label %if.then549, label %lor.lhs.false543, !dbg !19364

lor.lhs.false543:                                 ; preds = %sw.bb535
  %470 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19365
  %chan544 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %470, i32 0, i32 60, !dbg !19366
  %471 = load i32, i32* %ch.addr, align 4, !dbg !19367
  %idxprom545 = sext i32 %471 to i64, !dbg !19365
  %arrayidx546 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan544, i64 0, i64 %idxprom545, !dbg !19365
  %bch547 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx546, i32 0, i32 1, !dbg !19368
  %472 = load %struct.bchannel*, %struct.bchannel** %bch547, align 8, !dbg !19368
  %tobool548 = icmp ne %struct.bchannel* %472, null, !dbg !19365
  br i1 %tobool548, label %if.then549, label %if.else554, !dbg !19369

if.then549:                                       ; preds = %lor.lhs.false543, %sw.bb535
  %473 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19370
  %HFC_outb550 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %473, i32 0, i32 10, !dbg !19370
  %474 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb550, align 8, !dbg !19370
  %475 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19370
  %476 = load i32, i32* %flow_tx, align 4, !dbg !19370
  %or551 = or i32 %476, 4, !dbg !19370
  %conv552 = trunc i32 %or551 to i8, !dbg !19370
  call void %474(%struct.hfc_multi* %475, i8 zeroext -6, i8 zeroext %conv552) #12, !dbg !19370
  %477 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19372
  %HFC_outb553 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %477, i32 0, i32 10, !dbg !19372
  %478 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb553, align 8, !dbg !19372
  %479 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19372
  call void %478(%struct.hfc_multi* %479, i8 zeroext -5, i8 zeroext 0) #12, !dbg !19372
  br label %if.end560, !dbg !19373

if.else554:                                       ; preds = %lor.lhs.false543
  %480 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19374
  %HFC_outb555 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %480, i32 0, i32 10, !dbg !19374
  %481 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb555, align 8, !dbg !19374
  %482 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19374
  %483 = load i32, i32* %flow_tx, align 4, !dbg !19374
  %or556 = or i32 %483, 4, !dbg !19374
  %or557 = or i32 %or556, 1, !dbg !19374
  %conv558 = trunc i32 %or557 to i8, !dbg !19374
  call void %481(%struct.hfc_multi* %482, i8 zeroext -6, i8 zeroext %conv558) #12, !dbg !19374
  %484 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19376
  %HFC_outb559 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %484, i32 0, i32 10, !dbg !19376
  %485 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb559, align 8, !dbg !19376
  %486 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19376
  call void %485(%struct.hfc_multi* %486, i8 zeroext -5, i8 zeroext 2) #12, !dbg !19376
  br label %if.end560

if.end560:                                        ; preds = %if.else554, %if.then549
  %487 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19377
  %HFC_outb561 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %487, i32 0, i32 10, !dbg !19377
  %488 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb561, align 8, !dbg !19377
  %489 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19377
  call void %488(%struct.hfc_multi* %489, i8 zeroext -1, i8 zeroext 1) #12, !dbg !19377
  %490 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19378
  %HFC_outb562 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %490, i32 0, i32 10, !dbg !19378
  %491 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb562, align 8, !dbg !19378
  %492 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19378
  call void %491(%struct.hfc_multi* %492, i8 zeroext 14, i8 zeroext 2) #12, !dbg !19378
  %493 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19379
  %HFC_wait563 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %493, i32 0, i32 16, !dbg !19379
  %494 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait563, align 8, !dbg !19379
  %495 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19379
  call void %494(%struct.hfc_multi* %495) #12, !dbg !19379
  %496 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19380
  %HFC_outb564 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %496, i32 0, i32 10, !dbg !19380
  %497 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb564, align 8, !dbg !19380
  %498 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19380
  %499 = load i32, i32* %ch.addr, align 4, !dbg !19380
  %shl565 = shl i32 %499, 1, !dbg !19380
  %or566 = or i32 %shl565, 1, !dbg !19380
  %conv567 = trunc i32 %or566 to i8, !dbg !19380
  call void %497(%struct.hfc_multi* %498, i8 zeroext 15, i8 zeroext %conv567) #12, !dbg !19380
  %500 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19381
  %HFC_wait568 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %500, i32 0, i32 16, !dbg !19381
  %501 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait568, align 8, !dbg !19381
  %502 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19381
  call void %501(%struct.hfc_multi* %502) #12, !dbg !19381
  %503 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19382
  %HFC_outb569 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %503, i32 0, i32 10, !dbg !19382
  %504 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb569, align 8, !dbg !19382
  %505 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19382
  %506 = load i32, i32* %flow_rx, align 4, !dbg !19382
  %or570 = or i32 %506, 4, !dbg !19382
  %conv571 = trunc i32 %or570 to i8, !dbg !19382
  call void %504(%struct.hfc_multi* %505, i8 zeroext -6, i8 zeroext %conv571) #12, !dbg !19382
  %507 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19383
  %ctype572 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %507, i32 0, i32 4, !dbg !19385
  %508 = load i32, i32* %ctype572, align 8, !dbg !19385
  %cmp573 = icmp eq i32 %508, 1, !dbg !19386
  br i1 %cmp573, label %if.then581, label %lor.lhs.false575, !dbg !19387

lor.lhs.false575:                                 ; preds = %if.end560
  %509 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19388
  %chan576 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %509, i32 0, i32 60, !dbg !19389
  %510 = load i32, i32* %ch.addr, align 4, !dbg !19390
  %idxprom577 = sext i32 %510 to i64, !dbg !19388
  %arrayidx578 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan576, i64 0, i64 %idxprom577, !dbg !19388
  %bch579 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx578, i32 0, i32 1, !dbg !19391
  %511 = load %struct.bchannel*, %struct.bchannel** %bch579, align 8, !dbg !19391
  %tobool580 = icmp ne %struct.bchannel* %511, null, !dbg !19388
  br i1 %tobool580, label %if.then581, label %if.else583, !dbg !19392

if.then581:                                       ; preds = %lor.lhs.false575, %if.end560
  %512 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19393
  %HFC_outb582 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %512, i32 0, i32 10, !dbg !19393
  %513 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb582, align 8, !dbg !19393
  %514 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19393
  call void %513(%struct.hfc_multi* %514, i8 zeroext -5, i8 zeroext 0) #12, !dbg !19393
  br label %if.end585, !dbg !19393

if.else583:                                       ; preds = %lor.lhs.false575
  %515 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19394
  %HFC_outb584 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %515, i32 0, i32 10, !dbg !19394
  %516 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb584, align 8, !dbg !19394
  %517 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19394
  call void %516(%struct.hfc_multi* %517, i8 zeroext -5, i8 zeroext 2) #12, !dbg !19394
  br label %if.end585

if.end585:                                        ; preds = %if.else583, %if.then581
  %518 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19395
  %HFC_outb586 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %518, i32 0, i32 10, !dbg !19395
  %519 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb586, align 8, !dbg !19395
  %520 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19395
  call void %519(%struct.hfc_multi* %520, i8 zeroext -1, i8 zeroext 1) #12, !dbg !19395
  %521 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19396
  %HFC_outb587 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %521, i32 0, i32 10, !dbg !19396
  %522 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb587, align 8, !dbg !19396
  %523 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19396
  call void %522(%struct.hfc_multi* %523, i8 zeroext 14, i8 zeroext 2) #12, !dbg !19396
  %524 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19397
  %HFC_wait588 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %524, i32 0, i32 16, !dbg !19397
  %525 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait588, align 8, !dbg !19397
  %526 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19397
  call void %525(%struct.hfc_multi* %526) #12, !dbg !19397
  %527 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19398
  %chan589 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %527, i32 0, i32 60, !dbg !19400
  %528 = load i32, i32* %ch.addr, align 4, !dbg !19401
  %idxprom590 = sext i32 %528 to i64, !dbg !19398
  %arrayidx591 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan589, i64 0, i64 %idxprom590, !dbg !19398
  %bch592 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx591, i32 0, i32 1, !dbg !19402
  %529 = load %struct.bchannel*, %struct.bchannel** %bch592, align 8, !dbg !19402
  %tobool593 = icmp ne %struct.bchannel* %529, null, !dbg !19398
  br i1 %tobool593, label %if.then594, label %if.end636, !dbg !19403

if.then594:                                       ; preds = %if.end585
  %530 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19404
  %chan595 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %530, i32 0, i32 60, !dbg !19406
  %531 = load i32, i32* %ch.addr, align 4, !dbg !19407
  %idxprom596 = sext i32 %531 to i64, !dbg !19404
  %arrayidx597 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan595, i64 0, i64 %idxprom596, !dbg !19404
  %bch598 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx597, i32 0, i32 1, !dbg !19408
  %532 = load %struct.bchannel*, %struct.bchannel** %bch598, align 8, !dbg !19408
  %Flags599 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %532, i32 0, i32 2, !dbg !19409
  %call600 = call zeroext i1 @test_and_set_bit(i64 13, i64* %Flags599) #12, !dbg !19410
  %533 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19411
  %ctype601 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %533, i32 0, i32 4, !dbg !19413
  %534 = load i32, i32* %ctype601, align 8, !dbg !19413
  %cmp602 = icmp ne i32 %534, 1, !dbg !19414
  br i1 %cmp602, label %if.then604, label %if.end635, !dbg !19415

if.then604:                                       ; preds = %if.then594
  %535 = load i32, i32* %ch.addr, align 4, !dbg !19416
  %and605 = and i32 %535, 3, !dbg !19418
  %cmp606 = icmp eq i32 %and605, 0, !dbg !19419
  %536 = zext i1 %cmp606 to i64, !dbg !19420
  %cond608 = select i1 %cmp606, i32 1, i32 2, !dbg !19420
  %537 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19421
  %hw609 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %537, i32 0, i32 30, !dbg !19422
  %a_st_ctrl0610 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw609, i32 0, i32 11, !dbg !19423
  %538 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19424
  %chan611 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %538, i32 0, i32 60, !dbg !19425
  %539 = load i32, i32* %ch.addr, align 4, !dbg !19426
  %idxprom612 = sext i32 %539 to i64, !dbg !19424
  %arrayidx613 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan611, i64 0, i64 %idxprom612, !dbg !19424
  %port614 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx613, i32 0, i32 2, !dbg !19427
  %540 = load i32, i32* %port614, align 8, !dbg !19427
  %idxprom615 = sext i32 %540 to i64, !dbg !19421
  %arrayidx616 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0610, i64 0, i64 %idxprom615, !dbg !19421
  %541 = load i8, i8* %arrayidx616, align 1, !dbg !19428
  %conv617 = zext i8 %541 to i32, !dbg !19428
  %or618 = or i32 %conv617, %cond608, !dbg !19428
  %conv619 = trunc i32 %or618 to i8, !dbg !19428
  store i8 %conv619, i8* %arrayidx616, align 1, !dbg !19428
  %542 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19429
  %HFC_outb620 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %542, i32 0, i32 10, !dbg !19429
  %543 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb620, align 8, !dbg !19429
  %544 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19429
  %545 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19429
  %chan621 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %545, i32 0, i32 60, !dbg !19429
  %546 = load i32, i32* %ch.addr, align 4, !dbg !19429
  %idxprom622 = sext i32 %546 to i64, !dbg !19429
  %arrayidx623 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan621, i64 0, i64 %idxprom622, !dbg !19429
  %port624 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx623, i32 0, i32 2, !dbg !19429
  %547 = load i32, i32* %port624, align 8, !dbg !19429
  %conv625 = trunc i32 %547 to i8, !dbg !19429
  call void %543(%struct.hfc_multi* %544, i8 zeroext 22, i8 zeroext %conv625) #12, !dbg !19429
  call void @__const_udelay(i64 4295) #12, !dbg !19430
  %548 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19435
  %HFC_outb626 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %548, i32 0, i32 10, !dbg !19435
  %549 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb626, align 8, !dbg !19435
  %550 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19435
  %551 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19435
  %hw627 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %551, i32 0, i32 30, !dbg !19435
  %a_st_ctrl0628 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw627, i32 0, i32 11, !dbg !19435
  %552 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19435
  %chan629 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %552, i32 0, i32 60, !dbg !19435
  %553 = load i32, i32* %ch.addr, align 4, !dbg !19435
  %idxprom630 = sext i32 %553 to i64, !dbg !19435
  %arrayidx631 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan629, i64 0, i64 %idxprom630, !dbg !19435
  %port632 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx631, i32 0, i32 2, !dbg !19435
  %554 = load i32, i32* %port632, align 8, !dbg !19435
  %idxprom633 = sext i32 %554 to i64, !dbg !19435
  %arrayidx634 = getelementptr [8 x i8], [8 x i8]* %a_st_ctrl0628, i64 0, i64 %idxprom633, !dbg !19435
  %555 = load i8, i8* %arrayidx634, align 1, !dbg !19435
  call void %549(%struct.hfc_multi* %550, i8 zeroext 49, i8 zeroext %555) #12, !dbg !19435
  br label %if.end635, !dbg !19436

if.end635:                                        ; preds = %if.then604, %if.then594
  br label %if.end636, !dbg !19437

if.end636:                                        ; preds = %if.end635, %if.end585
  br label %sw.epilog, !dbg !19438

sw.default:                                       ; preds = %if.end214
  %556 = load i32, i32* %protocol.addr, align 4, !dbg !19439
  %call637 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.mode_hfcmulti, i64 0, i64 0), i32 %556) #13, !dbg !19440
  %557 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19441
  %chan638 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %557, i32 0, i32 60, !dbg !19442
  %558 = load i32, i32* %ch.addr, align 4, !dbg !19443
  %idxprom639 = sext i32 %558 to i64, !dbg !19441
  %arrayidx640 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan638, i64 0, i64 %idxprom639, !dbg !19441
  %protocol641 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx640, i32 0, i32 12, !dbg !19444
  store i32 0, i32* %protocol641, align 4, !dbg !19445
  store i32 -92, i32* %retval, align 4, !dbg !19446
  br label %return, !dbg !19446

sw.epilog:                                        ; preds = %if.end636, %if.end534, %if.end290
  %559 = load i32, i32* %protocol.addr, align 4, !dbg !19447
  %560 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19448
  %chan642 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %560, i32 0, i32 60, !dbg !19449
  %561 = load i32, i32* %ch.addr, align 4, !dbg !19450
  %idxprom643 = sext i32 %561 to i64, !dbg !19448
  %arrayidx644 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan642, i64 0, i64 %idxprom643, !dbg !19448
  %protocol645 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx644, i32 0, i32 12, !dbg !19451
  store i32 %559, i32* %protocol645, align 4, !dbg !19452
  store i32 0, i32* %retval, align 4, !dbg !19453
  br label %return, !dbg !19453

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  %562 = load i32, i32* %retval, align 4, !dbg !19454
  ret i32 %562, !dbg !19454
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfcmulti_dbusy_timer(%struct.timer_list* %t) #2 !dbg !19455 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !19456, metadata !DIExpression()), !dbg !19457
  ret void, !dbg !19458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_channelmap(i32 %nr, i8* %map) #2 !dbg !19459 {
entry:
  %retval = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %map.addr = alloca i8*, align 8
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !19462, metadata !DIExpression()), !dbg !19463
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !19464, metadata !DIExpression()), !dbg !19465
  %0 = load i32, i32* %nr.addr, align 4, !dbg !19466
  %cmp = icmp ule i32 %0, 127, !dbg !19468
  br i1 %cmp, label %if.then, label %if.else, !dbg !19469

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %map.addr, align 8, !dbg !19470
  %2 = load i32, i32* %nr.addr, align 4, !dbg !19471
  %shr = lshr i32 %2, 3, !dbg !19472
  %idxprom = zext i32 %shr to i64, !dbg !19470
  %arrayidx = getelementptr i8, i8* %1, i64 %idxprom, !dbg !19470
  %3 = load i8, i8* %arrayidx, align 1, !dbg !19470
  %conv = zext i8 %3 to i32, !dbg !19470
  %4 = load i32, i32* %nr.addr, align 4, !dbg !19473
  %and = and i32 %4, 7, !dbg !19474
  %shl = shl i32 1, %and, !dbg !19475
  %and1 = and i32 %conv, %shl, !dbg !19476
  store i32 %and1, i32* %retval, align 4, !dbg !19477
  br label %return, !dbg !19477

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19478
  br label %return, !dbg !19478

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19479
  ret i32 %5, !dbg !19479
}

; Function Attrs: noredzone
declare dso_local i32 @bchannel_senddata(%struct.bchannel*, %struct.sk_buff*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @deactivate_bchannel(%struct.bchannel* %bch) #2 !dbg !19480 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !10043, metadata !DIExpression()), !dbg !19483
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !19485
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !19486
  %bch.addr = alloca %struct.bchannel*, align 8
  %hc = alloca %struct.hfc_multi*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.bchannel* %bch, %struct.bchannel** %bch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch.addr, metadata !19493, metadata !DIExpression()), !dbg !19494
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !19495, metadata !DIExpression()), !dbg !19496
  %0 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19497
  %hw = getelementptr inbounds %struct.bchannel, %struct.bchannel* %0, i32 0, i32 5, !dbg !19498
  %1 = load i8*, i8** %hw, align 8, !dbg !19498
  %2 = bitcast i8* %1 to %struct.hfc_multi*, !dbg !19497
  store %struct.hfc_multi* %2, %struct.hfc_multi** %hc, align 8, !dbg !19496
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19499, metadata !DIExpression()), !dbg !19500
  br label %do.body, !dbg !19501

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !19502

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19503, metadata !DIExpression()), !dbg !19505
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19506, metadata !DIExpression()), !dbg !19505
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !19505
  %conv = zext i1 %cmp to i32, !dbg !19505
  store i32 1, i32* %tmp, align 4, !dbg !19505
  %3 = load i32, i32* %tmp, align 4, !dbg !19505
  br label %do.body2, !dbg !19507

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !19508

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !19509

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !19511, metadata !DIExpression()), !dbg !19514
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !19515, metadata !DIExpression()), !dbg !19514
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !19514
  %conv8 = zext i1 %cmp7 to i32, !dbg !19514
  store i32 1, i32* %tmp9, align 4, !dbg !19514
  %4 = load i32, i32* %tmp9, align 4, !dbg !19514
  %call = call i64 @arch_local_irq_save() #12, !dbg !19516
  store i64 %call, i64* %flags, align 8, !dbg !19516
  br label %do.end, !dbg !19516

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !19509

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !19508

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !19517, !srcloc !19518
  br label %do.body12, !dbg !19517

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19519
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 57, !dbg !19519
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19520
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !19521
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !19521
  br label %do.end14, !dbg !19519

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !19517

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !19508

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !19507

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !19502

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19522
  call void @mISDN_clear_bchannel(%struct.bchannel* %8) #12, !dbg !19523
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19524
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %9, i32 0, i32 60, !dbg !19525
  %10 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19526
  %slot = getelementptr inbounds %struct.bchannel, %struct.bchannel* %10, i32 0, i32 6, !dbg !19527
  %11 = load i32, i32* %slot, align 8, !dbg !19527
  %idxprom = sext i32 %11 to i64, !dbg !19524
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !19524
  %coeff_count = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 21, !dbg !19528
  store i32 0, i32* %coeff_count, align 8, !dbg !19529
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19530
  %chan19 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %12, i32 0, i32 60, !dbg !19531
  %13 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19532
  %slot20 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %13, i32 0, i32 6, !dbg !19533
  %14 = load i32, i32* %slot20, align 8, !dbg !19533
  %idxprom21 = sext i32 %14 to i64, !dbg !19530
  %arrayidx22 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan19, i64 0, i64 %idxprom21, !dbg !19530
  %rx_off = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx22, i32 0, i32 20, !dbg !19534
  store i32 0, i32* %rx_off, align 4, !dbg !19535
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19536
  %chan23 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 60, !dbg !19537
  %16 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19538
  %slot24 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %16, i32 0, i32 6, !dbg !19539
  %17 = load i32, i32* %slot24, align 8, !dbg !19539
  %idxprom25 = sext i32 %17 to i64, !dbg !19536
  %arrayidx26 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan23, i64 0, i64 %idxprom25, !dbg !19536
  %conf = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx26, i32 0, i32 17, !dbg !19540
  store i32 -1, i32* %conf, align 8, !dbg !19541
  %18 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19542
  %19 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19543
  %slot27 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %19, i32 0, i32 6, !dbg !19544
  %20 = load i32, i32* %slot27, align 8, !dbg !19544
  %call28 = call i32 @mode_hfcmulti(%struct.hfc_multi* %18, i32 %20, i32 0, i32 -1, i32 0, i32 -1, i32 0) #12, !dbg !19545
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19546
  %lock29 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 57, !dbg !19547
  %22 = load i64, i64* %flags, align 8, !dbg !19548
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !19549
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !19549
  store i32 1, i32* %tmp.i, align 4, !dbg !19549
  %23 = load i32, i32* %tmp.i, align 4, !dbg !19549
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !19550
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !19550
  store i32 1, i32* %tmp8.i, align 4, !dbg !19550
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !19550
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !19551
  call void @arch_local_irq_restore(i64 %25) #14, !dbg !19551
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !19552, !srcloc !10125
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !19553
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !19553
  %rlock.i31 = bitcast %union.anon.1* %27 to %struct.raw_spinlock*, !dbg !19553
  ret void, !dbg !19554
}

; Function Attrs: noredzone
declare dso_local void @mISDN_clear_bchannel(%struct.bchannel*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @channel_bctrl(%struct.bchannel* %bch, %struct.mISDN_ctrl_req* %cq) #2 !dbg !19555 {
entry:
  %bch.addr = alloca %struct.bchannel*, align 8
  %cq.addr = alloca %struct.mISDN_ctrl_req*, align 8
  %ret = alloca i32, align 4
  %features = alloca %struct.dsp_features*, align 8
  %hc = alloca %struct.hfc_multi*, align 8
  %slot_tx = alloca i32, align 4
  %bank_tx = alloca i32, align 4
  %slot_rx = alloca i32, align 4
  %bank_rx = alloca i32, align 4
  %num = alloca i32, align 4
  store %struct.bchannel* %bch, %struct.bchannel** %bch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch.addr, metadata !19558, metadata !DIExpression()), !dbg !19559
  store %struct.mISDN_ctrl_req* %cq, %struct.mISDN_ctrl_req** %cq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mISDN_ctrl_req** %cq.addr, metadata !19560, metadata !DIExpression()), !dbg !19561
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19562, metadata !DIExpression()), !dbg !19563
  store i32 0, i32* %ret, align 4, !dbg !19563
  call void @llvm.dbg.declare(metadata %struct.dsp_features** %features, metadata !19564, metadata !DIExpression()), !dbg !19565
  %0 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19566
  %p1 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %0, i32 0, i32 2, !dbg !19567
  %1 = bitcast i32* %p1 to i64*, !dbg !19568
  %2 = load i64, i64* %1, align 4, !dbg !19568
  %3 = inttoptr i64 %2 to %struct.dsp_features*, !dbg !19569
  store %struct.dsp_features* %3, %struct.dsp_features** %features, align 8, !dbg !19565
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !19570, metadata !DIExpression()), !dbg !19571
  %4 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19572
  %hw = getelementptr inbounds %struct.bchannel, %struct.bchannel* %4, i32 0, i32 5, !dbg !19573
  %5 = load i8*, i8** %hw, align 8, !dbg !19573
  %6 = bitcast i8* %5 to %struct.hfc_multi*, !dbg !19572
  store %struct.hfc_multi* %6, %struct.hfc_multi** %hc, align 8, !dbg !19571
  call void @llvm.dbg.declare(metadata i32* %slot_tx, metadata !19574, metadata !DIExpression()), !dbg !19575
  call void @llvm.dbg.declare(metadata i32* %bank_tx, metadata !19576, metadata !DIExpression()), !dbg !19577
  call void @llvm.dbg.declare(metadata i32* %slot_rx, metadata !19578, metadata !DIExpression()), !dbg !19579
  call void @llvm.dbg.declare(metadata i32* %bank_rx, metadata !19580, metadata !DIExpression()), !dbg !19581
  call void @llvm.dbg.declare(metadata i32* %num, metadata !19582, metadata !DIExpression()), !dbg !19583
  %7 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19584
  %op = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %7, i32 0, i32 0, !dbg !19585
  %8 = load i32, i32* %op, align 4, !dbg !19585
  switch i32 %8, label %sw.default [
    i32 0, label %sw.bb
    i32 256, label %sw.bb2
    i32 512, label %sw.bb25
    i32 8193, label %sw.bb30
    i32 16385, label %sw.bb47
    i32 16386, label %sw.bb75
    i32 16387, label %sw.bb82
    i32 16388, label %sw.bb97
    i32 16391, label %sw.bb104
    i32 16392, label %sw.bb117
  ], !dbg !19586

sw.bb:                                            ; preds = %entry
  %9 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19587
  %10 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19589
  %call = call i32 @mISDN_ctrl_bchannel(%struct.bchannel* %9, %struct.mISDN_ctrl_req* %10) #12, !dbg !19590
  store i32 %call, i32* %ret, align 4, !dbg !19591
  %11 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19592
  %op1 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %11, i32 0, i32 0, !dbg !19593
  %12 = load i32, i32* %op1, align 4, !dbg !19594
  %or = or i32 %12, 24576, !dbg !19594
  store i32 %or, i32* %op1, align 4, !dbg !19594
  br label %sw.epilog, !dbg !19595

sw.bb2:                                           ; preds = %entry
  %13 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19596
  %14 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19597
  %call3 = call i32 @mISDN_ctrl_bchannel(%struct.bchannel* %13, %struct.mISDN_ctrl_req* %14) #12, !dbg !19598
  store i32 %call3, i32* %ret, align 4, !dbg !19599
  %15 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19600
  %p14 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %15, i32 0, i32 2, !dbg !19601
  %16 = load i32, i32* %p14, align 4, !dbg !19601
  %tobool = icmp ne i32 %16, 0, !dbg !19602
  %lnot = xor i1 %tobool, true, !dbg !19602
  %lnot5 = xor i1 %lnot, true, !dbg !19603
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !19603
  %17 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19604
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %17, i32 0, i32 60, !dbg !19605
  %18 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19606
  %slot = getelementptr inbounds %struct.bchannel, %struct.bchannel* %18, i32 0, i32 6, !dbg !19607
  %19 = load i32, i32* %slot, align 8, !dbg !19607
  %idxprom = sext i32 %19 to i64, !dbg !19604
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !19604
  %rx_off = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 20, !dbg !19608
  store i32 %lnot.ext, i32* %rx_off, align 4, !dbg !19609
  %20 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19610
  %chan6 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %20, i32 0, i32 60, !dbg !19612
  %21 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19613
  %slot7 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %21, i32 0, i32 6, !dbg !19614
  %22 = load i32, i32* %slot7, align 8, !dbg !19614
  %idxprom8 = sext i32 %22 to i64, !dbg !19610
  %arrayidx9 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan6, i64 0, i64 %idxprom8, !dbg !19610
  %rx_off10 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx9, i32 0, i32 20, !dbg !19615
  %23 = load i32, i32* %rx_off10, align 4, !dbg !19615
  %tobool11 = icmp ne i32 %23, 0, !dbg !19610
  br i1 %tobool11, label %if.end, label %if.then, !dbg !19616

if.then:                                          ; preds = %sw.bb2
  %24 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19617
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %24, i32 0, i32 11, !dbg !19617
  %25 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !19617
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19617
  %27 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19617
  %slot12 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %27, i32 0, i32 6, !dbg !19617
  %28 = load i32, i32* %slot12, align 8, !dbg !19617
  %shl = shl i32 %28, 1, !dbg !19617
  %or13 = or i32 %shl, 1, !dbg !19617
  %conv = trunc i32 %or13 to i8, !dbg !19617
  call void %25(%struct.hfc_multi* %26, i8 zeroext 15, i8 zeroext %conv) #12, !dbg !19617
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19619
  %HFC_wait_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %29, i32 0, i32 17, !dbg !19619
  %30 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug, align 8, !dbg !19619
  %31 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19619
  call void %30(%struct.hfc_multi* %31) #12, !dbg !19619
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19620
  %HFC_outb_nodebug14 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %32, i32 0, i32 11, !dbg !19620
  %33 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug14, align 8, !dbg !19620
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19620
  call void %33(%struct.hfc_multi* %34, i8 zeroext 14, i8 zeroext 2) #12, !dbg !19620
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19621
  %HFC_wait_nodebug15 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 17, !dbg !19621
  %36 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug15, align 8, !dbg !19621
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19621
  call void %36(%struct.hfc_multi* %37) #12, !dbg !19621
  br label %if.end, !dbg !19622

if.end:                                           ; preds = %if.then, %sw.bb2
  %38 = load i32, i32* @debug, align 4, !dbg !19623
  %and = and i32 %38, 2097152, !dbg !19625
  %tobool16 = icmp ne i32 %and, 0, !dbg !19625
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !19626

if.then17:                                        ; preds = %if.end
  %39 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19627
  %nr = getelementptr inbounds %struct.bchannel, %struct.bchannel* %39, i32 0, i32 1, !dbg !19628
  %40 = load i32, i32* %nr, align 8, !dbg !19628
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19629
  %chan18 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %41, i32 0, i32 60, !dbg !19630
  %42 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19631
  %slot19 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %42, i32 0, i32 6, !dbg !19632
  %43 = load i32, i32* %slot19, align 8, !dbg !19632
  %idxprom20 = sext i32 %43 to i64, !dbg !19629
  %arrayidx21 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan18, i64 0, i64 %idxprom20, !dbg !19629
  %rx_off22 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx21, i32 0, i32 20, !dbg !19633
  %44 = load i32, i32* %rx_off22, align 4, !dbg !19633
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_bctrl, i64 0, i64 0), i32 %40, i32 %44) #13, !dbg !19634
  br label %if.end24, !dbg !19634

if.end24:                                         ; preds = %if.then17, %if.end
  br label %sw.epilog, !dbg !19635

sw.bb25:                                          ; preds = %entry
  %45 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19636
  %46 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19637
  %call26 = call i32 @mISDN_ctrl_bchannel(%struct.bchannel* %45, %struct.mISDN_ctrl_req* %46) #12, !dbg !19638
  store i32 %call26, i32* %ret, align 4, !dbg !19639
  %47 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19640
  %fill = getelementptr inbounds %struct.bchannel, %struct.bchannel* %47, i32 0, i32 8, !dbg !19641
  %arrayidx27 = getelementptr [4 x i8], [4 x i8]* %fill, i64 0, i64 0, !dbg !19640
  %48 = load i8, i8* %arrayidx27, align 8, !dbg !19640
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19642
  %silence = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 33, !dbg !19643
  store i8 %48, i8* %silence, align 4, !dbg !19644
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19645
  %silence_data = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %50, i32 0, i32 34, !dbg !19646
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %silence_data, i64 0, i64 0, !dbg !19647
  %51 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19648
  %silence28 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %51, i32 0, i32 33, !dbg !19649
  %52 = load i8, i8* %silence28, align 4, !dbg !19649
  %conv29 = zext i8 %52 to i32, !dbg !19648
  %53 = trunc i32 %conv29 to i8, !dbg !19647
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 %53, i64 128, i1 false), !dbg !19647
  br label %sw.epilog, !dbg !19650

sw.bb30:                                          ; preds = %entry
  %54 = load i32, i32* @debug, align 4, !dbg !19651
  %and31 = and i32 %54, 2097152, !dbg !19653
  %tobool32 = icmp ne i32 %and31, 0, !dbg !19653
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !19654

if.then33:                                        ; preds = %sw.bb30
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.166, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_bctrl, i64 0, i64 0)) #13, !dbg !19655
  br label %if.end35, !dbg !19655

if.end35:                                         ; preds = %if.then33, %sw.bb30
  %55 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19656
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %55, i32 0, i32 2, !dbg !19657
  %56 = load i32, i32* %id, align 8, !dbg !19657
  %57 = load %struct.dsp_features*, %struct.dsp_features** %features, align 8, !dbg !19658
  %hfc_id = getelementptr inbounds %struct.dsp_features, %struct.dsp_features* %57, i32 0, i32 0, !dbg !19659
  store i32 %56, i32* %hfc_id, align 4, !dbg !19660
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19661
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %58, i32 0, i32 31, !dbg !19663
  %call36 = call zeroext i1 @test_bit(i64 6, i64* %chip) #12, !dbg !19664
  br i1 %call36, label %if.then37, label %if.end38, !dbg !19665

if.then37:                                        ; preds = %if.end35
  %59 = load %struct.dsp_features*, %struct.dsp_features** %features, align 8, !dbg !19666
  %hfc_dtmf = getelementptr inbounds %struct.dsp_features, %struct.dsp_features* %59, i32 0, i32 1, !dbg !19667
  store i32 1, i32* %hfc_dtmf, align 4, !dbg !19668
  br label %if.end38, !dbg !19666

if.end38:                                         ; preds = %if.then37, %if.end35
  %60 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19669
  %chip39 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %60, i32 0, i32 31, !dbg !19671
  %call40 = call zeroext i1 @test_bit(i64 7, i64* %chip39) #12, !dbg !19672
  br i1 %call40, label %if.then41, label %if.end42, !dbg !19673

if.then41:                                        ; preds = %if.end38
  %61 = load %struct.dsp_features*, %struct.dsp_features** %features, align 8, !dbg !19674
  %hfc_conf = getelementptr inbounds %struct.dsp_features, %struct.dsp_features* %61, i32 0, i32 2, !dbg !19675
  store i32 1, i32* %hfc_conf, align 4, !dbg !19676
  br label %if.end42, !dbg !19674

if.end42:                                         ; preds = %if.then41, %if.end38
  %62 = load %struct.dsp_features*, %struct.dsp_features** %features, align 8, !dbg !19677
  %hfc_loops = getelementptr inbounds %struct.dsp_features, %struct.dsp_features* %62, i32 0, i32 3, !dbg !19678
  store i32 0, i32* %hfc_loops, align 4, !dbg !19679
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19680
  %chip43 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %63, i32 0, i32 31, !dbg !19682
  %call44 = call zeroext i1 @test_bit(i64 13, i64* %chip43) #12, !dbg !19683
  br i1 %call44, label %if.then45, label %if.else, !dbg !19684

if.then45:                                        ; preds = %if.end42
  %64 = load %struct.dsp_features*, %struct.dsp_features** %features, align 8, !dbg !19685
  %hfc_echocanhw = getelementptr inbounds %struct.dsp_features, %struct.dsp_features* %64, i32 0, i32 4, !dbg !19687
  store i32 1, i32* %hfc_echocanhw, align 4, !dbg !19688
  br label %if.end46, !dbg !19689

if.else:                                          ; preds = %if.end42
  %65 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19690
  %pcm = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %65, i32 0, i32 3, !dbg !19692
  %66 = load i32, i32* %pcm, align 4, !dbg !19692
  %67 = load %struct.dsp_features*, %struct.dsp_features** %features, align 8, !dbg !19693
  %pcm_id = getelementptr inbounds %struct.dsp_features, %struct.dsp_features* %67, i32 0, i32 5, !dbg !19694
  store i32 %66, i32* %pcm_id, align 4, !dbg !19695
  %68 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19696
  %slots = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %68, i32 0, i32 41, !dbg !19697
  %69 = load i32, i32* %slots, align 8, !dbg !19697
  %70 = load %struct.dsp_features*, %struct.dsp_features** %features, align 8, !dbg !19698
  %pcm_slots = getelementptr inbounds %struct.dsp_features, %struct.dsp_features* %70, i32 0, i32 6, !dbg !19699
  store i32 %69, i32* %pcm_slots, align 4, !dbg !19700
  %71 = load %struct.dsp_features*, %struct.dsp_features** %features, align 8, !dbg !19701
  %pcm_banks = getelementptr inbounds %struct.dsp_features, %struct.dsp_features* %71, i32 0, i32 7, !dbg !19702
  store i32 2, i32* %pcm_banks, align 4, !dbg !19703
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then45
  br label %sw.epilog, !dbg !19704

sw.bb47:                                          ; preds = %entry
  %72 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19705
  %p148 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %72, i32 0, i32 2, !dbg !19706
  %73 = load i32, i32* %p148, align 4, !dbg !19706
  %and49 = and i32 %73, 255, !dbg !19707
  store i32 %and49, i32* %slot_tx, align 4, !dbg !19708
  %74 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19709
  %p150 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %74, i32 0, i32 2, !dbg !19710
  %75 = load i32, i32* %p150, align 4, !dbg !19710
  %shr = ashr i32 %75, 8, !dbg !19711
  store i32 %shr, i32* %bank_tx, align 4, !dbg !19712
  %76 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19713
  %p2 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %76, i32 0, i32 3, !dbg !19714
  %77 = load i32, i32* %p2, align 4, !dbg !19714
  %and51 = and i32 %77, 255, !dbg !19715
  store i32 %and51, i32* %slot_rx, align 4, !dbg !19716
  %78 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19717
  %p252 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %78, i32 0, i32 3, !dbg !19718
  %79 = load i32, i32* %p252, align 4, !dbg !19718
  %shr53 = ashr i32 %79, 8, !dbg !19719
  store i32 %shr53, i32* %bank_rx, align 4, !dbg !19720
  %80 = load i32, i32* @debug, align 4, !dbg !19721
  %and54 = and i32 %80, 2097152, !dbg !19723
  %tobool55 = icmp ne i32 %and54, 0, !dbg !19723
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !19724

if.then56:                                        ; preds = %sw.bb47
  %81 = load i32, i32* %slot_tx, align 4, !dbg !19725
  %82 = load i32, i32* %bank_tx, align 4, !dbg !19726
  %83 = load i32, i32* %slot_rx, align 4, !dbg !19727
  %84 = load i32, i32* %bank_rx, align 4, !dbg !19728
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.167, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_bctrl, i64 0, i64 0), i32 %81, i32 %82, i32 %83, i32 %84) #13, !dbg !19729
  br label %if.end58, !dbg !19729

if.end58:                                         ; preds = %if.then56, %sw.bb47
  %85 = load i32, i32* %slot_tx, align 4, !dbg !19730
  %86 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19732
  %slots59 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %86, i32 0, i32 41, !dbg !19733
  %87 = load i32, i32* %slots59, align 8, !dbg !19733
  %cmp = icmp ult i32 %85, %87, !dbg !19734
  br i1 %cmp, label %land.lhs.true, label %if.else72, !dbg !19735

land.lhs.true:                                    ; preds = %if.end58
  %88 = load i32, i32* %bank_tx, align 4, !dbg !19736
  %cmp61 = icmp sle i32 %88, 2, !dbg !19737
  br i1 %cmp61, label %land.lhs.true63, label %if.else72, !dbg !19738

land.lhs.true63:                                  ; preds = %land.lhs.true
  %89 = load i32, i32* %slot_rx, align 4, !dbg !19739
  %90 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19740
  %slots64 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %90, i32 0, i32 41, !dbg !19741
  %91 = load i32, i32* %slots64, align 8, !dbg !19741
  %cmp65 = icmp ult i32 %89, %91, !dbg !19742
  br i1 %cmp65, label %land.lhs.true67, label %if.else72, !dbg !19743

land.lhs.true67:                                  ; preds = %land.lhs.true63
  %92 = load i32, i32* %bank_rx, align 4, !dbg !19744
  %cmp68 = icmp sle i32 %92, 2, !dbg !19745
  br i1 %cmp68, label %if.then70, label %if.else72, !dbg !19746

if.then70:                                        ; preds = %land.lhs.true67
  %93 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19747
  %94 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19748
  %slot71 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %94, i32 0, i32 6, !dbg !19749
  %95 = load i32, i32* %slot71, align 8, !dbg !19749
  %96 = load i32, i32* %slot_tx, align 4, !dbg !19750
  %97 = load i32, i32* %bank_tx, align 4, !dbg !19751
  %98 = load i32, i32* %slot_rx, align 4, !dbg !19752
  %99 = load i32, i32* %bank_rx, align 4, !dbg !19753
  call void @hfcmulti_pcm(%struct.hfc_multi* %93, i32 %95, i32 %96, i32 %97, i32 %98, i32 %99) #12, !dbg !19754
  br label %if.end74, !dbg !19754

if.else72:                                        ; preds = %land.lhs.true67, %land.lhs.true63, %land.lhs.true, %if.end58
  %100 = load i32, i32* %slot_tx, align 4, !dbg !19755
  %101 = load i32, i32* %bank_tx, align 4, !dbg !19757
  %102 = load i32, i32* %slot_rx, align 4, !dbg !19758
  %103 = load i32, i32* %bank_rx, align 4, !dbg !19759
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_bctrl, i64 0, i64 0), i32 %100, i32 %101, i32 %102, i32 %103) #13, !dbg !19760
  store i32 -22, i32* %ret, align 4, !dbg !19761
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then70
  br label %sw.epilog, !dbg !19762

sw.bb75:                                          ; preds = %entry
  %104 = load i32, i32* @debug, align 4, !dbg !19763
  %and76 = and i32 %104, 2097152, !dbg !19765
  %tobool77 = icmp ne i32 %and76, 0, !dbg !19765
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !19766

if.then78:                                        ; preds = %sw.bb75
  %call79 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_bctrl, i64 0, i64 0)) #13, !dbg !19767
  br label %if.end80, !dbg !19767

if.end80:                                         ; preds = %if.then78, %sw.bb75
  %105 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19768
  %106 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19769
  %slot81 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %106, i32 0, i32 6, !dbg !19770
  %107 = load i32, i32* %slot81, align 8, !dbg !19770
  call void @hfcmulti_pcm(%struct.hfc_multi* %105, i32 %107, i32 -1, i32 0, i32 -1, i32 0) #12, !dbg !19771
  br label %sw.epilog, !dbg !19772

sw.bb82:                                          ; preds = %entry
  %108 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19773
  %p183 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %108, i32 0, i32 2, !dbg !19774
  %109 = load i32, i32* %p183, align 4, !dbg !19774
  %and84 = and i32 %109, 255, !dbg !19775
  store i32 %and84, i32* %num, align 4, !dbg !19776
  %110 = load i32, i32* @debug, align 4, !dbg !19777
  %and85 = and i32 %110, 2097152, !dbg !19779
  %tobool86 = icmp ne i32 %and85, 0, !dbg !19779
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !19780

if.then87:                                        ; preds = %sw.bb82
  %111 = load i32, i32* %num, align 4, !dbg !19781
  %call88 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_bctrl, i64 0, i64 0), i32 %111) #13, !dbg !19782
  br label %if.end89, !dbg !19782

if.end89:                                         ; preds = %if.then87, %sw.bb82
  %112 = load i32, i32* %num, align 4, !dbg !19783
  %cmp90 = icmp sle i32 %112, 7, !dbg !19785
  br i1 %cmp90, label %if.then92, label %if.else94, !dbg !19786

if.then92:                                        ; preds = %if.end89
  %113 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19787
  %114 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19788
  %slot93 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %114, i32 0, i32 6, !dbg !19789
  %115 = load i32, i32* %slot93, align 8, !dbg !19789
  %116 = load i32, i32* %num, align 4, !dbg !19790
  call void @hfcmulti_conf(%struct.hfc_multi* %113, i32 %115, i32 %116) #12, !dbg !19791
  br label %if.end96, !dbg !19791

if.else94:                                        ; preds = %if.end89
  %117 = load i32, i32* %num, align 4, !dbg !19792
  %call95 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_bctrl, i64 0, i64 0), i32 %117) #13, !dbg !19794
  store i32 -22, i32* %ret, align 4, !dbg !19795
  br label %if.end96

if.end96:                                         ; preds = %if.else94, %if.then92
  br label %sw.epilog, !dbg !19796

sw.bb97:                                          ; preds = %entry
  %118 = load i32, i32* @debug, align 4, !dbg !19797
  %and98 = and i32 %118, 2097152, !dbg !19799
  %tobool99 = icmp ne i32 %and98, 0, !dbg !19799
  br i1 %tobool99, label %if.then100, label %if.end102, !dbg !19800

if.then100:                                       ; preds = %sw.bb97
  %call101 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_bctrl, i64 0, i64 0)) #13, !dbg !19801
  br label %if.end102, !dbg !19801

if.end102:                                        ; preds = %if.then100, %sw.bb97
  %119 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19802
  %120 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19803
  %slot103 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %120, i32 0, i32 6, !dbg !19804
  %121 = load i32, i32* %slot103, align 8, !dbg !19804
  call void @hfcmulti_conf(%struct.hfc_multi* %119, i32 %121, i32 -1) #12, !dbg !19805
  br label %sw.epilog, !dbg !19806

sw.bb104:                                         ; preds = %entry
  %122 = load i32, i32* @debug, align 4, !dbg !19807
  %and105 = and i32 %122, 2097152, !dbg !19809
  %tobool106 = icmp ne i32 %and105, 0, !dbg !19809
  br i1 %tobool106, label %if.then107, label %if.end109, !dbg !19810

if.then107:                                       ; preds = %sw.bb104
  %call108 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.173, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_bctrl, i64 0, i64 0)) #13, !dbg !19811
  br label %if.end109, !dbg !19811

if.end109:                                        ; preds = %if.then107, %sw.bb104
  %123 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19812
  %chip110 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %123, i32 0, i32 31, !dbg !19814
  %call111 = call zeroext i1 @test_bit(i64 13, i64* %chip110) #12, !dbg !19815
  br i1 %call111, label %if.then112, label %if.else115, !dbg !19816

if.then112:                                       ; preds = %if.end109
  %124 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19817
  %125 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19818
  %slot113 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %125, i32 0, i32 6, !dbg !19819
  %126 = load i32, i32* %slot113, align 8, !dbg !19819
  %127 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19820
  %p1114 = getelementptr inbounds %struct.mISDN_ctrl_req, %struct.mISDN_ctrl_req* %127, i32 0, i32 2, !dbg !19821
  %128 = load i32, i32* %p1114, align 4, !dbg !19821
  call void @vpm_echocan_on(%struct.hfc_multi* %124, i32 %126, i32 %128) #12, !dbg !19822
  br label %if.end116, !dbg !19822

if.else115:                                       ; preds = %if.end109
  store i32 -22, i32* %ret, align 4, !dbg !19823
  br label %if.end116

if.end116:                                        ; preds = %if.else115, %if.then112
  br label %sw.epilog, !dbg !19824

sw.bb117:                                         ; preds = %entry
  %129 = load i32, i32* @debug, align 4, !dbg !19825
  %and118 = and i32 %129, 2097152, !dbg !19827
  %tobool119 = icmp ne i32 %and118, 0, !dbg !19827
  br i1 %tobool119, label %if.then120, label %if.end122, !dbg !19828

if.then120:                                       ; preds = %sw.bb117
  %call121 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.channel_bctrl, i64 0, i64 0)) #13, !dbg !19829
  br label %if.end122, !dbg !19829

if.end122:                                        ; preds = %if.then120, %sw.bb117
  %130 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19830
  %chip123 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %130, i32 0, i32 31, !dbg !19832
  %call124 = call zeroext i1 @test_bit(i64 13, i64* %chip123) #12, !dbg !19833
  br i1 %call124, label %if.then125, label %if.else127, !dbg !19834

if.then125:                                       ; preds = %if.end122
  %131 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !19835
  %132 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19836
  %slot126 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %132, i32 0, i32 6, !dbg !19837
  %133 = load i32, i32* %slot126, align 8, !dbg !19837
  call void @vpm_echocan_off(%struct.hfc_multi* %131, i32 %133) #12, !dbg !19838
  br label %if.end128, !dbg !19838

if.else127:                                       ; preds = %if.end122
  store i32 -22, i32* %ret, align 4, !dbg !19839
  br label %if.end128

if.end128:                                        ; preds = %if.else127, %if.then125
  br label %sw.epilog, !dbg !19840

sw.default:                                       ; preds = %entry
  %134 = load %struct.bchannel*, %struct.bchannel** %bch.addr, align 8, !dbg !19841
  %135 = load %struct.mISDN_ctrl_req*, %struct.mISDN_ctrl_req** %cq.addr, align 8, !dbg !19842
  %call129 = call i32 @mISDN_ctrl_bchannel(%struct.bchannel* %134, %struct.mISDN_ctrl_req* %135) #12, !dbg !19843
  store i32 %call129, i32* %ret, align 4, !dbg !19844
  br label %sw.epilog, !dbg !19845

sw.epilog:                                        ; preds = %sw.default, %if.end128, %if.end116, %if.end102, %if.end96, %if.end80, %if.end74, %if.end46, %sw.bb25, %if.end24, %sw.bb
  %136 = load i32, i32* %ret, align 4, !dbg !19846
  ret i32 %136, !dbg !19847
}

; Function Attrs: noredzone
declare dso_local i32 @mISDN_ctrl_bchannel(%struct.bchannel*, %struct.mISDN_ctrl_req*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfcmulti_pcm(%struct.hfc_multi* %hc, i32 %ch, i32 %slot_tx, i32 %bank_tx, i32 %slot_rx, i32 %bank_rx) #2 !dbg !19848 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %ch.addr = alloca i32, align 4
  %slot_tx.addr = alloca i32, align 4
  %bank_tx.addr = alloca i32, align 4
  %slot_rx.addr = alloca i32, align 4
  %bank_rx.addr = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !19851, metadata !DIExpression()), !dbg !19852
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !19853, metadata !DIExpression()), !dbg !19854
  store i32 %slot_tx, i32* %slot_tx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot_tx.addr, metadata !19855, metadata !DIExpression()), !dbg !19856
  store i32 %bank_tx, i32* %bank_tx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bank_tx.addr, metadata !19857, metadata !DIExpression()), !dbg !19858
  store i32 %slot_rx, i32* %slot_rx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot_rx.addr, metadata !19859, metadata !DIExpression()), !dbg !19860
  store i32 %bank_rx, i32* %bank_rx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bank_rx.addr, metadata !19861, metadata !DIExpression()), !dbg !19862
  %0 = load i32, i32* %slot_tx.addr, align 4, !dbg !19863
  %cmp = icmp slt i32 %0, 0, !dbg !19865
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19866

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %slot_rx.addr, align 4, !dbg !19867
  %cmp1 = icmp slt i32 %1, 0, !dbg !19868
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !19869

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %bank_tx.addr, align 4, !dbg !19870
  %cmp3 = icmp slt i32 %2, 0, !dbg !19871
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !19872

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %bank_rx.addr, align 4, !dbg !19873
  %cmp5 = icmp slt i32 %3, 0, !dbg !19874
  br i1 %cmp5, label %if.then, label %if.end, !dbg !19875

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19876
  %5 = load i32, i32* %ch.addr, align 4, !dbg !19878
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19879
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 60, !dbg !19880
  %7 = load i32, i32* %ch.addr, align 4, !dbg !19881
  %idxprom = sext i32 %7 to i64, !dbg !19879
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !19879
  %protocol = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 12, !dbg !19882
  %8 = load i32, i32* %protocol, align 4, !dbg !19882
  %call = call i32 @mode_hfcmulti(%struct.hfc_multi* %4, i32 %5, i32 %8, i32 -1, i32 0, i32 -1, i32 0) #12, !dbg !19883
  br label %return, !dbg !19884

if.end:                                           ; preds = %lor.lhs.false4
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19885
  %10 = load i32, i32* %ch.addr, align 4, !dbg !19886
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19887
  %chan6 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %11, i32 0, i32 60, !dbg !19888
  %12 = load i32, i32* %ch.addr, align 4, !dbg !19889
  %idxprom7 = sext i32 %12 to i64, !dbg !19887
  %arrayidx8 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan6, i64 0, i64 %idxprom7, !dbg !19887
  %protocol9 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx8, i32 0, i32 12, !dbg !19890
  %13 = load i32, i32* %protocol9, align 4, !dbg !19890
  %14 = load i32, i32* %slot_tx.addr, align 4, !dbg !19891
  %15 = load i32, i32* %bank_tx.addr, align 4, !dbg !19892
  %16 = load i32, i32* %slot_rx.addr, align 4, !dbg !19893
  %17 = load i32, i32* %bank_rx.addr, align 4, !dbg !19894
  %call10 = call i32 @mode_hfcmulti(%struct.hfc_multi* %9, i32 %10, i32 %13, i32 %14, i32 %15, i32 %16, i32 %17) #12, !dbg !19895
  br label %return, !dbg !19896

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !19896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfcmulti_conf(%struct.hfc_multi* %hc, i32 %ch, i32 %num) #2 !dbg !19897 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %ch.addr = alloca i32, align 4
  %num.addr = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !19900, metadata !DIExpression()), !dbg !19901
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !19902, metadata !DIExpression()), !dbg !19903
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !19904, metadata !DIExpression()), !dbg !19905
  %0 = load i32, i32* %num.addr, align 4, !dbg !19906
  %cmp = icmp sge i32 %0, 0, !dbg !19908
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !19909

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %num.addr, align 4, !dbg !19910
  %cmp1 = icmp sle i32 %1, 7, !dbg !19911
  br i1 %cmp1, label %if.then, label %if.else, !dbg !19912

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %num.addr, align 4, !dbg !19913
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19914
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 60, !dbg !19915
  %4 = load i32, i32* %ch.addr, align 4, !dbg !19916
  %idxprom = sext i32 %4 to i64, !dbg !19914
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !19914
  %conf = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 17, !dbg !19917
  store i32 %2, i32* %conf, align 8, !dbg !19918
  br label %if.end, !dbg !19914

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19919
  %chan2 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 60, !dbg !19920
  %6 = load i32, i32* %ch.addr, align 4, !dbg !19921
  %idxprom3 = sext i32 %6 to i64, !dbg !19919
  %arrayidx4 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan2, i64 0, i64 %idxprom3, !dbg !19919
  %conf5 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx4, i32 0, i32 17, !dbg !19922
  store i32 -1, i32* %conf5, align 8, !dbg !19923
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19924
  %8 = load i32, i32* %ch.addr, align 4, !dbg !19925
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19926
  %chan6 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %9, i32 0, i32 60, !dbg !19927
  %10 = load i32, i32* %ch.addr, align 4, !dbg !19928
  %idxprom7 = sext i32 %10 to i64, !dbg !19926
  %arrayidx8 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan6, i64 0, i64 %idxprom7, !dbg !19926
  %protocol = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx8, i32 0, i32 12, !dbg !19929
  %11 = load i32, i32* %protocol, align 4, !dbg !19929
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19930
  %chan9 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %12, i32 0, i32 60, !dbg !19931
  %13 = load i32, i32* %ch.addr, align 4, !dbg !19932
  %idxprom10 = sext i32 %13 to i64, !dbg !19930
  %arrayidx11 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan9, i64 0, i64 %idxprom10, !dbg !19930
  %slot_tx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx11, i32 0, i32 13, !dbg !19933
  %14 = load i32, i32* %slot_tx, align 8, !dbg !19933
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19934
  %chan12 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 60, !dbg !19935
  %16 = load i32, i32* %ch.addr, align 4, !dbg !19936
  %idxprom13 = sext i32 %16 to i64, !dbg !19934
  %arrayidx14 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan12, i64 0, i64 %idxprom13, !dbg !19934
  %bank_tx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx14, i32 0, i32 14, !dbg !19937
  %17 = load i32, i32* %bank_tx, align 4, !dbg !19937
  %18 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19938
  %chan15 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %18, i32 0, i32 60, !dbg !19939
  %19 = load i32, i32* %ch.addr, align 4, !dbg !19940
  %idxprom16 = sext i32 %19 to i64, !dbg !19938
  %arrayidx17 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan15, i64 0, i64 %idxprom16, !dbg !19938
  %slot_rx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx17, i32 0, i32 15, !dbg !19941
  %20 = load i32, i32* %slot_rx, align 8, !dbg !19941
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19942
  %chan18 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 60, !dbg !19943
  %22 = load i32, i32* %ch.addr, align 4, !dbg !19944
  %idxprom19 = sext i32 %22 to i64, !dbg !19942
  %arrayidx20 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan18, i64 0, i64 %idxprom19, !dbg !19942
  %bank_rx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx20, i32 0, i32 16, !dbg !19945
  %23 = load i32, i32* %bank_rx, align 4, !dbg !19945
  %call = call i32 @mode_hfcmulti(%struct.hfc_multi* %7, i32 %8, i32 %11, i32 %14, i32 %17, i32 %20, i32 %23) #12, !dbg !19946
  ret void, !dbg !19947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vpm_echocan_on(%struct.hfc_multi* %hc, i32 %ch, i32 %taps) #2 !dbg !19948 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %ch.addr = alloca i32, align 4
  %taps.addr = alloca i32, align 4
  %timeslot = alloca i32, align 4
  %unit = alloca i32, align 4
  %bch = alloca %struct.bchannel*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !19949, metadata !DIExpression()), !dbg !19950
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !19951, metadata !DIExpression()), !dbg !19952
  store i32 %taps, i32* %taps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %taps.addr, metadata !19953, metadata !DIExpression()), !dbg !19954
  call void @llvm.dbg.declare(metadata i32* %timeslot, metadata !19955, metadata !DIExpression()), !dbg !19956
  call void @llvm.dbg.declare(metadata i32* %unit, metadata !19957, metadata !DIExpression()), !dbg !19958
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !19959, metadata !DIExpression()), !dbg !19960
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19961
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 60, !dbg !19962
  %1 = load i32, i32* %ch.addr, align 4, !dbg !19963
  %idxprom = sext i32 %1 to i64, !dbg !19961
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !19961
  %bch1 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 1, !dbg !19964
  %2 = load %struct.bchannel*, %struct.bchannel** %bch1, align 8, !dbg !19964
  store %struct.bchannel* %2, %struct.bchannel** %bch, align 8, !dbg !19960
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19965
  %chan2 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 60, !dbg !19967
  %4 = load i32, i32* %ch.addr, align 4, !dbg !19968
  %idxprom3 = sext i32 %4 to i64, !dbg !19965
  %arrayidx4 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan2, i64 0, i64 %idxprom3, !dbg !19965
  %protocol = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx4, i32 0, i32 12, !dbg !19969
  %5 = load i32, i32* %protocol, align 4, !dbg !19969
  %cmp = icmp ne i32 %5, 33, !dbg !19970
  br i1 %cmp, label %if.then, label %if.end, !dbg !19971

if.then:                                          ; preds = %entry
  br label %return, !dbg !19972

if.end:                                           ; preds = %entry
  %6 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !19973
  %tobool = icmp ne %struct.bchannel* %6, null, !dbg !19973
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !19975

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !19976

if.end6:                                          ; preds = %if.end
  %7 = load i32, i32* %ch.addr, align 4, !dbg !19977
  %div = sdiv i32 %7, 4, !dbg !19978
  %mul = mul i32 %div, 8, !dbg !19979
  %8 = load i32, i32* %ch.addr, align 4, !dbg !19980
  %rem = srem i32 %8, 4, !dbg !19981
  %mul7 = mul i32 %rem, 4, !dbg !19982
  %add = add i32 %mul, %mul7, !dbg !19983
  %add8 = add i32 %add, 1, !dbg !19984
  store i32 %add8, i32* %timeslot, align 4, !dbg !19985
  %9 = load i32, i32* %ch.addr, align 4, !dbg !19986
  %rem9 = srem i32 %9, 4, !dbg !19987
  store i32 %rem9, i32* %unit, align 4, !dbg !19988
  %10 = load i32, i32* %taps.addr, align 4, !dbg !19989
  %11 = load i32, i32* %timeslot, align 4, !dbg !19990
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.175, i64 0, i64 0), i32 %10, i32 %11) #13, !dbg !19991
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !19992
  %13 = load i32, i32* %unit, align 4, !dbg !19993
  %14 = load i32, i32* %timeslot, align 4, !dbg !19994
  %conv = trunc i32 %14 to i16, !dbg !19994
  call void @vpm_out(%struct.hfc_multi* %12, i32 %13, i16 zeroext %conv, i8 zeroext 126) #12, !dbg !19995
  br label %return, !dbg !19996

return:                                           ; preds = %if.end6, %if.then5, %if.then
  ret void, !dbg !19996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vpm_echocan_off(%struct.hfc_multi* %hc, i32 %ch) #2 !dbg !19997 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %ch.addr = alloca i32, align 4
  %timeslot = alloca i32, align 4
  %unit = alloca i32, align 4
  %bch = alloca %struct.bchannel*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !19998, metadata !DIExpression()), !dbg !19999
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !20000, metadata !DIExpression()), !dbg !20001
  call void @llvm.dbg.declare(metadata i32* %timeslot, metadata !20002, metadata !DIExpression()), !dbg !20003
  call void @llvm.dbg.declare(metadata i32* %unit, metadata !20004, metadata !DIExpression()), !dbg !20005
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !20006, metadata !DIExpression()), !dbg !20007
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20008
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 60, !dbg !20009
  %1 = load i32, i32* %ch.addr, align 4, !dbg !20010
  %idxprom = sext i32 %1 to i64, !dbg !20008
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !20008
  %bch1 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 1, !dbg !20011
  %2 = load %struct.bchannel*, %struct.bchannel** %bch1, align 8, !dbg !20011
  store %struct.bchannel* %2, %struct.bchannel** %bch, align 8, !dbg !20007
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20012
  %chan2 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 60, !dbg !20014
  %4 = load i32, i32* %ch.addr, align 4, !dbg !20015
  %idxprom3 = sext i32 %4 to i64, !dbg !20012
  %arrayidx4 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan2, i64 0, i64 %idxprom3, !dbg !20012
  %protocol = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx4, i32 0, i32 12, !dbg !20016
  %5 = load i32, i32* %protocol, align 4, !dbg !20016
  %cmp = icmp ne i32 %5, 33, !dbg !20017
  br i1 %cmp, label %if.then, label %if.end, !dbg !20018

if.then:                                          ; preds = %entry
  br label %return, !dbg !20019

if.end:                                           ; preds = %entry
  %6 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !20020
  %tobool = icmp ne %struct.bchannel* %6, null, !dbg !20020
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !20022

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !20023

if.end6:                                          ; preds = %if.end
  %7 = load i32, i32* %ch.addr, align 4, !dbg !20024
  %div = sdiv i32 %7, 4, !dbg !20025
  %mul = mul i32 %div, 8, !dbg !20026
  %8 = load i32, i32* %ch.addr, align 4, !dbg !20027
  %rem = srem i32 %8, 4, !dbg !20028
  %mul7 = mul i32 %rem, 4, !dbg !20029
  %add = add i32 %mul, %mul7, !dbg !20030
  %add8 = add i32 %add, 1, !dbg !20031
  store i32 %add8, i32* %timeslot, align 4, !dbg !20032
  %9 = load i32, i32* %ch.addr, align 4, !dbg !20033
  %rem9 = srem i32 %9, 4, !dbg !20034
  store i32 %rem9, i32* %unit, align 4, !dbg !20035
  %10 = load i32, i32* %timeslot, align 4, !dbg !20036
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.176, i64 0, i64 0), i32 %10) #13, !dbg !20037
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20038
  %12 = load i32, i32* %unit, align 4, !dbg !20039
  %13 = load i32, i32* %timeslot, align 4, !dbg !20040
  %conv = trunc i32 %13 to i16, !dbg !20040
  call void @vpm_out(%struct.hfc_multi* %11, i32 %12, i16 zeroext %conv, i8 zeroext 1) #12, !dbg !20041
  br label %return, !dbg !20042

return:                                           ; preds = %if.end6, %if.then5, %if.then
  ret void, !dbg !20042
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !20043 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !20046, metadata !DIExpression()), !dbg !20047
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !20048, metadata !DIExpression()), !dbg !20049
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !20050, metadata !DIExpression()), !dbg !20051
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20052
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !20054
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !20055
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #12, !dbg !20056
  br i1 %call, label %if.end, label %if.then, !dbg !20057

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !20058

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20059
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !20060
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !20061
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !20062
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !20063
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20064
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !20065
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !20066
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !20067
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20068
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !20069
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !20070
  br label %do.body, !dbg !20071

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !20072

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !20074

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !20072

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20076
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !20076
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !20076
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !20076
  br label %do.end7, !dbg !20076

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !20072

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !20078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !20079 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !20082, metadata !DIExpression()), !dbg !20083
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !20084, metadata !DIExpression()), !dbg !20085
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !20086, metadata !DIExpression()), !dbg !20087
  ret i1 true, !dbg !20088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !20089 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !20094, metadata !DIExpression()), !dbg !20095
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !20096, metadata !DIExpression()), !dbg !20097
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !20098, metadata !DIExpression()), !dbg !20099
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20100, metadata !DIExpression()), !dbg !20101
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !20102, metadata !DIExpression()), !dbg !20103
  %0 = load i32, i32* %irq.addr, align 4, !dbg !20104
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !20105
  %2 = load i64, i64* %flags.addr, align 8, !dbg !20106
  %3 = load i8*, i8** %name.addr, align 8, !dbg !20107
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !20108
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #12, !dbg !20109
  ret i32 %call, !dbg !20110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hfcmulti_interrupt(i32 %intno, i8* %dev_id) #2 !dbg !9993 {
entry:
  %lock.addr.i184 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i184, metadata !11869, metadata !DIExpression()), !dbg !20111
  %lock.addr.i182 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i182, metadata !10043, metadata !DIExpression()), !dbg !20113
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !20117
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i180 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i180, metadata !11869, metadata !DIExpression()), !dbg !20118
  %lock.addr.i178 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i178, metadata !10052, metadata !DIExpression()), !dbg !20120
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11875, metadata !DIExpression()), !dbg !20127
  %retval = alloca i32, align 4
  %intno.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %hc = alloca %struct.hfc_multi*, align 8
  %dch = alloca %struct.dchannel*, align 8
  %r_irq_statech = alloca i8, align 1
  %status = alloca i8, align 1
  %r_irq_misc = alloca i8, align 1
  %r_irq_oview = alloca i8, align 1
  %i = alloca i32, align 4
  %plx_acc = alloca i8*, align 8
  %wval = alloca i16, align 2
  %e1_syncsta = alloca i8, align 1
  %temp = alloca i8, align 1
  %temp2 = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store i32 %intno, i32* %intno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intno.addr, metadata !20129, metadata !DIExpression()), !dbg !20130
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !20131, metadata !DIExpression()), !dbg !20132
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc, metadata !20133, metadata !DIExpression()), !dbg !20134
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !20135
  %1 = bitcast i8* %0 to %struct.hfc_multi*, !dbg !20135
  store %struct.hfc_multi* %1, %struct.hfc_multi** %hc, align 8, !dbg !20134
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !20136, metadata !DIExpression()), !dbg !20137
  call void @llvm.dbg.declare(metadata i8* %r_irq_statech, metadata !20138, metadata !DIExpression()), !dbg !20139
  call void @llvm.dbg.declare(metadata i8* %status, metadata !20140, metadata !DIExpression()), !dbg !20141
  call void @llvm.dbg.declare(metadata i8* %r_irq_misc, metadata !20142, metadata !DIExpression()), !dbg !20143
  call void @llvm.dbg.declare(metadata i8* %r_irq_oview, metadata !20144, metadata !DIExpression()), !dbg !20145
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20146, metadata !DIExpression()), !dbg !20147
  call void @llvm.dbg.declare(metadata i8** %plx_acc, metadata !20148, metadata !DIExpression()), !dbg !20149
  call void @llvm.dbg.declare(metadata i16* %wval, metadata !20150, metadata !DIExpression()), !dbg !20151
  call void @llvm.dbg.declare(metadata i8* %e1_syncsta, metadata !20152, metadata !DIExpression()), !dbg !20153
  call void @llvm.dbg.declare(metadata i8* %temp, metadata !20154, metadata !DIExpression()), !dbg !20155
  call void @llvm.dbg.declare(metadata i8* %temp2, metadata !20156, metadata !DIExpression()), !dbg !20157
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20158, metadata !DIExpression()), !dbg !20159
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20160
  %tobool = icmp ne %struct.hfc_multi* %2, null, !dbg !20160
  br i1 %tobool, label %if.end, label %if.then, !dbg !20162

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.203, i64 0, i64 0)) #13, !dbg !20163
  store i32 0, i32* %retval, align 4, !dbg !20165
  br label %return, !dbg !20165

if.end:                                           ; preds = %entry
  %3 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20166
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %3, i32 0, i32 57, !dbg !20167
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20168, !srcloc !11930
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20169
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !20169
  %rlock.i = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !20169
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20170
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 31, !dbg !20171
  %call1 = call zeroext i1 @test_bit(i64 14, i64* %chip) #12, !dbg !20172
  br i1 %call1, label %if.then2, label %if.end27, !dbg !20173

if.then2:                                         ; preds = %if.end
  br label %do.body, !dbg !20174

do.body:                                          ; preds = %if.then2
  br label %do.body3, !dbg !20175

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20176, metadata !DIExpression()), !dbg !20178
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20179, metadata !DIExpression()), !dbg !20178
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !20178
  %conv = zext i1 %cmp to i32, !dbg !20178
  store i32 1, i32* %tmp, align 4, !dbg !20178
  %7 = load i32, i32* %tmp, align 4, !dbg !20178
  br label %do.body4, !dbg !20180

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !20181

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !20182

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !20184, metadata !DIExpression()), !dbg !20187
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !20188, metadata !DIExpression()), !dbg !20187
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !20187
  %conv10 = zext i1 %cmp9 to i32, !dbg !20187
  store i32 1, i32* %tmp11, align 4, !dbg !20187
  %8 = load i32, i32* %tmp11, align 4, !dbg !20187
  %call12 = call i64 @arch_local_irq_save() #12, !dbg !20189
  store i64 %call12, i64* %flags, align 8, !dbg !20189
  br label %do.end, !dbg !20189

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !20182

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !20181

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20190, !srcloc !20191
  br label %do.body15, !dbg !20190

do.body15:                                        ; preds = %do.body14
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i178, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i178, align 8, !dbg !20192
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !20193
  %rlock.i179 = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !20193
  br label %do.end17, !dbg !20194

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !20190

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !20181

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !20180

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !20175

do.end21:                                         ; preds = %do.end20
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20195
  %plx_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %11, i32 0, i32 23, !dbg !20196
  %12 = load i8*, i8** %plx_membase, align 8, !dbg !20196
  %add.ptr = getelementptr i8, i8* %12, i64 76, !dbg !20197
  store i8* %add.ptr, i8** %plx_acc, align 8, !dbg !20198
  %13 = load i8*, i8** %plx_acc, align 8, !dbg !20199
  %call22 = call zeroext i16 @readw(i8* %13) #12, !dbg !20200
  store i16 %call22, i16* %wval, align 2, !dbg !20201
  %14 = load i64, i64* %flags, align 8, !dbg !20202
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i182, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !20203
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !20203
  store i32 1, i32* %tmp.i, align 4, !dbg !20203
  %15 = load i32, i32* %tmp.i, align 4, !dbg !20203
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !20204
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !20204
  store i32 1, i32* %tmp8.i, align 4, !dbg !20204
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !20204
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !20205
  call void @arch_local_irq_restore(i64 %17) #14, !dbg !20205
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20206, !srcloc !10125
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i182, align 8, !dbg !20207
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !20207
  %rlock.i183 = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !20207
  %20 = load i16, i16* %wval, align 2, !dbg !20208
  %conv23 = zext i16 %20 to i32, !dbg !20208
  %and = and i32 %conv23, 4, !dbg !20210
  %tobool24 = icmp ne i32 %and, 0, !dbg !20210
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !20211

if.then25:                                        ; preds = %do.end21
  br label %irq_notforus, !dbg !20212

if.end26:                                         ; preds = %do.end21
  br label %if.end27, !dbg !20213

if.end27:                                         ; preds = %if.end26, %if.end
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20214
  %HFC_inb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 13, !dbg !20214
  %22 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug, align 8, !dbg !20214
  %23 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20214
  %call28 = call zeroext i8 %22(%struct.hfc_multi* %23, i8 zeroext 28) #12, !dbg !20214
  store i8 %call28, i8* %status, align 1, !dbg !20215
  %24 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20216
  %HFC_inb_nodebug29 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %24, i32 0, i32 13, !dbg !20216
  %25 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug29, align 8, !dbg !20216
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20216
  %call30 = call zeroext i8 %25(%struct.hfc_multi* %26, i8 zeroext 18) #12, !dbg !20216
  store i8 %call30, i8* %r_irq_statech, align 1, !dbg !20217
  %27 = load i8, i8* %r_irq_statech, align 1, !dbg !20218
  %tobool31 = icmp ne i8 %27, 0, !dbg !20218
  br i1 %tobool31, label %if.end36, label %land.lhs.true, !dbg !20220

land.lhs.true:                                    ; preds = %if.end27
  %28 = load i8, i8* %status, align 1, !dbg !20221
  %conv32 = zext i8 %28 to i32, !dbg !20221
  %and33 = and i32 %conv32, 236, !dbg !20222
  %tobool34 = icmp ne i32 %and33, 0, !dbg !20222
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !20223

if.then35:                                        ; preds = %land.lhs.true
  br label %irq_notforus, !dbg !20224

if.end36:                                         ; preds = %land.lhs.true, %if.end27
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20226
  %irqcnt = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %29, i32 0, i32 7, !dbg !20227
  %30 = load i32, i32* %irqcnt, align 4, !dbg !20228
  %inc = add i32 %30, 1, !dbg !20228
  store i32 %inc, i32* %irqcnt, align 4, !dbg !20228
  %31 = load i8, i8* %r_irq_statech, align 1, !dbg !20229
  %tobool37 = icmp ne i8 %31, 0, !dbg !20229
  br i1 %tobool37, label %if.then38, label %if.end43, !dbg !20231

if.then38:                                        ; preds = %if.end36
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20232
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %32, i32 0, i32 4, !dbg !20235
  %33 = load i32, i32* %ctype, align 8, !dbg !20235
  %cmp39 = icmp ne i32 %33, 1, !dbg !20236
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !20237

if.then41:                                        ; preds = %if.then38
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20238
  %35 = load i8, i8* %r_irq_statech, align 1, !dbg !20239
  call void @ph_state_irq(%struct.hfc_multi* %34, i8 zeroext %35) #12, !dbg !20240
  br label %if.end42, !dbg !20240

if.end42:                                         ; preds = %if.then41, %if.then38
  br label %if.end43, !dbg !20241

if.end43:                                         ; preds = %if.end42, %if.end36
  %36 = load i8, i8* %status, align 1, !dbg !20242
  %conv44 = zext i8 %36 to i32, !dbg !20242
  %and45 = and i32 %conv44, 32, !dbg !20244
  %tobool46 = icmp ne i32 %and45, 0, !dbg !20244
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !20245

if.then47:                                        ; preds = %if.end43
  br label %if.end48, !dbg !20245

if.end48:                                         ; preds = %if.then47, %if.end43
  %37 = load i8, i8* %status, align 1, !dbg !20246
  %conv49 = zext i8 %37 to i32, !dbg !20246
  %and50 = and i32 %conv49, 8, !dbg !20248
  %tobool51 = icmp ne i32 %and50, 0, !dbg !20248
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !20249

if.then52:                                        ; preds = %if.end48
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20250
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 10, !dbg !20250
  %39 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !20250
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20250
  call void %39(%struct.hfc_multi* %40, i8 zeroext 14, i8 zeroext 4) #12, !dbg !20250
  br label %if.end53, !dbg !20252

if.end53:                                         ; preds = %if.then52, %if.end48
  %41 = load i8, i8* %status, align 1, !dbg !20253
  %conv54 = zext i8 %41 to i32, !dbg !20253
  %and55 = and i32 %conv54, 64, !dbg !20255
  %tobool56 = icmp ne i32 %and55, 0, !dbg !20255
  br i1 %tobool56, label %if.then57, label %if.end156, !dbg !20256

if.then57:                                        ; preds = %if.end53
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20257
  %HFC_inb_nodebug58 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %42, i32 0, i32 13, !dbg !20257
  %43 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug58, align 8, !dbg !20257
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20257
  %call59 = call zeroext i8 %43(%struct.hfc_multi* %44, i8 zeroext 17) #12, !dbg !20257
  store i8 %call59, i8* %r_irq_misc, align 1, !dbg !20259
  %45 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20260
  %hw = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %45, i32 0, i32 30, !dbg !20261
  %r_irqmsk_misc = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw, i32 0, i32 5, !dbg !20262
  %46 = load i8, i8* %r_irqmsk_misc, align 1, !dbg !20262
  %conv60 = zext i8 %46 to i32, !dbg !20260
  %47 = load i8, i8* %r_irq_misc, align 1, !dbg !20263
  %conv61 = zext i8 %47 to i32, !dbg !20263
  %and62 = and i32 %conv61, %conv60, !dbg !20263
  %conv63 = trunc i32 %and62 to i8, !dbg !20263
  store i8 %conv63, i8* %r_irq_misc, align 1, !dbg !20263
  %48 = load i8, i8* %r_irq_misc, align 1, !dbg !20264
  %conv64 = zext i8 %48 to i32, !dbg !20264
  %and65 = and i32 %conv64, 1, !dbg !20266
  %tobool66 = icmp ne i32 %and65, 0, !dbg !20266
  br i1 %tobool66, label %if.then67, label %if.end132, !dbg !20267

if.then67:                                        ; preds = %if.then57
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20268
  %ctype68 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 4, !dbg !20271
  %50 = load i32, i32* %ctype68, align 8, !dbg !20271
  %cmp69 = icmp eq i32 %50, 1, !dbg !20272
  br i1 %cmp69, label %if.then71, label %if.end131, !dbg !20273

if.then71:                                        ; preds = %if.then67
  %51 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20274
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %51, i32 0, i32 60, !dbg !20276
  %52 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20277
  %dnum = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %52, i32 0, i32 46, !dbg !20278
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %dnum, i64 0, i64 0, !dbg !20277
  %53 = load i8, i8* %arrayidx, align 4, !dbg !20277
  %idxprom = zext i8 %53 to i64, !dbg !20274
  %arrayidx72 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !20274
  %dch73 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx72, i32 0, i32 0, !dbg !20279
  %54 = load %struct.dchannel*, %struct.dchannel** %dch73, align 8, !dbg !20279
  store %struct.dchannel* %54, %struct.dchannel** %dch, align 8, !dbg !20280
  %55 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20281
  %HFC_inb_nodebug74 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %55, i32 0, i32 13, !dbg !20281
  %56 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug74, align 8, !dbg !20281
  %57 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20281
  %call75 = call zeroext i8 %56(%struct.hfc_multi* %57, i8 zeroext 36) #12, !dbg !20281
  store i8 %call75, i8* %e1_syncsta, align 1, !dbg !20282
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20283
  %chip76 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %58, i32 0, i32 31, !dbg !20285
  %call77 = call zeroext i1 @test_bit(i64 14, i64* %chip76) #12, !dbg !20286
  br i1 %call77, label %land.lhs.true79, label %if.end88, !dbg !20287

land.lhs.true79:                                  ; preds = %if.then71
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20288
  %e1_getclock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %59, i32 0, i32 54, !dbg !20289
  %60 = load i32, i32* %e1_getclock, align 8, !dbg !20289
  %tobool80 = icmp ne i32 %60, 0, !dbg !20288
  br i1 %tobool80, label %if.then81, label %if.end88, !dbg !20290

if.then81:                                        ; preds = %land.lhs.true79
  %61 = load i8, i8* %e1_syncsta, align 1, !dbg !20291
  %conv82 = zext i8 %61 to i32, !dbg !20291
  %and83 = and i32 %conv82, 4, !dbg !20294
  %tobool84 = icmp ne i32 %and83, 0, !dbg !20294
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !20295

if.then85:                                        ; preds = %if.then81
  %62 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20296
  %syncronized = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %62, i32 0, i32 55, !dbg !20297
  store i32 1, i32* %syncronized, align 4, !dbg !20298
  br label %if.end87, !dbg !20296

if.else:                                          ; preds = %if.then81
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20299
  %syncronized86 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %63, i32 0, i32 55, !dbg !20300
  store i32 0, i32* %syncronized86, align 4, !dbg !20301
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then85
  br label %if.end88, !dbg !20302

if.end88:                                         ; preds = %if.end87, %land.lhs.true79, %if.then71
  %64 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20303
  %HFC_inb_nodebug89 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %64, i32 0, i32 13, !dbg !20303
  %65 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug89, align 8, !dbg !20303
  %66 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20303
  %call90 = call zeroext i8 %65(%struct.hfc_multi* %66, i8 zeroext 32) #12, !dbg !20303
  store i8 %call90, i8* %temp, align 1, !dbg !20304
  br label %while.cond, !dbg !20305

while.cond:                                       ; preds = %if.end103, %if.end88
  %67 = load i8, i8* %temp, align 1, !dbg !20306
  %conv91 = zext i8 %67 to i32, !dbg !20306
  %68 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20307
  %HFC_inb_nodebug92 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %68, i32 0, i32 13, !dbg !20307
  %69 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug92, align 8, !dbg !20307
  %70 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20307
  %call93 = call zeroext i8 %69(%struct.hfc_multi* %70, i8 zeroext 32) #12, !dbg !20307
  store i8 %call93, i8* %temp2, align 1, !dbg !20308
  %conv94 = zext i8 %call93 to i32, !dbg !20309
  %cmp95 = icmp ne i32 %conv91, %conv94, !dbg !20310
  br i1 %cmp95, label %while.body, label %while.end, !dbg !20305

while.body:                                       ; preds = %while.cond
  %71 = load i32, i32* @debug, align 4, !dbg !20311
  %and97 = and i32 %71, 4194304, !dbg !20314
  %tobool98 = icmp ne i32 %and97, 0, !dbg !20314
  br i1 %tobool98, label %if.then99, label %if.end103, !dbg !20315

if.then99:                                        ; preds = %while.body
  %72 = load i8, i8* %temp, align 1, !dbg !20316
  %conv100 = zext i8 %72 to i32, !dbg !20316
  %73 = load i8, i8* %temp2, align 1, !dbg !20317
  %conv101 = zext i8 %73 to i32, !dbg !20317
  %call102 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.hfcmulti_interrupt, i64 0, i64 0), i32 %conv100, i32 %conv101) #13, !dbg !20318
  br label %if.end103, !dbg !20318

if.end103:                                        ; preds = %if.then99, %while.body
  %74 = load i8, i8* %temp2, align 1, !dbg !20319
  store i8 %74, i8* %temp, align 1, !dbg !20320
  br label %while.cond, !dbg !20305, !llvm.loop !20321

while.end:                                        ; preds = %while.cond
  %75 = load i32, i32* @debug, align 4, !dbg !20323
  %and104 = and i32 %75, 4194304, !dbg !20325
  %tobool105 = icmp ne i32 %and104, 0, !dbg !20325
  br i1 %tobool105, label %if.then106, label %if.end110, !dbg !20326

if.then106:                                       ; preds = %while.end
  %76 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20327
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %76, i32 0, i32 2, !dbg !20328
  %77 = load i32, i32* %id, align 8, !dbg !20328
  %78 = load i8, i8* %temp, align 1, !dbg !20329
  %conv107 = zext i8 %78 to i32, !dbg !20329
  %and108 = and i32 %conv107, 7, !dbg !20330
  %call109 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.205, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.hfcmulti_interrupt, i64 0, i64 0), i32 %77, i32 %and108) #13, !dbg !20331
  br label %if.end110, !dbg !20331

if.end110:                                        ; preds = %if.then106, %while.end
  store i32 0, i32* %i, align 4, !dbg !20332
  br label %for.cond, !dbg !20334

for.cond:                                         ; preds = %for.inc, %if.end110
  %79 = load i32, i32* %i, align 4, !dbg !20335
  %80 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20337
  %ports = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %80, i32 0, i32 5, !dbg !20338
  %81 = load i32, i32* %ports, align 4, !dbg !20338
  %cmp111 = icmp slt i32 %79, %81, !dbg !20339
  br i1 %cmp111, label %for.body, label %for.end, !dbg !20340

for.body:                                         ; preds = %for.cond
  %82 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20341
  %chan113 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %82, i32 0, i32 60, !dbg !20343
  %83 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20344
  %dnum114 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %83, i32 0, i32 46, !dbg !20345
  %84 = load i32, i32* %i, align 4, !dbg !20346
  %idxprom115 = sext i32 %84 to i64, !dbg !20344
  %arrayidx116 = getelementptr [32 x i8], [32 x i8]* %dnum114, i64 0, i64 %idxprom115, !dbg !20344
  %85 = load i8, i8* %arrayidx116, align 1, !dbg !20344
  %idxprom117 = zext i8 %85 to i64, !dbg !20341
  %arrayidx118 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan113, i64 0, i64 %idxprom117, !dbg !20341
  %dch119 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx118, i32 0, i32 0, !dbg !20347
  %86 = load %struct.dchannel*, %struct.dchannel** %dch119, align 8, !dbg !20347
  store %struct.dchannel* %86, %struct.dchannel** %dch, align 8, !dbg !20348
  %87 = load i8, i8* %temp, align 1, !dbg !20349
  %conv120 = zext i8 %87 to i32, !dbg !20349
  %and121 = and i32 %conv120, 7, !dbg !20350
  %88 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !20351
  %state = getelementptr inbounds %struct.dchannel, %struct.dchannel* %88, i32 0, i32 4, !dbg !20352
  store i32 %and121, i32* %state, align 8, !dbg !20353
  br label %do.body122, !dbg !20354

do.body122:                                       ; preds = %for.body
  %89 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !20355
  %Flags = getelementptr inbounds %struct.dchannel, %struct.dchannel* %89, i32 0, i32 1, !dbg !20355
  %call123 = call zeroext i1 @test_and_set_bit(i64 31, i64* %Flags) #12, !dbg !20355
  %90 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !20355
  %workq = getelementptr inbounds %struct.dchannel, %struct.dchannel* %90, i32 0, i32 2, !dbg !20355
  %call124 = call zeroext i1 @schedule_work(%struct.work_struct* %workq) #12, !dbg !20355
  br label %do.end125, !dbg !20355

do.end125:                                        ; preds = %do.body122
  br label %for.inc, !dbg !20357

for.inc:                                          ; preds = %do.end125
  %91 = load i32, i32* %i, align 4, !dbg !20358
  %inc126 = add i32 %91, 1, !dbg !20358
  store i32 %inc126, i32* %i, align 4, !dbg !20358
  br label %for.cond, !dbg !20359, !llvm.loop !20360

for.end:                                          ; preds = %for.cond
  %92 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20362
  %chip127 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %92, i32 0, i32 31, !dbg !20364
  %call128 = call zeroext i1 @test_bit(i64 14, i64* %chip127) #12, !dbg !20365
  br i1 %call128, label %if.then129, label %if.end130, !dbg !20366

if.then129:                                       ; preds = %for.end
  %93 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20367
  call void @plxsd_checksync(%struct.hfc_multi* %93, i32 0) #12, !dbg !20368
  br label %if.end130, !dbg !20368

if.end130:                                        ; preds = %if.then129, %for.end
  br label %if.end131, !dbg !20369

if.end131:                                        ; preds = %if.end130, %if.then67
  br label %if.end132, !dbg !20370

if.end132:                                        ; preds = %if.end131, %if.then57
  %94 = load i8, i8* %r_irq_misc, align 1, !dbg !20371
  %conv133 = zext i8 %94 to i32, !dbg !20371
  %and134 = and i32 %conv133, 2, !dbg !20373
  %tobool135 = icmp ne i32 %and134, 0, !dbg !20373
  br i1 %tobool135, label %if.then136, label %if.end140, !dbg !20374

if.then136:                                       ; preds = %if.end132
  %95 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20375
  %iclock_on = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %95, i32 0, i32 59, !dbg !20378
  %96 = load i32, i32* %iclock_on, align 8, !dbg !20378
  %tobool137 = icmp ne i32 %96, 0, !dbg !20375
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !20379

if.then138:                                       ; preds = %if.then136
  %97 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20380
  %iclock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %97, i32 0, i32 58, !dbg !20381
  %98 = load %struct.mISDNclock*, %struct.mISDNclock** %iclock, align 8, !dbg !20381
  %99 = load i32, i32* @poll, align 4, !dbg !20382
  call void @mISDN_clock_update(%struct.mISDNclock* %98, i32 %99, i64* null) #12, !dbg !20383
  br label %if.end139, !dbg !20383

if.end139:                                        ; preds = %if.then138, %if.then136
  %100 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20384
  call void @handle_timer_irq(%struct.hfc_multi* %100) #12, !dbg !20385
  br label %if.end140, !dbg !20386

if.end140:                                        ; preds = %if.end139, %if.end132
  %101 = load i8, i8* %r_irq_misc, align 1, !dbg !20387
  %conv141 = zext i8 %101 to i32, !dbg !20387
  %and142 = and i32 %conv141, 8, !dbg !20389
  %tobool143 = icmp ne i32 %and142, 0, !dbg !20389
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !20390

if.then144:                                       ; preds = %if.end140
  %102 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20391
  call void @hfcmulti_dtmf(%struct.hfc_multi* %102) #12, !dbg !20392
  br label %if.end145, !dbg !20392

if.end145:                                        ; preds = %if.then144, %if.end140
  %103 = load i8, i8* %r_irq_misc, align 1, !dbg !20393
  %conv146 = zext i8 %103 to i32, !dbg !20393
  %and147 = and i32 %conv146, 4, !dbg !20395
  %tobool148 = icmp ne i32 %and147, 0, !dbg !20395
  br i1 %tobool148, label %if.then149, label %if.end155, !dbg !20396

if.then149:                                       ; preds = %if.end145
  %104 = load i32, i32* @hfcmulti_interrupt.irq_proc_cnt, align 4, !dbg !20397
  %inc150 = add i32 %104, 1, !dbg !20397
  store i32 %inc150, i32* @hfcmulti_interrupt.irq_proc_cnt, align 4, !dbg !20397
  %tobool151 = icmp ne i32 %104, 0, !dbg !20397
  br i1 %tobool151, label %if.end154, label %if.then152, !dbg !20400

if.then152:                                       ; preds = %if.then149
  %call153 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.206, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.hfcmulti_interrupt, i64 0, i64 0)) #13, !dbg !20401
  br label %if.end154, !dbg !20401

if.end154:                                        ; preds = %if.then152, %if.then149
  br label %if.end155, !dbg !20402

if.end155:                                        ; preds = %if.end154, %if.end145
  br label %if.end156, !dbg !20403

if.end156:                                        ; preds = %if.end155, %if.end53
  %105 = load i8, i8* %status, align 1, !dbg !20404
  %conv157 = zext i8 %105 to i32, !dbg !20404
  %and158 = and i32 %conv157, 128, !dbg !20406
  %tobool159 = icmp ne i32 %and158, 0, !dbg !20406
  br i1 %tobool159, label %if.then160, label %if.end175, !dbg !20407

if.then160:                                       ; preds = %if.end156
  %106 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20408
  %HFC_inb_nodebug161 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %106, i32 0, i32 13, !dbg !20408
  %107 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug161, align 8, !dbg !20408
  %108 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20408
  %call162 = call zeroext i8 %107(%struct.hfc_multi* %108, i8 zeroext 16) #12, !dbg !20408
  store i8 %call162, i8* %r_irq_oview, align 1, !dbg !20410
  store i32 0, i32* %i, align 4, !dbg !20411
  br label %for.cond163, !dbg !20413

for.cond163:                                      ; preds = %for.inc172, %if.then160
  %109 = load i32, i32* %i, align 4, !dbg !20414
  %cmp164 = icmp slt i32 %109, 8, !dbg !20416
  br i1 %cmp164, label %for.body166, label %for.end174, !dbg !20417

for.body166:                                      ; preds = %for.cond163
  %110 = load i8, i8* %r_irq_oview, align 1, !dbg !20418
  %conv167 = zext i8 %110 to i32, !dbg !20418
  %111 = load i32, i32* %i, align 4, !dbg !20421
  %shl = shl i32 1, %111, !dbg !20422
  %and168 = and i32 %conv167, %shl, !dbg !20423
  %tobool169 = icmp ne i32 %and168, 0, !dbg !20423
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !20424

if.then170:                                       ; preds = %for.body166
  %112 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20425
  %113 = load i32, i32* %i, align 4, !dbg !20426
  call void @fifo_irq(%struct.hfc_multi* %112, i32 %113) #12, !dbg !20427
  br label %if.end171, !dbg !20427

if.end171:                                        ; preds = %if.then170, %for.body166
  br label %for.inc172, !dbg !20428

for.inc172:                                       ; preds = %if.end171
  %114 = load i32, i32* %i, align 4, !dbg !20429
  %inc173 = add i32 %114, 1, !dbg !20429
  store i32 %inc173, i32* %i, align 4, !dbg !20429
  br label %for.cond163, !dbg !20430, !llvm.loop !20431

for.end174:                                       ; preds = %for.cond163
  br label %if.end175, !dbg !20433

if.end175:                                        ; preds = %for.end174, %if.end156
  %115 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20434
  %lock176 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %115, i32 0, i32 57, !dbg !20435
  store %struct.spinlock* %lock176, %struct.spinlock** %lock.addr.i184, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20436, !srcloc !12156
  %116 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i184, align 8, !dbg !20437
  %117 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %116, i32 0, i32 0, !dbg !20437
  %rlock.i185 = bitcast %union.anon.1* %117 to %struct.raw_spinlock*, !dbg !20437
  store i32 1, i32* %retval, align 4, !dbg !20438
  br label %return, !dbg !20438

irq_notforus:                                     ; preds = %if.then35, %if.then25
  call void @llvm.dbg.label(metadata !20439), !dbg !20440
  %118 = load %struct.hfc_multi*, %struct.hfc_multi** %hc, align 8, !dbg !20441
  %lock177 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %118, i32 0, i32 57, !dbg !20442
  store %struct.spinlock* %lock177, %struct.spinlock** %lock.addr.i180, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20443, !srcloc !12156
  %119 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i180, align 8, !dbg !20444
  %120 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %119, i32 0, i32 0, !dbg !20444
  %rlock.i181 = bitcast %union.anon.1* %120 to %struct.raw_spinlock*, !dbg !20444
  store i32 0, i32* %retval, align 4, !dbg !20445
  br label %return, !dbg !20445

return:                                           ; preds = %irq_notforus, %if.end175, %if.then
  %121 = load i32, i32* %retval, align 4, !dbg !20446
  ret i32 %121, !dbg !20446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_chip(%struct.hfc_multi* %hc) #2 !dbg !20447 {
entry:
  %lock.addr.i980 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i980, metadata !10043, metadata !DIExpression()), !dbg !20448
  %flags.addr.i981 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i981, metadata !10050, metadata !DIExpression()), !dbg !20452
  %tmp.i982 = alloca i32, align 4
  %tmp8.i983 = alloca i32, align 4
  %lock.addr.i978 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i978, metadata !10052, metadata !DIExpression()), !dbg !20453
  %lock.addr.i976 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i976, metadata !10052, metadata !DIExpression()), !dbg !20460
  %pscr_ret__.i971 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i971, metadata !14683, metadata !DIExpression()), !dbg !20471
  %__vpp_verify.i972 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i972, metadata !14694, metadata !DIExpression()), !dbg !20476
  %pfo_val__.i973 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i973, metadata !14697, metadata !DIExpression()), !dbg !20477
  %tmp.i974 = alloca %struct.task_struct*, align 8
  %tmp1.i975 = alloca %struct.task_struct*, align 8
  %lock.addr.i966 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i966, metadata !10043, metadata !DIExpression()), !dbg !20478
  %flags.addr.i967 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i967, metadata !10050, metadata !DIExpression()), !dbg !20480
  %tmp.i968 = alloca i32, align 4
  %tmp8.i969 = alloca i32, align 4
  %lock.addr.i961 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i961, metadata !10043, metadata !DIExpression()), !dbg !20481
  %flags.addr.i962 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i962, metadata !10050, metadata !DIExpression()), !dbg !20485
  %tmp.i963 = alloca i32, align 4
  %tmp8.i964 = alloca i32, align 4
  %lock.addr.i959 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i959, metadata !10052, metadata !DIExpression()), !dbg !20486
  %lock.addr.i957 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i957, metadata !10052, metadata !DIExpression()), !dbg !20493
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !14683, metadata !DIExpression()), !dbg !20500
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !14694, metadata !DIExpression()), !dbg !20505
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !14697, metadata !DIExpression()), !dbg !20506
  %tmp.i956 = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %lock.addr.i951 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i951, metadata !10043, metadata !DIExpression()), !dbg !20507
  %flags.addr.i952 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i952, metadata !10050, metadata !DIExpression()), !dbg !20509
  %tmp.i953 = alloca i32, align 4
  %tmp8.i954 = alloca i32, align 4
  %lock.addr.i946 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i946, metadata !10043, metadata !DIExpression()), !dbg !20510
  %flags.addr.i947 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i947, metadata !10050, metadata !DIExpression()), !dbg !20514
  %tmp.i948 = alloca i32, align 4
  %tmp8.i949 = alloca i32, align 4
  %lock.addr.i944 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i944, metadata !10052, metadata !DIExpression()), !dbg !20515
  %lock.addr.i939 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i939, metadata !10043, metadata !DIExpression()), !dbg !20522
  %flags.addr.i940 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i940, metadata !10050, metadata !DIExpression()), !dbg !20526
  %tmp.i941 = alloca i32, align 4
  %tmp8.i942 = alloca i32, align 4
  %lock.addr.i934 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i934, metadata !10043, metadata !DIExpression()), !dbg !20527
  %flags.addr.i935 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i935, metadata !10050, metadata !DIExpression()), !dbg !20531
  %tmp.i936 = alloca i32, align 4
  %tmp8.i937 = alloca i32, align 4
  %lock.addr.i932 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i932, metadata !10052, metadata !DIExpression()), !dbg !20532
  %lock.addr.i930 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i930, metadata !10052, metadata !DIExpression()), !dbg !20539
  %lock.addr.i925 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i925, metadata !10043, metadata !DIExpression()), !dbg !20546
  %flags.addr.i926 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i926, metadata !10050, metadata !DIExpression()), !dbg !20548
  %tmp.i927 = alloca i32, align 4
  %tmp8.i928 = alloca i32, align 4
  %lock.addr.i923 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i923, metadata !10052, metadata !DIExpression()), !dbg !20549
  %lock.addr.i921 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i921, metadata !10043, metadata !DIExpression()), !dbg !20556
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !20558
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !20559
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %flags = alloca i64, align 8
  %val = alloca i64, align 8
  %val2 = alloca i64, align 8
  %rev = alloca i64, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %r_conf_en = alloca i8, align 1
  %rval = alloca i8, align 1
  %plx_acc_32 = alloca i8*, align 8
  %pv = alloca i32, align 4
  %plx_flags = alloca i64, align 8
  %hfc_flags = alloca i64, align 8
  %plx_count = alloca i32, align 4
  %pos = alloca %struct.hfc_multi*, align 8
  %next = alloca %struct.hfc_multi*, align 8
  %plx_last_hc = alloca %struct.hfc_multi*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy126 = alloca i64, align 8
  %__dummy2127 = alloca i64, align 8
  %tmp130 = alloca i32, align 4
  %__dummy134 = alloca i64, align 8
  %__dummy2135 = alloca i64, align 8
  %tmp138 = alloca i32, align 4
  %__dummy163 = alloca i64, align 8
  %__dummy2164 = alloca i64, align 8
  %tmp167 = alloca i32, align 4
  %__dummy171 = alloca i64, align 8
  %__dummy2172 = alloca i64, align 8
  %tmp175 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp189 = alloca %struct.hfc_multi*, align 8
  %__mptr191 = alloca i8*, align 8
  %tmp195 = alloca %struct.hfc_multi*, align 8
  %__mptr208 = alloca i8*, align 8
  %tmp213 = alloca %struct.hfc_multi*, align 8
  %__dummy227 = alloca i64, align 8
  %__dummy2228 = alloca i64, align 8
  %tmp231 = alloca i32, align 4
  %__dummy235 = alloca i64, align 8
  %__dummy2236 = alloca i64, align 8
  %tmp239 = alloca i32, align 4
  %__dummy353 = alloca i64, align 8
  %__dummy2354 = alloca i64, align 8
  %tmp357 = alloca i32, align 4
  %__dummy361 = alloca i64, align 8
  %__dummy2362 = alloca i64, align 8
  %tmp365 = alloca i32, align 4
  %__dummy515 = alloca i64, align 8
  %__dummy2516 = alloca i64, align 8
  %tmp519 = alloca i32, align 4
  %__dummy523 = alloca i64, align 8
  %__dummy2524 = alloca i64, align 8
  %tmp527 = alloca i32, align 4
  %__dummy597 = alloca i64, align 8
  %__dummy2598 = alloca i64, align 8
  %tmp601 = alloca i32, align 4
  %__dummy605 = alloca i64, align 8
  %__dummy2606 = alloca i64, align 8
  %tmp609 = alloca i32, align 4
  %__dummy656 = alloca i64, align 8
  %__dummy2657 = alloca i64, align 8
  %tmp660 = alloca i32, align 4
  %__dummy664 = alloca i64, align 8
  %__dummy2665 = alloca i64, align 8
  %tmp668 = alloca i32, align 4
  %__dummy715 = alloca i64, align 8
  %__dummy2716 = alloca i64, align 8
  %tmp719 = alloca i32, align 4
  %__dummy723 = alloca i64, align 8
  %__dummy2724 = alloca i64, align 8
  %tmp727 = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !20566, metadata !DIExpression()), !dbg !20567
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20568, metadata !DIExpression()), !dbg !20569
  call void @llvm.dbg.declare(metadata i64* %val, metadata !20570, metadata !DIExpression()), !dbg !20571
  call void @llvm.dbg.declare(metadata i64* %val2, metadata !20572, metadata !DIExpression()), !dbg !20573
  store i64 0, i64* %val2, align 8, !dbg !20573
  call void @llvm.dbg.declare(metadata i64* %rev, metadata !20574, metadata !DIExpression()), !dbg !20575
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20576, metadata !DIExpression()), !dbg !20577
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20578, metadata !DIExpression()), !dbg !20579
  store i32 0, i32* %err, align 4, !dbg !20579
  call void @llvm.dbg.declare(metadata i8* %r_conf_en, metadata !20580, metadata !DIExpression()), !dbg !20581
  call void @llvm.dbg.declare(metadata i8* %rval, metadata !20582, metadata !DIExpression()), !dbg !20583
  call void @llvm.dbg.declare(metadata i8** %plx_acc_32, metadata !20584, metadata !DIExpression()), !dbg !20585
  call void @llvm.dbg.declare(metadata i32* %pv, metadata !20586, metadata !DIExpression()), !dbg !20587
  call void @llvm.dbg.declare(metadata i64* %plx_flags, metadata !20588, metadata !DIExpression()), !dbg !20589
  call void @llvm.dbg.declare(metadata i64* %hfc_flags, metadata !20590, metadata !DIExpression()), !dbg !20591
  call void @llvm.dbg.declare(metadata i32* %plx_count, metadata !20592, metadata !DIExpression()), !dbg !20593
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %pos, metadata !20594, metadata !DIExpression()), !dbg !20595
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %next, metadata !20596, metadata !DIExpression()), !dbg !20597
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %plx_last_hc, metadata !20598, metadata !DIExpression()), !dbg !20599
  br label %do.body, !dbg !20600

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !20601

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20602, metadata !DIExpression()), !dbg !20604
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20605, metadata !DIExpression()), !dbg !20604
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !20604
  %conv = zext i1 %cmp to i32, !dbg !20604
  store i32 1, i32* %tmp, align 4, !dbg !20604
  %0 = load i32, i32* %tmp, align 4, !dbg !20604
  br label %do.body2, !dbg !20606

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !20607

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !20608

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !20610, metadata !DIExpression()), !dbg !20613
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !20614, metadata !DIExpression()), !dbg !20613
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !20613
  %conv8 = zext i1 %cmp7 to i32, !dbg !20613
  store i32 1, i32* %tmp9, align 4, !dbg !20613
  %1 = load i32, i32* %tmp9, align 4, !dbg !20613
  %call = call i64 @arch_local_irq_save() #12, !dbg !20615
  store i64 %call, i64* %flags, align 8, !dbg !20615
  br label %do.end, !dbg !20615

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !20608

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !20607

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20616, !srcloc !20617
  br label %do.body12, !dbg !20616

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20618
  %lock = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %2, i32 0, i32 57, !dbg !20618
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20619
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !20620
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !20620
  br label %do.end14, !dbg !20618

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !20616

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !20607

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !20606

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20601

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20621
  %hw = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 30, !dbg !20622
  %6 = bitcast %struct.hfcm_hw* %hw to i8*, !dbg !20623
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false), !dbg !20623
  %7 = load i32, i32* @debug, align 4, !dbg !20624
  %and = and i32 %7, 262144, !dbg !20626
  %tobool = icmp ne i32 %and, 0, !dbg !20626
  br i1 %tobool, label %if.then, label %if.end, !dbg !20627

if.then:                                          ; preds = %do.end18
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0)) #13, !dbg !20628
  br label %if.end, !dbg !20628

if.end:                                           ; preds = %if.then, %do.end18
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20629
  %HFC_inb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 12, !dbg !20629
  %9 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb, align 8, !dbg !20629
  %10 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20629
  %call20 = call zeroext i8 %9(%struct.hfc_multi* %10, i8 zeroext 22) #12, !dbg !20629
  %conv21 = zext i8 %call20 to i64, !dbg !20629
  store i64 %conv21, i64* %val, align 8, !dbg !20630
  %11 = load i64, i64* %val, align 8, !dbg !20631
  %shr = lshr i64 %11, 4, !dbg !20633
  %cmp22 = icmp ne i64 %shr, 8, !dbg !20634
  br i1 %cmp22, label %land.lhs.true, label %if.end38, !dbg !20635

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %val, align 8, !dbg !20636
  %shr24 = lshr i64 %12, 4, !dbg !20637
  %cmp25 = icmp ne i64 %shr24, 12, !dbg !20638
  br i1 %cmp25, label %land.lhs.true27, label %if.end38, !dbg !20639

land.lhs.true27:                                  ; preds = %land.lhs.true
  %13 = load i64, i64* %val, align 8, !dbg !20640
  %shr28 = lshr i64 %13, 4, !dbg !20641
  %cmp29 = icmp ne i64 %shr28, 14, !dbg !20642
  br i1 %cmp29, label %land.lhs.true31, label %if.end38, !dbg !20643

land.lhs.true31:                                  ; preds = %land.lhs.true27
  %14 = load i64, i64* %val, align 8, !dbg !20644
  %shr32 = lshr i64 %14, 1, !dbg !20645
  %cmp33 = icmp ne i64 %shr32, 49, !dbg !20646
  br i1 %cmp33, label %if.then35, label %if.end38, !dbg !20647

if.then35:                                        ; preds = %land.lhs.true31
  %15 = load i64, i64* %val, align 8, !dbg !20648
  %conv36 = trunc i64 %15 to i32, !dbg !20650
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.245, i64 0, i64 0), i32 %conv36) #13, !dbg !20651
  store i32 -5, i32* %err, align 4, !dbg !20652
  br label %out, !dbg !20653

if.end38:                                         ; preds = %land.lhs.true31, %land.lhs.true27, %land.lhs.true, %if.end
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20654
  %HFC_inb39 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %16, i32 0, i32 12, !dbg !20654
  %17 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb39, align 8, !dbg !20654
  %18 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20654
  %call40 = call zeroext i8 %17(%struct.hfc_multi* %18, i8 zeroext 31) #12, !dbg !20654
  %conv41 = zext i8 %call40 to i64, !dbg !20654
  store i64 %conv41, i64* %rev, align 8, !dbg !20655
  %19 = load i64, i64* %val, align 8, !dbg !20656
  %20 = load i64, i64* %rev, align 8, !dbg !20657
  %21 = load i64, i64* %rev, align 8, !dbg !20658
  %cmp42 = icmp eq i64 %21, 0, !dbg !20659
  br i1 %cmp42, label %land.rhs, label %land.end, !dbg !20660

land.rhs:                                         ; preds = %if.end38
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20661
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 4, !dbg !20662
  %23 = load i32, i32* %ctype, align 8, !dbg !20662
  %cmp44 = icmp ne i32 %23, 5, !dbg !20663
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end38
  %24 = phi i1 [ false, %if.end38 ], [ %cmp44, %land.rhs ], !dbg !20664
  %25 = zext i1 %24 to i64, !dbg !20665
  %cond = select i1 %24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.247, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.248, i64 0, i64 0), !dbg !20665
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.246, i64 0, i64 0), i64 %19, i64 %20, i8* %cond) #13, !dbg !20666
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20667
  %ctype47 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %26, i32 0, i32 4, !dbg !20669
  %27 = load i32, i32* %ctype47, align 8, !dbg !20669
  %cmp48 = icmp ne i32 %27, 5, !dbg !20670
  br i1 %cmp48, label %land.lhs.true50, label %if.end56, !dbg !20671

land.lhs.true50:                                  ; preds = %land.end
  %28 = load i64, i64* %rev, align 8, !dbg !20672
  %cmp51 = icmp eq i64 %28, 0, !dbg !20673
  br i1 %cmp51, label %if.then53, label %if.end56, !dbg !20674

if.then53:                                        ; preds = %land.lhs.true50
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20675
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %29, i32 0, i32 31, !dbg !20677
  %call54 = call zeroext i1 @test_and_set_bit(i64 2, i64* %chip) #12, !dbg !20678
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([191 x i8], [191 x i8]* @.str.249, i64 0, i64 0)) #13, !dbg !20679
  br label %if.end56, !dbg !20680

if.end56:                                         ; preds = %if.then53, %land.lhs.true50, %land.end
  %30 = load i64, i64* %rev, align 8, !dbg !20681
  %cmp57 = icmp ugt i64 %30, 1, !dbg !20683
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !20684

if.then59:                                        ; preds = %if.end56
  %31 = load i64, i64* %rev, align 8, !dbg !20685
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.250, i64 0, i64 0), i64 %31) #13, !dbg !20687
  br label %if.end61, !dbg !20688

if.end61:                                         ; preds = %if.then59, %if.end56
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20689
  %Flen = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %32, i32 0, i32 36, !dbg !20690
  store i32 16, i32* %Flen, align 4, !dbg !20691
  %33 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20692
  %Zmin = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %33, i32 0, i32 39, !dbg !20693
  store i32 128, i32* %Zmin, align 8, !dbg !20694
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20695
  %Zlen = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %34, i32 0, i32 37, !dbg !20696
  store i32 384, i32* %Zlen, align 8, !dbg !20697
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20698
  %DTMFbase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %35, i32 0, i32 40, !dbg !20699
  store i32 4096, i32* %DTMFbase, align 4, !dbg !20700
  %36 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20701
  %chip62 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %36, i32 0, i32 31, !dbg !20703
  %call63 = call zeroext i1 @test_bit(i64 0, i64* %chip62) #12, !dbg !20704
  br i1 %call63, label %if.then64, label %if.end78, !dbg !20705

if.then64:                                        ; preds = %if.end61
  %37 = load i32, i32* @debug, align 4, !dbg !20706
  %and65 = and i32 %37, 262144, !dbg !20709
  %tobool66 = icmp ne i32 %and65, 0, !dbg !20709
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !20710

if.then67:                                        ; preds = %if.then64
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.251, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0)) #13, !dbg !20711
  br label %if.end69, !dbg !20711

if.end69:                                         ; preds = %if.then67, %if.then64
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20712
  %hw70 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 30, !dbg !20713
  %r_ctrl = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw70, i32 0, i32 0, !dbg !20714
  %39 = load i8, i8* %r_ctrl, align 8, !dbg !20715
  %conv71 = zext i8 %39 to i32, !dbg !20715
  %or = or i32 %conv71, 8, !dbg !20715
  %conv72 = trunc i32 %or to i8, !dbg !20715
  store i8 %conv72, i8* %r_ctrl, align 8, !dbg !20715
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20716
  %hw73 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %40, i32 0, i32 30, !dbg !20717
  %r_ram_sz = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw73, i32 0, i32 3, !dbg !20718
  store i8 1, i8* %r_ram_sz, align 1, !dbg !20719
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20720
  %Flen74 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %41, i32 0, i32 36, !dbg !20721
  store i32 32, i32* %Flen74, align 4, !dbg !20722
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20723
  %Zmin75 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %42, i32 0, i32 39, !dbg !20724
  store i32 192, i32* %Zmin75, align 8, !dbg !20725
  %43 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20726
  %Zlen76 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %43, i32 0, i32 37, !dbg !20727
  store i32 1856, i32* %Zlen76, align 8, !dbg !20728
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20729
  %DTMFbase77 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %44, i32 0, i32 40, !dbg !20730
  store i32 8192, i32* %DTMFbase77, align 4, !dbg !20731
  br label %if.end78, !dbg !20732

if.end78:                                         ; preds = %if.end69, %if.end61
  %45 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20733
  %chip79 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %45, i32 0, i32 31, !dbg !20735
  %call80 = call zeroext i1 @test_bit(i64 1, i64* %chip79) #12, !dbg !20736
  br i1 %call80, label %if.then81, label %if.end98, !dbg !20737

if.then81:                                        ; preds = %if.end78
  %46 = load i32, i32* @debug, align 4, !dbg !20738
  %and82 = and i32 %46, 262144, !dbg !20741
  %tobool83 = icmp ne i32 %and82, 0, !dbg !20741
  br i1 %tobool83, label %if.then84, label %if.end86, !dbg !20742

if.then84:                                        ; preds = %if.then81
  %call85 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.252, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0)) #13, !dbg !20743
  br label %if.end86, !dbg !20743

if.end86:                                         ; preds = %if.then84, %if.then81
  %47 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20744
  %hw87 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %47, i32 0, i32 30, !dbg !20745
  %r_ctrl88 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw87, i32 0, i32 0, !dbg !20746
  %48 = load i8, i8* %r_ctrl88, align 8, !dbg !20747
  %conv89 = zext i8 %48 to i32, !dbg !20747
  %or90 = or i32 %conv89, 8, !dbg !20747
  %conv91 = trunc i32 %or90 to i8, !dbg !20747
  store i8 %conv91, i8* %r_ctrl88, align 8, !dbg !20747
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20748
  %hw92 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %49, i32 0, i32 30, !dbg !20749
  %r_ram_sz93 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw92, i32 0, i32 3, !dbg !20750
  store i8 2, i8* %r_ram_sz93, align 1, !dbg !20751
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20752
  %Flen94 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %50, i32 0, i32 36, !dbg !20753
  store i32 32, i32* %Flen94, align 4, !dbg !20754
  %51 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20755
  %Zmin95 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %51, i32 0, i32 39, !dbg !20756
  store i32 192, i32* %Zmin95, align 8, !dbg !20757
  %52 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20758
  %Zlen96 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %52, i32 0, i32 37, !dbg !20759
  store i32 8000, i32* %Zlen96, align 8, !dbg !20760
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20761
  %DTMFbase97 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %53, i32 0, i32 40, !dbg !20762
  store i32 8192, i32* %DTMFbase97, align 4, !dbg !20763
  br label %if.end98, !dbg !20764

if.end98:                                         ; preds = %if.end86, %if.end78
  %54 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20765
  %ctype99 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %54, i32 0, i32 4, !dbg !20767
  %55 = load i32, i32* %ctype99, align 8, !dbg !20767
  %cmp100 = icmp eq i32 %55, 5, !dbg !20768
  br i1 %cmp100, label %if.then102, label %if.end107, !dbg !20769

if.then102:                                       ; preds = %if.end98
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20770
  %Flen103 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %56, i32 0, i32 36, !dbg !20772
  store i32 8, i32* %Flen103, align 4, !dbg !20773
  %57 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20774
  %Zmin104 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %57, i32 0, i32 39, !dbg !20775
  store i32 0, i32* %Zmin104, align 8, !dbg !20776
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20777
  %Zlen105 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %58, i32 0, i32 37, !dbg !20778
  store i32 64, i32* %Zlen105, align 8, !dbg !20779
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20780
  %DTMFbase106 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %59, i32 0, i32 40, !dbg !20781
  store i32 0, i32* %DTMFbase106, align 4, !dbg !20782
  br label %if.end107, !dbg !20783

if.end107:                                        ; preds = %if.then102, %if.end98
  %60 = load i32, i32* @poll, align 4, !dbg !20784
  %shl = shl i32 %60, 1, !dbg !20785
  %61 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20786
  %max_trans = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %61, i32 0, i32 38, !dbg !20787
  store i32 %shl, i32* %max_trans, align 4, !dbg !20788
  %62 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20789
  %max_trans108 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %62, i32 0, i32 38, !dbg !20791
  %63 = load i32, i32* %max_trans108, align 4, !dbg !20791
  %64 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20792
  %Zlen109 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %64, i32 0, i32 37, !dbg !20793
  %65 = load i32, i32* %Zlen109, align 8, !dbg !20793
  %cmp110 = icmp sgt i32 %63, %65, !dbg !20794
  br i1 %cmp110, label %if.then112, label %if.end115, !dbg !20795

if.then112:                                       ; preds = %if.end107
  %66 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20796
  %Zlen113 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %66, i32 0, i32 37, !dbg !20797
  %67 = load i32, i32* %Zlen113, align 8, !dbg !20797
  %68 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20798
  %max_trans114 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %68, i32 0, i32 38, !dbg !20799
  store i32 %67, i32* %max_trans114, align 4, !dbg !20800
  br label %if.end115, !dbg !20798

if.end115:                                        ; preds = %if.then112, %if.end107
  %69 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20801
  %chip116 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %69, i32 0, i32 31, !dbg !20802
  %call117 = call zeroext i1 @test_bit(i64 14, i64* %chip116) #12, !dbg !20803
  br i1 %call117, label %if.then118, label %if.end262, !dbg !20804

if.then118:                                       ; preds = %if.end115
  %70 = load i32, i32* @debug, align 4, !dbg !20805
  %and119 = and i32 %70, 524288, !dbg !20807
  %tobool120 = icmp ne i32 %and119, 0, !dbg !20807
  br i1 %tobool120, label %if.then121, label %if.end123, !dbg !20808

if.then121:                                       ; preds = %if.then118
  %71 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20809
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %71, i32 0, i32 2, !dbg !20810
  %72 = load i32, i32* %id, align 8, !dbg !20810
  %add = add i32 %72, 1, !dbg !20811
  %call122 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.253, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0), i32 %add) #13, !dbg !20812
  br label %if.end123, !dbg !20812

if.end123:                                        ; preds = %if.then121, %if.then118
  br label %do.body124, !dbg !20813

do.body124:                                       ; preds = %if.end123
  br label %do.body125, !dbg !20814

do.body125:                                       ; preds = %do.body124
  call void @llvm.dbg.declare(metadata i64* %__dummy126, metadata !20815, metadata !DIExpression()), !dbg !20817
  call void @llvm.dbg.declare(metadata i64* %__dummy2127, metadata !20818, metadata !DIExpression()), !dbg !20817
  %cmp128 = icmp eq i64* %__dummy126, %__dummy2127, !dbg !20817
  %conv129 = zext i1 %cmp128 to i32, !dbg !20817
  store i32 1, i32* %tmp130, align 4, !dbg !20817
  %73 = load i32, i32* %tmp130, align 4, !dbg !20817
  br label %do.body131, !dbg !20819

do.body131:                                       ; preds = %do.body125
  br label %do.body132, !dbg !20820

do.body132:                                       ; preds = %do.body131
  br label %do.body133, !dbg !20821

do.body133:                                       ; preds = %do.body132
  call void @llvm.dbg.declare(metadata i64* %__dummy134, metadata !20823, metadata !DIExpression()), !dbg !20826
  call void @llvm.dbg.declare(metadata i64* %__dummy2135, metadata !20827, metadata !DIExpression()), !dbg !20826
  %cmp136 = icmp eq i64* %__dummy134, %__dummy2135, !dbg !20826
  %conv137 = zext i1 %cmp136 to i32, !dbg !20826
  store i32 1, i32* %tmp138, align 4, !dbg !20826
  %74 = load i32, i32* %tmp138, align 4, !dbg !20826
  %call139 = call i64 @arch_local_irq_save() #12, !dbg !20828
  store i64 %call139, i64* %plx_flags, align 8, !dbg !20828
  br label %do.end140, !dbg !20828

do.end140:                                        ; preds = %do.body133
  br label %do.end141, !dbg !20821

do.end141:                                        ; preds = %do.end140
  br label %do.body142, !dbg !20820

do.body142:                                       ; preds = %do.end141
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20829, !srcloc !20830
  br label %do.body143, !dbg !20829

do.body143:                                       ; preds = %do.body142
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i923, align 8
  %75 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i923, align 8, !dbg !20831
  %76 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %75, i32 0, i32 0, !dbg !20832
  %rlock.i924 = bitcast %union.anon.1* %76 to %struct.raw_spinlock*, !dbg !20832
  br label %do.end145, !dbg !20833

do.end145:                                        ; preds = %do.body143
  br label %do.end146, !dbg !20829

do.end146:                                        ; preds = %do.end145
  br label %do.end147, !dbg !20820

do.end147:                                        ; preds = %do.end146
  br label %do.end148, !dbg !20819

do.end148:                                        ; preds = %do.end147
  br label %do.end149, !dbg !20814

do.end149:                                        ; preds = %do.end148
  %77 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20834
  %plx_membase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %77, i32 0, i32 23, !dbg !20835
  %78 = load i8*, i8** %plx_membase, align 8, !dbg !20835
  %add.ptr = getelementptr i8, i8* %78, i64 84, !dbg !20836
  store i8* %add.ptr, i8** %plx_acc_32, align 8, !dbg !20837
  %79 = load i8*, i8** %plx_acc_32, align 8, !dbg !20838
  call void @writel(i32 38477824, i8* %79) #12, !dbg !20839
  %80 = load i8*, i8** %plx_acc_32, align 8, !dbg !20840
  %call150 = call i32 @readl(i8* %80) #12, !dbg !20841
  store i32 %call150, i32* %pv, align 4, !dbg !20842
  %81 = load i32, i32* %pv, align 4, !dbg !20843
  %or151 = or i32 %81, 8388608, !dbg !20843
  store i32 %or151, i32* %pv, align 4, !dbg !20843
  %82 = load i32, i32* %pv, align 4, !dbg !20844
  %or152 = or i32 %82, 131072, !dbg !20844
  store i32 %or152, i32* %pv, align 4, !dbg !20844
  %83 = load i32, i32* %pv, align 4, !dbg !20845
  %and153 = and i32 %83, -1048577, !dbg !20845
  store i32 %and153, i32* %pv, align 4, !dbg !20845
  %84 = load i32, i32* %pv, align 4, !dbg !20846
  %and154 = and i32 %84, -16385, !dbg !20846
  store i32 %and154, i32* %pv, align 4, !dbg !20846
  %85 = load i32, i32* %pv, align 4, !dbg !20847
  %and155 = and i32 %85, -67108865, !dbg !20847
  store i32 %and155, i32* %pv, align 4, !dbg !20847
  %86 = load i32, i32* %pv, align 4, !dbg !20848
  %87 = load i8*, i8** %plx_acc_32, align 8, !dbg !20849
  call void @writel(i32 %86, i8* %87) #12, !dbg !20850
  %88 = load i64, i64* %plx_flags, align 8, !dbg !20851
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i925, align 8
  store i64 %88, i64* %flags.addr.i926, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !20852
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !20852
  store i32 1, i32* %tmp.i927, align 4, !dbg !20852
  %89 = load i32, i32* %tmp.i927, align 4, !dbg !20852
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !20853
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !20853
  store i32 1, i32* %tmp8.i928, align 4, !dbg !20853
  %90 = load i32, i32* %tmp8.i928, align 4, !dbg !20853
  %91 = load i64, i64* %flags.addr.i926, align 8, !dbg !20854
  call void @arch_local_irq_restore(i64 %91) #14, !dbg !20854
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20855, !srcloc !10125
  %92 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i925, align 8, !dbg !20856
  %93 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %92, i32 0, i32 0, !dbg !20856
  %rlock.i929 = bitcast %union.anon.1* %93 to %struct.raw_spinlock*, !dbg !20856
  %94 = load i32, i32* @debug, align 4, !dbg !20857
  %and156 = and i32 %94, 262144, !dbg !20859
  %tobool157 = icmp ne i32 %and156, 0, !dbg !20859
  br i1 %tobool157, label %if.then158, label %if.end160, !dbg !20860

if.then158:                                       ; preds = %do.end149
  %95 = load i32, i32* %pv, align 4, !dbg !20861
  %call159 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.254, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0), i32 %95) #13, !dbg !20862
  br label %if.end160, !dbg !20862

if.end160:                                        ; preds = %if.then158, %do.end149
  br label %do.body161, !dbg !20863

do.body161:                                       ; preds = %if.end160
  br label %do.body162, !dbg !20864

do.body162:                                       ; preds = %do.body161
  call void @llvm.dbg.declare(metadata i64* %__dummy163, metadata !20865, metadata !DIExpression()), !dbg !20867
  call void @llvm.dbg.declare(metadata i64* %__dummy2164, metadata !20868, metadata !DIExpression()), !dbg !20867
  %cmp165 = icmp eq i64* %__dummy163, %__dummy2164, !dbg !20867
  %conv166 = zext i1 %cmp165 to i32, !dbg !20867
  store i32 1, i32* %tmp167, align 4, !dbg !20867
  %96 = load i32, i32* %tmp167, align 4, !dbg !20867
  br label %do.body168, !dbg !20869

do.body168:                                       ; preds = %do.body162
  br label %do.body169, !dbg !20870

do.body169:                                       ; preds = %do.body168
  br label %do.body170, !dbg !20871

do.body170:                                       ; preds = %do.body169
  call void @llvm.dbg.declare(metadata i64* %__dummy171, metadata !20873, metadata !DIExpression()), !dbg !20876
  call void @llvm.dbg.declare(metadata i64* %__dummy2172, metadata !20877, metadata !DIExpression()), !dbg !20876
  %cmp173 = icmp eq i64* %__dummy171, %__dummy2172, !dbg !20876
  %conv174 = zext i1 %cmp173 to i32, !dbg !20876
  store i32 1, i32* %tmp175, align 4, !dbg !20876
  %97 = load i32, i32* %tmp175, align 4, !dbg !20876
  %call176 = call i64 @arch_local_irq_save() #12, !dbg !20878
  store i64 %call176, i64* %hfc_flags, align 8, !dbg !20878
  br label %do.end177, !dbg !20878

do.end177:                                        ; preds = %do.body170
  br label %do.end178, !dbg !20871

do.end178:                                        ; preds = %do.end177
  br label %do.body179, !dbg !20870

do.body179:                                       ; preds = %do.end178
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20879, !srcloc !20880
  br label %do.body180, !dbg !20879

do.body180:                                       ; preds = %do.body179
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i930, align 8
  %98 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i930, align 8, !dbg !20881
  %99 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %98, i32 0, i32 0, !dbg !20882
  %rlock.i931 = bitcast %union.anon.1* %99 to %struct.raw_spinlock*, !dbg !20882
  br label %do.end182, !dbg !20883

do.end182:                                        ; preds = %do.body180
  br label %do.end183, !dbg !20879

do.end183:                                        ; preds = %do.end182
  br label %do.end184, !dbg !20870

do.end184:                                        ; preds = %do.end183
  br label %do.end185, !dbg !20869

do.end185:                                        ; preds = %do.end184
  br label %do.end186, !dbg !20864

do.end186:                                        ; preds = %do.end185
  store i32 0, i32* %plx_count, align 4, !dbg !20884
  store %struct.hfc_multi* null, %struct.hfc_multi** %plx_last_hc, align 8, !dbg !20885
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !20886, metadata !DIExpression()), !dbg !20889
  %100 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @HFClist, i32 0, i32 0), align 8, !dbg !20889
  %101 = bitcast %struct.list_head* %100 to i8*, !dbg !20889
  store i8* %101, i8** %__mptr, align 8, !dbg !20889
  br label %do.body187, !dbg !20889

do.body187:                                       ; preds = %do.end186
  br label %do.end188, !dbg !20890

do.end188:                                        ; preds = %do.body187
  %102 = load i8*, i8** %__mptr, align 8, !dbg !20889
  %add.ptr190 = getelementptr i8, i8* %102, i64 0, !dbg !20889
  %103 = bitcast i8* %add.ptr190 to %struct.hfc_multi*, !dbg !20889
  store %struct.hfc_multi* %103, %struct.hfc_multi** %tmp189, align 8, !dbg !20890
  %104 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp189, align 8, !dbg !20889
  store %struct.hfc_multi* %104, %struct.hfc_multi** %pos, align 8, !dbg !20892
  call void @llvm.dbg.declare(metadata i8** %__mptr191, metadata !20893, metadata !DIExpression()), !dbg !20895
  %105 = load %struct.hfc_multi*, %struct.hfc_multi** %pos, align 8, !dbg !20895
  %list = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %105, i32 0, i32 0, !dbg !20895
  %next192 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !20895
  %106 = load %struct.list_head*, %struct.list_head** %next192, align 8, !dbg !20895
  %107 = bitcast %struct.list_head* %106 to i8*, !dbg !20895
  store i8* %107, i8** %__mptr191, align 8, !dbg !20895
  br label %do.body193, !dbg !20895

do.body193:                                       ; preds = %do.end188
  br label %do.end194, !dbg !20896

do.end194:                                        ; preds = %do.body193
  %108 = load i8*, i8** %__mptr191, align 8, !dbg !20895
  %add.ptr196 = getelementptr i8, i8* %108, i64 0, !dbg !20895
  %109 = bitcast i8* %add.ptr196 to %struct.hfc_multi*, !dbg !20895
  store %struct.hfc_multi* %109, %struct.hfc_multi** %tmp195, align 8, !dbg !20896
  %110 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp195, align 8, !dbg !20895
  store %struct.hfc_multi* %110, %struct.hfc_multi** %next, align 8, !dbg !20892
  br label %for.cond, !dbg !20892

for.cond:                                         ; preds = %do.end212, %do.end194
  %111 = load %struct.hfc_multi*, %struct.hfc_multi** %pos, align 8, !dbg !20898
  %list197 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %111, i32 0, i32 0, !dbg !20898
  %cmp198 = icmp eq %struct.list_head* %list197, @HFClist, !dbg !20898
  %lnot = xor i1 %cmp198, true, !dbg !20898
  br i1 %lnot, label %for.body, label %for.end, !dbg !20892

for.body:                                         ; preds = %for.cond
  %112 = load %struct.hfc_multi*, %struct.hfc_multi** %pos, align 8, !dbg !20900
  %chip200 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %112, i32 0, i32 31, !dbg !20903
  %call201 = call zeroext i1 @test_bit(i64 14, i64* %chip200) #12, !dbg !20904
  br i1 %call201, label %if.then202, label %if.end207, !dbg !20905

if.then202:                                       ; preds = %for.body
  %113 = load i32, i32* %plx_count, align 4, !dbg !20906
  %inc = add i32 %113, 1, !dbg !20906
  store i32 %inc, i32* %plx_count, align 4, !dbg !20906
  %114 = load %struct.hfc_multi*, %struct.hfc_multi** %pos, align 8, !dbg !20908
  %115 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20910
  %cmp203 = icmp ne %struct.hfc_multi* %114, %115, !dbg !20911
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !20912

if.then205:                                       ; preds = %if.then202
  %116 = load %struct.hfc_multi*, %struct.hfc_multi** %pos, align 8, !dbg !20913
  store %struct.hfc_multi* %116, %struct.hfc_multi** %plx_last_hc, align 8, !dbg !20914
  br label %if.end206, !dbg !20915

if.end206:                                        ; preds = %if.then205, %if.then202
  br label %if.end207, !dbg !20916

if.end207:                                        ; preds = %if.end206, %for.body
  br label %for.inc, !dbg !20917

for.inc:                                          ; preds = %if.end207
  %117 = load %struct.hfc_multi*, %struct.hfc_multi** %next, align 8, !dbg !20898
  store %struct.hfc_multi* %117, %struct.hfc_multi** %pos, align 8, !dbg !20898
  call void @llvm.dbg.declare(metadata i8** %__mptr208, metadata !20918, metadata !DIExpression()), !dbg !20920
  %118 = load %struct.hfc_multi*, %struct.hfc_multi** %next, align 8, !dbg !20920
  %list209 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %118, i32 0, i32 0, !dbg !20920
  %next210 = getelementptr inbounds %struct.list_head, %struct.list_head* %list209, i32 0, i32 0, !dbg !20920
  %119 = load %struct.list_head*, %struct.list_head** %next210, align 8, !dbg !20920
  %120 = bitcast %struct.list_head* %119 to i8*, !dbg !20920
  store i8* %120, i8** %__mptr208, align 8, !dbg !20920
  br label %do.body211, !dbg !20920

do.body211:                                       ; preds = %for.inc
  br label %do.end212, !dbg !20921

do.end212:                                        ; preds = %do.body211
  %121 = load i8*, i8** %__mptr208, align 8, !dbg !20920
  %add.ptr214 = getelementptr i8, i8* %121, i64 0, !dbg !20920
  %122 = bitcast i8* %add.ptr214 to %struct.hfc_multi*, !dbg !20920
  store %struct.hfc_multi* %122, %struct.hfc_multi** %tmp213, align 8, !dbg !20921
  %123 = load %struct.hfc_multi*, %struct.hfc_multi** %tmp213, align 8, !dbg !20920
  store %struct.hfc_multi* %123, %struct.hfc_multi** %next, align 8, !dbg !20898
  br label %for.cond, !dbg !20898, !llvm.loop !20923

for.end:                                          ; preds = %for.cond
  %124 = load i32, i32* %plx_count, align 4, !dbg !20925
  %cmp215 = icmp sge i32 %124, 3, !dbg !20926
  br i1 %cmp215, label %if.then217, label %if.end260, !dbg !20927

if.then217:                                       ; preds = %for.end
  %125 = load i32, i32* @debug, align 4, !dbg !20928
  %and218 = and i32 %125, 524288, !dbg !20930
  %tobool219 = icmp ne i32 %and218, 0, !dbg !20930
  br i1 %tobool219, label %if.then220, label %if.end224, !dbg !20931

if.then220:                                       ; preds = %if.then217
  %126 = load %struct.hfc_multi*, %struct.hfc_multi** %plx_last_hc, align 8, !dbg !20932
  %id221 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %126, i32 0, i32 2, !dbg !20933
  %127 = load i32, i32* %id221, align 8, !dbg !20933
  %add222 = add i32 %127, 1, !dbg !20934
  %call223 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0), i32 %add222) #13, !dbg !20935
  br label %if.end224, !dbg !20935

if.end224:                                        ; preds = %if.then220, %if.then217
  br label %do.body225, !dbg !20936

do.body225:                                       ; preds = %if.end224
  br label %do.body226, !dbg !20937

do.body226:                                       ; preds = %do.body225
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !20938, metadata !DIExpression()), !dbg !20940
  call void @llvm.dbg.declare(metadata i64* %__dummy2228, metadata !20941, metadata !DIExpression()), !dbg !20940
  %cmp229 = icmp eq i64* %__dummy227, %__dummy2228, !dbg !20940
  %conv230 = zext i1 %cmp229 to i32, !dbg !20940
  store i32 1, i32* %tmp231, align 4, !dbg !20940
  %128 = load i32, i32* %tmp231, align 4, !dbg !20940
  br label %do.body232, !dbg !20942

do.body232:                                       ; preds = %do.body226
  br label %do.body233, !dbg !20943

do.body233:                                       ; preds = %do.body232
  br label %do.body234, !dbg !20944

do.body234:                                       ; preds = %do.body233
  call void @llvm.dbg.declare(metadata i64* %__dummy235, metadata !20946, metadata !DIExpression()), !dbg !20949
  call void @llvm.dbg.declare(metadata i64* %__dummy2236, metadata !20950, metadata !DIExpression()), !dbg !20949
  %cmp237 = icmp eq i64* %__dummy235, %__dummy2236, !dbg !20949
  %conv238 = zext i1 %cmp237 to i32, !dbg !20949
  store i32 1, i32* %tmp239, align 4, !dbg !20949
  %129 = load i32, i32* %tmp239, align 4, !dbg !20949
  %call240 = call i64 @arch_local_irq_save() #12, !dbg !20951
  store i64 %call240, i64* %plx_flags, align 8, !dbg !20951
  br label %do.end241, !dbg !20951

do.end241:                                        ; preds = %do.body234
  br label %do.end242, !dbg !20944

do.end242:                                        ; preds = %do.end241
  br label %do.body243, !dbg !20943

do.body243:                                       ; preds = %do.end242
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20952, !srcloc !20953
  br label %do.body244, !dbg !20952

do.body244:                                       ; preds = %do.body243
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i932, align 8
  %130 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i932, align 8, !dbg !20954
  %131 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %130, i32 0, i32 0, !dbg !20955
  %rlock.i933 = bitcast %union.anon.1* %131 to %struct.raw_spinlock*, !dbg !20955
  br label %do.end246, !dbg !20956

do.end246:                                        ; preds = %do.body244
  br label %do.end247, !dbg !20952

do.end247:                                        ; preds = %do.end246
  br label %do.end248, !dbg !20943

do.end248:                                        ; preds = %do.end247
  br label %do.end249, !dbg !20942

do.end249:                                        ; preds = %do.end248
  br label %do.end250, !dbg !20937

do.end250:                                        ; preds = %do.end249
  %132 = load %struct.hfc_multi*, %struct.hfc_multi** %plx_last_hc, align 8, !dbg !20957
  %plx_membase251 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %132, i32 0, i32 23, !dbg !20958
  %133 = load i8*, i8** %plx_membase251, align 8, !dbg !20958
  %add.ptr252 = getelementptr i8, i8* %133, i64 84, !dbg !20959
  store i8* %add.ptr252, i8** %plx_acc_32, align 8, !dbg !20960
  %134 = load i8*, i8** %plx_acc_32, align 8, !dbg !20961
  %call253 = call i32 @readl(i8* %134) #12, !dbg !20962
  store i32 %call253, i32* %pv, align 4, !dbg !20963
  %135 = load i32, i32* %pv, align 4, !dbg !20964
  %and254 = and i32 %135, -8388609, !dbg !20964
  store i32 %and254, i32* %pv, align 4, !dbg !20964
  %136 = load i32, i32* %pv, align 4, !dbg !20965
  %137 = load i8*, i8** %plx_acc_32, align 8, !dbg !20966
  call void @writel(i32 %136, i8* %137) #12, !dbg !20967
  %138 = load i64, i64* %plx_flags, align 8, !dbg !20968
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i934, align 8
  store i64 %138, i64* %flags.addr.i935, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !20969
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !20969
  store i32 1, i32* %tmp.i936, align 4, !dbg !20969
  %139 = load i32, i32* %tmp.i936, align 4, !dbg !20969
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !20970
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !20970
  store i32 1, i32* %tmp8.i937, align 4, !dbg !20970
  %140 = load i32, i32* %tmp8.i937, align 4, !dbg !20970
  %141 = load i64, i64* %flags.addr.i935, align 8, !dbg !20971
  call void @arch_local_irq_restore(i64 %141) #14, !dbg !20971
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20972, !srcloc !10125
  %142 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i934, align 8, !dbg !20973
  %143 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %142, i32 0, i32 0, !dbg !20973
  %rlock.i938 = bitcast %union.anon.1* %143 to %struct.raw_spinlock*, !dbg !20973
  %144 = load i32, i32* @debug, align 4, !dbg !20974
  %and255 = and i32 %144, 262144, !dbg !20976
  %tobool256 = icmp ne i32 %and255, 0, !dbg !20976
  br i1 %tobool256, label %if.then257, label %if.end259, !dbg !20977

if.then257:                                       ; preds = %do.end250
  %145 = load i32, i32* %pv, align 4, !dbg !20978
  %call258 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0), i32 %145) #13, !dbg !20979
  br label %if.end259, !dbg !20979

if.end259:                                        ; preds = %if.then257, %do.end250
  br label %if.end260, !dbg !20980

if.end260:                                        ; preds = %if.end259, %for.end
  %146 = load i64, i64* %hfc_flags, align 8, !dbg !20981
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i939, align 8
  store i64 %146, i64* %flags.addr.i940, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !20982
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !20982
  store i32 1, i32* %tmp.i941, align 4, !dbg !20982
  %147 = load i32, i32* %tmp.i941, align 4, !dbg !20982
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !20983
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !20983
  store i32 1, i32* %tmp8.i942, align 4, !dbg !20983
  %148 = load i32, i32* %tmp8.i942, align 4, !dbg !20983
  %149 = load i64, i64* %flags.addr.i940, align 8, !dbg !20984
  call void @arch_local_irq_restore(i64 %149) #14, !dbg !20984
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !20985, !srcloc !10125
  %150 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i939, align 8, !dbg !20986
  %151 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %150, i32 0, i32 0, !dbg !20986
  %rlock.i943 = bitcast %union.anon.1* %151 to %struct.raw_spinlock*, !dbg !20986
  %152 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20987
  %hw261 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %152, i32 0, i32 30, !dbg !20988
  %r_pcm_md0 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw261, i32 0, i32 4, !dbg !20989
  store i8 8, i8* %r_pcm_md0, align 4, !dbg !20990
  br label %if.end262, !dbg !20991

if.end262:                                        ; preds = %if.end260, %if.end115
  %153 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20992
  %chip263 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %153, i32 0, i32 31, !dbg !20994
  %call264 = call zeroext i1 @test_bit(i64 15, i64* %chip263) #12, !dbg !20995
  br i1 %call264, label %if.then265, label %if.end268, !dbg !20996

if.then265:                                       ; preds = %if.end262
  %154 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !20997
  %hw266 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %154, i32 0, i32 30, !dbg !20998
  %r_pcm_md0267 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw266, i32 0, i32 4, !dbg !20999
  store i8 8, i8* %r_pcm_md0267, align 4, !dbg !21000
  br label %if.end268, !dbg !20997

if.end268:                                        ; preds = %if.then265, %if.end262
  %155 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21001
  %chip269 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %155, i32 0, i32 31, !dbg !21003
  %call270 = call zeroext i1 @test_bit(i64 2, i64* %chip269) #12, !dbg !21004
  br i1 %call270, label %if.end277, label %if.then271, !dbg !21005

if.then271:                                       ; preds = %if.end268
  %156 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21006
  %hw272 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %156, i32 0, i32 30, !dbg !21007
  %r_ram_sz273 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw272, i32 0, i32 3, !dbg !21008
  %157 = load i8, i8* %r_ram_sz273, align 1, !dbg !21009
  %conv274 = zext i8 %157 to i32, !dbg !21009
  %or275 = or i32 %conv274, 128, !dbg !21009
  %conv276 = trunc i32 %or275 to i8, !dbg !21009
  store i8 %conv276, i8* %r_ram_sz273, align 1, !dbg !21009
  br label %if.end277, !dbg !21006

if.end277:                                        ; preds = %if.then271, %if.end268
  %158 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21010
  %chip278 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %158, i32 0, i32 31, !dbg !21012
  %call279 = call zeroext i1 @test_bit(i64 3, i64* %chip278) #12, !dbg !21013
  br i1 %call279, label %if.then280, label %if.else, !dbg !21014

if.then280:                                       ; preds = %if.end277
  %159 = load i32, i32* @debug, align 4, !dbg !21015
  %and281 = and i32 %159, 262144, !dbg !21018
  %tobool282 = icmp ne i32 %and281, 0, !dbg !21018
  br i1 %tobool282, label %if.then283, label %if.end285, !dbg !21019

if.then283:                                       ; preds = %if.then280
  %call284 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.257, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0)) #13, !dbg !21020
  br label %if.end285, !dbg !21020

if.end285:                                        ; preds = %if.then283, %if.then280
  br label %if.end309, !dbg !21021

if.else:                                          ; preds = %if.end277
  %160 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21022
  %chip286 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %160, i32 0, i32 31, !dbg !21024
  %call287 = call zeroext i1 @test_bit(i64 4, i64* %chip286) #12, !dbg !21025
  br i1 %call287, label %land.lhs.true289, label %if.else302, !dbg !21026

land.lhs.true289:                                 ; preds = %if.else
  %161 = load i32, i32* @plxsd_master, align 4, !dbg !21027
  %tobool290 = icmp ne i32 %161, 0, !dbg !21027
  br i1 %tobool290, label %if.else302, label %if.then291, !dbg !21028

if.then291:                                       ; preds = %land.lhs.true289
  %162 = load i32, i32* @debug, align 4, !dbg !21029
  %and292 = and i32 %162, 262144, !dbg !21032
  %tobool293 = icmp ne i32 %and292, 0, !dbg !21032
  br i1 %tobool293, label %if.then294, label %if.end296, !dbg !21033

if.then294:                                       ; preds = %if.then291
  %call295 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.258, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0)) #13, !dbg !21034
  br label %if.end296, !dbg !21034

if.end296:                                        ; preds = %if.then294, %if.then291
  %163 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21035
  %hw297 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %163, i32 0, i32 30, !dbg !21036
  %r_pcm_md0298 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw297, i32 0, i32 4, !dbg !21037
  %164 = load i8, i8* %r_pcm_md0298, align 4, !dbg !21038
  %conv299 = zext i8 %164 to i32, !dbg !21038
  %or300 = or i32 %conv299, 1, !dbg !21038
  %conv301 = trunc i32 %or300 to i8, !dbg !21038
  store i8 %conv301, i8* %r_pcm_md0298, align 4, !dbg !21038
  br label %if.end308, !dbg !21039

if.else302:                                       ; preds = %land.lhs.true289, %if.else
  %165 = load i32, i32* @debug, align 4, !dbg !21040
  %and303 = and i32 %165, 262144, !dbg !21043
  %tobool304 = icmp ne i32 %and303, 0, !dbg !21043
  br i1 %tobool304, label %if.then305, label %if.end307, !dbg !21044

if.then305:                                       ; preds = %if.else302
  %call306 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.259, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0)) #13, !dbg !21045
  br label %if.end307, !dbg !21045

if.end307:                                        ; preds = %if.then305, %if.else302
  br label %if.end308

if.end308:                                        ; preds = %if.end307, %if.end296
  br label %if.end309

if.end309:                                        ; preds = %if.end308, %if.end285
  %166 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21046
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %166, i32 0, i32 10, !dbg !21046
  %167 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !21046
  %168 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21046
  %169 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21046
  %hw310 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %169, i32 0, i32 30, !dbg !21046
  %r_ctrl311 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw310, i32 0, i32 0, !dbg !21046
  %170 = load i8, i8* %r_ctrl311, align 8, !dbg !21046
  call void %167(%struct.hfc_multi* %168, i8 zeroext 1, i8 zeroext %170) #12, !dbg !21046
  %171 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21047
  %ctype312 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %171, i32 0, i32 4, !dbg !21049
  %172 = load i32, i32* %ctype312, align 8, !dbg !21049
  %cmp313 = icmp eq i32 %172, 5, !dbg !21050
  br i1 %cmp313, label %if.then315, label %if.else317, !dbg !21051

if.then315:                                       ; preds = %if.end309
  %173 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21052
  %HFC_outb316 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %173, i32 0, i32 10, !dbg !21052
  %174 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb316, align 8, !dbg !21052
  %175 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21052
  call void %174(%struct.hfc_multi* %175, i8 zeroext 12, i8 zeroext 17) #12, !dbg !21052
  br label %if.end321, !dbg !21052

if.else317:                                       ; preds = %if.end309
  %176 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21053
  %HFC_outb318 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %176, i32 0, i32 10, !dbg !21053
  %177 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb318, align 8, !dbg !21053
  %178 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21053
  %179 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21053
  %hw319 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %179, i32 0, i32 30, !dbg !21053
  %r_ram_sz320 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw319, i32 0, i32 3, !dbg !21053
  %180 = load i8, i8* %r_ram_sz320, align 1, !dbg !21053
  call void %177(%struct.hfc_multi* %178, i8 zeroext 12, i8 zeroext %180) #12, !dbg !21053
  br label %if.end321

if.end321:                                        ; preds = %if.else317, %if.then315
  %181 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21054
  %HFC_outb322 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %181, i32 0, i32 10, !dbg !21054
  %182 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb322, align 8, !dbg !21054
  %183 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21054
  call void %182(%struct.hfc_multi* %183, i8 zeroext 13, i8 zeroext 0) #12, !dbg !21054
  %184 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21055
  %ctype323 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %184, i32 0, i32 4, !dbg !21057
  %185 = load i32, i32* %ctype323, align 8, !dbg !21057
  %cmp324 = icmp eq i32 %185, 5, !dbg !21058
  br i1 %cmp324, label %if.then326, label %if.else328, !dbg !21059

if.then326:                                       ; preds = %if.end321
  %186 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21060
  %hw327 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %186, i32 0, i32 30, !dbg !21061
  %r_cirm = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw327, i32 0, i32 2, !dbg !21062
  store i8 120, i8* %r_cirm, align 2, !dbg !21063
  br label %if.end331, !dbg !21060

if.else328:                                       ; preds = %if.end321
  %187 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21064
  %hw329 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %187, i32 0, i32 30, !dbg !21065
  %r_cirm330 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw329, i32 0, i32 2, !dbg !21066
  store i8 -8, i8* %r_cirm330, align 2, !dbg !21067
  br label %if.end331

if.end331:                                        ; preds = %if.else328, %if.then326
  %188 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21068
  %HFC_outb332 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %188, i32 0, i32 10, !dbg !21068
  %189 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb332, align 8, !dbg !21068
  %190 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21068
  %191 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21068
  %hw333 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %191, i32 0, i32 30, !dbg !21068
  %r_cirm334 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw333, i32 0, i32 2, !dbg !21068
  %192 = load i8, i8* %r_cirm334, align 2, !dbg !21068
  call void %189(%struct.hfc_multi* %190, i8 zeroext 0, i8 zeroext %192) #12, !dbg !21068
  call void @__const_udelay(i64 429500) #12, !dbg !21069
  %193 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21074
  %hw335 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %193, i32 0, i32 30, !dbg !21075
  %r_cirm336 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw335, i32 0, i32 2, !dbg !21076
  store i8 0, i8* %r_cirm336, align 2, !dbg !21077
  %194 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21078
  %HFC_outb337 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %194, i32 0, i32 10, !dbg !21078
  %195 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb337, align 8, !dbg !21078
  %196 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21078
  %197 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21078
  %hw338 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %197, i32 0, i32 30, !dbg !21078
  %r_cirm339 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw338, i32 0, i32 2, !dbg !21078
  %198 = load i8, i8* %r_cirm339, align 2, !dbg !21078
  call void %195(%struct.hfc_multi* %196, i8 zeroext 0, i8 zeroext %198) #12, !dbg !21078
  call void @__const_udelay(i64 429500) #12, !dbg !21079
  %199 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21084
  %ctype340 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %199, i32 0, i32 4, !dbg !21086
  %200 = load i32, i32* %ctype340, align 8, !dbg !21086
  %cmp341 = icmp ne i32 %200, 5, !dbg !21087
  br i1 %cmp341, label %if.then343, label %if.end347, !dbg !21088

if.then343:                                       ; preds = %if.end331
  %201 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21089
  %HFC_outb344 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %201, i32 0, i32 10, !dbg !21089
  %202 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb344, align 8, !dbg !21089
  %203 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21089
  %204 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21089
  %hw345 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %204, i32 0, i32 30, !dbg !21089
  %r_ram_sz346 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw345, i32 0, i32 3, !dbg !21089
  %205 = load i8, i8* %r_ram_sz346, align 1, !dbg !21089
  call void %202(%struct.hfc_multi* %203, i8 zeroext 12, i8 zeroext %205) #12, !dbg !21089
  br label %if.end347, !dbg !21089

if.end347:                                        ; preds = %if.then343, %if.end331
  %206 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21090
  %chip348 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %206, i32 0, i32 31, !dbg !21091
  %call349 = call zeroext i1 @test_bit(i64 14, i64* %chip348) #12, !dbg !21092
  br i1 %call349, label %if.then350, label %if.end402, !dbg !21093

if.then350:                                       ; preds = %if.end347
  br label %do.body351, !dbg !21094

do.body351:                                       ; preds = %if.then350
  br label %do.body352, !dbg !21095

do.body352:                                       ; preds = %do.body351
  call void @llvm.dbg.declare(metadata i64* %__dummy353, metadata !21096, metadata !DIExpression()), !dbg !21098
  call void @llvm.dbg.declare(metadata i64* %__dummy2354, metadata !21099, metadata !DIExpression()), !dbg !21098
  %cmp355 = icmp eq i64* %__dummy353, %__dummy2354, !dbg !21098
  %conv356 = zext i1 %cmp355 to i32, !dbg !21098
  store i32 1, i32* %tmp357, align 4, !dbg !21098
  %207 = load i32, i32* %tmp357, align 4, !dbg !21098
  br label %do.body358, !dbg !21100

do.body358:                                       ; preds = %do.body352
  br label %do.body359, !dbg !21101

do.body359:                                       ; preds = %do.body358
  br label %do.body360, !dbg !21102

do.body360:                                       ; preds = %do.body359
  call void @llvm.dbg.declare(metadata i64* %__dummy361, metadata !21104, metadata !DIExpression()), !dbg !21107
  call void @llvm.dbg.declare(metadata i64* %__dummy2362, metadata !21108, metadata !DIExpression()), !dbg !21107
  %cmp363 = icmp eq i64* %__dummy361, %__dummy2362, !dbg !21107
  %conv364 = zext i1 %cmp363 to i32, !dbg !21107
  store i32 1, i32* %tmp365, align 4, !dbg !21107
  %208 = load i32, i32* %tmp365, align 4, !dbg !21107
  %call366 = call i64 @arch_local_irq_save() #12, !dbg !21109
  store i64 %call366, i64* %plx_flags, align 8, !dbg !21109
  br label %do.end367, !dbg !21109

do.end367:                                        ; preds = %do.body360
  br label %do.end368, !dbg !21102

do.end368:                                        ; preds = %do.end367
  br label %do.body369, !dbg !21101

do.body369:                                       ; preds = %do.end368
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21110, !srcloc !21111
  br label %do.body370, !dbg !21110

do.body370:                                       ; preds = %do.body369
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i944, align 8
  %209 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i944, align 8, !dbg !21112
  %210 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %209, i32 0, i32 0, !dbg !21113
  %rlock.i945 = bitcast %union.anon.1* %210 to %struct.raw_spinlock*, !dbg !21113
  br label %do.end372, !dbg !21114

do.end372:                                        ; preds = %do.body370
  br label %do.end373, !dbg !21110

do.end373:                                        ; preds = %do.end372
  br label %do.end374, !dbg !21101

do.end374:                                        ; preds = %do.end373
  br label %do.end375, !dbg !21100

do.end375:                                        ; preds = %do.end374
  br label %do.end376, !dbg !21095

do.end376:                                        ; preds = %do.end375
  %211 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21115
  %plx_membase377 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %211, i32 0, i32 23, !dbg !21116
  %212 = load i8*, i8** %plx_membase377, align 8, !dbg !21116
  %add.ptr378 = getelementptr i8, i8* %212, i64 84, !dbg !21117
  store i8* %add.ptr378, i8** %plx_acc_32, align 8, !dbg !21118
  %213 = load i8*, i8** %plx_acc_32, align 8, !dbg !21119
  %call379 = call i32 @readl(i8* %213) #12, !dbg !21120
  store i32 %call379, i32* %pv, align 4, !dbg !21121
  %214 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21122
  %hw380 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %214, i32 0, i32 30, !dbg !21124
  %r_pcm_md0381 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw380, i32 0, i32 4, !dbg !21125
  %215 = load i8, i8* %r_pcm_md0381, align 4, !dbg !21125
  %conv382 = zext i8 %215 to i32, !dbg !21122
  %and383 = and i32 %conv382, 1, !dbg !21126
  %tobool384 = icmp ne i32 %and383, 0, !dbg !21126
  br i1 %tobool384, label %if.then385, label %if.else393, !dbg !21127

if.then385:                                       ; preds = %do.end376
  %216 = load i32, i32* %pv, align 4, !dbg !21128
  %or386 = or i32 %216, 1179648, !dbg !21128
  store i32 %or386, i32* %pv, align 4, !dbg !21128
  %217 = load i32, i32* %pv, align 4, !dbg !21130
  %or387 = or i32 %217, 16384, !dbg !21130
  store i32 %or387, i32* %pv, align 4, !dbg !21130
  %218 = load i32, i32* @debug, align 4, !dbg !21131
  %and388 = and i32 %218, 262144, !dbg !21133
  %tobool389 = icmp ne i32 %and388, 0, !dbg !21133
  br i1 %tobool389, label %if.then390, label %if.end392, !dbg !21134

if.then390:                                       ; preds = %if.then385
  %219 = load i32, i32* %pv, align 4, !dbg !21135
  %call391 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.260, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0), i32 %219) #13, !dbg !21136
  br label %if.end392, !dbg !21136

if.end392:                                        ; preds = %if.then390, %if.then385
  br label %if.end401, !dbg !21137

if.else393:                                       ; preds = %do.end376
  %220 = load i32, i32* %pv, align 4, !dbg !21138
  %and394 = and i32 %220, -1179649, !dbg !21138
  store i32 %and394, i32* %pv, align 4, !dbg !21138
  %221 = load i32, i32* %pv, align 4, !dbg !21140
  %and395 = and i32 %221, -16385, !dbg !21140
  store i32 %and395, i32* %pv, align 4, !dbg !21140
  %222 = load i32, i32* @debug, align 4, !dbg !21141
  %and396 = and i32 %222, 262144, !dbg !21143
  %tobool397 = icmp ne i32 %and396, 0, !dbg !21143
  br i1 %tobool397, label %if.then398, label %if.end400, !dbg !21144

if.then398:                                       ; preds = %if.else393
  %223 = load i32, i32* %pv, align 4, !dbg !21145
  %call399 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.261, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0), i32 %223) #13, !dbg !21146
  br label %if.end400, !dbg !21146

if.end400:                                        ; preds = %if.then398, %if.else393
  br label %if.end401

if.end401:                                        ; preds = %if.end400, %if.end392
  %224 = load i32, i32* %pv, align 4, !dbg !21147
  %225 = load i8*, i8** %plx_acc_32, align 8, !dbg !21148
  call void @writel(i32 %224, i8* %225) #12, !dbg !21149
  %226 = load i64, i64* %plx_flags, align 8, !dbg !21150
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i946, align 8
  store i64 %226, i64* %flags.addr.i947, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !21151
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !21151
  store i32 1, i32* %tmp.i948, align 4, !dbg !21151
  %227 = load i32, i32* %tmp.i948, align 4, !dbg !21151
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !21152
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !21152
  store i32 1, i32* %tmp8.i949, align 4, !dbg !21152
  %228 = load i32, i32* %tmp8.i949, align 4, !dbg !21152
  %229 = load i64, i64* %flags.addr.i947, align 8, !dbg !21153
  call void @arch_local_irq_restore(i64 %229) #14, !dbg !21153
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21154, !srcloc !10125
  %230 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i946, align 8, !dbg !21155
  %231 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %230, i32 0, i32 0, !dbg !21155
  %rlock.i950 = bitcast %union.anon.1* %231 to %struct.raw_spinlock*, !dbg !21155
  br label %if.end402, !dbg !21156

if.end402:                                        ; preds = %if.end401, %if.end347
  %232 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21157
  %HFC_outb403 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %232, i32 0, i32 10, !dbg !21157
  %233 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb403, align 8, !dbg !21157
  %234 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21157
  %235 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21157
  %hw404 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %235, i32 0, i32 30, !dbg !21157
  %r_pcm_md0405 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw404, i32 0, i32 4, !dbg !21157
  %236 = load i8, i8* %r_pcm_md0405, align 4, !dbg !21157
  %conv406 = zext i8 %236 to i32, !dbg !21157
  %or407 = or i32 %conv406, 144, !dbg !21157
  %conv408 = trunc i32 %or407 to i8, !dbg !21157
  call void %233(%struct.hfc_multi* %234, i8 zeroext 20, i8 zeroext %conv408) #12, !dbg !21157
  %237 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21158
  %slots = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %237, i32 0, i32 41, !dbg !21160
  %238 = load i32, i32* %slots, align 8, !dbg !21160
  %cmp409 = icmp eq i32 %238, 32, !dbg !21161
  br i1 %cmp409, label %if.then411, label %if.end413, !dbg !21162

if.then411:                                       ; preds = %if.end402
  %239 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21163
  %HFC_outb412 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %239, i32 0, i32 10, !dbg !21163
  %240 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb412, align 8, !dbg !21163
  %241 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21163
  call void %240(%struct.hfc_multi* %241, i8 zeroext 21, i8 zeroext 0) #12, !dbg !21163
  br label %if.end413, !dbg !21163

if.end413:                                        ; preds = %if.then411, %if.end402
  %242 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21164
  %slots414 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %242, i32 0, i32 41, !dbg !21166
  %243 = load i32, i32* %slots414, align 8, !dbg !21166
  %cmp415 = icmp eq i32 %243, 64, !dbg !21167
  br i1 %cmp415, label %if.then417, label %if.end419, !dbg !21168

if.then417:                                       ; preds = %if.end413
  %244 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21169
  %HFC_outb418 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %244, i32 0, i32 10, !dbg !21169
  %245 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb418, align 8, !dbg !21169
  %246 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21169
  call void %245(%struct.hfc_multi* %246, i8 zeroext 21, i8 zeroext 16) #12, !dbg !21169
  br label %if.end419, !dbg !21169

if.end419:                                        ; preds = %if.then417, %if.end413
  %247 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21170
  %slots420 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %247, i32 0, i32 41, !dbg !21172
  %248 = load i32, i32* %slots420, align 8, !dbg !21172
  %cmp421 = icmp eq i32 %248, 128, !dbg !21173
  br i1 %cmp421, label %if.then423, label %if.end425, !dbg !21174

if.then423:                                       ; preds = %if.end419
  %249 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21175
  %HFC_outb424 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %249, i32 0, i32 10, !dbg !21175
  %250 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb424, align 8, !dbg !21175
  %251 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21175
  call void %250(%struct.hfc_multi* %251, i8 zeroext 21, i8 zeroext 32) #12, !dbg !21175
  br label %if.end425, !dbg !21175

if.end425:                                        ; preds = %if.then423, %if.end419
  %252 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21176
  %HFC_outb426 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %252, i32 0, i32 10, !dbg !21176
  %253 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb426, align 8, !dbg !21176
  %254 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21176
  %255 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21176
  %hw427 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %255, i32 0, i32 30, !dbg !21176
  %r_pcm_md0428 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw427, i32 0, i32 4, !dbg !21176
  %256 = load i8, i8* %r_pcm_md0428, align 4, !dbg !21176
  %conv429 = zext i8 %256 to i32, !dbg !21176
  %or430 = or i32 %conv429, 160, !dbg !21176
  %conv431 = trunc i32 %or430 to i8, !dbg !21176
  call void %253(%struct.hfc_multi* %254, i8 zeroext 20, i8 zeroext %conv431) #12, !dbg !21176
  %257 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21177
  %chip432 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %257, i32 0, i32 31, !dbg !21179
  %call433 = call zeroext i1 @test_bit(i64 14, i64* %chip432) #12, !dbg !21180
  br i1 %call433, label %if.then434, label %if.else436, !dbg !21181

if.then434:                                       ; preds = %if.end425
  %258 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21182
  %HFC_outb435 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %258, i32 0, i32 10, !dbg !21182
  %259 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb435, align 8, !dbg !21182
  %260 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21182
  call void %259(%struct.hfc_multi* %260, i8 zeroext 21, i8 zeroext 4) #12, !dbg !21182
  br label %if.end444, !dbg !21182

if.else436:                                       ; preds = %if.end425
  %261 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21183
  %chip437 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %261, i32 0, i32 31, !dbg !21185
  %call438 = call zeroext i1 @test_bit(i64 15, i64* %chip437) #12, !dbg !21186
  br i1 %call438, label %if.then439, label %if.else441, !dbg !21187

if.then439:                                       ; preds = %if.else436
  %262 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21188
  %HFC_outb440 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %262, i32 0, i32 10, !dbg !21188
  %263 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb440, align 8, !dbg !21188
  %264 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21188
  call void %263(%struct.hfc_multi* %264, i8 zeroext 21, i8 zeroext 16) #12, !dbg !21188
  br label %if.end443, !dbg !21188

if.else441:                                       ; preds = %if.else436
  %265 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21189
  %HFC_outb442 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %265, i32 0, i32 10, !dbg !21189
  %266 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb442, align 8, !dbg !21189
  %267 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21189
  call void %266(%struct.hfc_multi* %267, i8 zeroext 21, i8 zeroext 0) #12, !dbg !21189
  br label %if.end443

if.end443:                                        ; preds = %if.else441, %if.then439
  br label %if.end444

if.end444:                                        ; preds = %if.end443, %if.then434
  %268 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21190
  %HFC_outb445 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %268, i32 0, i32 10, !dbg !21190
  %269 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb445, align 8, !dbg !21190
  %270 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21190
  %271 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21190
  %hw446 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %271, i32 0, i32 30, !dbg !21190
  %r_pcm_md0447 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw446, i32 0, i32 4, !dbg !21190
  %272 = load i8, i8* %r_pcm_md0447, align 4, !dbg !21190
  %conv448 = zext i8 %272 to i32, !dbg !21190
  %conv449 = trunc i32 %conv448 to i8, !dbg !21190
  call void %269(%struct.hfc_multi* %270, i8 zeroext 20, i8 zeroext %conv449) #12, !dbg !21190
  store i32 0, i32* %i, align 4, !dbg !21191
  br label %for.cond450, !dbg !21193

for.cond450:                                      ; preds = %for.inc462, %if.end444
  %273 = load i32, i32* %i, align 4, !dbg !21194
  %cmp451 = icmp slt i32 %273, 256, !dbg !21196
  br i1 %cmp451, label %for.body453, label %for.end464, !dbg !21197

for.body453:                                      ; preds = %for.cond450
  %274 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21198
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %274, i32 0, i32 11, !dbg !21198
  %275 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !21198
  %276 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21198
  %277 = load i32, i32* %i, align 4, !dbg !21198
  %conv454 = trunc i32 %277 to i8, !dbg !21198
  call void %275(%struct.hfc_multi* %276, i8 zeroext 16, i8 zeroext %conv454) #12, !dbg !21198
  %278 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21200
  %HFC_outb_nodebug455 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %278, i32 0, i32 11, !dbg !21200
  %279 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug455, align 8, !dbg !21200
  %280 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21200
  call void %279(%struct.hfc_multi* %280, i8 zeroext -48, i8 zeroext 0) #12, !dbg !21200
  %281 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21201
  %ctype456 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %281, i32 0, i32 4, !dbg !21203
  %282 = load i32, i32* %ctype456, align 8, !dbg !21203
  %cmp457 = icmp ne i32 %282, 5, !dbg !21204
  br i1 %cmp457, label %if.then459, label %if.end461, !dbg !21205

if.then459:                                       ; preds = %for.body453
  %283 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21206
  %HFC_outb_nodebug460 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %283, i32 0, i32 11, !dbg !21206
  %284 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug460, align 8, !dbg !21206
  %285 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21206
  call void %284(%struct.hfc_multi* %285, i8 zeroext -47, i8 zeroext 0) #12, !dbg !21206
  br label %if.end461, !dbg !21206

if.end461:                                        ; preds = %if.then459, %for.body453
  %286 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21207
  %slot_owner = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %286, i32 0, i32 61, !dbg !21208
  %287 = load i32, i32* %i, align 4, !dbg !21209
  %idxprom = sext i32 %287 to i64, !dbg !21207
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %slot_owner, i64 0, i64 %idxprom, !dbg !21207
  store i8 -1, i8* %arrayidx, align 1, !dbg !21210
  br label %for.inc462, !dbg !21211

for.inc462:                                       ; preds = %if.end461
  %288 = load i32, i32* %i, align 4, !dbg !21212
  %inc463 = add i32 %288, 1, !dbg !21212
  store i32 %inc463, i32* %i, align 4, !dbg !21212
  br label %for.cond450, !dbg !21213, !llvm.loop !21214

for.end464:                                       ; preds = %for.cond450
  %289 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21216
  %chip465 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %289, i32 0, i32 31, !dbg !21218
  %call466 = call zeroext i1 @test_bit(i64 9, i64* %chip465) #12, !dbg !21219
  br i1 %call466, label %if.then467, label %if.end474, !dbg !21220

if.then467:                                       ; preds = %for.end464
  %290 = load i32, i32* @debug, align 4, !dbg !21221
  %and468 = and i32 %290, 262144, !dbg !21224
  %tobool469 = icmp ne i32 %and468, 0, !dbg !21224
  br i1 %tobool469, label %if.then470, label %if.end472, !dbg !21225

if.then470:                                       ; preds = %if.then467
  %call471 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.262, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0)) #13, !dbg !21226
  br label %if.end472, !dbg !21226

if.end472:                                        ; preds = %if.then470, %if.then467
  %291 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21227
  %HFC_outb473 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %291, i32 0, i32 10, !dbg !21227
  %292 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb473, align 8, !dbg !21227
  %293 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21227
  call void %292(%struct.hfc_multi* %293, i8 zeroext 2, i8 zeroext 32) #12, !dbg !21227
  br label %if.end474, !dbg !21228

if.end474:                                        ; preds = %if.end472, %for.end464
  %294 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21229
  %chip475 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %294, i32 0, i32 31, !dbg !21231
  %call476 = call zeroext i1 @test_bit(i64 15, i64* %chip475) #12, !dbg !21232
  br i1 %call476, label %if.then477, label %if.end479, !dbg !21233

if.then477:                                       ; preds = %if.end474
  %295 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21234
  %HFC_outb478 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %295, i32 0, i32 10, !dbg !21234
  %296 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb478, align 8, !dbg !21234
  %297 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21234
  call void %296(%struct.hfc_multi* %297, i8 zeroext 2, i8 zeroext 64) #12, !dbg !21234
  br label %if.end479, !dbg !21234

if.end479:                                        ; preds = %if.then477, %if.end474
  %298 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21235
  %chip480 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %298, i32 0, i32 31, !dbg !21237
  %call481 = call zeroext i1 @test_bit(i64 13, i64* %chip480) #12, !dbg !21238
  br i1 %call481, label %if.then482, label %if.end487, !dbg !21239

if.then482:                                       ; preds = %if.end479
  %call483 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.263, i64 0, i64 0)) #13, !dbg !21240
  %299 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21242
  %HFC_outb484 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %299, i32 0, i32 10, !dbg !21242
  %300 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb484, align 8, !dbg !21242
  %301 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21242
  call void %300(%struct.hfc_multi* %301, i8 zeroext 68, i8 zeroext 48) #12, !dbg !21242
  %302 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21243
  %HFC_outb485 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %302, i32 0, i32 10, !dbg !21243
  %303 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb485, align 8, !dbg !21243
  %304 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21243
  call void %303(%struct.hfc_multi* %304, i8 zeroext 67, i8 zeroext 3) #12, !dbg !21243
  call void @__const_udelay(i64 4295000) #12, !dbg !21244
  %call486 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.264, i64 0, i64 0)) #13, !dbg !21249
  %305 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21250
  call void @vpm_init(%struct.hfc_multi* %305) #12, !dbg !21251
  br label %if.end487, !dbg !21252

if.end487:                                        ; preds = %if.then482, %if.end479
  %306 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21253
  %HFC_inb488 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %306, i32 0, i32 12, !dbg !21253
  %307 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb488, align 8, !dbg !21253
  %308 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21253
  %call489 = call zeroext i8 %307(%struct.hfc_multi* %308, i8 zeroext 24) #12, !dbg !21253
  %conv490 = zext i8 %call489 to i64, !dbg !21253
  store i64 %conv490, i64* %val, align 8, !dbg !21254
  %309 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21255
  %HFC_inb491 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %309, i32 0, i32 12, !dbg !21255
  %310 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb491, align 8, !dbg !21255
  %311 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21255
  %call492 = call zeroext i8 %310(%struct.hfc_multi* %311, i8 zeroext 25) #12, !dbg !21255
  %conv493 = zext i8 %call492 to i32, !dbg !21255
  %shl494 = shl i32 %conv493, 8, !dbg !21256
  %conv495 = sext i32 %shl494 to i64, !dbg !21255
  %312 = load i64, i64* %val, align 8, !dbg !21257
  %add496 = add i64 %312, %conv495, !dbg !21257
  store i64 %add496, i64* %val, align 8, !dbg !21257
  %313 = load i32, i32* @debug, align 4, !dbg !21258
  %and497 = and i32 %313, 262144, !dbg !21260
  %tobool498 = icmp ne i32 %and497, 0, !dbg !21260
  br i1 %tobool498, label %if.then499, label %if.end501, !dbg !21261

if.then499:                                       ; preds = %if.end487
  %314 = load i64, i64* %val, align 8, !dbg !21262
  %call500 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.265, i64 0, i64 0), i64 %314) #13, !dbg !21263
  br label %if.end501, !dbg !21263

if.end501:                                        ; preds = %if.then499, %if.end487
  %315 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21264
  %lock502 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %315, i32 0, i32 57, !dbg !21265
  %316 = load i64, i64* %flags, align 8, !dbg !21266
  store %struct.spinlock* %lock502, %struct.spinlock** %lock.addr.i951, align 8
  store i64 %316, i64* %flags.addr.i952, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !21267
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !21267
  store i32 1, i32* %tmp.i953, align 4, !dbg !21267
  %317 = load i32, i32* %tmp.i953, align 4, !dbg !21267
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !21268
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !21268
  store i32 1, i32* %tmp8.i954, align 4, !dbg !21268
  %318 = load i32, i32* %tmp8.i954, align 4, !dbg !21268
  %319 = load i64, i64* %flags.addr.i952, align 8, !dbg !21269
  call void @arch_local_irq_restore(i64 %319) #14, !dbg !21269
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21270, !srcloc !10125
  %320 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i951, align 8, !dbg !21271
  %321 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %320, i32 0, i32 0, !dbg !21271
  %rlock.i955 = bitcast %union.anon.1* %321 to %struct.raw_spinlock*, !dbg !21271
  br label %do.body503, !dbg !21272

do.body503:                                       ; preds = %if.end501
  br label %do.body504, !dbg !21273

do.body504:                                       ; preds = %do.body503
  br label %do.body505, !dbg !21274

do.body505:                                       ; preds = %do.body504
  br label %do.end506, !dbg !21275

do.end506:                                        ; preds = %do.body505
  br label %do.body507, !dbg !21274

do.body507:                                       ; preds = %do.end506
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !20505
  %322 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !20505
  %323 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #11, !dbg !20506, !srcloc !14889
  store i64 %323, i64* %pfo_val__.i, align 8, !dbg !20506
  %324 = load i64, i64* %pfo_val__.i, align 8, !dbg !20506
  %325 = inttoptr i64 %324 to %struct.task_struct*, !dbg !20506
  store %struct.task_struct* %325, %struct.task_struct** %tmp.i956, align 8, !dbg !20506
  %326 = load %struct.task_struct*, %struct.task_struct** %tmp.i956, align 8, !dbg !20506
  store %struct.task_struct* %326, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20500
  %327 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20500
  store %struct.task_struct* %327, %struct.task_struct** %tmp1.i, align 8, !dbg !20500
  %328 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !20500
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %328, i32 0, i32 1, !dbg !21277
  store volatile i64 2, i64* %state, align 16, !dbg !21277
  br label %do.end509, !dbg !21277

do.end509:                                        ; preds = %do.body507
  br label %do.end510, !dbg !21274

do.end510:                                        ; preds = %do.end509
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21273, !srcloc !21278
  br label %do.end511, !dbg !21273

do.end511:                                        ; preds = %do.end510
  %call512 = call i64 @schedule_timeout(i64 2) #12, !dbg !21279
  br label %do.body513, !dbg !21280

do.body513:                                       ; preds = %do.end511
  br label %do.body514, !dbg !21281

do.body514:                                       ; preds = %do.body513
  call void @llvm.dbg.declare(metadata i64* %__dummy515, metadata !21282, metadata !DIExpression()), !dbg !21284
  call void @llvm.dbg.declare(metadata i64* %__dummy2516, metadata !21285, metadata !DIExpression()), !dbg !21284
  %cmp517 = icmp eq i64* %__dummy515, %__dummy2516, !dbg !21284
  %conv518 = zext i1 %cmp517 to i32, !dbg !21284
  store i32 1, i32* %tmp519, align 4, !dbg !21284
  %329 = load i32, i32* %tmp519, align 4, !dbg !21284
  br label %do.body520, !dbg !21286

do.body520:                                       ; preds = %do.body514
  br label %do.body521, !dbg !21287

do.body521:                                       ; preds = %do.body520
  br label %do.body522, !dbg !21288

do.body522:                                       ; preds = %do.body521
  call void @llvm.dbg.declare(metadata i64* %__dummy523, metadata !21290, metadata !DIExpression()), !dbg !21293
  call void @llvm.dbg.declare(metadata i64* %__dummy2524, metadata !21294, metadata !DIExpression()), !dbg !21293
  %cmp525 = icmp eq i64* %__dummy523, %__dummy2524, !dbg !21293
  %conv526 = zext i1 %cmp525 to i32, !dbg !21293
  store i32 1, i32* %tmp527, align 4, !dbg !21293
  %330 = load i32, i32* %tmp527, align 4, !dbg !21293
  %call528 = call i64 @arch_local_irq_save() #12, !dbg !21295
  store i64 %call528, i64* %flags, align 8, !dbg !21295
  br label %do.end529, !dbg !21295

do.end529:                                        ; preds = %do.body522
  br label %do.end530, !dbg !21288

do.end530:                                        ; preds = %do.end529
  br label %do.body531, !dbg !21287

do.body531:                                       ; preds = %do.end530
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21296, !srcloc !21297
  br label %do.body532, !dbg !21296

do.body532:                                       ; preds = %do.body531
  %331 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21298
  %lock533 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %331, i32 0, i32 57, !dbg !21298
  store %struct.spinlock* %lock533, %struct.spinlock** %lock.addr.i957, align 8
  %332 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i957, align 8, !dbg !21299
  %333 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %332, i32 0, i32 0, !dbg !21300
  %rlock.i958 = bitcast %union.anon.1* %333 to %struct.raw_spinlock*, !dbg !21300
  br label %do.end535, !dbg !21298

do.end535:                                        ; preds = %do.body532
  br label %do.end536, !dbg !21296

do.end536:                                        ; preds = %do.end535
  br label %do.end537, !dbg !21287

do.end537:                                        ; preds = %do.end536
  br label %do.end538, !dbg !21286

do.end538:                                        ; preds = %do.end537
  br label %do.end539, !dbg !21281

do.end539:                                        ; preds = %do.end538
  %334 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21301
  %HFC_inb540 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %334, i32 0, i32 12, !dbg !21301
  %335 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb540, align 8, !dbg !21301
  %336 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21301
  %call541 = call zeroext i8 %335(%struct.hfc_multi* %336, i8 zeroext 24) #12, !dbg !21301
  %conv542 = zext i8 %call541 to i64, !dbg !21301
  store i64 %conv542, i64* %val2, align 8, !dbg !21302
  %337 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21303
  %HFC_inb543 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %337, i32 0, i32 12, !dbg !21303
  %338 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb543, align 8, !dbg !21303
  %339 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21303
  %call544 = call zeroext i8 %338(%struct.hfc_multi* %339, i8 zeroext 25) #12, !dbg !21303
  %conv545 = zext i8 %call544 to i32, !dbg !21303
  %shl546 = shl i32 %conv545, 8, !dbg !21304
  %conv547 = sext i32 %shl546 to i64, !dbg !21303
  %340 = load i64, i64* %val2, align 8, !dbg !21305
  %add548 = add i64 %340, %conv547, !dbg !21305
  store i64 %add548, i64* %val2, align 8, !dbg !21305
  %341 = load i32, i32* @debug, align 4, !dbg !21306
  %and549 = and i32 %341, 262144, !dbg !21308
  %tobool550 = icmp ne i32 %and549, 0, !dbg !21308
  br i1 %tobool550, label %if.then551, label %if.end553, !dbg !21309

if.then551:                                       ; preds = %do.end539
  %342 = load i64, i64* %val2, align 8, !dbg !21310
  %call552 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.266, i64 0, i64 0), i64 %342) #13, !dbg !21311
  br label %if.end553, !dbg !21311

if.end553:                                        ; preds = %if.then551, %do.end539
  %343 = load i64, i64* %val2, align 8, !dbg !21312
  %344 = load i64, i64* %val, align 8, !dbg !21313
  %add554 = add i64 %344, 8, !dbg !21314
  %cmp555 = icmp uge i64 %343, %add554, !dbg !21315
  br i1 %cmp555, label %if.then557, label %if.else573, !dbg !21316

if.then557:                                       ; preds = %if.end553
  %345 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21317
  %chip558 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %345, i32 0, i32 31, !dbg !21320
  %call559 = call zeroext i1 @test_bit(i64 4, i64* %chip558) #12, !dbg !21321
  br i1 %call559, label %if.then560, label %if.else562, !dbg !21322

if.then560:                                       ; preds = %if.then557
  %call561 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.267, i64 0, i64 0)) #13, !dbg !21323
  br label %if.end572, !dbg !21323

if.else562:                                       ; preds = %if.then557
  %346 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21324
  %chip563 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %346, i32 0, i32 31, !dbg !21326
  %call564 = call zeroext i1 @test_bit(i64 3, i64* %chip563) #12, !dbg !21327
  br i1 %call564, label %if.then565, label %if.else567, !dbg !21328

if.then565:                                       ; preds = %if.else562
  %call566 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.268, i64 0, i64 0)) #13, !dbg !21329
  br label %if.end571, !dbg !21329

if.else567:                                       ; preds = %if.else562
  %347 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21330
  %chip568 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %347, i32 0, i32 31, !dbg !21332
  %call569 = call zeroext i1 @test_and_set_bit(i64 3, i64* %chip568) #12, !dbg !21333
  %call570 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.269, i64 0, i64 0)) #13, !dbg !21334
  br label %if.end571

if.end571:                                        ; preds = %if.else567, %if.then565
  br label %if.end572

if.end572:                                        ; preds = %if.end571, %if.then560
  br label %if.end705, !dbg !21335

if.else573:                                       ; preds = %if.end553
  %348 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21336
  %chip574 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %348, i32 0, i32 31, !dbg !21338
  %call575 = call zeroext i1 @test_bit(i64 4, i64* %chip574) #12, !dbg !21339
  br i1 %call575, label %if.then576, label %if.end578, !dbg !21340

if.then576:                                       ; preds = %if.else573
  br label %controller_fail, !dbg !21341

controller_fail:                                  ; preds = %if.else702, %if.then576
  call void @llvm.dbg.label(metadata !21342), !dbg !21344
  %call577 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.270, i64 0, i64 0)) #13, !dbg !21345
  store i32 -5, i32* %err, align 4, !dbg !21346
  br label %out, !dbg !21347

if.end578:                                        ; preds = %if.else573
  %349 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21348
  %chip579 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %349, i32 0, i32 31, !dbg !21349
  %call580 = call zeroext i1 @test_bit(i64 3, i64* %chip579) #12, !dbg !21350
  br i1 %call580, label %if.then581, label %if.else583, !dbg !21351

if.then581:                                       ; preds = %if.end578
  %call582 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.271, i64 0, i64 0)) #13, !dbg !21352
  br label %if.end704, !dbg !21354

if.else583:                                       ; preds = %if.end578
  %350 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21355
  %chip584 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %350, i32 0, i32 31, !dbg !21357
  %call585 = call zeroext i1 @test_bit(i64 14, i64* %chip584) #12, !dbg !21358
  br i1 %call585, label %land.lhs.true587, label %if.end591, !dbg !21359

land.lhs.true587:                                 ; preds = %if.else583
  %351 = load i32, i32* @plxsd_master, align 4, !dbg !21360
  %tobool588 = icmp ne i32 %351, 0, !dbg !21360
  br i1 %tobool588, label %if.then589, label %if.end591, !dbg !21361

if.then589:                                       ; preds = %land.lhs.true587
  %call590 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.272, i64 0, i64 0)) #13, !dbg !21362
  store i32 -5, i32* %err, align 4, !dbg !21364
  br label %out, !dbg !21365

if.end591:                                        ; preds = %land.lhs.true587, %if.else583
  %352 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21366
  %chip592 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %352, i32 0, i32 31, !dbg !21367
  %call593 = call zeroext i1 @test_bit(i64 14, i64* %chip592) #12, !dbg !21368
  br i1 %call593, label %if.then594, label %if.end631, !dbg !21369

if.then594:                                       ; preds = %if.end591
  br label %do.body595, !dbg !21370

do.body595:                                       ; preds = %if.then594
  br label %do.body596, !dbg !21371

do.body596:                                       ; preds = %do.body595
  call void @llvm.dbg.declare(metadata i64* %__dummy597, metadata !21372, metadata !DIExpression()), !dbg !21374
  call void @llvm.dbg.declare(metadata i64* %__dummy2598, metadata !21375, metadata !DIExpression()), !dbg !21374
  %cmp599 = icmp eq i64* %__dummy597, %__dummy2598, !dbg !21374
  %conv600 = zext i1 %cmp599 to i32, !dbg !21374
  store i32 1, i32* %tmp601, align 4, !dbg !21374
  %353 = load i32, i32* %tmp601, align 4, !dbg !21374
  br label %do.body602, !dbg !21376

do.body602:                                       ; preds = %do.body596
  br label %do.body603, !dbg !21377

do.body603:                                       ; preds = %do.body602
  br label %do.body604, !dbg !21378

do.body604:                                       ; preds = %do.body603
  call void @llvm.dbg.declare(metadata i64* %__dummy605, metadata !21380, metadata !DIExpression()), !dbg !21383
  call void @llvm.dbg.declare(metadata i64* %__dummy2606, metadata !21384, metadata !DIExpression()), !dbg !21383
  %cmp607 = icmp eq i64* %__dummy605, %__dummy2606, !dbg !21383
  %conv608 = zext i1 %cmp607 to i32, !dbg !21383
  store i32 1, i32* %tmp609, align 4, !dbg !21383
  %354 = load i32, i32* %tmp609, align 4, !dbg !21383
  %call610 = call i64 @arch_local_irq_save() #12, !dbg !21385
  store i64 %call610, i64* %plx_flags, align 8, !dbg !21385
  br label %do.end611, !dbg !21385

do.end611:                                        ; preds = %do.body604
  br label %do.end612, !dbg !21378

do.end612:                                        ; preds = %do.end611
  br label %do.body613, !dbg !21377

do.body613:                                       ; preds = %do.end612
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21386, !srcloc !21387
  br label %do.body614, !dbg !21386

do.body614:                                       ; preds = %do.body613
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i959, align 8
  %355 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i959, align 8, !dbg !21388
  %356 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %355, i32 0, i32 0, !dbg !21389
  %rlock.i960 = bitcast %union.anon.1* %356 to %struct.raw_spinlock*, !dbg !21389
  br label %do.end616, !dbg !21390

do.end616:                                        ; preds = %do.body614
  br label %do.end617, !dbg !21386

do.end617:                                        ; preds = %do.end616
  br label %do.end618, !dbg !21377

do.end618:                                        ; preds = %do.end617
  br label %do.end619, !dbg !21376

do.end619:                                        ; preds = %do.end618
  br label %do.end620, !dbg !21371

do.end620:                                        ; preds = %do.end619
  %357 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21391
  %plx_membase621 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %357, i32 0, i32 23, !dbg !21392
  %358 = load i8*, i8** %plx_membase621, align 8, !dbg !21392
  %add.ptr622 = getelementptr i8, i8* %358, i64 84, !dbg !21393
  store i8* %add.ptr622, i8** %plx_acc_32, align 8, !dbg !21394
  %359 = load i8*, i8** %plx_acc_32, align 8, !dbg !21395
  %call623 = call i32 @readl(i8* %359) #12, !dbg !21396
  store i32 %call623, i32* %pv, align 4, !dbg !21397
  %360 = load i32, i32* %pv, align 4, !dbg !21398
  %or624 = or i32 %360, 1179648, !dbg !21398
  store i32 %or624, i32* %pv, align 4, !dbg !21398
  %361 = load i32, i32* %pv, align 4, !dbg !21399
  %or625 = or i32 %361, 16384, !dbg !21399
  store i32 %or625, i32* %pv, align 4, !dbg !21399
  %362 = load i32, i32* %pv, align 4, !dbg !21400
  %363 = load i8*, i8** %plx_acc_32, align 8, !dbg !21401
  call void @writel(i32 %362, i8* %363) #12, !dbg !21402
  %364 = load i64, i64* %plx_flags, align 8, !dbg !21403
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i961, align 8
  store i64 %364, i64* %flags.addr.i962, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !21404
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !21404
  store i32 1, i32* %tmp.i963, align 4, !dbg !21404
  %365 = load i32, i32* %tmp.i963, align 4, !dbg !21404
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !21405
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !21405
  store i32 1, i32* %tmp8.i964, align 4, !dbg !21405
  %366 = load i32, i32* %tmp8.i964, align 4, !dbg !21405
  %367 = load i64, i64* %flags.addr.i962, align 8, !dbg !21406
  call void @arch_local_irq_restore(i64 %367) #14, !dbg !21406
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21407, !srcloc !10125
  %368 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i961, align 8, !dbg !21408
  %369 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %368, i32 0, i32 0, !dbg !21408
  %rlock.i965 = bitcast %union.anon.1* %369 to %struct.raw_spinlock*, !dbg !21408
  %370 = load i32, i32* @debug, align 4, !dbg !21409
  %and626 = and i32 %370, 262144, !dbg !21411
  %tobool627 = icmp ne i32 %and626, 0, !dbg !21411
  br i1 %tobool627, label %if.then628, label %if.end630, !dbg !21412

if.then628:                                       ; preds = %do.end620
  %371 = load i32, i32* %pv, align 4, !dbg !21413
  %call629 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.260, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0), i32 %371) #13, !dbg !21414
  br label %if.end630, !dbg !21414

if.end630:                                        ; preds = %if.then628, %do.end620
  br label %if.end631, !dbg !21415

if.end631:                                        ; preds = %if.end630, %if.end591
  %372 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21416
  %hw632 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %372, i32 0, i32 30, !dbg !21417
  %r_pcm_md0633 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw632, i32 0, i32 4, !dbg !21418
  %373 = load i8, i8* %r_pcm_md0633, align 4, !dbg !21419
  %conv634 = zext i8 %373 to i32, !dbg !21419
  %or635 = or i32 %conv634, 1, !dbg !21419
  %conv636 = trunc i32 %or635 to i8, !dbg !21419
  store i8 %conv636, i8* %r_pcm_md0633, align 4, !dbg !21419
  %374 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21420
  %HFC_outb637 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %374, i32 0, i32 10, !dbg !21420
  %375 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb637, align 8, !dbg !21420
  %376 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21420
  %377 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21420
  %hw638 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %377, i32 0, i32 30, !dbg !21420
  %r_pcm_md0639 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw638, i32 0, i32 4, !dbg !21420
  %378 = load i8, i8* %r_pcm_md0639, align 4, !dbg !21420
  %conv640 = zext i8 %378 to i32, !dbg !21420
  %conv641 = trunc i32 %conv640 to i8, !dbg !21420
  call void %375(%struct.hfc_multi* %376, i8 zeroext 20, i8 zeroext %conv641) #12, !dbg !21420
  %379 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21421
  %lock642 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %379, i32 0, i32 57, !dbg !21422
  %380 = load i64, i64* %flags, align 8, !dbg !21423
  store %struct.spinlock* %lock642, %struct.spinlock** %lock.addr.i966, align 8
  store i64 %380, i64* %flags.addr.i967, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !21424
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !21424
  store i32 1, i32* %tmp.i968, align 4, !dbg !21424
  %381 = load i32, i32* %tmp.i968, align 4, !dbg !21424
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !21425
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !21425
  store i32 1, i32* %tmp8.i969, align 4, !dbg !21425
  %382 = load i32, i32* %tmp8.i969, align 4, !dbg !21425
  %383 = load i64, i64* %flags.addr.i967, align 8, !dbg !21426
  call void @arch_local_irq_restore(i64 %383) #14, !dbg !21426
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21427, !srcloc !10125
  %384 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i966, align 8, !dbg !21428
  %385 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %384, i32 0, i32 0, !dbg !21428
  %rlock.i970 = bitcast %union.anon.1* %385 to %struct.raw_spinlock*, !dbg !21428
  br label %do.body643, !dbg !21429

do.body643:                                       ; preds = %if.end631
  br label %do.body644, !dbg !21430

do.body644:                                       ; preds = %do.body643
  br label %do.body645, !dbg !21431

do.body645:                                       ; preds = %do.body644
  br label %do.end646, !dbg !21432

do.end646:                                        ; preds = %do.body645
  br label %do.body647, !dbg !21431

do.body647:                                       ; preds = %do.end646
  store i8* null, i8** %__vpp_verify.i972, align 8, !dbg !20476
  %386 = load i8*, i8** %__vpp_verify.i972, align 8, !dbg !20476
  %387 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #11, !dbg !20477, !srcloc !14889
  store i64 %387, i64* %pfo_val__.i973, align 8, !dbg !20477
  %388 = load i64, i64* %pfo_val__.i973, align 8, !dbg !20477
  %389 = inttoptr i64 %388 to %struct.task_struct*, !dbg !20477
  store %struct.task_struct* %389, %struct.task_struct** %tmp.i974, align 8, !dbg !20477
  %390 = load %struct.task_struct*, %struct.task_struct** %tmp.i974, align 8, !dbg !20477
  store %struct.task_struct* %390, %struct.task_struct** %pscr_ret__.i971, align 8, !dbg !20471
  %391 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i971, align 8, !dbg !20471
  store %struct.task_struct* %391, %struct.task_struct** %tmp1.i975, align 8, !dbg !20471
  %392 = load %struct.task_struct*, %struct.task_struct** %tmp1.i975, align 8, !dbg !20471
  %state649 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %392, i32 0, i32 1, !dbg !21434
  store volatile i64 2, i64* %state649, align 16, !dbg !21434
  br label %do.end650, !dbg !21434

do.end650:                                        ; preds = %do.body647
  br label %do.end651, !dbg !21431

do.end651:                                        ; preds = %do.end650
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21430, !srcloc !21435
  br label %do.end652, !dbg !21430

do.end652:                                        ; preds = %do.end651
  %call653 = call i64 @schedule_timeout(i64 2) #12, !dbg !21436
  br label %do.body654, !dbg !21437

do.body654:                                       ; preds = %do.end652
  br label %do.body655, !dbg !21438

do.body655:                                       ; preds = %do.body654
  call void @llvm.dbg.declare(metadata i64* %__dummy656, metadata !21439, metadata !DIExpression()), !dbg !21441
  call void @llvm.dbg.declare(metadata i64* %__dummy2657, metadata !21442, metadata !DIExpression()), !dbg !21441
  %cmp658 = icmp eq i64* %__dummy656, %__dummy2657, !dbg !21441
  %conv659 = zext i1 %cmp658 to i32, !dbg !21441
  store i32 1, i32* %tmp660, align 4, !dbg !21441
  %393 = load i32, i32* %tmp660, align 4, !dbg !21441
  br label %do.body661, !dbg !21443

do.body661:                                       ; preds = %do.body655
  br label %do.body662, !dbg !21444

do.body662:                                       ; preds = %do.body661
  br label %do.body663, !dbg !21445

do.body663:                                       ; preds = %do.body662
  call void @llvm.dbg.declare(metadata i64* %__dummy664, metadata !21447, metadata !DIExpression()), !dbg !21450
  call void @llvm.dbg.declare(metadata i64* %__dummy2665, metadata !21451, metadata !DIExpression()), !dbg !21450
  %cmp666 = icmp eq i64* %__dummy664, %__dummy2665, !dbg !21450
  %conv667 = zext i1 %cmp666 to i32, !dbg !21450
  store i32 1, i32* %tmp668, align 4, !dbg !21450
  %394 = load i32, i32* %tmp668, align 4, !dbg !21450
  %call669 = call i64 @arch_local_irq_save() #12, !dbg !21452
  store i64 %call669, i64* %flags, align 8, !dbg !21452
  br label %do.end670, !dbg !21452

do.end670:                                        ; preds = %do.body663
  br label %do.end671, !dbg !21445

do.end671:                                        ; preds = %do.end670
  br label %do.body672, !dbg !21444

do.body672:                                       ; preds = %do.end671
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21453, !srcloc !21454
  br label %do.body673, !dbg !21453

do.body673:                                       ; preds = %do.body672
  %395 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21455
  %lock674 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %395, i32 0, i32 57, !dbg !21455
  store %struct.spinlock* %lock674, %struct.spinlock** %lock.addr.i976, align 8
  %396 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i976, align 8, !dbg !21456
  %397 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %396, i32 0, i32 0, !dbg !21457
  %rlock.i977 = bitcast %union.anon.1* %397 to %struct.raw_spinlock*, !dbg !21457
  br label %do.end676, !dbg !21455

do.end676:                                        ; preds = %do.body673
  br label %do.end677, !dbg !21453

do.end677:                                        ; preds = %do.end676
  br label %do.end678, !dbg !21444

do.end678:                                        ; preds = %do.end677
  br label %do.end679, !dbg !21443

do.end679:                                        ; preds = %do.end678
  br label %do.end680, !dbg !21438

do.end680:                                        ; preds = %do.end679
  %398 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21458
  %HFC_inb681 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %398, i32 0, i32 12, !dbg !21458
  %399 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb681, align 8, !dbg !21458
  %400 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21458
  %call682 = call zeroext i8 %399(%struct.hfc_multi* %400, i8 zeroext 24) #12, !dbg !21458
  %conv683 = zext i8 %call682 to i64, !dbg !21458
  store i64 %conv683, i64* %val2, align 8, !dbg !21459
  %401 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21460
  %HFC_inb684 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %401, i32 0, i32 12, !dbg !21460
  %402 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb684, align 8, !dbg !21460
  %403 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21460
  %call685 = call zeroext i8 %402(%struct.hfc_multi* %403, i8 zeroext 25) #12, !dbg !21460
  %conv686 = zext i8 %call685 to i32, !dbg !21460
  %shl687 = shl i32 %conv686, 8, !dbg !21461
  %conv688 = sext i32 %shl687 to i64, !dbg !21460
  %404 = load i64, i64* %val2, align 8, !dbg !21462
  %add689 = add i64 %404, %conv688, !dbg !21462
  store i64 %add689, i64* %val2, align 8, !dbg !21462
  %405 = load i32, i32* @debug, align 4, !dbg !21463
  %and690 = and i32 %405, 262144, !dbg !21465
  %tobool691 = icmp ne i32 %and690, 0, !dbg !21465
  br i1 %tobool691, label %if.then692, label %if.end694, !dbg !21466

if.then692:                                       ; preds = %do.end680
  %406 = load i64, i64* %val2, align 8, !dbg !21467
  %call693 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.273, i64 0, i64 0), i64 %406) #13, !dbg !21468
  br label %if.end694, !dbg !21468

if.end694:                                        ; preds = %if.then692, %do.end680
  %407 = load i64, i64* %val2, align 8, !dbg !21469
  %408 = load i64, i64* %val, align 8, !dbg !21471
  %add695 = add i64 %408, 8, !dbg !21472
  %cmp696 = icmp uge i64 %407, %add695, !dbg !21473
  br i1 %cmp696, label %if.then698, label %if.else702, !dbg !21474

if.then698:                                       ; preds = %if.end694
  %409 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21475
  %chip699 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %409, i32 0, i32 31, !dbg !21477
  %call700 = call zeroext i1 @test_and_set_bit(i64 4, i64* %chip699) #12, !dbg !21478
  %call701 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.274, i64 0, i64 0)) #13, !dbg !21479
  br label %if.end703, !dbg !21480

if.else702:                                       ; preds = %if.end694
  br label %controller_fail, !dbg !21481

if.end703:                                        ; preds = %if.then698
  br label %if.end704

if.end704:                                        ; preds = %if.end703, %if.then581
  br label %if.end705

if.end705:                                        ; preds = %if.end704, %if.end572
  %410 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21482
  %chip706 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %410, i32 0, i32 31, !dbg !21483
  %call707 = call zeroext i1 @test_bit(i64 14, i64* %chip706) #12, !dbg !21484
  br i1 %call707, label %if.then708, label %if.end748, !dbg !21485

if.then708:                                       ; preds = %if.end705
  %411 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21486
  %chip709 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %411, i32 0, i32 31, !dbg !21488
  %call710 = call zeroext i1 @test_bit(i64 4, i64* %chip709) #12, !dbg !21489
  br i1 %call710, label %if.then711, label %if.end712, !dbg !21490

if.then711:                                       ; preds = %if.then708
  store i32 1, i32* @plxsd_master, align 4, !dbg !21491
  br label %if.end712, !dbg !21492

if.end712:                                        ; preds = %if.then711, %if.then708
  br label %do.body713, !dbg !21493

do.body713:                                       ; preds = %if.end712
  br label %do.body714, !dbg !21494

do.body714:                                       ; preds = %do.body713
  call void @llvm.dbg.declare(metadata i64* %__dummy715, metadata !21495, metadata !DIExpression()), !dbg !21497
  call void @llvm.dbg.declare(metadata i64* %__dummy2716, metadata !21498, metadata !DIExpression()), !dbg !21497
  %cmp717 = icmp eq i64* %__dummy715, %__dummy2716, !dbg !21497
  %conv718 = zext i1 %cmp717 to i32, !dbg !21497
  store i32 1, i32* %tmp719, align 4, !dbg !21497
  %412 = load i32, i32* %tmp719, align 4, !dbg !21497
  br label %do.body720, !dbg !21499

do.body720:                                       ; preds = %do.body714
  br label %do.body721, !dbg !21500

do.body721:                                       ; preds = %do.body720
  br label %do.body722, !dbg !21501

do.body722:                                       ; preds = %do.body721
  call void @llvm.dbg.declare(metadata i64* %__dummy723, metadata !21503, metadata !DIExpression()), !dbg !21506
  call void @llvm.dbg.declare(metadata i64* %__dummy2724, metadata !21507, metadata !DIExpression()), !dbg !21506
  %cmp725 = icmp eq i64* %__dummy723, %__dummy2724, !dbg !21506
  %conv726 = zext i1 %cmp725 to i32, !dbg !21506
  store i32 1, i32* %tmp727, align 4, !dbg !21506
  %413 = load i32, i32* %tmp727, align 4, !dbg !21506
  %call728 = call i64 @arch_local_irq_save() #12, !dbg !21508
  store i64 %call728, i64* %plx_flags, align 8, !dbg !21508
  br label %do.end729, !dbg !21508

do.end729:                                        ; preds = %do.body722
  br label %do.end730, !dbg !21501

do.end730:                                        ; preds = %do.end729
  br label %do.body731, !dbg !21500

do.body731:                                       ; preds = %do.end730
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21509, !srcloc !21510
  br label %do.body732, !dbg !21509

do.body732:                                       ; preds = %do.body731
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i978, align 8
  %414 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i978, align 8, !dbg !21511
  %415 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %414, i32 0, i32 0, !dbg !21512
  %rlock.i979 = bitcast %union.anon.1* %415 to %struct.raw_spinlock*, !dbg !21512
  br label %do.end734, !dbg !21513

do.end734:                                        ; preds = %do.body732
  br label %do.end735, !dbg !21509

do.end735:                                        ; preds = %do.end734
  br label %do.end736, !dbg !21500

do.end736:                                        ; preds = %do.end735
  br label %do.end737, !dbg !21499

do.end737:                                        ; preds = %do.end736
  br label %do.end738, !dbg !21494

do.end738:                                        ; preds = %do.end737
  %416 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21514
  %plx_membase739 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %416, i32 0, i32 23, !dbg !21515
  %417 = load i8*, i8** %plx_membase739, align 8, !dbg !21515
  %add.ptr740 = getelementptr i8, i8* %417, i64 84, !dbg !21516
  store i8* %add.ptr740, i8** %plx_acc_32, align 8, !dbg !21517
  %418 = load i8*, i8** %plx_acc_32, align 8, !dbg !21518
  %call741 = call i32 @readl(i8* %418) #12, !dbg !21519
  store i32 %call741, i32* %pv, align 4, !dbg !21520
  %419 = load i32, i32* %pv, align 4, !dbg !21521
  %or742 = or i32 %419, 67108864, !dbg !21521
  store i32 %or742, i32* %pv, align 4, !dbg !21521
  %420 = load i32, i32* %pv, align 4, !dbg !21522
  %421 = load i8*, i8** %plx_acc_32, align 8, !dbg !21523
  call void @writel(i32 %420, i8* %421) #12, !dbg !21524
  %422 = load i64, i64* %plx_flags, align 8, !dbg !21525
  store %struct.spinlock* @plx_lock, %struct.spinlock** %lock.addr.i980, align 8
  store i64 %422, i64* %flags.addr.i981, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !21526
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !21526
  store i32 1, i32* %tmp.i982, align 4, !dbg !21526
  %423 = load i32, i32* %tmp.i982, align 4, !dbg !21526
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !21527
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !21527
  store i32 1, i32* %tmp8.i983, align 4, !dbg !21527
  %424 = load i32, i32* %tmp8.i983, align 4, !dbg !21527
  %425 = load i64, i64* %flags.addr.i981, align 8, !dbg !21528
  call void @arch_local_irq_restore(i64 %425) #14, !dbg !21528
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21529, !srcloc !10125
  %426 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i980, align 8, !dbg !21530
  %427 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %426, i32 0, i32 0, !dbg !21530
  %rlock.i984 = bitcast %union.anon.1* %427 to %struct.raw_spinlock*, !dbg !21530
  %428 = load i32, i32* @debug, align 4, !dbg !21531
  %and743 = and i32 %428, 262144, !dbg !21533
  %tobool744 = icmp ne i32 %and743, 0, !dbg !21533
  br i1 %tobool744, label %if.then745, label %if.end747, !dbg !21534

if.then745:                                       ; preds = %do.end738
  %429 = load i32, i32* %pv, align 4, !dbg !21535
  %call746 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.275, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0), i32 %429) #13, !dbg !21536
  br label %if.end747, !dbg !21536

if.end747:                                        ; preds = %if.then745, %do.end738
  br label %if.end748, !dbg !21537

if.end748:                                        ; preds = %if.end747, %if.end705
  %430 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21538
  %pcm = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %430, i32 0, i32 3, !dbg !21540
  %431 = load i32, i32* %pcm, align 4, !dbg !21540
  %tobool749 = icmp ne i32 %431, 0, !dbg !21538
  br i1 %tobool749, label %if.then750, label %if.else753, !dbg !21541

if.then750:                                       ; preds = %if.end748
  %432 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21542
  %pcm751 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %432, i32 0, i32 3, !dbg !21543
  %433 = load i32, i32* %pcm751, align 4, !dbg !21543
  %call752 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.276, i64 0, i64 0), i32 %433) #13, !dbg !21544
  br label %if.end766, !dbg !21544

if.else753:                                       ; preds = %if.end748
  %434 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21545
  %chip754 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %434, i32 0, i32 31, !dbg !21548
  %call755 = call zeroext i1 @test_bit(i64 4, i64* %chip754) #12, !dbg !21549
  br i1 %call755, label %if.then760, label %lor.lhs.false, !dbg !21550

lor.lhs.false:                                    ; preds = %if.else753
  %435 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21551
  %chip757 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %435, i32 0, i32 31, !dbg !21552
  %call758 = call zeroext i1 @test_bit(i64 14, i64* %chip757) #12, !dbg !21553
  br i1 %call758, label %if.then760, label %if.end762, !dbg !21554

if.then760:                                       ; preds = %lor.lhs.false, %if.else753
  %436 = load i32, i32* @PCM_cnt, align 4, !dbg !21555
  %inc761 = add i32 %436, 1, !dbg !21555
  store i32 %inc761, i32* @PCM_cnt, align 4, !dbg !21555
  br label %if.end762, !dbg !21557

if.end762:                                        ; preds = %if.then760, %lor.lhs.false
  %437 = load i32, i32* @PCM_cnt, align 4, !dbg !21558
  %438 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21559
  %pcm763 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %438, i32 0, i32 3, !dbg !21560
  store i32 %437, i32* %pcm763, align 4, !dbg !21561
  %439 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21562
  %pcm764 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %439, i32 0, i32 3, !dbg !21563
  %440 = load i32, i32* %pcm764, align 4, !dbg !21563
  %call765 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.277, i64 0, i64 0), i32 %440) #13, !dbg !21564
  br label %if.end766

if.end766:                                        ; preds = %if.end762, %if.then750
  %441 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21565
  %HFC_outb767 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %441, i32 0, i32 10, !dbg !21565
  %442 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb767, align 8, !dbg !21565
  %443 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21565
  %444 = load i32, i32* @poll_timer, align 4, !dbg !21565
  %conv768 = trunc i32 %444 to i8, !dbg !21565
  call void %442(%struct.hfc_multi* %443, i8 zeroext 26, i8 zeroext %conv768) #12, !dbg !21565
  %445 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21566
  %hw769 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %445, i32 0, i32 30, !dbg !21567
  %r_irqmsk_misc = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw769, i32 0, i32 5, !dbg !21568
  %446 = load i8, i8* %r_irqmsk_misc, align 1, !dbg !21569
  %conv770 = zext i8 %446 to i32, !dbg !21569
  %or771 = or i32 %conv770, 2, !dbg !21569
  %conv772 = trunc i32 %or771 to i8, !dbg !21569
  store i8 %conv772, i8* %r_irqmsk_misc, align 1, !dbg !21569
  %447 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21570
  %ctype773 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %447, i32 0, i32 4, !dbg !21572
  %448 = load i32, i32* %ctype773, align 8, !dbg !21572
  %cmp774 = icmp eq i32 %448, 1, !dbg !21573
  br i1 %cmp774, label %if.then776, label %if.end782, !dbg !21574

if.then776:                                       ; preds = %if.end766
  %449 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21575
  %hw777 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %449, i32 0, i32 30, !dbg !21576
  %r_irqmsk_misc778 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw777, i32 0, i32 5, !dbg !21577
  %450 = load i8, i8* %r_irqmsk_misc778, align 1, !dbg !21578
  %conv779 = zext i8 %450 to i32, !dbg !21578
  %or780 = or i32 %conv779, 1, !dbg !21578
  %conv781 = trunc i32 %or780 to i8, !dbg !21578
  store i8 %conv781, i8* %r_irqmsk_misc778, align 1, !dbg !21578
  br label %if.end782, !dbg !21575

if.end782:                                        ; preds = %if.then776, %if.end766
  %451 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21579
  %chip783 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %451, i32 0, i32 31, !dbg !21581
  %call784 = call zeroext i1 @test_bit(i64 6, i64* %chip783) #12, !dbg !21582
  br i1 %call784, label %if.then785, label %if.end807, !dbg !21583

if.then785:                                       ; preds = %if.end782
  %452 = load i32, i32* @debug, align 4, !dbg !21584
  %and786 = and i32 %452, 262144, !dbg !21587
  %tobool787 = icmp ne i32 %and786, 0, !dbg !21587
  br i1 %tobool787, label %if.then788, label %if.end790, !dbg !21588

if.then788:                                       ; preds = %if.then785
  %call789 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.278, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0)) #13, !dbg !21589
  br label %if.end790, !dbg !21589

if.end790:                                        ; preds = %if.then788, %if.then785
  %453 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21590
  %hw791 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %453, i32 0, i32 30, !dbg !21591
  %r_dtmf = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw791, i32 0, i32 6, !dbg !21592
  store i8 9, i8* %r_dtmf, align 2, !dbg !21593
  %454 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21594
  %chip792 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %454, i32 0, i32 31, !dbg !21596
  %call793 = call zeroext i1 @test_bit(i64 8, i64* %chip792) #12, !dbg !21597
  br i1 %call793, label %if.then794, label %if.end800, !dbg !21598

if.then794:                                       ; preds = %if.end790
  %455 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21599
  %hw795 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %455, i32 0, i32 30, !dbg !21600
  %r_dtmf796 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw795, i32 0, i32 6, !dbg !21601
  %456 = load i8, i8* %r_dtmf796, align 2, !dbg !21602
  %conv797 = zext i8 %456 to i32, !dbg !21602
  %or798 = or i32 %conv797, 128, !dbg !21602
  %conv799 = trunc i32 %or798 to i8, !dbg !21602
  store i8 %conv799, i8* %r_dtmf796, align 2, !dbg !21602
  br label %if.end800, !dbg !21599

if.end800:                                        ; preds = %if.then794, %if.end790
  %457 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21603
  %HFC_outb801 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %457, i32 0, i32 10, !dbg !21603
  %458 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb801, align 8, !dbg !21603
  %459 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21603
  call void %458(%struct.hfc_multi* %459, i8 zeroext 29, i8 zeroext 101) #12, !dbg !21603
  %460 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21604
  %hw802 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %460, i32 0, i32 30, !dbg !21605
  %r_irqmsk_misc803 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw802, i32 0, i32 5, !dbg !21606
  %461 = load i8, i8* %r_irqmsk_misc803, align 1, !dbg !21607
  %conv804 = zext i8 %461 to i32, !dbg !21607
  %or805 = or i32 %conv804, 8, !dbg !21607
  %conv806 = trunc i32 %or805 to i8, !dbg !21607
  store i8 %conv806, i8* %r_irqmsk_misc803, align 1, !dbg !21607
  br label %if.end807, !dbg !21608

if.end807:                                        ; preds = %if.end800, %if.end782
  %462 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21609
  %chip808 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %462, i32 0, i32 31, !dbg !21611
  %call809 = call zeroext i1 @test_bit(i64 8, i64* %chip808) #12, !dbg !21612
  br i1 %call809, label %if.then810, label %if.else811, !dbg !21613

if.then810:                                       ; preds = %if.end807
  store i8 -127, i8* %r_conf_en, align 1, !dbg !21614
  br label %if.end812, !dbg !21615

if.else811:                                       ; preds = %if.end807
  store i8 1, i8* %r_conf_en, align 1, !dbg !21616
  br label %if.end812

if.end812:                                        ; preds = %if.else811, %if.then810
  %463 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21617
  %ctype813 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %463, i32 0, i32 4, !dbg !21619
  %464 = load i32, i32* %ctype813, align 8, !dbg !21619
  %cmp814 = icmp ne i32 %464, 5, !dbg !21620
  br i1 %cmp814, label %if.then816, label %if.end818, !dbg !21621

if.then816:                                       ; preds = %if.end812
  %465 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21622
  %HFC_outb817 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %465, i32 0, i32 10, !dbg !21622
  %466 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb817, align 8, !dbg !21622
  %467 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21622
  %468 = load i8, i8* %r_conf_en, align 1, !dbg !21622
  call void %466(%struct.hfc_multi* %467, i8 zeroext 24, i8 zeroext %468) #12, !dbg !21622
  br label %if.end818, !dbg !21622

if.end818:                                        ; preds = %if.then816, %if.end812
  %469 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21623
  %leds = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %469, i32 0, i32 42, !dbg !21624
  %470 = load i32, i32* %leds, align 4, !dbg !21624
  switch i32 %470, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb829
    i32 3, label %sw.bb829
  ], !dbg !21625

sw.bb:                                            ; preds = %if.end818
  %471 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21626
  %chip819 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %471, i32 0, i32 31, !dbg !21629
  %call820 = call zeroext i1 @test_bit(i64 12, i64* %chip819) #12, !dbg !21630
  br i1 %call820, label %if.then821, label %if.else823, !dbg !21631

if.then821:                                       ; preds = %sw.bb
  %472 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21632
  %HFC_outb822 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %472, i32 0, i32 10, !dbg !21632
  %473 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb822, align 8, !dbg !21632
  %474 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21632
  call void %473(%struct.hfc_multi* %474, i8 zeroext 68, i8 zeroext 50) #12, !dbg !21632
  br label %if.end825, !dbg !21632

if.else823:                                       ; preds = %sw.bb
  %475 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21633
  %HFC_outb824 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %475, i32 0, i32 10, !dbg !21633
  %476 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb824, align 8, !dbg !21633
  %477 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21633
  call void %476(%struct.hfc_multi* %477, i8 zeroext 68, i8 zeroext 48) #12, !dbg !21633
  br label %if.end825

if.end825:                                        ; preds = %if.else823, %if.then821
  %478 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21634
  %HFC_outb826 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %478, i32 0, i32 10, !dbg !21634
  %479 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb826, align 8, !dbg !21634
  %480 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21634
  call void %479(%struct.hfc_multi* %480, i8 zeroext 67, i8 zeroext 15) #12, !dbg !21634
  %481 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21635
  %HFC_outb827 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %481, i32 0, i32 10, !dbg !21635
  %482 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb827, align 8, !dbg !21635
  %483 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21635
  call void %482(%struct.hfc_multi* %483, i8 zeroext 65, i8 zeroext 0) #12, !dbg !21635
  %484 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21636
  %HFC_outb828 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %484, i32 0, i32 10, !dbg !21636
  %485 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb828, align 8, !dbg !21636
  %486 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21636
  call void %485(%struct.hfc_multi* %486, i8 zeroext 66, i8 zeroext 12) #12, !dbg !21636
  br label %sw.epilog, !dbg !21637

sw.bb829:                                         ; preds = %if.end818, %if.end818
  %487 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21638
  %HFC_outb830 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %487, i32 0, i32 10, !dbg !21638
  %488 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb830, align 8, !dbg !21638
  %489 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21638
  call void %488(%struct.hfc_multi* %489, i8 zeroext 68, i8 zeroext -16) #12, !dbg !21638
  %490 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21639
  %HFC_outb831 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %490, i32 0, i32 10, !dbg !21639
  %491 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb831, align 8, !dbg !21639
  %492 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21639
  call void %491(%struct.hfc_multi* %492, i8 zeroext 67, i8 zeroext -1) #12, !dbg !21639
  %493 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21640
  %HFC_outb832 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %493, i32 0, i32 10, !dbg !21640
  %494 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb832, align 8, !dbg !21640
  %495 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21640
  call void %494(%struct.hfc_multi* %495, i8 zeroext 65, i8 zeroext 0) #12, !dbg !21640
  br label %sw.epilog, !dbg !21641

sw.epilog:                                        ; preds = %if.end818, %sw.bb829, %if.end825
  %496 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21642
  %chip833 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %496, i32 0, i32 31, !dbg !21644
  %call834 = call zeroext i1 @test_bit(i64 15, i64* %chip833) #12, !dbg !21645
  br i1 %call834, label %if.then835, label %if.end840, !dbg !21646

if.then835:                                       ; preds = %sw.epilog
  %497 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21647
  %hw836 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %497, i32 0, i32 30, !dbg !21649
  %r_st_sync = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw836, i32 0, i32 7, !dbg !21650
  store i8 16, i8* %r_st_sync, align 1, !dbg !21651
  %498 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21652
  %HFC_outb837 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %498, i32 0, i32 10, !dbg !21652
  %499 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb837, align 8, !dbg !21652
  %500 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21652
  %501 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21652
  %hw838 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %501, i32 0, i32 30, !dbg !21652
  %r_st_sync839 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw838, i32 0, i32 7, !dbg !21652
  %502 = load i8, i8* %r_st_sync839, align 1, !dbg !21652
  call void %499(%struct.hfc_multi* %500, i8 zeroext 23, i8 zeroext %502) #12, !dbg !21652
  br label %if.end840, !dbg !21653

if.end840:                                        ; preds = %if.then835, %sw.epilog
  %503 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21654
  %masterclk = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %503, i32 0, i32 32, !dbg !21656
  %504 = load i32, i32* %masterclk, align 8, !dbg !21656
  %cmp841 = icmp sge i32 %504, 0, !dbg !21657
  br i1 %cmp841, label %if.then843, label %if.end860, !dbg !21658

if.then843:                                       ; preds = %if.end840
  %505 = load i32, i32* @debug, align 4, !dbg !21659
  %and844 = and i32 %505, 262144, !dbg !21662
  %tobool845 = icmp ne i32 %and844, 0, !dbg !21662
  br i1 %tobool845, label %if.then846, label %if.end849, !dbg !21663

if.then846:                                       ; preds = %if.then843
  %506 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21664
  %masterclk847 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %506, i32 0, i32 32, !dbg !21665
  %507 = load i32, i32* %masterclk847, align 8, !dbg !21665
  %508 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21666
  %ports = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %508, i32 0, i32 5, !dbg !21667
  %509 = load i32, i32* %ports, align 4, !dbg !21667
  %sub = sub i32 %509, 1, !dbg !21668
  %call848 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.279, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0), i32 %507, i32 %sub) #13, !dbg !21669
  br label %if.end849, !dbg !21669

if.end849:                                        ; preds = %if.then846, %if.then843
  %510 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21670
  %masterclk850 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %510, i32 0, i32 32, !dbg !21671
  %511 = load i32, i32* %masterclk850, align 8, !dbg !21671
  %or851 = or i32 %511, 8, !dbg !21672
  %512 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21673
  %hw852 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %512, i32 0, i32 30, !dbg !21674
  %r_st_sync853 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw852, i32 0, i32 7, !dbg !21675
  %513 = load i8, i8* %r_st_sync853, align 1, !dbg !21676
  %conv854 = zext i8 %513 to i32, !dbg !21676
  %or855 = or i32 %conv854, %or851, !dbg !21676
  %conv856 = trunc i32 %or855 to i8, !dbg !21676
  store i8 %conv856, i8* %r_st_sync853, align 1, !dbg !21676
  %514 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21677
  %HFC_outb857 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %514, i32 0, i32 10, !dbg !21677
  %515 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb857, align 8, !dbg !21677
  %516 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21677
  %517 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21677
  %hw858 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %517, i32 0, i32 30, !dbg !21677
  %r_st_sync859 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw858, i32 0, i32 7, !dbg !21677
  %518 = load i8, i8* %r_st_sync859, align 1, !dbg !21677
  call void %515(%struct.hfc_multi* %516, i8 zeroext 23, i8 zeroext %518) #12, !dbg !21677
  br label %if.end860, !dbg !21678

if.end860:                                        ; preds = %if.end849, %if.end840
  %519 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21679
  %HFC_outb861 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %519, i32 0, i32 10, !dbg !21679
  %520 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb861, align 8, !dbg !21679
  %521 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21679
  %522 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21679
  %hw862 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %522, i32 0, i32 30, !dbg !21679
  %r_irqmsk_misc863 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw862, i32 0, i32 5, !dbg !21679
  %523 = load i8, i8* %r_irqmsk_misc863, align 1, !dbg !21679
  call void %520(%struct.hfc_multi* %521, i8 zeroext 17, i8 zeroext %523) #12, !dbg !21679
  %524 = load i32, i32* @debug, align 4, !dbg !21680
  %and864 = and i32 %524, 262144, !dbg !21682
  %tobool865 = icmp ne i32 %and864, 0, !dbg !21682
  br i1 %tobool865, label %if.then866, label %if.end871, !dbg !21683

if.then866:                                       ; preds = %if.end860
  %525 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21684
  %hw867 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %525, i32 0, i32 30, !dbg !21685
  %r_irqmsk_misc868 = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw867, i32 0, i32 5, !dbg !21686
  %526 = load i8, i8* %r_irqmsk_misc868, align 1, !dbg !21686
  %conv869 = zext i8 %526 to i32, !dbg !21684
  %call870 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.280, i64 0, i64 0), i32 %conv869) #13, !dbg !21687
  br label %if.end871, !dbg !21687

if.end871:                                        ; preds = %if.then866, %if.end860
  %527 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21688
  %HFC_outb872 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %527, i32 0, i32 10, !dbg !21688
  %528 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb872, align 8, !dbg !21688
  %529 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21688
  call void %528(%struct.hfc_multi* %529, i8 zeroext 8, i8 zeroext 0) #12, !dbg !21688
  %530 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21689
  %HFC_outb873 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %530, i32 0, i32 10, !dbg !21689
  %531 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb873, align 8, !dbg !21689
  %532 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21689
  call void %531(%struct.hfc_multi* %532, i8 zeroext 9, i8 zeroext 0) #12, !dbg !21689
  %533 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21690
  %HFC_outb874 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %533, i32 0, i32 10, !dbg !21690
  %534 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb874, align 8, !dbg !21690
  %535 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21690
  call void %534(%struct.hfc_multi* %535, i8 zeroext 10, i8 zeroext 0) #12, !dbg !21690
  store i32 0, i32* %i, align 4, !dbg !21691
  br label %for.cond875, !dbg !21693

for.cond875:                                      ; preds = %for.inc884, %if.end871
  %536 = load i32, i32* %i, align 4, !dbg !21694
  %cmp876 = icmp slt i32 %536, 256, !dbg !21696
  br i1 %cmp876, label %for.body878, label %for.end886, !dbg !21697

for.body878:                                      ; preds = %for.cond875
  %537 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21698
  %HFC_outb_nodebug879 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %537, i32 0, i32 11, !dbg !21698
  %538 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug879, align 8, !dbg !21698
  %539 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21698
  %540 = load i32, i32* %i, align 4, !dbg !21698
  %conv880 = trunc i32 %540 to i8, !dbg !21698
  call void %538(%struct.hfc_multi* %539, i8 zeroext 8, i8 zeroext %conv880) #12, !dbg !21698
  %541 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21700
  %HFC_outb_nodebug881 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %541, i32 0, i32 11, !dbg !21700
  %542 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug881, align 8, !dbg !21700
  %543 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21700
  %544 = load i32, i32* %i, align 4, !dbg !21700
  %mul = mul i32 %544, 3, !dbg !21700
  %and882 = and i32 %mul, 255, !dbg !21700
  %conv883 = trunc i32 %and882 to i8, !dbg !21700
  call void %542(%struct.hfc_multi* %543, i8 zeroext -64, i8 zeroext %conv883) #12, !dbg !21700
  br label %for.inc884, !dbg !21701

for.inc884:                                       ; preds = %for.body878
  %545 = load i32, i32* %i, align 4, !dbg !21702
  %inc885 = add i32 %545, 1, !dbg !21702
  store i32 %inc885, i32* %i, align 4, !dbg !21702
  br label %for.cond875, !dbg !21703, !llvm.loop !21704

for.end886:                                       ; preds = %for.cond875
  store i32 0, i32* %i, align 4, !dbg !21706
  br label %for.cond887, !dbg !21708

for.cond887:                                      ; preds = %for.inc908, %for.end886
  %546 = load i32, i32* %i, align 4, !dbg !21709
  %cmp888 = icmp slt i32 %546, 256, !dbg !21711
  br i1 %cmp888, label %for.body890, label %for.end910, !dbg !21712

for.body890:                                      ; preds = %for.cond887
  %547 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21713
  %HFC_outb_nodebug891 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %547, i32 0, i32 11, !dbg !21713
  %548 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug891, align 8, !dbg !21713
  %549 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21713
  %550 = load i32, i32* %i, align 4, !dbg !21713
  %conv892 = trunc i32 %550 to i8, !dbg !21713
  call void %548(%struct.hfc_multi* %549, i8 zeroext 8, i8 zeroext %conv892) #12, !dbg !21713
  %551 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21715
  %HFC_inb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %551, i32 0, i32 13, !dbg !21715
  %552 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug, align 8, !dbg !21715
  %553 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21715
  %call893 = call zeroext i8 %552(%struct.hfc_multi* %553, i8 zeroext -64) #12, !dbg !21715
  %554 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21716
  %HFC_inb_nodebug894 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %554, i32 0, i32 13, !dbg !21716
  %555 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug894, align 8, !dbg !21716
  %556 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21716
  %call895 = call zeroext i8 %555(%struct.hfc_multi* %556, i8 zeroext -120) #12, !dbg !21716
  store i8 %call895, i8* %rval, align 1, !dbg !21717
  %557 = load i8, i8* %rval, align 1, !dbg !21718
  %conv896 = zext i8 %557 to i32, !dbg !21718
  %558 = load i32, i32* %i, align 4, !dbg !21720
  %mul897 = mul i32 %558, 3, !dbg !21721
  %and898 = and i32 %mul897, 255, !dbg !21722
  %cmp899 = icmp ne i32 %conv896, %and898, !dbg !21723
  br i1 %cmp899, label %if.then901, label %if.end907, !dbg !21724

if.then901:                                       ; preds = %for.body890
  %559 = load i32, i32* %i, align 4, !dbg !21725
  %560 = load i8, i8* %rval, align 1, !dbg !21727
  %conv902 = zext i8 %560 to i32, !dbg !21727
  %561 = load i32, i32* %i, align 4, !dbg !21728
  %mul903 = mul i32 %561, 3, !dbg !21729
  %and904 = and i32 %mul903, 255, !dbg !21730
  %call905 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.281, i64 0, i64 0), i32 %559, i32 %conv902, i32 %and904) #13, !dbg !21731
  %562 = load i32, i32* %err, align 4, !dbg !21732
  %inc906 = add i32 %562, 1, !dbg !21732
  store i32 %inc906, i32* %err, align 4, !dbg !21732
  br label %if.end907, !dbg !21733

if.end907:                                        ; preds = %if.then901, %for.body890
  br label %for.inc908, !dbg !21734

for.inc908:                                       ; preds = %if.end907
  %563 = load i32, i32* %i, align 4, !dbg !21735
  %inc909 = add i32 %563, 1, !dbg !21735
  store i32 %inc909, i32* %i, align 4, !dbg !21735
  br label %for.cond887, !dbg !21736, !llvm.loop !21737

for.end910:                                       ; preds = %for.cond887
  %564 = load i32, i32* %err, align 4, !dbg !21739
  %tobool911 = icmp ne i32 %564, 0, !dbg !21739
  br i1 %tobool911, label %if.then912, label %if.end914, !dbg !21741

if.then912:                                       ; preds = %for.end910
  %565 = load i32, i32* %err, align 4, !dbg !21742
  %call913 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.282, i64 0, i64 0), i32 %565) #13, !dbg !21744
  store i32 -5, i32* %err, align 4, !dbg !21745
  br label %out, !dbg !21746

if.end914:                                        ; preds = %for.end910
  %566 = load i32, i32* @debug, align 4, !dbg !21747
  %and915 = and i32 %566, 262144, !dbg !21749
  %tobool916 = icmp ne i32 %and915, 0, !dbg !21749
  br i1 %tobool916, label %if.then917, label %if.end919, !dbg !21750

if.then917:                                       ; preds = %if.end914
  %call918 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_chip, i64 0, i64 0)) #13, !dbg !21751
  br label %if.end919, !dbg !21751

if.end919:                                        ; preds = %if.then917, %if.end914
  br label %out, !dbg !21752

out:                                              ; preds = %if.end919, %if.then912, %if.then589, %controller_fail, %if.then35
  call void @llvm.dbg.label(metadata !21753), !dbg !21754
  %567 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21755
  %lock920 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %567, i32 0, i32 57, !dbg !21756
  %568 = load i64, i64* %flags, align 8, !dbg !21757
  store %struct.spinlock* %lock920, %struct.spinlock** %lock.addr.i921, align 8
  store i64 %568, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !21758
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !21758
  store i32 1, i32* %tmp.i, align 4, !dbg !21758
  %569 = load i32, i32* %tmp.i, align 4, !dbg !21758
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !21759
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !21759
  store i32 1, i32* %tmp8.i, align 4, !dbg !21759
  %570 = load i32, i32* %tmp8.i, align 4, !dbg !21759
  %571 = load i64, i64* %flags.addr.i, align 8, !dbg !21760
  call void @arch_local_irq_restore(i64 %571) #14, !dbg !21760
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21761, !srcloc !10125
  %572 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i921, align 8, !dbg !21762
  %573 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %572, i32 0, i32 0, !dbg !21762
  %rlock.i922 = bitcast %union.anon.1* %573 to %struct.raw_spinlock*, !dbg !21762
  %574 = load i32, i32* %err, align 4, !dbg !21763
  ret i32 %574, !dbg !21764
}

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #3

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ph_state_irq(%struct.hfc_multi* %hc, i8 zeroext %r_irq_statech) #2 !dbg !21765 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %r_irq_statech.addr = alloca i8, align 1
  %dch = alloca %struct.dchannel*, align 8
  %ch = alloca i32, align 4
  %active = alloca i32, align 4
  %st_status = alloca i8, align 1
  %temp = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !21768, metadata !DIExpression()), !dbg !21769
  store i8 %r_irq_statech, i8* %r_irq_statech.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %r_irq_statech.addr, metadata !21770, metadata !DIExpression()), !dbg !21771
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !21772, metadata !DIExpression()), !dbg !21773
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !21774, metadata !DIExpression()), !dbg !21775
  call void @llvm.dbg.declare(metadata i32* %active, metadata !21776, metadata !DIExpression()), !dbg !21777
  call void @llvm.dbg.declare(metadata i8* %st_status, metadata !21778, metadata !DIExpression()), !dbg !21779
  call void @llvm.dbg.declare(metadata i8* %temp, metadata !21780, metadata !DIExpression()), !dbg !21781
  store i32 0, i32* %ch, align 4, !dbg !21782
  br label %for.cond, !dbg !21784

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !21785
  %cmp = icmp sle i32 %0, 31, !dbg !21787
  br i1 %cmp, label %for.body, label %for.end, !dbg !21788

for.body:                                         ; preds = %for.cond
  %1 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21789
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %1, i32 0, i32 60, !dbg !21792
  %2 = load i32, i32* %ch, align 4, !dbg !21793
  %idxprom = sext i32 %2 to i64, !dbg !21789
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !21789
  %dch1 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 0, !dbg !21794
  %3 = load %struct.dchannel*, %struct.dchannel** %dch1, align 8, !dbg !21794
  %tobool = icmp ne %struct.dchannel* %3, null, !dbg !21789
  br i1 %tobool, label %if.then, label %if.end82, !dbg !21795

if.then:                                          ; preds = %for.body
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21796
  %chan2 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %4, i32 0, i32 60, !dbg !21798
  %5 = load i32, i32* %ch, align 4, !dbg !21799
  %idxprom3 = sext i32 %5 to i64, !dbg !21796
  %arrayidx4 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan2, i64 0, i64 %idxprom3, !dbg !21796
  %dch5 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx4, i32 0, i32 0, !dbg !21800
  %6 = load %struct.dchannel*, %struct.dchannel** %dch5, align 8, !dbg !21800
  store %struct.dchannel* %6, %struct.dchannel** %dch, align 8, !dbg !21801
  %7 = load i8, i8* %r_irq_statech.addr, align 1, !dbg !21802
  %conv = zext i8 %7 to i32, !dbg !21802
  %and = and i32 %conv, 1, !dbg !21804
  %tobool6 = icmp ne i32 %and, 0, !dbg !21804
  br i1 %tobool6, label %if.then7, label %if.end79, !dbg !21805

if.then7:                                         ; preds = %if.then
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21806
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 11, !dbg !21806
  %9 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !21806
  %10 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21806
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21806
  %chan8 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %11, i32 0, i32 60, !dbg !21806
  %12 = load i32, i32* %ch, align 4, !dbg !21806
  %idxprom9 = sext i32 %12 to i64, !dbg !21806
  %arrayidx10 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan8, i64 0, i64 %idxprom9, !dbg !21806
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx10, i32 0, i32 2, !dbg !21806
  %13 = load i32, i32* %port, align 8, !dbg !21806
  %conv11 = trunc i32 %13 to i8, !dbg !21806
  call void %9(%struct.hfc_multi* %10, i8 zeroext 22, i8 zeroext %conv11) #12, !dbg !21806
  call void @__const_udelay(i64 4295) #12, !dbg !21808
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21813
  %HFC_inb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %14, i32 0, i32 13, !dbg !21813
  %15 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug, align 8, !dbg !21813
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21813
  %call = call zeroext i8 %15(%struct.hfc_multi* %16, i8 zeroext 48) #12, !dbg !21813
  store i8 %call, i8* %st_status, align 1, !dbg !21814
  br label %while.cond, !dbg !21815

while.cond:                                       ; preds = %if.end, %if.then7
  %17 = load i8, i8* %st_status, align 1, !dbg !21816
  %conv12 = zext i8 %17 to i32, !dbg !21816
  %18 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21817
  %HFC_inb_nodebug13 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %18, i32 0, i32 13, !dbg !21817
  %19 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug13, align 8, !dbg !21817
  %20 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21817
  %call14 = call zeroext i8 %19(%struct.hfc_multi* %20, i8 zeroext 48) #12, !dbg !21817
  store i8 %call14, i8* %temp, align 1, !dbg !21818
  %conv15 = zext i8 %call14 to i32, !dbg !21819
  %cmp16 = icmp ne i32 %conv12, %conv15, !dbg !21820
  br i1 %cmp16, label %while.body, label %while.end, !dbg !21815

while.body:                                       ; preds = %while.cond
  %21 = load i32, i32* @debug, align 4, !dbg !21821
  %and18 = and i32 %21, 4194304, !dbg !21824
  %tobool19 = icmp ne i32 %and18, 0, !dbg !21824
  br i1 %tobool19, label %if.then20, label %if.end, !dbg !21825

if.then20:                                        ; preds = %while.body
  %22 = load i8, i8* %temp, align 1, !dbg !21826
  %conv21 = zext i8 %22 to i32, !dbg !21826
  %23 = load i8, i8* %st_status, align 1, !dbg !21827
  %conv22 = zext i8 %23 to i32, !dbg !21827
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.ph_state_irq, i64 0, i64 0), i32 %conv21, i32 %conv22) #13, !dbg !21828
  br label %if.end, !dbg !21828

if.end:                                           ; preds = %if.then20, %while.body
  %24 = load i8, i8* %temp, align 1, !dbg !21829
  store i8 %24, i8* %st_status, align 1, !dbg !21830
  br label %while.cond, !dbg !21815, !llvm.loop !21831

while.end:                                        ; preds = %while.cond
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21833
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %25, i32 0, i32 31, !dbg !21835
  %call24 = call zeroext i1 @test_bit(i64 14, i64* %chip) #12, !dbg !21836
  br i1 %call24, label %land.lhs.true, label %if.end45, !dbg !21837

land.lhs.true:                                    ; preds = %while.end
  %26 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !21838
  %dev = getelementptr inbounds %struct.dchannel, %struct.dchannel* %26, i32 0, i32 0, !dbg !21839
  %D = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev, i32 0, i32 0, !dbg !21840
  %protocol = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D, i32 0, i32 1, !dbg !21841
  %27 = load i32, i32* %protocol, align 8, !dbg !21841
  %cmp26 = icmp eq i32 %27, 1, !dbg !21842
  br i1 %cmp26, label %if.then28, label %if.end45, !dbg !21843

if.then28:                                        ; preds = %land.lhs.true
  %28 = load i8, i8* %st_status, align 1, !dbg !21844
  %conv29 = zext i8 %28 to i32, !dbg !21844
  %and30 = and i32 %conv29, 16, !dbg !21847
  %tobool31 = icmp ne i32 %and30, 0, !dbg !21847
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !21848

if.then32:                                        ; preds = %if.then28
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21849
  %chan33 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %29, i32 0, i32 60, !dbg !21850
  %30 = load i32, i32* %ch, align 4, !dbg !21851
  %idxprom34 = sext i32 %30 to i64, !dbg !21849
  %arrayidx35 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan33, i64 0, i64 %idxprom34, !dbg !21849
  %port36 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx35, i32 0, i32 2, !dbg !21852
  %31 = load i32, i32* %port36, align 8, !dbg !21852
  %shl = shl i32 1, %31, !dbg !21853
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21854
  %syncronized = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %32, i32 0, i32 55, !dbg !21855
  %33 = load i32, i32* %syncronized, align 4, !dbg !21856
  %or = or i32 %33, %shl, !dbg !21856
  store i32 %or, i32* %syncronized, align 4, !dbg !21856
  br label %if.end44, !dbg !21854

if.else:                                          ; preds = %if.then28
  %34 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21857
  %chan37 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %34, i32 0, i32 60, !dbg !21858
  %35 = load i32, i32* %ch, align 4, !dbg !21859
  %idxprom38 = sext i32 %35 to i64, !dbg !21857
  %arrayidx39 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan37, i64 0, i64 %idxprom38, !dbg !21857
  %port40 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx39, i32 0, i32 2, !dbg !21860
  %36 = load i32, i32* %port40, align 8, !dbg !21860
  %shl41 = shl i32 1, %36, !dbg !21861
  %neg = xor i32 %shl41, -1, !dbg !21862
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21863
  %syncronized42 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %37, i32 0, i32 55, !dbg !21864
  %38 = load i32, i32* %syncronized42, align 4, !dbg !21865
  %and43 = and i32 %38, %neg, !dbg !21865
  store i32 %and43, i32* %syncronized42, align 4, !dbg !21865
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then32
  br label %if.end45, !dbg !21866

if.end45:                                         ; preds = %if.end44, %land.lhs.true, %while.end
  %39 = load i8, i8* %st_status, align 1, !dbg !21867
  %conv46 = zext i8 %39 to i32, !dbg !21867
  %and47 = and i32 %conv46, 15, !dbg !21868
  %40 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !21869
  %state = getelementptr inbounds %struct.dchannel, %struct.dchannel* %40, i32 0, i32 4, !dbg !21870
  store i32 %and47, i32* %state, align 8, !dbg !21871
  %41 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !21872
  %dev48 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %41, i32 0, i32 0, !dbg !21874
  %D49 = getelementptr inbounds %struct.mISDNdevice, %struct.mISDNdevice* %dev48, i32 0, i32 0, !dbg !21875
  %protocol50 = getelementptr inbounds %struct.mISDNchannel, %struct.mISDNchannel* %D49, i32 0, i32 1, !dbg !21876
  %42 = load i32, i32* %protocol50, align 8, !dbg !21876
  %cmp51 = icmp eq i32 %42, 2, !dbg !21877
  br i1 %cmp51, label %if.then53, label %if.else54, !dbg !21878

if.then53:                                        ; preds = %if.end45
  store i32 3, i32* %active, align 4, !dbg !21879
  br label %if.end55, !dbg !21880

if.else54:                                        ; preds = %if.end45
  store i32 7, i32* %active, align 4, !dbg !21881
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.then53
  %43 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !21882
  %state56 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %43, i32 0, i32 4, !dbg !21884
  %44 = load i32, i32* %state56, align 8, !dbg !21884
  %45 = load i32, i32* %active, align 4, !dbg !21885
  %cmp57 = icmp eq i32 %44, %45, !dbg !21886
  br i1 %cmp57, label %if.then59, label %if.end66, !dbg !21887

if.then59:                                        ; preds = %if.end55
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21888
  %HFC_outb_nodebug60 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 11, !dbg !21888
  %47 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug60, align 8, !dbg !21888
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21888
  %49 = load i32, i32* %ch, align 4, !dbg !21888
  %shl61 = shl i32 %49, 1, !dbg !21888
  %or62 = or i32 %shl61, 1, !dbg !21888
  %conv63 = trunc i32 %or62 to i8, !dbg !21888
  call void %47(%struct.hfc_multi* %48, i8 zeroext 15, i8 zeroext %conv63) #12, !dbg !21888
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21890
  %HFC_wait_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %50, i32 0, i32 17, !dbg !21890
  %51 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug, align 8, !dbg !21890
  %52 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21890
  call void %51(%struct.hfc_multi* %52) #12, !dbg !21890
  %53 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21891
  %HFC_outb_nodebug64 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %53, i32 0, i32 11, !dbg !21891
  %54 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug64, align 8, !dbg !21891
  %55 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21891
  call void %54(%struct.hfc_multi* %55, i8 zeroext 14, i8 zeroext 2) #12, !dbg !21891
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21892
  %HFC_wait_nodebug65 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %56, i32 0, i32 17, !dbg !21892
  %57 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug65, align 8, !dbg !21892
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21892
  call void %57(%struct.hfc_multi* %58) #12, !dbg !21892
  %59 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !21893
  %tx_idx = getelementptr inbounds %struct.dchannel, %struct.dchannel* %59, i32 0, i32 14, !dbg !21894
  store i32 0, i32* %tx_idx, align 8, !dbg !21895
  br label %if.end66, !dbg !21896

if.end66:                                         ; preds = %if.then59, %if.end55
  br label %do.body, !dbg !21897

do.body:                                          ; preds = %if.end66
  %60 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !21898
  %Flags = getelementptr inbounds %struct.dchannel, %struct.dchannel* %60, i32 0, i32 1, !dbg !21898
  %call67 = call zeroext i1 @test_and_set_bit(i64 31, i64* %Flags) #12, !dbg !21898
  %61 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !21898
  %workq = getelementptr inbounds %struct.dchannel, %struct.dchannel* %61, i32 0, i32 2, !dbg !21898
  %call68 = call zeroext i1 @schedule_work(%struct.work_struct* %workq) #12, !dbg !21898
  br label %do.end, !dbg !21898

do.end:                                           ; preds = %do.body
  %62 = load i32, i32* @debug, align 4, !dbg !21900
  %and69 = and i32 %62, 4194304, !dbg !21902
  %tobool70 = icmp ne i32 %and69, 0, !dbg !21902
  br i1 %tobool70, label %if.then71, label %if.end78, !dbg !21903

if.then71:                                        ; preds = %do.end
  %63 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !21904
  %state72 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %63, i32 0, i32 4, !dbg !21905
  %64 = load i32, i32* %state72, align 8, !dbg !21905
  %65 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21906
  %chan73 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %65, i32 0, i32 60, !dbg !21907
  %66 = load i32, i32* %ch, align 4, !dbg !21908
  %idxprom74 = sext i32 %66 to i64, !dbg !21906
  %arrayidx75 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan73, i64 0, i64 %idxprom74, !dbg !21906
  %port76 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx75, i32 0, i32 2, !dbg !21909
  %67 = load i32, i32* %port76, align 8, !dbg !21909
  %call77 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.207, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.ph_state_irq, i64 0, i64 0), i32 %64, i32 %67) #13, !dbg !21910
  br label %if.end78, !dbg !21910

if.end78:                                         ; preds = %if.then71, %do.end
  br label %if.end79, !dbg !21911

if.end79:                                         ; preds = %if.end78, %if.then
  %68 = load i8, i8* %r_irq_statech.addr, align 1, !dbg !21912
  %conv80 = zext i8 %68 to i32, !dbg !21912
  %shr = ashr i32 %conv80, 1, !dbg !21912
  %conv81 = trunc i32 %shr to i8, !dbg !21912
  store i8 %conv81, i8* %r_irq_statech.addr, align 1, !dbg !21912
  br label %if.end82, !dbg !21913

if.end82:                                         ; preds = %if.end79, %for.body
  br label %for.inc, !dbg !21914

for.inc:                                          ; preds = %if.end82
  %69 = load i32, i32* %ch, align 4, !dbg !21915
  %inc = add i32 %69, 1, !dbg !21915
  store i32 %inc, i32* %ch, align 4, !dbg !21915
  br label %for.cond, !dbg !21916, !llvm.loop !21917

for.end:                                          ; preds = %for.cond
  %70 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21919
  %chip83 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %70, i32 0, i32 31, !dbg !21921
  %call84 = call zeroext i1 @test_bit(i64 14, i64* %chip83) #12, !dbg !21922
  br i1 %call84, label %if.then85, label %if.end86, !dbg !21923

if.then85:                                        ; preds = %for.end
  %71 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21924
  call void @plxsd_checksync(%struct.hfc_multi* %71, i32 0) #12, !dbg !21925
  br label %if.end86, !dbg !21925

if.end86:                                         ; preds = %if.then85, %for.end
  ret void, !dbg !21926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #2 !dbg !21927 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !21930, metadata !DIExpression()), !dbg !21931
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !21932
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !21933
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !21934
  ret i1 %call, !dbg !21935
}

; Function Attrs: noredzone
declare dso_local void @mISDN_clock_update(%struct.mISDNclock*, i32, i64*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_timer_irq(%struct.hfc_multi* %hc) #2 !dbg !21936 {
entry:
  %lock.addr.i404 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i404, metadata !10043, metadata !DIExpression()), !dbg !21937
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10050, metadata !DIExpression()), !dbg !21941
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10052, metadata !DIExpression()), !dbg !21942
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %ch = alloca i32, align 4
  %temp = alloca i32, align 4
  %dch = alloca %struct.dchannel*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !21949, metadata !DIExpression()), !dbg !21950
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !21951, metadata !DIExpression()), !dbg !21952
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !21953, metadata !DIExpression()), !dbg !21954
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !21955, metadata !DIExpression()), !dbg !21956
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !21957, metadata !DIExpression()), !dbg !21958
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21959
  %e1_resync = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 56, !dbg !21960
  %1 = load i32, i32* %e1_resync, align 8, !dbg !21960
  %tobool = icmp ne i32 %1, 0, !dbg !21959
  br i1 %tobool, label %if.then, label %if.end55, !dbg !21961

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !21962

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !21963

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !21964, metadata !DIExpression()), !dbg !21966
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !21967, metadata !DIExpression()), !dbg !21966
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !21966
  %conv = zext i1 %cmp to i32, !dbg !21966
  store i32 1, i32* %tmp, align 4, !dbg !21966
  %2 = load i32, i32* %tmp, align 4, !dbg !21966
  br label %do.body2, !dbg !21968

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !21969

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !21970

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !21972, metadata !DIExpression()), !dbg !21975
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !21976, metadata !DIExpression()), !dbg !21975
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !21975
  %conv8 = zext i1 %cmp7 to i32, !dbg !21975
  store i32 1, i32* %tmp9, align 4, !dbg !21975
  %3 = load i32, i32* %tmp9, align 4, !dbg !21975
  %call = call i64 @arch_local_irq_save() #12, !dbg !21977
  store i64 %call, i64* %flags, align 8, !dbg !21977
  br label %do.end, !dbg !21977

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !21970

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !21969

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !21978, !srcloc !21979
  br label %do.body12, !dbg !21978

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21980
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !21981
  %rlock.i = bitcast %union.anon.1* %5 to %struct.raw_spinlock*, !dbg !21981
  br label %do.end14, !dbg !21982

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !21978

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !21969

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !21968

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !21963

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21983
  %e1_resync19 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 56, !dbg !21985
  %7 = load i32, i32* %e1_resync19, align 8, !dbg !21985
  %and = and i32 %7, 1, !dbg !21986
  %tobool20 = icmp ne i32 %and, 0, !dbg !21986
  br i1 %tobool20, label %if.then21, label %if.end30, !dbg !21987

if.then21:                                        ; preds = %do.end18
  %8 = load i32, i32* @debug, align 4, !dbg !21988
  %and22 = and i32 %8, 524288, !dbg !21991
  %tobool23 = icmp ne i32 %and22, 0, !dbg !21991
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !21992

if.then24:                                        ; preds = %if.then21
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.208, i64 0, i64 0)) #13, !dbg !21993
  br label %if.end, !dbg !21993

if.end:                                           ; preds = %if.then24, %if.then21
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21994
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %9, i32 0, i32 10, !dbg !21994
  %10 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !21994
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21994
  call void %10(%struct.hfc_multi* %11, i8 zeroext 53, i8 zeroext 1) #12, !dbg !21994
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !21995
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %12, i32 0, i32 31, !dbg !21997
  %call26 = call zeroext i1 @test_bit(i64 5, i64* %chip) #12, !dbg !21998
  br i1 %call26, label %if.then27, label %if.end29, !dbg !21999

if.then27:                                        ; preds = %if.end
  %13 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22000
  %HFC_outb28 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %13, i32 0, i32 10, !dbg !22000
  %14 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb28, align 8, !dbg !22000
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22000
  call void %14(%struct.hfc_multi* %15, i8 zeroext 49, i8 zeroext 1) #12, !dbg !22000
  br label %if.end29, !dbg !22000

if.end29:                                         ; preds = %if.then27, %if.end
  br label %if.end30, !dbg !22001

if.end30:                                         ; preds = %if.end29, %do.end18
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22002
  %e1_resync31 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %16, i32 0, i32 56, !dbg !22004
  %17 = load i32, i32* %e1_resync31, align 8, !dbg !22004
  %and32 = and i32 %17, 2, !dbg !22005
  %tobool33 = icmp ne i32 %and32, 0, !dbg !22005
  br i1 %tobool33, label %if.then34, label %if.end41, !dbg !22006

if.then34:                                        ; preds = %if.end30
  %18 = load i32, i32* @debug, align 4, !dbg !22007
  %and35 = and i32 %18, 524288, !dbg !22010
  %tobool36 = icmp ne i32 %and35, 0, !dbg !22010
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !22011

if.then37:                                        ; preds = %if.then34
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.209, i64 0, i64 0)) #13, !dbg !22012
  br label %if.end39, !dbg !22012

if.end39:                                         ; preds = %if.then37, %if.then34
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22013
  %HFC_outb40 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %19, i32 0, i32 10, !dbg !22013
  %20 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb40, align 8, !dbg !22013
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22013
  call void %20(%struct.hfc_multi* %21, i8 zeroext 53, i8 zeroext 2) #12, !dbg !22013
  br label %if.end41, !dbg !22014

if.end41:                                         ; preds = %if.end39, %if.end30
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22015
  %e1_resync42 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 56, !dbg !22017
  %23 = load i32, i32* %e1_resync42, align 8, !dbg !22017
  %and43 = and i32 %23, 4, !dbg !22018
  %tobool44 = icmp ne i32 %and43, 0, !dbg !22018
  br i1 %tobool44, label %if.then45, label %if.end53, !dbg !22019

if.then45:                                        ; preds = %if.end41
  %24 = load i32, i32* @debug, align 4, !dbg !22020
  %and46 = and i32 %24, 524288, !dbg !22023
  %tobool47 = icmp ne i32 %and46, 0, !dbg !22023
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !22024

if.then48:                                        ; preds = %if.then45
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.210, i64 0, i64 0)) #13, !dbg !22025
  br label %if.end50, !dbg !22025

if.end50:                                         ; preds = %if.then48, %if.then45
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22026
  %HFC_outb51 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %25, i32 0, i32 10, !dbg !22026
  %26 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb51, align 8, !dbg !22026
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22026
  call void %26(%struct.hfc_multi* %27, i8 zeroext 53, i8 zeroext -127) #12, !dbg !22026
  %28 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22027
  %HFC_outb52 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %28, i32 0, i32 10, !dbg !22027
  %29 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb52, align 8, !dbg !22027
  %30 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22027
  call void %29(%struct.hfc_multi* %30, i8 zeroext 49, i8 zeroext 0) #12, !dbg !22027
  br label %if.end53, !dbg !22028

if.end53:                                         ; preds = %if.end50, %if.end41
  %31 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22029
  %e1_resync54 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %31, i32 0, i32 56, !dbg !22030
  store i32 0, i32* %e1_resync54, align 8, !dbg !22031
  %32 = load i64, i64* %flags, align 8, !dbg !22032
  store %struct.spinlock* @HFClock, %struct.spinlock** %lock.addr.i404, align 8
  store i64 %32, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !10110, metadata !DIExpression()) #6, !dbg !22033
  call void @llvm.dbg.declare(metadata !743, metadata !10114, metadata !DIExpression()) #6, !dbg !22033
  store i32 1, i32* %tmp.i, align 4, !dbg !22033
  %33 = load i32, i32* %tmp.i, align 4, !dbg !22033
  call void @llvm.dbg.declare(metadata !743, metadata !10115, metadata !DIExpression()) #6, !dbg !22034
  call void @llvm.dbg.declare(metadata !743, metadata !10121, metadata !DIExpression()) #6, !dbg !22034
  store i32 1, i32* %tmp8.i, align 4, !dbg !22034
  %34 = load i32, i32* %tmp8.i, align 4, !dbg !22034
  %35 = load i64, i64* %flags.addr.i, align 8, !dbg !22035
  call void @arch_local_irq_restore(i64 %35) #14, !dbg !22035
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !22036, !srcloc !10125
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i404, align 8, !dbg !22037
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !22037
  %rlock.i405 = bitcast %union.anon.1* %37 to %struct.raw_spinlock*, !dbg !22037
  br label %if.end55, !dbg !22038

if.end55:                                         ; preds = %if.end53, %entry
  %38 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22039
  %ctype = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %38, i32 0, i32 4, !dbg !22041
  %39 = load i32, i32* %ctype, align 8, !dbg !22041
  %cmp56 = icmp ne i32 %39, 1, !dbg !22042
  br i1 %cmp56, label %if.then60, label %lor.lhs.false, !dbg !22043

lor.lhs.false:                                    ; preds = %if.end55
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22044
  %e1_state = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %40, i32 0, i32 53, !dbg !22045
  %41 = load i32, i32* %e1_state, align 4, !dbg !22045
  %cmp58 = icmp eq i32 %41, 1, !dbg !22046
  br i1 %cmp58, label %if.then60, label %if.end100, !dbg !22047

if.then60:                                        ; preds = %lor.lhs.false, %if.end55
  store i32 0, i32* %ch, align 4, !dbg !22048
  br label %for.cond, !dbg !22050

for.cond:                                         ; preds = %for.inc, %if.then60
  %42 = load i32, i32* %ch, align 4, !dbg !22051
  %cmp61 = icmp sle i32 %42, 31, !dbg !22053
  br i1 %cmp61, label %for.body, label %for.end, !dbg !22054

for.body:                                         ; preds = %for.cond
  %43 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22055
  %created = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %43, i32 0, i32 47, !dbg !22058
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22059
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %44, i32 0, i32 60, !dbg !22060
  %45 = load i32, i32* %ch, align 4, !dbg !22061
  %idxprom = sext i32 %45 to i64, !dbg !22059
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !22059
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 2, !dbg !22062
  %46 = load i32, i32* %port, align 8, !dbg !22062
  %idxprom63 = sext i32 %46 to i64, !dbg !22055
  %arrayidx64 = getelementptr [32 x i8], [32 x i8]* %created, i64 0, i64 %idxprom63, !dbg !22055
  %47 = load i8, i8* %arrayidx64, align 1, !dbg !22055
  %tobool65 = icmp ne i8 %47, 0, !dbg !22055
  br i1 %tobool65, label %if.then66, label %if.end99, !dbg !22063

if.then66:                                        ; preds = %for.body
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22064
  %49 = load i32, i32* %ch, align 4, !dbg !22066
  call void @hfcmulti_tx(%struct.hfc_multi* %48, i32 %49) #12, !dbg !22067
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22068
  %51 = load i32, i32* %ch, align 4, !dbg !22069
  call void @hfcmulti_rx(%struct.hfc_multi* %50, i32 %51) #12, !dbg !22070
  %52 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22071
  %chan67 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %52, i32 0, i32 60, !dbg !22073
  %53 = load i32, i32* %ch, align 4, !dbg !22074
  %idxprom68 = sext i32 %53 to i64, !dbg !22071
  %arrayidx69 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan67, i64 0, i64 %idxprom68, !dbg !22071
  %dch70 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx69, i32 0, i32 0, !dbg !22075
  %54 = load %struct.dchannel*, %struct.dchannel** %dch70, align 8, !dbg !22075
  %tobool71 = icmp ne %struct.dchannel* %54, null, !dbg !22071
  br i1 %tobool71, label %land.lhs.true, label %if.end98, !dbg !22076

land.lhs.true:                                    ; preds = %if.then66
  %55 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22077
  %chan72 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %55, i32 0, i32 60, !dbg !22078
  %56 = load i32, i32* %ch, align 4, !dbg !22079
  %idxprom73 = sext i32 %56 to i64, !dbg !22077
  %arrayidx74 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan72, i64 0, i64 %idxprom73, !dbg !22077
  %nt_timer = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx74, i32 0, i32 3, !dbg !22080
  %57 = load i32, i32* %nt_timer, align 4, !dbg !22080
  %cmp75 = icmp sgt i32 %57, -1, !dbg !22081
  br i1 %cmp75, label %if.then77, label %if.end98, !dbg !22082

if.then77:                                        ; preds = %land.lhs.true
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22083
  %chan78 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %58, i32 0, i32 60, !dbg !22085
  %59 = load i32, i32* %ch, align 4, !dbg !22086
  %idxprom79 = sext i32 %59 to i64, !dbg !22083
  %arrayidx80 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan78, i64 0, i64 %idxprom79, !dbg !22083
  %dch81 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx80, i32 0, i32 0, !dbg !22087
  %60 = load %struct.dchannel*, %struct.dchannel** %dch81, align 8, !dbg !22087
  store %struct.dchannel* %60, %struct.dchannel** %dch, align 8, !dbg !22088
  %61 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22089
  %chan82 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %61, i32 0, i32 60, !dbg !22091
  %62 = load i32, i32* %ch, align 4, !dbg !22092
  %idxprom83 = sext i32 %62 to i64, !dbg !22089
  %arrayidx84 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan82, i64 0, i64 %idxprom83, !dbg !22089
  %nt_timer85 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx84, i32 0, i32 3, !dbg !22093
  %63 = load i32, i32* %nt_timer85, align 4, !dbg !22094
  %dec = add i32 %63, -1, !dbg !22094
  store i32 %dec, i32* %nt_timer85, align 4, !dbg !22094
  %tobool86 = icmp ne i32 %dec, 0, !dbg !22094
  br i1 %tobool86, label %if.end97, label %if.then87, !dbg !22095

if.then87:                                        ; preds = %if.then77
  br label %do.body88, !dbg !22096

do.body88:                                        ; preds = %if.then87
  %64 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22098
  %Flags = getelementptr inbounds %struct.dchannel, %struct.dchannel* %64, i32 0, i32 1, !dbg !22098
  %call89 = call zeroext i1 @test_and_set_bit(i64 31, i64* %Flags) #12, !dbg !22098
  %65 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22098
  %workq = getelementptr inbounds %struct.dchannel, %struct.dchannel* %65, i32 0, i32 2, !dbg !22098
  %call90 = call zeroext i1 @schedule_work(%struct.work_struct* %workq) #12, !dbg !22098
  br label %do.end91, !dbg !22098

do.end91:                                         ; preds = %do.body88
  %66 = load i32, i32* @debug, align 4, !dbg !22100
  %and92 = and i32 %66, 4194304, !dbg !22102
  %tobool93 = icmp ne i32 %and92, 0, !dbg !22102
  br i1 %tobool93, label %if.then94, label %if.end96, !dbg !22103

if.then94:                                        ; preds = %do.end91
  %67 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22104
  %state = getelementptr inbounds %struct.dchannel, %struct.dchannel* %67, i32 0, i32 4, !dbg !22105
  %68 = load i32, i32* %state, align 8, !dbg !22105
  %call95 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.211, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.handle_timer_irq, i64 0, i64 0), i32 %68) #13, !dbg !22106
  br label %if.end96, !dbg !22106

if.end96:                                         ; preds = %if.then94, %do.end91
  br label %if.end97, !dbg !22107

if.end97:                                         ; preds = %if.end96, %if.then77
  br label %if.end98, !dbg !22108

if.end98:                                         ; preds = %if.end97, %land.lhs.true, %if.then66
  br label %if.end99, !dbg !22109

if.end99:                                         ; preds = %if.end98, %for.body
  br label %for.inc, !dbg !22110

for.inc:                                          ; preds = %if.end99
  %69 = load i32, i32* %ch, align 4, !dbg !22111
  %inc = add i32 %69, 1, !dbg !22111
  store i32 %inc, i32* %ch, align 4, !dbg !22111
  br label %for.cond, !dbg !22112, !llvm.loop !22113

for.end:                                          ; preds = %for.cond
  br label %if.end100, !dbg !22114

if.end100:                                        ; preds = %for.end, %lor.lhs.false
  %70 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22115
  %ctype101 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %70, i32 0, i32 4, !dbg !22117
  %71 = load i32, i32* %ctype101, align 8, !dbg !22117
  %cmp102 = icmp eq i32 %71, 1, !dbg !22118
  br i1 %cmp102, label %land.lhs.true104, label %if.end396, !dbg !22119

land.lhs.true104:                                 ; preds = %if.end100
  %72 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22120
  %created105 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %72, i32 0, i32 47, !dbg !22121
  %arrayidx106 = getelementptr [32 x i8], [32 x i8]* %created105, i64 0, i64 0, !dbg !22120
  %73 = load i8, i8* %arrayidx106, align 4, !dbg !22120
  %conv107 = zext i8 %73 to i32, !dbg !22120
  %tobool108 = icmp ne i32 %conv107, 0, !dbg !22120
  br i1 %tobool108, label %if.then109, label %if.end396, !dbg !22122

if.then109:                                       ; preds = %land.lhs.true104
  %74 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22123
  %chan110 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %74, i32 0, i32 60, !dbg !22125
  %75 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22126
  %dnum = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %75, i32 0, i32 46, !dbg !22127
  %arrayidx111 = getelementptr [32 x i8], [32 x i8]* %dnum, i64 0, i64 0, !dbg !22126
  %76 = load i8, i8* %arrayidx111, align 4, !dbg !22126
  %idxprom112 = zext i8 %76 to i64, !dbg !22123
  %arrayidx113 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan110, i64 0, i64 %idxprom112, !dbg !22123
  %dch114 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx113, i32 0, i32 0, !dbg !22128
  %77 = load %struct.dchannel*, %struct.dchannel** %dch114, align 8, !dbg !22128
  store %struct.dchannel* %77, %struct.dchannel** %dch, align 8, !dbg !22129
  %78 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22130
  %HFC_inb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %78, i32 0, i32 13, !dbg !22130
  %79 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug, align 8, !dbg !22130
  %80 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22130
  %call115 = call zeroext i8 %79(%struct.hfc_multi* %80, i8 zeroext 36) #12, !dbg !22130
  %conv116 = zext i8 %call115 to i32, !dbg !22130
  %and117 = and i32 %conv116, 8, !dbg !22131
  store i32 %and117, i32* %temp, align 4, !dbg !22132
  %81 = load i32, i32* %temp, align 4, !dbg !22133
  %82 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22134
  %chan118 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %82, i32 0, i32 60, !dbg !22135
  %83 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22136
  %dnum119 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %83, i32 0, i32 46, !dbg !22137
  %arrayidx120 = getelementptr [32 x i8], [32 x i8]* %dnum119, i64 0, i64 0, !dbg !22136
  %84 = load i8, i8* %arrayidx120, align 4, !dbg !22136
  %idxprom121 = zext i8 %84 to i64, !dbg !22134
  %arrayidx122 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan118, i64 0, i64 %idxprom121, !dbg !22134
  %los = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx122, i32 0, i32 4, !dbg !22138
  store i32 %81, i32* %los, align 8, !dbg !22139
  %85 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22140
  %chan123 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %85, i32 0, i32 60, !dbg !22142
  %86 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22143
  %dnum124 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %86, i32 0, i32 46, !dbg !22144
  %arrayidx125 = getelementptr [32 x i8], [32 x i8]* %dnum124, i64 0, i64 0, !dbg !22143
  %87 = load i8, i8* %arrayidx125, align 4, !dbg !22143
  %idxprom126 = zext i8 %87 to i64, !dbg !22140
  %arrayidx127 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan123, i64 0, i64 %idxprom126, !dbg !22140
  %cfg = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx127, i32 0, i32 10, !dbg !22145
  %call128 = call zeroext i1 @test_bit(i64 5, i64* %cfg) #12, !dbg !22146
  br i1 %call128, label %if.then129, label %if.end152, !dbg !22147

if.then129:                                       ; preds = %if.then109
  %88 = load i32, i32* %temp, align 4, !dbg !22148
  %tobool130 = icmp ne i32 %88, 0, !dbg !22148
  br i1 %tobool130, label %if.end140, label %land.lhs.true131, !dbg !22151

land.lhs.true131:                                 ; preds = %if.then129
  %89 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22152
  %chan132 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %89, i32 0, i32 60, !dbg !22153
  %90 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22154
  %dnum133 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %90, i32 0, i32 46, !dbg !22155
  %arrayidx134 = getelementptr [32 x i8], [32 x i8]* %dnum133, i64 0, i64 0, !dbg !22154
  %91 = load i8, i8* %arrayidx134, align 4, !dbg !22154
  %idxprom135 = zext i8 %91 to i64, !dbg !22152
  %arrayidx136 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan132, i64 0, i64 %idxprom135, !dbg !22152
  %los137 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx136, i32 0, i32 4, !dbg !22156
  %92 = load i32, i32* %los137, align 8, !dbg !22156
  %tobool138 = icmp ne i32 %92, 0, !dbg !22152
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !22157

if.then139:                                       ; preds = %land.lhs.true131
  %93 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22158
  call void @signal_state_up(%struct.dchannel* %93, i32 17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.212, i64 0, i64 0)) #12, !dbg !22159
  br label %if.end140, !dbg !22159

if.end140:                                        ; preds = %if.then139, %land.lhs.true131, %if.then129
  %94 = load i32, i32* %temp, align 4, !dbg !22160
  %tobool141 = icmp ne i32 %94, 0, !dbg !22160
  br i1 %tobool141, label %land.lhs.true142, label %if.end151, !dbg !22162

land.lhs.true142:                                 ; preds = %if.end140
  %95 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22163
  %chan143 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %95, i32 0, i32 60, !dbg !22164
  %96 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22165
  %dnum144 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %96, i32 0, i32 46, !dbg !22166
  %arrayidx145 = getelementptr [32 x i8], [32 x i8]* %dnum144, i64 0, i64 0, !dbg !22165
  %97 = load i8, i8* %arrayidx145, align 4, !dbg !22165
  %idxprom146 = zext i8 %97 to i64, !dbg !22163
  %arrayidx147 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan143, i64 0, i64 %idxprom146, !dbg !22163
  %los148 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx147, i32 0, i32 4, !dbg !22167
  %98 = load i32, i32* %los148, align 8, !dbg !22167
  %tobool149 = icmp ne i32 %98, 0, !dbg !22163
  br i1 %tobool149, label %if.end151, label %if.then150, !dbg !22168

if.then150:                                       ; preds = %land.lhs.true142
  %99 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22169
  call void @signal_state_up(%struct.dchannel* %99, i32 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.213, i64 0, i64 0)) #12, !dbg !22170
  br label %if.end151, !dbg !22170

if.end151:                                        ; preds = %if.then150, %land.lhs.true142, %if.end140
  br label %if.end152, !dbg !22171

if.end152:                                        ; preds = %if.end151, %if.then109
  %100 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22172
  %chan153 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %100, i32 0, i32 60, !dbg !22174
  %101 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22175
  %dnum154 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %101, i32 0, i32 46, !dbg !22176
  %arrayidx155 = getelementptr [32 x i8], [32 x i8]* %dnum154, i64 0, i64 0, !dbg !22175
  %102 = load i8, i8* %arrayidx155, align 4, !dbg !22175
  %idxprom156 = zext i8 %102 to i64, !dbg !22172
  %arrayidx157 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan153, i64 0, i64 %idxprom156, !dbg !22172
  %cfg158 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx157, i32 0, i32 10, !dbg !22177
  %call159 = call zeroext i1 @test_bit(i64 6, i64* %cfg158) #12, !dbg !22178
  br i1 %call159, label %if.then160, label %if.end192, !dbg !22179

if.then160:                                       ; preds = %if.end152
  %103 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22180
  %HFC_inb_nodebug161 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %103, i32 0, i32 13, !dbg !22180
  %104 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug161, align 8, !dbg !22180
  %105 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22180
  %call162 = call zeroext i8 %104(%struct.hfc_multi* %105, i8 zeroext 36) #12, !dbg !22180
  %conv163 = zext i8 %call162 to i32, !dbg !22180
  %and164 = and i32 %conv163, 64, !dbg !22182
  store i32 %and164, i32* %temp, align 4, !dbg !22183
  %106 = load i32, i32* %temp, align 4, !dbg !22184
  %tobool165 = icmp ne i32 %106, 0, !dbg !22184
  br i1 %tobool165, label %if.end174, label %land.lhs.true166, !dbg !22186

land.lhs.true166:                                 ; preds = %if.then160
  %107 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22187
  %chan167 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %107, i32 0, i32 60, !dbg !22188
  %108 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22189
  %dnum168 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %108, i32 0, i32 46, !dbg !22190
  %arrayidx169 = getelementptr [32 x i8], [32 x i8]* %dnum168, i64 0, i64 0, !dbg !22189
  %109 = load i8, i8* %arrayidx169, align 4, !dbg !22189
  %idxprom170 = zext i8 %109 to i64, !dbg !22187
  %arrayidx171 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan167, i64 0, i64 %idxprom170, !dbg !22187
  %ais = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx171, i32 0, i32 5, !dbg !22191
  %110 = load i32, i32* %ais, align 4, !dbg !22191
  %tobool172 = icmp ne i32 %110, 0, !dbg !22187
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !22192

if.then173:                                       ; preds = %land.lhs.true166
  %111 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22193
  call void @signal_state_up(%struct.dchannel* %111, i32 19, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.214, i64 0, i64 0)) #12, !dbg !22194
  br label %if.end174, !dbg !22194

if.end174:                                        ; preds = %if.then173, %land.lhs.true166, %if.then160
  %112 = load i32, i32* %temp, align 4, !dbg !22195
  %tobool175 = icmp ne i32 %112, 0, !dbg !22195
  br i1 %tobool175, label %land.lhs.true176, label %if.end185, !dbg !22197

land.lhs.true176:                                 ; preds = %if.end174
  %113 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22198
  %chan177 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %113, i32 0, i32 60, !dbg !22199
  %114 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22200
  %dnum178 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %114, i32 0, i32 46, !dbg !22201
  %arrayidx179 = getelementptr [32 x i8], [32 x i8]* %dnum178, i64 0, i64 0, !dbg !22200
  %115 = load i8, i8* %arrayidx179, align 4, !dbg !22200
  %idxprom180 = zext i8 %115 to i64, !dbg !22198
  %arrayidx181 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan177, i64 0, i64 %idxprom180, !dbg !22198
  %ais182 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx181, i32 0, i32 5, !dbg !22202
  %116 = load i32, i32* %ais182, align 4, !dbg !22202
  %tobool183 = icmp ne i32 %116, 0, !dbg !22198
  br i1 %tobool183, label %if.end185, label %if.then184, !dbg !22203

if.then184:                                       ; preds = %land.lhs.true176
  %117 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22204
  call void @signal_state_up(%struct.dchannel* %117, i32 18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.215, i64 0, i64 0)) #12, !dbg !22205
  br label %if.end185, !dbg !22205

if.end185:                                        ; preds = %if.then184, %land.lhs.true176, %if.end174
  %118 = load i32, i32* %temp, align 4, !dbg !22206
  %119 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22207
  %chan186 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %119, i32 0, i32 60, !dbg !22208
  %120 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22209
  %dnum187 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %120, i32 0, i32 46, !dbg !22210
  %arrayidx188 = getelementptr [32 x i8], [32 x i8]* %dnum187, i64 0, i64 0, !dbg !22209
  %121 = load i8, i8* %arrayidx188, align 4, !dbg !22209
  %idxprom189 = zext i8 %121 to i64, !dbg !22207
  %arrayidx190 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan186, i64 0, i64 %idxprom189, !dbg !22207
  %ais191 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx190, i32 0, i32 5, !dbg !22211
  store i32 %118, i32* %ais191, align 4, !dbg !22212
  br label %if.end192, !dbg !22213

if.end192:                                        ; preds = %if.end185, %if.end152
  %122 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22214
  %chan193 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %122, i32 0, i32 60, !dbg !22216
  %123 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22217
  %dnum194 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %123, i32 0, i32 46, !dbg !22218
  %arrayidx195 = getelementptr [32 x i8], [32 x i8]* %dnum194, i64 0, i64 0, !dbg !22217
  %124 = load i8, i8* %arrayidx195, align 4, !dbg !22217
  %idxprom196 = zext i8 %124 to i64, !dbg !22214
  %arrayidx197 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan193, i64 0, i64 %idxprom196, !dbg !22214
  %cfg198 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx197, i32 0, i32 10, !dbg !22219
  %call199 = call zeroext i1 @test_bit(i64 7, i64* %cfg198) #12, !dbg !22220
  br i1 %call199, label %if.then200, label %if.end241, !dbg !22221

if.then200:                                       ; preds = %if.end192
  %125 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22222
  %HFC_inb_nodebug201 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %125, i32 0, i32 13, !dbg !22222
  %126 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug201, align 8, !dbg !22222
  %127 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22222
  %call202 = call zeroext i8 %126(%struct.hfc_multi* %127, i8 zeroext 44) #12, !dbg !22222
  %conv203 = zext i8 %call202 to i32, !dbg !22222
  %and204 = and i32 %conv203, 8, !dbg !22224
  store i32 %and204, i32* %temp, align 4, !dbg !22225
  %128 = load i32, i32* %temp, align 4, !dbg !22226
  %tobool205 = icmp ne i32 %128, 0, !dbg !22226
  br i1 %tobool205, label %if.end214, label %land.lhs.true206, !dbg !22228

land.lhs.true206:                                 ; preds = %if.then200
  %129 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22229
  %chan207 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %129, i32 0, i32 60, !dbg !22230
  %130 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22231
  %dnum208 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %130, i32 0, i32 46, !dbg !22232
  %arrayidx209 = getelementptr [32 x i8], [32 x i8]* %dnum208, i64 0, i64 0, !dbg !22231
  %131 = load i8, i8* %arrayidx209, align 4, !dbg !22231
  %idxprom210 = zext i8 %131 to i64, !dbg !22229
  %arrayidx211 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan207, i64 0, i64 %idxprom210, !dbg !22229
  %slip_rx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx211, i32 0, i32 7, !dbg !22233
  %132 = load i32, i32* %slip_rx, align 4, !dbg !22233
  %tobool212 = icmp ne i32 %132, 0, !dbg !22229
  br i1 %tobool212, label %if.then213, label %if.end214, !dbg !22234

if.then213:                                       ; preds = %land.lhs.true206
  %133 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22235
  call void @signal_state_up(%struct.dchannel* %133, i32 32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.216, i64 0, i64 0)) #12, !dbg !22236
  br label %if.end214, !dbg !22236

if.end214:                                        ; preds = %if.then213, %land.lhs.true206, %if.then200
  %134 = load i32, i32* %temp, align 4, !dbg !22237
  %135 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22238
  %chan215 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %135, i32 0, i32 60, !dbg !22239
  %136 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22240
  %dnum216 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %136, i32 0, i32 46, !dbg !22241
  %arrayidx217 = getelementptr [32 x i8], [32 x i8]* %dnum216, i64 0, i64 0, !dbg !22240
  %137 = load i8, i8* %arrayidx217, align 4, !dbg !22240
  %idxprom218 = zext i8 %137 to i64, !dbg !22238
  %arrayidx219 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan215, i64 0, i64 %idxprom218, !dbg !22238
  %slip_rx220 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx219, i32 0, i32 7, !dbg !22242
  store i32 %134, i32* %slip_rx220, align 4, !dbg !22243
  %138 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22244
  %HFC_inb_nodebug221 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %138, i32 0, i32 13, !dbg !22244
  %139 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug221, align 8, !dbg !22244
  %140 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22244
  %call222 = call zeroext i8 %139(%struct.hfc_multi* %140, i8 zeroext 44) #12, !dbg !22244
  %conv223 = zext i8 %call222 to i32, !dbg !22244
  %and224 = and i32 %conv223, 128, !dbg !22245
  store i32 %and224, i32* %temp, align 4, !dbg !22246
  %141 = load i32, i32* %temp, align 4, !dbg !22247
  %tobool225 = icmp ne i32 %141, 0, !dbg !22247
  br i1 %tobool225, label %if.end234, label %land.lhs.true226, !dbg !22249

land.lhs.true226:                                 ; preds = %if.end214
  %142 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22250
  %chan227 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %142, i32 0, i32 60, !dbg !22251
  %143 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22252
  %dnum228 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %143, i32 0, i32 46, !dbg !22253
  %arrayidx229 = getelementptr [32 x i8], [32 x i8]* %dnum228, i64 0, i64 0, !dbg !22252
  %144 = load i8, i8* %arrayidx229, align 4, !dbg !22252
  %idxprom230 = zext i8 %144 to i64, !dbg !22250
  %arrayidx231 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan227, i64 0, i64 %idxprom230, !dbg !22250
  %slip_tx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx231, i32 0, i32 6, !dbg !22254
  %145 = load i32, i32* %slip_tx, align 8, !dbg !22254
  %tobool232 = icmp ne i32 %145, 0, !dbg !22250
  br i1 %tobool232, label %if.then233, label %if.end234, !dbg !22255

if.then233:                                       ; preds = %land.lhs.true226
  %146 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22256
  call void @signal_state_up(%struct.dchannel* %146, i32 33, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.217, i64 0, i64 0)) #12, !dbg !22257
  br label %if.end234, !dbg !22257

if.end234:                                        ; preds = %if.then233, %land.lhs.true226, %if.end214
  %147 = load i32, i32* %temp, align 4, !dbg !22258
  %148 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22259
  %chan235 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %148, i32 0, i32 60, !dbg !22260
  %149 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22261
  %dnum236 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %149, i32 0, i32 46, !dbg !22262
  %arrayidx237 = getelementptr [32 x i8], [32 x i8]* %dnum236, i64 0, i64 0, !dbg !22261
  %150 = load i8, i8* %arrayidx237, align 4, !dbg !22261
  %idxprom238 = zext i8 %150 to i64, !dbg !22259
  %arrayidx239 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan235, i64 0, i64 %idxprom238, !dbg !22259
  %slip_tx240 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx239, i32 0, i32 6, !dbg !22263
  store i32 %147, i32* %slip_tx240, align 8, !dbg !22264
  br label %if.end241, !dbg !22265

if.end241:                                        ; preds = %if.end234, %if.end192
  %151 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22266
  %chan242 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %151, i32 0, i32 60, !dbg !22268
  %152 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22269
  %dnum243 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %152, i32 0, i32 46, !dbg !22270
  %arrayidx244 = getelementptr [32 x i8], [32 x i8]* %dnum243, i64 0, i64 0, !dbg !22269
  %153 = load i8, i8* %arrayidx244, align 4, !dbg !22269
  %idxprom245 = zext i8 %153 to i64, !dbg !22266
  %arrayidx246 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan242, i64 0, i64 %idxprom245, !dbg !22266
  %cfg247 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx246, i32 0, i32 10, !dbg !22271
  %call248 = call zeroext i1 @test_bit(i64 8, i64* %cfg247) #12, !dbg !22272
  br i1 %call248, label %if.then249, label %if.end281, !dbg !22273

if.then249:                                       ; preds = %if.end241
  %154 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22274
  %HFC_inb_nodebug250 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %154, i32 0, i32 13, !dbg !22274
  %155 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug250, align 8, !dbg !22274
  %156 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22274
  %call251 = call zeroext i8 %155(%struct.hfc_multi* %156, i8 zeroext 37) #12, !dbg !22274
  %conv252 = zext i8 %call251 to i32, !dbg !22274
  %and253 = and i32 %conv252, 4, !dbg !22276
  store i32 %and253, i32* %temp, align 4, !dbg !22277
  %157 = load i32, i32* %temp, align 4, !dbg !22278
  %tobool254 = icmp ne i32 %157, 0, !dbg !22278
  br i1 %tobool254, label %if.end263, label %land.lhs.true255, !dbg !22280

land.lhs.true255:                                 ; preds = %if.then249
  %158 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22281
  %chan256 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %158, i32 0, i32 60, !dbg !22282
  %159 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22283
  %dnum257 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %159, i32 0, i32 46, !dbg !22284
  %arrayidx258 = getelementptr [32 x i8], [32 x i8]* %dnum257, i64 0, i64 0, !dbg !22283
  %160 = load i8, i8* %arrayidx258, align 4, !dbg !22283
  %idxprom259 = zext i8 %160 to i64, !dbg !22281
  %arrayidx260 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan256, i64 0, i64 %idxprom259, !dbg !22281
  %rdi = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx260, i32 0, i32 8, !dbg !22285
  %161 = load i32, i32* %rdi, align 8, !dbg !22285
  %tobool261 = icmp ne i32 %161, 0, !dbg !22281
  br i1 %tobool261, label %if.then262, label %if.end263, !dbg !22286

if.then262:                                       ; preds = %land.lhs.true255
  %162 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22287
  call void @signal_state_up(%struct.dchannel* %162, i32 21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.218, i64 0, i64 0)) #12, !dbg !22288
  br label %if.end263, !dbg !22288

if.end263:                                        ; preds = %if.then262, %land.lhs.true255, %if.then249
  %163 = load i32, i32* %temp, align 4, !dbg !22289
  %tobool264 = icmp ne i32 %163, 0, !dbg !22289
  br i1 %tobool264, label %land.lhs.true265, label %if.end274, !dbg !22291

land.lhs.true265:                                 ; preds = %if.end263
  %164 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22292
  %chan266 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %164, i32 0, i32 60, !dbg !22293
  %165 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22294
  %dnum267 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %165, i32 0, i32 46, !dbg !22295
  %arrayidx268 = getelementptr [32 x i8], [32 x i8]* %dnum267, i64 0, i64 0, !dbg !22294
  %166 = load i8, i8* %arrayidx268, align 4, !dbg !22294
  %idxprom269 = zext i8 %166 to i64, !dbg !22292
  %arrayidx270 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan266, i64 0, i64 %idxprom269, !dbg !22292
  %rdi271 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx270, i32 0, i32 8, !dbg !22296
  %167 = load i32, i32* %rdi271, align 8, !dbg !22296
  %tobool272 = icmp ne i32 %167, 0, !dbg !22292
  br i1 %tobool272, label %if.end274, label %if.then273, !dbg !22297

if.then273:                                       ; preds = %land.lhs.true265
  %168 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22298
  call void @signal_state_up(%struct.dchannel* %168, i32 20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.219, i64 0, i64 0)) #12, !dbg !22299
  br label %if.end274, !dbg !22299

if.end274:                                        ; preds = %if.then273, %land.lhs.true265, %if.end263
  %169 = load i32, i32* %temp, align 4, !dbg !22300
  %170 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22301
  %chan275 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %170, i32 0, i32 60, !dbg !22302
  %171 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22303
  %dnum276 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %171, i32 0, i32 46, !dbg !22304
  %arrayidx277 = getelementptr [32 x i8], [32 x i8]* %dnum276, i64 0, i64 0, !dbg !22303
  %172 = load i8, i8* %arrayidx277, align 4, !dbg !22303
  %idxprom278 = zext i8 %172 to i64, !dbg !22301
  %arrayidx279 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan275, i64 0, i64 %idxprom278, !dbg !22301
  %rdi280 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx279, i32 0, i32 8, !dbg !22305
  store i32 %169, i32* %rdi280, align 8, !dbg !22306
  br label %if.end281, !dbg !22307

if.end281:                                        ; preds = %if.end274, %if.end241
  %173 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22308
  %HFC_inb_nodebug282 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %173, i32 0, i32 13, !dbg !22308
  %174 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug282, align 8, !dbg !22308
  %175 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22308
  %call283 = call zeroext i8 %174(%struct.hfc_multi* %175, i8 zeroext 43) #12, !dbg !22308
  %conv284 = zext i8 %call283 to i32, !dbg !22308
  store i32 %conv284, i32* %temp, align 4, !dbg !22309
  %176 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22310
  %chan285 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %176, i32 0, i32 60, !dbg !22311
  %177 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22312
  %dnum286 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %177, i32 0, i32 46, !dbg !22313
  %arrayidx287 = getelementptr [32 x i8], [32 x i8]* %dnum286, i64 0, i64 0, !dbg !22312
  %178 = load i8, i8* %arrayidx287, align 4, !dbg !22312
  %idxprom288 = zext i8 %178 to i64, !dbg !22310
  %arrayidx289 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan285, i64 0, i64 %idxprom288, !dbg !22310
  %sync = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx289, i32 0, i32 11, !dbg !22314
  %179 = load i32, i32* %sync, align 8, !dbg !22314
  switch i32 %179, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb322
    i32 2, label %sw.bb359
  ], !dbg !22315

sw.bb:                                            ; preds = %if.end281
  %180 = load i32, i32* %temp, align 4, !dbg !22316
  %and290 = and i32 %180, 96, !dbg !22319
  %cmp291 = icmp eq i32 %and290, 96, !dbg !22320
  br i1 %cmp291, label %if.then293, label %if.end321, !dbg !22321

if.then293:                                       ; preds = %sw.bb
  %181 = load i32, i32* @debug, align 4, !dbg !22322
  %and294 = and i32 %181, 16777216, !dbg !22325
  %tobool295 = icmp ne i32 %and294, 0, !dbg !22325
  br i1 %tobool295, label %if.then296, label %if.end298, !dbg !22326

if.then296:                                       ; preds = %if.then293
  %182 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22327
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %182, i32 0, i32 2, !dbg !22328
  %183 = load i32, i32* %id, align 8, !dbg !22328
  %call297 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.220, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.handle_timer_irq, i64 0, i64 0), i32 %183) #13, !dbg !22329
  br label %if.end298, !dbg !22329

if.end298:                                        ; preds = %if.then296, %if.then293
  %184 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22330
  %HFC_outb299 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %184, i32 0, i32 10, !dbg !22330
  %185 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb299, align 8, !dbg !22330
  %186 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22330
  %187 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22330
  %chan300 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %187, i32 0, i32 60, !dbg !22330
  %188 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22330
  %dnum301 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %188, i32 0, i32 46, !dbg !22330
  %arrayidx302 = getelementptr [32 x i8], [32 x i8]* %dnum301, i64 0, i64 0, !dbg !22330
  %189 = load i8, i8* %arrayidx302, align 4, !dbg !22330
  %idxprom303 = zext i8 %189 to i64, !dbg !22330
  %arrayidx304 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan300, i64 0, i64 %idxprom303, !dbg !22330
  %jitter = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx304, i32 0, i32 9, !dbg !22330
  %190 = load i32, i32* %jitter, align 4, !dbg !22330
  %or = or i32 %190, 4, !dbg !22330
  %conv305 = trunc i32 %or to i8, !dbg !22330
  call void %185(%struct.hfc_multi* %186, i8 zeroext 48, i8 zeroext %conv305) #12, !dbg !22330
  %191 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22331
  %HFC_outb306 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %191, i32 0, i32 10, !dbg !22331
  %192 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb306, align 8, !dbg !22331
  %193 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22331
  %194 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22331
  %chan307 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %194, i32 0, i32 60, !dbg !22331
  %195 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22331
  %dnum308 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %195, i32 0, i32 46, !dbg !22331
  %arrayidx309 = getelementptr [32 x i8], [32 x i8]* %dnum308, i64 0, i64 0, !dbg !22331
  %196 = load i8, i8* %arrayidx309, align 4, !dbg !22331
  %idxprom310 = zext i8 %196 to i64, !dbg !22331
  %arrayidx311 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan307, i64 0, i64 %idxprom310, !dbg !22331
  %jitter312 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx311, i32 0, i32 9, !dbg !22331
  %197 = load i32, i32* %jitter312, align 4, !dbg !22331
  %or313 = or i32 %197, 4, !dbg !22331
  %conv314 = trunc i32 %or313 to i8, !dbg !22331
  call void %192(%struct.hfc_multi* %193, i8 zeroext 52, i8 zeroext %conv314) #12, !dbg !22331
  %198 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22332
  %chan315 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %198, i32 0, i32 60, !dbg !22333
  %199 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22334
  %dnum316 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %199, i32 0, i32 46, !dbg !22335
  %arrayidx317 = getelementptr [32 x i8], [32 x i8]* %dnum316, i64 0, i64 0, !dbg !22334
  %200 = load i8, i8* %arrayidx317, align 4, !dbg !22334
  %idxprom318 = zext i8 %200 to i64, !dbg !22332
  %arrayidx319 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan315, i64 0, i64 %idxprom318, !dbg !22332
  %sync320 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx319, i32 0, i32 11, !dbg !22336
  store i32 1, i32* %sync320, align 8, !dbg !22337
  br label %check_framesync, !dbg !22338

if.end321:                                        ; preds = %sw.bb
  br label %sw.epilog, !dbg !22339

sw.bb322:                                         ; preds = %if.end281
  %201 = load i32, i32* %temp, align 4, !dbg !22340
  %and323 = and i32 %201, 96, !dbg !22342
  %cmp324 = icmp ne i32 %and323, 96, !dbg !22343
  br i1 %cmp324, label %if.then326, label %if.end339, !dbg !22344

if.then326:                                       ; preds = %sw.bb322
  %202 = load i32, i32* @debug, align 4, !dbg !22345
  %and327 = and i32 %202, 16777216, !dbg !22348
  %tobool328 = icmp ne i32 %and327, 0, !dbg !22348
  br i1 %tobool328, label %if.then329, label %if.end332, !dbg !22349

if.then329:                                       ; preds = %if.then326
  %203 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22350
  %id330 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %203, i32 0, i32 2, !dbg !22351
  %204 = load i32, i32* %id330, align 8, !dbg !22351
  %call331 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.221, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.handle_timer_irq, i64 0, i64 0), i32 %204) #13, !dbg !22352
  br label %if.end332, !dbg !22352

if.end332:                                        ; preds = %if.then329, %if.then326
  %205 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22353
  %chan333 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %205, i32 0, i32 60, !dbg !22354
  %206 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22355
  %dnum334 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %206, i32 0, i32 46, !dbg !22356
  %arrayidx335 = getelementptr [32 x i8], [32 x i8]* %dnum334, i64 0, i64 0, !dbg !22355
  %207 = load i8, i8* %arrayidx335, align 4, !dbg !22355
  %idxprom336 = zext i8 %207 to i64, !dbg !22353
  %arrayidx337 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan333, i64 0, i64 %idxprom336, !dbg !22353
  %sync338 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx337, i32 0, i32 11, !dbg !22357
  store i32 0, i32* %sync338, align 8, !dbg !22358
  br label %sw.epilog, !dbg !22359

if.end339:                                        ; preds = %sw.bb322
  br label %check_framesync, !dbg !22360

check_framesync:                                  ; preds = %if.end339, %if.end298
  call void @llvm.dbg.label(metadata !22361), !dbg !22362
  %208 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22363
  %HFC_inb_nodebug340 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %208, i32 0, i32 13, !dbg !22363
  %209 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug340, align 8, !dbg !22363
  %210 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22363
  %call341 = call zeroext i8 %209(%struct.hfc_multi* %210, i8 zeroext 36) #12, !dbg !22363
  %conv342 = zext i8 %call341 to i32, !dbg !22363
  store i32 %conv342, i32* %temp, align 4, !dbg !22364
  %211 = load i32, i32* %temp, align 4, !dbg !22365
  %cmp343 = icmp eq i32 %211, 39, !dbg !22367
  br i1 %cmp343, label %if.then345, label %if.end358, !dbg !22368

if.then345:                                       ; preds = %check_framesync
  %212 = load i32, i32* @debug, align 4, !dbg !22369
  %and346 = and i32 %212, 16777216, !dbg !22372
  %tobool347 = icmp ne i32 %and346, 0, !dbg !22372
  br i1 %tobool347, label %if.then348, label %if.end351, !dbg !22373

if.then348:                                       ; preds = %if.then345
  %213 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22374
  %id349 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %213, i32 0, i32 2, !dbg !22375
  %214 = load i32, i32* %id349, align 8, !dbg !22375
  %call350 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.handle_timer_irq, i64 0, i64 0), i32 %214) #13, !dbg !22376
  br label %if.end351, !dbg !22376

if.end351:                                        ; preds = %if.then348, %if.then345
  %215 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22377
  %chan352 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %215, i32 0, i32 60, !dbg !22378
  %216 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22379
  %dnum353 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %216, i32 0, i32 46, !dbg !22380
  %arrayidx354 = getelementptr [32 x i8], [32 x i8]* %dnum353, i64 0, i64 0, !dbg !22379
  %217 = load i8, i8* %arrayidx354, align 4, !dbg !22379
  %idxprom355 = zext i8 %217 to i64, !dbg !22377
  %arrayidx356 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan352, i64 0, i64 %idxprom355, !dbg !22377
  %sync357 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx356, i32 0, i32 11, !dbg !22381
  store i32 2, i32* %sync357, align 8, !dbg !22382
  br label %if.end358, !dbg !22383

if.end358:                                        ; preds = %if.end351, %check_framesync
  br label %sw.epilog, !dbg !22384

sw.bb359:                                         ; preds = %if.end281
  %218 = load i32, i32* %temp, align 4, !dbg !22385
  %and360 = and i32 %218, 96, !dbg !22387
  %cmp361 = icmp ne i32 %and360, 96, !dbg !22388
  br i1 %cmp361, label %if.then363, label %if.end376, !dbg !22389

if.then363:                                       ; preds = %sw.bb359
  %219 = load i32, i32* @debug, align 4, !dbg !22390
  %and364 = and i32 %219, 16777216, !dbg !22393
  %tobool365 = icmp ne i32 %and364, 0, !dbg !22393
  br i1 %tobool365, label %if.then366, label %if.end369, !dbg !22394

if.then366:                                       ; preds = %if.then363
  %220 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22395
  %id367 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %220, i32 0, i32 2, !dbg !22396
  %221 = load i32, i32* %id367, align 8, !dbg !22396
  %call368 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.223, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.handle_timer_irq, i64 0, i64 0), i32 %221) #13, !dbg !22397
  br label %if.end369, !dbg !22397

if.end369:                                        ; preds = %if.then366, %if.then363
  %222 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22398
  %chan370 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %222, i32 0, i32 60, !dbg !22399
  %223 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22400
  %dnum371 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %223, i32 0, i32 46, !dbg !22401
  %arrayidx372 = getelementptr [32 x i8], [32 x i8]* %dnum371, i64 0, i64 0, !dbg !22400
  %224 = load i8, i8* %arrayidx372, align 4, !dbg !22400
  %idxprom373 = zext i8 %224 to i64, !dbg !22398
  %arrayidx374 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan370, i64 0, i64 %idxprom373, !dbg !22398
  %sync375 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx374, i32 0, i32 11, !dbg !22402
  store i32 0, i32* %sync375, align 8, !dbg !22403
  br label %sw.epilog, !dbg !22404

if.end376:                                        ; preds = %sw.bb359
  %225 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22405
  %HFC_inb_nodebug377 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %225, i32 0, i32 13, !dbg !22405
  %226 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug377, align 8, !dbg !22405
  %227 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22405
  %call378 = call zeroext i8 %226(%struct.hfc_multi* %227, i8 zeroext 36) #12, !dbg !22405
  %conv379 = zext i8 %call378 to i32, !dbg !22405
  store i32 %conv379, i32* %temp, align 4, !dbg !22406
  %228 = load i32, i32* %temp, align 4, !dbg !22407
  %cmp380 = icmp ne i32 %228, 39, !dbg !22409
  br i1 %cmp380, label %if.then382, label %if.end395, !dbg !22410

if.then382:                                       ; preds = %if.end376
  %229 = load i32, i32* @debug, align 4, !dbg !22411
  %and383 = and i32 %229, 16777216, !dbg !22414
  %tobool384 = icmp ne i32 %and383, 0, !dbg !22414
  br i1 %tobool384, label %if.then385, label %if.end388, !dbg !22415

if.then385:                                       ; preds = %if.then382
  %230 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22416
  %id386 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %230, i32 0, i32 2, !dbg !22417
  %231 = load i32, i32* %id386, align 8, !dbg !22417
  %call387 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.224, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.handle_timer_irq, i64 0, i64 0), i32 %231) #13, !dbg !22418
  br label %if.end388, !dbg !22418

if.end388:                                        ; preds = %if.then385, %if.then382
  %232 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22419
  %chan389 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %232, i32 0, i32 60, !dbg !22420
  %233 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22421
  %dnum390 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %233, i32 0, i32 46, !dbg !22422
  %arrayidx391 = getelementptr [32 x i8], [32 x i8]* %dnum390, i64 0, i64 0, !dbg !22421
  %234 = load i8, i8* %arrayidx391, align 4, !dbg !22421
  %idxprom392 = zext i8 %234 to i64, !dbg !22419
  %arrayidx393 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan389, i64 0, i64 %idxprom392, !dbg !22419
  %sync394 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx393, i32 0, i32 11, !dbg !22423
  store i32 1, i32* %sync394, align 8, !dbg !22424
  br label %if.end395, !dbg !22425

if.end395:                                        ; preds = %if.end388, %if.end376
  br label %sw.epilog, !dbg !22426

sw.epilog:                                        ; preds = %if.end281, %if.end395, %if.end369, %if.end358, %if.end332, %if.end321
  br label %if.end396, !dbg !22427

if.end396:                                        ; preds = %sw.epilog, %land.lhs.true104, %if.end100
  %235 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22428
  %chip397 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %235, i32 0, i32 31, !dbg !22430
  %call398 = call zeroext i1 @test_bit(i64 12, i64* %chip397) #12, !dbg !22431
  br i1 %call398, label %if.then399, label %if.end400, !dbg !22432

if.then399:                                       ; preds = %if.end396
  %236 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22433
  call void @hfcmulti_watchdog(%struct.hfc_multi* %236) #12, !dbg !22434
  br label %if.end400, !dbg !22434

if.end400:                                        ; preds = %if.then399, %if.end396
  %237 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22435
  %leds = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %237, i32 0, i32 42, !dbg !22437
  %238 = load i32, i32* %leds, align 4, !dbg !22437
  %tobool401 = icmp ne i32 %238, 0, !dbg !22435
  br i1 %tobool401, label %if.then402, label %if.end403, !dbg !22438

if.then402:                                       ; preds = %if.end400
  %239 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22439
  call void @hfcmulti_leds(%struct.hfc_multi* %239) #12, !dbg !22440
  br label %if.end403, !dbg !22440

if.end403:                                        ; preds = %if.then402, %if.end400
  ret void, !dbg !22441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfcmulti_dtmf(%struct.hfc_multi* %hc) #2 !dbg !22442 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %coeff = alloca i32*, align 8
  %mantissa = alloca i32, align 4
  %co = alloca i32, align 4
  %ch = alloca i32, align 4
  %bch = alloca %struct.bchannel*, align 8
  %exponent = alloca i8, align 1
  %dtmf = alloca i32, align 4
  %addr = alloca i32, align 4
  %w_float = alloca i16, align 2
  %skb = alloca %struct.sk_buff*, align 8
  %hh = alloca %struct.mISDNhead*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !22443, metadata !DIExpression()), !dbg !22444
  call void @llvm.dbg.declare(metadata i32** %coeff, metadata !22445, metadata !DIExpression()), !dbg !22446
  call void @llvm.dbg.declare(metadata i32* %mantissa, metadata !22447, metadata !DIExpression()), !dbg !22448
  call void @llvm.dbg.declare(metadata i32* %co, metadata !22449, metadata !DIExpression()), !dbg !22450
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !22451, metadata !DIExpression()), !dbg !22452
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !22453, metadata !DIExpression()), !dbg !22454
  store %struct.bchannel* null, %struct.bchannel** %bch, align 8, !dbg !22454
  call void @llvm.dbg.declare(metadata i8* %exponent, metadata !22455, metadata !DIExpression()), !dbg !22456
  call void @llvm.dbg.declare(metadata i32* %dtmf, metadata !22457, metadata !DIExpression()), !dbg !22458
  store i32 0, i32* %dtmf, align 4, !dbg !22458
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !22459, metadata !DIExpression()), !dbg !22460
  call void @llvm.dbg.declare(metadata i16* %w_float, metadata !22461, metadata !DIExpression()), !dbg !22462
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !22463, metadata !DIExpression()), !dbg !22464
  call void @llvm.dbg.declare(metadata %struct.mISDNhead** %hh, metadata !22465, metadata !DIExpression()), !dbg !22466
  %0 = load i32, i32* @debug, align 4, !dbg !22467
  %and = and i32 %0, 33554432, !dbg !22469
  %tobool = icmp ne i32 %and, 0, !dbg !22469
  br i1 %tobool, label %if.then, label %if.end, !dbg !22470

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.240, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hfcmulti_dtmf, i64 0, i64 0)) #13, !dbg !22471
  br label %if.end, !dbg !22471

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %ch, align 4, !dbg !22472
  br label %for.cond, !dbg !22474

for.cond:                                         ; preds = %for.inc155, %if.end
  %1 = load i32, i32* %ch, align 4, !dbg !22475
  %cmp = icmp sle i32 %1, 31, !dbg !22477
  br i1 %cmp, label %for.body, label %for.end157, !dbg !22478

for.body:                                         ; preds = %for.cond
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22479
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %2, i32 0, i32 60, !dbg !22481
  %3 = load i32, i32* %ch, align 4, !dbg !22482
  %idxprom = sext i32 %3 to i64, !dbg !22479
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !22479
  %bch1 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 1, !dbg !22483
  %4 = load %struct.bchannel*, %struct.bchannel** %bch1, align 8, !dbg !22483
  store %struct.bchannel* %4, %struct.bchannel** %bch, align 8, !dbg !22484
  %5 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22485
  %tobool2 = icmp ne %struct.bchannel* %5, null, !dbg !22485
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !22487

if.then3:                                         ; preds = %for.body
  br label %for.inc155, !dbg !22488

if.end4:                                          ; preds = %for.body
  %6 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22489
  %created = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %6, i32 0, i32 47, !dbg !22491
  %7 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22492
  %chan5 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %7, i32 0, i32 60, !dbg !22493
  %8 = load i32, i32* %ch, align 4, !dbg !22494
  %idxprom6 = sext i32 %8 to i64, !dbg !22492
  %arrayidx7 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan5, i64 0, i64 %idxprom6, !dbg !22492
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx7, i32 0, i32 2, !dbg !22495
  %9 = load i32, i32* %port, align 8, !dbg !22495
  %idxprom8 = sext i32 %9 to i64, !dbg !22489
  %arrayidx9 = getelementptr [32 x i8], [32 x i8]* %created, i64 0, i64 %idxprom8, !dbg !22489
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !22489
  %tobool10 = icmp ne i8 %10, 0, !dbg !22489
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !22496

if.then11:                                        ; preds = %if.end4
  br label %for.inc155, !dbg !22497

if.end12:                                         ; preds = %if.end4
  %11 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22498
  %Flags = getelementptr inbounds %struct.bchannel, %struct.bchannel* %11, i32 0, i32 2, !dbg !22500
  %call13 = call zeroext i1 @test_bit(i64 12, i64* %Flags) #12, !dbg !22501
  br i1 %call13, label %if.end15, label %if.then14, !dbg !22502

if.then14:                                        ; preds = %if.end12
  br label %for.inc155, !dbg !22503

if.end15:                                         ; preds = %if.end12
  %12 = load i32, i32* @debug, align 4, !dbg !22504
  %and16 = and i32 %12, 33554432, !dbg !22506
  %tobool17 = icmp ne i32 %and16, 0, !dbg !22506
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !22507

if.then18:                                        ; preds = %if.end15
  %13 = load i32, i32* %ch, align 4, !dbg !22508
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.241, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hfcmulti_dtmf, i64 0, i64 0), i32 %13) #13, !dbg !22509
  br label %if.end20, !dbg !22509

if.end20:                                         ; preds = %if.then18, %if.end15
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22510
  %chan21 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %14, i32 0, i32 60, !dbg !22511
  %15 = load i32, i32* %ch, align 4, !dbg !22512
  %idxprom22 = sext i32 %15 to i64, !dbg !22510
  %arrayidx23 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan21, i64 0, i64 %idxprom22, !dbg !22510
  %coeff24 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx23, i32 0, i32 22, !dbg !22513
  %16 = load i32*, i32** %coeff24, align 8, !dbg !22513
  %17 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22514
  %chan25 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %17, i32 0, i32 60, !dbg !22515
  %18 = load i32, i32* %ch, align 4, !dbg !22516
  %idxprom26 = sext i32 %18 to i64, !dbg !22514
  %arrayidx27 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan25, i64 0, i64 %idxprom26, !dbg !22514
  %coeff_count = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx27, i32 0, i32 21, !dbg !22517
  %19 = load i32, i32* %coeff_count, align 8, !dbg !22517
  %mul = mul i32 %19, 16, !dbg !22518
  %idxprom28 = sext i32 %mul to i64, !dbg !22510
  %arrayidx29 = getelementptr i32, i32* %16, i64 %idxprom28, !dbg !22510
  store i32* %arrayidx29, i32** %coeff, align 8, !dbg !22519
  store i32 1, i32* %dtmf, align 4, !dbg !22520
  store i32 0, i32* %co, align 4, !dbg !22521
  br label %for.cond30, !dbg !22523

for.cond30:                                       ; preds = %for.inc, %if.end20
  %20 = load i32, i32* %co, align 4, !dbg !22524
  %cmp31 = icmp slt i32 %20, 8, !dbg !22526
  br i1 %cmp31, label %for.body32, label %for.end, !dbg !22527

for.body32:                                       ; preds = %for.cond30
  %21 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22528
  %DTMFbase = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %21, i32 0, i32 40, !dbg !22530
  %22 = load i32, i32* %DTMFbase, align 4, !dbg !22530
  %23 = load i32, i32* %co, align 4, !dbg !22531
  %shl = shl i32 %23, 7, !dbg !22532
  %24 = load i32, i32* %ch, align 4, !dbg !22533
  %shl33 = shl i32 %24, 2, !dbg !22534
  %or = or i32 %shl, %shl33, !dbg !22535
  %add = add i32 %22, %or, !dbg !22536
  store i32 %add, i32* %addr, align 4, !dbg !22537
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22538
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %25, i32 0, i32 11, !dbg !22538
  %26 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !22538
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22538
  %28 = load i32, i32* %addr, align 4, !dbg !22538
  %conv = trunc i32 %28 to i8, !dbg !22538
  call void %26(%struct.hfc_multi* %27, i8 zeroext 8, i8 zeroext %conv) #12, !dbg !22538
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22539
  %HFC_outb_nodebug34 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %29, i32 0, i32 11, !dbg !22539
  %30 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug34, align 8, !dbg !22539
  %31 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22539
  %32 = load i32, i32* %addr, align 4, !dbg !22539
  %shr = ashr i32 %32, 8, !dbg !22539
  %conv35 = trunc i32 %shr to i8, !dbg !22539
  call void %30(%struct.hfc_multi* %31, i8 zeroext 9, i8 zeroext %conv35) #12, !dbg !22539
  %33 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22540
  %HFC_outb_nodebug36 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %33, i32 0, i32 11, !dbg !22540
  %34 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug36, align 8, !dbg !22540
  %35 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22540
  %36 = load i32, i32* %addr, align 4, !dbg !22540
  %shr37 = ashr i32 %36, 16, !dbg !22540
  %or38 = or i32 %shr37, 128, !dbg !22540
  %conv39 = trunc i32 %or38 to i8, !dbg !22540
  call void %34(%struct.hfc_multi* %35, i8 zeroext 10, i8 zeroext %conv39) #12, !dbg !22540
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22541
  %HFC_inb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %37, i32 0, i32 13, !dbg !22541
  %38 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug, align 8, !dbg !22541
  %39 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22541
  %call40 = call zeroext i8 %38(%struct.hfc_multi* %39, i8 zeroext -64) #12, !dbg !22541
  %conv41 = zext i8 %call40 to i16, !dbg !22541
  store i16 %conv41, i16* %w_float, align 2, !dbg !22542
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22543
  %HFC_inb_nodebug42 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %40, i32 0, i32 13, !dbg !22543
  %41 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug42, align 8, !dbg !22543
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22543
  %call43 = call zeroext i8 %41(%struct.hfc_multi* %42, i8 zeroext -64) #12, !dbg !22543
  %conv44 = zext i8 %call43 to i32, !dbg !22543
  %shl45 = shl i32 %conv44, 8, !dbg !22544
  %43 = load i16, i16* %w_float, align 2, !dbg !22545
  %conv46 = zext i16 %43 to i32, !dbg !22545
  %or47 = or i32 %conv46, %shl45, !dbg !22545
  %conv48 = trunc i32 %or47 to i16, !dbg !22545
  store i16 %conv48, i16* %w_float, align 2, !dbg !22545
  %44 = load i32, i32* @debug, align 4, !dbg !22546
  %and49 = and i32 %44, 33554432, !dbg !22548
  %tobool50 = icmp ne i32 %and49, 0, !dbg !22548
  br i1 %tobool50, label %if.then51, label %if.end54, !dbg !22549

if.then51:                                        ; preds = %for.body32
  %45 = load i16, i16* %w_float, align 2, !dbg !22550
  %conv52 = zext i16 %45 to i32, !dbg !22550
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.242, i64 0, i64 0), i32 %conv52) #13, !dbg !22551
  br label %if.end54, !dbg !22551

if.end54:                                         ; preds = %if.then51, %for.body32
  %46 = load i16, i16* %w_float, align 2, !dbg !22552
  %conv55 = zext i16 %46 to i32, !dbg !22552
  %and56 = and i32 %conv55, 4095, !dbg !22553
  store i32 %and56, i32* %mantissa, align 4, !dbg !22554
  %47 = load i16, i16* %w_float, align 2, !dbg !22555
  %conv57 = zext i16 %47 to i32, !dbg !22555
  %and58 = and i32 %conv57, 32768, !dbg !22557
  %tobool59 = icmp ne i32 %and58, 0, !dbg !22557
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !22558

if.then60:                                        ; preds = %if.end54
  %48 = load i32, i32* %mantissa, align 4, !dbg !22559
  %or61 = or i32 %48, -4096, !dbg !22559
  store i32 %or61, i32* %mantissa, align 4, !dbg !22559
  br label %if.end62, !dbg !22560

if.end62:                                         ; preds = %if.then60, %if.end54
  %49 = load i16, i16* %w_float, align 2, !dbg !22561
  %conv63 = zext i16 %49 to i32, !dbg !22561
  %shr64 = ashr i32 %conv63, 12, !dbg !22562
  %and65 = and i32 %shr64, 7, !dbg !22563
  %conv66 = trunc i32 %and65 to i8, !dbg !22564
  store i8 %conv66, i8* %exponent, align 1, !dbg !22565
  %50 = load i8, i8* %exponent, align 1, !dbg !22566
  %tobool67 = icmp ne i8 %50, 0, !dbg !22566
  br i1 %tobool67, label %if.then68, label %if.end71, !dbg !22568

if.then68:                                        ; preds = %if.end62
  %51 = load i32, i32* %mantissa, align 4, !dbg !22569
  %xor = xor i32 %51, 4096, !dbg !22569
  store i32 %xor, i32* %mantissa, align 4, !dbg !22569
  %52 = load i8, i8* %exponent, align 1, !dbg !22571
  %conv69 = zext i8 %52 to i32, !dbg !22571
  %sub = sub i32 %conv69, 1, !dbg !22572
  %53 = load i32, i32* %mantissa, align 4, !dbg !22573
  %shl70 = shl i32 %53, %sub, !dbg !22573
  store i32 %shl70, i32* %mantissa, align 4, !dbg !22573
  br label %if.end71, !dbg !22574

if.end71:                                         ; preds = %if.then68, %if.end62
  %54 = load i32, i32* %mantissa, align 4, !dbg !22575
  %55 = load i32*, i32** %coeff, align 8, !dbg !22576
  %56 = load i32, i32* %co, align 4, !dbg !22577
  %shl72 = shl i32 %56, 1, !dbg !22578
  %idxprom73 = sext i32 %shl72 to i64, !dbg !22576
  %arrayidx74 = getelementptr i32, i32* %55, i64 %idxprom73, !dbg !22576
  store i32 %54, i32* %arrayidx74, align 4, !dbg !22579
  %57 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22580
  %HFC_inb_nodebug75 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %57, i32 0, i32 13, !dbg !22580
  %58 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug75, align 8, !dbg !22580
  %59 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22580
  %call76 = call zeroext i8 %58(%struct.hfc_multi* %59, i8 zeroext -64) #12, !dbg !22580
  %conv77 = zext i8 %call76 to i16, !dbg !22580
  store i16 %conv77, i16* %w_float, align 2, !dbg !22581
  %60 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22582
  %HFC_inb_nodebug78 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %60, i32 0, i32 13, !dbg !22582
  %61 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug78, align 8, !dbg !22582
  %62 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22582
  %call79 = call zeroext i8 %61(%struct.hfc_multi* %62, i8 zeroext -64) #12, !dbg !22582
  %conv80 = zext i8 %call79 to i32, !dbg !22582
  %shl81 = shl i32 %conv80, 8, !dbg !22583
  %63 = load i16, i16* %w_float, align 2, !dbg !22584
  %conv82 = zext i16 %63 to i32, !dbg !22584
  %or83 = or i32 %conv82, %shl81, !dbg !22584
  %conv84 = trunc i32 %or83 to i16, !dbg !22584
  store i16 %conv84, i16* %w_float, align 2, !dbg !22584
  %64 = load i32, i32* @debug, align 4, !dbg !22585
  %and85 = and i32 %64, 33554432, !dbg !22587
  %tobool86 = icmp ne i32 %and85, 0, !dbg !22587
  br i1 %tobool86, label %if.then87, label %if.end90, !dbg !22588

if.then87:                                        ; preds = %if.end71
  %65 = load i16, i16* %w_float, align 2, !dbg !22589
  %conv88 = zext i16 %65 to i32, !dbg !22589
  %call89 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.242, i64 0, i64 0), i32 %conv88) #13, !dbg !22590
  br label %if.end90, !dbg !22590

if.end90:                                         ; preds = %if.then87, %if.end71
  %66 = load i16, i16* %w_float, align 2, !dbg !22591
  %conv91 = zext i16 %66 to i32, !dbg !22591
  %and92 = and i32 %conv91, 4095, !dbg !22592
  store i32 %and92, i32* %mantissa, align 4, !dbg !22593
  %67 = load i16, i16* %w_float, align 2, !dbg !22594
  %conv93 = zext i16 %67 to i32, !dbg !22594
  %and94 = and i32 %conv93, 32768, !dbg !22596
  %tobool95 = icmp ne i32 %and94, 0, !dbg !22596
  br i1 %tobool95, label %if.then96, label %if.end98, !dbg !22597

if.then96:                                        ; preds = %if.end90
  %68 = load i32, i32* %mantissa, align 4, !dbg !22598
  %or97 = or i32 %68, -4096, !dbg !22598
  store i32 %or97, i32* %mantissa, align 4, !dbg !22598
  br label %if.end98, !dbg !22599

if.end98:                                         ; preds = %if.then96, %if.end90
  %69 = load i16, i16* %w_float, align 2, !dbg !22600
  %conv99 = zext i16 %69 to i32, !dbg !22600
  %shr100 = ashr i32 %conv99, 12, !dbg !22601
  %and101 = and i32 %shr100, 7, !dbg !22602
  %conv102 = trunc i32 %and101 to i8, !dbg !22603
  store i8 %conv102, i8* %exponent, align 1, !dbg !22604
  %70 = load i8, i8* %exponent, align 1, !dbg !22605
  %tobool103 = icmp ne i8 %70, 0, !dbg !22605
  br i1 %tobool103, label %if.then104, label %if.end109, !dbg !22607

if.then104:                                       ; preds = %if.end98
  %71 = load i32, i32* %mantissa, align 4, !dbg !22608
  %xor105 = xor i32 %71, 4096, !dbg !22608
  store i32 %xor105, i32* %mantissa, align 4, !dbg !22608
  %72 = load i8, i8* %exponent, align 1, !dbg !22610
  %conv106 = zext i8 %72 to i32, !dbg !22610
  %sub107 = sub i32 %conv106, 1, !dbg !22611
  %73 = load i32, i32* %mantissa, align 4, !dbg !22612
  %shl108 = shl i32 %73, %sub107, !dbg !22612
  store i32 %shl108, i32* %mantissa, align 4, !dbg !22612
  br label %if.end109, !dbg !22613

if.end109:                                        ; preds = %if.then104, %if.end98
  %74 = load i32, i32* %mantissa, align 4, !dbg !22614
  %75 = load i32*, i32** %coeff, align 8, !dbg !22615
  %76 = load i32, i32* %co, align 4, !dbg !22616
  %shl110 = shl i32 %76, 1, !dbg !22617
  %or111 = or i32 %shl110, 1, !dbg !22618
  %idxprom112 = sext i32 %or111 to i64, !dbg !22615
  %arrayidx113 = getelementptr i32, i32* %75, i64 %idxprom112, !dbg !22615
  store i32 %74, i32* %arrayidx113, align 4, !dbg !22619
  br label %for.inc, !dbg !22620

for.inc:                                          ; preds = %if.end109
  %77 = load i32, i32* %co, align 4, !dbg !22621
  %inc = add i32 %77, 1, !dbg !22621
  store i32 %inc, i32* %co, align 4, !dbg !22621
  br label %for.cond30, !dbg !22622, !llvm.loop !22623

for.end:                                          ; preds = %for.cond30
  %78 = load i32, i32* @debug, align 4, !dbg !22625
  %and114 = and i32 %78, 33554432, !dbg !22627
  %tobool115 = icmp ne i32 %and114, 0, !dbg !22627
  br i1 %tobool115, label %if.then116, label %if.end126, !dbg !22628

if.then116:                                       ; preds = %for.end
  %79 = load i32*, i32** %coeff, align 8, !dbg !22629
  %arrayidx117 = getelementptr i32, i32* %79, i64 0, !dbg !22629
  %80 = load i32, i32* %arrayidx117, align 4, !dbg !22629
  %81 = load i32*, i32** %coeff, align 8, !dbg !22630
  %arrayidx118 = getelementptr i32, i32* %81, i64 1, !dbg !22630
  %82 = load i32, i32* %arrayidx118, align 4, !dbg !22630
  %83 = load i32*, i32** %coeff, align 8, !dbg !22631
  %arrayidx119 = getelementptr i32, i32* %83, i64 2, !dbg !22631
  %84 = load i32, i32* %arrayidx119, align 4, !dbg !22631
  %85 = load i32*, i32** %coeff, align 8, !dbg !22632
  %arrayidx120 = getelementptr i32, i32* %85, i64 3, !dbg !22632
  %86 = load i32, i32* %arrayidx120, align 4, !dbg !22632
  %87 = load i32*, i32** %coeff, align 8, !dbg !22633
  %arrayidx121 = getelementptr i32, i32* %87, i64 4, !dbg !22633
  %88 = load i32, i32* %arrayidx121, align 4, !dbg !22633
  %89 = load i32*, i32** %coeff, align 8, !dbg !22634
  %arrayidx122 = getelementptr i32, i32* %89, i64 5, !dbg !22634
  %90 = load i32, i32* %arrayidx122, align 4, !dbg !22634
  %91 = load i32*, i32** %coeff, align 8, !dbg !22635
  %arrayidx123 = getelementptr i32, i32* %91, i64 6, !dbg !22635
  %92 = load i32, i32* %arrayidx123, align 4, !dbg !22635
  %93 = load i32*, i32** %coeff, align 8, !dbg !22636
  %arrayidx124 = getelementptr i32, i32* %93, i64 7, !dbg !22636
  %94 = load i32, i32* %arrayidx124, align 4, !dbg !22636
  %call125 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.243, i64 0, i64 0), i32 %80, i32 %82, i32 %84, i32 %86, i32 %88, i32 %90, i32 %92, i32 %94) #13, !dbg !22637
  br label %if.end126, !dbg !22637

if.end126:                                        ; preds = %if.then116, %for.end
  %95 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22638
  %chan127 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %95, i32 0, i32 60, !dbg !22639
  %96 = load i32, i32* %ch, align 4, !dbg !22640
  %idxprom128 = sext i32 %96 to i64, !dbg !22638
  %arrayidx129 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan127, i64 0, i64 %idxprom128, !dbg !22638
  %coeff_count130 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx129, i32 0, i32 21, !dbg !22641
  %97 = load i32, i32* %coeff_count130, align 8, !dbg !22642
  %inc131 = add i32 %97, 1, !dbg !22642
  store i32 %inc131, i32* %coeff_count130, align 8, !dbg !22642
  %98 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22643
  %chan132 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %98, i32 0, i32 60, !dbg !22645
  %99 = load i32, i32* %ch, align 4, !dbg !22646
  %idxprom133 = sext i32 %99 to i64, !dbg !22643
  %arrayidx134 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan132, i64 0, i64 %idxprom133, !dbg !22643
  %coeff_count135 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx134, i32 0, i32 21, !dbg !22647
  %100 = load i32, i32* %coeff_count135, align 8, !dbg !22647
  %cmp136 = icmp eq i32 %100, 8, !dbg !22648
  br i1 %cmp136, label %if.then138, label %if.end154, !dbg !22649

if.then138:                                       ; preds = %if.end126
  %101 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22650
  %chan139 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %101, i32 0, i32 60, !dbg !22652
  %102 = load i32, i32* %ch, align 4, !dbg !22653
  %idxprom140 = sext i32 %102 to i64, !dbg !22650
  %arrayidx141 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan139, i64 0, i64 %idxprom140, !dbg !22650
  %coeff_count142 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx141, i32 0, i32 21, !dbg !22654
  store i32 0, i32* %coeff_count142, align 8, !dbg !22655
  %call143 = call %struct.sk_buff* @mI_alloc_skb(i32 512, i32 2592) #12, !dbg !22656
  store %struct.sk_buff* %call143, %struct.sk_buff** %skb, align 8, !dbg !22657
  %103 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22658
  %tobool144 = icmp ne %struct.sk_buff* %103, null, !dbg !22658
  br i1 %tobool144, label %if.end147, label %if.then145, !dbg !22660

if.then145:                                       ; preds = %if.then138
  %call146 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.244, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hfcmulti_dtmf, i64 0, i64 0)) #13, !dbg !22661
  br label %for.inc155, !dbg !22663

if.end147:                                        ; preds = %if.then138
  %104 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22664
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %104, i32 0, i32 3, !dbg !22664
  %arrayidx148 = getelementptr [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !22664
  %105 = bitcast i8* %arrayidx148 to %struct.mISDNhead*, !dbg !22664
  store %struct.mISDNhead* %105, %struct.mISDNhead** %hh, align 8, !dbg !22665
  %106 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !22666
  %prim = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %106, i32 0, i32 0, !dbg !22667
  store i32 2050, i32* %prim, align 1, !dbg !22668
  %107 = load %struct.mISDNhead*, %struct.mISDNhead** %hh, align 8, !dbg !22669
  %id = getelementptr inbounds %struct.mISDNhead, %struct.mISDNhead* %107, i32 0, i32 1, !dbg !22670
  store i32 16384, i32* %id, align 1, !dbg !22671
  %108 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22672
  %109 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22673
  %chan149 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %109, i32 0, i32 60, !dbg !22674
  %110 = load i32, i32* %ch, align 4, !dbg !22675
  %idxprom150 = sext i32 %110 to i64, !dbg !22673
  %arrayidx151 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan149, i64 0, i64 %idxprom150, !dbg !22673
  %coeff152 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx151, i32 0, i32 22, !dbg !22676
  %111 = load i32*, i32** %coeff152, align 8, !dbg !22676
  %112 = bitcast i32* %111 to i8*, !dbg !22673
  %call153 = call i8* @skb_put_data(%struct.sk_buff* %108, i8* %112, i32 512) #12, !dbg !22677
  %113 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22678
  %114 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22679
  call void @recv_Bchannel_skb(%struct.bchannel* %113, %struct.sk_buff* %114) #12, !dbg !22680
  br label %if.end154, !dbg !22681

if.end154:                                        ; preds = %if.end147, %if.end126
  br label %for.inc155, !dbg !22682

for.inc155:                                       ; preds = %if.end154, %if.then145, %if.then14, %if.then11, %if.then3
  %115 = load i32, i32* %ch, align 4, !dbg !22683
  %inc156 = add i32 %115, 1, !dbg !22683
  store i32 %inc156, i32* %ch, align 4, !dbg !22683
  br label %for.cond, !dbg !22684, !llvm.loop !22685

for.end157:                                       ; preds = %for.cond
  %116 = load i32, i32* %dtmf, align 4, !dbg !22687
  %117 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22688
  %dtmf158 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %117, i32 0, i32 35, !dbg !22689
  store i32 %116, i32* %dtmf158, align 8, !dbg !22690
  %118 = load i32, i32* %dtmf, align 4, !dbg !22691
  %tobool159 = icmp ne i32 %118, 0, !dbg !22691
  br i1 %tobool159, label %if.then160, label %if.end165, !dbg !22693

if.then160:                                       ; preds = %for.end157
  %119 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22694
  %HFC_outb_nodebug161 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %119, i32 0, i32 11, !dbg !22694
  %120 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug161, align 8, !dbg !22694
  %121 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22694
  %122 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22694
  %hw = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %122, i32 0, i32 30, !dbg !22694
  %r_dtmf = getelementptr inbounds %struct.hfcm_hw, %struct.hfcm_hw* %hw, i32 0, i32 6, !dbg !22694
  %123 = load i8, i8* %r_dtmf, align 2, !dbg !22694
  %conv162 = zext i8 %123 to i32, !dbg !22694
  %or163 = or i32 %conv162, 64, !dbg !22694
  %conv164 = trunc i32 %or163 to i8, !dbg !22694
  call void %120(%struct.hfc_multi* %121, i8 zeroext 28, i8 zeroext %conv164) #12, !dbg !22694
  br label %if.end165, !dbg !22694

if.end165:                                        ; preds = %if.then160, %for.end157
  ret void, !dbg !22695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fifo_irq(%struct.hfc_multi* %hc, i32 %block) #2 !dbg !22696 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %block.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %j = alloca i32, align 4
  %dch = alloca %struct.dchannel*, align 8
  %bch = alloca %struct.bchannel*, align 8
  %r_irq_fifo_bl = alloca i8, align 1
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !22697, metadata !DIExpression()), !dbg !22698
  store i32 %block, i32* %block.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %block.addr, metadata !22699, metadata !DIExpression()), !dbg !22700
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !22701, metadata !DIExpression()), !dbg !22702
  call void @llvm.dbg.declare(metadata i32* %j, metadata !22703, metadata !DIExpression()), !dbg !22704
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !22705, metadata !DIExpression()), !dbg !22706
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !22707, metadata !DIExpression()), !dbg !22708
  call void @llvm.dbg.declare(metadata i8* %r_irq_fifo_bl, metadata !22709, metadata !DIExpression()), !dbg !22710
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22711
  %HFC_inb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 13, !dbg !22711
  %1 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug, align 8, !dbg !22711
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22711
  %3 = load i32, i32* %block.addr, align 4, !dbg !22711
  %add = add i32 200, %3, !dbg !22711
  %conv = trunc i32 %add to i8, !dbg !22711
  %call = call zeroext i8 %1(%struct.hfc_multi* %2, i8 zeroext %conv) #12, !dbg !22711
  store i8 %call, i8* %r_irq_fifo_bl, align 1, !dbg !22712
  store i32 0, i32* %j, align 4, !dbg !22713
  br label %while.cond, !dbg !22714

while.cond:                                       ; preds = %if.end63, %if.then, %entry
  %4 = load i32, i32* %j, align 4, !dbg !22715
  %cmp = icmp slt i32 %4, 8, !dbg !22716
  br i1 %cmp, label %while.body, label %while.end, !dbg !22714

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %block.addr, align 4, !dbg !22717
  %shl = shl i32 %5, 2, !dbg !22719
  %6 = load i32, i32* %j, align 4, !dbg !22720
  %shr = ashr i32 %6, 1, !dbg !22721
  %add2 = add i32 %shl, %shr, !dbg !22722
  store i32 %add2, i32* %ch, align 4, !dbg !22723
  %7 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22724
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %7, i32 0, i32 60, !dbg !22725
  %8 = load i32, i32* %ch, align 4, !dbg !22726
  %idxprom = sext i32 %8 to i64, !dbg !22724
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !22724
  %dch3 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 0, !dbg !22727
  %9 = load %struct.dchannel*, %struct.dchannel** %dch3, align 8, !dbg !22727
  store %struct.dchannel* %9, %struct.dchannel** %dch, align 8, !dbg !22728
  %10 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22729
  %chan4 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %10, i32 0, i32 60, !dbg !22730
  %11 = load i32, i32* %ch, align 4, !dbg !22731
  %idxprom5 = sext i32 %11 to i64, !dbg !22729
  %arrayidx6 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan4, i64 0, i64 %idxprom5, !dbg !22729
  %bch7 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx6, i32 0, i32 1, !dbg !22732
  %12 = load %struct.bchannel*, %struct.bchannel** %bch7, align 8, !dbg !22732
  store %struct.bchannel* %12, %struct.bchannel** %bch, align 8, !dbg !22733
  %13 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22734
  %tobool = icmp ne %struct.dchannel* %13, null, !dbg !22734
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !22736

land.lhs.true:                                    ; preds = %while.body
  %14 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22737
  %tobool8 = icmp ne %struct.bchannel* %14, null, !dbg !22737
  br i1 %tobool8, label %lor.lhs.false, label %if.then, !dbg !22738

lor.lhs.false:                                    ; preds = %land.lhs.true, %while.body
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22739
  %created = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 47, !dbg !22740
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22741
  %chan9 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %16, i32 0, i32 60, !dbg !22742
  %17 = load i32, i32* %ch, align 4, !dbg !22743
  %idxprom10 = sext i32 %17 to i64, !dbg !22741
  %arrayidx11 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan9, i64 0, i64 %idxprom10, !dbg !22741
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx11, i32 0, i32 2, !dbg !22744
  %18 = load i32, i32* %port, align 8, !dbg !22744
  %idxprom12 = sext i32 %18 to i64, !dbg !22739
  %arrayidx13 = getelementptr [32 x i8], [32 x i8]* %created, i64 0, i64 %idxprom12, !dbg !22739
  %19 = load i8, i8* %arrayidx13, align 1, !dbg !22739
  %tobool14 = icmp ne i8 %19, 0, !dbg !22739
  br i1 %tobool14, label %if.end, label %if.then, !dbg !22745

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %20 = load i32, i32* %j, align 4, !dbg !22746
  %add15 = add i32 %20, 2, !dbg !22746
  store i32 %add15, i32* %j, align 4, !dbg !22746
  br label %while.cond, !dbg !22748, !llvm.loop !22749

if.end:                                           ; preds = %lor.lhs.false
  %21 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22751
  %tobool16 = icmp ne %struct.dchannel* %21, null, !dbg !22751
  br i1 %tobool16, label %land.lhs.true17, label %if.end25, !dbg !22753

land.lhs.true17:                                  ; preds = %if.end
  %22 = load i8, i8* %r_irq_fifo_bl, align 1, !dbg !22754
  %conv18 = zext i8 %22 to i32, !dbg !22754
  %23 = load i32, i32* %j, align 4, !dbg !22755
  %shl19 = shl i32 1, %23, !dbg !22756
  %and = and i32 %conv18, %shl19, !dbg !22757
  %tobool20 = icmp ne i32 %and, 0, !dbg !22757
  br i1 %tobool20, label %land.lhs.true21, label %if.end25, !dbg !22758

land.lhs.true21:                                  ; preds = %land.lhs.true17
  %24 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22759
  %Flags = getelementptr inbounds %struct.dchannel, %struct.dchannel* %24, i32 0, i32 1, !dbg !22760
  %call22 = call zeroext i1 @test_bit(i64 6, i64* %Flags) #12, !dbg !22761
  br i1 %call22, label %if.then24, label %if.end25, !dbg !22762

if.then24:                                        ; preds = %land.lhs.true21
  %25 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22763
  %26 = load i32, i32* %ch, align 4, !dbg !22765
  call void @hfcmulti_tx(%struct.hfc_multi* %25, i32 %26) #12, !dbg !22766
  %27 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22767
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %27, i32 0, i32 11, !dbg !22767
  %28 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !22767
  %29 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22767
  call void %28(%struct.hfc_multi* %29, i8 zeroext 15, i8 zeroext 0) #12, !dbg !22767
  %30 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22768
  %HFC_wait_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %30, i32 0, i32 17, !dbg !22768
  %31 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug, align 8, !dbg !22768
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22768
  call void %31(%struct.hfc_multi* %32) #12, !dbg !22768
  br label %if.end25, !dbg !22769

if.end25:                                         ; preds = %if.then24, %land.lhs.true21, %land.lhs.true17, %if.end
  %33 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22770
  %tobool26 = icmp ne %struct.bchannel* %33, null, !dbg !22770
  br i1 %tobool26, label %land.lhs.true27, label %if.end39, !dbg !22772

land.lhs.true27:                                  ; preds = %if.end25
  %34 = load i8, i8* %r_irq_fifo_bl, align 1, !dbg !22773
  %conv28 = zext i8 %34 to i32, !dbg !22773
  %35 = load i32, i32* %j, align 4, !dbg !22774
  %shl29 = shl i32 1, %35, !dbg !22775
  %and30 = and i32 %conv28, %shl29, !dbg !22776
  %tobool31 = icmp ne i32 %and30, 0, !dbg !22776
  br i1 %tobool31, label %land.lhs.true32, label %if.end39, !dbg !22777

land.lhs.true32:                                  ; preds = %land.lhs.true27
  %36 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22778
  %Flags33 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %36, i32 0, i32 2, !dbg !22779
  %call34 = call zeroext i1 @test_bit(i64 6, i64* %Flags33) #12, !dbg !22780
  br i1 %call34, label %if.then36, label %if.end39, !dbg !22781

if.then36:                                        ; preds = %land.lhs.true32
  %37 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22782
  %38 = load i32, i32* %ch, align 4, !dbg !22784
  call void @hfcmulti_tx(%struct.hfc_multi* %37, i32 %38) #12, !dbg !22785
  %39 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22786
  %HFC_outb_nodebug37 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %39, i32 0, i32 11, !dbg !22786
  %40 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug37, align 8, !dbg !22786
  %41 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22786
  call void %40(%struct.hfc_multi* %41, i8 zeroext 15, i8 zeroext 0) #12, !dbg !22786
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22787
  %HFC_wait_nodebug38 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %42, i32 0, i32 17, !dbg !22787
  %43 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug38, align 8, !dbg !22787
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22787
  call void %43(%struct.hfc_multi* %44) #12, !dbg !22787
  br label %if.end39, !dbg !22788

if.end39:                                         ; preds = %if.then36, %land.lhs.true32, %land.lhs.true27, %if.end25
  %45 = load i32, i32* %j, align 4, !dbg !22789
  %inc = add i32 %45, 1, !dbg !22789
  store i32 %inc, i32* %j, align 4, !dbg !22789
  %46 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22790
  %tobool40 = icmp ne %struct.dchannel* %46, null, !dbg !22790
  br i1 %tobool40, label %land.lhs.true41, label %if.end51, !dbg !22792

land.lhs.true41:                                  ; preds = %if.end39
  %47 = load i8, i8* %r_irq_fifo_bl, align 1, !dbg !22793
  %conv42 = zext i8 %47 to i32, !dbg !22793
  %48 = load i32, i32* %j, align 4, !dbg !22794
  %shl43 = shl i32 1, %48, !dbg !22795
  %and44 = and i32 %conv42, %shl43, !dbg !22796
  %tobool45 = icmp ne i32 %and44, 0, !dbg !22796
  br i1 %tobool45, label %land.lhs.true46, label %if.end51, !dbg !22797

land.lhs.true46:                                  ; preds = %land.lhs.true41
  %49 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22798
  %Flags47 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %49, i32 0, i32 1, !dbg !22799
  %call48 = call zeroext i1 @test_bit(i64 6, i64* %Flags47) #12, !dbg !22800
  br i1 %call48, label %if.then50, label %if.end51, !dbg !22801

if.then50:                                        ; preds = %land.lhs.true46
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22802
  %51 = load i32, i32* %ch, align 4, !dbg !22804
  call void @hfcmulti_rx(%struct.hfc_multi* %50, i32 %51) #12, !dbg !22805
  br label %if.end51, !dbg !22806

if.end51:                                         ; preds = %if.then50, %land.lhs.true46, %land.lhs.true41, %if.end39
  %52 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22807
  %tobool52 = icmp ne %struct.bchannel* %52, null, !dbg !22807
  br i1 %tobool52, label %land.lhs.true53, label %if.end63, !dbg !22809

land.lhs.true53:                                  ; preds = %if.end51
  %53 = load i8, i8* %r_irq_fifo_bl, align 1, !dbg !22810
  %conv54 = zext i8 %53 to i32, !dbg !22810
  %54 = load i32, i32* %j, align 4, !dbg !22811
  %shl55 = shl i32 1, %54, !dbg !22812
  %and56 = and i32 %conv54, %shl55, !dbg !22813
  %tobool57 = icmp ne i32 %and56, 0, !dbg !22813
  br i1 %tobool57, label %land.lhs.true58, label %if.end63, !dbg !22814

land.lhs.true58:                                  ; preds = %land.lhs.true53
  %55 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22815
  %Flags59 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %55, i32 0, i32 2, !dbg !22816
  %call60 = call zeroext i1 @test_bit(i64 6, i64* %Flags59) #12, !dbg !22817
  br i1 %call60, label %if.then62, label %if.end63, !dbg !22818

if.then62:                                        ; preds = %land.lhs.true58
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22819
  %57 = load i32, i32* %ch, align 4, !dbg !22821
  call void @hfcmulti_rx(%struct.hfc_multi* %56, i32 %57) #12, !dbg !22822
  br label %if.end63, !dbg !22823

if.end63:                                         ; preds = %if.then62, %land.lhs.true58, %land.lhs.true53, %if.end51
  %58 = load i32, i32* %j, align 4, !dbg !22824
  %inc64 = add i32 %58, 1, !dbg !22824
  store i32 %inc64, i32* %j, align 4, !dbg !22824
  br label %while.cond, !dbg !22714, !llvm.loop !22749

while.end:                                        ; preds = %while.cond
  ret void, !dbg !22825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #2 !dbg !22826 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !22829, metadata !DIExpression()), !dbg !22830
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !22831, metadata !DIExpression()), !dbg !22832
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !22833
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !22834
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !22835
  ret i1 %call, !dbg !22836
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfcmulti_rx(%struct.hfc_multi* %hc, i32 %ch) #2 !dbg !22837 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  %ch.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  %Zsize = alloca i32, align 4
  %z1 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %f1 = alloca i32, align 4
  %f2 = alloca i32, align 4
  %again = alloca i32, align 4
  %bch = alloca %struct.bchannel*, align 8
  %dch = alloca %struct.dchannel*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %sp = alloca %struct.sk_buff**, align 8
  %maxlen = alloca i32, align 4
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !22838, metadata !DIExpression()), !dbg !22839
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !22840, metadata !DIExpression()), !dbg !22841
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !22842, metadata !DIExpression()), !dbg !22843
  call void @llvm.dbg.declare(metadata i32* %Zsize, metadata !22844, metadata !DIExpression()), !dbg !22845
  call void @llvm.dbg.declare(metadata i32* %z1, metadata !22846, metadata !DIExpression()), !dbg !22847
  call void @llvm.dbg.declare(metadata i32* %z2, metadata !22848, metadata !DIExpression()), !dbg !22849
  store i32 0, i32* %z2, align 4, !dbg !22849
  call void @llvm.dbg.declare(metadata i32* %f1, metadata !22850, metadata !DIExpression()), !dbg !22851
  store i32 0, i32* %f1, align 4, !dbg !22851
  call void @llvm.dbg.declare(metadata i32* %f2, metadata !22852, metadata !DIExpression()), !dbg !22853
  store i32 0, i32* %f2, align 4, !dbg !22853
  call void @llvm.dbg.declare(metadata i32* %again, metadata !22854, metadata !DIExpression()), !dbg !22855
  store i32 0, i32* %again, align 4, !dbg !22855
  call void @llvm.dbg.declare(metadata %struct.bchannel** %bch, metadata !22856, metadata !DIExpression()), !dbg !22857
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch, metadata !22858, metadata !DIExpression()), !dbg !22859
  store %struct.dchannel* null, %struct.dchannel** %dch, align 8, !dbg !22859
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !22860, metadata !DIExpression()), !dbg !22861
  call void @llvm.dbg.declare(metadata %struct.sk_buff*** %sp, metadata !22862, metadata !DIExpression()), !dbg !22863
  store %struct.sk_buff** null, %struct.sk_buff*** %sp, align 8, !dbg !22863
  call void @llvm.dbg.declare(metadata i32* %maxlen, metadata !22864, metadata !DIExpression()), !dbg !22865
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22866
  %chan = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 60, !dbg !22867
  %1 = load i32, i32* %ch.addr, align 4, !dbg !22868
  %idxprom = sext i32 %1 to i64, !dbg !22866
  %arrayidx = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan, i64 0, i64 %idxprom, !dbg !22866
  %bch1 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx, i32 0, i32 1, !dbg !22869
  %2 = load %struct.bchannel*, %struct.bchannel** %bch1, align 8, !dbg !22869
  store %struct.bchannel* %2, %struct.bchannel** %bch, align 8, !dbg !22870
  %3 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22871
  %tobool = icmp ne %struct.bchannel* %3, null, !dbg !22871
  br i1 %tobool, label %if.then, label %if.else, !dbg !22873

if.then:                                          ; preds = %entry
  %4 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22874
  %Flags = getelementptr inbounds %struct.bchannel, %struct.bchannel* %4, i32 0, i32 2, !dbg !22877
  %call = call zeroext i1 @test_bit(i64 6, i64* %Flags) #12, !dbg !22878
  br i1 %call, label %if.end, label %if.then2, !dbg !22879

if.then2:                                         ; preds = %if.then
  br label %if.end271, !dbg !22880

if.end:                                           ; preds = %if.then
  br label %if.end19, !dbg !22881

if.else:                                          ; preds = %entry
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22882
  %chan3 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 60, !dbg !22884
  %6 = load i32, i32* %ch.addr, align 4, !dbg !22885
  %idxprom4 = sext i32 %6 to i64, !dbg !22882
  %arrayidx5 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan3, i64 0, i64 %idxprom4, !dbg !22882
  %dch6 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx5, i32 0, i32 0, !dbg !22886
  %7 = load %struct.dchannel*, %struct.dchannel** %dch6, align 8, !dbg !22886
  %tobool7 = icmp ne %struct.dchannel* %7, null, !dbg !22882
  br i1 %tobool7, label %if.then8, label %if.else17, !dbg !22887

if.then8:                                         ; preds = %if.else
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22888
  %chan9 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 60, !dbg !22890
  %9 = load i32, i32* %ch.addr, align 4, !dbg !22891
  %idxprom10 = sext i32 %9 to i64, !dbg !22888
  %arrayidx11 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan9, i64 0, i64 %idxprom10, !dbg !22888
  %dch12 = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx11, i32 0, i32 0, !dbg !22892
  %10 = load %struct.dchannel*, %struct.dchannel** %dch12, align 8, !dbg !22892
  store %struct.dchannel* %10, %struct.dchannel** %dch, align 8, !dbg !22893
  %11 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22894
  %Flags13 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %11, i32 0, i32 1, !dbg !22896
  %call14 = call zeroext i1 @test_bit(i64 6, i64* %Flags13) #12, !dbg !22897
  br i1 %call14, label %if.end16, label %if.then15, !dbg !22898

if.then15:                                        ; preds = %if.then8
  br label %if.end271, !dbg !22899

if.end16:                                         ; preds = %if.then8
  br label %if.end18, !dbg !22900

if.else17:                                        ; preds = %if.else
  br label %if.end271, !dbg !22901

if.end18:                                         ; preds = %if.end16
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end
  br label %next_frame, !dbg !22871

next_frame:                                       ; preds = %if.end255, %if.end212, %if.end200, %if.end19
  call void @llvm.dbg.label(metadata !22903), !dbg !22904
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22905
  %chip = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %12, i32 0, i32 31, !dbg !22907
  %call20 = call zeroext i1 @test_bit(i64 13, i64* %chip) #12, !dbg !22908
  br i1 %call20, label %land.lhs.true, label %if.else36, !dbg !22909

land.lhs.true:                                    ; preds = %next_frame
  %13 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22910
  %chan21 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %13, i32 0, i32 60, !dbg !22911
  %14 = load i32, i32* %ch.addr, align 4, !dbg !22912
  %idxprom22 = sext i32 %14 to i64, !dbg !22910
  %arrayidx23 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan21, i64 0, i64 %idxprom22, !dbg !22910
  %protocol = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx23, i32 0, i32 12, !dbg !22913
  %15 = load i32, i32* %protocol, align 4, !dbg !22913
  %cmp = icmp eq i32 %15, 33, !dbg !22914
  br i1 %cmp, label %land.lhs.true24, label %if.else36, !dbg !22915

land.lhs.true24:                                  ; preds = %land.lhs.true
  %16 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22916
  %chan25 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %16, i32 0, i32 60, !dbg !22917
  %17 = load i32, i32* %ch.addr, align 4, !dbg !22918
  %idxprom26 = sext i32 %17 to i64, !dbg !22916
  %arrayidx27 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan25, i64 0, i64 %idxprom26, !dbg !22916
  %slot_rx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx27, i32 0, i32 15, !dbg !22919
  %18 = load i32, i32* %slot_rx, align 8, !dbg !22919
  %cmp28 = icmp slt i32 %18, 0, !dbg !22920
  br i1 %cmp28, label %land.lhs.true29, label %if.else36, !dbg !22921

land.lhs.true29:                                  ; preds = %land.lhs.true24
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22922
  %chan30 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %19, i32 0, i32 60, !dbg !22923
  %20 = load i32, i32* %ch.addr, align 4, !dbg !22924
  %idxprom31 = sext i32 %20 to i64, !dbg !22922
  %arrayidx32 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan30, i64 0, i64 %idxprom31, !dbg !22922
  %slot_tx = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx32, i32 0, i32 13, !dbg !22925
  %21 = load i32, i32* %slot_tx, align 8, !dbg !22925
  %cmp33 = icmp slt i32 %21, 0, !dbg !22926
  br i1 %cmp33, label %if.then34, label %if.else36, !dbg !22927

if.then34:                                        ; preds = %land.lhs.true29
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22928
  %HFC_outb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %22, i32 0, i32 11, !dbg !22928
  %23 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug, align 8, !dbg !22928
  %24 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22928
  %25 = load i32, i32* %ch.addr, align 4, !dbg !22928
  %shl = shl i32 %25, 1, !dbg !22928
  %or = or i32 32, %shl, !dbg !22928
  %or35 = or i32 %or, 1, !dbg !22928
  %conv = trunc i32 %or35 to i8, !dbg !22928
  call void %23(%struct.hfc_multi* %24, i8 zeroext 15, i8 zeroext %conv) #12, !dbg !22928
  br label %if.end41, !dbg !22928

if.else36:                                        ; preds = %land.lhs.true29, %land.lhs.true24, %land.lhs.true, %next_frame
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22929
  %HFC_outb_nodebug37 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %26, i32 0, i32 11, !dbg !22929
  %27 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug37, align 8, !dbg !22929
  %28 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22929
  %29 = load i32, i32* %ch.addr, align 4, !dbg !22929
  %shl38 = shl i32 %29, 1, !dbg !22929
  %or39 = or i32 %shl38, 1, !dbg !22929
  %conv40 = trunc i32 %or39 to i8, !dbg !22929
  call void %27(%struct.hfc_multi* %28, i8 zeroext 15, i8 zeroext %conv40) #12, !dbg !22929
  br label %if.end41

if.end41:                                         ; preds = %if.else36, %if.then34
  %30 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22930
  %HFC_wait_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %30, i32 0, i32 17, !dbg !22930
  %31 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug, align 8, !dbg !22930
  %32 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22930
  call void %31(%struct.hfc_multi* %32) #12, !dbg !22930
  %33 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22931
  %chan42 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %33, i32 0, i32 60, !dbg !22933
  %34 = load i32, i32* %ch.addr, align 4, !dbg !22934
  %idxprom43 = sext i32 %34 to i64, !dbg !22931
  %arrayidx44 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan42, i64 0, i64 %idxprom43, !dbg !22931
  %rx_off = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx44, i32 0, i32 20, !dbg !22935
  %35 = load i32, i32* %rx_off, align 4, !dbg !22935
  %tobool45 = icmp ne i32 %35, 0, !dbg !22931
  br i1 %tobool45, label %if.then46, label %if.end50, !dbg !22936

if.then46:                                        ; preds = %if.end41
  %36 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22937
  %tobool47 = icmp ne %struct.bchannel* %36, null, !dbg !22937
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !22940

if.then48:                                        ; preds = %if.then46
  %37 = load i32, i32* @poll, align 4, !dbg !22941
  %38 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22942
  %dropcnt = getelementptr inbounds %struct.bchannel, %struct.bchannel* %38, i32 0, i32 25, !dbg !22943
  %39 = load i32, i32* %dropcnt, align 8, !dbg !22944
  %add = add i32 %39, %37, !dbg !22944
  store i32 %add, i32* %dropcnt, align 8, !dbg !22944
  br label %if.end49, !dbg !22942

if.end49:                                         ; preds = %if.then48, %if.then46
  br label %if.end271, !dbg !22945

if.end50:                                         ; preds = %if.end41
  %40 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !22946
  %tobool51 = icmp ne %struct.dchannel* %40, null, !dbg !22946
  br i1 %tobool51, label %if.then55, label %lor.lhs.false, !dbg !22948

lor.lhs.false:                                    ; preds = %if.end50
  %41 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !22949
  %Flags52 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %41, i32 0, i32 2, !dbg !22950
  %call53 = call zeroext i1 @test_bit(i64 13, i64* %Flags52) #12, !dbg !22951
  br i1 %call53, label %if.then55, label %if.end71, !dbg !22952

if.then55:                                        ; preds = %lor.lhs.false, %if.end50
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22953
  %HFC_inb_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %42, i32 0, i32 13, !dbg !22953
  %43 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug, align 8, !dbg !22953
  %44 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22953
  %call56 = call zeroext i8 %43(%struct.hfc_multi* %44, i8 zeroext 12) #12, !dbg !22953
  %conv57 = zext i8 %call56 to i32, !dbg !22953
  store i32 %conv57, i32* %f1, align 4, !dbg !22955
  br label %while.cond, !dbg !22956

while.cond:                                       ; preds = %if.end67, %if.then55
  %45 = load i32, i32* %f1, align 4, !dbg !22957
  %46 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22958
  %HFC_inb_nodebug58 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %46, i32 0, i32 13, !dbg !22958
  %47 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug58, align 8, !dbg !22958
  %48 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22958
  %call59 = call zeroext i8 %47(%struct.hfc_multi* %48, i8 zeroext 12) #12, !dbg !22958
  %conv60 = zext i8 %call59 to i32, !dbg !22958
  store i32 %conv60, i32* %temp, align 4, !dbg !22959
  %cmp61 = icmp ne i32 %45, %conv60, !dbg !22960
  br i1 %cmp61, label %while.body, label %while.end, !dbg !22956

while.body:                                       ; preds = %while.cond
  %49 = load i32, i32* @debug, align 4, !dbg !22961
  %and = and i32 %49, 65536, !dbg !22964
  %tobool63 = icmp ne i32 %and, 0, !dbg !22964
  br i1 %tobool63, label %if.then64, label %if.end67, !dbg !22965

if.then64:                                        ; preds = %while.body
  %50 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22966
  %id = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %50, i32 0, i32 2, !dbg !22967
  %51 = load i32, i32* %id, align 8, !dbg !22967
  %add65 = add i32 %51, 1, !dbg !22968
  %52 = load i32, i32* %temp, align 4, !dbg !22969
  %53 = load i32, i32* %f1, align 4, !dbg !22970
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.225, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_rx, i64 0, i64 0), i32 %add65, i32 %52, i32 %53) #13, !dbg !22971
  br label %if.end67, !dbg !22971

if.end67:                                         ; preds = %if.then64, %while.body
  %54 = load i32, i32* %temp, align 4, !dbg !22972
  store i32 %54, i32* %f1, align 4, !dbg !22973
  br label %while.cond, !dbg !22956, !llvm.loop !22974

while.end:                                        ; preds = %while.cond
  %55 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22976
  %HFC_inb_nodebug68 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %55, i32 0, i32 13, !dbg !22976
  %56 = load i8 (%struct.hfc_multi*, i8)*, i8 (%struct.hfc_multi*, i8)** %HFC_inb_nodebug68, align 8, !dbg !22976
  %57 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22976
  %call69 = call zeroext i8 %56(%struct.hfc_multi* %57, i8 zeroext 13) #12, !dbg !22976
  %conv70 = zext i8 %call69 to i32, !dbg !22976
  store i32 %conv70, i32* %f2, align 4, !dbg !22977
  br label %if.end71, !dbg !22978

if.end71:                                         ; preds = %while.end, %lor.lhs.false
  %58 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22979
  %HFC_inw_nodebug = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %58, i32 0, i32 15, !dbg !22979
  %59 = load i16 (%struct.hfc_multi*, i8)*, i16 (%struct.hfc_multi*, i8)** %HFC_inw_nodebug, align 8, !dbg !22979
  %60 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22979
  %call72 = call zeroext i16 %59(%struct.hfc_multi* %60, i8 zeroext 4) #12, !dbg !22979
  %conv73 = zext i16 %call72 to i32, !dbg !22979
  %61 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22980
  %Zmin = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %61, i32 0, i32 39, !dbg !22981
  %62 = load i32, i32* %Zmin, align 8, !dbg !22981
  %sub = sub i32 %conv73, %62, !dbg !22982
  store i32 %sub, i32* %z1, align 4, !dbg !22983
  br label %while.cond74, !dbg !22984

while.cond74:                                     ; preds = %if.end89, %if.end71
  %63 = load i32, i32* %z1, align 4, !dbg !22985
  %64 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22986
  %HFC_inw_nodebug75 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %64, i32 0, i32 15, !dbg !22986
  %65 = load i16 (%struct.hfc_multi*, i8)*, i16 (%struct.hfc_multi*, i8)** %HFC_inw_nodebug75, align 8, !dbg !22986
  %66 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22986
  %call76 = call zeroext i16 %65(%struct.hfc_multi* %66, i8 zeroext 4) #12, !dbg !22986
  %conv77 = zext i16 %call76 to i32, !dbg !22986
  %67 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22987
  %Zmin78 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %67, i32 0, i32 39, !dbg !22988
  %68 = load i32, i32* %Zmin78, align 8, !dbg !22988
  %sub79 = sub i32 %conv77, %68, !dbg !22989
  store i32 %sub79, i32* %temp, align 4, !dbg !22990
  %cmp80 = icmp ne i32 %63, %sub79, !dbg !22991
  br i1 %cmp80, label %while.body82, label %while.end90, !dbg !22984

while.body82:                                     ; preds = %while.cond74
  %69 = load i32, i32* @debug, align 4, !dbg !22992
  %and83 = and i32 %69, 65536, !dbg !22995
  %tobool84 = icmp ne i32 %and83, 0, !dbg !22995
  br i1 %tobool84, label %if.then85, label %if.end89, !dbg !22996

if.then85:                                        ; preds = %while.body82
  %70 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !22997
  %id86 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %70, i32 0, i32 2, !dbg !22998
  %71 = load i32, i32* %id86, align 8, !dbg !22998
  %add87 = add i32 %71, 1, !dbg !22999
  %72 = load i32, i32* %temp, align 4, !dbg !23000
  %73 = load i32, i32* %z2, align 4, !dbg !23001
  %call88 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_rx, i64 0, i64 0), i32 %add87, i32 %72, i32 %73) #13, !dbg !23002
  br label %if.end89, !dbg !23002

if.end89:                                         ; preds = %if.then85, %while.body82
  %74 = load i32, i32* %temp, align 4, !dbg !23003
  store i32 %74, i32* %z1, align 4, !dbg !23004
  br label %while.cond74, !dbg !22984, !llvm.loop !23005

while.end90:                                      ; preds = %while.cond74
  %75 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23007
  %HFC_inw_nodebug91 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %75, i32 0, i32 15, !dbg !23007
  %76 = load i16 (%struct.hfc_multi*, i8)*, i16 (%struct.hfc_multi*, i8)** %HFC_inw_nodebug91, align 8, !dbg !23007
  %77 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23007
  %call92 = call zeroext i16 %76(%struct.hfc_multi* %77, i8 zeroext 6) #12, !dbg !23007
  %conv93 = zext i16 %call92 to i32, !dbg !23007
  %78 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23008
  %Zmin94 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %78, i32 0, i32 39, !dbg !23009
  %79 = load i32, i32* %Zmin94, align 8, !dbg !23009
  %sub95 = sub i32 %conv93, %79, !dbg !23010
  store i32 %sub95, i32* %z2, align 4, !dbg !23011
  %80 = load i32, i32* %z1, align 4, !dbg !23012
  %81 = load i32, i32* %z2, align 4, !dbg !23013
  %sub96 = sub i32 %80, %81, !dbg !23014
  store i32 %sub96, i32* %Zsize, align 4, !dbg !23015
  %82 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !23016
  %tobool97 = icmp ne %struct.dchannel* %82, null, !dbg !23016
  br i1 %tobool97, label %land.lhs.true102, label %lor.lhs.false98, !dbg !23018

lor.lhs.false98:                                  ; preds = %while.end90
  %83 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !23019
  %Flags99 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %83, i32 0, i32 2, !dbg !23020
  %call100 = call zeroext i1 @test_bit(i64 13, i64* %Flags99) #12, !dbg !23021
  br i1 %call100, label %land.lhs.true102, label %if.end106, !dbg !23022

land.lhs.true102:                                 ; preds = %lor.lhs.false98, %while.end90
  %84 = load i32, i32* %f1, align 4, !dbg !23023
  %85 = load i32, i32* %f2, align 4, !dbg !23024
  %cmp103 = icmp ne i32 %84, %85, !dbg !23025
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !23026

if.then105:                                       ; preds = %land.lhs.true102
  %86 = load i32, i32* %Zsize, align 4, !dbg !23027
  %inc = add i32 %86, 1, !dbg !23027
  store i32 %inc, i32* %Zsize, align 4, !dbg !23027
  br label %if.end106, !dbg !23028

if.end106:                                        ; preds = %if.then105, %land.lhs.true102, %lor.lhs.false98
  %87 = load i32, i32* %Zsize, align 4, !dbg !23029
  %cmp107 = icmp slt i32 %87, 0, !dbg !23031
  br i1 %cmp107, label %if.then109, label %if.end111, !dbg !23032

if.then109:                                       ; preds = %if.end106
  %88 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23033
  %Zlen = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %88, i32 0, i32 37, !dbg !23034
  %89 = load i32, i32* %Zlen, align 8, !dbg !23034
  %90 = load i32, i32* %Zsize, align 4, !dbg !23035
  %add110 = add i32 %90, %89, !dbg !23035
  store i32 %add110, i32* %Zsize, align 4, !dbg !23035
  br label %if.end111, !dbg !23036

if.end111:                                        ; preds = %if.then109, %if.end106
  %91 = load i32, i32* %Zsize, align 4, !dbg !23037
  %cmp112 = icmp sle i32 %91, 0, !dbg !23039
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !23040

if.then114:                                       ; preds = %if.end111
  br label %if.end271, !dbg !23041

if.end115:                                        ; preds = %if.end111
  %92 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !23042
  %tobool116 = icmp ne %struct.bchannel* %92, null, !dbg !23042
  br i1 %tobool116, label %if.then117, label %if.else128, !dbg !23044

if.then117:                                       ; preds = %if.end115
  %93 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !23045
  %94 = load i32, i32* %Zsize, align 4, !dbg !23047
  %call118 = call i32 @bchannel_get_rxbuf(%struct.bchannel* %93, i32 %94) #12, !dbg !23048
  store i32 %call118, i32* %maxlen, align 4, !dbg !23049
  %95 = load i32, i32* %maxlen, align 4, !dbg !23050
  %cmp119 = icmp slt i32 %95, 0, !dbg !23052
  br i1 %cmp119, label %if.then121, label %if.end125, !dbg !23053

if.then121:                                       ; preds = %if.then117
  %96 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23054
  %id122 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %96, i32 0, i32 2, !dbg !23054
  %97 = load i32, i32* %id122, align 8, !dbg !23054
  %add123 = add i32 %97, 1, !dbg !23054
  %98 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !23054
  %nr = getelementptr inbounds %struct.bchannel, %struct.bchannel* %98, i32 0, i32 1, !dbg !23054
  %99 = load i32, i32* %nr, align 8, !dbg !23054
  %100 = load i32, i32* %Zsize, align 4, !dbg !23054
  %call124 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.226, i64 0, i64 0), i32 %add123, i32 %99, i32 %100) #13, !dbg !23054
  br label %if.end271, !dbg !23056

if.end125:                                        ; preds = %if.then117
  %101 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !23057
  %rx_skb = getelementptr inbounds %struct.bchannel, %struct.bchannel* %101, i32 0, i32 9, !dbg !23058
  store %struct.sk_buff** %rx_skb, %struct.sk_buff*** %sp, align 8, !dbg !23059
  %102 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !23060
  %maxlen126 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %102, i32 0, i32 10, !dbg !23061
  %103 = load i16, i16* %maxlen126, align 8, !dbg !23061
  %conv127 = zext i16 %103 to i32, !dbg !23060
  store i32 %conv127, i32* %maxlen, align 4, !dbg !23062
  br label %if.end144, !dbg !23063

if.else128:                                       ; preds = %if.end115
  %104 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !23064
  %rx_skb129 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %104, i32 0, i32 9, !dbg !23066
  store %struct.sk_buff** %rx_skb129, %struct.sk_buff*** %sp, align 8, !dbg !23067
  %105 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !23068
  %maxlen130 = getelementptr inbounds %struct.dchannel, %struct.dchannel* %105, i32 0, i32 10, !dbg !23069
  %106 = load i32, i32* %maxlen130, align 8, !dbg !23069
  %add131 = add i32 %106, 3, !dbg !23070
  store i32 %add131, i32* %maxlen, align 4, !dbg !23071
  %107 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23072
  %108 = load %struct.sk_buff*, %struct.sk_buff** %107, align 8, !dbg !23074
  %cmp132 = icmp eq %struct.sk_buff* %108, null, !dbg !23075
  br i1 %cmp132, label %if.then134, label %if.end143, !dbg !23076

if.then134:                                       ; preds = %if.else128
  %109 = load i32, i32* %maxlen, align 4, !dbg !23077
  %call135 = call %struct.sk_buff* @mI_alloc_skb(i32 %109, i32 2592) #12, !dbg !23079
  %110 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23080
  store %struct.sk_buff* %call135, %struct.sk_buff** %110, align 8, !dbg !23081
  %111 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23082
  %112 = load %struct.sk_buff*, %struct.sk_buff** %111, align 8, !dbg !23084
  %cmp136 = icmp eq %struct.sk_buff* %112, null, !dbg !23085
  br i1 %cmp136, label %if.then138, label %if.end142, !dbg !23086

if.then138:                                       ; preds = %if.then134
  %113 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23087
  %id139 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %113, i32 0, i32 2, !dbg !23087
  %114 = load i32, i32* %id139, align 8, !dbg !23087
  %add140 = add i32 %114, 1, !dbg !23087
  %call141 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.227, i64 0, i64 0), i32 %add140) #13, !dbg !23087
  br label %if.end271, !dbg !23089

if.end142:                                        ; preds = %if.then134
  br label %if.end143, !dbg !23090

if.end143:                                        ; preds = %if.end142, %if.else128
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.end125
  %115 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !23091
  %tobool145 = icmp ne %struct.dchannel* %115, null, !dbg !23091
  br i1 %tobool145, label %if.then146, label %if.end152, !dbg !23093

if.then146:                                       ; preds = %if.end144
  %116 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23094
  %chan147 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %116, i32 0, i32 60, !dbg !23095
  %117 = load i32, i32* %ch.addr, align 4, !dbg !23096
  %idxprom148 = sext i32 %117 to i64, !dbg !23094
  %arrayidx149 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan147, i64 0, i64 %idxprom148, !dbg !23094
  %port = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx149, i32 0, i32 2, !dbg !23097
  %118 = load i32, i32* %port, align 8, !dbg !23097
  %shl150 = shl i32 1, %118, !dbg !23098
  %119 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23099
  %activity_rx = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %119, i32 0, i32 49, !dbg !23100
  %120 = load i32, i32* %activity_rx, align 8, !dbg !23101
  %or151 = or i32 %120, %shl150, !dbg !23101
  store i32 %or151, i32* %activity_rx, align 8, !dbg !23101
  br label %if.end152, !dbg !23099

if.end152:                                        ; preds = %if.then146, %if.end144
  %121 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !23102
  %tobool153 = icmp ne %struct.dchannel* %121, null, !dbg !23102
  br i1 %tobool153, label %if.then158, label %lor.lhs.false154, !dbg !23104

lor.lhs.false154:                                 ; preds = %if.end152
  %122 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !23105
  %Flags155 = getelementptr inbounds %struct.bchannel, %struct.bchannel* %122, i32 0, i32 2, !dbg !23106
  %call156 = call zeroext i1 @test_bit(i64 13, i64* %Flags155) #12, !dbg !23107
  br i1 %call156, label %if.then158, label %if.else258, !dbg !23108

if.then158:                                       ; preds = %lor.lhs.false154, %if.end152
  %123 = load i32, i32* @debug, align 4, !dbg !23109
  %and159 = and i32 %123, 65536, !dbg !23112
  %tobool160 = icmp ne i32 %and159, 0, !dbg !23112
  br i1 %tobool160, label %if.then161, label %if.end168, !dbg !23113

if.then161:                                       ; preds = %if.then158
  %124 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23114
  %id162 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %124, i32 0, i32 2, !dbg !23115
  %125 = load i32, i32* %id162, align 8, !dbg !23115
  %add163 = add i32 %125, 1, !dbg !23116
  %126 = load i32, i32* %ch.addr, align 4, !dbg !23117
  %127 = load i32, i32* %Zsize, align 4, !dbg !23118
  %128 = load i32, i32* %z1, align 4, !dbg !23119
  %129 = load i32, i32* %z2, align 4, !dbg !23120
  %130 = load i32, i32* %f1, align 4, !dbg !23121
  %131 = load i32, i32* %f2, align 4, !dbg !23122
  %cmp164 = icmp eq i32 %130, %131, !dbg !23123
  %132 = zext i1 %cmp164 to i64, !dbg !23124
  %cond = select i1 %cmp164, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.229, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.230, i64 0, i64 0), !dbg !23124
  %133 = load i32, i32* %f1, align 4, !dbg !23125
  %134 = load i32, i32* %f2, align 4, !dbg !23126
  %135 = load i32, i32* %Zsize, align 4, !dbg !23127
  %136 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23128
  %137 = load %struct.sk_buff*, %struct.sk_buff** %136, align 8, !dbg !23129
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %137, i32 0, i32 5, !dbg !23130
  %138 = load i32, i32* %len, align 8, !dbg !23130
  %add166 = add i32 %135, %138, !dbg !23131
  %139 = load i32, i32* %again, align 4, !dbg !23132
  %call167 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.228, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_rx, i64 0, i64 0), i32 %add163, i32 %126, i32 %127, i32 %128, i32 %129, i8* %cond, i32 %133, i32 %134, i32 %add166, i32 %139) #13, !dbg !23133
  br label %if.end168, !dbg !23133

if.end168:                                        ; preds = %if.then161, %if.then158
  %140 = load i32, i32* %Zsize, align 4, !dbg !23134
  %141 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23136
  %142 = load %struct.sk_buff*, %struct.sk_buff** %141, align 8, !dbg !23137
  %len169 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %142, i32 0, i32 5, !dbg !23138
  %143 = load i32, i32* %len169, align 8, !dbg !23138
  %add170 = add i32 %140, %143, !dbg !23139
  %144 = load i32, i32* %maxlen, align 4, !dbg !23140
  %cmp171 = icmp ugt i32 %add170, %144, !dbg !23141
  br i1 %cmp171, label %if.then173, label %if.end183, !dbg !23142

if.then173:                                       ; preds = %if.end168
  %145 = load i32, i32* @debug, align 4, !dbg !23143
  %and174 = and i32 %145, 65536, !dbg !23146
  %tobool175 = icmp ne i32 %and174, 0, !dbg !23146
  br i1 %tobool175, label %if.then176, label %if.end180, !dbg !23147

if.then176:                                       ; preds = %if.then173
  %146 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23148
  %id177 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %146, i32 0, i32 2, !dbg !23149
  %147 = load i32, i32* %id177, align 8, !dbg !23149
  %add178 = add i32 %147, 1, !dbg !23150
  %call179 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.231, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_rx, i64 0, i64 0), i32 %add178) #13, !dbg !23151
  br label %if.end180, !dbg !23151

if.end180:                                        ; preds = %if.then176, %if.then173
  %148 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23152
  %149 = load %struct.sk_buff*, %struct.sk_buff** %148, align 8, !dbg !23153
  call void @skb_trim(%struct.sk_buff* %149, i32 0) #12, !dbg !23154
  %150 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23155
  %HFC_outb_nodebug181 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %150, i32 0, i32 11, !dbg !23155
  %151 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug181, align 8, !dbg !23155
  %152 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23155
  call void %151(%struct.hfc_multi* %152, i8 zeroext 14, i8 zeroext 2) #12, !dbg !23155
  %153 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23156
  %HFC_wait_nodebug182 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %153, i32 0, i32 17, !dbg !23156
  %154 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug182, align 8, !dbg !23156
  %155 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23156
  call void %154(%struct.hfc_multi* %155) #12, !dbg !23156
  br label %if.end271, !dbg !23157

if.end183:                                        ; preds = %if.end168
  %156 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23158
  %read_fifo = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %156, i32 0, i32 18, !dbg !23159
  %157 = load void (%struct.hfc_multi*, i8*, i32)*, void (%struct.hfc_multi*, i8*, i32)** %read_fifo, align 8, !dbg !23159
  %158 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23160
  %159 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23161
  %160 = load %struct.sk_buff*, %struct.sk_buff** %159, align 8, !dbg !23162
  %161 = load i32, i32* %Zsize, align 4, !dbg !23163
  %call184 = call i8* @skb_put(%struct.sk_buff* %160, i32 %161) #12, !dbg !23164
  %162 = load i32, i32* %Zsize, align 4, !dbg !23165
  call void %157(%struct.hfc_multi* %158, i8* %call184, i32 %162) #12, !dbg !23158
  %163 = load i32, i32* %f1, align 4, !dbg !23166
  %164 = load i32, i32* %f2, align 4, !dbg !23168
  %cmp185 = icmp ne i32 %163, %164, !dbg !23169
  br i1 %cmp185, label %if.then187, label %if.end257, !dbg !23170

if.then187:                                       ; preds = %if.end183
  %165 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23171
  %HFC_outb_nodebug188 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %165, i32 0, i32 11, !dbg !23171
  %166 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb_nodebug188, align 8, !dbg !23171
  %167 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23171
  call void %166(%struct.hfc_multi* %167, i8 zeroext 14, i8 zeroext 1) #12, !dbg !23171
  %168 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23173
  %HFC_wait_nodebug189 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %168, i32 0, i32 17, !dbg !23173
  %169 = load void (%struct.hfc_multi*)*, void (%struct.hfc_multi*)** %HFC_wait_nodebug189, align 8, !dbg !23173
  %170 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23173
  call void %169(%struct.hfc_multi* %170) #12, !dbg !23173
  %171 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23174
  %172 = load %struct.sk_buff*, %struct.sk_buff** %171, align 8, !dbg !23176
  %len190 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %172, i32 0, i32 5, !dbg !23177
  %173 = load i32, i32* %len190, align 8, !dbg !23177
  %cmp191 = icmp ult i32 %173, 4, !dbg !23178
  br i1 %cmp191, label %if.then193, label %if.end201, !dbg !23179

if.then193:                                       ; preds = %if.then187
  %174 = load i32, i32* @debug, align 4, !dbg !23180
  %and194 = and i32 %174, 65536, !dbg !23183
  %tobool195 = icmp ne i32 %and194, 0, !dbg !23183
  br i1 %tobool195, label %if.then196, label %if.end200, !dbg !23184

if.then196:                                       ; preds = %if.then193
  %175 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23185
  %id197 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %175, i32 0, i32 2, !dbg !23186
  %176 = load i32, i32* %id197, align 8, !dbg !23186
  %add198 = add i32 %176, 1, !dbg !23187
  %call199 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.232, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_rx, i64 0, i64 0), i32 %add198) #13, !dbg !23188
  br label %if.end200, !dbg !23188

if.end200:                                        ; preds = %if.then196, %if.then193
  %177 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23189
  %178 = load %struct.sk_buff*, %struct.sk_buff** %177, align 8, !dbg !23190
  call void @skb_trim(%struct.sk_buff* %178, i32 0) #12, !dbg !23191
  br label %next_frame, !dbg !23192

if.end201:                                        ; preds = %if.then187
  %179 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23193
  %180 = load %struct.sk_buff*, %struct.sk_buff** %179, align 8, !dbg !23195
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %180, i32 0, i32 37, !dbg !23196
  %181 = load i8*, i8** %data, align 8, !dbg !23196
  %182 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23197
  %183 = load %struct.sk_buff*, %struct.sk_buff** %182, align 8, !dbg !23198
  %len202 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %183, i32 0, i32 5, !dbg !23199
  %184 = load i32, i32* %len202, align 8, !dbg !23199
  %sub203 = sub i32 %184, 1, !dbg !23200
  %idxprom204 = zext i32 %sub203 to i64, !dbg !23201
  %arrayidx205 = getelementptr i8, i8* %181, i64 %idxprom204, !dbg !23201
  %185 = load i8, i8* %arrayidx205, align 1, !dbg !23201
  %tobool206 = icmp ne i8 %185, 0, !dbg !23201
  br i1 %tobool206, label %if.then207, label %if.end213, !dbg !23202

if.then207:                                       ; preds = %if.end201
  %186 = load i32, i32* @debug, align 4, !dbg !23203
  %and208 = and i32 %186, 131072, !dbg !23206
  %tobool209 = icmp ne i32 %and208, 0, !dbg !23206
  br i1 %tobool209, label %if.then210, label %if.end212, !dbg !23207

if.then210:                                       ; preds = %if.then207
  %call211 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.233, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_rx, i64 0, i64 0)) #13, !dbg !23208
  br label %if.end212, !dbg !23208

if.end212:                                        ; preds = %if.then210, %if.then207
  %187 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23209
  %188 = load %struct.sk_buff*, %struct.sk_buff** %187, align 8, !dbg !23210
  call void @skb_trim(%struct.sk_buff* %188, i32 0) #12, !dbg !23211
  br label %next_frame, !dbg !23212

if.end213:                                        ; preds = %if.end201
  %189 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23213
  %190 = load %struct.sk_buff*, %struct.sk_buff** %189, align 8, !dbg !23214
  %191 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23215
  %192 = load %struct.sk_buff*, %struct.sk_buff** %191, align 8, !dbg !23216
  %len214 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %192, i32 0, i32 5, !dbg !23217
  %193 = load i32, i32* %len214, align 8, !dbg !23217
  %sub215 = sub i32 %193, 3, !dbg !23218
  call void @skb_trim(%struct.sk_buff* %190, i32 %sub215) #12, !dbg !23219
  %194 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23220
  %195 = load %struct.sk_buff*, %struct.sk_buff** %194, align 8, !dbg !23222
  %len216 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %195, i32 0, i32 5, !dbg !23223
  %196 = load i32, i32* %len216, align 8, !dbg !23223
  %cmp217 = icmp ult i32 %196, 32, !dbg !23224
  br i1 %cmp217, label %if.then219, label %if.else230, !dbg !23225

if.then219:                                       ; preds = %if.end213
  %197 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23226
  %198 = load %struct.sk_buff*, %struct.sk_buff** %197, align 8, !dbg !23228
  store %struct.sk_buff* %198, %struct.sk_buff** %skb, align 8, !dbg !23229
  %199 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23230
  %len220 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %199, i32 0, i32 5, !dbg !23231
  %200 = load i32, i32* %len220, align 8, !dbg !23231
  %call221 = call %struct.sk_buff* @mI_alloc_skb(i32 %200, i32 2592) #12, !dbg !23232
  %201 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23233
  store %struct.sk_buff* %call221, %struct.sk_buff** %201, align 8, !dbg !23234
  %202 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23235
  %203 = load %struct.sk_buff*, %struct.sk_buff** %202, align 8, !dbg !23237
  %tobool222 = icmp ne %struct.sk_buff* %203, null, !dbg !23237
  br i1 %tobool222, label %if.then223, label %if.else227, !dbg !23238

if.then223:                                       ; preds = %if.then219
  %204 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23239
  %205 = load %struct.sk_buff*, %struct.sk_buff** %204, align 8, !dbg !23241
  %206 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23242
  %data224 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %206, i32 0, i32 37, !dbg !23243
  %207 = load i8*, i8** %data224, align 8, !dbg !23243
  %208 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23244
  %len225 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %208, i32 0, i32 5, !dbg !23245
  %209 = load i32, i32* %len225, align 8, !dbg !23245
  %call226 = call i8* @skb_put_data(%struct.sk_buff* %205, i8* %207, i32 %209) #12, !dbg !23246
  %210 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23247
  call void @skb_trim(%struct.sk_buff* %210, i32 0) #12, !dbg !23248
  br label %if.end229, !dbg !23249

if.else227:                                       ; preds = %if.then219
  %call228 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_rx, i64 0, i64 0)) #13, !dbg !23250
  %211 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23252
  %212 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23253
  store %struct.sk_buff* %211, %struct.sk_buff** %212, align 8, !dbg !23254
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !23255
  br label %if.end229

if.end229:                                        ; preds = %if.else227, %if.then223
  br label %if.end231, !dbg !23256

if.else230:                                       ; preds = %if.end213
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !23257
  br label %if.end231

if.end231:                                        ; preds = %if.else230, %if.end229
  %213 = load i32, i32* @debug, align 4, !dbg !23259
  %and232 = and i32 %213, 65536, !dbg !23261
  %tobool233 = icmp ne i32 %and232, 0, !dbg !23261
  br i1 %tobool233, label %if.then234, label %if.end251, !dbg !23262

if.then234:                                       ; preds = %if.end231
  %214 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23263
  %id235 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %214, i32 0, i32 2, !dbg !23265
  %215 = load i32, i32* %id235, align 8, !dbg !23265
  %add236 = add i32 %215, 1, !dbg !23266
  %call237 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.235, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_rx, i64 0, i64 0), i32 %add236) #13, !dbg !23267
  store i32 0, i32* %temp, align 4, !dbg !23268
  br label %while.cond238, !dbg !23269

while.cond238:                                    ; preds = %while.body242, %if.then234
  %216 = load i32, i32* %temp, align 4, !dbg !23270
  %217 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23271
  %218 = load %struct.sk_buff*, %struct.sk_buff** %217, align 8, !dbg !23272
  %len239 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %218, i32 0, i32 5, !dbg !23273
  %219 = load i32, i32* %len239, align 8, !dbg !23273
  %cmp240 = icmp ult i32 %216, %219, !dbg !23274
  br i1 %cmp240, label %while.body242, label %while.end249, !dbg !23269

while.body242:                                    ; preds = %while.cond238
  %220 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23275
  %221 = load %struct.sk_buff*, %struct.sk_buff** %220, align 8, !dbg !23276
  %data243 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %221, i32 0, i32 37, !dbg !23277
  %222 = load i8*, i8** %data243, align 8, !dbg !23277
  %223 = load i32, i32* %temp, align 4, !dbg !23278
  %inc244 = add i32 %223, 1, !dbg !23278
  store i32 %inc244, i32* %temp, align 4, !dbg !23278
  %idxprom245 = sext i32 %223 to i64, !dbg !23279
  %arrayidx246 = getelementptr i8, i8* %222, i64 %idxprom245, !dbg !23279
  %224 = load i8, i8* %arrayidx246, align 1, !dbg !23279
  %conv247 = zext i8 %224 to i32, !dbg !23279
  %call248 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.236, i64 0, i64 0), i32 %conv247) #13, !dbg !23280
  br label %while.cond238, !dbg !23269, !llvm.loop !23281

while.end249:                                     ; preds = %while.cond238
  %call250 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0)) #13, !dbg !23283
  br label %if.end251, !dbg !23284

if.end251:                                        ; preds = %while.end249, %if.end231
  %225 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !23285
  %tobool252 = icmp ne %struct.dchannel* %225, null, !dbg !23285
  br i1 %tobool252, label %if.then253, label %if.else254, !dbg !23287

if.then253:                                       ; preds = %if.end251
  %226 = load %struct.dchannel*, %struct.dchannel** %dch, align 8, !dbg !23288
  call void @recv_Dchannel(%struct.dchannel* %226) #12, !dbg !23289
  br label %if.end255, !dbg !23289

if.else254:                                       ; preds = %if.end251
  %227 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !23290
  call void @recv_Bchannel(%struct.bchannel* %227, i32 65535, i1 zeroext false) #12, !dbg !23291
  br label %if.end255

if.end255:                                        ; preds = %if.else254, %if.then253
  %228 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23292
  %229 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23293
  store %struct.sk_buff* %228, %struct.sk_buff** %229, align 8, !dbg !23294
  %230 = load i32, i32* %again, align 4, !dbg !23295
  %inc256 = add i32 %230, 1, !dbg !23295
  store i32 %inc256, i32* %again, align 4, !dbg !23295
  br label %next_frame, !dbg !23296

if.end257:                                        ; preds = %if.end183
  br label %if.end271, !dbg !23297

if.else258:                                       ; preds = %lor.lhs.false154
  %231 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23298
  %read_fifo259 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %231, i32 0, i32 18, !dbg !23300
  %232 = load void (%struct.hfc_multi*, i8*, i32)*, void (%struct.hfc_multi*, i8*, i32)** %read_fifo259, align 8, !dbg !23300
  %233 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23301
  %234 = load %struct.sk_buff**, %struct.sk_buff*** %sp, align 8, !dbg !23302
  %235 = load %struct.sk_buff*, %struct.sk_buff** %234, align 8, !dbg !23303
  %236 = load i32, i32* %Zsize, align 4, !dbg !23304
  %call260 = call i8* @skb_put(%struct.sk_buff* %235, i32 %236) #12, !dbg !23305
  %237 = load i32, i32* %Zsize, align 4, !dbg !23306
  call void %232(%struct.hfc_multi* %233, i8* %call260, i32 %237) #12, !dbg !23298
  %238 = load i32, i32* @debug, align 4, !dbg !23307
  %and261 = and i32 %238, 65536, !dbg !23309
  %tobool262 = icmp ne i32 %and261, 0, !dbg !23309
  br i1 %tobool262, label %if.then263, label %if.end267, !dbg !23310

if.then263:                                       ; preds = %if.else258
  %239 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23311
  %id264 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %239, i32 0, i32 2, !dbg !23312
  %240 = load i32, i32* %id264, align 8, !dbg !23312
  %add265 = add i32 %240, 1, !dbg !23313
  %241 = load i32, i32* %ch.addr, align 4, !dbg !23314
  %242 = load i32, i32* %Zsize, align 4, !dbg !23315
  %243 = load i32, i32* %z1, align 4, !dbg !23316
  %244 = load i32, i32* %z2, align 4, !dbg !23317
  %call266 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.238, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.hfcmulti_rx, i64 0, i64 0), i32 %add265, i32 %241, i32 %242, i32 %243, i32 %244) #13, !dbg !23318
  br label %if.end267, !dbg !23318

if.end267:                                        ; preds = %if.then263, %if.else258
  %245 = load %struct.bchannel*, %struct.bchannel** %bch, align 8, !dbg !23319
  %246 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23320
  %chan268 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %246, i32 0, i32 60, !dbg !23321
  %247 = load i32, i32* %ch.addr, align 4, !dbg !23322
  %idxprom269 = sext i32 %247 to i64, !dbg !23320
  %arrayidx270 = getelementptr [32 x %struct.hfc_chan], [32 x %struct.hfc_chan]* %chan268, i64 0, i64 %idxprom269, !dbg !23320
  %Zfill = getelementptr inbounds %struct.hfc_chan, %struct.hfc_chan* %arrayidx270, i32 0, i32 19, !dbg !23323
  %248 = load i32, i32* %Zfill, align 8, !dbg !23323
  call void @recv_Bchannel(%struct.bchannel* %245, i32 %248, i1 zeroext false) #12, !dbg !23324
  br label %if.end271

if.end271:                                        ; preds = %if.then2, %if.then15, %if.else17, %if.end49, %if.then114, %if.then121, %if.then138, %if.end180, %if.end267, %if.end257
  ret void, !dbg !23325
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @signal_state_up(%struct.dchannel* %dch, i32 %info, i8* %msg) #2 !dbg !23326 {
entry:
  %dch.addr = alloca %struct.dchannel*, align 8
  %info.addr = alloca i32, align 4
  %msg.addr = alloca i8*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %id = alloca i32, align 4
  %data = alloca i32, align 4
  store %struct.dchannel* %dch, %struct.dchannel** %dch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dchannel** %dch.addr, metadata !23329, metadata !DIExpression()), !dbg !23330
  store i32 %info, i32* %info.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %info.addr, metadata !23331, metadata !DIExpression()), !dbg !23332
  store i8* %msg, i8** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !23333, metadata !DIExpression()), !dbg !23334
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !23335, metadata !DIExpression()), !dbg !23336
  call void @llvm.dbg.declare(metadata i32* %id, metadata !23337, metadata !DIExpression()), !dbg !23338
  call void @llvm.dbg.declare(metadata i32* %data, metadata !23339, metadata !DIExpression()), !dbg !23340
  %0 = load i32, i32* %info.addr, align 4, !dbg !23341
  store i32 %0, i32* %data, align 4, !dbg !23340
  %1 = load i32, i32* @debug, align 4, !dbg !23342
  %and = and i32 %1, 4194304, !dbg !23344
  %tobool = icmp ne i32 %and, 0, !dbg !23344
  br i1 %tobool, label %if.then, label %if.end, !dbg !23345

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %msg.addr, align 8, !dbg !23346
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.239, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.signal_state_up, i64 0, i64 0), i8* %2) #13, !dbg !23347
  br label %if.end, !dbg !23347

if.end:                                           ; preds = %if.then, %entry
  store i32 32575, i32* %id, align 4, !dbg !23348
  %3 = load i32, i32* %id, align 4, !dbg !23349
  %4 = bitcast i32* %data to i8*, !dbg !23350
  %call1 = call %struct.sk_buff* @_alloc_mISDN_skb(i32 1794, i32 %3, i32 4, i8* %4, i32 2592) #12, !dbg !23351
  store %struct.sk_buff* %call1, %struct.sk_buff** %skb, align 8, !dbg !23352
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23353
  %tobool2 = icmp ne %struct.sk_buff* %5, null, !dbg !23353
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !23355

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !23356

if.end4:                                          ; preds = %if.end
  %6 = load %struct.dchannel*, %struct.dchannel** %dch.addr, align 8, !dbg !23357
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !23358
  call void @recv_Dchannel_skb(%struct.dchannel* %6, %struct.sk_buff* %7) #12, !dbg !23359
  br label %return, !dbg !23360

return:                                           ; preds = %if.end4, %if.then3
  ret void, !dbg !23360
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hfcmulti_watchdog(%struct.hfc_multi* %hc) #2 !dbg !23361 {
entry:
  %hc.addr = alloca %struct.hfc_multi*, align 8
  store %struct.hfc_multi* %hc, %struct.hfc_multi** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %hc.addr, metadata !23362, metadata !DIExpression()), !dbg !23363
  %0 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23364
  %wdcount = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %0, i32 0, i32 51, !dbg !23365
  %1 = load i64, i64* %wdcount, align 8, !dbg !23366
  %inc = add i64 %1, 1, !dbg !23366
  store i64 %inc, i64* %wdcount, align 8, !dbg !23366
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23367
  %wdcount1 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %2, i32 0, i32 51, !dbg !23369
  %3 = load i64, i64* %wdcount1, align 8, !dbg !23369
  %cmp = icmp ugt i64 %3, 10, !dbg !23370
  br i1 %cmp, label %if.then, label %if.end, !dbg !23371

if.then:                                          ; preds = %entry
  %4 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23372
  %wdcount2 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %4, i32 0, i32 51, !dbg !23374
  store i64 0, i64* %wdcount2, align 8, !dbg !23375
  %5 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23376
  %wdbyte = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %5, i32 0, i32 52, !dbg !23377
  %6 = load i8, i8* %wdbyte, align 8, !dbg !23377
  %conv = zext i8 %6 to i32, !dbg !23376
  %cmp3 = icmp eq i32 %conv, 4, !dbg !23378
  %7 = zext i1 %cmp3 to i64, !dbg !23376
  %cond = select i1 %cmp3, i32 8, i32 4, !dbg !23376
  %conv5 = trunc i32 %cond to i8, !dbg !23376
  %8 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23379
  %wdbyte6 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %8, i32 0, i32 52, !dbg !23380
  store i8 %conv5, i8* %wdbyte6, align 8, !dbg !23381
  %9 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23382
  %HFC_outb = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %9, i32 0, i32 10, !dbg !23382
  %10 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb, align 8, !dbg !23382
  %11 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23382
  call void %10(%struct.hfc_multi* %11, i8 zeroext 66, i8 zeroext 12) #12, !dbg !23382
  %12 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23383
  %HFC_outb7 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %12, i32 0, i32 10, !dbg !23383
  %13 = load void (%struct.hfc_multi*, i8, i8)*, void (%struct.hfc_multi*, i8, i8)** %HFC_outb7, align 8, !dbg !23383
  %14 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23383
  %15 = load %struct.hfc_multi*, %struct.hfc_multi** %hc.addr, align 8, !dbg !23383
  %wdbyte8 = getelementptr inbounds %struct.hfc_multi, %struct.hfc_multi* %15, i32 0, i32 52, !dbg !23383
  %16 = load i8, i8* %wdbyte8, align 8, !dbg !23383
  call void %13(%struct.hfc_multi* %14, i8 zeroext 64, i8 zeroext %16) #12, !dbg !23383
  br label %if.end, !dbg !23384

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !23385
}

; Function Attrs: noredzone
declare dso_local i32 @bchannel_get_rxbuf(%struct.bchannel*, i32) #3

; Function Attrs: noredzone
declare dso_local void @skb_trim(%struct.sk_buff*, i32) #3

; Function Attrs: noredzone
declare dso_local void @recv_Dchannel(%struct.dchannel*) #3

; Function Attrs: noredzone
declare dso_local void @recv_Bchannel(%struct.bchannel*, i32, i1 zeroext) #3

; Function Attrs: noredzone
declare dso_local void @recv_Dchannel_skb(%struct.dchannel*, %struct.sk_buff*) #3

; Function Attrs: noredzone
declare dso_local void @recv_Bchannel_skb(%struct.bchannel*, %struct.sk_buff*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vpm_init(%struct.hfc_multi* %wc) #2 !dbg !23386 {
entry:
  %wc.addr = alloca %struct.hfc_multi*, align 8
  %reg = alloca i8, align 1
  %mask = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %ver = alloca i32, align 4
  store %struct.hfc_multi* %wc, %struct.hfc_multi** %wc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hfc_multi** %wc.addr, metadata !23387, metadata !DIExpression()), !dbg !23388
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !23389, metadata !DIExpression()), !dbg !23390
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !23391, metadata !DIExpression()), !dbg !23392
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23393, metadata !DIExpression()), !dbg !23394
  call void @llvm.dbg.declare(metadata i32* %x, metadata !23395, metadata !DIExpression()), !dbg !23396
  call void @llvm.dbg.declare(metadata i32* %y, metadata !23397, metadata !DIExpression()), !dbg !23398
  call void @llvm.dbg.declare(metadata i32* %ver, metadata !23399, metadata !DIExpression()), !dbg !23400
  store i32 0, i32* %x, align 4, !dbg !23401
  br label %for.cond, !dbg !23403

for.cond:                                         ; preds = %for.inc72, %entry
  %0 = load i32, i32* %x, align 4, !dbg !23404
  %cmp = icmp ult i32 %0, 2, !dbg !23406
  br i1 %cmp, label %for.body, label %for.end74, !dbg !23407

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %x, align 4, !dbg !23408
  %tobool = icmp ne i32 %1, 0, !dbg !23408
  br i1 %tobool, label %if.end, label %if.then, !dbg !23411

if.then:                                          ; preds = %for.body
  %2 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23412
  %3 = load i32, i32* %x, align 4, !dbg !23414
  %call = call zeroext i8 @vpm_in(%struct.hfc_multi* %2, i32 %3, i16 zeroext 416) #12, !dbg !23415
  %conv = zext i8 %call to i32, !dbg !23415
  store i32 %conv, i32* %ver, align 4, !dbg !23416
  %4 = load i32, i32* %x, align 4, !dbg !23417
  %5 = load i32, i32* %ver, align 4, !dbg !23418
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.283, i64 0, i64 0), i32 %4, i32 %5) #13, !dbg !23419
  br label %if.end, !dbg !23420

if.end:                                           ; preds = %if.then, %for.body
  store i32 0, i32* %y, align 4, !dbg !23421
  br label %for.cond2, !dbg !23423

for.cond2:                                        ; preds = %for.inc, %if.end
  %6 = load i32, i32* %y, align 4, !dbg !23424
  %cmp3 = icmp ult i32 %6, 4, !dbg !23426
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !23427

for.body5:                                        ; preds = %for.cond2
  %7 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23428
  %8 = load i32, i32* %x, align 4, !dbg !23430
  %9 = load i32, i32* %y, align 4, !dbg !23431
  %add = add i32 424, %9, !dbg !23432
  %conv6 = trunc i32 %add to i16, !dbg !23433
  call void @vpm_out(%struct.hfc_multi* %7, i32 %8, i16 zeroext %conv6, i8 zeroext 0) #12, !dbg !23434
  %10 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23435
  %11 = load i32, i32* %x, align 4, !dbg !23436
  %12 = load i32, i32* %y, align 4, !dbg !23437
  %add7 = add i32 428, %12, !dbg !23438
  %conv8 = trunc i32 %add7 to i16, !dbg !23439
  call void @vpm_out(%struct.hfc_multi* %10, i32 %11, i16 zeroext %conv8, i8 zeroext 0) #12, !dbg !23440
  %13 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23441
  %14 = load i32, i32* %x, align 4, !dbg !23442
  %15 = load i32, i32* %y, align 4, !dbg !23443
  %add9 = add i32 432, %15, !dbg !23444
  %conv10 = trunc i32 %add9 to i16, !dbg !23445
  call void @vpm_out(%struct.hfc_multi* %13, i32 %14, i16 zeroext %conv10, i8 zeroext 0) #12, !dbg !23446
  br label %for.inc, !dbg !23447

for.inc:                                          ; preds = %for.body5
  %16 = load i32, i32* %y, align 4, !dbg !23448
  %inc = add i32 %16, 1, !dbg !23448
  store i32 %inc, i32* %y, align 4, !dbg !23448
  br label %for.cond2, !dbg !23449, !llvm.loop !23450

for.end:                                          ; preds = %for.cond2
  %17 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23452
  %18 = load i32, i32* %x, align 4, !dbg !23453
  %call11 = call zeroext i8 @vpm_in(%struct.hfc_multi* %17, i32 %18, i16 zeroext 419) #12, !dbg !23454
  store i8 %call11, i8* %reg, align 1, !dbg !23455
  %19 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23456
  %20 = load i32, i32* %x, align 4, !dbg !23457
  %21 = load i8, i8* %reg, align 1, !dbg !23458
  %conv12 = zext i8 %21 to i32, !dbg !23458
  %and = and i32 %conv12, -3, !dbg !23459
  %conv13 = trunc i32 %and to i8, !dbg !23458
  call void @vpm_out(%struct.hfc_multi* %19, i32 %20, i16 zeroext 419, i8 zeroext %conv13) #12, !dbg !23460
  %22 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23461
  %23 = load i32, i32* %x, align 4, !dbg !23462
  call void @vpm_out(%struct.hfc_multi* %22, i32 %23, i16 zeroext 34, i8 zeroext 1) #12, !dbg !23463
  %24 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23464
  %25 = load i32, i32* %x, align 4, !dbg !23465
  call void @vpm_out(%struct.hfc_multi* %24, i32 %25, i16 zeroext 35, i8 zeroext -1) #12, !dbg !23466
  %26 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23467
  %27 = load i32, i32* %x, align 4, !dbg !23468
  call void @vpm_out(%struct.hfc_multi* %26, i32 %27, i16 zeroext 47, i8 zeroext 0) #12, !dbg !23469
  %28 = load i32, i32* %x, align 4, !dbg !23470
  %mul = mul i32 %28, 4, !dbg !23471
  %shl = shl i32 33686018, %mul, !dbg !23472
  store i32 %shl, i32* %mask, align 4, !dbg !23473
  store i32 0, i32* %i, align 4, !dbg !23474
  br label %for.cond14, !dbg !23476

for.cond14:                                       ; preds = %for.inc22, %for.end
  %29 = load i32, i32* %i, align 4, !dbg !23477
  %cmp15 = icmp ult i32 %29, 4, !dbg !23479
  br i1 %cmp15, label %for.body17, label %for.end24, !dbg !23480

for.body17:                                       ; preds = %for.cond14
  %30 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23481
  %31 = load i32, i32* %x, align 4, !dbg !23482
  %32 = load i32, i32* %i, align 4, !dbg !23483
  %sub = sub i32 51, %32, !dbg !23484
  %conv18 = trunc i32 %sub to i16, !dbg !23485
  %33 = load i32, i32* %mask, align 4, !dbg !23486
  %34 = load i32, i32* %i, align 4, !dbg !23487
  %shl19 = shl i32 %34, 3, !dbg !23488
  %shr = lshr i32 %33, %shl19, !dbg !23489
  %and20 = and i32 %shr, 255, !dbg !23490
  %conv21 = trunc i32 %and20 to i8, !dbg !23491
  call void @vpm_out(%struct.hfc_multi* %30, i32 %31, i16 zeroext %conv18, i8 zeroext %conv21) #12, !dbg !23492
  br label %for.inc22, !dbg !23492

for.inc22:                                        ; preds = %for.body17
  %35 = load i32, i32* %i, align 4, !dbg !23493
  %inc23 = add i32 %35, 1, !dbg !23493
  store i32 %inc23, i32* %i, align 4, !dbg !23493
  br label %for.cond14, !dbg !23494, !llvm.loop !23495

for.end24:                                        ; preds = %for.cond14
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.284, i64 0, i64 0)) #13, !dbg !23497
  store i8 17, i8* %reg, align 1, !dbg !23498
  %36 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23499
  %37 = load i32, i32* %x, align 4, !dbg !23500
  %38 = load i8, i8* %reg, align 1, !dbg !23501
  call void @vpm_out(%struct.hfc_multi* %36, i32 %37, i16 zeroext 32, i8 zeroext %38) #12, !dbg !23502
  %39 = load i8, i8* %reg, align 1, !dbg !23503
  %conv26 = zext i8 %39 to i32, !dbg !23503
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.285, i64 0, i64 0), i32 %conv26) #13, !dbg !23504
  %40 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23505
  %41 = load i32, i32* %x, align 4, !dbg !23506
  call void @vpm_out(%struct.hfc_multi* %40, i32 %41, i16 zeroext 36, i8 zeroext 2) #12, !dbg !23507
  %42 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23508
  %43 = load i32, i32* %x, align 4, !dbg !23509
  %call28 = call zeroext i8 @vpm_in(%struct.hfc_multi* %42, i32 %43, i16 zeroext 36) #12, !dbg !23510
  store i8 %call28, i8* %reg, align 1, !dbg !23511
  %44 = load i8, i8* %reg, align 1, !dbg !23512
  %conv29 = zext i8 %44 to i32, !dbg !23512
  %45 = load i8, i8* %reg, align 1, !dbg !23513
  %conv30 = zext i8 %45 to i32, !dbg !23513
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.286, i64 0, i64 0), i32 %conv29, i32 %conv30) #13, !dbg !23514
  store i32 0, i32* %i, align 4, !dbg !23515
  br label %for.cond32, !dbg !23517

for.cond32:                                       ; preds = %for.inc42, %for.end24
  %46 = load i32, i32* %i, align 4, !dbg !23518
  %cmp33 = icmp ult i32 %46, 32, !dbg !23520
  br i1 %cmp33, label %for.body35, label %for.end44, !dbg !23521

for.body35:                                       ; preds = %for.cond32
  %47 = load i32, i32* %mask, align 4, !dbg !23522
  %48 = load i32, i32* %i, align 4, !dbg !23525
  %shl36 = shl i32 1, %48, !dbg !23526
  %and37 = and i32 %47, %shl36, !dbg !23527
  %tobool38 = icmp ne i32 %and37, 0, !dbg !23527
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !23528

if.then39:                                        ; preds = %for.body35
  %49 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23529
  %50 = load i32, i32* %x, align 4, !dbg !23530
  %51 = load i32, i32* %i, align 4, !dbg !23531
  %conv40 = trunc i32 %51 to i16, !dbg !23531
  call void @vpm_out(%struct.hfc_multi* %49, i32 %50, i16 zeroext %conv40, i8 zeroext 0) #12, !dbg !23532
  br label %if.end41, !dbg !23532

if.end41:                                         ; preds = %if.then39, %for.body35
  br label %for.inc42, !dbg !23533

for.inc42:                                        ; preds = %if.end41
  %52 = load i32, i32* %i, align 4, !dbg !23534
  %inc43 = add i32 %52, 1, !dbg !23534
  store i32 %inc43, i32* %i, align 4, !dbg !23534
  br label %for.cond32, !dbg !23535, !llvm.loop !23536

for.end44:                                        ; preds = %for.cond32
  call void @__const_udelay(i64 8590000) #12, !dbg !23538
  call void @__const_udelay(i64 8590000) #12, !dbg !23543
  call void @__const_udelay(i64 8590000) #12, !dbg !23548
  call void @__const_udelay(i64 8590000) #12, !dbg !23553
  call void @__const_udelay(i64 8590000) #12, !dbg !23558
  store i32 0, i32* %i, align 4, !dbg !23563
  br label %for.cond45, !dbg !23565

for.cond45:                                       ; preds = %for.inc55, %for.end44
  %53 = load i32, i32* %i, align 4, !dbg !23566
  %cmp46 = icmp ult i32 %53, 32, !dbg !23568
  br i1 %cmp46, label %for.body48, label %for.end57, !dbg !23569

for.body48:                                       ; preds = %for.cond45
  %54 = load i32, i32* %mask, align 4, !dbg !23570
  %55 = load i32, i32* %i, align 4, !dbg !23573
  %shl49 = shl i32 1, %55, !dbg !23574
  %and50 = and i32 %54, %shl49, !dbg !23575
  %tobool51 = icmp ne i32 %and50, 0, !dbg !23575
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !23576

if.then52:                                        ; preds = %for.body48
  %56 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23577
  %57 = load i32, i32* %x, align 4, !dbg !23578
  %58 = load i32, i32* %i, align 4, !dbg !23579
  %conv53 = trunc i32 %58 to i16, !dbg !23579
  call void @vpm_out(%struct.hfc_multi* %56, i32 %57, i16 zeroext %conv53, i8 zeroext 1) #12, !dbg !23580
  br label %if.end54, !dbg !23580

if.end54:                                         ; preds = %if.then52, %for.body48
  br label %for.inc55, !dbg !23581

for.inc55:                                        ; preds = %if.end54
  %59 = load i32, i32* %i, align 4, !dbg !23582
  %inc56 = add i32 %59, 1, !dbg !23582
  store i32 %inc56, i32* %i, align 4, !dbg !23582
  br label %for.cond45, !dbg !23583, !llvm.loop !23584

for.end57:                                        ; preds = %for.cond45
  store i32 0, i32* %i, align 4, !dbg !23586
  br label %for.cond58, !dbg !23588

for.cond58:                                       ; preds = %for.inc69, %for.end57
  %60 = load i32, i32* %i, align 4, !dbg !23589
  %cmp59 = icmp ult i32 %60, 32, !dbg !23591
  br i1 %cmp59, label %for.body61, label %for.end71, !dbg !23592

for.body61:                                       ; preds = %for.cond58
  %61 = load i32, i32* %mask, align 4, !dbg !23593
  %62 = load i32, i32* %i, align 4, !dbg !23596
  %shl62 = shl i32 1, %62, !dbg !23597
  %and63 = and i32 %61, %shl62, !dbg !23598
  %tobool64 = icmp ne i32 %and63, 0, !dbg !23598
  br i1 %tobool64, label %if.then65, label %if.end68, !dbg !23599

if.then65:                                        ; preds = %for.body61
  %63 = load %struct.hfc_multi*, %struct.hfc_multi** %wc.addr, align 8, !dbg !23600
  %64 = load i32, i32* %x, align 4, !dbg !23601
  %65 = load i32, i32* %i, align 4, !dbg !23602
  %add66 = add i32 120, %65, !dbg !23603
  %conv67 = trunc i32 %add66 to i16, !dbg !23604
  call void @vpm_out(%struct.hfc_multi* %63, i32 %64, i16 zeroext %conv67, i8 zeroext 1) #12, !dbg !23605
  br label %if.end68, !dbg !23605

if.end68:                                         ; preds = %if.then65, %for.body61
  br label %for.inc69, !dbg !23606

for.inc69:                                        ; preds = %if.end68
  %66 = load i32, i32* %i, align 4, !dbg !23607
  %inc70 = add i32 %66, 1, !dbg !23607
  store i32 %inc70, i32* %i, align 4, !dbg !23607
  br label %for.cond58, !dbg !23608, !llvm.loop !23609

for.end71:                                        ; preds = %for.cond58
  br label %for.inc72, !dbg !23611

for.inc72:                                        ; preds = %for.end71
  %67 = load i32, i32* %x, align 4, !dbg !23612
  %inc73 = add i32 %67, 1, !dbg !23612
  store i32 %inc73, i32* %x, align 4, !dbg !23612
  br label %for.cond, !dbg !23613, !llvm.loop !23614

for.end74:                                        ; preds = %for.cond
  ret void, !dbg !23616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #2 !dbg !23617 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !23620, metadata !DIExpression()), !dbg !23621
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !23622
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !23623
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !23624
  ret i8* %call, !dbg !23625
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !23626 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !23629, metadata !DIExpression()), !dbg !23630
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23631
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !23632
  %1 = load i8*, i8** %driver_data, align 8, !dbg !23632
  ret i8* %1, !dbg !23633
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #3

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!10006}
!llvm.module.flags = !{!10007, !10008, !10009, !10010}
!llvm.ident = !{!10011}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author508", scope: !2, file: !3, line: 223, type: !10003, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !9127, globals: !9704, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/isdn/hardware/mISDN/hfcmulti.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !29, !35, !42, !62, !69, !103, !144, !175, !182, !213, !226, !234, !240, !247, !251, !255, !262, !268, !8916, !4254, !4334, !4410, !4418, !3926, !7094, !4727, !4919, !5012, !5206, !6803, !6109, !6000, !6019, !9078, !9083, !9090, !9096}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !19, line: 546, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !25, line: 65, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28}
!27 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !30, line: 16, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !36, line: 115, baseType: !37, size: 32, elements: !38)
!36 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!37 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!38 = !{!39, !40, !41}
!39 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!40 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!41 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !36, line: 836, baseType: !7, size: 32, elements: !43)
!43 = !{!44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61}
!44 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!57 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!58 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!59 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!60 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !36, line: 860, baseType: !7, size: 32, elements: !63)
!63 = !{!64, !65, !66, !67, !68}
!64 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!68 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !70, line: 170, baseType: !7, size: 32, elements: !71)
!70 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!72 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!76 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!78 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!79 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!80 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!81 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!82 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!83 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!84 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!85 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!86 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!87 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!88 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!89 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!90 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!91 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!92 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!93 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!94 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!95 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!96 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!97 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !70, line: 204, baseType: !7, size: 32, elements: !104)
!104 = !{!105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143}
!105 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!129 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!130 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!131 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!143 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !145, line: 369, baseType: !7, size: 32, elements: !146)
!145 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!146 = !{!147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!147 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!148 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!149 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!150 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!151 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!153 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!154 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!155 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!156 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!157 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!158 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!159 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!160 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!161 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!162 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!163 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!164 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!165 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!166 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!167 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!168 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!169 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!170 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!171 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!172 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!173 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!174 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !145, line: 578, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181}
!177 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !70, line: 130, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212}
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!208 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!209 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!210 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!211 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!212 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !214, line: 585, baseType: !7, size: 32, elements: !215)
!214 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224, !225}
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!221 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!222 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !214, line: 602, baseType: !7, size: 32, elements: !227)
!227 = !{!228, !229, !230, !231, !232, !233}
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!230 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!234 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !214, line: 615, baseType: !7, size: 32, elements: !235)
!235 = !{!236, !237, !238, !239}
!236 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !214, line: 626, baseType: !7, size: 32, elements: !241)
!241 = !{!242, !243, !244, !245, !246}
!242 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!243 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!246 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !214, line: 638, baseType: !7, size: 32, elements: !248)
!248 = !{!249, !250}
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!250 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !214, line: 647, baseType: !7, size: 32, elements: !252)
!252 = !{!253, !254}
!253 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!255 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !256, line: 54, baseType: !7, size: 32, elements: !257)
!256 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!257 = !{!258, !259, !260, !261}
!258 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!259 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!260 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!261 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!262 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !36, line: 423, baseType: !7, size: 32, elements: !263)
!263 = !{!264, !265, !266, !267}
!264 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!265 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!266 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!267 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!268 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !269, file: !36, line: 2085, baseType: !7, size: 32, elements: !9071)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !36, line: 1858, size: 15808, elements: !270)
!270 = !{!271, !276, !299, !316, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !333, !341, !342, !343, !344, !345, !346, !347, !348, !349, !375, !385, !386, !387, !392, !393, !397, !400, !7857, !8372, !8376, !8408, !8409, !8410, !8411, !8412, !8413, !8414, !8415, !8416, !8417, !8418, !8419, !8420, !8421, !8422, !8423, !8424, !8425, !8426, !8427, !8428, !8429, !8430, !8431, !8432, !8433, !8434, !8439, !8440, !8441, !8442, !8443, !8444, !8445, !8448, !8451, !8454, !8457, !8460, !8461, !8474, !8475, !8476, !8477, !8478, !8479, !8486, !8487, !8896, !8897, !8898, !8899, !8900, !8901, !8902, !8903, !8904, !8907, !8908, !8909, !8910, !8911, !8912, !8913, !8914, !8915, !8920, !8921, !8922, !8923, !8960, !8961, !8963, !8964, !9033, !9034, !9035, !9036, !9042, !9044, !9047, !9050, !9052, !9053, !9054, !9055, !9056, !9060, !9063}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !269, file: !36, line: 1859, baseType: !272, size: 128)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 128, elements: !274)
!273 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!274 = !{!275}
!275 = !DISubrange(count: 16)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !269, file: !36, line: 1860, baseType: !277, size: 64, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !36, line: 938, size: 384, elements: !279)
!279 = !{!280, !288, !294, !296}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !278, file: !36, line: 939, baseType: !281, size: 128)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !282, line: 186, size: 128, elements: !283)
!282 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!283 = !{!284, !286}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !281, file: !282, line: 187, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !281, file: !282, line: 187, baseType: !287, size: 64, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !278, file: !36, line: 940, baseType: !289, size: 128, offset: 128)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !282, line: 178, size: 128, elements: !290)
!290 = !{!291, !293}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !289, file: !282, line: 179, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !289, file: !282, line: 179, baseType: !292, size: 64, offset: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !278, file: !36, line: 941, baseType: !295, size: 64, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !278, file: !36, line: 942, baseType: !297, size: 64, offset: 320)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !269, file: !36, line: 1861, baseType: !300, size: 64, offset: 192)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !36, line: 930, size: 128, elements: !302)
!302 = !{!303, !312}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !301, file: !36, line: 931, baseType: !304, size: 128, align: 64)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !282, line: 216, size: 128, align: 64, elements: !305)
!305 = !{!306, !308}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !304, file: !282, line: 217, baseType: !307, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !304, file: !282, line: 218, baseType: !309, size: 64, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !307}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !301, file: !36, line: 932, baseType: !313, offset: 128)
!313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, elements: !314)
!314 = !{!315}
!315 = !DISubrange(count: -1)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !269, file: !36, line: 1866, baseType: !317, size: 64, offset: 256)
!317 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !269, file: !36, line: 1867, baseType: !317, size: 64, offset: 320)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !269, file: !36, line: 1868, baseType: !317, size: 64, offset: 384)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !269, file: !36, line: 1869, baseType: !37, size: 32, offset: 448)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !269, file: !36, line: 1877, baseType: !317, size: 64, offset: 512)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !269, file: !36, line: 1879, baseType: !289, size: 128, offset: 576)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !269, file: !36, line: 1880, baseType: !289, size: 128, offset: 704)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !269, file: !36, line: 1881, baseType: !289, size: 128, offset: 832)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !269, file: !36, line: 1882, baseType: !289, size: 128, offset: 960)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !269, file: !36, line: 1883, baseType: !289, size: 128, offset: 1088)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !269, file: !36, line: 1884, baseType: !289, size: 128, offset: 1216)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !269, file: !36, line: 1889, baseType: !329, size: 256, offset: 1344)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !269, file: !36, line: 1886, size: 256, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !329, file: !36, line: 1887, baseType: !289, size: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !329, file: !36, line: 1888, baseType: !289, size: 128, offset: 128)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !269, file: !36, line: 1891, baseType: !334, size: 64, offset: 1600)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !335, line: 12, baseType: !336)
!335 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !337, line: 23, baseType: !338)
!337 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !339, line: 31, baseType: !340)
!339 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!340 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !269, file: !36, line: 1892, baseType: !334, size: 64, offset: 1664)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !269, file: !36, line: 1893, baseType: !334, size: 64, offset: 1728)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !269, file: !36, line: 1894, baseType: !334, size: 64, offset: 1792)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !269, file: !36, line: 1895, baseType: !334, size: 64, offset: 1856)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !269, file: !36, line: 1896, baseType: !334, size: 64, offset: 1920)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !269, file: !36, line: 1897, baseType: !334, size: 64, offset: 1984)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !269, file: !36, line: 1899, baseType: !37, size: 32, offset: 2048)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !269, file: !36, line: 1900, baseType: !37, size: 32, offset: 2080)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !269, file: !36, line: 1902, baseType: !350, size: 1472, offset: 2112)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !36, line: 169, size: 1472, elements: !351)
!351 = !{!352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !350, file: !36, line: 170, baseType: !317, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !350, file: !36, line: 171, baseType: !317, size: 64, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !350, file: !36, line: 172, baseType: !317, size: 64, offset: 128)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !350, file: !36, line: 173, baseType: !317, size: 64, offset: 192)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !350, file: !36, line: 174, baseType: !317, size: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !350, file: !36, line: 175, baseType: !317, size: 64, offset: 320)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !350, file: !36, line: 176, baseType: !317, size: 64, offset: 384)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !350, file: !36, line: 177, baseType: !317, size: 64, offset: 448)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !350, file: !36, line: 178, baseType: !317, size: 64, offset: 512)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !350, file: !36, line: 179, baseType: !317, size: 64, offset: 576)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !350, file: !36, line: 180, baseType: !317, size: 64, offset: 640)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !350, file: !36, line: 181, baseType: !317, size: 64, offset: 704)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !350, file: !36, line: 182, baseType: !317, size: 64, offset: 768)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !350, file: !36, line: 183, baseType: !317, size: 64, offset: 832)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !350, file: !36, line: 184, baseType: !317, size: 64, offset: 896)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !350, file: !36, line: 185, baseType: !317, size: 64, offset: 960)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !350, file: !36, line: 186, baseType: !317, size: 64, offset: 1024)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !350, file: !36, line: 187, baseType: !317, size: 64, offset: 1088)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !350, file: !36, line: 188, baseType: !317, size: 64, offset: 1152)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !350, file: !36, line: 189, baseType: !317, size: 64, offset: 1216)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !350, file: !36, line: 190, baseType: !317, size: 64, offset: 1280)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !350, file: !36, line: 191, baseType: !317, size: 64, offset: 1344)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !350, file: !36, line: 192, baseType: !317, size: 64, offset: 1408)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !269, file: !36, line: 1904, baseType: !376, size: 64, offset: 3584)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !377, line: 13, baseType: !378)
!377 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !282, line: 175, baseType: !379)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !282, line: 173, size: 64, elements: !380)
!380 = !{!381}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !379, file: !282, line: 174, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !337, line: 22, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !339, line: 30, baseType: !384)
!384 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !269, file: !36, line: 1905, baseType: !376, size: 64, offset: 3648)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !269, file: !36, line: 1906, baseType: !376, size: 64, offset: 3712)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !269, file: !36, line: 1909, baseType: !388, size: 32, offset: 3776)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !282, line: 168, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !282, line: 166, size: 32, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !389, file: !282, line: 167, baseType: !37, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !269, file: !36, line: 1910, baseType: !388, size: 32, offset: 3808)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !269, file: !36, line: 1913, baseType: !394, size: 64, offset: 3840)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !36, line: 1913, flags: DIFlagFwdDecl)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !269, file: !36, line: 1914, baseType: !398, size: 64, offset: 3904)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !36, line: 1914, flags: DIFlagFwdDecl)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !269, file: !36, line: 1916, baseType: !401, size: 64, offset: 3968)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !403)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !36, line: 1283, size: 4416, elements: !404)
!404 = !{!405, !409, !413, !414, !415, !7330, !7334, !7338, !7342, !7343, !7347, !7348, !7459, !7464, !7468, !7472, !7476, !7508, !7512, !7516, !7521, !7525, !7526, !7531, !7535, !7539, !7543, !7544, !7564, !7568, !7583, !7589, !7593, !7602, !7606, !7607, !7611, !7615, !7619, !7623, !7627, !7631, !7635, !7639, !7654, !7658, !7700, !7704, !7709, !7713, !7717, !7721, !7730, !7731, !7735, !7741, !7742, !7746, !7750, !7754, !7758, !7759, !7763, !7764, !7817, !7837, !7841, !7847, !7853}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !403, file: !36, line: 1284, baseType: !406, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DISubroutineType(types: !408)
!408 = !{!37, !295}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !403, file: !36, line: 1285, baseType: !410, size: 64, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{null, !295}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !403, file: !36, line: 1286, baseType: !406, size: 64, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !403, file: !36, line: 1287, baseType: !406, size: 64, offset: 192)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !403, file: !36, line: 1288, baseType: !416, size: 64, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{!419, !420, !295}
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !36, line: 120, baseType: !35)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !422, line: 713, size: 1600, elements: !423)
!422 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!423 = !{!424, !446, !7225, !7230, !7234, !7243, !7244, !7245, !7246, !7247, !7248, !7250, !7251, !7252, !7253, !7254, !7255, !7256, !7258, !7259, !7260, !7261, !7262, !7263, !7264, !7265, !7266, !7267, !7268, !7269, !7270, !7271, !7272, !7273, !7274, !7275, !7276, !7277, !7278, !7279, !7280, !7281, !7282, !7283, !7284, !7294, !7295, !7296, !7297, !7298, !7299, !7304, !7309, !7314, !7315, !7316, !7317, !7318, !7319, !7320, !7321, !7322, !7324, !7325, !7327, !7328, !7329}
!424 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 714, baseType: !425, size: 192)
!425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 714, size: 192, elements: !426)
!426 = !{!427, !437, !445}
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !425, file: !422, line: 715, baseType: !428, size: 192)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !425, file: !422, line: 715, size: 192, elements: !429)
!429 = !{!430, !431, !432}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !428, file: !422, line: 717, baseType: !420, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !428, file: !422, line: 718, baseType: !420, size: 64, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, scope: !428, file: !422, line: 720, baseType: !433, size: 64, offset: 128)
!433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !422, line: 720, size: 64, elements: !434)
!434 = !{!435, !436}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !422, line: 721, baseType: !295, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !433, file: !422, line: 726, baseType: !317, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !425, file: !422, line: 729, baseType: !438, size: 192, align: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !439, line: 24, size: 192, align: 64, elements: !440)
!439 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!440 = !{!441, !442, !444}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !438, file: !439, line: 25, baseType: !317, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !438, file: !439, line: 26, baseType: !443, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !438, file: !439, line: 27, baseType: !443, size: 64, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !425, file: !422, line: 730, baseType: !289, size: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 733, baseType: !447, size: 64, offset: 192)
!447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 733, size: 64, elements: !448)
!448 = !{!449, !7224}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !447, file: !422, line: 734, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !452, line: 347, size: 5568, elements: !453)
!452 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!453 = !{!454, !6983, !6990, !6991, !6992, !6993, !6994, !6995, !7002, !7003, !7004, !7005, !7006, !7013, !7026, !7027, !7028, !7029, !7030, !7031, !7032, !7033, !7038, !7039, !7040, !7041, !7042, !7043, !7044, !7045, !7046, !7047, !7048, !7049, !7050, !7051, !7052, !7053, !7054, !7055, !7056, !7057, !7058, !7059, !7060, !7061, !7062, !7063, !7064, !7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7075, !7076, !7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7209, !7210, !7213, !7214, !7215, !7216, !7217, !7218, !7219, !7220, !7223}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !451, file: !452, line: 352, baseType: !455, size: 1088)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !452, line: 162, size: 1088, elements: !456)
!456 = !{!457, !470, !480, !491, !492, !495, !496, !497, !498, !499, !500, !505, !6943, !6944, !6945, !6946, !6947, !6954, !6956, !6968, !6969, !6975, !6976, !6977}
!457 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 166, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 166, size: 64, elements: !459)
!459 = !{!460, !462}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !458, file: !452, line: 167, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !452, line: 115, baseType: !338)
!462 = !DIDerivedType(tag: DW_TAG_member, scope: !458, file: !452, line: 168, baseType: !463, size: 64)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !458, file: !452, line: 168, size: 64, elements: !464)
!464 = !{!465, !469}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !463, file: !452, line: 169, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !467, line: 32, baseType: !468)
!467 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !339, line: 27, baseType: !7)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !463, file: !452, line: 170, baseType: !466, size: 32, offset: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 173, baseType: !471, size: 32, offset: 64)
!471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 173, size: 32, elements: !472)
!472 = !{!473, !474}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !471, file: !452, line: 174, baseType: !7, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !471, file: !452, line: 175, baseType: !475, size: 32)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 32, elements: !478)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !339, line: 24, baseType: !477)
!477 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!478 = !{!479}
!479 = !DISubrange(count: 2)
!480 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 178, baseType: !481, size: 32, offset: 96)
!481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 178, size: 32, elements: !482)
!482 = !{!483, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !481, file: !452, line: 179, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !452, line: 114, baseType: !468)
!485 = !DIDerivedType(tag: DW_TAG_member, scope: !481, file: !452, line: 180, baseType: !486, size: 32)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !481, file: !452, line: 180, size: 32, elements: !487)
!487 = !{!488, !490}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !486, file: !452, line: 181, baseType: !489, size: 16)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !467, line: 30, baseType: !476)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !486, file: !452, line: 182, baseType: !476, size: 16, offset: 16)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !455, file: !452, line: 186, baseType: !477, size: 16, offset: 128)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !455, file: !452, line: 187, baseType: !493, size: 8, offset: 144)
!493 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !494)
!494 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !455, file: !452, line: 188, baseType: !494, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !455, file: !452, line: 189, baseType: !494, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !455, file: !452, line: 190, baseType: !494, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !455, file: !452, line: 191, baseType: !494, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !455, file: !452, line: 192, baseType: !37, size: 32, offset: 160)
!500 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 193, baseType: !501, size: 128, offset: 192)
!501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 193, size: 128, elements: !502)
!502 = !{!503, !504}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !501, file: !452, line: 194, baseType: !281, size: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !501, file: !452, line: 195, baseType: !281, size: 128)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !455, file: !452, line: 197, baseType: !506, size: 64, offset: 320)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !452, line: 1127, size: 3264, elements: !508)
!508 = !{!509, !514, !530, !531, !535, !542, !546, !550, !554, !558, !573, !578, !579, !6866, !6870, !6874, !6875, !6876, !6880, !6881, !6882, !6883, !6884, !6888, !6889, !6895, !6899, !6900, !6901, !6902, !6904, !6905, !6907, !6908, !6909, !6910, !6911, !6912, !6913, !6914, !6915, !6917, !6918, !6919, !6920, !6923, !6926, !6939, !6940, !6941, !6942}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !507, file: !452, line: 1128, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DISubroutineType(types: !512)
!512 = !{null, !450, !513}
!513 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !507, file: !452, line: 1130, baseType: !515, size: 64, offset: 64)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{!37, !450, !518, !37}
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !520, line: 32, size: 128, elements: !521)
!520 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!521 = !{!522, !526}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !519, file: !520, line: 33, baseType: !523, size: 16)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !520, line: 26, baseType: !524)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !525, line: 10, baseType: !477)
!525 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !519, file: !520, line: 34, baseType: !527, size: 112, offset: 16)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 112, elements: !528)
!528 = !{!529}
!529 = !DISubrange(count: 14)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !507, file: !452, line: 1133, baseType: !515, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !507, file: !452, line: 1136, baseType: !532, size: 64, offset: 192)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = !DISubroutineType(types: !534)
!534 = !{!37, !450, !37}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !507, file: !452, line: 1138, baseType: !536, size: 64, offset: 256)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DISubroutineType(types: !538)
!538 = !{!450, !450, !37, !539, !540}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !282, line: 30, baseType: !541)
!541 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !507, file: !452, line: 1141, baseType: !543, size: 64, offset: 320)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DISubroutineType(types: !545)
!545 = !{!37, !450, !37, !317}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !507, file: !452, line: 1143, baseType: !547, size: 64, offset: 384)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!37, !450}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !507, file: !452, line: 1144, baseType: !551, size: 64, offset: 448)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{null, !450}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !507, file: !452, line: 1145, baseType: !555, size: 64, offset: 512)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{null, !450, !37}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !507, file: !452, line: 1146, baseType: !559, size: 64, offset: 576)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{!37, !450, !37, !37, !562, !7}
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !563, line: 20, baseType: !564)
!563 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !563, line: 14, size: 128, elements: !565)
!565 = !{!566, !572}
!566 = !DIDerivedType(tag: DW_TAG_member, scope: !564, file: !563, line: 15, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !564, file: !563, line: 15, size: 64, elements: !568)
!568 = !{!569, !571}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !567, file: !563, line: 16, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !567, file: !563, line: 17, baseType: !570, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !564, file: !563, line: 19, baseType: !540, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !507, file: !452, line: 1149, baseType: !574, size: 64, offset: 640)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!37, !450, !37, !37, !577, !539}
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !507, file: !452, line: 1152, baseType: !555, size: 64, offset: 704)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !507, file: !452, line: 1157, baseType: !580, size: 64, offset: 768)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!37, !450, !583, !594}
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !520, line: 50, size: 768, elements: !585)
!585 = !{!586, !587, !588, !6857, !6862, !6863, !6864, !6865}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !584, file: !520, line: 51, baseType: !570, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !584, file: !520, line: 52, baseType: !37, size: 32, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !584, file: !520, line: 53, baseType: !589, size: 320, offset: 128)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !590, line: 29, size: 320, elements: !591)
!590 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!591 = !{!592, !593, !598, !599, !6848}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !589, file: !590, line: 35, baseType: !7, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !589, file: !590, line: 36, baseType: !594, size: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !282, line: 55, baseType: !595)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !596, line: 72, baseType: !597)
!596 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !596, line: 16, baseType: !317)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !589, file: !590, line: 37, baseType: !594, size: 64, offset: 128)
!599 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !590, line: 38, baseType: !600, size: 64, offset: 192)
!600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !590, line: 38, size: 64, elements: !601)
!601 = !{!602, !610, !617, !6847}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !600, file: !590, line: 39, baseType: !603, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !605)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !606, line: 17, size: 128, elements: !607)
!606 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !605, file: !606, line: 19, baseType: !570, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !605, file: !606, line: 20, baseType: !595, size: 64, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !600, file: !590, line: 40, baseType: !611, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !590, line: 15, size: 128, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !613, file: !590, line: 16, baseType: !570, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !613, file: !590, line: 17, baseType: !594, size: 64, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !600, file: !590, line: 41, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !621, line: 31, size: 128, elements: !622)
!621 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!622 = !{!623, !6845, !6846}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !620, file: !621, line: 32, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !626, line: 68, size: 512, align: 128, elements: !627)
!626 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!627 = !{!628, !629, !6837, !6844}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !625, file: !626, line: 69, baseType: !317, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !626, line: 77, baseType: !630, size: 320, offset: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !625, file: !626, line: 77, size: 320, elements: !631)
!631 = !{!632, !6724, !6729, !6755, !6763, !6769, !6781, !6836}
!632 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 78, baseType: !633, size: 320)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 78, size: 320, elements: !634)
!634 = !{!635, !636, !6722, !6723}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !633, file: !626, line: 84, baseType: !289, size: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !633, file: !626, line: 86, baseType: !637, size: 64, offset: 128)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !639, line: 451, size: 1216, align: 64, elements: !640)
!639 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!640 = !{!641, !6611, !6612, !6613, !6614, !6615, !6616, !6617, !6618, !6619, !6717, !6718, !6719, !6720, !6721}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !638, file: !639, line: 452, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !639, line: 610, size: 4224, elements: !644)
!644 = !{!645, !647, !648, !656, !663, !664, !6544, !6545, !6546, !6547, !6552, !6553, !6554, !6555, !6556, !6557, !6558, !6559, !6560, !6561, !6562, !6563, !6564, !6565, !6566, !6567, !6568, !6569, !6570, !6571, !6576, !6577, !6578, !6579, !6580, !6581, !6582, !6587, !6595, !6596, !6597, !6607, !6608, !6609, !6610}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !643, file: !639, line: 611, baseType: !646, size: 16)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !282, line: 19, baseType: !477)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !643, file: !639, line: 612, baseType: !477, size: 16, offset: 16)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !643, file: !639, line: 613, baseType: !649, size: 32, offset: 32)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !650, line: 23, baseType: !651)
!650 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 21, size: 32, elements: !652)
!652 = !{!653}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !651, file: !650, line: 22, baseType: !654, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !282, line: 32, baseType: !655)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !596, line: 49, baseType: !7)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !643, file: !639, line: 614, baseType: !657, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !650, line: 28, baseType: !658)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 26, size: 32, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !658, file: !650, line: 27, baseType: !661, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !282, line: 33, baseType: !662)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !596, line: 50, baseType: !7)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !643, file: !639, line: 615, baseType: !7, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !643, file: !639, line: 622, baseType: !665, size: 64, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !639, line: 1864, size: 1536, align: 512, elements: !668)
!668 = !{!669, !6421, !6431, !6435, !6441, !6445, !6449, !6453, !6457, !6461, !6465, !6466, !6470, !6474, !6494, !6520, !6524, !6530, !6535, !6539, !6540}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !667, file: !639, line: 1865, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{!673, !642, !673, !7}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !675, line: 89, size: 1536, elements: !676)
!675 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!676 = !{!677, !678, !688, !696, !697, !713, !714, !718, !745, !813, !6406, !6407, !6408, !6413, !6414, !6415}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !674, file: !675, line: 91, baseType: !7, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !674, file: !675, line: 92, baseType: !679, size: 32, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !680, line: 277, baseType: !681)
!680 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !680, line: 277, size: 32, elements: !682)
!682 = !{!683}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !681, file: !680, line: 277, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !680, line: 70, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !680, line: 65, size: 32, elements: !686)
!686 = !{!687}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !685, file: !680, line: 66, baseType: !7, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !674, file: !675, line: 93, baseType: !689, size: 128, offset: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !690, line: 38, size: 128, elements: !691)
!690 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!691 = !{!692, !694}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !689, file: !690, line: 39, baseType: !693, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !689, file: !690, line: 39, baseType: !695, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !674, file: !675, line: 94, baseType: !673, size: 64, offset: 192)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !674, file: !675, line: 95, baseType: !698, size: 128, offset: 256)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !675, line: 47, size: 128, elements: !699)
!699 = !{!700, !710}
!700 = !DIDerivedType(tag: DW_TAG_member, scope: !698, file: !675, line: 48, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !698, file: !675, line: 48, size: 64, elements: !702)
!702 = !{!703, !709}
!703 = !DIDerivedType(tag: DW_TAG_member, scope: !701, file: !675, line: 49, baseType: !704, size: 64)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !701, file: !675, line: 49, size: 64, elements: !705)
!705 = !{!706, !708}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !704, file: !675, line: 50, baseType: !707, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !337, line: 21, baseType: !468)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !704, file: !675, line: 50, baseType: !707, size: 32, offset: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !701, file: !675, line: 52, baseType: !336, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !698, file: !675, line: 54, baseType: !711, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !674, file: !675, line: 96, baseType: !642, size: 64, offset: 384)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !674, file: !675, line: 98, baseType: !715, size: 256, offset: 448)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 256, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !674, file: !675, line: 101, baseType: !719, size: 32, offset: 704)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !720, line: 25, size: 32, elements: !721)
!720 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!721 = !{!722}
!722 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !720, line: 26, baseType: !723, size: 32)
!723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !719, file: !720, line: 26, size: 32, elements: !724)
!724 = !{!725}
!725 = !DIDerivedType(tag: DW_TAG_member, scope: !723, file: !720, line: 30, baseType: !726, size: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !723, file: !720, line: 30, size: 32, elements: !727)
!727 = !{!728, !744}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !726, file: !720, line: 31, baseType: !729)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !730, line: 83, baseType: !731)
!730 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !730, line: 71, elements: !732)
!732 = !{!733}
!733 = !DIDerivedType(tag: DW_TAG_member, scope: !731, file: !730, line: 72, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !731, file: !730, line: 72, elements: !735)
!735 = !{!736}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !734, file: !730, line: 73, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !730, line: 20, elements: !738)
!738 = !{!739}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !737, file: !730, line: 21, baseType: !740)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !741, line: 25, baseType: !742)
!741 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 25, elements: !743)
!743 = !{}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !726, file: !720, line: 32, baseType: !37, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !674, file: !675, line: 102, baseType: !746, size: 64, offset: 768)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !748)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !675, line: 135, size: 1024, align: 512, elements: !749)
!749 = !{!750, !754, !755, !762, !768, !772, !776, !780, !781, !785, !789, !801, !807}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !748, file: !675, line: 136, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DISubroutineType(types: !753)
!753 = !{!37, !673, !7}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !748, file: !675, line: 137, baseType: !751, size: 64, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !748, file: !675, line: 138, baseType: !756, size: 64, offset: 128)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!37, !759, !761}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !674)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !748, file: !675, line: 139, baseType: !763, size: 64, offset: 192)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!37, !759, !7, !297, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !748, file: !675, line: 141, baseType: !769, size: 64, offset: 256)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DISubroutineType(types: !771)
!771 = !{!37, !759}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !748, file: !675, line: 142, baseType: !773, size: 64, offset: 320)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DISubroutineType(types: !775)
!775 = !{!37, !673}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !748, file: !675, line: 143, baseType: !777, size: 64, offset: 384)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{null, !673}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !748, file: !675, line: 144, baseType: !777, size: 64, offset: 448)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !748, file: !675, line: 145, baseType: !782, size: 64, offset: 512)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{null, !673, !642}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !748, file: !675, line: 146, baseType: !786, size: 64, offset: 576)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!577, !673, !577, !37}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !748, file: !675, line: 147, baseType: !790, size: 64, offset: 640)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!793, !795}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !675, line: 18, flags: DIFlagFwdDecl)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !797, line: 8, size: 128, elements: !798)
!797 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!798 = !{!799, !800}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !796, file: !797, line: 9, baseType: !793, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !796, file: !797, line: 10, baseType: !673, size: 64, offset: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !748, file: !675, line: 148, baseType: !802, size: 64, offset: 704)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{!37, !805, !540}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !796)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !748, file: !675, line: 149, baseType: !808, size: 64, offset: 768)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{!673, !673, !811}
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !643)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !674, file: !675, line: 103, baseType: !814, size: 64, offset: 832)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !639, line: 1416, size: 9472, elements: !816)
!816 = !{!817, !818, !821, !822, !823, !826, !872, !6072, !6160, !6243, !6247, !6248, !6249, !6250, !6251, !6252, !6253, !6254, !6259, !6263, !6264, !6265, !6266, !6269, !6270, !6271, !6312, !6339, !6340, !6341, !6342, !6343, !6344, !6347, !6348, !6354, !6355, !6356, !6357, !6358, !6359, !6360, !6375, !6376, !6377, !6378, !6379, !6380, !6381, !6382, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !815, file: !639, line: 1417, baseType: !289, size: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !815, file: !639, line: 1418, baseType: !819, size: 32, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !282, line: 16, baseType: !820)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !282, line: 13, baseType: !707)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !815, file: !639, line: 1419, baseType: !494, size: 8, offset: 160)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !815, file: !639, line: 1420, baseType: !317, size: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !815, file: !639, line: 1421, baseType: !824, size: 64, offset: 256)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !282, line: 46, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !596, line: 88, baseType: !384)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !815, file: !639, line: 1422, baseType: !827, size: 64, offset: 320)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !639, line: 2228, size: 576, elements: !829)
!829 = !{!830, !831, !832, !839, !843, !847, !851, !855, !856, !860, !863, !864, !865, !869, !870, !871}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !828, file: !639, line: 2229, baseType: !297, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !828, file: !639, line: 2230, baseType: !37, size: 32, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !828, file: !639, line: 2238, baseType: !833, size: 64, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{!37, !836}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !838, line: 28, flags: DIFlagFwdDecl)
!838 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!839 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !828, file: !639, line: 2239, baseType: !840, size: 64, offset: 192)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !639, line: 70, flags: DIFlagFwdDecl)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !828, file: !639, line: 2240, baseType: !844, size: 64, offset: 256)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!673, !827, !37, !297, !570}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !828, file: !639, line: 2242, baseType: !848, size: 64, offset: 320)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{null, !814}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !828, file: !639, line: 2243, baseType: !852, size: 64, offset: 384)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !854, line: 76, flags: DIFlagFwdDecl)
!854 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!855 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !828, file: !639, line: 2244, baseType: !827, size: 64, offset: 448)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !828, file: !639, line: 2245, baseType: !857, size: 64, offset: 512)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !282, line: 182, size: 64, elements: !858)
!858 = !{!859}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !857, file: !282, line: 183, baseType: !285, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !828, file: !639, line: 2247, baseType: !861, offset: 576)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !862, line: 187, elements: !743)
!862 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!863 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !828, file: !639, line: 2248, baseType: !861, offset: 576)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !828, file: !639, line: 2249, baseType: !861, offset: 576)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !828, file: !639, line: 2250, baseType: !866, offset: 576)
!866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !861, elements: !867)
!867 = !{!868}
!868 = !DISubrange(count: 3)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !828, file: !639, line: 2252, baseType: !861, offset: 576)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !828, file: !639, line: 2253, baseType: !861, offset: 576)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !828, file: !639, line: 2254, baseType: !861, offset: 576)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !815, file: !639, line: 1423, baseType: !873, size: 64, offset: 384)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !639, line: 1935, size: 1472, elements: !876)
!876 = !{!877, !881, !885, !886, !890, !910, !914, !915, !916, !920, !924, !925, !926, !927, !933, !937, !938, !6049, !6050, !6051, !6052, !6056, !6071}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !875, file: !639, line: 1936, baseType: !878, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{!642, !814}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !875, file: !639, line: 1937, baseType: !882, size: 64, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{null, !642}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !875, file: !639, line: 1938, baseType: !882, size: 64, offset: 128)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !875, file: !639, line: 1940, baseType: !887, size: 64, offset: 192)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !642, !37}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !875, file: !639, line: 1941, baseType: !891, size: 64, offset: 256)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!37, !642, !894}
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !896)
!896 = !{!897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !895, file: !6, line: 52, baseType: !513, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !895, file: !6, line: 54, baseType: !513, size: 64, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !895, file: !6, line: 61, baseType: !824, size: 64, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !895, file: !6, line: 62, baseType: !824, size: 64, offset: 192)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !895, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !895, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !895, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !895, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !895, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !895, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !895, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !895, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !895, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !875, file: !639, line: 1942, baseType: !911, size: 64, offset: 320)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!37, !642}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !875, file: !639, line: 1943, baseType: !882, size: 64, offset: 384)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !875, file: !639, line: 1944, baseType: !848, size: 64, offset: 448)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !875, file: !639, line: 1945, baseType: !917, size: 64, offset: 512)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!37, !814, !37}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !875, file: !639, line: 1946, baseType: !921, size: 64, offset: 576)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!37, !814}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !875, file: !639, line: 1947, baseType: !921, size: 64, offset: 640)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !875, file: !639, line: 1948, baseType: !921, size: 64, offset: 704)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !875, file: !639, line: 1949, baseType: !921, size: 64, offset: 768)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !875, file: !639, line: 1950, baseType: !928, size: 64, offset: 832)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!37, !673, !931}
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !639, line: 57, flags: DIFlagFwdDecl)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !875, file: !639, line: 1951, baseType: !934, size: 64, offset: 896)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DISubroutineType(types: !936)
!936 = !{!37, !814, !539, !577}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !875, file: !639, line: 1952, baseType: !848, size: 64, offset: 960)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !875, file: !639, line: 1954, baseType: !939, size: 64, offset: 1024)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{!37, !942, !673}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !944, line: 16, size: 896, elements: !945)
!944 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!945 = !{!946, !947, !948, !949, !950, !951, !952, !953, !960, !982, !983, !6048}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !943, file: !944, line: 17, baseType: !577, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !943, file: !944, line: 18, baseType: !594, size: 64, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !943, file: !944, line: 19, baseType: !594, size: 64, offset: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !943, file: !944, line: 20, baseType: !594, size: 64, offset: 192)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !943, file: !944, line: 21, baseType: !594, size: 64, offset: 256)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !943, file: !944, line: 22, baseType: !824, size: 64, offset: 320)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !943, file: !944, line: 23, baseType: !824, size: 64, offset: 384)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !943, file: !944, line: 24, baseType: !954, size: 192, offset: 448)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !955, line: 53, size: 192, elements: !956)
!955 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!956 = !{!957, !958, !959}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !954, file: !955, line: 54, baseType: !376, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !954, file: !955, line: 55, baseType: !729, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !954, file: !955, line: 59, baseType: !289, size: 128, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !943, file: !944, line: 25, baseType: !961, size: 64, offset: 640)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !944, line: 31, size: 256, elements: !964)
!964 = !{!965, !970, !974, !978}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !963, file: !944, line: 32, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!570, !942, !969}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !963, file: !944, line: 33, baseType: !971, size: 64, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !942, !570}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !963, file: !944, line: 34, baseType: !975, size: 64, offset: 128)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!570, !942, !570, !969}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !963, file: !944, line: 35, baseType: !979, size: 64, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!37, !942, !570}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !943, file: !944, line: 26, baseType: !37, size: 32, offset: 704)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !943, file: !944, line: 27, baseType: !984, size: 64, offset: 768)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !639, line: 916, size: 1856, align: 32, elements: !987)
!987 = !{!988, !998, !999, !1000, !5998, !5999, !6008, !6009, !6010, !6011, !6012, !6013, !6029, !6030, !6039, !6040, !6041, !6042, !6043, !6044, !6047}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !986, file: !639, line: 920, baseType: !989, size: 128)
!989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !986, file: !639, line: 917, size: 128, elements: !990)
!990 = !{!991, !997}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !989, file: !639, line: 918, baseType: !992, size: 64)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !993, line: 58, size: 64, elements: !994)
!993 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!994 = !{!995}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !992, file: !993, line: 59, baseType: !996, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !989, file: !639, line: 919, baseType: !304, size: 128, align: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !986, file: !639, line: 921, baseType: !796, size: 128, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !986, file: !639, line: 922, baseType: !642, size: 64, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !986, file: !639, line: 923, baseType: !1001, size: 64, offset: 320)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !639, line: 1822, size: 2048, elements: !1004)
!1004 = !{!1005, !1006, !1011, !1018, !1022, !1066, !1067, !1071, !1084, !1085, !1106, !1110, !1111, !5847, !5848, !5852, !5857, !5858, !5862, !5866, !5958, !5962, !5963, !5967, !5968, !5972, !5976, !5981, !5985, !5989, !5993, !5997}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1003, file: !639, line: 1823, baseType: !852, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1003, file: !639, line: 1824, baseType: !1007, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!824, !1010, !824, !37}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1003, file: !639, line: 1825, baseType: !1012, size: 64, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!1015, !1010, !577, !594, !969}
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !282, line: 60, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !596, line: 73, baseType: !1017)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !596, line: 15, baseType: !513)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1003, file: !639, line: 1826, baseType: !1019, size: 64, offset: 192)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!1015, !1010, !297, !594, !969}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1003, file: !639, line: 1827, baseType: !1023, size: 64, offset: 256)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!1015, !1026, !1065}
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !639, line: 320, size: 384, elements: !1028)
!1028 = !{!1029, !1030, !1031, !1035, !1036, !1037, !1039, !1040}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1027, file: !639, line: 321, baseType: !1010, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1027, file: !639, line: 326, baseType: !824, size: 64, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1027, file: !639, line: 327, baseType: !1032, size: 64, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{null, !1026, !513, !513}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1027, file: !639, line: 328, baseType: !570, size: 64, offset: 192)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1027, file: !639, line: 329, baseType: !37, size: 32, offset: 256)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1027, file: !639, line: 330, baseType: !1038, size: 16, offset: 288)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !337, line: 19, baseType: !476)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1027, file: !639, line: 331, baseType: !1038, size: 16, offset: 304)
!1040 = !DIDerivedType(tag: DW_TAG_member, scope: !1027, file: !639, line: 332, baseType: !1041, size: 64, offset: 320)
!1041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1027, file: !639, line: 332, size: 64, elements: !1042)
!1042 = !{!1043, !1044}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1041, file: !639, line: 333, baseType: !7, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1041, file: !639, line: 334, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1047, line: 569, size: 448, elements: !1048)
!1047 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1048 = !{!1049, !1050, !1051}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1046, file: !1047, line: 570, baseType: !624, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1046, file: !1047, line: 571, baseType: !37, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1046, file: !1047, line: 572, baseType: !1052, size: 320, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1053, line: 14, baseType: !1054)
!1053 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1053, line: 29, size: 320, elements: !1055)
!1055 = !{!1056, !1057, !1058, !1064}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1054, file: !1053, line: 30, baseType: !7, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1054, file: !1053, line: 31, baseType: !570, size: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1054, file: !1053, line: 32, baseType: !1059, size: 64, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1053, line: 16, baseType: !1060)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!37, !1063, !7, !37, !570}
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1054, file: !1053, line: 33, baseType: !289, size: 128, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1003, file: !639, line: 1828, baseType: !1023, size: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1003, file: !639, line: 1829, baseType: !1068, size: 64, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!37, !1026, !540}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1003, file: !639, line: 1830, baseType: !1072, size: 64, offset: 448)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!37, !1010, !1075}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !639, line: 1776, size: 128, elements: !1077)
!1077 = !{!1078, !1083}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1076, file: !639, line: 1777, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !639, line: 1773, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!37, !1075, !297, !37, !824, !336, !7}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1076, file: !639, line: 1778, baseType: !824, size: 64, offset: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1003, file: !639, line: 1831, baseType: !1072, size: 64, offset: 512)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1003, file: !639, line: 1832, baseType: !1086, size: 64, offset: 576)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!1089, !1010, !1090}
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !467, line: 52, baseType: !7)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1092, line: 43, size: 128, elements: !1093)
!1092 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1093 = !{!1094, !1105}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1091, file: !1092, line: 44, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1092, line: 37, baseType: !1096)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !1010, !1099, !1090}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1053, line: 40, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1053, line: 36, size: 128, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1101, file: !1053, line: 37, baseType: !729)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1101, file: !1053, line: 38, baseType: !289, size: 128)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1091, file: !1092, line: 45, baseType: !1089, size: 32, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1003, file: !639, line: 1833, baseType: !1107, size: 64, offset: 640)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!513, !1010, !7, !317}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1003, file: !639, line: 1834, baseType: !1107, size: 64, offset: 704)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1003, file: !639, line: 1835, baseType: !1112, size: 64, offset: 768)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!37, !1010, !1115}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !626, line: 305, size: 1472, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122, !1123, !1124, !5824, !5830, !5831, !5836, !5837, !5840, !5841, !5842, !5843, !5844, !5845}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1116, file: !626, line: 308, baseType: !317, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1116, file: !626, line: 309, baseType: !317, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1116, file: !626, line: 313, baseType: !1115, size: 64, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1116, file: !626, line: 313, baseType: !1115, size: 64, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1116, file: !626, line: 315, baseType: !438, size: 192, align: 64, offset: 256)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1116, file: !626, line: 323, baseType: !317, size: 64, offset: 448)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1116, file: !626, line: 327, baseType: !1125, size: 64, offset: 512)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !626, line: 388, size: 7296, elements: !1127)
!1127 = !{!1128, !5822}
!1128 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !626, line: 389, baseType: !1129, size: 7296)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1126, file: !626, line: 389, size: 7296, elements: !1130)
!1130 = !{!1131, !1132, !1136, !1137, !1141, !1142, !1143, !1144, !1145, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1196, !1204, !1207, !1247, !1248, !5806, !5807, !5810, !5811, !5812, !5815, !5816, !5817, !5820, !5821}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1129, file: !626, line: 390, baseType: !1115, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1129, file: !626, line: 391, baseType: !1133, size: 64, offset: 64)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !439, line: 31, size: 64, elements: !1134)
!1134 = !{!1135}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1133, file: !439, line: 32, baseType: !443, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1129, file: !626, line: 392, baseType: !336, size: 64, offset: 128)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1129, file: !626, line: 394, baseType: !1138, size: 64, offset: 192)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!317, !1010, !317, !317, !317, !317}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1129, file: !626, line: 398, baseType: !317, size: 64, offset: 256)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1129, file: !626, line: 399, baseType: !317, size: 64, offset: 320)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1129, file: !626, line: 405, baseType: !317, size: 64, offset: 384)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1129, file: !626, line: 406, baseType: !317, size: 64, offset: 448)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1129, file: !626, line: 407, baseType: !1146, size: 64, offset: 512)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1148, line: 286, baseType: !1149)
!1148 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1148, line: 286, size: 64, elements: !1150)
!1150 = !{!1151}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1149, file: !1148, line: 286, baseType: !1152, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1153, line: 18, baseType: !317)
!1153 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1129, file: !626, line: 416, baseType: !388, size: 32, offset: 576)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1129, file: !626, line: 428, baseType: !388, size: 32, offset: 608)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1129, file: !626, line: 437, baseType: !388, size: 32, offset: 640)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1129, file: !626, line: 447, baseType: !388, size: 32, offset: 672)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1129, file: !626, line: 450, baseType: !376, size: 64, offset: 704)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1129, file: !626, line: 452, baseType: !37, size: 32, offset: 768)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1129, file: !626, line: 454, baseType: !729, offset: 800)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1129, file: !626, line: 457, baseType: !1162, size: 256, offset: 832)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1163, line: 35, size: 256, elements: !1164)
!1163 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1164 = !{!1165, !1166, !1167, !1169}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1162, file: !1163, line: 36, baseType: !376, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1162, file: !1163, line: 42, baseType: !376, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1162, file: !1163, line: 46, baseType: !1168, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !730, line: 29, baseType: !737)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1162, file: !1163, line: 47, baseType: !289, size: 128, offset: 128)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1129, file: !626, line: 459, baseType: !289, size: 128, offset: 1088)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1129, file: !626, line: 466, baseType: !317, size: 64, offset: 1216)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1129, file: !626, line: 467, baseType: !317, size: 64, offset: 1280)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1129, file: !626, line: 469, baseType: !317, size: 64, offset: 1344)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1129, file: !626, line: 470, baseType: !317, size: 64, offset: 1408)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1129, file: !626, line: 471, baseType: !378, size: 64, offset: 1472)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1129, file: !626, line: 472, baseType: !317, size: 64, offset: 1536)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1129, file: !626, line: 473, baseType: !317, size: 64, offset: 1600)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1129, file: !626, line: 474, baseType: !317, size: 64, offset: 1664)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1129, file: !626, line: 475, baseType: !317, size: 64, offset: 1728)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1129, file: !626, line: 477, baseType: !729, offset: 1792)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1792)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1856)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1920)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1984)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1129, file: !626, line: 479, baseType: !317, size: 64, offset: 2048)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1129, file: !626, line: 479, baseType: !317, size: 64, offset: 2112)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1129, file: !626, line: 479, baseType: !317, size: 64, offset: 2176)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2240)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2304)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2368)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2432)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1129, file: !626, line: 482, baseType: !1193, size: 2816, offset: 2496)
!1193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 2816, elements: !1194)
!1194 = !{!1195}
!1195 = !DISubrange(count: 44)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1129, file: !626, line: 488, baseType: !1197, size: 256, offset: 5312)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1198, line: 60, size: 256, elements: !1199)
!1198 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1199 = !{!1200}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1197, file: !1198, line: 61, baseType: !1201, size: 256)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 256, elements: !1202)
!1202 = !{!1203}
!1203 = !DISubrange(count: 4)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1129, file: !626, line: 490, baseType: !1205, size: 64, offset: 5568)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !626, line: 490, flags: DIFlagFwdDecl)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1129, file: !626, line: 493, baseType: !1208, size: 896, offset: 5632)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1209, line: 53, baseType: !1210)
!1209 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1209, line: 13, size: 896, elements: !1211)
!1211 = !{!1212, !1213, !1214, !1215, !1218, !1219, !1220, !1221, !1241, !1242, !1243}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1210, file: !1209, line: 18, baseType: !336, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1210, file: !1209, line: 28, baseType: !378, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1210, file: !1209, line: 31, baseType: !1162, size: 256, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1210, file: !1209, line: 32, baseType: !1216, size: 64, offset: 384)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1209, line: 32, flags: DIFlagFwdDecl)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1210, file: !1209, line: 37, baseType: !477, size: 16, offset: 448)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1210, file: !1209, line: 40, baseType: !954, size: 192, offset: 512)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1210, file: !1209, line: 41, baseType: !570, size: 64, offset: 704)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1210, file: !1209, line: 42, baseType: !1222, size: 64, offset: 768)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1225, line: 13, size: 896, elements: !1226)
!1225 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1224, file: !1225, line: 14, baseType: !570, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1224, file: !1225, line: 15, baseType: !317, size: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1224, file: !1225, line: 17, baseType: !317, size: 64, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1224, file: !1225, line: 17, baseType: !317, size: 64, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1224, file: !1225, line: 19, baseType: !513, size: 64, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1224, file: !1225, line: 21, baseType: !513, size: 64, offset: 320)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1224, file: !1225, line: 22, baseType: !513, size: 64, offset: 384)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1224, file: !1225, line: 23, baseType: !513, size: 64, offset: 448)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1224, file: !1225, line: 24, baseType: !513, size: 64, offset: 512)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1224, file: !1225, line: 25, baseType: !513, size: 64, offset: 576)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1224, file: !1225, line: 26, baseType: !513, size: 64, offset: 640)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1224, file: !1225, line: 27, baseType: !513, size: 64, offset: 704)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1224, file: !1225, line: 28, baseType: !513, size: 64, offset: 768)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1224, file: !1225, line: 29, baseType: !513, size: 64, offset: 832)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1210, file: !1209, line: 44, baseType: !388, size: 32, offset: 832)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1210, file: !1209, line: 50, baseType: !1038, size: 16, offset: 864)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1210, file: !1209, line: 51, baseType: !1244, size: 16, offset: 880)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !337, line: 18, baseType: !1245)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !339, line: 23, baseType: !1246)
!1246 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1129, file: !626, line: 495, baseType: !317, size: 64, offset: 6528)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1129, file: !626, line: 497, baseType: !1249, size: 64, offset: 6592)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !626, line: 381, size: 384, elements: !1251)
!1251 = !{!1252, !1253, !5805}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1250, file: !626, line: 382, baseType: !388, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1250, file: !626, line: 383, baseType: !1254, size: 128, offset: 64)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !626, line: 376, size: 128, elements: !1255)
!1255 = !{!1256, !5803}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1254, file: !626, line: 377, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1259, line: 640, size: 48640, elements: !1260)
!1259 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1260 = !{!1261, !1267, !1269, !1270, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1287, !1305, !1316, !1405, !1406, !1407, !1418, !1419, !1421, !1422, !1423, !1424, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1508, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1541, !1543, !1544, !1545, !1557, !1558, !1559, !1560, !1561, !1562, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1586, !1591, !1929, !1930, !1931, !1932, !1933, !1936, !1939, !1942, !1945, !3582, !3678, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3726, !3727, !3728, !3729, !3730, !3735, !3736, !3737, !3740, !3741, !5400, !5409, !5412, !5413, !5414, !5417, !5418, !5497, !5498, !5501, !5502, !5505, !5506, !5507, !5511, !5512, !5513, !5526, !5527, !5528, !5538, !5543, !5601, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1258, file: !1259, line: 646, baseType: !1262, size: 128)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1263, line: 56, size: 128, elements: !1264)
!1263 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1264 = !{!1265, !1266}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1262, file: !1263, line: 57, baseType: !317, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1262, file: !1263, line: 58, baseType: !707, size: 32, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1258, file: !1259, line: 649, baseType: !1268, size: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !513)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1258, file: !1259, line: 657, baseType: !570, size: 64, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1258, file: !1259, line: 658, baseType: !1271, size: 32, offset: 256)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1272, line: 113, baseType: !1273)
!1272 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1272, line: 111, size: 32, elements: !1274)
!1274 = !{!1275}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1273, file: !1272, line: 112, baseType: !388, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1258, file: !1259, line: 660, baseType: !7, size: 32, offset: 288)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1258, file: !1259, line: 661, baseType: !7, size: 32, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1258, file: !1259, line: 684, baseType: !37, size: 32, offset: 352)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1258, file: !1259, line: 686, baseType: !37, size: 32, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1258, file: !1259, line: 687, baseType: !37, size: 32, offset: 416)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1258, file: !1259, line: 688, baseType: !37, size: 32, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1258, file: !1259, line: 689, baseType: !7, size: 32, offset: 480)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1258, file: !1259, line: 691, baseType: !1284, size: 64, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1286)
!1286 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1259, line: 691, flags: DIFlagFwdDecl)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1258, file: !1259, line: 692, baseType: !1288, size: 832, offset: 576)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1259, line: 451, size: 832, elements: !1289)
!1289 = !{!1290, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1288, file: !1259, line: 453, baseType: !1291, size: 128)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1259, line: 325, size: 128, elements: !1292)
!1292 = !{!1293, !1294}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1291, file: !1259, line: 326, baseType: !317, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1291, file: !1259, line: 327, baseType: !707, size: 32, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1288, file: !1259, line: 454, baseType: !438, size: 192, align: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1288, file: !1259, line: 455, baseType: !289, size: 128, offset: 320)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1288, file: !1259, line: 456, baseType: !7, size: 32, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1288, file: !1259, line: 458, baseType: !336, size: 64, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1288, file: !1259, line: 459, baseType: !336, size: 64, offset: 576)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1288, file: !1259, line: 460, baseType: !336, size: 64, offset: 640)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1288, file: !1259, line: 461, baseType: !336, size: 64, offset: 704)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1288, file: !1259, line: 463, baseType: !336, size: 64, offset: 768)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1288, file: !1259, line: 465, baseType: !1304, offset: 832)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1259, line: 415, elements: !743)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1258, file: !1259, line: 693, baseType: !1306, size: 384, offset: 1408)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1259, line: 489, size: 384, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1312, !1313, !1314}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1306, file: !1259, line: 490, baseType: !289, size: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1306, file: !1259, line: 491, baseType: !317, size: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1306, file: !1259, line: 492, baseType: !317, size: 64, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1306, file: !1259, line: 493, baseType: !7, size: 32, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1306, file: !1259, line: 494, baseType: !477, size: 16, offset: 288)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1306, file: !1259, line: 495, baseType: !477, size: 16, offset: 304)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1306, file: !1259, line: 497, baseType: !1315, size: 64, offset: 320)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1258, file: !1259, line: 697, baseType: !1317, size: 1792, offset: 1792)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1259, line: 507, size: 1792, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1402, !1403}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1317, file: !1259, line: 508, baseType: !438, size: 192, align: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1317, file: !1259, line: 515, baseType: !336, size: 64, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1317, file: !1259, line: 516, baseType: !336, size: 64, offset: 256)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1317, file: !1259, line: 517, baseType: !336, size: 64, offset: 320)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1317, file: !1259, line: 518, baseType: !336, size: 64, offset: 384)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1317, file: !1259, line: 519, baseType: !336, size: 64, offset: 448)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1317, file: !1259, line: 526, baseType: !382, size: 64, offset: 512)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1317, file: !1259, line: 527, baseType: !336, size: 64, offset: 576)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1317, file: !1259, line: 528, baseType: !7, size: 32, offset: 640)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1317, file: !1259, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1317, file: !1259, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1317, file: !1259, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1317, file: !1259, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1317, file: !1259, line: 563, baseType: !1333, size: 512, offset: 704)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !25, line: 118, size: 512, elements: !1334)
!1334 = !{!1335, !1343, !1344, !1349, !1396, !1399, !1400, !1401}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1333, file: !25, line: 119, baseType: !1336, size: 256)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1337, line: 9, size: 256, elements: !1338)
!1337 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1338 = !{!1339, !1340}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1336, file: !1337, line: 10, baseType: !438, size: 192, align: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1336, file: !1337, line: 11, baseType: !1341, size: 64, offset: 192)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1342, line: 29, baseType: !382)
!1342 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1333, file: !25, line: 120, baseType: !1341, size: 64, offset: 256)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1333, file: !25, line: 121, baseType: !1345, size: 64, offset: 320)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!24, !1348}
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1333, file: !25, line: 122, baseType: !1350, size: 64, offset: 384)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !25, line: 159, size: 512, align: 512, elements: !1352)
!1352 = !{!1353, !1373, !1374, !1377, !1382, !1383, !1391, !1395}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1351, file: !25, line: 160, baseType: !1354, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !25, line: 214, size: 4608, align: 512, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1355, file: !25, line: 215, baseType: !1168)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1355, file: !25, line: 216, baseType: !7, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1355, file: !25, line: 217, baseType: !7, size: 32, offset: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1355, file: !25, line: 218, baseType: !7, size: 32, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1355, file: !25, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1355, file: !25, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1355, file: !25, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1355, file: !25, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1355, file: !25, line: 233, baseType: !1341, size: 64, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1355, file: !25, line: 234, baseType: !1348, size: 64, offset: 192)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1355, file: !25, line: 235, baseType: !1341, size: 64, offset: 256)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1355, file: !25, line: 236, baseType: !1348, size: 64, offset: 320)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1355, file: !25, line: 237, baseType: !1370, size: 4096, offset: 512)
!1370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1351, size: 4096, elements: !1371)
!1371 = !{!1372}
!1372 = !DISubrange(count: 8)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1351, file: !25, line: 161, baseType: !7, size: 32, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1351, file: !25, line: 162, baseType: !1375, size: 32, offset: 96)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !282, line: 27, baseType: !1376)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !596, line: 96, baseType: !37)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1351, file: !25, line: 163, baseType: !1378, size: 32, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !680, line: 276, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !680, line: 276, size: 32, elements: !1380)
!1380 = !{!1381}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1379, file: !680, line: 276, baseType: !684, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1351, file: !25, line: 164, baseType: !1348, size: 64, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1351, file: !25, line: 165, baseType: !1384, size: 128, offset: 256)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1337, line: 14, size: 128, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1384, file: !1337, line: 15, baseType: !1387, size: 128)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !439, line: 125, size: 128, elements: !1388)
!1388 = !{!1389, !1390}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1387, file: !439, line: 126, baseType: !1133, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1387, file: !439, line: 127, baseType: !443, size: 64, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1351, file: !25, line: 166, baseType: !1392, size: 64, offset: 384)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!1341}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1351, file: !25, line: 167, baseType: !1341, size: 64, offset: 448)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1333, file: !25, line: 123, baseType: !1397, size: 8, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !337, line: 17, baseType: !1398)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !339, line: 21, baseType: !494)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1333, file: !25, line: 124, baseType: !1397, size: 8, offset: 456)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1333, file: !25, line: 125, baseType: !1397, size: 8, offset: 464)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1333, file: !25, line: 126, baseType: !1397, size: 8, offset: 472)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1317, file: !1259, line: 572, baseType: !1333, size: 512, offset: 1216)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1317, file: !1259, line: 580, baseType: !1404, size: 64, offset: 1728)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1258, file: !1259, line: 721, baseType: !7, size: 32, offset: 3584)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1258, file: !1259, line: 722, baseType: !37, size: 32, offset: 3616)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1258, file: !1259, line: 723, baseType: !1408, size: 64, offset: 3648)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1410)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1411, line: 17, baseType: !1412)
!1411 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1411, line: 17, size: 64, elements: !1413)
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1412, file: !1411, line: 17, baseType: !1415, size: 64)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 64, elements: !1416)
!1416 = !{!1417}
!1417 = !DISubrange(count: 1)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1258, file: !1259, line: 724, baseType: !1410, size: 64, offset: 3712)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1258, file: !1259, line: 749, baseType: !1420, offset: 3776)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1259, line: 290, elements: !743)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1258, file: !1259, line: 751, baseType: !289, size: 128, offset: 3776)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1258, file: !1259, line: 757, baseType: !1125, size: 64, offset: 3904)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1258, file: !1259, line: 758, baseType: !1125, size: 64, offset: 3968)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1258, file: !1259, line: 761, baseType: !1425, size: 320, offset: 4032)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1198, line: 34, size: 320, elements: !1426)
!1426 = !{!1427, !1428}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1425, file: !1198, line: 35, baseType: !336, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1425, file: !1198, line: 36, baseType: !1429, size: 256, offset: 64)
!1429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1115, size: 256, elements: !1202)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1258, file: !1259, line: 766, baseType: !37, size: 32, offset: 4352)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1258, file: !1259, line: 767, baseType: !37, size: 32, offset: 4384)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1258, file: !1259, line: 768, baseType: !37, size: 32, offset: 4416)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1258, file: !1259, line: 770, baseType: !37, size: 32, offset: 4448)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1258, file: !1259, line: 772, baseType: !317, size: 64, offset: 4480)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1258, file: !1259, line: 775, baseType: !7, size: 32, offset: 4544)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1258, file: !1259, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1258, file: !1259, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1258, file: !1259, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1258, file: !1259, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1258, file: !1259, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1258, file: !1259, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1258, file: !1259, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1258, file: !1259, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1258, file: !1259, line: 831, baseType: !317, size: 64, offset: 4672)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1258, file: !1259, line: 833, baseType: !1446, size: 384, offset: 4736)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !30, line: 25, size: 384, elements: !1447)
!1447 = !{!1448, !1453}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1446, file: !30, line: 26, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!513, !1452}
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, scope: !1446, file: !30, line: 27, baseType: !1454, size: 320, offset: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1446, file: !30, line: 27, size: 320, elements: !1455)
!1455 = !{!1456, !1466, !1493}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1454, file: !30, line: 36, baseType: !1457, size: 320)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1454, file: !30, line: 29, size: 320, elements: !1458)
!1458 = !{!1459, !1461, !1462, !1463, !1464, !1465}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1457, file: !30, line: 30, baseType: !1460, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1457, file: !30, line: 31, baseType: !707, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1457, file: !30, line: 32, baseType: !707, size: 32, offset: 96)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1457, file: !30, line: 33, baseType: !707, size: 32, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1457, file: !30, line: 34, baseType: !336, size: 64, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1457, file: !30, line: 35, baseType: !1460, size: 64, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1454, file: !30, line: 46, baseType: !1467, size: 192)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1454, file: !30, line: 38, size: 192, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1492}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1467, file: !30, line: 39, baseType: !1375, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1467, file: !30, line: 40, baseType: !29, size: 32, offset: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, scope: !1467, file: !30, line: 41, baseType: !1472, size: 64, offset: 64)
!1472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1467, file: !30, line: 41, size: 64, elements: !1473)
!1473 = !{!1474, !1482}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1472, file: !30, line: 42, baseType: !1475, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1477, line: 7, size: 128, elements: !1478)
!1477 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1478 = !{!1479, !1481}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1476, file: !1477, line: 8, baseType: !1480, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !596, line: 93, baseType: !384)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1476, file: !1477, line: 9, baseType: !384, size: 64, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1472, file: !30, line: 43, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1485, line: 7, size: 64, elements: !1486)
!1485 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1486 = !{!1487, !1491}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1484, file: !1485, line: 8, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1485, line: 5, baseType: !1489)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !337, line: 20, baseType: !1490)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !339, line: 26, baseType: !37)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1484, file: !1485, line: 9, baseType: !1489, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1467, file: !30, line: 45, baseType: !336, size: 64, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1454, file: !30, line: 54, baseType: !1494, size: 256)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1454, file: !30, line: 48, size: 256, elements: !1495)
!1495 = !{!1496, !1504, !1505, !1506, !1507}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1494, file: !30, line: 49, baseType: !1497, size: 64)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1499, line: 36, size: 64, elements: !1500)
!1499 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1500 = !{!1501, !1502, !1503}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1498, file: !1499, line: 37, baseType: !37, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1498, file: !1499, line: 38, baseType: !1246, size: 16, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1498, file: !1499, line: 39, baseType: !1246, size: 16, offset: 48)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1494, file: !30, line: 50, baseType: !37, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1494, file: !30, line: 51, baseType: !37, size: 32, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1494, file: !30, line: 52, baseType: !317, size: 64, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1494, file: !30, line: 53, baseType: !317, size: 64, offset: 192)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1258, file: !1259, line: 835, baseType: !1509, size: 32, offset: 5120)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !282, line: 22, baseType: !1510)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !596, line: 28, baseType: !37)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1258, file: !1259, line: 836, baseType: !1509, size: 32, offset: 5152)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1258, file: !1259, line: 840, baseType: !317, size: 64, offset: 5184)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1258, file: !1259, line: 849, baseType: !1257, size: 64, offset: 5248)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1258, file: !1259, line: 852, baseType: !1257, size: 64, offset: 5312)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1258, file: !1259, line: 857, baseType: !289, size: 128, offset: 5376)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1258, file: !1259, line: 858, baseType: !289, size: 128, offset: 5504)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1258, file: !1259, line: 859, baseType: !1257, size: 64, offset: 5632)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1258, file: !1259, line: 867, baseType: !289, size: 128, offset: 5696)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1258, file: !1259, line: 868, baseType: !289, size: 128, offset: 5824)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1258, file: !1259, line: 871, baseType: !1521, size: 64, offset: 5952)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1523, line: 59, size: 768, elements: !1524)
!1523 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1524 = !{!1525, !1526, !1527, !1528, !1530, !1531, !1532, !1533}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1522, file: !1523, line: 61, baseType: !1271, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1522, file: !1523, line: 62, baseType: !7, size: 32, offset: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1522, file: !1523, line: 63, baseType: !729, offset: 64)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1522, file: !1523, line: 65, baseType: !1529, size: 256, offset: 64)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 256, elements: !1202)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1522, file: !1523, line: 66, baseType: !857, size: 64, offset: 320)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1522, file: !1523, line: 68, baseType: !1100, size: 128, offset: 384)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1522, file: !1523, line: 69, baseType: !304, size: 128, align: 64, offset: 512)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1522, file: !1523, line: 70, baseType: !1534, size: 128, offset: 640)
!1534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1535, size: 128, elements: !1416)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1523, line: 54, size: 128, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1535, file: !1523, line: 55, baseType: !37, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1535, file: !1523, line: 56, baseType: !1539, size: 64, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1523, line: 56, flags: DIFlagFwdDecl)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1258, file: !1259, line: 872, baseType: !1542, size: 512, offset: 6016)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 512, elements: !1202)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1258, file: !1259, line: 873, baseType: !289, size: 128, offset: 6528)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1258, file: !1259, line: 874, baseType: !289, size: 128, offset: 6656)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1258, file: !1259, line: 876, baseType: !1546, size: 64, offset: 6784)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1548, line: 26, size: 192, elements: !1549)
!1548 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1549 = !{!1550, !1551}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1547, file: !1548, line: 27, baseType: !7, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1547, file: !1548, line: 28, baseType: !1552, size: 128, offset: 64)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1553, line: 43, size: 128, elements: !1554)
!1553 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1552, file: !1553, line: 44, baseType: !1168)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1552, file: !1553, line: 45, baseType: !289, size: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1258, file: !1259, line: 879, baseType: !539, size: 64, offset: 6848)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1258, file: !1259, line: 882, baseType: !539, size: 64, offset: 6912)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1258, file: !1259, line: 884, baseType: !336, size: 64, offset: 6976)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1258, file: !1259, line: 885, baseType: !336, size: 64, offset: 7040)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1258, file: !1259, line: 890, baseType: !336, size: 64, offset: 7104)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1258, file: !1259, line: 891, baseType: !1563, size: 128, offset: 7168)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1259, line: 242, size: 128, elements: !1564)
!1564 = !{!1565, !1566, !1567}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1563, file: !1259, line: 244, baseType: !336, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1563, file: !1259, line: 245, baseType: !336, size: 64, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1563, file: !1259, line: 246, baseType: !1168, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1258, file: !1259, line: 900, baseType: !317, size: 64, offset: 7296)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1258, file: !1259, line: 901, baseType: !317, size: 64, offset: 7360)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1258, file: !1259, line: 904, baseType: !336, size: 64, offset: 7424)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1258, file: !1259, line: 907, baseType: !336, size: 64, offset: 7488)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1258, file: !1259, line: 910, baseType: !317, size: 64, offset: 7552)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1258, file: !1259, line: 911, baseType: !317, size: 64, offset: 7616)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1258, file: !1259, line: 914, baseType: !1575, size: 640, offset: 7680)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1576, line: 123, size: 640, elements: !1577)
!1576 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1577 = !{!1578, !1584, !1585}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1575, file: !1576, line: 124, baseType: !1579, size: 576)
!1579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1580, size: 576, elements: !867)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1576, line: 108, size: 192, elements: !1581)
!1581 = !{!1582, !1583}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1580, file: !1576, line: 109, baseType: !336, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1580, file: !1576, line: 110, baseType: !1384, size: 128, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1575, file: !1576, line: 125, baseType: !7, size: 32, offset: 576)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1575, file: !1576, line: 126, baseType: !7, size: 32, offset: 608)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1258, file: !1259, line: 917, baseType: !1587, size: 192, offset: 8320)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1576, line: 134, size: 192, elements: !1588)
!1588 = !{!1589, !1590}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1587, file: !1576, line: 135, baseType: !304, size: 128, align: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1587, file: !1576, line: 136, baseType: !7, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1258, file: !1259, line: 923, baseType: !1592, size: 64, offset: 8512)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1595, line: 111, size: 1280, elements: !1596)
!1595 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1614, !1615, !1616, !1617, !1618, !1619, !1729, !1730, !1731, !1732, !1758, !1914, !1924}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1594, file: !1595, line: 112, baseType: !388, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1594, file: !1595, line: 120, baseType: !649, size: 32, offset: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1594, file: !1595, line: 121, baseType: !657, size: 32, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1594, file: !1595, line: 122, baseType: !649, size: 32, offset: 96)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1594, file: !1595, line: 123, baseType: !657, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1594, file: !1595, line: 124, baseType: !649, size: 32, offset: 160)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1594, file: !1595, line: 125, baseType: !657, size: 32, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1594, file: !1595, line: 126, baseType: !649, size: 32, offset: 224)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1594, file: !1595, line: 127, baseType: !657, size: 32, offset: 256)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1594, file: !1595, line: 128, baseType: !7, size: 32, offset: 288)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1594, file: !1595, line: 129, baseType: !1608, size: 64, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1609, line: 26, baseType: !1610)
!1609 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1609, line: 24, size: 64, elements: !1611)
!1611 = !{!1612}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1610, file: !1609, line: 25, baseType: !1613, size: 64)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 64, elements: !478)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1594, file: !1595, line: 130, baseType: !1608, size: 64, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1594, file: !1595, line: 131, baseType: !1608, size: 64, offset: 448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1594, file: !1595, line: 132, baseType: !1608, size: 64, offset: 512)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1594, file: !1595, line: 133, baseType: !1608, size: 64, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1594, file: !1595, line: 135, baseType: !494, size: 8, offset: 640)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1594, file: !1595, line: 137, baseType: !1620, size: 64, offset: 704)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1622, line: 189, size: 1664, elements: !1623)
!1622 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1623 = !{!1624, !1625, !1628, !1633, !1634, !1637, !1638, !1645, !1646, !1647, !1648, !1651, !1652, !1653, !1654, !1655, !1693, !1714}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1621, file: !1622, line: 190, baseType: !1271, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1621, file: !1622, line: 191, baseType: !1626, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1622, line: 28, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !282, line: 98, baseType: !1489)
!1628 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 192, baseType: !1629, size: 192, offset: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 192, size: 192, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1629, file: !1622, line: 193, baseType: !289, size: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1629, file: !1622, line: 194, baseType: !438, size: 192, align: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1621, file: !1622, line: 199, baseType: !1162, size: 256, offset: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1621, file: !1622, line: 200, baseType: !1635, size: 64, offset: 512)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1622, line: 200, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1621, file: !1622, line: 201, baseType: !570, size: 64, offset: 576)
!1638 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 202, baseType: !1639, size: 64, offset: 640)
!1639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 202, size: 64, elements: !1640)
!1640 = !{!1641, !1644}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1639, file: !1622, line: 203, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1643, line: 8, baseType: !383)
!1643 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1639, file: !1622, line: 204, baseType: !1642, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1621, file: !1622, line: 206, baseType: !1642, size: 64, offset: 704)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1621, file: !1622, line: 207, baseType: !649, size: 32, offset: 768)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1621, file: !1622, line: 208, baseType: !657, size: 32, offset: 800)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1621, file: !1622, line: 209, baseType: !1649, size: 32, offset: 832)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1622, line: 31, baseType: !1650)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !282, line: 104, baseType: !707)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1621, file: !1622, line: 210, baseType: !477, size: 16, offset: 864)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1621, file: !1622, line: 211, baseType: !477, size: 16, offset: 880)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1621, file: !1622, line: 215, baseType: !1246, size: 16, offset: 896)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1621, file: !1622, line: 222, baseType: !317, size: 64, offset: 960)
!1655 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 239, baseType: !1656, size: 320, offset: 1024)
!1656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 239, size: 320, elements: !1657)
!1657 = !{!1658, !1685}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1656, file: !1622, line: 240, baseType: !1659, size: 320)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1622, line: 108, size: 320, elements: !1660)
!1660 = !{!1661, !1662, !1674, !1677, !1684}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1659, file: !1622, line: 110, baseType: !317, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, scope: !1659, file: !1622, line: 111, baseType: !1663, size: 64, offset: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1659, file: !1622, line: 111, size: 64, elements: !1664)
!1664 = !{!1665, !1673}
!1665 = !DIDerivedType(tag: DW_TAG_member, scope: !1663, file: !1622, line: 112, baseType: !1666, size: 64)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1663, file: !1622, line: 112, size: 64, elements: !1667)
!1667 = !{!1668, !1669}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1666, file: !1622, line: 114, baseType: !1038, size: 16)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1666, file: !1622, line: 115, baseType: !1670, size: 48, offset: 16)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 48, elements: !1671)
!1671 = !{!1672}
!1672 = !DISubrange(count: 6)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1663, file: !1622, line: 121, baseType: !317, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1659, file: !1622, line: 123, baseType: !1675, size: 64, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1622, line: 96, flags: DIFlagFwdDecl)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1659, file: !1622, line: 124, baseType: !1678, size: 64, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1622, line: 102, size: 192, elements: !1680)
!1680 = !{!1681, !1682, !1683}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1679, file: !1622, line: 103, baseType: !304, size: 128, align: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1679, file: !1622, line: 104, baseType: !1271, size: 32, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1679, file: !1622, line: 105, baseType: !540, size: 8, offset: 160)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1659, file: !1622, line: 125, baseType: !297, size: 64, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_member, scope: !1656, file: !1622, line: 241, baseType: !1686, size: 320)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1656, file: !1622, line: 241, size: 320, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691, !1692}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1686, file: !1622, line: 242, baseType: !317, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1686, file: !1622, line: 243, baseType: !317, size: 64, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1686, file: !1622, line: 244, baseType: !1675, size: 64, offset: 128)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1686, file: !1622, line: 245, baseType: !1678, size: 64, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1686, file: !1622, line: 246, baseType: !577, size: 64, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 254, baseType: !1694, size: 256, offset: 1344)
!1694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 254, size: 256, elements: !1695)
!1695 = !{!1696, !1702}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1694, file: !1622, line: 255, baseType: !1697, size: 256)
!1697 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1622, line: 128, size: 256, elements: !1698)
!1698 = !{!1699, !1700}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1697, file: !1622, line: 129, baseType: !570, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1697, file: !1622, line: 130, baseType: !1701, size: 256)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 256, elements: !1202)
!1702 = !DIDerivedType(tag: DW_TAG_member, scope: !1694, file: !1622, line: 256, baseType: !1703, size: 256)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1694, file: !1622, line: 256, size: 256, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1703, file: !1622, line: 258, baseType: !289, size: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1703, file: !1622, line: 259, baseType: !1707, size: 128, offset: 128)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1708, line: 22, size: 128, elements: !1709)
!1708 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1709 = !{!1710, !1713}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1707, file: !1708, line: 23, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1708, line: 23, flags: DIFlagFwdDecl)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1707, file: !1708, line: 24, baseType: !317, size: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1621, file: !1622, line: 274, baseType: !1715, size: 64, offset: 1600)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1622, line: 170, size: 192, elements: !1717)
!1717 = !{!1718, !1727, !1728}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1716, file: !1622, line: 171, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1622, line: 165, baseType: !1720)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{!37, !1620, !1723, !1725, !1620}
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1697)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1716, file: !1622, line: 172, baseType: !1620, size: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1716, file: !1622, line: 173, baseType: !1675, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1594, file: !1595, line: 138, baseType: !1620, size: 64, offset: 768)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1594, file: !1595, line: 139, baseType: !1620, size: 64, offset: 832)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1594, file: !1595, line: 140, baseType: !1620, size: 64, offset: 896)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1594, file: !1595, line: 145, baseType: !1733, size: 64, offset: 960)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1735, line: 13, size: 896, elements: !1736)
!1735 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1734, file: !1735, line: 14, baseType: !1271, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1734, file: !1735, line: 15, baseType: !388, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1734, file: !1735, line: 16, baseType: !388, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1734, file: !1735, line: 21, baseType: !376, size: 64, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1734, file: !1735, line: 27, baseType: !317, size: 64, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1734, file: !1735, line: 28, baseType: !317, size: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1734, file: !1735, line: 29, baseType: !376, size: 64, offset: 320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1734, file: !1735, line: 32, baseType: !281, size: 128, offset: 384)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1734, file: !1735, line: 33, baseType: !649, size: 32, offset: 512)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1734, file: !1735, line: 37, baseType: !376, size: 64, offset: 576)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1734, file: !1735, line: 44, baseType: !1748, size: 256, offset: 640)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1749, line: 15, size: 256, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1756, !1757}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1748, file: !1749, line: 16, baseType: !1168)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1748, file: !1749, line: 18, baseType: !37, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1748, file: !1749, line: 19, baseType: !37, size: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1748, file: !1749, line: 20, baseType: !37, size: 32, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1748, file: !1749, line: 21, baseType: !37, size: 32, offset: 96)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1748, file: !1749, line: 22, baseType: !317, size: 64, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1748, file: !1749, line: 23, baseType: !317, size: 64, offset: 192)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1594, file: !1595, line: 146, baseType: !1759, size: 64, offset: 1024)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1761, line: 56, size: 4160, elements: !1762)
!1761 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1762 = !{!1763, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1802, !1803, !1804, !1805, !1806, !1818, !1899, !1900, !1912}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1760, file: !1761, line: 57, baseType: !1764, size: 576)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1761, line: 23, size: 576, elements: !1765)
!1765 = !{!1766, !1767}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1764, file: !1761, line: 24, baseType: !707, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, scope: !1764, file: !1761, line: 25, baseType: !1768, size: 512, offset: 64)
!1768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1764, file: !1761, line: 25, size: 512, elements: !1769)
!1769 = !{!1770, !1779}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1768, file: !1761, line: 26, baseType: !1771, size: 480)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 480, elements: !1777)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1761, line: 17, size: 96, elements: !1773)
!1773 = !{!1774, !1775, !1776}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1772, file: !1761, line: 18, baseType: !707, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1772, file: !1761, line: 19, baseType: !707, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1772, file: !1761, line: 20, baseType: !707, size: 32, offset: 64)
!1777 = !{!1778}
!1778 = !DISubrange(count: 5)
!1779 = !DIDerivedType(tag: DW_TAG_member, scope: !1768, file: !1761, line: 27, baseType: !1780, size: 128)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1768, file: !1761, line: 27, size: 128, elements: !1781)
!1781 = !{!1782, !1784}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1780, file: !1761, line: 28, baseType: !1783, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1780, file: !1761, line: 29, baseType: !1783, size: 64, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1760, file: !1761, line: 58, baseType: !1764, size: 576, offset: 576)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1760, file: !1761, line: 59, baseType: !1764, size: 576, offset: 1152)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1760, file: !1761, line: 60, baseType: !388, size: 32, offset: 1728)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1760, file: !1761, line: 61, baseType: !1759, size: 64, offset: 1792)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1760, file: !1761, line: 62, baseType: !37, size: 32, offset: 1856)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1760, file: !1761, line: 63, baseType: !649, size: 32, offset: 1888)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1760, file: !1761, line: 64, baseType: !657, size: 32, offset: 1920)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1760, file: !1761, line: 65, baseType: !1793, size: 192, offset: 1984)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1794, line: 7, size: 192, elements: !1795)
!1794 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1795 = !{!1796, !1797, !1801}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1793, file: !1794, line: 8, baseType: !376, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1793, file: !1794, line: 9, baseType: !1798, size: 64, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1800)
!1800 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1794, line: 5, flags: DIFlagFwdDecl)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1793, file: !1794, line: 10, baseType: !7, size: 32, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1760, file: !1761, line: 66, baseType: !317, size: 64, offset: 2176)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1760, file: !1761, line: 74, baseType: !289, size: 128, offset: 2240)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1760, file: !1761, line: 75, baseType: !1620, size: 64, offset: 2368)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1760, file: !1761, line: 76, baseType: !1162, size: 256, offset: 2432)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1760, file: !1761, line: 83, baseType: !1807, size: 256, offset: 2688)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1808, line: 102, size: 256, elements: !1809)
!1808 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1809 = !{!1810, !1811, !1812}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1807, file: !1808, line: 103, baseType: !376, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1807, file: !1808, line: 104, baseType: !289, size: 128, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1807, file: !1808, line: 105, baseType: !1813, size: 64, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1808, line: 21, baseType: !1814)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{null, !1817}
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1760, file: !1761, line: 85, baseType: !1819, size: 768, offset: 2944)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1820, line: 156, size: 768, elements: !1821)
!1820 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1821 = !{!1822, !1827}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1819, file: !1820, line: 157, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!37, !1826}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1819, file: !1820, line: 158, baseType: !1828, size: 704, offset: 64)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1820, line: 150, size: 704, elements: !1829)
!1829 = !{!1830, !1898}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1828, file: !1820, line: 152, baseType: !1831, size: 640)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1820, line: 131, size: 640, elements: !1832)
!1832 = !{!1833, !1866, !1867, !1868, !1888, !1889, !1891, !1897}
!1833 = !DIDerivedType(tag: DW_TAG_member, scope: !1831, file: !1820, line: 132, baseType: !1834, size: 192)
!1834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1831, file: !1820, line: 132, size: 192, elements: !1835)
!1835 = !{!1836, !1865}
!1836 = !DIDerivedType(tag: DW_TAG_member, scope: !1834, file: !1820, line: 133, baseType: !1837, size: 192)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1834, file: !1820, line: 133, size: 192, elements: !1838)
!1838 = !{!1839, !1862, !1863, !1864}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1837, file: !1820, line: 134, baseType: !1840, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1820, line: 112, size: 512, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1847, !1848, !1854, !1860, !1861}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1841, file: !1820, line: 113, baseType: !297, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1841, file: !1820, line: 114, baseType: !570, size: 64, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1841, file: !1820, line: 115, baseType: !37, size: 32, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1841, file: !1820, line: 116, baseType: !646, size: 16, offset: 160)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1841, file: !1820, line: 117, baseType: !1840, size: 64, offset: 192)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1841, file: !1820, line: 118, baseType: !1849, size: 64, offset: 256)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1820, line: 47, baseType: !1851)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!37, !1840, !37, !570, !1853, !969}
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1841, file: !1820, line: 119, baseType: !1855, size: 64, offset: 320)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1820, line: 94, size: 192, elements: !1857)
!1857 = !{!1858, !1859}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1856, file: !1820, line: 95, baseType: !388, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1856, file: !1820, line: 96, baseType: !1100, size: 128, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1841, file: !1820, line: 120, baseType: !570, size: 64, offset: 384)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1841, file: !1820, line: 121, baseType: !570, size: 64, offset: 448)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1837, file: !1820, line: 135, baseType: !37, size: 32, offset: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1837, file: !1820, line: 136, baseType: !37, size: 32, offset: 96)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1837, file: !1820, line: 137, baseType: !37, size: 32, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1834, file: !1820, line: 139, baseType: !304, size: 128, align: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1831, file: !1820, line: 141, baseType: !1546, size: 64, offset: 192)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1831, file: !1820, line: 142, baseType: !1840, size: 64, offset: 256)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1831, file: !1820, line: 143, baseType: !1869, size: 64, offset: 320)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1820, line: 161, size: 960, elements: !1871)
!1871 = !{!1872, !1873, !1877, !1884}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1870, file: !1820, line: 162, baseType: !1819, size: 768)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1870, file: !1820, line: 163, baseType: !1874, size: 64, offset: 768)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!1826, !1869}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1870, file: !1820, line: 164, baseType: !1878, size: 64, offset: 832)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{null, !1881, !1840, !1882, !1883}
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1870, file: !1820, line: 167, baseType: !1885, size: 64, offset: 896)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!37, !1881, !1840}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1831, file: !1820, line: 144, baseType: !1826, size: 64, offset: 384)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1831, file: !1820, line: 145, baseType: !1890, size: 64, offset: 448)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1831, file: !1820, line: 146, baseType: !1892, size: 64, offset: 512)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1820, line: 124, size: 256, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1893, file: !1820, line: 125, baseType: !438, size: 192, align: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1893, file: !1820, line: 126, baseType: !1881, size: 64, offset: 192)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1831, file: !1820, line: 147, baseType: !857, size: 64, offset: 576)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1828, file: !1820, line: 153, baseType: !1133, size: 64, offset: 640)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1760, file: !1761, line: 86, baseType: !1881, size: 64, offset: 3712)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1760, file: !1761, line: 88, baseType: !1901, size: 64, offset: 3776)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1761, line: 92, size: 576, elements: !1903)
!1903 = !{!1904, !1905, !1906, !1907, !1908}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1902, file: !1761, line: 93, baseType: !281, size: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1902, file: !1761, line: 94, baseType: !1759, size: 64, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1902, file: !1761, line: 95, baseType: !649, size: 32, offset: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1902, file: !1761, line: 96, baseType: !37, size: 32, offset: 224)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1902, file: !1761, line: 97, baseType: !1909, size: 320, offset: 256)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 320, elements: !1910)
!1910 = !{!1911}
!1911 = !DISubrange(count: 10)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1760, file: !1761, line: 89, baseType: !1913, size: 320, offset: 3840)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 320, elements: !1910)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1594, file: !1595, line: 147, baseType: !1915, size: 64, offset: 1088)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1595, line: 25, size: 64, elements: !1917)
!1917 = !{!1918, !1919, !1920}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1916, file: !1595, line: 26, baseType: !388, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1916, file: !1595, line: 27, baseType: !37, size: 32, offset: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1916, file: !1595, line: 28, baseType: !1921, offset: 64)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, elements: !1922)
!1922 = !{!1923}
!1923 = !DISubrange(count: 0)
!1924 = !DIDerivedType(tag: DW_TAG_member, scope: !1594, file: !1595, line: 149, baseType: !1925, size: 128, offset: 1152)
!1925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1594, file: !1595, line: 149, size: 128, elements: !1926)
!1926 = !{!1927, !1928}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1925, file: !1595, line: 150, baseType: !37, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1925, file: !1595, line: 151, baseType: !304, size: 128, align: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1258, file: !1259, line: 926, baseType: !1592, size: 64, offset: 8576)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1258, file: !1259, line: 929, baseType: !1592, size: 64, offset: 8640)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1258, file: !1259, line: 933, baseType: !1620, size: 64, offset: 8704)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1258, file: !1259, line: 943, baseType: !272, size: 128, offset: 8768)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1258, file: !1259, line: 945, baseType: !1934, size: 64, offset: 8896)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1259, line: 49, flags: DIFlagFwdDecl)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1258, file: !1259, line: 956, baseType: !1937, size: 64, offset: 8960)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1259, line: 45, flags: DIFlagFwdDecl)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1258, file: !1259, line: 959, baseType: !1940, size: 64, offset: 9024)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1259, line: 959, flags: DIFlagFwdDecl)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1258, file: !1259, line: 962, baseType: !1943, size: 64, offset: 9088)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1259, line: 66, flags: DIFlagFwdDecl)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1258, file: !1259, line: 966, baseType: !1946, size: 64, offset: 9152)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1948, line: 31, size: 576, elements: !1949)
!1948 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1949 = !{!1950, !1951, !1954, !1957, !1960, !1961, !3565, !3568, !3569}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1947, file: !1948, line: 32, baseType: !388, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1947, file: !1948, line: 33, baseType: !1952, size: 64, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1948, line: 9, flags: DIFlagFwdDecl)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1947, file: !1948, line: 34, baseType: !1955, size: 64, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1948, line: 10, flags: DIFlagFwdDecl)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1947, file: !1948, line: 35, baseType: !1958, size: 64, offset: 192)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1948, line: 8, flags: DIFlagFwdDecl)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1947, file: !1948, line: 36, baseType: !1539, size: 64, offset: 256)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1947, file: !1948, line: 37, baseType: !1962, size: 64, offset: 320)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1964, line: 56, size: 16896, elements: !1965)
!1964 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1965 = !{!1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1994, !1995, !1996, !2000, !2001, !2002, !2003, !2004, !2007, !2009, !2010, !2025, !2026, !2027, !2028, !2038, !2108, !2114, !2120, !2133, !2514, !2890, !2891, !2894, !3537, !3538, !3564}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !1963, file: !1964, line: 60, baseType: !1271, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1963, file: !1964, line: 63, baseType: !1271, size: 32, offset: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !1963, file: !1964, line: 66, baseType: !729, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !1963, file: !1964, line: 68, baseType: !7, size: 32, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !1963, file: !1964, line: 70, baseType: !7, size: 32, offset: 96)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !1963, file: !1964, line: 71, baseType: !37, size: 32, offset: 128)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !1963, file: !1964, line: 73, baseType: !729, offset: 160)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !1963, file: !1964, line: 74, baseType: !388, size: 32, offset: 160)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1963, file: !1964, line: 76, baseType: !289, size: 128, offset: 192)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !1963, file: !1964, line: 77, baseType: !289, size: 128, offset: 320)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !1963, file: !1964, line: 83, baseType: !992, size: 64, offset: 448)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !1963, file: !1964, line: 86, baseType: !1678, size: 64, offset: 512)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1963, file: !1964, line: 88, baseType: !1759, size: 64, offset: 576)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1963, file: !1964, line: 89, baseType: !1901, size: 64, offset: 640)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !1963, file: !1964, line: 90, baseType: !1981, size: 192, offset: 704)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1982, line: 19, size: 192, elements: !1983)
!1982 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1983 = !{!1984, !1992, !1993}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1981, file: !1982, line: 20, baseType: !1985, size: 128)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1986, line: 292, size: 128, elements: !1987)
!1986 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1987 = !{!1988, !1989, !1991}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1985, file: !1986, line: 293, baseType: !729)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1985, file: !1986, line: 295, baseType: !1990, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !282, line: 148, baseType: !7)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1985, file: !1986, line: 296, baseType: !570, size: 64, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1981, file: !1982, line: 21, baseType: !7, size: 32, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1981, file: !1982, line: 22, baseType: !7, size: 32, offset: 160)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1963, file: !1964, line: 92, baseType: !1793, size: 192, offset: 896)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !1963, file: !1964, line: 94, baseType: !289, size: 128, offset: 1088)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !1963, file: !1964, line: 95, baseType: !1997, size: 64, offset: 1216)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !1999, line: 123, flags: DIFlagFwdDecl)
!1999 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !1963, file: !1964, line: 96, baseType: !1997, size: 64, offset: 1280)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1963, file: !1964, line: 99, baseType: !1819, size: 768, offset: 1344)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !1963, file: !1964, line: 102, baseType: !450, size: 64, offset: 2112)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !1963, file: !1964, line: 103, baseType: !450, size: 64, offset: 2176)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !1963, file: !1964, line: 105, baseType: !2005, size: 64, offset: 2240)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !1964, line: 48, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !1963, file: !1964, line: 107, baseType: !2008, size: 64, offset: 2304)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !1963, file: !1964, line: 108, baseType: !2008, size: 64, offset: 2368)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !1963, file: !1964, line: 109, baseType: !2011, size: 64, offset: 2432)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !2012, line: 70, size: 64, elements: !2013)
!2012 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2013 = !{!2014}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2011, file: !2012, line: 71, baseType: !2015, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2012, line: 54, size: 192, elements: !2017)
!2017 = !{!2018, !2023, !2024}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2016, file: !2012, line: 55, baseType: !2019, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2012, line: 51, baseType: !2020)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!37, !2015, !317, !570}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2016, file: !2012, line: 56, baseType: !2015, size: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2016, file: !2012, line: 57, baseType: !37, size: 32, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !1963, file: !1964, line: 114, baseType: !707, size: 32, offset: 2496)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !1963, file: !1964, line: 116, baseType: !295, size: 64, offset: 2560)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !1963, file: !1964, line: 119, baseType: !289, size: 128, offset: 2624)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !1963, file: !1964, line: 121, baseType: !2029, size: 256, offset: 2752)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !2030, line: 8, size: 256, elements: !2031)
!2030 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!2031 = !{!2032, !2033, !2034, !2035}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !2029, file: !2030, line: 10, baseType: !1881, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !2029, file: !2030, line: 12, baseType: !37, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !2029, file: !2030, line: 15, baseType: !539, size: 64, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !2029, file: !2030, line: 16, baseType: !2036, size: 64, offset: 192)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !2030, line: 6, flags: DIFlagFwdDecl)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !1963, file: !1964, line: 122, baseType: !2039, size: 832, offset: 3008)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !2040, line: 7, size: 832, elements: !2041)
!2040 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!2041 = !{!2042, !2049, !2060, !2068, !2076, !2077, !2085, !2093, !2094, !2095, !2096, !2097, !2103}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !2039, file: !2040, line: 8, baseType: !2043, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !2045, line: 92, size: 1024, elements: !2046)
!2045 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!2046 = !{!2047}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2044, file: !2045, line: 93, baseType: !2048, size: 1024)
!2048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 1024, elements: !274)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !2039, file: !2040, line: 9, baseType: !2050, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !2045, line: 51, size: 2368, elements: !2052)
!2052 = !{!2053, !2057}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2051, file: !2045, line: 53, baseType: !2054, size: 2368)
!2054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 2368, elements: !2055)
!2055 = !{!2056}
!2056 = !DISubrange(count: 37)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !2051, file: !2045, line: 54, baseType: !2058, offset: 2368)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !2059, line: 68, elements: !743)
!2059 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !2039, file: !2040, line: 10, baseType: !2061, size: 64, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !2045, line: 104, size: 7936, elements: !2063)
!2063 = !{!2064}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2062, file: !2045, line: 105, baseType: !2065, size: 7936)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 7936, elements: !2066)
!2066 = !{!2067}
!2067 = !DISubrange(count: 124)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !2039, file: !2040, line: 11, baseType: !2069, size: 64, offset: 192)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !2045, line: 98, size: 576, elements: !2071)
!2071 = !{!2072}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2070, file: !2045, line: 99, baseType: !2073, size: 576)
!2073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 576, elements: !2074)
!2074 = !{!2075}
!2075 = !DISubrange(count: 9)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !2039, file: !2040, line: 12, baseType: !2069, size: 64, offset: 256)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !2039, file: !2040, line: 13, baseType: !2078, size: 64, offset: 320)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !2045, line: 59, size: 1792, elements: !2080)
!2080 = !{!2081}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2079, file: !2045, line: 60, baseType: !2082, size: 1792)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 1792, elements: !2083)
!2083 = !{!2084}
!2084 = !DISubrange(count: 28)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !2039, file: !2040, line: 14, baseType: !2086, size: 64, offset: 384)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !2045, line: 64, size: 32768, elements: !2088)
!2088 = !{!2089}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2087, file: !2045, line: 65, baseType: !2090, size: 32768)
!2090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 32768, elements: !2091)
!2091 = !{!2092}
!2092 = !DISubrange(count: 512)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !2039, file: !2040, line: 17, baseType: !1997, size: 64, offset: 448)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !2039, file: !2040, line: 18, baseType: !2069, size: 64, offset: 512)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !2039, file: !2040, line: 19, baseType: !2069, size: 64, offset: 576)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !2039, file: !2040, line: 20, baseType: !2050, size: 64, offset: 640)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !2039, file: !2040, line: 21, baseType: !2098, size: 64, offset: 704)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !2045, line: 71, size: 384, elements: !2100)
!2100 = !{!2101}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2099, file: !2045, line: 72, baseType: !2102, size: 384)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 384, elements: !1671)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !2039, file: !2040, line: 22, baseType: !2104, size: 64, offset: 768)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !2045, line: 81, size: 32768, elements: !2106)
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2105, file: !2045, line: 82, baseType: !2090, size: 32768)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !1963, file: !1964, line: 123, baseType: !2109, size: 256, offset: 3840)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !2110, line: 11, size: 256, elements: !2111)
!2110 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !2109, file: !2110, line: 12, baseType: !954, size: 192)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !2109, file: !2110, line: 13, baseType: !857, size: 64, offset: 192)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !1963, file: !1964, line: 124, baseType: !2115, size: 128, offset: 4096)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !2116, line: 9, size: 128, elements: !2117)
!2116 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!2117 = !{!2118, !2119}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !2115, file: !2116, line: 10, baseType: !37, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !2115, file: !2116, line: 11, baseType: !1881, size: 64, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !1963, file: !1964, line: 125, baseType: !2121, size: 512, offset: 4224)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !2122, line: 11, size: 512, elements: !2123)
!2122 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2123 = !{!2124, !2125, !2126, !2127, !2128}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2121, file: !2122, line: 12, baseType: !1133, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !2121, file: !2122, line: 13, baseType: !2008, size: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2121, file: !2122, line: 15, baseType: !7, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !2121, file: !2122, line: 16, baseType: !707, size: 32, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !2121, file: !2122, line: 17, baseType: !2129, size: 320, offset: 192)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !2012, line: 65, size: 320, elements: !2130)
!2130 = !{!2131, !2132}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !2129, file: !2012, line: 66, baseType: !1162, size: 256)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2129, file: !2012, line: 67, baseType: !2015, size: 64, offset: 256)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !1963, file: !1964, line: 126, baseType: !2134, size: 5440, offset: 4736)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !2135, line: 43, size: 5440, elements: !2136)
!2135 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!2136 = !{!2137, !2138, !2139, !2140, !2141, !2142, !2145, !2146, !2149, !2150, !2151, !2152, !2153, !2154, !2156, !2157, !2160, !2161, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2387, !2388, !2389, !2390, !2391, !2399, !2400, !2401, !2405, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2425, !2426, !2428, !2429, !2503, !2504, !2505, !2506, !2507}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !2134, file: !2135, line: 45, baseType: !1881, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2134, file: !2135, line: 46, baseType: !1881, size: 64, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !2134, file: !2135, line: 47, baseType: !1881, size: 64, offset: 128)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2134, file: !2135, line: 48, baseType: !1881, size: 64, offset: 192)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !2134, file: !2135, line: 49, baseType: !1881, size: 64, offset: 256)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2134, file: !2135, line: 51, baseType: !2143, size: 64, offset: 320)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !2135, line: 16, flags: DIFlagFwdDecl)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2134, file: !2135, line: 52, baseType: !2143, size: 64, offset: 384)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !2134, file: !2135, line: 53, baseType: !2147, size: 64, offset: 448)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !2135, line: 53, flags: DIFlagFwdDecl)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !2134, file: !2135, line: 54, baseType: !954, size: 192, offset: 512)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !2134, file: !2135, line: 62, baseType: !540, size: 8, offset: 704)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2134, file: !2135, line: 66, baseType: !2008, size: 64, offset: 768)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !2134, file: !2135, line: 67, baseType: !540, size: 8, offset: 832)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !2134, file: !2135, line: 68, baseType: !450, size: 64, offset: 896)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2134, file: !2135, line: 70, baseType: !2155, size: 64, offset: 960)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2134, file: !2135, line: 71, baseType: !450, size: 64, offset: 1024)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2134, file: !2135, line: 73, baseType: !2158, size: 64, offset: 1088)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !2135, line: 73, flags: DIFlagFwdDecl)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2134, file: !2135, line: 74, baseType: !2155, size: 64, offset: 1152)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2134, file: !2135, line: 75, baseType: !2162, size: 64, offset: 1216)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !2164, line: 9, size: 1728, elements: !2165)
!2164 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!2165 = !{!2166, !2167, !2168, !2169, !2170, !2298, !2299, !2300, !2301, !2302}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !2163, file: !2164, line: 11, baseType: !513, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !2163, file: !2164, line: 12, baseType: !513, size: 64, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2163, file: !2164, line: 13, baseType: !37, size: 32, offset: 128)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !2163, file: !2164, line: 14, baseType: !37, size: 32, offset: 160)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2163, file: !2164, line: 15, baseType: !2171, size: 64, offset: 192)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !2164, line: 98, size: 960, elements: !2173)
!2173 = !{!2174, !2175, !2246, !2250, !2251, !2254, !2255, !2296, !2297}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !2172, file: !2164, line: 99, baseType: !7, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2172, file: !2164, line: 101, baseType: !2176, size: 64, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{null, !2179, !2244}
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !2164, line: 77, size: 1408, elements: !2181)
!2181 = !{!2182, !2188, !2220, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2180, file: !2164, line: 78, baseType: !2183, size: 64)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !2184, line: 17, size: 64, elements: !2185)
!2184 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!2185 = !{!2186}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2183, file: !2184, line: 18, baseType: !2187, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2180, file: !2164, line: 82, baseType: !2189, size: 352, offset: 64)
!2189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2180, file: !2164, line: 79, size: 352, elements: !2190)
!2190 = !{!2191, !2200}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2189, file: !2164, line: 80, baseType: !2192, size: 160)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !2164, line: 41, size: 160, elements: !2193)
!2193 = !{!2194, !2195, !2196, !2197, !2198, !2199}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2192, file: !2164, line: 42, baseType: !466, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2192, file: !2164, line: 43, baseType: !466, size: 32, offset: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2192, file: !2164, line: 44, baseType: !707, size: 32, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !2192, file: !2164, line: 45, baseType: !707, size: 32, offset: 96)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2192, file: !2164, line: 46, baseType: !489, size: 16, offset: 128)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2192, file: !2164, line: 47, baseType: !1038, size: 16, offset: 144)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2189, file: !2164, line: 81, baseType: !2201, size: 352)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !2164, line: 50, size: 352, elements: !2202)
!2202 = !{!2203, !2216, !2217, !2218, !2219}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2201, file: !2164, line: 51, baseType: !2204, size: 128)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !2205, line: 33, size: 128, elements: !2206)
!2205 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!2206 = !{!2207}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !2204, file: !2205, line: 40, baseType: !2208, size: 128)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2204, file: !2205, line: 34, size: 128, elements: !2209)
!2209 = !{!2210, !2212, !2214}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !2208, file: !2205, line: 35, baseType: !2211, size: 128)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 128, elements: !274)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !2208, file: !2205, line: 37, baseType: !2213, size: 128)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 128, elements: !1371)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !2208, file: !2205, line: 38, baseType: !2215, size: 128)
!2215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 128, elements: !1202)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2201, file: !2164, line: 52, baseType: !2204, size: 128, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2201, file: !2164, line: 53, baseType: !707, size: 32, offset: 256)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2201, file: !2164, line: 54, baseType: !466, size: 32, offset: 288)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !2201, file: !2164, line: 55, baseType: !707, size: 32, offset: 320)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2180, file: !2164, line: 83, baseType: !2221, size: 320, offset: 448)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2222, line: 11, size: 320, elements: !2223)
!2222 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2223 = !{!2224, !2225, !2226, !2231}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2221, file: !2222, line: 16, baseType: !281, size: 128)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2221, file: !2222, line: 17, baseType: !317, size: 64, offset: 128)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2221, file: !2222, line: 18, baseType: !2227, size: 64, offset: 192)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = !DISubroutineType(types: !2229)
!2229 = !{null, !2230}
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2221, file: !2222, line: 19, baseType: !707, size: 32, offset: 256)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2180, file: !2164, line: 84, baseType: !729, offset: 768)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2180, file: !2164, line: 85, baseType: !1271, size: 32, offset: 768)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !2180, file: !2164, line: 86, baseType: !1133, size: 64, offset: 832)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !2180, file: !2164, line: 87, baseType: !420, size: 64, offset: 896)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !2180, file: !2164, line: 88, baseType: !420, size: 64, offset: 960)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2180, file: !2164, line: 89, baseType: !1341, size: 64, offset: 1024)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2180, file: !2164, line: 90, baseType: !37, size: 32, offset: 1088)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !2180, file: !2164, line: 91, baseType: !37, size: 32, offset: 1120)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2180, file: !2164, line: 92, baseType: !1398, size: 8, offset: 1152)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2180, file: !2164, line: 93, baseType: !1038, size: 16, offset: 1168)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2180, file: !2164, line: 94, baseType: !2162, size: 64, offset: 1216)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2180, file: !2164, line: 95, baseType: !304, size: 128, align: 64, offset: 1280)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2172, file: !2164, line: 103, baseType: !2247, size: 64, offset: 128)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{null, !2179}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !2172, file: !2164, line: 104, baseType: !2227, size: 64, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !2172, file: !2164, line: 105, baseType: !2252, size: 64, offset: 256)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !626, line: 117, flags: DIFlagFwdDecl)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !2172, file: !2164, line: 106, baseType: !297, size: 64, offset: 320)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !2172, file: !2164, line: 107, baseType: !2256, size: 320, offset: 384)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !2184, line: 56, size: 320, elements: !2257)
!2257 = !{!2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2270, !2272}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !2256, file: !2184, line: 57, baseType: !1038, size: 16)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2256, file: !2184, line: 58, baseType: !1038, size: 16, offset: 16)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !2256, file: !2184, line: 59, baseType: !1038, size: 16, offset: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !2256, file: !2184, line: 60, baseType: !1038, size: 16, offset: 48)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2256, file: !2184, line: 61, baseType: !7, size: 32, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !2256, file: !2184, line: 62, baseType: !1038, size: 16, offset: 96)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !2256, file: !2184, line: 63, baseType: !540, size: 8, offset: 112)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !2256, file: !2184, line: 64, baseType: !2266, size: 64, offset: 128)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !2184, line: 38, baseType: !2267)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!707, !2244, !707, !707}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !2256, file: !2184, line: 65, baseType: !2271, size: 64, offset: 192)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !2184, line: 39, baseType: !2267)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !2256, file: !2184, line: 66, baseType: !2273, size: 64, offset: 256)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !2184, line: 40, baseType: !2274)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DISubroutineType(types: !2276)
!2276 = !{!37, !2277, !2244}
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !2184, line: 33, size: 128, elements: !2279)
!2279 = !{!2280, !2295}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2278, file: !2184, line: 34, baseType: !2281, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !2184, line: 81, size: 1024, elements: !2283)
!2283 = !{!2284, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2282, file: !2184, line: 82, baseType: !2285, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !2184, line: 26, flags: DIFlagFwdDecl)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2282, file: !2184, line: 83, baseType: !7, size: 32, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !2282, file: !2184, line: 84, baseType: !7, size: 32, offset: 96)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2282, file: !2184, line: 85, baseType: !2256, size: 320, offset: 128)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !2282, file: !2184, line: 86, baseType: !540, size: 8, offset: 448)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2282, file: !2184, line: 87, baseType: !1807, size: 256, offset: 512)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2282, file: !2184, line: 88, baseType: !954, size: 192, offset: 768)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2282, file: !2184, line: 89, baseType: !729, offset: 960)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !2282, file: !2184, line: 90, baseType: !388, size: 32, offset: 960)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2278, file: !2184, line: 35, baseType: !2244, size: 64, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2172, file: !2164, line: 108, baseType: !1271, size: 32, offset: 704)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2172, file: !2164, line: 109, baseType: !1547, size: 192, offset: 768)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2163, file: !2164, line: 16, baseType: !1962, size: 64, offset: 256)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2163, file: !2164, line: 17, baseType: !540, size: 8, offset: 320)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !2163, file: !2164, line: 19, baseType: !2282, size: 1024, offset: 384)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2163, file: !2164, line: 22, baseType: !376, size: 64, offset: 1408)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !2163, file: !2164, line: 23, baseType: !1807, size: 256, offset: 1472)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !2134, file: !2135, line: 87, baseType: !37, size: 32, offset: 1280)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !2134, file: !2135, line: 88, baseType: !37, size: 32, offset: 1312)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !2134, file: !2135, line: 89, baseType: !37, size: 32, offset: 1344)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !2134, file: !2135, line: 90, baseType: !37, size: 32, offset: 1376)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !2134, file: !2135, line: 91, baseType: !37, size: 32, offset: 1408)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !2134, file: !2135, line: 92, baseType: !37, size: 32, offset: 1440)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !2134, file: !2135, line: 94, baseType: !2310, size: 128, offset: 1472)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !2135, line: 21, size: 128, elements: !2311)
!2311 = !{!2312, !2318, !2320}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2310, file: !2135, line: 22, baseType: !2313, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !680, line: 805, baseType: !2314)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 798, size: 32, elements: !2315)
!2315 = !{!2316, !2317}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2314, file: !680, line: 803, baseType: !679, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2314, file: !680, line: 804, baseType: !729, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2310, file: !2135, line: 23, baseType: !2319, size: 64, offset: 32)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 64, elements: !478)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !2310, file: !2135, line: 24, baseType: !540, size: 8, offset: 96)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !2134, file: !2135, line: 96, baseType: !37, size: 32, offset: 1600)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !2134, file: !2135, line: 97, baseType: !37, size: 32, offset: 1632)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !2134, file: !2135, line: 99, baseType: !37, size: 32, offset: 1664)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !2134, file: !2135, line: 100, baseType: !37, size: 32, offset: 1696)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !2134, file: !2135, line: 101, baseType: !37, size: 32, offset: 1728)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !2134, file: !2135, line: 102, baseType: !37, size: 32, offset: 1760)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !2134, file: !2135, line: 103, baseType: !37, size: 32, offset: 1792)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !2134, file: !2135, line: 104, baseType: !37, size: 32, offset: 1824)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !2134, file: !2135, line: 106, baseType: !37, size: 32, offset: 1856)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !2134, file: !2135, line: 107, baseType: !37, size: 32, offset: 1888)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !2134, file: !2135, line: 111, baseType: !37, size: 32, offset: 1920)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !2134, file: !2135, line: 112, baseType: !37, size: 32, offset: 1952)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !2134, file: !2135, line: 114, baseType: !37, size: 32, offset: 1984)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !2134, file: !2135, line: 116, baseType: !37, size: 32, offset: 2016)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !2134, file: !2135, line: 117, baseType: !37, size: 32, offset: 2048)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !2134, file: !2135, line: 121, baseType: !37, size: 32, offset: 2080)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !2134, file: !2135, line: 122, baseType: !37, size: 32, offset: 2112)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !2134, file: !2135, line: 123, baseType: !37, size: 32, offset: 2144)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !2134, file: !2135, line: 124, baseType: !37, size: 32, offset: 2176)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !2134, file: !2135, line: 125, baseType: !37, size: 32, offset: 2208)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !2134, file: !2135, line: 126, baseType: !707, size: 32, offset: 2240)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !2134, file: !2135, line: 128, baseType: !37, size: 32, offset: 2272)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !2134, file: !2135, line: 129, baseType: !37, size: 32, offset: 2304)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !2134, file: !2135, line: 130, baseType: !37, size: 32, offset: 2336)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !2134, file: !2135, line: 132, baseType: !37, size: 32, offset: 2368)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !2134, file: !2135, line: 133, baseType: !37, size: 32, offset: 2400)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !2134, file: !2135, line: 134, baseType: !37, size: 32, offset: 2432)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !2134, file: !2135, line: 135, baseType: !37, size: 32, offset: 2464)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !2134, file: !2135, line: 136, baseType: !37, size: 32, offset: 2496)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !2134, file: !2135, line: 137, baseType: !37, size: 32, offset: 2528)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !2134, file: !2135, line: 138, baseType: !37, size: 32, offset: 2560)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !2134, file: !2135, line: 139, baseType: !37, size: 32, offset: 2592)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !2134, file: !2135, line: 140, baseType: !7, size: 32, offset: 2624)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !2134, file: !2135, line: 141, baseType: !37, size: 32, offset: 2656)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !2134, file: !2135, line: 142, baseType: !37, size: 32, offset: 2688)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !2134, file: !2135, line: 143, baseType: !37, size: 32, offset: 2720)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !2134, file: !2135, line: 144, baseType: !37, size: 32, offset: 2752)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !2134, file: !2135, line: 145, baseType: !37, size: 32, offset: 2784)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !2134, file: !2135, line: 146, baseType: !37, size: 32, offset: 2816)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !2134, file: !2135, line: 147, baseType: !37, size: 32, offset: 2848)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !2134, file: !2135, line: 148, baseType: !37, size: 32, offset: 2880)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !2134, file: !2135, line: 149, baseType: !37, size: 32, offset: 2912)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !2134, file: !2135, line: 150, baseType: !37, size: 32, offset: 2944)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !2134, file: !2135, line: 151, baseType: !37, size: 32, offset: 2976)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !2134, file: !2135, line: 152, baseType: !37, size: 32, offset: 3008)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !2134, file: !2135, line: 153, baseType: !37, size: 32, offset: 3040)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !2134, file: !2135, line: 154, baseType: !37, size: 32, offset: 3072)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !2134, file: !2135, line: 155, baseType: !37, size: 32, offset: 3104)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !2134, file: !2135, line: 156, baseType: !37, size: 32, offset: 3136)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !2134, file: !2135, line: 157, baseType: !37, size: 32, offset: 3168)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !2134, file: !2135, line: 158, baseType: !37, size: 32, offset: 3200)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !2134, file: !2135, line: 159, baseType: !37, size: 32, offset: 3232)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !2134, file: !2135, line: 160, baseType: !37, size: 32, offset: 3264)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !2134, file: !2135, line: 161, baseType: !37, size: 32, offset: 3296)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !2134, file: !2135, line: 162, baseType: !37, size: 32, offset: 3328)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !2134, file: !2135, line: 163, baseType: !37, size: 32, offset: 3360)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !2134, file: !2135, line: 164, baseType: !37, size: 32, offset: 3392)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !2134, file: !2135, line: 165, baseType: !37, size: 32, offset: 3424)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !2134, file: !2135, line: 166, baseType: !37, size: 32, offset: 3456)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !2134, file: !2135, line: 167, baseType: !37, size: 32, offset: 3488)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !2134, file: !2135, line: 168, baseType: !37, size: 32, offset: 3520)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !2134, file: !2135, line: 169, baseType: !37, size: 32, offset: 3552)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !2134, file: !2135, line: 170, baseType: !37, size: 32, offset: 3584)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !2134, file: !2135, line: 171, baseType: !37, size: 32, offset: 3616)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !2134, file: !2135, line: 172, baseType: !2386, size: 96, offset: 3648)
!2386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 96, elements: !867)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !2134, file: !2135, line: 173, baseType: !2386, size: 96, offset: 3744)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !2134, file: !2135, line: 174, baseType: !37, size: 32, offset: 3840)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !2134, file: !2135, line: 175, baseType: !317, size: 64, offset: 3904)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !2134, file: !2135, line: 176, baseType: !317, size: 64, offset: 3968)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !2134, file: !2135, line: 177, baseType: !2392, size: 192, offset: 4032)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !2135, line: 34, size: 192, elements: !2393)
!2393 = !{!2394, !2395, !2398}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !2392, file: !2135, line: 35, baseType: !388, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !2392, file: !2135, line: 37, baseType: !2396, size: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !2135, line: 32, flags: DIFlagFwdDecl)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !2392, file: !2135, line: 38, baseType: !37, size: 32, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !2134, file: !2135, line: 178, baseType: !37, size: 32, offset: 4224)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !2134, file: !2135, line: 179, baseType: !37, size: 32, offset: 4256)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !2134, file: !2135, line: 180, baseType: !2402, size: 64, offset: 4288)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2404)
!2404 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !2135, line: 180, flags: DIFlagFwdDecl)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !2134, file: !2135, line: 181, baseType: !2406, size: 64, offset: 4352)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !2135, line: 41, flags: DIFlagFwdDecl)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !2134, file: !2135, line: 182, baseType: !729, offset: 4416)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !2134, file: !2135, line: 183, baseType: !7, size: 32, offset: 4416)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !2134, file: !2135, line: 184, baseType: !388, size: 32, offset: 4448)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !2134, file: !2135, line: 185, baseType: !317, size: 64, offset: 4480)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !2134, file: !2135, line: 186, baseType: !37, size: 32, offset: 4544)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !2134, file: !2135, line: 188, baseType: !37, size: 32, offset: 4576)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !2134, file: !2135, line: 189, baseType: !37, size: 32, offset: 4608)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !2134, file: !2135, line: 195, baseType: !37, size: 32, offset: 4640)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !2134, file: !2135, line: 196, baseType: !37, size: 32, offset: 4672)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !2134, file: !2135, line: 197, baseType: !37, size: 32, offset: 4704)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !2134, file: !2135, line: 198, baseType: !37, size: 32, offset: 4736)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !2134, file: !2135, line: 200, baseType: !2420, size: 96, offset: 4768)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !2135, line: 27, size: 96, elements: !2421)
!2421 = !{!2422, !2423}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2420, file: !2135, line: 28, baseType: !2313, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2420, file: !2135, line: 29, baseType: !2424, size: 64, offset: 32)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 64, elements: !478)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2134, file: !2135, line: 202, baseType: !388, size: 32, offset: 4864)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !2134, file: !2135, line: 205, baseType: !2427, size: 64, offset: 4928)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !2134, file: !2135, line: 206, baseType: !37, size: 32, offset: 4992)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2134, file: !2135, line: 222, baseType: !2430, size: 64, offset: 5056)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !2432, line: 28, size: 512, elements: !2433)
!2432 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!2433 = !{!2434, !2435, !2436, !2440, !2501, !2502}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2431, file: !2432, line: 29, baseType: !37, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2431, file: !2432, line: 30, baseType: !289, size: 128, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !2431, file: !2432, line: 31, baseType: !2437, size: 64, offset: 192)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!7, !1962}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !2431, file: !2432, line: 32, baseType: !2441, size: 64, offset: 256)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{!37, !1962, !2015, !2444}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2446, line: 75, size: 384, elements: !2447)
!2446 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2447 = !{!2448, !2449, !2457, !2496, !2500}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2445, file: !2446, line: 76, baseType: !297, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2445, file: !2446, line: 77, baseType: !2450, size: 64, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2453, line: 213, size: 32, elements: !2454)
!2453 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2452, file: !2453, line: 214, baseType: !476, size: 16)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2452, file: !2453, line: 215, baseType: !476, size: 16, offset: 16)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2445, file: !2446, line: 78, baseType: !2458, size: 64, offset: 128)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2460)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2461, line: 315, size: 128, elements: !2462)
!2461 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2462 = !{!2463, !2464, !2465, !2466}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2460, file: !2461, line: 316, baseType: !1397, size: 8)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2460, file: !2461, line: 317, baseType: !1397, size: 8, offset: 8)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2460, file: !2461, line: 318, baseType: !1038, size: 16, offset: 16)
!2466 = !DIDerivedType(tag: DW_TAG_member, scope: !2460, file: !2461, line: 319, baseType: !2467, size: 64, offset: 64)
!2467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2460, file: !2461, line: 319, size: 64, elements: !2468)
!2468 = !{!2469, !2471, !2472, !2473, !2474, !2480, !2486, !2491, !2495}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2467, file: !2461, line: 320, baseType: !2470, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2467, file: !2461, line: 321, baseType: !2470, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2467, file: !2461, line: 322, baseType: !297, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2467, file: !2461, line: 323, baseType: !2458, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2467, file: !2461, line: 324, baseType: !2475, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2461, line: 189, size: 128, elements: !2477)
!2477 = !{!2478, !2479}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2476, file: !2461, line: 190, baseType: !336, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2476, file: !2461, line: 190, baseType: !336, size: 64, offset: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2467, file: !2461, line: 325, baseType: !2481, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2461, line: 193, size: 128, elements: !2483)
!2483 = !{!2484, !2485}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2482, file: !2461, line: 194, baseType: !382, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2482, file: !2461, line: 194, baseType: !382, size: 64, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, scope: !2467, file: !2461, line: 326, baseType: !2487, size: 32)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2467, file: !2461, line: 326, size: 32, elements: !2488)
!2488 = !{!2489, !2490}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2487, file: !2461, line: 327, baseType: !1244, size: 16)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2487, file: !2461, line: 327, baseType: !1244, size: 16, offset: 16)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2467, file: !2461, line: 329, baseType: !2492, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!37, !2450, !2444}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2467, file: !2461, line: 349, baseType: !1038, size: 16)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2445, file: !2446, line: 79, baseType: !2497, size: 160, offset: 192)
!2497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 160, elements: !2498)
!2498 = !{!2499}
!2499 = !DISubrange(count: 20)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2445, file: !2446, line: 80, baseType: !1397, size: 8, offset: 352)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2431, file: !2432, line: 34, baseType: !852, size: 64, offset: 320)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2431, file: !2432, line: 35, baseType: !304, size: 128, align: 64, offset: 384)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2134, file: !2135, line: 223, baseType: !7, size: 32, offset: 5120)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !2134, file: !2135, line: 225, baseType: !2430, size: 64, offset: 5184)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2134, file: !2135, line: 226, baseType: !7, size: 32, offset: 5248)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2134, file: !2135, line: 228, baseType: !388, size: 32, offset: 5280)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !2134, file: !2135, line: 229, baseType: !2508, size: 128, offset: 5312)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !2509, line: 22, baseType: !2510)
!2509 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 20, size: 128, elements: !2511)
!2511 = !{!2512}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2510, file: !2509, line: 21, baseType: !2513, size: 128)
!2513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 128, elements: !478)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1963, file: !1964, line: 128, baseType: !2515, size: 4608, offset: 10176)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !2516, line: 56, size: 4608, elements: !2517)
!2516 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2517 = !{!2518, !2558, !2561, !2562, !2563, !2564, !2567, !2570, !2573, !2574, !2575, !2578, !2579, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2881, !2882, !2883, !2884}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2515, file: !2516, line: 57, baseType: !2519, size: 1600)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !2516, line: 15, size: 1600, elements: !2520)
!2520 = !{!2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2519, file: !2516, line: 17, baseType: !1881, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2519, file: !2516, line: 18, baseType: !1881, size: 64, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !2519, file: !2516, line: 19, baseType: !1881, size: 64, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2519, file: !2516, line: 20, baseType: !1881, size: 64, offset: 192)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !2519, file: !2516, line: 21, baseType: !1881, size: 64, offset: 256)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !2519, file: !2516, line: 23, baseType: !37, size: 32, offset: 320)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !2519, file: !2516, line: 24, baseType: !37, size: 32, offset: 352)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !2519, file: !2516, line: 25, baseType: !37, size: 32, offset: 384)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !2519, file: !2516, line: 26, baseType: !37, size: 32, offset: 416)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !2519, file: !2516, line: 27, baseType: !37, size: 32, offset: 448)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !2519, file: !2516, line: 28, baseType: !37, size: 32, offset: 480)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !2519, file: !2516, line: 29, baseType: !37, size: 32, offset: 512)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !2519, file: !2516, line: 30, baseType: !37, size: 32, offset: 544)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !2519, file: !2516, line: 31, baseType: !37, size: 32, offset: 576)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !2519, file: !2516, line: 32, baseType: !37, size: 32, offset: 608)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !2519, file: !2516, line: 33, baseType: !37, size: 32, offset: 640)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !2519, file: !2516, line: 34, baseType: !37, size: 32, offset: 672)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !2519, file: !2516, line: 35, baseType: !37, size: 32, offset: 704)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !2519, file: !2516, line: 36, baseType: !37, size: 32, offset: 736)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !2519, file: !2516, line: 37, baseType: !37, size: 32, offset: 768)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !2519, file: !2516, line: 38, baseType: !37, size: 32, offset: 800)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !2519, file: !2516, line: 39, baseType: !2543, size: 256, offset: 832)
!2543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 256, elements: !1202)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !2519, file: !2516, line: 40, baseType: !2427, size: 64, offset: 1088)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !2519, file: !2516, line: 41, baseType: !37, size: 32, offset: 1152)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !2519, file: !2516, line: 42, baseType: !37, size: 32, offset: 1184)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !2519, file: !2516, line: 43, baseType: !37, size: 32, offset: 1216)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !2519, file: !2516, line: 44, baseType: !37, size: 32, offset: 1248)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !2519, file: !2516, line: 45, baseType: !37, size: 32, offset: 1280)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !2519, file: !2516, line: 46, baseType: !37, size: 32, offset: 1312)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !2519, file: !2516, line: 47, baseType: !37, size: 32, offset: 1344)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !2519, file: !2516, line: 48, baseType: !37, size: 32, offset: 1376)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !2519, file: !2516, line: 49, baseType: !37, size: 32, offset: 1408)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !2519, file: !2516, line: 50, baseType: !37, size: 32, offset: 1440)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !2519, file: !2516, line: 51, baseType: !37, size: 32, offset: 1472)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !2519, file: !2516, line: 52, baseType: !37, size: 32, offset: 1504)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !2519, file: !2516, line: 53, baseType: !540, size: 8, offset: 1536)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2515, file: !2516, line: 58, baseType: !2559, size: 64, offset: 1600)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2560 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !2516, line: 58, flags: DIFlagFwdDecl)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2515, file: !2516, line: 59, baseType: !2559, size: 64, offset: 1664)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2515, file: !2516, line: 60, baseType: !2158, size: 64, offset: 1728)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2515, file: !2516, line: 61, baseType: !2162, size: 64, offset: 1792)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !2515, file: !2516, line: 71, baseType: !2565, size: 64, offset: 1856)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !2516, line: 71, flags: DIFlagFwdDecl)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !2515, file: !2516, line: 72, baseType: !2568, size: 64, offset: 1920)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !2516, line: 72, flags: DIFlagFwdDecl)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !2515, file: !2516, line: 73, baseType: !2571, size: 64, offset: 1984)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !2516, line: 73, flags: DIFlagFwdDecl)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !2515, file: !2516, line: 74, baseType: !2221, size: 320, offset: 2048)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2515, file: !2516, line: 75, baseType: !2008, size: 64, offset: 2368)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !2515, file: !2516, line: 76, baseType: !2576, size: 64, offset: 2432)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !2516, line: 76, flags: DIFlagFwdDecl)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !2515, file: !2516, line: 77, baseType: !289, size: 128, offset: 2496)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !2515, file: !2516, line: 78, baseType: !2580, size: 1088, offset: 2624)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !2581, line: 15, size: 1088, elements: !2582)
!2581 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!2582 = !{!2583, !2584, !2585, !2590, !2625, !2631, !2632, !2636, !2640, !2644, !2648, !2652, !2656, !2660, !2661, !2857, !2861, !2862}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2580, file: !2581, line: 16, baseType: !477, size: 16)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !2580, file: !2581, line: 17, baseType: !7, size: 32, offset: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2580, file: !2581, line: 19, baseType: !2586, size: 64, offset: 64)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = !DISubroutineType(types: !2588)
!2588 = !{!37, !2589}
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2580, file: !2581, line: 20, baseType: !2591, size: 64, offset: 128)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{!2594, !2594, !468}
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !2596, line: 24, size: 896, elements: !2597)
!2596 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!2597 = !{!2598, !2599, !2600, !2601, !2602, !2603, !2607, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2621, !2622, !2623, !2624}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2595, file: !2596, line: 25, baseType: !295, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2595, file: !2596, line: 26, baseType: !2589, size: 64, offset: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !2595, file: !2596, line: 27, baseType: !317, size: 64, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2595, file: !2596, line: 28, baseType: !317, size: 64, offset: 192)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2595, file: !2596, line: 32, baseType: !570, size: 64, offset: 256)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2595, file: !2596, line: 34, baseType: !2604, size: 64, offset: 320)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = !DISubroutineType(types: !2606)
!2606 = !{!37, !420}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2595, file: !2596, line: 35, baseType: !2608, size: 64, offset: 384)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{!37, !1962, !450, !420}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2595, file: !2596, line: 37, baseType: !477, size: 16, offset: 448)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !2595, file: !2596, line: 54, baseType: !1246, size: 16, offset: 464)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !2595, file: !2596, line: 59, baseType: !477, size: 16, offset: 480)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !2595, file: !2596, line: 60, baseType: !477, size: 16, offset: 496)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !2595, file: !2596, line: 67, baseType: !388, size: 32, offset: 512)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !2595, file: !2596, line: 69, baseType: !37, size: 32, offset: 544)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !2595, file: !2596, line: 70, baseType: !317, size: 64, offset: 576)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !2595, file: !2596, line: 71, baseType: !2619, size: 64, offset: 640)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !2596, line: 71, flags: DIFlagFwdDecl)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2595, file: !2596, line: 72, baseType: !304, size: 128, align: 64, offset: 704)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2595, file: !2596, line: 73, baseType: !1246, size: 16, offset: 832)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !2595, file: !2596, line: 74, baseType: !1246, size: 16, offset: 848)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !2595, file: !2596, line: 75, baseType: !468, size: 32, offset: 864)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !2580, file: !2581, line: 21, baseType: !2626, size: 64, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{!7, !2629}
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2595)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2580, file: !2581, line: 22, baseType: !2626, size: 64, offset: 256)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !2580, file: !2581, line: 23, baseType: !2633, size: 64, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!1460, !2594, !317}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2580, file: !2581, line: 24, baseType: !2637, size: 64, offset: 384)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{null, !2594}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !2580, file: !2581, line: 25, baseType: !2641, size: 64, offset: 448)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{null, !2594, !295, !37}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !2580, file: !2581, line: 27, baseType: !2645, size: 64, offset: 512)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!2594, !2594}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !2580, file: !2581, line: 28, baseType: !2649, size: 64, offset: 576)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = !DISubroutineType(types: !2651)
!2651 = !{null, !420}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !2580, file: !2581, line: 29, baseType: !2653, size: 64, offset: 640)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{null, !2594, !450, !420, !707, !540}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !2580, file: !2581, line: 32, baseType: !2657, size: 64, offset: 704)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{null, !2594, !450, !420}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !2580, file: !2581, line: 34, baseType: !2608, size: 64, offset: 768)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !2580, file: !2581, line: 35, baseType: !2662, size: 64, offset: 832)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!2665, !2629, !420, !2244}
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !2667, line: 134, size: 2624, elements: !2668)
!2667 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2668 = !{!2669, !2670, !2808, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2835, !2839, !2852, !2853, !2854, !2855}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2666, file: !2667, line: 135, baseType: !2665, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2666, file: !2667, line: 136, baseType: !2671, size: 64, offset: 64)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !2667, line: 194, size: 3840, elements: !2673)
!2673 = !{!2674, !2675, !2676, !2677, !2678, !2685, !2691, !2695, !2713, !2717, !2718, !2722, !2726, !2727, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2760, !2761, !2768, !2769, !2770, !2771, !2779, !2780, !2796, !2806}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2672, file: !2667, line: 195, baseType: !37, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !2672, file: !2667, line: 196, baseType: !7, size: 32, offset: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2672, file: !2667, line: 197, baseType: !7, size: 32, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2672, file: !2667, line: 198, baseType: !489, size: 16, offset: 96)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2672, file: !2667, line: 199, baseType: !2679, size: 64, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!468, !2244, !2682, !2684}
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !2672, file: !2667, line: 202, baseType: !2686, size: 64, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DISubroutineType(types: !2688)
!2688 = !{!540, !2689, !2244}
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2666)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2672, file: !2667, line: 203, baseType: !2692, size: 64, offset: 256)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!37, !2665}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !2672, file: !2667, line: 204, baseType: !2696, size: 64, offset: 320)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = !DISubroutineType(types: !2698)
!2698 = !{!37, !2699}
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !2667, line: 171, size: 256, elements: !2701)
!2701 = !{!2702, !2703, !2708, !2709, !2710, !2711}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2700, file: !2667, line: 172, baseType: !2699, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2700, file: !2667, line: 173, baseType: !2704, size: 64, offset: 64)
!2704 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !1964, line: 318, baseType: !2705)
!2705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1964, line: 314, size: 64, elements: !2706)
!2706 = !{!2707}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2705, file: !1964, line: 316, baseType: !1962, size: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2700, file: !2667, line: 174, baseType: !295, size: 64, offset: 128)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2700, file: !2667, line: 175, baseType: !1397, size: 8, offset: 192)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2700, file: !2667, line: 176, baseType: !1397, size: 8, offset: 200)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2700, file: !2667, line: 177, baseType: !2712, offset: 208)
!2712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, elements: !314)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !2672, file: !2667, line: 205, baseType: !2714, size: 64, offset: 384)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{null, !2699}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !2672, file: !2667, line: 206, baseType: !2649, size: 64, offset: 448)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !2672, file: !2667, line: 207, baseType: !2719, size: 64, offset: 512)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{!37, !2244}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !2672, file: !2667, line: 208, baseType: !2723, size: 64, offset: 576)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!540, !2682, !2444}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2672, file: !2667, line: 210, baseType: !577, size: 64, offset: 640)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2672, file: !2667, line: 211, baseType: !2728, size: 1152, offset: 704)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !2667, line: 70, size: 1152, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2744}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2728, file: !2667, line: 71, baseType: !2704, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2728, file: !2667, line: 72, baseType: !295, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2728, file: !2667, line: 73, baseType: !289, size: 128, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !2728, file: !2667, line: 74, baseType: !2692, size: 64, offset: 256)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2728, file: !2667, line: 75, baseType: !2671, size: 64, offset: 320)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !2728, file: !2667, line: 77, baseType: !570, size: 64, offset: 384)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2728, file: !2667, line: 79, baseType: !37, size: 32, offset: 448)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2728, file: !2667, line: 80, baseType: !1271, size: 32, offset: 480)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2728, file: !2667, line: 81, baseType: !304, size: 128, align: 64, offset: 512)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !2728, file: !2667, line: 83, baseType: !37, size: 32, offset: 640)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2728, file: !2667, line: 84, baseType: !2741, size: 416, offset: 672)
!2741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 416, elements: !2742)
!2742 = !{!2743}
!2743 = !DISubrange(count: 13)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !2728, file: !2667, line: 85, baseType: !1415, size: 64, offset: 1088)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !2672, file: !2667, line: 212, baseType: !289, size: 128, offset: 1856)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !2672, file: !2667, line: 213, baseType: !37, size: 32, offset: 1984)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !2672, file: !2667, line: 214, baseType: !37, size: 32, offset: 2016)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !2672, file: !2667, line: 215, baseType: !37, size: 32, offset: 2048)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !2672, file: !2667, line: 216, baseType: !37, size: 32, offset: 2080)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !2672, file: !2667, line: 217, baseType: !317, size: 64, offset: 2112)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !2672, file: !2667, line: 218, baseType: !2752, size: 704, offset: 2176)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1808, line: 115, size: 704, elements: !2753)
!2753 = !{!2754, !2755, !2756, !2759}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2752, file: !1808, line: 116, baseType: !1807, size: 256)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2752, file: !1808, line: 117, baseType: !2221, size: 320, offset: 256)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2752, file: !1808, line: 120, baseType: !2757, size: 64, offset: 576)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1808, line: 18, flags: DIFlagFwdDecl)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2752, file: !1808, line: 121, baseType: !37, size: 32, offset: 640)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !2672, file: !2667, line: 219, baseType: !2221, size: 320, offset: 2880)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !2672, file: !2667, line: 220, baseType: !2762, size: 192, offset: 3200)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !422, line: 291, size: 192, elements: !2763)
!2763 = !{!2764, !2765, !2766, !2767}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2762, file: !422, line: 293, baseType: !420, size: 64)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2762, file: !422, line: 294, baseType: !420, size: 64, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !2762, file: !422, line: 296, baseType: !468, size: 32, offset: 128)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2762, file: !422, line: 297, baseType: !729, offset: 160)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2672, file: !2667, line: 221, baseType: !388, size: 32, offset: 3392)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !2672, file: !2667, line: 222, baseType: !388, size: 32, offset: 3424)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2672, file: !2667, line: 223, baseType: !289, size: 128, offset: 3456)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2672, file: !2667, line: 224, baseType: !2772, offset: 3584)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2773, line: 20, baseType: !2774)
!2773 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2773, line: 11, elements: !2775)
!2775 = !{!2776}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2774, file: !2773, line: 12, baseType: !2777)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !741, line: 33, baseType: !2778)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 31, elements: !743)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !2672, file: !2667, line: 225, baseType: !317, size: 64, offset: 3584)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2672, file: !2667, line: 226, baseType: !2781, size: 64, offset: 3648)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !2667, line: 112, size: 768, elements: !2783)
!2783 = !{!2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2782, file: !2667, line: 113, baseType: !317, size: 64)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !2782, file: !2667, line: 114, baseType: !317, size: 64, offset: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !2782, file: !2667, line: 115, baseType: !317, size: 64, offset: 128)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !2782, file: !2667, line: 117, baseType: !317, size: 64, offset: 192)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !2782, file: !2667, line: 119, baseType: !317, size: 64, offset: 256)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !2782, file: !2667, line: 120, baseType: !317, size: 64, offset: 320)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !2782, file: !2667, line: 122, baseType: !317, size: 64, offset: 384)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !2782, file: !2667, line: 123, baseType: !317, size: 64, offset: 448)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !2782, file: !2667, line: 125, baseType: !317, size: 64, offset: 512)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !2782, file: !2667, line: 126, baseType: !317, size: 64, offset: 576)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !2782, file: !2667, line: 128, baseType: !317, size: 64, offset: 640)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !2782, file: !2667, line: 129, baseType: !317, size: 64, offset: 704)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !2672, file: !2667, line: 227, baseType: !2797, size: 64, offset: 3712)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !2667, line: 186, size: 384, elements: !2799)
!2799 = !{!2800, !2802, !2803, !2805}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !2798, file: !2667, line: 187, baseType: !2801, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !2798, file: !2667, line: 188, baseType: !7, size: 32, offset: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2798, file: !2667, line: 189, baseType: !2804, size: 128, offset: 96)
!2804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 128, elements: !1202)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2798, file: !2667, line: 190, baseType: !304, size: 128, align: 64, offset: 256)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !2672, file: !2667, line: 228, baseType: !2807, size: 64, offset: 3776)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2666, file: !2667, line: 137, baseType: !2809, size: 64, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2666, file: !2667, line: 138, baseType: !317, size: 64, offset: 192)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2666, file: !2667, line: 139, baseType: !317, size: 64, offset: 256)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2666, file: !2667, line: 140, baseType: !2772, offset: 320)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2666, file: !2667, line: 141, baseType: !1271, size: 32, offset: 320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2666, file: !2667, line: 142, baseType: !7, size: 32, offset: 352)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2666, file: !2667, line: 143, baseType: !2762, size: 192, offset: 384)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2666, file: !2667, line: 144, baseType: !2221, size: 320, offset: 576)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2666, file: !2667, line: 145, baseType: !317, size: 64, offset: 896)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2666, file: !2667, line: 146, baseType: !388, size: 32, offset: 960)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2666, file: !2667, line: 147, baseType: !1398, size: 8, offset: 992)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2666, file: !2667, line: 148, baseType: !1398, size: 8, offset: 1000)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2666, file: !2667, line: 149, baseType: !1398, size: 8, offset: 1008)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2666, file: !2667, line: 150, baseType: !1398, size: 8, offset: 1016)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2666, file: !2667, line: 151, baseType: !1397, size: 8, offset: 1024)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2666, file: !2667, line: 152, baseType: !2313, size: 32, offset: 1056)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2666, file: !2667, line: 153, baseType: !715, size: 256, align: 64, offset: 1088)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2666, file: !2667, line: 154, baseType: !2827, size: 832, offset: 1344)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !36, line: 244, size: 832, elements: !2828)
!2828 = !{!2829, !2830, !2831}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !2827, file: !36, line: 245, baseType: !7, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !2827, file: !36, line: 246, baseType: !2313, size: 32, offset: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !2827, file: !36, line: 254, baseType: !2832, size: 768, offset: 64)
!2832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 768, elements: !2833)
!2833 = !{!2834}
!2834 = !DISubrange(count: 12)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2666, file: !2667, line: 155, baseType: !2836, size: 64, offset: 2176)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{!37, !2665, !420}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2666, file: !2667, line: 156, baseType: !2840, size: 64, offset: 2240)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2842)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !2667, line: 163, size: 320, elements: !2843)
!2843 = !{!2844, !2845, !2849, !2850, !2851}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2842, file: !2667, line: 164, baseType: !37, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !2842, file: !2667, line: 165, baseType: !2846, size: 64, offset: 64)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{null, !2665, !420}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !2842, file: !2667, line: 166, baseType: !2846, size: 64, offset: 128)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2842, file: !2667, line: 167, baseType: !2836, size: 64, offset: 192)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !2842, file: !2667, line: 168, baseType: !2836, size: 64, offset: 256)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2666, file: !2667, line: 157, baseType: !289, size: 128, offset: 2304)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2666, file: !2667, line: 158, baseType: !304, size: 128, align: 64, offset: 2432)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2666, file: !2667, line: 159, baseType: !295, size: 64, offset: 2560)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2666, file: !2667, line: 160, baseType: !2856, offset: 2624)
!2856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, elements: !1922)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !2580, file: !2581, line: 38, baseType: !2858, size: 64, offset: 896)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{null, !2629, !2244}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !2580, file: !2581, line: 41, baseType: !2252, size: 64, offset: 960)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !2580, file: !2581, line: 43, baseType: !2863, size: 64, offset: 1024)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2864, line: 97, size: 64, elements: !2865)
!2864 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2865 = !{!2866}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2863, file: !2864, line: 98, baseType: !382, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !2515, file: !2516, line: 79, baseType: !2772, offset: 3712)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !2515, file: !2516, line: 80, baseType: !729, offset: 3712)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !2515, file: !2516, line: 81, baseType: !7, size: 32, offset: 3712)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !2515, file: !2516, line: 82, baseType: !317, size: 64, offset: 3776)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2515, file: !2516, line: 94, baseType: !2155, size: 64, offset: 3840)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !2515, file: !2516, line: 95, baseType: !450, size: 64, offset: 3904)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2515, file: !2516, line: 96, baseType: !450, size: 64, offset: 3968)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !2515, file: !2516, line: 97, baseType: !450, size: 64, offset: 4032)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2515, file: !2516, line: 98, baseType: !450, size: 64, offset: 4096)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2515, file: !2516, line: 107, baseType: !388, size: 32, offset: 4160)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !2515, file: !2516, line: 108, baseType: !388, size: 32, offset: 4192)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !2515, file: !2516, line: 109, baseType: !2879, size: 64, offset: 4224)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !2516, line: 109, flags: DIFlagFwdDecl)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2515, file: !2516, line: 110, baseType: !2430, size: 64, offset: 4288)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !2515, file: !2516, line: 111, baseType: !2430, size: 64, offset: 4352)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2515, file: !2516, line: 112, baseType: !7, size: 32, offset: 4416)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !2515, file: !2516, line: 117, baseType: !2885, size: 128, offset: 4480)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2515, file: !2516, line: 113, size: 128, elements: !2886)
!2886 = !{!2887, !2888, !2889}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2885, file: !2516, line: 114, baseType: !857, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2885, file: !2516, line: 115, baseType: !729, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2885, file: !2516, line: 116, baseType: !707, size: 32, offset: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !1963, file: !1964, line: 162, baseType: !2762, size: 192, offset: 14784)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !1963, file: !1964, line: 164, baseType: !2892, size: 64, offset: 14976)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !1964, line: 47, flags: DIFlagFwdDecl)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !1963, file: !1964, line: 167, baseType: !2895, size: 512, offset: 15040)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !2896, line: 14, size: 512, elements: !2897)
!2896 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!2897 = !{!2898, !3533, !3535}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !2895, file: !2896, line: 16, baseType: !2899, size: 128)
!2899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2900, size: 128, elements: !478)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !145, line: 1037, size: 128, elements: !2902)
!2902 = !{!2903, !2904}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2901, file: !145, line: 1038, baseType: !304, size: 128, align: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2901, file: !145, line: 1039, baseType: !2905, offset: 128)
!2905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2906, elements: !314)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !145, line: 1032, size: 192, elements: !2907)
!2907 = !{!2908, !3529}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !2906, file: !145, line: 1033, baseType: !2909, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !2911, line: 525, size: 448, elements: !2912)
!2911 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!2912 = !{!2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2931, !3505, !3519, !3525, !3527}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2910, file: !2911, line: 526, baseType: !1038, size: 16)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !2910, file: !2911, line: 527, baseType: !1038, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !2910, file: !2911, line: 528, baseType: !1038, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !2910, file: !2911, line: 529, baseType: !1038, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !2910, file: !2911, line: 530, baseType: !1038, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !2910, file: !2911, line: 531, baseType: !1038, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !2910, file: !2911, line: 532, baseType: !1038, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !2910, file: !2911, line: 533, baseType: !1038, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !2910, file: !2911, line: 534, baseType: !1038, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !2910, file: !2911, line: 535, baseType: !1038, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !2910, file: !2911, line: 536, baseType: !1038, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !2910, file: !2911, line: 537, baseType: !1038, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2910, file: !2911, line: 538, baseType: !69, size: 32, offset: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !2910, file: !2911, line: 539, baseType: !103, size: 32, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2910, file: !2911, line: 540, baseType: !707, size: 32, offset: 96)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !2910, file: !2911, line: 541, baseType: !707, size: 32, offset: 128)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2910, file: !2911, line: 542, baseType: !2930, size: 64, offset: 160)
!2930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 64, elements: !1371)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2910, file: !2911, line: 543, baseType: !2932, size: 64, offset: 256)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !145, line: 757, size: 4928, elements: !2934)
!2934 = !{!2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2956, !2957, !2958, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3015, !3016, !3018, !3019, !3423, !3424, !3425, !3434, !3436, !3437, !3438, !3439, !3440, !3442, !3443, !3458, !3459, !3465, !3471, !3479, !3481, !3482, !3483, !3484, !3485, !3493, !3500}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2933, file: !145, line: 758, baseType: !378, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !2933, file: !145, line: 759, baseType: !707, size: 32, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !2933, file: !145, line: 760, baseType: !707, size: 32, offset: 96)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !2933, file: !145, line: 761, baseType: !707, size: 32, offset: 128)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !2933, file: !145, line: 762, baseType: !707, size: 32, offset: 160)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !2933, file: !145, line: 763, baseType: !707, size: 32, offset: 192)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2933, file: !145, line: 764, baseType: !707, size: 32, offset: 224)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !2933, file: !145, line: 765, baseType: !707, size: 32, offset: 256)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !2933, file: !145, line: 766, baseType: !707, size: 32, offset: 288)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !2933, file: !145, line: 767, baseType: !707, size: 32, offset: 320)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !2933, file: !145, line: 768, baseType: !707, size: 32, offset: 352)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !2933, file: !145, line: 769, baseType: !707, size: 32, offset: 384)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !2933, file: !145, line: 770, baseType: !707, size: 32, offset: 416)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !2933, file: !145, line: 771, baseType: !2949, size: 64, offset: 448)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2951)
!2951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !145, line: 751, size: 96, elements: !2952)
!2952 = !{!2953, !2954, !2955}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2951, file: !145, line: 752, baseType: !707, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !2951, file: !145, line: 753, baseType: !144, size: 32, offset: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !2951, file: !145, line: 754, baseType: !707, size: 32, offset: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !2933, file: !145, line: 772, baseType: !954, size: 192, offset: 512)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !2933, file: !145, line: 773, baseType: !2909, size: 64, offset: 704)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !2933, file: !145, line: 774, baseType: !2959, size: 64, offset: 768)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !145, line: 586, size: 2944, elements: !2961)
!2961 = !{!2962, !2963, !2964, !2965, !2966, !2978, !2979, !2981, !2982, !2983, !2984}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !2960, file: !145, line: 588, baseType: !281, size: 128)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2960, file: !145, line: 590, baseType: !954, size: 192, offset: 128)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2960, file: !145, line: 591, baseType: !1271, size: 32, offset: 320)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2960, file: !145, line: 592, baseType: !336, size: 64, offset: 384)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2960, file: !145, line: 597, baseType: !2967, size: 256, offset: 448)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2960, file: !145, line: 593, size: 256, elements: !2968)
!2968 = !{!2969, !2976, !2977}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !2967, file: !145, line: 594, baseType: !2970, size: 112)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !145, line: 509, size: 112, elements: !2971)
!2971 = !{!2972, !2973, !2974}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !2970, file: !145, line: 510, baseType: !1397, size: 8)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !2970, file: !145, line: 511, baseType: !1397, size: 8, offset: 8)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !2970, file: !145, line: 512, baseType: !2975, size: 96, offset: 16)
!2975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 96, elements: !2833)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2967, file: !145, line: 595, baseType: !570, size: 64, offset: 128)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !2967, file: !145, line: 596, baseType: !540, size: 8, offset: 192)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !2960, file: !145, line: 602, baseType: !2909, size: 64, offset: 704)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !2960, file: !145, line: 604, baseType: !2980, size: 192, offset: 768)
!2980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 192, elements: !867)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !2960, file: !145, line: 606, baseType: !2386, size: 96, offset: 960)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2960, file: !145, line: 608, baseType: !570, size: 64, offset: 1088)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !2960, file: !145, line: 609, baseType: !336, size: 64, offset: 1152)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !2960, file: !145, line: 610, baseType: !2985, size: 1728, offset: 1216)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !145, line: 569, size: 1728, elements: !2986)
!2986 = !{!2987, !2988, !2989, !2993, !2994, !3000}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2985, file: !145, line: 570, baseType: !317, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2985, file: !145, line: 571, baseType: !317, size: 64, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2985, file: !145, line: 572, baseType: !2990, size: 1024, offset: 128)
!2990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 1024, elements: !2991)
!2991 = !{!2992}
!2992 = !DISubrange(count: 128)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !2985, file: !145, line: 573, baseType: !289, size: 128, offset: 1152)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !2985, file: !145, line: 574, baseType: !2995, size: 384, offset: 1280)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !2996, line: 40, size: 384, elements: !2997)
!2996 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!2997 = !{!2998}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2995, file: !2996, line: 41, baseType: !2999, size: 384)
!2999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 384, elements: !478)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !2985, file: !145, line: 575, baseType: !540, size: 8, offset: 1664)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !2933, file: !145, line: 775, baseType: !69, size: 32, offset: 832)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !2933, file: !145, line: 776, baseType: !103, size: 32, offset: 864)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !2933, file: !145, line: 777, baseType: !540, size: 8, offset: 896)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !2933, file: !145, line: 778, baseType: !540, size: 8, offset: 904)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !2933, file: !145, line: 779, baseType: !540, size: 8, offset: 912)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !2933, file: !145, line: 780, baseType: !540, size: 8, offset: 920)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !2933, file: !145, line: 781, baseType: !540, size: 8, offset: 928)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !2933, file: !145, line: 782, baseType: !540, size: 8, offset: 936)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !2933, file: !145, line: 783, baseType: !175, size: 32, offset: 960)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !2933, file: !145, line: 784, baseType: !281, size: 128, offset: 1024)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !2933, file: !145, line: 786, baseType: !3012, size: 64, offset: 1152)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3014)
!3014 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !145, line: 33, flags: DIFlagFwdDecl)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !2933, file: !145, line: 788, baseType: !297, size: 64, offset: 1216)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2933, file: !145, line: 789, baseType: !3017, size: 64, offset: 1280)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !2933, file: !145, line: 790, baseType: !570, size: 64, offset: 1344)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !2933, file: !145, line: 791, baseType: !3020, size: 64, offset: 1408)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !145, line: 734, size: 384, elements: !3022)
!3022 = !{!3023, !3024, !3025, !3026, !3419, !3420, !3421, !3422}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3021, file: !145, line: 735, baseType: !570, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3021, file: !145, line: 736, baseType: !570, size: 64, offset: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3021, file: !145, line: 737, baseType: !570, size: 64, offset: 128)
!3026 = !DIDerivedType(tag: DW_TAG_member, scope: !3021, file: !145, line: 738, baseType: !3027, size: 128, offset: 192)
!3027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3021, file: !145, line: 738, size: 128, elements: !3028)
!3028 = !{!3029}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3027, file: !145, line: 742, baseType: !3030, size: 128)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3027, file: !145, line: 739, size: 128, elements: !3031)
!3031 = !{!3032, !3418}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3030, file: !145, line: 740, baseType: !3033, size: 64)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !145, line: 141, size: 2048, elements: !3035)
!3035 = !{!3036, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3404, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3034, file: !145, line: 145, baseType: !3037, size: 64, align: 512)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3039)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !145, line: 54, size: 2368, elements: !3040)
!3040 = !{!3041, !3240, !3244, !3248, !3252, !3256, !3257, !3261, !3267, !3268, !3269, !3270, !3271, !3275, !3279, !3283, !3284, !3285, !3289, !3293, !3305, !3309, !3313, !3322, !3326, !3330, !3334, !3339, !3343, !3347, !3351, !3357, !3361, !3368, !3372, !3374, !3375}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3039, file: !145, line: 56, baseType: !3042, size: 64)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{!37, !3045}
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !70, line: 483, size: 960, align: 64, elements: !3047)
!3047 = !{!3048, !3064, !3075, !3086, !3110, !3116, !3124, !3141, !3154, !3160, !3169, !3174, !3182, !3194, !3214, !3221, !3225, !3229, !3234}
!3048 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 484, baseType: !3049, size: 512)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 484, size: 512, elements: !3050)
!3050 = !{!3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3049, file: !70, line: 485, baseType: !468, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3049, file: !70, line: 486, baseType: !468, size: 32, offset: 32)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3049, file: !70, line: 487, baseType: !468, size: 32, offset: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3049, file: !70, line: 488, baseType: !468, size: 32, offset: 96)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3049, file: !70, line: 489, baseType: !468, size: 32, offset: 128)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3049, file: !70, line: 492, baseType: !468, size: 32, offset: 160)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3049, file: !70, line: 493, baseType: !468, size: 32, offset: 192)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3049, file: !70, line: 496, baseType: !272, size: 128, offset: 224)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3049, file: !70, line: 497, baseType: !468, size: 32, offset: 352)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3049, file: !70, line: 498, baseType: !468, size: 32, offset: 384)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3049, file: !70, line: 499, baseType: !468, size: 32, offset: 416)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3049, file: !70, line: 500, baseType: !468, size: 32, offset: 448)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3049, file: !70, line: 501, baseType: !468, size: 32, offset: 480)
!3064 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 507, baseType: !3065, size: 256)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 507, size: 256, elements: !3066)
!3066 = !{!3067, !3068, !3069, !3074}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3065, file: !70, line: 508, baseType: !468, size: 32)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3065, file: !70, line: 509, baseType: !338, size: 64, align: 64, offset: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, scope: !3065, file: !70, line: 510, baseType: !3070, size: 64, offset: 128)
!3070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3065, file: !70, line: 510, size: 64, elements: !3071)
!3071 = !{!3072, !3073}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3070, file: !70, line: 511, baseType: !338, size: 64, align: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3070, file: !70, line: 512, baseType: !338, size: 64, align: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3065, file: !70, line: 514, baseType: !338, size: 64, offset: 192)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3046, file: !70, line: 532, baseType: !3076, size: 448)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 517, size: 448, elements: !3077)
!3077 = !{!3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3076, file: !70, line: 518, baseType: !338, size: 64, align: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3076, file: !70, line: 521, baseType: !338, size: 64, align: 64, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3076, file: !70, line: 522, baseType: !338, size: 64, align: 64, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3076, file: !70, line: 523, baseType: !338, size: 64, align: 64, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3076, file: !70, line: 524, baseType: !468, size: 32, offset: 256)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3076, file: !70, line: 529, baseType: !468, size: 32, offset: 288)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3076, file: !70, line: 530, baseType: !338, size: 64, offset: 320)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3076, file: !70, line: 531, baseType: !338, size: 64, offset: 384)
!3086 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 534, baseType: !3087, size: 960)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 534, size: 960, elements: !3088)
!3088 = !{!3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3087, file: !70, line: 535, baseType: !468, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3087, file: !70, line: 536, baseType: !468, size: 32, offset: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3087, file: !70, line: 537, baseType: !338, size: 64, align: 64, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3087, file: !70, line: 538, baseType: !338, size: 64, align: 64, offset: 128)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3087, file: !70, line: 539, baseType: !468, size: 32, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3087, file: !70, line: 540, baseType: !468, size: 32, offset: 224)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3087, file: !70, line: 541, baseType: !338, size: 64, align: 64, offset: 256)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3087, file: !70, line: 542, baseType: !468, size: 32, offset: 320)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3087, file: !70, line: 543, baseType: !468, size: 32, offset: 352)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3087, file: !70, line: 544, baseType: !272, size: 128, offset: 384)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3087, file: !70, line: 545, baseType: !468, size: 32, offset: 512)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3087, file: !70, line: 550, baseType: !468, size: 32, offset: 544)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3087, file: !70, line: 551, baseType: !468, size: 32, offset: 576)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3087, file: !70, line: 552, baseType: !468, size: 32, offset: 608)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3087, file: !70, line: 553, baseType: !338, size: 64, align: 64, offset: 640)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3087, file: !70, line: 554, baseType: !468, size: 32, offset: 704)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3087, file: !70, line: 555, baseType: !468, size: 32, offset: 736)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3087, file: !70, line: 556, baseType: !338, size: 64, align: 64, offset: 768)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3087, file: !70, line: 557, baseType: !468, size: 32, offset: 832)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3087, file: !70, line: 558, baseType: !468, size: 32, offset: 864)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3087, file: !70, line: 559, baseType: !468, size: 32, offset: 896)
!3110 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 562, baseType: !3111, size: 128)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 562, size: 128, elements: !3112)
!3112 = !{!3113, !3114, !3115}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3111, file: !70, line: 563, baseType: !338, size: 64, align: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3111, file: !70, line: 564, baseType: !468, size: 32, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3111, file: !70, line: 565, baseType: !468, size: 32, offset: 96)
!3116 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 568, baseType: !3117, size: 160)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 568, size: 160, elements: !3118)
!3118 = !{!3119, !3120, !3121, !3122, !3123}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3117, file: !70, line: 569, baseType: !468, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3117, file: !70, line: 570, baseType: !468, size: 32, offset: 32)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3117, file: !70, line: 571, baseType: !468, size: 32, offset: 64)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3117, file: !70, line: 572, baseType: !468, size: 32, offset: 96)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3117, file: !70, line: 573, baseType: !468, size: 32, offset: 128)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3046, file: !70, line: 600, baseType: !3125, size: 576)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 579, size: 576, elements: !3126)
!3126 = !{!3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3125, file: !70, line: 580, baseType: !468, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3125, file: !70, line: 581, baseType: !468, size: 32, offset: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3125, file: !70, line: 582, baseType: !468, size: 32, offset: 64)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3125, file: !70, line: 583, baseType: !468, size: 32, offset: 96)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3125, file: !70, line: 587, baseType: !338, size: 64, align: 64, offset: 128)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3125, file: !70, line: 588, baseType: !338, size: 64, align: 64, offset: 192)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3125, file: !70, line: 589, baseType: !468, size: 32, offset: 256)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3125, file: !70, line: 590, baseType: !468, size: 32, offset: 288)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3125, file: !70, line: 591, baseType: !468, size: 32, offset: 320)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3125, file: !70, line: 592, baseType: !468, size: 32, offset: 352)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3125, file: !70, line: 596, baseType: !338, size: 64, align: 64, offset: 384)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3125, file: !70, line: 597, baseType: !338, size: 64, align: 64, offset: 448)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3125, file: !70, line: 598, baseType: !468, size: 32, offset: 512)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3125, file: !70, line: 599, baseType: !468, size: 32, offset: 544)
!3141 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 602, baseType: !3142, size: 96)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 602, size: 96, elements: !3143)
!3143 = !{!3144, !3152, !3153}
!3144 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !70, line: 603, baseType: !3145, size: 32)
!3145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !70, line: 603, size: 32, elements: !3146)
!3146 = !{!3147, !3148, !3149, !3150, !3151}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3145, file: !70, line: 604, baseType: !468, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3145, file: !70, line: 605, baseType: !468, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3145, file: !70, line: 606, baseType: !468, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3145, file: !70, line: 607, baseType: !468, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3145, file: !70, line: 608, baseType: !468, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3142, file: !70, line: 610, baseType: !468, size: 32, offset: 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3142, file: !70, line: 611, baseType: !468, size: 32, offset: 64)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3046, file: !70, line: 618, baseType: !3155, size: 128)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 614, size: 128, elements: !3156)
!3156 = !{!3157, !3158, !3159}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3155, file: !70, line: 615, baseType: !468, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3155, file: !70, line: 616, baseType: !468, size: 32, offset: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3155, file: !70, line: 617, baseType: !338, size: 64, align: 64, offset: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3046, file: !70, line: 627, baseType: !3161, size: 256)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 620, size: 256, elements: !3162)
!3162 = !{!3163, !3164, !3165, !3166, !3167, !3168}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3161, file: !70, line: 621, baseType: !468, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3161, file: !70, line: 622, baseType: !468, size: 32, offset: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3161, file: !70, line: 623, baseType: !468, size: 32, offset: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3161, file: !70, line: 624, baseType: !468, size: 32, offset: 96)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3161, file: !70, line: 625, baseType: !338, size: 64, align: 64, offset: 128)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3161, file: !70, line: 626, baseType: !468, size: 32, offset: 192)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3046, file: !70, line: 632, baseType: !3170, size: 128)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 629, size: 128, elements: !3171)
!3171 = !{!3172, !3173}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3170, file: !70, line: 630, baseType: !338, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3170, file: !70, line: 631, baseType: !468, size: 32, offset: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 634, baseType: !3175, size: 256)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 634, size: 256, elements: !3176)
!3176 = !{!3177, !3178, !3179, !3180, !3181}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3175, file: !70, line: 635, baseType: !338, size: 64, align: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3175, file: !70, line: 636, baseType: !338, size: 64, align: 64, offset: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3175, file: !70, line: 637, baseType: !468, size: 32, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3175, file: !70, line: 638, baseType: !468, size: 32, offset: 160)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3175, file: !70, line: 639, baseType: !468, size: 32, offset: 192)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3046, file: !70, line: 656, baseType: !3183, size: 384)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 642, size: 384, elements: !3184)
!3184 = !{!3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3183, file: !70, line: 643, baseType: !468, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3183, file: !70, line: 644, baseType: !468, size: 32, offset: 32)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3183, file: !70, line: 645, baseType: !468, size: 32, offset: 64)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3183, file: !70, line: 646, baseType: !468, size: 32, offset: 96)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3183, file: !70, line: 647, baseType: !338, size: 64, align: 64, offset: 128)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3183, file: !70, line: 652, baseType: !468, size: 32, offset: 192)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3183, file: !70, line: 653, baseType: !468, size: 32, offset: 224)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3183, file: !70, line: 654, baseType: !338, size: 64, offset: 256)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3183, file: !70, line: 655, baseType: !338, size: 64, offset: 320)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3046, file: !70, line: 673, baseType: !3195, size: 256)
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 658, size: 256, elements: !3196)
!3196 = !{!3197, !3198, !3203, !3204, !3205}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3195, file: !70, line: 659, baseType: !468, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_member, scope: !3195, file: !70, line: 660, baseType: !3199, size: 32, offset: 32)
!3199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3195, file: !70, line: 660, size: 32, elements: !3200)
!3200 = !{!3201, !3202}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3199, file: !70, line: 661, baseType: !468, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3199, file: !70, line: 662, baseType: !468, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3195, file: !70, line: 664, baseType: !468, size: 32, offset: 64)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3195, file: !70, line: 665, baseType: !468, size: 32, offset: 96)
!3205 = !DIDerivedType(tag: DW_TAG_member, scope: !3195, file: !70, line: 666, baseType: !3206, size: 128, offset: 128)
!3206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3195, file: !70, line: 666, size: 128, elements: !3207)
!3207 = !{!3208, !3209}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3206, file: !70, line: 667, baseType: !468, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, scope: !3206, file: !70, line: 668, baseType: !3210, size: 128)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3206, file: !70, line: 668, size: 128, elements: !3211)
!3211 = !{!3212, !3213}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3210, file: !70, line: 669, baseType: !338, size: 64, align: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3210, file: !70, line: 670, baseType: !468, size: 32, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3046, file: !70, line: 683, baseType: !3215, size: 128)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 675, size: 128, elements: !3216)
!3216 = !{!3217, !3218, !3219, !3220}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3215, file: !70, line: 676, baseType: !468, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3215, file: !70, line: 678, baseType: !468, size: 32, offset: 32)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3215, file: !70, line: 679, baseType: !468, size: 32, offset: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3215, file: !70, line: 682, baseType: !468, size: 32, offset: 96)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3046, file: !70, line: 687, baseType: !3222, size: 32)
!3222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 685, size: 32, elements: !3223)
!3223 = !{!3224}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3222, file: !70, line: 686, baseType: !468, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3046, file: !70, line: 691, baseType: !3226, size: 32)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 689, size: 32, elements: !3227)
!3227 = !{!3228}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3226, file: !70, line: 690, baseType: !468, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3046, file: !70, line: 696, baseType: !3230, size: 64)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 693, size: 64, elements: !3231)
!3231 = !{!3232, !3233}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3230, file: !70, line: 694, baseType: !468, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3230, file: !70, line: 695, baseType: !468, size: 32, offset: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3046, file: !70, line: 702, baseType: !3235, size: 96)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 698, size: 96, elements: !3236)
!3236 = !{!3237, !3238, !3239}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3235, file: !70, line: 699, baseType: !468, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3235, file: !70, line: 700, baseType: !468, size: 32, offset: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3235, file: !70, line: 701, baseType: !468, size: 32, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3039, file: !145, line: 57, baseType: !3241, size: 64, offset: 64)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!3033, !3045}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3039, file: !145, line: 58, baseType: !3245, size: 64, offset: 128)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{null, !3033, !1010}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3039, file: !145, line: 59, baseType: !3249, size: 64, offset: 192)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 64)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{null, !3033}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3039, file: !145, line: 60, baseType: !3253, size: 64, offset: 256)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!37, !3033, !570, !570}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3039, file: !145, line: 61, baseType: !3249, size: 64, offset: 320)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3039, file: !145, line: 62, baseType: !3258, size: 64, offset: 384)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DISubroutineType(types: !3260)
!3260 = !{!570, !3033, !570}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3039, file: !145, line: 63, baseType: !3262, size: 64, offset: 448)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!37, !3033, !3265, !3045}
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3046)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3039, file: !145, line: 65, baseType: !3262, size: 64, offset: 512)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3039, file: !145, line: 68, baseType: !3262, size: 64, offset: 576)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3039, file: !145, line: 70, baseType: !3262, size: 64, offset: 640)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3039, file: !145, line: 74, baseType: !3258, size: 64, offset: 704)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3039, file: !145, line: 75, baseType: !3272, size: 64, offset: 768)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!37, !3033, !570, !570, !336}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3039, file: !145, line: 76, baseType: !3276, size: 64, offset: 832)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!37, !3033, !570}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3039, file: !145, line: 77, baseType: !3280, size: 64, offset: 896)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!37, !3033, !570, !336}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3039, file: !145, line: 78, baseType: !3276, size: 64, offset: 960)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3039, file: !145, line: 79, baseType: !3276, size: 64, offset: 1024)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3039, file: !145, line: 82, baseType: !3286, size: 64, offset: 1088)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!570, !3033, !1010, !37}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3039, file: !145, line: 84, baseType: !3290, size: 64, offset: 1152)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{null, !570}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3039, file: !145, line: 85, baseType: !3294, size: 64, offset: 1216)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{!37, !3033, !3297}
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !70, line: 65, size: 64, elements: !3299)
!3299 = !{!3300, !3301, !3302, !3303, !3304}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3298, file: !70, line: 66, baseType: !1398, size: 8)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3298, file: !70, line: 67, baseType: !1398, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3298, file: !70, line: 68, baseType: !1398, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3298, file: !70, line: 69, baseType: !1245, size: 16, offset: 16)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3298, file: !70, line: 70, baseType: !1490, size: 32, offset: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3039, file: !145, line: 86, baseType: !3306, size: 64, offset: 1280)
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{!707, !570}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3039, file: !145, line: 87, baseType: !3310, size: 64, offset: 1344)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{null, !3033, !570, !942}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3039, file: !145, line: 89, baseType: !3314, size: 64, offset: 1408)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 64)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{!37, !3317, !3319, !3012, !3012}
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3034)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3321)
!3321 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !145, line: 32, flags: DIFlagFwdDecl)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3039, file: !145, line: 95, baseType: !3323, size: 64, offset: 1472)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!37, !3033, !2932}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3039, file: !145, line: 96, baseType: !3327, size: 64, offset: 1536)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !3033, !2932}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3039, file: !145, line: 97, baseType: !3331, size: 64, offset: 1600)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{null, !3033, !707, !2909, !2909}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3039, file: !145, line: 101, baseType: !3335, size: 64, offset: 1664)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!37, !3317, !3338, !707}
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3039, file: !145, line: 103, baseType: !3340, size: 64, offset: 1728)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!37, !3317, !336, !1460}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3039, file: !145, line: 105, baseType: !3344, size: 64, offset: 1792)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!37, !3033, !1115}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3039, file: !145, line: 106, baseType: !3348, size: 64, offset: 1856)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{!1089, !3033, !1010, !1090}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3039, file: !145, line: 110, baseType: !3352, size: 64, offset: 1920)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!37, !3355, !570, !707}
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !145, line: 38, flags: DIFlagFwdDecl)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3039, file: !145, line: 112, baseType: !3358, size: 64, offset: 1984)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{null, !3355, !570, !707}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3039, file: !145, line: 114, baseType: !3362, size: 64, offset: 2048)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!3365, !570}
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !145, line: 37, flags: DIFlagFwdDecl)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3039, file: !145, line: 125, baseType: !3369, size: 64, offset: 2112)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{!540, !3317, !3317}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3039, file: !145, line: 129, baseType: !3373, size: 64, offset: 2176)
!3373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !297)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3039, file: !145, line: 130, baseType: !539, size: 64, offset: 2240)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3039, file: !145, line: 133, baseType: !3376, size: 64, offset: 2304)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3378)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !145, line: 46, size: 256, elements: !3379)
!3379 = !{!3380, !3381, !3388, !3390}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3378, file: !145, line: 47, baseType: !961, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3378, file: !145, line: 48, baseType: !3382, size: 64, offset: 64)
!3382 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !145, line: 43, baseType: !3383)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{!37, !570, !3386}
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !145, line: 36, flags: DIFlagFwdDecl)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3378, file: !145, line: 49, baseType: !3389, size: 64, offset: 128)
!3389 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !145, line: 45, baseType: !3290)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3378, file: !145, line: 50, baseType: !707, size: 32, offset: 192)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3034, file: !145, line: 146, baseType: !3033, size: 64, offset: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3034, file: !145, line: 150, baseType: !182, size: 32, offset: 128)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3034, file: !145, line: 151, baseType: !707, size: 32, offset: 160)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3034, file: !145, line: 152, baseType: !707, size: 32, offset: 192)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3034, file: !145, line: 153, baseType: !707, size: 32, offset: 224)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3034, file: !145, line: 154, baseType: !707, size: 32, offset: 256)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3034, file: !145, line: 155, baseType: !37, size: 32, offset: 288)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3034, file: !145, line: 156, baseType: !707, size: 32, offset: 320)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3034, file: !145, line: 157, baseType: !37, size: 32, offset: 352)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3034, file: !145, line: 158, baseType: !707, size: 32, offset: 384)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3034, file: !145, line: 159, baseType: !707, size: 32, offset: 416)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3034, file: !145, line: 160, baseType: !3403, size: 64, offset: 448)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3034, file: !145, line: 161, baseType: !3405, size: 128, offset: 512)
!3405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !145, line: 136, size: 128, elements: !3406)
!3406 = !{!3407, !3408}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3405, file: !145, line: 137, baseType: !707, size: 32)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3405, file: !145, line: 138, baseType: !1733, size: 64, offset: 64)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3034, file: !145, line: 162, baseType: !272, size: 128, offset: 640)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3034, file: !145, line: 163, baseType: !707, size: 32, offset: 768)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3034, file: !145, line: 164, baseType: !540, size: 8, offset: 800)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3034, file: !145, line: 165, baseType: !540, size: 8, offset: 808)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3034, file: !145, line: 171, baseType: !378, size: 64, align: 512, offset: 1024)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3034, file: !145, line: 172, baseType: !378, size: 64, offset: 1088)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3034, file: !145, line: 173, baseType: !1807, size: 256, offset: 1152)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3034, file: !145, line: 174, baseType: !954, size: 192, offset: 1408)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3034, file: !145, line: 175, baseType: !336, size: 64, offset: 1600)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3030, file: !145, line: 741, baseType: !707, size: 32, offset: 64)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3021, file: !145, line: 744, baseType: !540, size: 8, offset: 320)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3021, file: !145, line: 745, baseType: !1397, size: 8, offset: 328)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3021, file: !145, line: 746, baseType: !1038, size: 16, offset: 336)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3021, file: !145, line: 747, baseType: !707, size: 32, offset: 352)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !2933, file: !145, line: 792, baseType: !707, size: 32, offset: 1472)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !2933, file: !145, line: 793, baseType: !2985, size: 1728, offset: 1536)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2933, file: !145, line: 794, baseType: !3426, size: 64, offset: 3264)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3428)
!3428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !145, line: 432, size: 64, elements: !3429)
!3429 = !{!3430}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !3428, file: !145, line: 433, baseType: !3431, size: 64)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!37, !2909, !3265, !3045}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !2933, file: !145, line: 795, baseType: !3435, size: 64, offset: 3328)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !2933, file: !145, line: 796, baseType: !954, size: 192, offset: 3392)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !2933, file: !145, line: 797, baseType: !2909, size: 64, offset: 3584)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2933, file: !145, line: 798, baseType: !1733, size: 64, offset: 3648)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !2933, file: !145, line: 799, baseType: !336, size: 64, offset: 3712)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !2933, file: !145, line: 800, baseType: !3441, size: 128, offset: 3776)
!3441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3033, size: 128, elements: !478)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2933, file: !145, line: 801, baseType: !272, size: 128, offset: 3904)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !2933, file: !145, line: 805, baseType: !3444, size: 64, offset: 4032)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !145, line: 478, size: 576, elements: !3446)
!3446 = !{!3447, !3448, !3449, !3452, !3453, !3454, !3455, !3456, !3457}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3445, file: !145, line: 479, baseType: !2909, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3445, file: !145, line: 480, baseType: !295, size: 64, offset: 64)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !3445, file: !145, line: 481, baseType: !3450, size: 64, offset: 128)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !145, line: 209, flags: DIFlagFwdDecl)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3445, file: !145, line: 482, baseType: !570, size: 64, offset: 192)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3445, file: !145, line: 483, baseType: !289, size: 128, offset: 256)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !3445, file: !145, line: 484, baseType: !540, size: 8, offset: 384)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !3445, file: !145, line: 485, baseType: !540, size: 8, offset: 392)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !3445, file: !145, line: 486, baseType: !570, size: 64, offset: 448)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3445, file: !145, line: 487, baseType: !707, size: 32, offset: 512)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !2933, file: !145, line: 806, baseType: !3403, size: 64, offset: 4096)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !2933, file: !145, line: 807, baseType: !3460, size: 64, offset: 4160)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !70, line: 4963, size: 64, elements: !3462)
!3462 = !{!3463, !3464}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3461, file: !70, line: 4964, baseType: !468, size: 32)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !3461, file: !70, line: 4965, baseType: !468, size: 32, offset: 32)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !2933, file: !145, line: 808, baseType: !3466, size: 64, offset: 4224)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !145, line: 724, size: 32, elements: !3468)
!3468 = !{!3469, !3470}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !3467, file: !145, line: 725, baseType: !1038, size: 16)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !3467, file: !145, line: 726, baseType: !540, size: 8, offset: 16)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !2933, file: !145, line: 815, baseType: !3472, size: 64, offset: 4288)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !70, line: 4971, size: 128, elements: !3474)
!3474 = !{!3475, !3476, !3477, !3478}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3473, file: !70, line: 4972, baseType: !468, size: 32)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !3473, file: !70, line: 4973, baseType: !468, size: 32, offset: 32)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !3473, file: !70, line: 4974, baseType: !468, size: 32, offset: 64)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3473, file: !70, line: 4975, baseType: !468, size: 32, offset: 96)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !2933, file: !145, line: 823, baseType: !3480, size: 64, offset: 4352)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !2933, file: !145, line: 824, baseType: !707, size: 32, offset: 4416)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !2933, file: !145, line: 825, baseType: !707, size: 32, offset: 4448)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !2933, file: !145, line: 830, baseType: !707, size: 32, offset: 4480)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !2933, file: !145, line: 831, baseType: !707, size: 32, offset: 4512)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !2933, file: !145, line: 832, baseType: !3486, size: 64, offset: 4544)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !3488, line: 17, size: 96, elements: !3489)
!3488 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!3489 = !{!3490, !3491, !3492}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3487, file: !3488, line: 18, baseType: !37, size: 32)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !3487, file: !3488, line: 18, baseType: !37, size: 32, offset: 32)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3487, file: !3488, line: 18, baseType: !37, size: 32, offset: 64)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2933, file: !145, line: 833, baseType: !3494, size: 64, offset: 4608)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !145, line: 503, size: 128, align: 128, elements: !3496)
!3496 = !{!3497, !3498, !3499}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3495, file: !145, line: 504, baseType: !336, size: 64)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !3495, file: !145, line: 505, baseType: !336, size: 64, offset: 64)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3495, file: !145, line: 506, baseType: !2058, offset: 128)
!3500 = !DIDerivedType(tag: DW_TAG_member, scope: !2933, file: !145, line: 834, baseType: !3501, size: 256, offset: 4672)
!3501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2933, file: !145, line: 834, size: 256, elements: !3502)
!3502 = !{!3503, !3504}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3501, file: !145, line: 835, baseType: !1807, size: 256)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3501, file: !145, line: 836, baseType: !304, size: 128, align: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !2910, file: !2911, line: 544, baseType: !3506, size: 64, offset: 320)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !2911, line: 512, size: 128, elements: !3508)
!3508 = !{!3509, !3510}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3507, file: !2911, line: 513, baseType: !1038, size: 16)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3507, file: !2911, line: 514, baseType: !3511, size: 64, offset: 64)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !3513, line: 24, size: 64, elements: !3514)
!3513 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3514 = !{!3515, !3516, !3517, !3518}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3512, file: !3513, line: 25, baseType: !476, size: 16)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !3512, file: !3513, line: 26, baseType: !1398, size: 8, offset: 16)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !3512, file: !3513, line: 27, baseType: !1398, size: 8, offset: 24)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3512, file: !3513, line: 28, baseType: !468, size: 32, offset: 32)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !2910, file: !2911, line: 545, baseType: !3520, size: 64, offset: 384)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!7, !2244, !3523}
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3298)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !2910, file: !2911, line: 548, baseType: !3526, offset: 448)
!3526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3512, elements: !1922)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !2910, file: !2911, line: 549, baseType: !3528, offset: 448)
!3528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3298, elements: !314)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !2906, file: !145, line: 1034, baseType: !3530, size: 128, offset: 64)
!3530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3531, size: 128, elements: !478)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !145, line: 1034, flags: DIFlagFwdDecl)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !2895, file: !2896, line: 17, baseType: !3534, size: 128, offset: 128)
!3534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2909, size: 128, elements: !478)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2895, file: !2896, line: 18, baseType: !3536, size: 256, offset: 256)
!3536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !289, size: 256, elements: !478)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !1963, file: !1964, line: 174, baseType: !378, size: 64, offset: 15552)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !1963, file: !1964, line: 183, baseType: !3539, size: 1216, offset: 15616)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3540, line: 15, size: 1216, elements: !3541)
!3540 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3541 = !{!3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3555, !3556, !3557, !3560, !3563}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3539, file: !3540, line: 17, baseType: !1997, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3539, file: !3540, line: 18, baseType: !1997, size: 64, offset: 64)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3539, file: !3540, line: 19, baseType: !1997, size: 64, offset: 128)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3539, file: !3540, line: 20, baseType: !1997, size: 64, offset: 192)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3539, file: !3540, line: 21, baseType: !1997, size: 64, offset: 256)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3539, file: !3540, line: 22, baseType: !1997, size: 64, offset: 320)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3539, file: !3540, line: 23, baseType: !1997, size: 64, offset: 384)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3539, file: !3540, line: 24, baseType: !1997, size: 64, offset: 448)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3539, file: !3540, line: 25, baseType: !1997, size: 64, offset: 512)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3539, file: !3540, line: 26, baseType: !1997, size: 64, offset: 576)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3539, file: !3540, line: 30, baseType: !3553, size: 64, offset: 640)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3540, line: 11, flags: DIFlagFwdDecl)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3539, file: !3540, line: 31, baseType: !729, offset: 704)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3539, file: !3540, line: 32, baseType: !2221, size: 320, offset: 704)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3539, file: !3540, line: 33, baseType: !3558, size: 64, offset: 1024)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3540, line: 12, flags: DIFlagFwdDecl)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3539, file: !3540, line: 34, baseType: !3561, size: 64, offset: 1088)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3540, line: 13, flags: DIFlagFwdDecl)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3539, file: !3540, line: 37, baseType: !857, size: 64, offset: 1152)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !1963, file: !1964, line: 191, baseType: !450, size: 64, offset: 16832)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1947, file: !1948, line: 38, baseType: !3566, size: 64, offset: 384)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1948, line: 38, flags: DIFlagFwdDecl)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1947, file: !1948, line: 39, baseType: !3566, size: 64, offset: 448)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1947, file: !1948, line: 40, baseType: !3570, size: 64, offset: 512)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3572, line: 856, size: 448, elements: !3573)
!3572 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3573 = !{!3574, !3575, !3576, !3577, !3578}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3571, file: !3572, line: 857, baseType: !1271, size: 32)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3571, file: !3572, line: 858, baseType: !1793, size: 192, offset: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3571, file: !3572, line: 859, baseType: !1759, size: 64, offset: 256)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3571, file: !3572, line: 860, baseType: !1901, size: 64, offset: 320)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3571, file: !3572, line: 861, baseType: !3579, size: 64, offset: 384)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3581, line: 16, flags: DIFlagFwdDecl)
!3581 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1258, file: !1259, line: 969, baseType: !3583, size: 64, offset: 9216)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3585, line: 82, size: 7296, elements: !3586)
!3585 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3586 = !{!3587, !3588, !3589, !3590, !3591, !3592, !3593, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3622, !3631, !3632, !3634, !3635, !3636, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3664, !3665, !3672, !3673, !3674, !3675, !3676, !3677}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3584, file: !3585, line: 83, baseType: !1271, size: 32)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3584, file: !3585, line: 84, baseType: !388, size: 32, offset: 32)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3584, file: !3585, line: 85, baseType: !37, size: 32, offset: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3584, file: !3585, line: 86, baseType: !289, size: 128, offset: 128)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3584, file: !3585, line: 88, baseType: !1100, size: 128, offset: 256)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3584, file: !3585, line: 91, baseType: !1257, size: 64, offset: 384)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3584, file: !3585, line: 94, baseType: !3594, size: 192, offset: 448)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3595, line: 30, size: 192, elements: !3596)
!3595 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3596 = !{!3597, !3598}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3594, file: !3595, line: 31, baseType: !289, size: 128)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3594, file: !3595, line: 32, baseType: !3599, size: 64, offset: 128)
!3599 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3600, line: 25, baseType: !3601)
!3600 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3600, line: 23, size: 64, elements: !3602)
!3602 = !{!3603}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3601, file: !3600, line: 24, baseType: !1415, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3584, file: !3585, line: 97, baseType: !857, size: 64, offset: 640)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3584, file: !3585, line: 100, baseType: !37, size: 32, offset: 704)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3584, file: !3585, line: 106, baseType: !37, size: 32, offset: 736)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3584, file: !3585, line: 107, baseType: !1257, size: 64, offset: 768)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3584, file: !3585, line: 110, baseType: !37, size: 32, offset: 832)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3584, file: !3585, line: 111, baseType: !7, size: 32, offset: 864)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3584, file: !3585, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3584, file: !3585, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3584, file: !3585, line: 128, baseType: !37, size: 32, offset: 928)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3584, file: !3585, line: 129, baseType: !289, size: 128, offset: 960)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3584, file: !3585, line: 132, baseType: !1333, size: 512, offset: 1088)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3584, file: !3585, line: 133, baseType: !1341, size: 64, offset: 1600)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3584, file: !3585, line: 140, baseType: !3617, size: 256, offset: 1664)
!3617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3618, size: 256, elements: !478)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3585, line: 38, size: 128, elements: !3619)
!3619 = !{!3620, !3621}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3618, file: !3585, line: 39, baseType: !336, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3618, file: !3585, line: 40, baseType: !336, size: 64, offset: 64)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3584, file: !3585, line: 146, baseType: !3623, size: 192, offset: 1920)
!3623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3585, line: 66, size: 192, elements: !3624)
!3624 = !{!3625}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3623, file: !3585, line: 67, baseType: !3626, size: 192)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3585, line: 47, size: 192, elements: !3627)
!3627 = !{!3628, !3629, !3630}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3626, file: !3585, line: 48, baseType: !378, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3626, file: !3585, line: 49, baseType: !378, size: 64, offset: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3626, file: !3585, line: 50, baseType: !378, size: 64, offset: 128)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3584, file: !3585, line: 150, baseType: !1575, size: 640, offset: 2112)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3584, file: !3585, line: 153, baseType: !3633, size: 256, offset: 2752)
!3633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1521, size: 256, elements: !1202)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3584, file: !3585, line: 159, baseType: !1521, size: 64, offset: 3008)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3584, file: !3585, line: 162, baseType: !37, size: 32, offset: 3072)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3584, file: !3585, line: 164, baseType: !3637, size: 64, offset: 3136)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3585, line: 164, flags: DIFlagFwdDecl)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3584, file: !3585, line: 175, baseType: !2313, size: 32, offset: 3200)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3584, file: !3585, line: 176, baseType: !336, size: 64, offset: 3264)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3584, file: !3585, line: 176, baseType: !336, size: 64, offset: 3328)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3584, file: !3585, line: 176, baseType: !336, size: 64, offset: 3392)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3584, file: !3585, line: 176, baseType: !336, size: 64, offset: 3456)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3584, file: !3585, line: 177, baseType: !336, size: 64, offset: 3520)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3584, file: !3585, line: 178, baseType: !336, size: 64, offset: 3584)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3584, file: !3585, line: 179, baseType: !1563, size: 128, offset: 3648)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3584, file: !3585, line: 180, baseType: !317, size: 64, offset: 3776)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3584, file: !3585, line: 180, baseType: !317, size: 64, offset: 3840)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3584, file: !3585, line: 180, baseType: !317, size: 64, offset: 3904)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3584, file: !3585, line: 180, baseType: !317, size: 64, offset: 3968)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3584, file: !3585, line: 181, baseType: !317, size: 64, offset: 4032)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3584, file: !3585, line: 181, baseType: !317, size: 64, offset: 4096)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3584, file: !3585, line: 181, baseType: !317, size: 64, offset: 4160)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3584, file: !3585, line: 181, baseType: !317, size: 64, offset: 4224)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3584, file: !3585, line: 182, baseType: !317, size: 64, offset: 4288)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3584, file: !3585, line: 182, baseType: !317, size: 64, offset: 4352)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3584, file: !3585, line: 182, baseType: !317, size: 64, offset: 4416)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3584, file: !3585, line: 182, baseType: !317, size: 64, offset: 4480)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3584, file: !3585, line: 183, baseType: !317, size: 64, offset: 4544)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3584, file: !3585, line: 183, baseType: !317, size: 64, offset: 4608)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3584, file: !3585, line: 184, baseType: !3662, offset: 4672)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3663, line: 12, elements: !743)
!3663 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3584, file: !3585, line: 192, baseType: !340, size: 64, offset: 4672)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3584, file: !3585, line: 203, baseType: !3666, size: 2048, offset: 4736)
!3666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3667, size: 2048, elements: !274)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3668, line: 43, size: 128, elements: !3669)
!3668 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3669 = !{!3670, !3671}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3667, file: !3668, line: 44, baseType: !597, size: 64)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3667, file: !3668, line: 45, baseType: !597, size: 64, offset: 64)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3584, file: !3585, line: 220, baseType: !540, size: 8, offset: 6784)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3584, file: !3585, line: 221, baseType: !1246, size: 16, offset: 6800)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3584, file: !3585, line: 222, baseType: !1246, size: 16, offset: 6816)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3584, file: !3585, line: 224, baseType: !1125, size: 64, offset: 6848)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3584, file: !3585, line: 227, baseType: !954, size: 192, offset: 6912)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3584, file: !3585, line: 233, baseType: !954, size: 192, offset: 7104)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1258, file: !1259, line: 970, baseType: !3679, size: 64, offset: 9280)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3585, line: 20, size: 16576, elements: !3681)
!3681 = !{!3682, !3683, !3684, !3685}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3680, file: !3585, line: 21, baseType: !729)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3680, file: !3585, line: 22, baseType: !1271, size: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3680, file: !3585, line: 23, baseType: !1100, size: 128, offset: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3680, file: !3585, line: 24, baseType: !3686, size: 16384, offset: 192)
!3686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3687, size: 16384, elements: !3707)
!3687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3595, line: 49, size: 256, elements: !3688)
!3688 = !{!3689}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3687, file: !3595, line: 50, baseType: !3690, size: 256)
!3690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3595, line: 35, size: 256, elements: !3691)
!3691 = !{!3692, !3699, !3700, !3706}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3690, file: !3595, line: 37, baseType: !3693, size: 64)
!3693 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3694, line: 19, baseType: !3695)
!3694 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3694, line: 18, baseType: !3697)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{null, !37}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3690, file: !3595, line: 38, baseType: !317, size: 64, offset: 64)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3690, file: !3595, line: 44, baseType: !3701, size: 64, offset: 128)
!3701 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3694, line: 22, baseType: !3702)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3694, line: 21, baseType: !3704)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{null}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3690, file: !3595, line: 46, baseType: !3599, size: 64, offset: 192)
!3707 = !{!3708}
!3708 = !DISubrange(count: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1258, file: !1259, line: 971, baseType: !3599, size: 64, offset: 9344)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1258, file: !1259, line: 972, baseType: !3599, size: 64, offset: 9408)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1258, file: !1259, line: 974, baseType: !3599, size: 64, offset: 9472)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1258, file: !1259, line: 975, baseType: !3594, size: 192, offset: 9536)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1258, file: !1259, line: 976, baseType: !317, size: 64, offset: 9728)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1258, file: !1259, line: 977, baseType: !594, size: 64, offset: 9792)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1258, file: !1259, line: 978, baseType: !7, size: 32, offset: 9856)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1258, file: !1259, line: 980, baseType: !307, size: 64, offset: 9920)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1258, file: !1259, line: 989, baseType: !3718, size: 128, offset: 9984)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3719, line: 35, size: 128, elements: !3720)
!3719 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3720 = !{!3721, !3722, !3723}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3718, file: !3719, line: 36, baseType: !37, size: 32)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3718, file: !3719, line: 37, baseType: !388, size: 32, offset: 32)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3718, file: !3719, line: 38, baseType: !3724, size: 64, offset: 64)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3719, line: 23, flags: DIFlagFwdDecl)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1258, file: !1259, line: 992, baseType: !336, size: 64, offset: 10112)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1258, file: !1259, line: 993, baseType: !336, size: 64, offset: 10176)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1258, file: !1259, line: 996, baseType: !729, offset: 10240)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1258, file: !1259, line: 999, baseType: !1168, offset: 10240)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1258, file: !1259, line: 1001, baseType: !3731, size: 64, offset: 10240)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1259, line: 636, size: 64, elements: !3732)
!3732 = !{!3733}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3731, file: !1259, line: 637, baseType: !3734, size: 64)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1258, file: !1259, line: 1005, baseType: !1387, size: 128, offset: 10304)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1258, file: !1259, line: 1007, baseType: !1257, size: 64, offset: 10432)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1258, file: !1259, line: 1009, baseType: !3738, size: 64, offset: 10496)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1259, line: 1009, flags: DIFlagFwdDecl)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1258, file: !1259, line: 1043, baseType: !570, size: 64, offset: 10560)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1258, file: !1259, line: 1046, baseType: !3742, size: 64, offset: 10624)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3744, line: 554, size: 128, elements: !3745)
!3744 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3745 = !{!3746, !5399}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3743, file: !3744, line: 555, baseType: !3747, size: 64)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !3749, line: 203, size: 832, elements: !3750)
!3749 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!3750 = !{!3751, !3752, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5367, !5372, !5373, !5392, !5393, !5394, !5395, !5396, !5398}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3748, file: !3749, line: 204, baseType: !3747, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3748, file: !3749, line: 205, baseType: !3753, size: 64, offset: 64)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !3755, line: 167, size: 8512, elements: !3756)
!3755 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!3756 = !{!3757, !3758, !3759, !3760, !3762, !3763, !3764, !4646, !4647, !4823, !5334, !5335, !5336, !5337, !5338, !5339, !5342, !5343, !5346, !5347, !5348, !5351}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3754, file: !3755, line: 171, baseType: !37, size: 32)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !3754, file: !3755, line: 172, baseType: !37, size: 32, offset: 32)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !3754, file: !3755, line: 173, baseType: !37, size: 32, offset: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3754, file: !3755, line: 176, baseType: !3761, size: 256, offset: 96)
!3761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 256, elements: !716)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3754, file: !3755, line: 178, baseType: !477, size: 16, offset: 352)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !3754, file: !3755, line: 179, baseType: !477, size: 16, offset: 368)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !3754, file: !3755, line: 186, baseType: !3765, size: 64, offset: 384)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !3755, line: 149, size: 256, elements: !3767)
!3767 = !{!3768, !3769, !3770, !4644}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3766, file: !3755, line: 150, baseType: !304, size: 128, align: 64)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3766, file: !3755, line: 151, baseType: !37, size: 32, offset: 128)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !3766, file: !3755, line: 152, baseType: !3771, size: 64, offset: 192)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !3755, line: 53, size: 6592, elements: !3773)
!3773 = !{!3774, !3776, !3777, !3778, !3781, !3802, !4627, !4628, !4629, !4630, !4638}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !3772, file: !3755, line: 54, baseType: !3775, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !282, line: 125, baseType: !336)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !3772, file: !3755, line: 60, baseType: !3775, size: 64, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3772, file: !3755, line: 64, baseType: !317, size: 64, offset: 128)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !3772, file: !3755, line: 65, baseType: !3779, size: 64, offset: 192)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !3755, line: 65, flags: DIFlagFwdDecl)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3772, file: !3755, line: 66, baseType: !3782, size: 128, offset: 256)
!3782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3783, line: 105, size: 128, elements: !3784)
!3783 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3784 = !{!3785, !3786}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3782, file: !3783, line: 110, baseType: !317, size: 64)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3782, file: !3783, line: 118, baseType: !3787, size: 64, offset: 64)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3783, line: 95, size: 448, elements: !3789)
!3789 = !{!3790, !3791, !3797, !3798, !3799, !3800, !3801}
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3788, file: !3783, line: 96, baseType: !376, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3788, file: !3783, line: 97, baseType: !3792, size: 64, offset: 64)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3783, line: 60, baseType: !3794)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{null, !3796}
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3788, file: !3783, line: 98, baseType: !3792, size: 64, offset: 128)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3788, file: !3783, line: 99, baseType: !540, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3788, file: !3783, line: 100, baseType: !540, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3788, file: !3783, line: 101, baseType: !304, size: 128, align: 64, offset: 256)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3788, file: !3783, line: 102, baseType: !3796, size: 64, offset: 384)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !3772, file: !3755, line: 68, baseType: !3803, size: 5568, offset: 384)
!3803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !3804, line: 461, size: 5568, elements: !3805)
!3804 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!3805 = !{!3806, !4171, !4173, !4176, !4177, !4229, !4321, !4322, !4323, !4324, !4325, !4340, !4447, !4460, !4463, !4464, !4468, !4469, !4470, !4471, !4475, !4481, !4482, !4485, !4489, !4579, !4580, !4581, !4582, !4583, !4615, !4616, !4617, !4620, !4623, !4624, !4625, !4626}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3803, file: !3804, line: 462, baseType: !3807, size: 512)
!3807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3808, line: 64, size: 512, elements: !3809)
!3808 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3809 = !{!3810, !3811, !3812, !3814, !3854, !3956, !4161, !4166, !4167, !4168, !4169, !4170}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3807, file: !3808, line: 65, baseType: !297, size: 64)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3807, file: !3808, line: 66, baseType: !289, size: 128, offset: 64)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3807, file: !3808, line: 67, baseType: !3813, size: 64, offset: 192)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3807, file: !3808, line: 68, baseType: !3815, size: 64, offset: 256)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3808, line: 192, size: 704, elements: !3817)
!3817 = !{!3818, !3819, !3820, !3821}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3816, file: !3808, line: 193, baseType: !289, size: 128)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3816, file: !3808, line: 194, baseType: !729, offset: 128)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3816, file: !3808, line: 195, baseType: !3807, size: 512, offset: 128)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3816, file: !3808, line: 196, baseType: !3822, size: 64, offset: 640)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3824)
!3824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3808, line: 156, size: 192, elements: !3825)
!3825 = !{!3826, !3831, !3836}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3824, file: !3808, line: 157, baseType: !3827, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3828)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!37, !3815, !3813}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3824, file: !3808, line: 158, baseType: !3832, size: 64, offset: 64)
!3832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3833)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!297, !3815, !3813}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3824, file: !3808, line: 159, baseType: !3837, size: 64, offset: 128)
!3837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3838)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!37, !3815, !3813, !3841}
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3808, line: 148, size: 20736, elements: !3843)
!3843 = !{!3844, !3846, !3848, !3849, !3853}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3842, file: !3808, line: 149, baseType: !3845, size: 192)
!3845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 192, elements: !867)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3842, file: !3808, line: 150, baseType: !3847, size: 4096, offset: 192)
!3847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 4096, elements: !3707)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3842, file: !3808, line: 151, baseType: !37, size: 32, offset: 4288)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3842, file: !3808, line: 152, baseType: !3850, size: 16384, offset: 4320)
!3850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 16384, elements: !3851)
!3851 = !{!3852}
!3852 = !DISubrange(count: 2048)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3842, file: !3808, line: 153, baseType: !37, size: 32, offset: 20704)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3807, file: !3808, line: 69, baseType: !3855, size: 64, offset: 320)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3808, line: 138, size: 448, elements: !3857)
!3857 = !{!3858, !3862, !3881, !3883, !3916, !3948, !3952}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3856, file: !3808, line: 139, baseType: !3859, size: 64)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{null, !3813}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3856, file: !3808, line: 140, baseType: !3863, size: 64, offset: 64)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3865)
!3865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3866, line: 230, size: 128, elements: !3867)
!3866 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3867 = !{!3868, !3877}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3865, file: !3866, line: 231, baseType: !3869, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!1015, !3813, !3872, !577}
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3866, line: 30, size: 128, elements: !3874)
!3874 = !{!3875, !3876}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3873, file: !3866, line: 31, baseType: !297, size: 64)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3873, file: !3866, line: 32, baseType: !646, size: 16, offset: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3865, file: !3866, line: 232, baseType: !3878, size: 64, offset: 64)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{!1015, !3813, !3872, !297, !594}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3856, file: !3808, line: 141, baseType: !3882, size: 64, offset: 128)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3856, file: !3808, line: 142, baseType: !3884, size: 64, offset: 192)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3887)
!3887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3866, line: 84, size: 320, elements: !3888)
!3888 = !{!3889, !3890, !3894, !3913, !3914}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3887, file: !3866, line: 85, baseType: !297, size: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3887, file: !3866, line: 86, baseType: !3891, size: 64, offset: 64)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{!646, !3813, !3872, !37}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3887, file: !3866, line: 88, baseType: !3895, size: 64, offset: 128)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{!646, !3813, !3898, !37}
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3866, line: 168, size: 448, elements: !3900)
!3900 = !{!3901, !3902, !3903, !3904, !3908, !3909}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3899, file: !3866, line: 169, baseType: !3873, size: 128)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3899, file: !3866, line: 170, baseType: !594, size: 64, offset: 128)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3899, file: !3866, line: 171, baseType: !570, size: 64, offset: 192)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3899, file: !3866, line: 172, baseType: !3905, size: 64, offset: 256)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{!1015, !1010, !3813, !3898, !577, !824, !594}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3899, file: !3866, line: 174, baseType: !3905, size: 64, offset: 320)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3899, file: !3866, line: 176, baseType: !3910, size: 64, offset: 384)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!37, !1010, !3813, !3898, !1115}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3887, file: !3866, line: 90, baseType: !3882, size: 64, offset: 192)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3887, file: !3866, line: 91, baseType: !3915, size: 64, offset: 256)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3856, file: !3808, line: 143, baseType: !3917, size: 64, offset: 256)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{!3920, !3813}
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3922)
!3922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !3923, line: 39, size: 384, elements: !3924)
!3923 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!3924 = !{!3925, !3931, !3935, !3939, !3943, !3947}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3922, file: !3923, line: 40, baseType: !3926, size: 32)
!3926 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !3923, line: 26, baseType: !7, size: 32, elements: !3927)
!3927 = !{!3928, !3929, !3930}
!3928 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!3929 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!3930 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3922, file: !3923, line: 41, baseType: !3932, size: 64, offset: 64)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!540}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3922, file: !3923, line: 42, baseType: !3936, size: 64, offset: 128)
!3936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 64)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{!570}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3922, file: !3923, line: 43, baseType: !3940, size: 64, offset: 192)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DISubroutineType(types: !3942)
!3942 = !{!2244, !450}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3922, file: !3923, line: 44, baseType: !3944, size: 64, offset: 256)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!2244}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3922, file: !3923, line: 45, baseType: !3290, size: 64, offset: 320)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3856, file: !3808, line: 144, baseType: !3949, size: 64, offset: 320)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!2244, !3813}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3856, file: !3808, line: 145, baseType: !3953, size: 64, offset: 384)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{null, !3813, !1882, !1883}
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3807, file: !3808, line: 70, baseType: !3957, size: 64, offset: 384)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !838, line: 123, size: 1024, elements: !3959)
!3959 = !{!3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !4154, !4155, !4156, !4157, !4158}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3958, file: !838, line: 124, baseType: !388, size: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3958, file: !838, line: 125, baseType: !388, size: 32, offset: 32)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3958, file: !838, line: 135, baseType: !3957, size: 64, offset: 64)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3958, file: !838, line: 136, baseType: !297, size: 64, offset: 128)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3958, file: !838, line: 138, baseType: !438, size: 192, align: 64, offset: 192)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3958, file: !838, line: 140, baseType: !2244, size: 64, offset: 384)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3958, file: !838, line: 141, baseType: !7, size: 32, offset: 448)
!3967 = !DIDerivedType(tag: DW_TAG_member, scope: !3958, file: !838, line: 142, baseType: !3968, size: 256, offset: 512)
!3968 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3958, file: !838, line: 142, size: 256, elements: !3969)
!3969 = !{!3970, !4010, !4014}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3968, file: !838, line: 143, baseType: !3971, size: 192)
!3971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !838, line: 91, size: 192, elements: !3972)
!3972 = !{!3973, !3974, !3975}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3971, file: !838, line: 92, baseType: !317, size: 64)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3971, file: !838, line: 94, baseType: !1133, size: 64, offset: 64)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3971, file: !838, line: 100, baseType: !3976, size: 64, offset: 128)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !838, line: 180, size: 704, elements: !3978)
!3978 = !{!3979, !3980, !3981, !3982, !3983, !3984, !4008, !4009}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3977, file: !838, line: 182, baseType: !3957, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3977, file: !838, line: 183, baseType: !7, size: 32, offset: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3977, file: !838, line: 186, baseType: !1981, size: 192, offset: 128)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3977, file: !838, line: 187, baseType: !707, size: 32, offset: 320)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3977, file: !838, line: 188, baseType: !707, size: 32, offset: 352)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3977, file: !838, line: 189, baseType: !3985, size: 64, offset: 384)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !838, line: 168, size: 320, elements: !3987)
!3987 = !{!3988, !3992, !3996, !4000, !4004}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3986, file: !838, line: 169, baseType: !3989, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!37, !942, !3976}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3986, file: !838, line: 171, baseType: !3993, size: 64, offset: 64)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DISubroutineType(types: !3995)
!3995 = !{!37, !3957, !297, !646}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3986, file: !838, line: 173, baseType: !3997, size: 64, offset: 128)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!37, !3957}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3986, file: !838, line: 174, baseType: !4001, size: 64, offset: 192)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!37, !3957, !3957, !297}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3986, file: !838, line: 176, baseType: !4005, size: 64, offset: 256)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{!37, !942, !3957, !3976}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3977, file: !838, line: 192, baseType: !289, size: 128, offset: 448)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3977, file: !838, line: 194, baseType: !1100, size: 128, offset: 576)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3968, file: !838, line: 144, baseType: !4011, size: 64)
!4011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !838, line: 103, size: 64, elements: !4012)
!4012 = !{!4013}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4011, file: !838, line: 104, baseType: !3957, size: 64)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3968, file: !838, line: 145, baseType: !4015, size: 256)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !838, line: 107, size: 256, elements: !4016)
!4016 = !{!4017, !4149, !4152, !4153}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4015, file: !838, line: 108, baseType: !4018, size: 64)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4020)
!4020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !838, line: 217, size: 768, elements: !4021)
!4021 = !{!4022, !4126, !4130, !4131, !4132, !4133, !4134, !4138, !4139, !4140, !4141, !4145}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4020, file: !838, line: 222, baseType: !4023, size: 64)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!37, !4026}
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !838, line: 197, size: 1088, elements: !4028)
!4028 = !{!4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4027, file: !838, line: 199, baseType: !3957, size: 64)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4027, file: !838, line: 200, baseType: !1010, size: 64, offset: 64)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4027, file: !838, line: 201, baseType: !942, size: 64, offset: 128)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4027, file: !838, line: 202, baseType: !570, size: 64, offset: 192)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4027, file: !838, line: 205, baseType: !954, size: 192, offset: 256)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4027, file: !838, line: 206, baseType: !954, size: 192, offset: 448)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4027, file: !838, line: 207, baseType: !37, size: 32, offset: 640)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4027, file: !838, line: 208, baseType: !289, size: 128, offset: 704)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4027, file: !838, line: 209, baseType: !577, size: 64, offset: 832)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4027, file: !838, line: 211, baseType: !594, size: 64, offset: 896)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4027, file: !838, line: 212, baseType: !540, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4027, file: !838, line: 213, baseType: !540, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4027, file: !838, line: 214, baseType: !4042, size: 64, offset: 1024)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4044)
!4044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !19, line: 557, size: 832, elements: !4045)
!4045 = !{!4046, !4050, !4051, !4055, !4059, !4100, !4104, !4108, !4112, !4113, !4114, !4118, !4122}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4044, file: !19, line: 558, baseType: !4047, size: 64)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{null, !1115}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4044, file: !19, line: 559, baseType: !4047, size: 64, offset: 64)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4044, file: !19, line: 560, baseType: !4052, size: 64, offset: 128)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!37, !1115, !317}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !4044, file: !19, line: 561, baseType: !4056, size: 64, offset: 192)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!37, !1115}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !4044, file: !19, line: 562, baseType: !4060, size: 64, offset: 256)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!4063, !4064}
!4063 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !626, line: 682, baseType: !7)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !19, line: 508, size: 768, elements: !4066)
!4066 = !{!4067, !4068, !4069, !4070, !4071, !4072, !4079, !4086, !4092, !4093, !4094, !4096, !4098}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !4065, file: !19, line: 509, baseType: !1115, size: 64)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4065, file: !19, line: 510, baseType: !7, size: 32, offset: 64)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4065, file: !19, line: 511, baseType: !1990, size: 32, offset: 96)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !4065, file: !19, line: 512, baseType: !317, size: 64, offset: 128)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4065, file: !19, line: 513, baseType: !317, size: 64, offset: 192)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4065, file: !19, line: 514, baseType: !4073, size: 64, offset: 256)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 64)
!4074 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1148, line: 385, baseType: !4075)
!4075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1148, line: 385, size: 64, elements: !4076)
!4076 = !{!4077}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4075, file: !1148, line: 385, baseType: !4078, size: 64)
!4078 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1153, line: 15, baseType: !317)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4065, file: !19, line: 516, baseType: !4080, size: 64, offset: 320)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1148, line: 359, baseType: !4082)
!4082 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1148, line: 359, size: 64, elements: !4083)
!4083 = !{!4084}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4082, file: !1148, line: 359, baseType: !4085, size: 64)
!4085 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1153, line: 16, baseType: !317)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !4065, file: !19, line: 519, baseType: !4087, size: 64, offset: 384)
!4087 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1153, line: 21, baseType: !4088)
!4088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1153, line: 21, size: 64, elements: !4089)
!4089 = !{!4090}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4088, file: !1153, line: 21, baseType: !4091, size: 64)
!4091 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1153, line: 14, baseType: !317)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !4065, file: !19, line: 521, baseType: !624, size: 64, offset: 448)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4065, file: !19, line: 522, baseType: !624, size: 64, offset: 512)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4065, file: !19, line: 528, baseType: !4095, size: 64, offset: 576)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4065, file: !19, line: 532, baseType: !4097, size: 64, offset: 640)
!4097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !4065, file: !19, line: 536, baseType: !4099, size: 64, offset: 704)
!4099 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1148, line: 509, baseType: !624)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !4044, file: !19, line: 563, baseType: !4101, size: 64, offset: 320)
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{!4063, !4064, !18}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !4044, file: !19, line: 565, baseType: !4105, size: 64, offset: 384)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{null, !4064, !317, !317}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !4044, file: !19, line: 567, baseType: !4109, size: 64, offset: 448)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!317, !1115}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !4044, file: !19, line: 571, baseType: !4060, size: 64, offset: 512)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !4044, file: !19, line: 574, baseType: !4060, size: 64, offset: 576)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !4044, file: !19, line: 579, baseType: !4115, size: 64, offset: 640)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4116, size: 64)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{!37, !1115, !317, !570, !37, !37}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4044, file: !19, line: 585, baseType: !4119, size: 64, offset: 704)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!297, !1115}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !4044, file: !19, line: 615, baseType: !4123, size: 64, offset: 768)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!624, !1115, !317}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4020, file: !838, line: 223, baseType: !4127, size: 64, offset: 64)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{null, !4026}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4020, file: !838, line: 236, baseType: !979, size: 64, offset: 128)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4020, file: !838, line: 238, baseType: !966, size: 64, offset: 192)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4020, file: !838, line: 239, baseType: !975, size: 64, offset: 256)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4020, file: !838, line: 240, baseType: !971, size: 64, offset: 320)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4020, file: !838, line: 242, baseType: !4135, size: 64, offset: 384)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!1015, !4026, !577, !594, !824}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4020, file: !838, line: 252, baseType: !594, size: 64, offset: 448)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4020, file: !838, line: 259, baseType: !540, size: 8, offset: 512)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4020, file: !838, line: 260, baseType: !4135, size: 64, offset: 576)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4020, file: !838, line: 263, baseType: !4142, size: 64, offset: 640)
!4142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4143, size: 64)
!4143 = !DISubroutineType(types: !4144)
!4144 = !{!1089, !4026, !1090}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4020, file: !838, line: 266, baseType: !4146, size: 64, offset: 704)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!37, !4026, !1115}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4015, file: !838, line: 109, baseType: !4150, size: 64, offset: 64)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 64)
!4151 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !838, line: 31, flags: DIFlagFwdDecl)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4015, file: !838, line: 110, baseType: !824, size: 64, offset: 128)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4015, file: !838, line: 111, baseType: !3957, size: 64, offset: 192)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3958, file: !838, line: 148, baseType: !570, size: 64, offset: 768)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3958, file: !838, line: 154, baseType: !336, size: 64, offset: 832)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3958, file: !838, line: 156, baseType: !477, size: 16, offset: 896)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3958, file: !838, line: 157, baseType: !646, size: 16, offset: 912)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3958, file: !838, line: 158, baseType: !4159, size: 64, offset: 960)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !838, line: 32, flags: DIFlagFwdDecl)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3807, file: !3808, line: 71, baseType: !4162, size: 32, offset: 448)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !4163, line: 19, size: 32, elements: !4164)
!4163 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!4164 = !{!4165}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4162, file: !4163, line: 20, baseType: !1271, size: 32)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3807, file: !3808, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3807, file: !3808, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3807, file: !3808, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3807, file: !3808, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3807, file: !3808, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3803, file: !3804, line: 463, baseType: !4172, size: 64, offset: 512)
!4172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3803, file: !3804, line: 465, baseType: !4174, size: 64, offset: 576)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !3804, line: 36, flags: DIFlagFwdDecl)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3803, file: !3804, line: 467, baseType: !297, size: 64, offset: 640)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3803, file: !3804, line: 468, baseType: !4178, size: 64, offset: 704)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4180)
!4180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !3804, line: 87, size: 384, elements: !4181)
!4181 = !{!4182, !4183, !4184, !4188, !4193, !4197}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4180, file: !3804, line: 88, baseType: !297, size: 64)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4180, file: !3804, line: 89, baseType: !3884, size: 64, offset: 64)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4180, file: !3804, line: 90, baseType: !4185, size: 64, offset: 128)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4186, size: 64)
!4186 = !DISubroutineType(types: !4187)
!4187 = !{!37, !4172, !3841}
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4180, file: !3804, line: 91, baseType: !4189, size: 64, offset: 192)
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{!577, !4172, !4192, !1882, !1883}
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4180, file: !3804, line: 93, baseType: !4194, size: 64, offset: 256)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{null, !4172}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4180, file: !3804, line: 95, baseType: !4198, size: 64, offset: 320)
!4198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4199, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4200)
!4200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !4201, line: 278, size: 1472, elements: !4202)
!4201 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!4202 = !{!4203, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4200, file: !4201, line: 279, baseType: !4204, size: 64)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!37, !4172}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4200, file: !4201, line: 280, baseType: !4194, size: 64, offset: 64)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4200, file: !4201, line: 281, baseType: !4204, size: 64, offset: 128)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4200, file: !4201, line: 282, baseType: !4204, size: 64, offset: 192)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4200, file: !4201, line: 283, baseType: !4204, size: 64, offset: 256)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4200, file: !4201, line: 284, baseType: !4204, size: 64, offset: 320)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4200, file: !4201, line: 285, baseType: !4204, size: 64, offset: 384)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4200, file: !4201, line: 286, baseType: !4204, size: 64, offset: 448)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4200, file: !4201, line: 287, baseType: !4204, size: 64, offset: 512)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4200, file: !4201, line: 288, baseType: !4204, size: 64, offset: 576)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4200, file: !4201, line: 289, baseType: !4204, size: 64, offset: 640)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4200, file: !4201, line: 290, baseType: !4204, size: 64, offset: 704)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4200, file: !4201, line: 291, baseType: !4204, size: 64, offset: 768)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4200, file: !4201, line: 292, baseType: !4204, size: 64, offset: 832)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4200, file: !4201, line: 293, baseType: !4204, size: 64, offset: 896)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4200, file: !4201, line: 294, baseType: !4204, size: 64, offset: 960)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4200, file: !4201, line: 295, baseType: !4204, size: 64, offset: 1024)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4200, file: !4201, line: 296, baseType: !4204, size: 64, offset: 1088)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4200, file: !4201, line: 297, baseType: !4204, size: 64, offset: 1152)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4200, file: !4201, line: 298, baseType: !4204, size: 64, offset: 1216)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4200, file: !4201, line: 299, baseType: !4204, size: 64, offset: 1280)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4200, file: !4201, line: 300, baseType: !4204, size: 64, offset: 1344)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4200, file: !4201, line: 301, baseType: !4204, size: 64, offset: 1408)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3803, file: !3804, line: 470, baseType: !4230, size: 64, offset: 768)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4231, size: 64)
!4231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4232, line: 82, size: 1408, elements: !4233)
!4232 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4233 = !{!4234, !4235, !4236, !4237, !4238, !4239, !4240, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4316, !4319, !4320}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4231, file: !4232, line: 83, baseType: !297, size: 64)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4231, file: !4232, line: 84, baseType: !297, size: 64, offset: 64)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4231, file: !4232, line: 85, baseType: !4172, size: 64, offset: 128)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4231, file: !4232, line: 86, baseType: !3884, size: 64, offset: 192)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4231, file: !4232, line: 87, baseType: !3884, size: 64, offset: 256)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4231, file: !4232, line: 88, baseType: !3884, size: 64, offset: 320)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4231, file: !4232, line: 90, baseType: !4241, size: 64, offset: 384)
!4241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4242, size: 64)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!37, !4172, !4244}
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !4246, line: 95, size: 1152, elements: !4247)
!4246 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!4247 = !{!4248, !4249, !4250, !4251, !4252, !4253, !4259, !4269, !4280, !4281, !4282, !4283, !4284, !4292, !4293, !4294, !4295, !4296, !4297}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4245, file: !4246, line: 96, baseType: !297, size: 64)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4245, file: !4246, line: 97, baseType: !4230, size: 64, offset: 64)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4245, file: !4246, line: 99, baseType: !852, size: 64, offset: 128)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4245, file: !4246, line: 100, baseType: !297, size: 64, offset: 192)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4245, file: !4246, line: 102, baseType: !540, size: 8, offset: 256)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4245, file: !4246, line: 103, baseType: !4254, size: 32, offset: 288)
!4254 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !4246, line: 44, baseType: !7, size: 32, elements: !4255)
!4255 = !{!4256, !4257, !4258}
!4256 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!4257 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!4258 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4245, file: !4246, line: 105, baseType: !4260, size: 64, offset: 320)
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4262)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4263, line: 262, size: 1600, elements: !4264)
!4263 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4264 = !{!4265, !4266, !4267, !4268}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4262, file: !4263, line: 263, baseType: !3761, size: 256)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4262, file: !4263, line: 264, baseType: !3761, size: 256, offset: 256)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4262, file: !4263, line: 265, baseType: !2990, size: 1024, offset: 512)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4262, file: !4263, line: 266, baseType: !2244, size: 64, offset: 1536)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4245, file: !4246, line: 106, baseType: !4270, size: 64, offset: 384)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4272)
!4272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4263, line: 210, size: 256, elements: !4273)
!4273 = !{!4274, !4276, !4278, !4279}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4272, file: !4263, line: 211, baseType: !4275, size: 72)
!4275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 72, elements: !2074)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4272, file: !4263, line: 212, baseType: !4277, size: 64, offset: 128)
!4277 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4263, line: 14, baseType: !317)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4272, file: !4263, line: 213, baseType: !468, size: 32, offset: 192)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4272, file: !4263, line: 214, baseType: !468, size: 32, offset: 224)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4245, file: !4246, line: 108, baseType: !4204, size: 64, offset: 448)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4245, file: !4246, line: 109, baseType: !4194, size: 64, offset: 512)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4245, file: !4246, line: 110, baseType: !4204, size: 64, offset: 576)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4245, file: !4246, line: 111, baseType: !4194, size: 64, offset: 640)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4245, file: !4246, line: 112, baseType: !4285, size: 64, offset: 704)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!37, !4172, !4288}
!4288 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !4201, line: 52, baseType: !4289)
!4289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !4201, line: 50, size: 32, elements: !4290)
!4290 = !{!4291}
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4289, file: !4201, line: 51, baseType: !37, size: 32)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4245, file: !4246, line: 113, baseType: !4204, size: 64, offset: 768)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4245, file: !4246, line: 114, baseType: !3884, size: 64, offset: 832)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4245, file: !4246, line: 115, baseType: !3884, size: 64, offset: 896)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4245, file: !4246, line: 117, baseType: !4198, size: 64, offset: 960)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4245, file: !4246, line: 118, baseType: !4194, size: 64, offset: 1024)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4245, file: !4246, line: 120, baseType: !4298, size: 64, offset: 1088)
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!4299 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !4246, line: 120, flags: DIFlagFwdDecl)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4231, file: !4232, line: 91, baseType: !4185, size: 64, offset: 448)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4231, file: !4232, line: 92, baseType: !4204, size: 64, offset: 512)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4231, file: !4232, line: 93, baseType: !4194, size: 64, offset: 576)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4231, file: !4232, line: 94, baseType: !4204, size: 64, offset: 640)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4231, file: !4232, line: 95, baseType: !4194, size: 64, offset: 704)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4231, file: !4232, line: 97, baseType: !4204, size: 64, offset: 768)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4231, file: !4232, line: 98, baseType: !4204, size: 64, offset: 832)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4231, file: !4232, line: 100, baseType: !4285, size: 64, offset: 896)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4231, file: !4232, line: 101, baseType: !4204, size: 64, offset: 960)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4231, file: !4232, line: 103, baseType: !4204, size: 64, offset: 1024)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4231, file: !4232, line: 105, baseType: !4204, size: 64, offset: 1088)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4231, file: !4232, line: 107, baseType: !4198, size: 64, offset: 1152)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4231, file: !4232, line: 109, baseType: !4313, size: 64, offset: 1216)
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 64)
!4314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4315)
!4315 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4232, line: 109, flags: DIFlagFwdDecl)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4231, file: !4232, line: 111, baseType: !4317, size: 64, offset: 1280)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4232, line: 111, flags: DIFlagFwdDecl)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4231, file: !4232, line: 112, baseType: !861, offset: 1344)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4231, file: !4232, line: 114, baseType: !540, size: 8, offset: 1344)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3803, file: !3804, line: 471, baseType: !4244, size: 64, offset: 832)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3803, file: !3804, line: 473, baseType: !570, size: 64, offset: 896)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3803, file: !3804, line: 475, baseType: !570, size: 64, offset: 960)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3803, file: !3804, line: 480, baseType: !954, size: 192, offset: 1024)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3803, file: !3804, line: 484, baseType: !4326, size: 576, offset: 1216)
!4326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !3804, line: 361, size: 576, elements: !4327)
!4327 = !{!4328, !4329, !4330, !4331, !4332, !4333}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4326, file: !3804, line: 362, baseType: !289, size: 128)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4326, file: !3804, line: 363, baseType: !289, size: 128, offset: 128)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4326, file: !3804, line: 364, baseType: !289, size: 128, offset: 256)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4326, file: !3804, line: 365, baseType: !289, size: 128, offset: 384)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4326, file: !3804, line: 366, baseType: !540, size: 8, offset: 512)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4326, file: !3804, line: 367, baseType: !4334, size: 32, offset: 544)
!4334 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !3804, line: 343, baseType: !7, size: 32, elements: !4335)
!4335 = !{!4336, !4337, !4338, !4339}
!4336 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!4337 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!4338 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!4339 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3803, file: !3804, line: 485, baseType: !4341, size: 2304, offset: 1792)
!4341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !4201, line: 565, size: 2304, elements: !4342)
!4342 = !{!4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4417, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4440, !4444}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4341, file: !4201, line: 566, baseType: !4288, size: 32)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4341, file: !4201, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4341, file: !4201, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4341, file: !4201, line: 569, baseType: !540, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4341, file: !4201, line: 570, baseType: !540, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4341, file: !4201, line: 571, baseType: !540, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4341, file: !4201, line: 572, baseType: !540, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4341, file: !4201, line: 573, baseType: !540, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4341, file: !4201, line: 574, baseType: !540, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4341, file: !4201, line: 575, baseType: !540, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4341, file: !4201, line: 576, baseType: !540, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4341, file: !4201, line: 577, baseType: !707, size: 32, offset: 64)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4341, file: !4201, line: 578, baseType: !729, offset: 96)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4341, file: !4201, line: 580, baseType: !289, size: 128, offset: 128)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4341, file: !4201, line: 581, baseType: !1547, size: 192, offset: 256)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4341, file: !4201, line: 582, baseType: !4359, size: 64, offset: 448)
!4359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4360, size: 64)
!4360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4361, line: 43, size: 1472, elements: !4362)
!4361 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4362 = !{!4363, !4364, !4365, !4366, !4367, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4360, file: !4361, line: 44, baseType: !297, size: 64)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4360, file: !4361, line: 45, baseType: !37, size: 32, offset: 64)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4360, file: !4361, line: 46, baseType: !289, size: 128, offset: 128)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4360, file: !4361, line: 47, baseType: !729, offset: 256)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4360, file: !4361, line: 48, baseType: !4368, size: 64, offset: 256)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !4201, line: 533, flags: DIFlagFwdDecl)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4360, file: !4361, line: 49, baseType: !2221, size: 320, offset: 320)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4360, file: !4361, line: 50, baseType: !317, size: 64, offset: 640)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4360, file: !4361, line: 51, baseType: !1341, size: 64, offset: 704)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4360, file: !4361, line: 52, baseType: !1341, size: 64, offset: 768)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4360, file: !4361, line: 53, baseType: !1341, size: 64, offset: 832)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4360, file: !4361, line: 54, baseType: !1341, size: 64, offset: 896)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4360, file: !4361, line: 55, baseType: !1341, size: 64, offset: 960)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4360, file: !4361, line: 56, baseType: !317, size: 64, offset: 1024)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4360, file: !4361, line: 57, baseType: !317, size: 64, offset: 1088)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4360, file: !4361, line: 58, baseType: !317, size: 64, offset: 1152)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4360, file: !4361, line: 59, baseType: !317, size: 64, offset: 1216)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4360, file: !4361, line: 60, baseType: !317, size: 64, offset: 1280)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4360, file: !4361, line: 61, baseType: !4172, size: 64, offset: 1344)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4360, file: !4361, line: 62, baseType: !540, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4360, file: !4361, line: 63, baseType: !540, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4341, file: !4201, line: 583, baseType: !540, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4341, file: !4201, line: 584, baseType: !540, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4341, file: !4201, line: 585, baseType: !540, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4341, file: !4201, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4341, file: !4201, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4341, file: !4201, line: 592, baseType: !1333, size: 512, offset: 576)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4341, file: !4201, line: 593, baseType: !336, size: 64, offset: 1088)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4341, file: !4201, line: 594, baseType: !1807, size: 256, offset: 1152)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4341, file: !4201, line: 595, baseType: !1100, size: 128, offset: 1408)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4341, file: !4201, line: 596, baseType: !4368, size: 64, offset: 1536)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4341, file: !4201, line: 597, baseType: !388, size: 32, offset: 1600)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4341, file: !4201, line: 598, baseType: !388, size: 32, offset: 1632)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4341, file: !4201, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4341, file: !4201, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4341, file: !4201, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4341, file: !4201, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4341, file: !4201, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4341, file: !4201, line: 604, baseType: !540, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4341, file: !4201, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4341, file: !4201, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4341, file: !4201, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4341, file: !4201, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4341, file: !4201, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4341, file: !4201, line: 610, baseType: !7, size: 32, offset: 1696)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4341, file: !4201, line: 611, baseType: !4410, size: 32, offset: 1728)
!4410 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !4201, line: 524, baseType: !7, size: 32, elements: !4411)
!4411 = !{!4412, !4413, !4414, !4415, !4416}
!4412 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!4413 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!4414 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!4415 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!4416 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4341, file: !4201, line: 612, baseType: !4418, size: 32, offset: 1760)
!4418 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !4201, line: 502, baseType: !7, size: 32, elements: !4419)
!4419 = !{!4420, !4421, !4422, !4423}
!4420 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!4421 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!4422 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!4423 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4341, file: !4201, line: 613, baseType: !37, size: 32, offset: 1792)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4341, file: !4201, line: 614, baseType: !37, size: 32, offset: 1824)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4341, file: !4201, line: 615, baseType: !336, size: 64, offset: 1856)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4341, file: !4201, line: 616, baseType: !336, size: 64, offset: 1920)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4341, file: !4201, line: 617, baseType: !336, size: 64, offset: 1984)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4341, file: !4201, line: 618, baseType: !336, size: 64, offset: 2048)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4341, file: !4201, line: 620, baseType: !4431, size: 64, offset: 2112)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !4201, line: 536, size: 256, elements: !4433)
!4433 = !{!4434, !4435, !4436, !4437}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4432, file: !4201, line: 537, baseType: !729)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4432, file: !4201, line: 538, baseType: !7, size: 32)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4432, file: !4201, line: 540, baseType: !289, size: 128, offset: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4432, file: !4201, line: 543, baseType: !4438, size: 64, offset: 192)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 64)
!4439 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !4201, line: 534, flags: DIFlagFwdDecl)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4341, file: !4201, line: 621, baseType: !4441, size: 64, offset: 2176)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{null, !4172, !1489}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4341, file: !4201, line: 622, baseType: !4445, size: 64, offset: 2240)
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 64)
!4446 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !4201, line: 622, flags: DIFlagFwdDecl)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3803, file: !3804, line: 486, baseType: !4448, size: 64, offset: 4096)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4449, size: 64)
!4449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !4201, line: 642, size: 1792, elements: !4450)
!4450 = !{!4451, !4452, !4453, !4457, !4458, !4459}
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4449, file: !4201, line: 643, baseType: !4200, size: 1472)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4449, file: !4201, line: 644, baseType: !4204, size: 64, offset: 1472)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4449, file: !4201, line: 645, baseType: !4454, size: 64, offset: 1536)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{null, !4172, !540}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4449, file: !4201, line: 646, baseType: !4204, size: 64, offset: 1600)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4449, file: !4201, line: 647, baseType: !4194, size: 64, offset: 1664)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4449, file: !4201, line: 648, baseType: !4194, size: 64, offset: 1728)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3803, file: !3804, line: 493, baseType: !4461, size: 64, offset: 4160)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !3804, line: 493, flags: DIFlagFwdDecl)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3803, file: !3804, line: 499, baseType: !289, size: 128, offset: 4224)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3803, file: !3804, line: 502, baseType: !4465, size: 64, offset: 4352)
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 64)
!4466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4467)
!4467 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !3804, line: 502, flags: DIFlagFwdDecl)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3803, file: !3804, line: 504, baseType: !3338, size: 64, offset: 4416)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3803, file: !3804, line: 505, baseType: !336, size: 64, offset: 4480)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3803, file: !3804, line: 510, baseType: !336, size: 64, offset: 4544)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3803, file: !3804, line: 511, baseType: !4472, size: 64, offset: 4608)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4474)
!4474 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !3804, line: 511, flags: DIFlagFwdDecl)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3803, file: !3804, line: 513, baseType: !4476, size: 64, offset: 4672)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 64)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !3804, line: 288, size: 128, elements: !4478)
!4478 = !{!4479, !4480}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4477, file: !3804, line: 293, baseType: !7, size: 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4477, file: !3804, line: 294, baseType: !317, size: 64, offset: 64)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3803, file: !3804, line: 515, baseType: !289, size: 128, offset: 4736)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3803, file: !3804, line: 526, baseType: !4483, offset: 4864)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4484, line: 5, elements: !743)
!4484 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3803, file: !3804, line: 528, baseType: !4486, size: 64, offset: 4864)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4487 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4488, line: 14, flags: DIFlagFwdDecl)
!4488 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3803, file: !3804, line: 529, baseType: !4490, size: 64, offset: 4928)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4492, line: 17, size: 192, elements: !4493)
!4492 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4493 = !{!4494, !4495, !4578}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4491, file: !4492, line: 18, baseType: !4490, size: 64)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4491, file: !4492, line: 19, baseType: !4496, size: 64, offset: 64)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4498)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4492, line: 110, size: 1152, elements: !4499)
!4499 = !{!4500, !4504, !4508, !4514, !4520, !4524, !4528, !4533, !4537, !4538, !4542, !4546, !4550, !4561, !4562, !4563, !4564, !4574}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4498, file: !4492, line: 111, baseType: !4501, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 64)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{!4490, !4490}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4498, file: !4492, line: 112, baseType: !4505, size: 64, offset: 64)
!4505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 64)
!4506 = !DISubroutineType(types: !4507)
!4507 = !{null, !4490}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4498, file: !4492, line: 113, baseType: !4509, size: 64, offset: 128)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 64)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{!540, !4512}
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4491)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4498, file: !4492, line: 114, baseType: !4515, size: 64, offset: 192)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{!2244, !4512, !4518}
!4518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4519, size: 64)
!4519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3803)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4498, file: !4492, line: 116, baseType: !4521, size: 64, offset: 256)
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4522, size: 64)
!4522 = !DISubroutineType(types: !4523)
!4523 = !{!540, !4512, !297}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4498, file: !4492, line: 118, baseType: !4525, size: 64, offset: 320)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4526, size: 64)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{!37, !4512, !297, !7, !570, !594}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4498, file: !4492, line: 123, baseType: !4529, size: 64, offset: 384)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!37, !4512, !297, !4532, !594}
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4498, file: !4492, line: 126, baseType: !4534, size: 64, offset: 448)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 64)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!297, !4512}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4498, file: !4492, line: 127, baseType: !4534, size: 64, offset: 512)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4498, file: !4492, line: 128, baseType: !4539, size: 64, offset: 576)
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4540, size: 64)
!4540 = !DISubroutineType(types: !4541)
!4541 = !{!4490, !4512}
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4498, file: !4492, line: 130, baseType: !4543, size: 64, offset: 640)
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4544 = !DISubroutineType(types: !4545)
!4545 = !{!4490, !4512, !4490}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4498, file: !4492, line: 133, baseType: !4547, size: 64, offset: 704)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 64)
!4548 = !DISubroutineType(types: !4549)
!4549 = !{!4490, !4512, !297}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4498, file: !4492, line: 135, baseType: !4551, size: 64, offset: 768)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 64)
!4552 = !DISubroutineType(types: !4553)
!4553 = !{!37, !4512, !297, !297, !7, !7, !4554}
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4555, size: 64)
!4555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4492, line: 43, size: 640, elements: !4556)
!4556 = !{!4557, !4558, !4559}
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4555, file: !4492, line: 44, baseType: !4490, size: 64)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4555, file: !4492, line: 45, baseType: !7, size: 32, offset: 64)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4555, file: !4492, line: 46, baseType: !4560, size: 512, offset: 128)
!4560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 512, elements: !1371)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4498, file: !4492, line: 140, baseType: !4543, size: 64, offset: 832)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4498, file: !4492, line: 143, baseType: !4539, size: 64, offset: 896)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4498, file: !4492, line: 145, baseType: !4501, size: 64, offset: 960)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4498, file: !4492, line: 146, baseType: !4565, size: 64, offset: 1024)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4566 = !DISubroutineType(types: !4567)
!4567 = !{!37, !4512, !4568}
!4568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4569, size: 64)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4492, line: 29, size: 128, elements: !4570)
!4570 = !{!4571, !4572, !4573}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4569, file: !4492, line: 30, baseType: !7, size: 32)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4569, file: !4492, line: 31, baseType: !7, size: 32, offset: 32)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4569, file: !4492, line: 32, baseType: !4512, size: 64, offset: 64)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4498, file: !4492, line: 148, baseType: !4575, size: 64, offset: 1088)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!37, !4512, !4172}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4491, file: !4492, line: 20, baseType: !4172, size: 64, offset: 128)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3803, file: !3804, line: 534, baseType: !819, size: 32, offset: 4992)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3803, file: !3804, line: 535, baseType: !707, size: 32, offset: 5024)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3803, file: !3804, line: 537, baseType: !729, offset: 5056)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3803, file: !3804, line: 538, baseType: !289, size: 128, offset: 5056)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3803, file: !3804, line: 540, baseType: !4584, size: 64, offset: 5184)
!4584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4585, size: 64)
!4585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4586, line: 54, size: 960, elements: !4587)
!4586 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4587 = !{!4588, !4589, !4590, !4591, !4592, !4593, !4594, !4598, !4602, !4603, !4604, !4605, !4609, !4613, !4614}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4585, file: !4586, line: 55, baseType: !297, size: 64)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4585, file: !4586, line: 56, baseType: !852, size: 64, offset: 64)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4585, file: !4586, line: 58, baseType: !3884, size: 64, offset: 128)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4585, file: !4586, line: 59, baseType: !3884, size: 64, offset: 192)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4585, file: !4586, line: 60, baseType: !3813, size: 64, offset: 256)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4585, file: !4586, line: 62, baseType: !4185, size: 64, offset: 320)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4585, file: !4586, line: 63, baseType: !4595, size: 64, offset: 384)
!4595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4596, size: 64)
!4596 = !DISubroutineType(types: !4597)
!4597 = !{!577, !4172, !4192}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4585, file: !4586, line: 65, baseType: !4599, size: 64, offset: 448)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!4600 = !DISubroutineType(types: !4601)
!4601 = !{null, !4584}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4585, file: !4586, line: 66, baseType: !4194, size: 64, offset: 512)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4585, file: !4586, line: 68, baseType: !4204, size: 64, offset: 576)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4585, file: !4586, line: 70, baseType: !3920, size: 64, offset: 640)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4585, file: !4586, line: 71, baseType: !4606, size: 64, offset: 704)
!4606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 64)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{!2244, !4172}
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4585, file: !4586, line: 73, baseType: !4610, size: 64, offset: 768)
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4611, size: 64)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{null, !4172, !1882, !1883}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4585, file: !4586, line: 75, baseType: !4198, size: 64, offset: 832)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4585, file: !4586, line: 77, baseType: !4317, size: 64, offset: 896)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3803, file: !3804, line: 541, baseType: !3884, size: 64, offset: 5248)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3803, file: !3804, line: 543, baseType: !4194, size: 64, offset: 5312)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3803, file: !3804, line: 544, baseType: !4618, size: 64, offset: 5376)
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4619, size: 64)
!4619 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !3804, line: 45, flags: DIFlagFwdDecl)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3803, file: !3804, line: 545, baseType: !4621, size: 64, offset: 5440)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !3804, line: 47, flags: DIFlagFwdDecl)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3803, file: !3804, line: 547, baseType: !540, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3803, file: !3804, line: 548, baseType: !540, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3803, file: !3804, line: 549, baseType: !540, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3803, file: !3804, line: 550, baseType: !540, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !3772, file: !3755, line: 69, baseType: !3813, size: 64, offset: 5952)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !3772, file: !3755, line: 70, baseType: !37, size: 32, offset: 6016)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !3772, file: !3755, line: 70, baseType: !37, size: 32, offset: 6048)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3772, file: !3755, line: 71, baseType: !4631, size: 64, offset: 6080)
!4631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 64)
!4632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !3755, line: 48, size: 808, elements: !4633)
!4633 = !{!4634, !4636}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !4632, file: !3755, line: 49, baseType: !4635, size: 296)
!4635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 296, elements: !2055)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !4632, file: !3755, line: 50, baseType: !4637, size: 512, offset: 296)
!4637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 512, elements: !3707)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !3772, file: !3755, line: 75, baseType: !4639, size: 448, offset: 6144)
!4639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1808, line: 124, size: 448, elements: !4640)
!4640 = !{!4641, !4642, !4643}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4639, file: !1808, line: 125, baseType: !1807, size: 256)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4639, file: !1808, line: 126, baseType: !304, size: 128, align: 64, offset: 256)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4639, file: !1808, line: 129, baseType: !2757, size: 64, offset: 384)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3766, file: !3755, line: 153, baseType: !4645, offset: 256)
!4645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3771, elements: !314)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !3754, file: !3755, line: 187, baseType: !3772, size: 6592, offset: 448)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3754, file: !3755, line: 189, baseType: !4648, size: 64, offset: 7040)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4650)
!4650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !4651, line: 1844, size: 960, elements: !4652)
!4651 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!4652 = !{!4653, !4658, !4753, !4757, !4761, !4765, !4766, !4770, !4774, !4778, !4784, !4788, !4814, !4818, !4819}
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !4650, file: !4651, line: 1845, baseType: !4654, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4655, size: 64)
!4655 = !DISubroutineType(types: !4656)
!4656 = !{!4657, !3747}
!4657 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !3749, line: 515, baseType: !7)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4650, file: !4651, line: 1846, baseType: !4659, size: 64, offset: 64)
!4659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4660, size: 64)
!4660 = !DISubroutineType(types: !4661)
!4661 = !{!37, !4662, !4752}
!4662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4663, size: 64)
!4663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !3749, line: 22, size: 1344, elements: !4664)
!4664 = !{!4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4750, !4751}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !4663, file: !3749, line: 23, baseType: !819, size: 32)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !4663, file: !3749, line: 24, baseType: !37, size: 32, offset: 32)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !4663, file: !3749, line: 25, baseType: !642, size: 64, offset: 64)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !4663, file: !3749, line: 26, baseType: !814, size: 64, offset: 128)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !4663, file: !3749, line: 27, baseType: !954, size: 192, offset: 192)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !4663, file: !3749, line: 28, baseType: !570, size: 64, offset: 384)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !4663, file: !3749, line: 29, baseType: !570, size: 64, offset: 448)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !4663, file: !3749, line: 30, baseType: !37, size: 32, offset: 512)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !4663, file: !3749, line: 31, baseType: !540, size: 8, offset: 544)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !4663, file: !3749, line: 33, baseType: !289, size: 128, offset: 576)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !4663, file: !3749, line: 35, baseType: !4662, size: 64, offset: 704)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !4663, file: !3749, line: 36, baseType: !1397, size: 8, offset: 768)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !4663, file: !3749, line: 37, baseType: !3771, size: 64, offset: 832)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !4663, file: !3749, line: 39, baseType: !7, size: 32, offset: 896)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !4663, file: !3749, line: 41, baseType: !729, offset: 928)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !4663, file: !3749, line: 42, baseType: !3753, size: 64, offset: 960)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !4663, file: !3749, line: 43, baseType: !4682, size: 64, offset: 1024)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !4684, line: 165, size: 4672, elements: !4685)
!4684 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!4685 = !{!4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4743, !4744, !4745, !4746, !4748, !4749}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4683, file: !4684, line: 166, baseType: !336, size: 64)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !4683, file: !4684, line: 167, baseType: !438, size: 192, align: 64, offset: 64)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !4683, file: !4684, line: 168, baseType: !289, size: 128, offset: 256)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4683, file: !4684, line: 169, baseType: !317, size: 64, offset: 384)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !4683, file: !4684, line: 170, baseType: !317, size: 64, offset: 448)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4683, file: !4684, line: 172, baseType: !4162, size: 32, offset: 512)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !4683, file: !4684, line: 173, baseType: !7, size: 32, offset: 544)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !4683, file: !4684, line: 174, baseType: !7, size: 32, offset: 576)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !4683, file: !4684, line: 175, baseType: !7, size: 32, offset: 608)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !4683, file: !4684, line: 175, baseType: !7, size: 32, offset: 640)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !4683, file: !4684, line: 181, baseType: !376, size: 64, offset: 704)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !4683, file: !4684, line: 183, baseType: !4698, size: 2688, offset: 768)
!4698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !4684, line: 107, size: 2688, elements: !4699)
!4699 = !{!4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4725, !4726, !4738, !4739, !4740, !4741, !4742}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !4698, file: !4684, line: 108, baseType: !4682, size: 64)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4698, file: !4684, line: 110, baseType: !317, size: 64, offset: 64)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !4698, file: !4684, line: 111, baseType: !317, size: 64, offset: 128)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !4698, file: !4684, line: 113, baseType: !289, size: 128, offset: 192)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !4698, file: !4684, line: 114, baseType: !289, size: 128, offset: 320)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !4698, file: !4684, line: 115, baseType: !289, size: 128, offset: 448)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !4698, file: !4684, line: 116, baseType: !289, size: 128, offset: 576)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4698, file: !4684, line: 117, baseType: !729, offset: 704)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4698, file: !4684, line: 119, baseType: !4709, size: 256, offset: 704)
!4709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2863, size: 256, elements: !1202)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !4698, file: !4684, line: 121, baseType: !317, size: 64, offset: 960)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !4698, file: !4684, line: 123, baseType: !317, size: 64, offset: 1024)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !4698, file: !4684, line: 124, baseType: !317, size: 64, offset: 1088)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !4698, file: !4684, line: 125, baseType: !317, size: 64, offset: 1152)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !4698, file: !4684, line: 126, baseType: !317, size: 64, offset: 1216)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !4698, file: !4684, line: 127, baseType: !317, size: 64, offset: 1280)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !4698, file: !4684, line: 135, baseType: !317, size: 64, offset: 1344)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !4698, file: !4684, line: 136, baseType: !317, size: 64, offset: 1408)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !4698, file: !4684, line: 138, baseType: !4719, size: 128, offset: 1472)
!4719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !4720, line: 76, size: 128, elements: !4721)
!4720 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!4721 = !{!4722, !4723, !4724}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4719, file: !4720, line: 78, baseType: !2863, size: 64)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4719, file: !4720, line: 80, baseType: !7, size: 32, offset: 64)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4719, file: !4720, line: 81, baseType: !1168, offset: 96)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !4698, file: !4684, line: 139, baseType: !37, size: 32, offset: 1600)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !4698, file: !4684, line: 140, baseType: !4727, size: 32, offset: 1632)
!4727 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !4684, line: 49, baseType: !7, size: 32, elements: !4728)
!4728 = !{!4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737}
!4729 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!4730 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!4731 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!4732 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!4733 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!4734 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!4735 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!4736 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!4737 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !4698, file: !4684, line: 142, baseType: !729, offset: 1664)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !4698, file: !4684, line: 143, baseType: !289, size: 128, offset: 1664)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !4698, file: !4684, line: 144, baseType: !2752, size: 704, offset: 1792)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !4698, file: !4684, line: 146, baseType: !317, size: 64, offset: 2496)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !4698, file: !4684, line: 148, baseType: !289, size: 128, offset: 2560)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !4683, file: !4684, line: 184, baseType: !289, size: 128, offset: 3456)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !4683, file: !4684, line: 190, baseType: !1100, size: 128, offset: 3584)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4683, file: !4684, line: 192, baseType: !4172, size: 64, offset: 3712)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4683, file: !4684, line: 193, baseType: !4747, size: 512, offset: 3776)
!4747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 512, elements: !3707)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4683, file: !4684, line: 194, baseType: !4172, size: 64, offset: 4288)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !4683, file: !4684, line: 196, baseType: !2221, size: 320, offset: 4352)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !4663, file: !3749, line: 46, baseType: !37, size: 32, offset: 1088)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !4663, file: !3749, line: 48, baseType: !954, size: 192, offset: 1152)
!4752 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !282, line: 150, baseType: !7)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4650, file: !4651, line: 1847, baseType: !4754, size: 64, offset: 128)
!4754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4755, size: 64)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{null, !3753, !4752}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !4650, file: !4651, line: 1848, baseType: !4758, size: 64, offset: 192)
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4759, size: 64)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{!37, !4662, !3775, !624, !7}
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4650, file: !4651, line: 1849, baseType: !4762, size: 64, offset: 256)
!4762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4763, size: 64)
!4763 = !DISubroutineType(types: !4764)
!4764 = !{!37, !4662, !4752, !7, !317}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4650, file: !4651, line: 1850, baseType: !4762, size: 64, offset: 320)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !4650, file: !4651, line: 1851, baseType: !4767, size: 64, offset: 384)
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4768, size: 64)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{!7, !3753, !7}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !4650, file: !4651, line: 1853, baseType: !4771, size: 64, offset: 448)
!4771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4772, size: 64)
!4772 = !DISubroutineType(types: !4773)
!4773 = !{null, !3753}
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !4650, file: !4651, line: 1854, baseType: !4775, size: 64, offset: 512)
!4775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4776, size: 64)
!4776 = !DISubroutineType(types: !4777)
!4777 = !{!37, !3753}
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !4650, file: !4651, line: 1855, baseType: !4779, size: 64, offset: 576)
!4779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4780, size: 64)
!4780 = !DISubroutineType(types: !4781)
!4781 = !{!37, !4662, !4782}
!4782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4783, size: 64)
!4783 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !639, line: 51, flags: DIFlagFwdDecl)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !4650, file: !4651, line: 1857, baseType: !4785, size: 64, offset: 640)
!4785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4786, size: 64)
!4786 = !DISubroutineType(types: !4787)
!4787 = !{null, !4662, !317}
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !4650, file: !4651, line: 1858, baseType: !4789, size: 64, offset: 704)
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 64)
!4790 = !DISubroutineType(types: !4791)
!4791 = !{!37, !3753, !3775, !7, !4792, !570}
!4792 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !4651, line: 354, baseType: !4793)
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{!37, !4796, !7, !570}
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 64)
!4797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !4798, line: 106, size: 512, elements: !4799)
!4798 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!4799 = !{!4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4809, !4810}
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4797, file: !4798, line: 107, baseType: !338, size: 64)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4797, file: !4798, line: 108, baseType: !338, size: 64, offset: 64)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !4797, file: !4798, line: 109, baseType: !338, size: 64, offset: 128)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4797, file: !4798, line: 110, baseType: !1398, size: 8, offset: 192)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !4797, file: !4798, line: 111, baseType: !1398, size: 8, offset: 200)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !4797, file: !4798, line: 112, baseType: !1398, size: 8, offset: 208)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4797, file: !4798, line: 113, baseType: !1398, size: 8, offset: 216)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !4797, file: !4798, line: 114, baseType: !4808, size: 32, offset: 224)
!4808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 32, elements: !1202)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !4797, file: !4798, line: 115, baseType: !338, size: 64, offset: 256)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4797, file: !4798, line: 116, baseType: !4811, size: 192, offset: 320)
!4811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 192, elements: !4812)
!4812 = !{!4813}
!4813 = !DISubrange(count: 24)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4650, file: !4651, line: 1860, baseType: !4815, size: 64, offset: 768)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 64)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{!577, !3753, !4192}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4650, file: !4651, line: 1861, baseType: !852, size: 64, offset: 832)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !4650, file: !4651, line: 1862, baseType: !4820, size: 64, offset: 896)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4822)
!4822 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !4651, line: 41, flags: DIFlagFwdDecl)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3754, file: !3755, line: 190, baseType: !4824, size: 64, offset: 7104)
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !4651, line: 399, size: 14464, elements: !4826)
!4826 = !{!4827, !4962, !5091, !5092, !5095, !5098, !5102, !5103, !5104, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5163, !5172, !5173, !5174, !5175, !5176, !5211, !5212, !5213, !5214, !5215, !5216, !5219, !5220, !5221, !5222, !5223, !5224, !5225, !5226, !5227, !5289, !5290, !5291, !5292, !5295, !5296, !5329, !5330, !5331, !5332}
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !4825, file: !4651, line: 400, baseType: !4828, size: 64)
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !4651, line: 130, size: 2176, elements: !4830)
!4830 = !{!4831, !4832, !4835, !4838, !4839, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4853, !4860, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4924, !4925, !4926, !4927, !4960, !4961}
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !4829, file: !4651, line: 131, baseType: !4824, size: 64)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !4829, file: !4651, line: 132, baseType: !4833, size: 64, offset: 64)
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4834, size: 64)
!4834 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !4651, line: 132, flags: DIFlagFwdDecl)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !4829, file: !4651, line: 133, baseType: !4836, size: 64, offset: 128)
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4837, size: 64)
!4837 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !4651, line: 133, flags: DIFlagFwdDecl)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !4829, file: !4651, line: 135, baseType: !7, size: 32, offset: 192)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !4829, file: !4651, line: 136, baseType: !4840, size: 32, offset: 224)
!4840 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !4651, line: 66, baseType: !468)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !4829, file: !4651, line: 138, baseType: !37, size: 32, offset: 256)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !4829, file: !4651, line: 139, baseType: !37, size: 32, offset: 288)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !4829, file: !4651, line: 142, baseType: !7, size: 32, offset: 320)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !4829, file: !4651, line: 143, baseType: !3775, size: 64, offset: 384)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !4829, file: !4651, line: 145, baseType: !3747, size: 64, offset: 448)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !4829, file: !4651, line: 146, baseType: !3747, size: 64, offset: 512)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !4829, file: !4651, line: 148, baseType: !289, size: 128, offset: 576)
!4848 = !DIDerivedType(tag: DW_TAG_member, scope: !4829, file: !4651, line: 157, baseType: !4849, size: 128, offset: 704)
!4849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4829, file: !4651, line: 157, size: 128, elements: !4850)
!4850 = !{!4851, !4852}
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4849, file: !4651, line: 158, baseType: !281, size: 128)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !4849, file: !4651, line: 159, baseType: !289, size: 128)
!4853 = !DIDerivedType(tag: DW_TAG_member, scope: !4829, file: !4651, line: 167, baseType: !4854, size: 192, offset: 832)
!4854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4829, file: !4651, line: 167, size: 192, elements: !4855)
!4855 = !{!4856, !4857, !4858, !4859}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !4854, file: !4651, line: 168, baseType: !438, size: 192, align: 64)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !4854, file: !4651, line: 169, baseType: !620, size: 128)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !4854, file: !4651, line: 170, baseType: !570, size: 64)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !4854, file: !4651, line: 171, baseType: !37, size: 32)
!4860 = !DIDerivedType(tag: DW_TAG_member, scope: !4829, file: !4651, line: 180, baseType: !4861, size: 256, offset: 1024)
!4861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4829, file: !4651, line: 180, size: 256, elements: !4862)
!4862 = !{!4863, !4898}
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !4861, file: !4651, line: 184, baseType: !4864, size: 192)
!4864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4861, file: !4651, line: 181, size: 192, elements: !4865)
!4865 = !{!4866, !4896}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !4864, file: !4651, line: 182, baseType: !4867, size: 64)
!4867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4868, size: 64)
!4868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !4869, line: 73, size: 448, elements: !4870)
!4869 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!4870 = !{!4871, !4872, !4885, !4890, !4895}
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !4868, file: !4869, line: 74, baseType: !4824, size: 64)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !4868, file: !4869, line: 75, baseType: !4873, size: 64, offset: 64)
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!4874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !4869, line: 99, size: 704, elements: !4875)
!4875 = !{!4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4874, file: !4869, line: 100, baseType: !376, size: 64)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !4874, file: !4869, line: 101, baseType: !388, size: 32, offset: 64)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !4874, file: !4869, line: 102, baseType: !388, size: 32, offset: 96)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4874, file: !4869, line: 105, baseType: !729, offset: 128)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !4874, file: !4869, line: 107, baseType: !477, size: 16, offset: 128)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !4874, file: !4869, line: 109, baseType: !1985, size: 128, offset: 192)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !4874, file: !4869, line: 110, baseType: !4867, size: 64, offset: 320)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !4874, file: !4869, line: 111, baseType: !857, size: 64, offset: 384)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !4874, file: !4869, line: 113, baseType: !1807, size: 256, offset: 448)
!4885 = !DIDerivedType(tag: DW_TAG_member, scope: !4868, file: !4869, line: 83, baseType: !4886, size: 128, offset: 128)
!4886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4868, file: !4869, line: 83, size: 128, elements: !4887)
!4887 = !{!4888, !4889}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !4886, file: !4869, line: 84, baseType: !289, size: 128)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !4886, file: !4869, line: 85, baseType: !2252, size: 64)
!4890 = !DIDerivedType(tag: DW_TAG_member, scope: !4868, file: !4869, line: 87, baseType: !4891, size: 128, offset: 256)
!4891 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4868, file: !4869, line: 87, size: 128, elements: !4892)
!4892 = !{!4893, !4894}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !4891, file: !4869, line: 88, baseType: !281, size: 128)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !4891, file: !4869, line: 89, baseType: !304, size: 128, align: 64)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4868, file: !4869, line: 92, baseType: !7, size: 32, offset: 384)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4864, file: !4651, line: 183, baseType: !4897, size: 128, offset: 64)
!4897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 128, elements: !478)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4861, file: !4651, line: 190, baseType: !4899, size: 256)
!4899 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4861, file: !4651, line: 186, size: 256, elements: !4900)
!4900 = !{!4901, !4902, !4903}
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !4899, file: !4651, line: 187, baseType: !7, size: 32)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4899, file: !4651, line: 188, baseType: !289, size: 128, offset: 64)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !4899, file: !4651, line: 189, baseType: !4904, size: 64, offset: 192)
!4904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4905, size: 64)
!4905 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !4651, line: 62, baseType: !4906)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{null, !4828, !4908}
!4908 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !3749, line: 58, baseType: !1397)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !4829, file: !4651, line: 193, baseType: !3753, size: 64, offset: 1280)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !4829, file: !4651, line: 194, baseType: !3771, size: 64, offset: 1344)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !4829, file: !4651, line: 200, baseType: !336, size: 64, offset: 1408)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !4829, file: !4651, line: 202, baseType: !336, size: 64, offset: 1472)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !4829, file: !4651, line: 212, baseType: !477, size: 16, offset: 1536)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !4829, file: !4651, line: 218, baseType: !477, size: 16, offset: 1552)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !4829, file: !4651, line: 221, baseType: !477, size: 16, offset: 1568)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !4829, file: !4651, line: 229, baseType: !477, size: 16, offset: 1584)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !4829, file: !4651, line: 230, baseType: !477, size: 16, offset: 1600)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4829, file: !4651, line: 232, baseType: !4919, size: 32, offset: 1632)
!4919 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !4651, line: 118, baseType: !7, size: 32, elements: !4920)
!4920 = !{!4921, !4922, !4923}
!4921 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!4922 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!4923 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4829, file: !4651, line: 233, baseType: !1271, size: 32, offset: 1664)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4829, file: !4651, line: 235, baseType: !7, size: 32, offset: 1696)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !4829, file: !4651, line: 236, baseType: !317, size: 64, offset: 1728)
!4927 = !DIDerivedType(tag: DW_TAG_member, scope: !4829, file: !4651, line: 238, baseType: !4928, size: 256, offset: 1792)
!4928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4829, file: !4651, line: 238, size: 256, elements: !4929)
!4929 = !{!4930, !4959}
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !4928, file: !4651, line: 239, baseType: !4931, size: 256)
!4931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !4932, line: 23, size: 256, elements: !4933)
!4932 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!4933 = !{!4934, !4956, !4958}
!4934 = !DIDerivedType(tag: DW_TAG_member, scope: !4931, file: !4932, line: 24, baseType: !4935, size: 128)
!4935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4931, file: !4932, line: 24, size: 128, elements: !4936)
!4936 = !{!4937, !4949}
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4935, file: !4932, line: 25, baseType: !4938, size: 128)
!4938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !4939, line: 58, size: 128, elements: !4940)
!4939 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!4940 = !{!4941, !4942, !4947, !4948}
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !4938, file: !4939, line: 59, baseType: !992, size: 64)
!4942 = !DIDerivedType(tag: DW_TAG_member, scope: !4938, file: !4939, line: 60, baseType: !4943, size: 32, offset: 64)
!4943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4938, file: !4939, line: 60, size: 32, elements: !4944)
!4944 = !{!4945, !4946}
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !4943, file: !4939, line: 61, baseType: !7, size: 32)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !4943, file: !4939, line: 62, baseType: !388, size: 32)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !4938, file: !4939, line: 65, baseType: !1038, size: 16, offset: 96)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !4938, file: !4939, line: 65, baseType: !1038, size: 16, offset: 112)
!4949 = !DIDerivedType(tag: DW_TAG_member, scope: !4935, file: !4932, line: 26, baseType: !4950, size: 128)
!4950 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4935, file: !4932, line: 26, size: 128, elements: !4951)
!4951 = !{!4952, !4953, !4954, !4955}
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !4950, file: !4932, line: 27, baseType: !992, size: 64)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4950, file: !4932, line: 28, baseType: !7, size: 32, offset: 64)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !4950, file: !4932, line: 30, baseType: !1038, size: 16, offset: 96)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !4950, file: !4932, line: 30, baseType: !1038, size: 16, offset: 112)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4931, file: !4932, line: 34, baseType: !4957, size: 64, offset: 128)
!4957 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !4932, line: 17, baseType: !3290)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4931, file: !4932, line: 35, baseType: !570, size: 64, offset: 192)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !4928, file: !4651, line: 240, baseType: !336, size: 64)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !4829, file: !4651, line: 246, baseType: !4904, size: 64, offset: 2048)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !4829, file: !4651, line: 247, baseType: !570, size: 64, offset: 2112)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !4825, file: !4651, line: 401, baseType: !4963, size: 64, offset: 64)
!4963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4964, size: 64)
!4964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !4965, line: 101, size: 4992, elements: !4966)
!4965 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!4966 = !{!4967, !5085, !5086, !5087, !5088, !5089}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4964, file: !4965, line: 103, baseType: !4968, size: 64)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !4965, line: 66, size: 2240, elements: !4970)
!4970 = !{!4971, !4972, !5060, !5061, !5062, !5075, !5076, !5077, !5079, !5080, !5084}
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !4969, file: !4965, line: 69, baseType: !2252, size: 64)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4969, file: !4965, line: 72, baseType: !4973, size: 1408, offset: 64)
!4973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !4965, line: 29, size: 1408, elements: !4974)
!4974 = !{!4975, !4979, !4983, !4987, !4991, !4995, !4999, !5003, !5008, !5018, !5022, !5028, !5032, !5033, !5037, !5041, !5045, !5049, !5050, !5054, !5055, !5059}
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !4973, file: !4965, line: 30, baseType: !4976, size: 64)
!4976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4977, size: 64)
!4977 = !DISubroutineType(types: !4978)
!4978 = !{!37, !4824, !4968}
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !4973, file: !4965, line: 31, baseType: !4980, size: 64, offset: 64)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4981, size: 64)
!4981 = !DISubroutineType(types: !4982)
!4982 = !{null, !4963}
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !4973, file: !4965, line: 32, baseType: !4984, size: 64, offset: 128)
!4984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 64)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{!37, !4836, !7}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !4973, file: !4965, line: 33, baseType: !4988, size: 64, offset: 192)
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = !DISubroutineType(types: !4990)
!4990 = !{null, !4836, !7}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !4973, file: !4965, line: 34, baseType: !4992, size: 64, offset: 256)
!4992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4993, size: 64)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{null, !4836}
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !4973, file: !4965, line: 36, baseType: !4996, size: 64, offset: 320)
!4996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4997, size: 64)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!540, !4824, !4828, !3747}
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !4973, file: !4965, line: 37, baseType: !5000, size: 64, offset: 384)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!540, !4836, !3747, !7}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !4973, file: !4965, line: 38, baseType: !5004, size: 64, offset: 448)
!5004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5005, size: 64)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{!37, !4824, !5007, !3747}
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !4973, file: !4965, line: 39, baseType: !5009, size: 64, offset: 512)
!5009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5010, size: 64)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{null, !4824, !4828, !5012}
!5012 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !4965, line: 19, baseType: !7, size: 32, elements: !5013)
!5013 = !{!5014, !5015, !5016, !5017}
!5014 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!5015 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!5016 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!5017 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !4973, file: !4965, line: 40, baseType: !5019, size: 64, offset: 576)
!5019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5020, size: 64)
!5020 = !DISubroutineType(types: !5021)
!5021 = !{null, !4824, !4828, !4828}
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !4973, file: !4965, line: 41, baseType: !5023, size: 64, offset: 640)
!5023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5024, size: 64)
!5024 = !DISubroutineType(types: !5025)
!5025 = !{null, !7, !5026}
!5026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5027, size: 64)
!5027 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !4965, line: 26, flags: DIFlagFwdDecl)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !4973, file: !4965, line: 42, baseType: !5029, size: 64, offset: 704)
!5029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5030, size: 64)
!5030 = !DISubroutineType(types: !5031)
!5031 = !{null, !4828}
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !4973, file: !4965, line: 43, baseType: !5029, size: 64, offset: 768)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !4973, file: !4965, line: 44, baseType: !5034, size: 64, offset: 832)
!5034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5035, size: 64)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{null, !4836, !292, !540}
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !4973, file: !4965, line: 45, baseType: !5038, size: 64, offset: 896)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!4828, !4836}
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !4973, file: !4965, line: 46, baseType: !5042, size: 64, offset: 960)
!5042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5043, size: 64)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{!540, !4836}
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !4973, file: !4965, line: 47, baseType: !5046, size: 64, offset: 1024)
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 64)
!5047 = !DISubroutineType(types: !5048)
!5048 = !{null, !4828, !336}
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !4973, file: !4965, line: 48, baseType: !5029, size: 64, offset: 1088)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !4973, file: !4965, line: 49, baseType: !5051, size: 64, offset: 1152)
!5051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5052, size: 64)
!5052 = !DISubroutineType(types: !5053)
!5053 = !{!4828, !4824, !4828}
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !4973, file: !4965, line: 50, baseType: !5051, size: 64, offset: 1216)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !4973, file: !4965, line: 51, baseType: !5056, size: 64, offset: 1280)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{null, !4867}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !4973, file: !4965, line: 52, baseType: !5056, size: 64, offset: 1344)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !4969, file: !4965, line: 74, baseType: !594, size: 64, offset: 1472)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !4969, file: !4965, line: 75, baseType: !594, size: 64, offset: 1536)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !4969, file: !4965, line: 76, baseType: !5063, size: 64, offset: 1600)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 64)
!5064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !4965, line: 57, size: 256, elements: !5065)
!5065 = !{!5066, !5067, !5071}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5064, file: !4965, line: 58, baseType: !3873, size: 128)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5064, file: !4965, line: 59, baseType: !5068, size: 64, offset: 128)
!5068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 64)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!1015, !4963, !577}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5064, file: !4965, line: 60, baseType: !5072, size: 64, offset: 192)
!5072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5073, size: 64)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!1015, !4963, !297, !594}
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !4969, file: !4965, line: 77, baseType: !297, size: 64, offset: 1664)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !4969, file: !4965, line: 78, baseType: !297, size: 64, offset: 1728)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !4969, file: !4965, line: 79, baseType: !5078, size: 32, offset: 1792)
!5078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !4969, file: !4965, line: 80, baseType: !852, size: 64, offset: 1856)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !4969, file: !4965, line: 87, baseType: !5081, size: 176, offset: 1920)
!5081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 176, elements: !5082)
!5082 = !{!5083}
!5083 = !DISubrange(count: 22)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4969, file: !4965, line: 88, baseType: !289, size: 128, offset: 2112)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !4964, file: !4965, line: 104, baseType: !570, size: 64, offset: 64)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4964, file: !4965, line: 105, baseType: !3807, size: 512, offset: 128)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !4964, file: !4965, line: 106, baseType: !954, size: 192, offset: 640)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !4964, file: !4965, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4964, file: !4965, line: 108, baseType: !5090, size: 4096, offset: 896)
!5090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 4096, elements: !3707)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !4825, file: !4651, line: 403, baseType: !3782, size: 128, offset: 128)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !4825, file: !4651, line: 405, baseType: !5093, size: 64, offset: 256)
!5093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5094, size: 64)
!5094 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !4651, line: 43, flags: DIFlagFwdDecl)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !4825, file: !4651, line: 406, baseType: !5096, size: 64, offset: 320)
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5097, size: 64)
!5097 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !4651, line: 42, flags: DIFlagFwdDecl)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !4825, file: !4651, line: 408, baseType: !5099, size: 64, offset: 384)
!5099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5100, size: 64)
!5100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5101)
!5101 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !4651, line: 408, flags: DIFlagFwdDecl)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !4825, file: !4651, line: 411, baseType: !4833, size: 64, offset: 448)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !4825, file: !4651, line: 413, baseType: !7, size: 32, offset: 512)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !4825, file: !4651, line: 416, baseType: !5105, size: 64, offset: 576)
!5105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !4825, file: !4651, line: 417, baseType: !7, size: 32, offset: 640)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !4825, file: !4651, line: 419, baseType: !4682, size: 64, offset: 704)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !4825, file: !4651, line: 425, baseType: !570, size: 64, offset: 768)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !4825, file: !4651, line: 430, baseType: !317, size: 64, offset: 832)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !4825, file: !4651, line: 436, baseType: !388, size: 32, offset: 896)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4825, file: !4651, line: 442, baseType: !37, size: 32, offset: 928)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !4825, file: !4651, line: 447, baseType: !1990, size: 32, offset: 960)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !4825, file: !4651, line: 449, baseType: !729, offset: 992)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4825, file: !4651, line: 454, baseType: !3807, size: 512, offset: 1024)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !4825, file: !4651, line: 459, baseType: !3813, size: 64, offset: 1536)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !4825, file: !4651, line: 462, baseType: !5117, size: 128, offset: 1600)
!5117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !3755, line: 159, size: 128, elements: !5118)
!5118 = !{!5119, !5148, !5149, !5150, !5151}
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !5117, file: !3755, line: 160, baseType: !5120, size: 64)
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 64)
!5121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5122)
!5122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !4651, line: 1664, size: 320, elements: !5123)
!5123 = !{!5124, !5138, !5139, !5142, !5147}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !5122, file: !4651, line: 1665, baseType: !5125, size: 64)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !4651, line: 1660, baseType: !5127)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{!4908, !5129}
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5130, size: 64)
!5130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !4651, line: 1651, size: 320, elements: !5131)
!5131 = !{!5132, !5133, !5134, !5135, !5136, !5137}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !5130, file: !4651, line: 1652, baseType: !570, size: 64)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !5130, file: !4651, line: 1653, baseType: !570, size: 64, offset: 64)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5130, file: !4651, line: 1654, baseType: !3775, size: 64, offset: 128)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5130, file: !4651, line: 1655, baseType: !7, size: 32, offset: 192)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5130, file: !4651, line: 1656, baseType: !477, size: 16, offset: 224)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5130, file: !4651, line: 1657, baseType: !297, size: 64, offset: 256)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !5122, file: !4651, line: 1666, baseType: !5125, size: 64, offset: 64)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !5122, file: !4651, line: 1667, baseType: !5140, size: 64, offset: 128)
!5140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 64)
!5141 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !4651, line: 1661, baseType: !5030)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !5122, file: !4651, line: 1668, baseType: !5143, size: 64, offset: 192)
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !4651, line: 1662, baseType: !5145)
!5145 = !DISubroutineType(types: !5146)
!5146 = !{null, !4828, !7}
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5122, file: !4651, line: 1669, baseType: !297, size: 64, offset: 256)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5117, file: !3755, line: 161, baseType: !494, size: 8, offset: 64)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !5117, file: !3755, line: 162, baseType: !494, size: 8, offset: 72)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !5117, file: !3755, line: 163, baseType: !494, size: 8, offset: 80)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !5117, file: !3755, line: 164, baseType: !494, size: 8, offset: 88)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4825, file: !4651, line: 466, baseType: !4172, size: 64, offset: 1728)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !4825, file: !4651, line: 467, baseType: !4418, size: 32, offset: 1792)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !4825, file: !4651, line: 468, baseType: !7, size: 32, offset: 1824)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !4825, file: !4651, line: 474, baseType: !317, size: 64, offset: 1856)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !4825, file: !4651, line: 476, baseType: !7, size: 32, offset: 1920)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !4825, file: !4651, line: 477, baseType: !7, size: 32, offset: 1952)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !4825, file: !4651, line: 484, baseType: !7, size: 32, offset: 1984)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !4825, file: !4651, line: 485, baseType: !37, size: 32, offset: 2016)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !4825, file: !4651, line: 487, baseType: !5161, size: 64, offset: 2048)
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64)
!5162 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !4651, line: 44, flags: DIFlagFwdDecl)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !4825, file: !4651, line: 488, baseType: !5164, size: 5120, offset: 2112)
!5164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5165, size: 5120, elements: !274)
!5165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !3749, line: 540, size: 320, elements: !5166)
!5166 = !{!5167, !5168, !5169, !5170, !5171}
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !5165, file: !3749, line: 541, baseType: !336, size: 64)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5165, file: !3749, line: 542, baseType: !336, size: 64, offset: 64)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5165, file: !3749, line: 543, baseType: !336, size: 64, offset: 128)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !5165, file: !3749, line: 544, baseType: !707, size: 32, offset: 192)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5165, file: !3749, line: 545, baseType: !336, size: 64, offset: 256)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4825, file: !4651, line: 490, baseType: !2221, size: 320, offset: 7232)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !4825, file: !4651, line: 491, baseType: !1807, size: 256, offset: 7552)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !4825, file: !4651, line: 493, baseType: !388, size: 32, offset: 7808)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !4825, file: !4651, line: 495, baseType: !289, size: 128, offset: 7872)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !4825, file: !4651, line: 502, baseType: !5177, size: 896, offset: 8000)
!5177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !4651, line: 321, size: 896, elements: !5178)
!5178 = !{!5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5205}
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !5177, file: !4651, line: 322, baseType: !317, size: 64)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !5177, file: !4651, line: 323, baseType: !317, size: 64, offset: 64)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5177, file: !4651, line: 324, baseType: !317, size: 64, offset: 128)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !5177, file: !4651, line: 326, baseType: !7, size: 32, offset: 192)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !5177, file: !4651, line: 327, baseType: !7, size: 32, offset: 224)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !5177, file: !4651, line: 328, baseType: !7, size: 32, offset: 256)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5177, file: !4651, line: 329, baseType: !7, size: 32, offset: 288)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5177, file: !4651, line: 330, baseType: !7, size: 32, offset: 320)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !5177, file: !4651, line: 331, baseType: !7, size: 32, offset: 352)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !5177, file: !4651, line: 332, baseType: !7, size: 32, offset: 384)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !5177, file: !4651, line: 333, baseType: !7, size: 32, offset: 416)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !5177, file: !4651, line: 334, baseType: !7, size: 32, offset: 448)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !5177, file: !4651, line: 335, baseType: !7, size: 32, offset: 480)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !5177, file: !4651, line: 336, baseType: !7, size: 32, offset: 512)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !5177, file: !4651, line: 337, baseType: !7, size: 32, offset: 544)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !5177, file: !4651, line: 338, baseType: !7, size: 32, offset: 576)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !5177, file: !4651, line: 339, baseType: !7, size: 32, offset: 608)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !5177, file: !4651, line: 340, baseType: !7, size: 32, offset: 640)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !5177, file: !4651, line: 341, baseType: !7, size: 32, offset: 672)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !5177, file: !4651, line: 342, baseType: !7, size: 32, offset: 704)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !5177, file: !4651, line: 344, baseType: !477, size: 16, offset: 736)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !5177, file: !4651, line: 345, baseType: !477, size: 16, offset: 752)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !5177, file: !4651, line: 346, baseType: !477, size: 16, offset: 768)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !5177, file: !4651, line: 348, baseType: !494, size: 8, offset: 784)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !5177, file: !4651, line: 349, baseType: !494, size: 8, offset: 792)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !5177, file: !4651, line: 350, baseType: !494, size: 8, offset: 800)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !5177, file: !4651, line: 351, baseType: !5206, size: 32, offset: 832)
!5206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !4651, line: 315, baseType: !7, size: 32, elements: !5207)
!5207 = !{!5208, !5209, !5210}
!5208 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!5209 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!5210 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !4825, file: !4651, line: 504, baseType: !7, size: 32, offset: 8896)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !4825, file: !4651, line: 534, baseType: !7, size: 32, offset: 8928)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !4825, file: !4651, line: 535, baseType: !7, size: 32, offset: 8960)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4825, file: !4651, line: 536, baseType: !37, size: 32, offset: 8992)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !4825, file: !4651, line: 537, baseType: !954, size: 192, offset: 9024)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !4825, file: !4651, line: 544, baseType: !5217, size: 64, offset: 9216)
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5218 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !4651, line: 40, flags: DIFlagFwdDecl)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !4825, file: !4651, line: 546, baseType: !289, size: 128, offset: 9280)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !4825, file: !4651, line: 547, baseType: !729, offset: 9408)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !4825, file: !4651, line: 548, baseType: !2752, size: 704, offset: 9408)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !4825, file: !4651, line: 550, baseType: !954, size: 192, offset: 10112)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !4825, file: !4651, line: 551, baseType: !954, size: 192, offset: 10304)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !4825, file: !4651, line: 557, baseType: !289, size: 128, offset: 10496)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !4825, file: !4651, line: 558, baseType: !729, offset: 10624)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !4825, file: !4651, line: 560, baseType: !37, size: 32, offset: 10624)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !4825, file: !4651, line: 563, baseType: !5228, size: 256, offset: 10688)
!5228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !5229, line: 18, size: 256, elements: !5230)
!5229 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5230 = !{!5231, !5232, !5233, !5234}
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5228, file: !5229, line: 19, baseType: !4172, size: 64)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5228, file: !5229, line: 20, baseType: !37, size: 32, offset: 64)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5228, file: !5229, line: 21, baseType: !4824, size: 64, offset: 128)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5228, file: !5229, line: 22, baseType: !5235, size: 64, offset: 192)
!5235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 64)
!5236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5237)
!5237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !5229, line: 10, size: 256, elements: !5238)
!5238 = !{!5239, !5280, !5284, !5288}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !5237, file: !5229, line: 11, baseType: !5240, size: 64)
!5240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5241, size: 64)
!5241 = !DISubroutineType(types: !5242)
!5242 = !{!37, !5243}
!5243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5244, size: 64)
!5244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !5245, line: 22, size: 1280, elements: !5246)
!5245 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5246 = !{!5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5273, !5274, !5275, !5276, !5277, !5278, !5279}
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !5244, file: !5245, line: 23, baseType: !1490, size: 32)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5244, file: !5245, line: 24, baseType: !468, size: 32, offset: 32)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !5244, file: !5245, line: 25, baseType: !468, size: 32, offset: 64)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5244, file: !5245, line: 28, baseType: !468, size: 32, offset: 96)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5244, file: !5245, line: 29, baseType: !338, size: 64, offset: 128)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !5244, file: !5245, line: 30, baseType: !338, size: 64, offset: 192)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !5244, file: !5245, line: 31, baseType: !468, size: 32, offset: 256)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !5244, file: !5245, line: 32, baseType: !468, size: 32, offset: 288)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !5244, file: !5245, line: 33, baseType: !468, size: 32, offset: 320)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !5244, file: !5245, line: 34, baseType: !468, size: 32, offset: 352)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5244, file: !5245, line: 35, baseType: !338, size: 64, offset: 384)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !5244, file: !5245, line: 38, baseType: !468, size: 32, offset: 448)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !5244, file: !5245, line: 40, baseType: !468, size: 32, offset: 480)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !5244, file: !5245, line: 41, baseType: !468, size: 32, offset: 512)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !5244, file: !5245, line: 42, baseType: !468, size: 32, offset: 544)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !5244, file: !5245, line: 43, baseType: !338, size: 64, offset: 576)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !5244, file: !5245, line: 44, baseType: !338, size: 64, offset: 640)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5244, file: !5245, line: 46, baseType: !468, size: 32, offset: 704)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5244, file: !5245, line: 47, baseType: !468, size: 32, offset: 736)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !5244, file: !5245, line: 48, baseType: !338, size: 64, offset: 768)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !5244, file: !5245, line: 49, baseType: !468, size: 32, offset: 832)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !5244, file: !5245, line: 51, baseType: !468, size: 32, offset: 864)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !5244, file: !5245, line: 52, baseType: !468, size: 32, offset: 896)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !5244, file: !5245, line: 53, baseType: !468, size: 32, offset: 928)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !5244, file: !5245, line: 54, baseType: !468, size: 32, offset: 960)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5244, file: !5245, line: 55, baseType: !468, size: 32, offset: 992)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5244, file: !5245, line: 56, baseType: !468, size: 32, offset: 1024)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !5244, file: !5245, line: 57, baseType: !468, size: 32, offset: 1056)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !5244, file: !5245, line: 58, baseType: !1490, size: 32, offset: 1088)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !5244, file: !5245, line: 59, baseType: !1490, size: 32, offset: 1120)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !5244, file: !5245, line: 60, baseType: !338, size: 64, offset: 1152)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !5244, file: !5245, line: 61, baseType: !468, size: 32, offset: 1216)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5244, file: !5245, line: 63, baseType: !468, size: 32, offset: 1248)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !5237, file: !5229, line: 12, baseType: !5281, size: 64, offset: 64)
!5281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5282, size: 64)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{!37, !4828, !5243, !4752}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !5237, file: !5229, line: 14, baseType: !5285, size: 64, offset: 128)
!5285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5286, size: 64)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{!37, !4828, !5243}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !5237, file: !5229, line: 15, baseType: !5029, size: 64, offset: 192)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !4825, file: !4651, line: 570, baseType: !304, size: 128, align: 64, offset: 10944)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !4825, file: !4651, line: 571, baseType: !1100, size: 128, offset: 11072)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !4825, file: !4651, line: 576, baseType: !954, size: 192, offset: 11200)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !4825, file: !4651, line: 578, baseType: !5293, size: 64, offset: 11392)
!5293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5294, size: 64)
!5294 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !4651, line: 578, flags: DIFlagFwdDecl)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !4825, file: !4651, line: 579, baseType: !289, size: 128, offset: 11456)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !4825, file: !4651, line: 580, baseType: !5297, size: 2368, offset: 11584)
!5297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3744, line: 682, size: 2368, elements: !5298)
!5298 = !{!5299, !5300, !5301, !5322, !5323, !5324, !5325, !5326, !5327, !5328}
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !5297, file: !3744, line: 683, baseType: !2252, size: 64)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !5297, file: !3744, line: 684, baseType: !7, size: 32, offset: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !5297, file: !3744, line: 686, baseType: !5302, size: 448, offset: 128)
!5302 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !5303, line: 26, baseType: !5304)
!5303 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!5304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !5303, line: 16, size: 448, elements: !5305)
!5305 = !{!5306, !5307, !5308, !5309, !5310, !5311, !5316, !5321}
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5304, file: !5303, line: 17, baseType: !729)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !5304, file: !5303, line: 18, baseType: !37, size: 32)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !5304, file: !5303, line: 19, baseType: !37, size: 32, offset: 32)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5304, file: !5303, line: 20, baseType: !3480, size: 64, offset: 64)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !5304, file: !5303, line: 22, baseType: !570, size: 64, offset: 128)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5304, file: !5303, line: 23, baseType: !5312, size: 64, offset: 192)
!5312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5313, size: 64)
!5313 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !5303, line: 13, baseType: !5314)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{!570, !1990, !570}
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5304, file: !5303, line: 24, baseType: !5317, size: 64, offset: 256)
!5317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5318, size: 64)
!5318 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !5303, line: 14, baseType: !5319)
!5319 = !DISubroutineType(types: !5320)
!5320 = !{null, !570, !570}
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5304, file: !5303, line: 25, baseType: !1100, size: 128, offset: 320)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !5297, file: !3744, line: 687, baseType: !5302, size: 448, offset: 576)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !5297, file: !3744, line: 689, baseType: !5302, size: 448, offset: 1024)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !5297, file: !3744, line: 690, baseType: !5302, size: 448, offset: 1472)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !5297, file: !3744, line: 697, baseType: !729, offset: 1920)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !5297, file: !3744, line: 698, baseType: !3743, size: 128, offset: 1920)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !5297, file: !3744, line: 699, baseType: !1807, size: 256, offset: 2048)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !5297, file: !3744, line: 700, baseType: !2757, size: 64, offset: 2304)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !4825, file: !4651, line: 582, baseType: !673, size: 64, offset: 13952)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !4825, file: !4651, line: 589, baseType: !540, size: 8, offset: 14016)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !4825, file: !4651, line: 591, baseType: !594, size: 64, offset: 14080)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !4825, file: !4651, line: 594, baseType: !5333, size: 320, offset: 14144)
!5333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 320, elements: !1777)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3754, file: !3755, line: 191, baseType: !570, size: 64, offset: 7168)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3754, file: !3755, line: 193, baseType: !37, size: 32, offset: 7232)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3754, file: !3755, line: 194, baseType: !317, size: 64, offset: 7296)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !3754, file: !3755, line: 196, baseType: !1162, size: 256, offset: 7360)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !3754, file: !3755, line: 197, baseType: !3813, size: 64, offset: 7616)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !3754, file: !3755, line: 199, baseType: !5340, size: 64, offset: 7680)
!5340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5341, size: 64)
!5341 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !3755, line: 199, flags: DIFlagFwdDecl)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !3754, file: !3755, line: 200, baseType: !388, size: 32, offset: 7744)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !3754, file: !3755, line: 201, baseType: !5344, size: 64, offset: 7808)
!5344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5345, size: 64)
!5345 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !3755, line: 156, flags: DIFlagFwdDecl)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !3754, file: !3755, line: 203, baseType: !3807, size: 512, offset: 7872)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3754, file: !3755, line: 208, baseType: !37, size: 32, offset: 8384)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3754, file: !3755, line: 209, baseType: !5349, size: 64, offset: 8448)
!5349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5350, size: 64)
!5350 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !3755, line: 157, flags: DIFlagFwdDecl)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !3754, file: !3755, line: 210, baseType: !5352, offset: 8512)
!5352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !862, line: 192, elements: !743)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3748, file: !3749, line: 206, baseType: !7, size: 32, offset: 128)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3748, file: !3749, line: 210, baseType: !477, size: 16, offset: 160)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3748, file: !3749, line: 211, baseType: !477, size: 16, offset: 176)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3748, file: !3749, line: 212, baseType: !477, size: 16, offset: 192)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3748, file: !3749, line: 213, baseType: !4908, size: 8, offset: 208)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3748, file: !3749, line: 214, baseType: !1397, size: 8, offset: 216)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3748, file: !3749, line: 215, baseType: !388, size: 32, offset: 224)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3748, file: !3749, line: 217, baseType: !5361, size: 192, offset: 256)
!5361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !621, line: 37, size: 192, elements: !5362)
!5362 = !{!5363, !5364, !5365, !5366}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !5361, file: !621, line: 38, baseType: !3775, size: 64)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !5361, file: !621, line: 40, baseType: !7, size: 32, offset: 64)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !5361, file: !621, line: 42, baseType: !7, size: 32, offset: 96)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !5361, file: !621, line: 44, baseType: !7, size: 32, offset: 128)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3748, file: !3749, line: 219, baseType: !5368, size: 64, offset: 448)
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5369, size: 64)
!5369 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !3749, line: 19, baseType: !5370)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{null, !3747}
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3748, file: !3749, line: 221, baseType: !570, size: 64, offset: 512)
!5373 = !DIDerivedType(tag: DW_TAG_member, scope: !3748, file: !3749, line: 240, baseType: !5374, size: 64, offset: 576)
!5374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3748, file: !3749, line: 240, size: 64, elements: !5375)
!5375 = !{!5376}
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !5374, file: !3749, line: 242, baseType: !5377, size: 64)
!5377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5378, size: 64)
!5378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3744, line: 313, size: 832, elements: !5379)
!5379 = !{!5380, !5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5390}
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !5378, file: !3744, line: 314, baseType: !3747, size: 64)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !5378, file: !3744, line: 316, baseType: !5361, size: 192, offset: 64)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !5378, file: !3744, line: 318, baseType: !477, size: 16, offset: 256)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !5378, file: !3744, line: 319, baseType: !477, size: 16, offset: 272)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !5378, file: !3744, line: 320, baseType: !477, size: 16, offset: 288)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !5378, file: !3744, line: 321, baseType: !477, size: 16, offset: 304)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !5378, file: !3744, line: 323, baseType: !5361, size: 192, offset: 320)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !5378, file: !3744, line: 325, baseType: !1807, size: 256, offset: 512)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !5378, file: !3744, line: 327, baseType: !5389, size: 64, offset: 768)
!5389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !5378, file: !3744, line: 328, baseType: !5391, offset: 832)
!5391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, elements: !314)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3748, file: !3749, line: 246, baseType: !477, size: 16, offset: 640)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3748, file: !3749, line: 252, baseType: !477, size: 16, offset: 656)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3748, file: !3749, line: 254, baseType: !388, size: 32, offset: 672)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3748, file: !3749, line: 256, baseType: !5389, size: 64, offset: 704)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3748, file: !3749, line: 258, baseType: !5397, size: 64, offset: 768)
!5397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5297, size: 64)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3748, file: !3749, line: 265, baseType: !5391, offset: 832)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3743, file: !3744, line: 556, baseType: !3747, size: 64, offset: 64)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1258, file: !1259, line: 1050, baseType: !5401, size: 64, offset: 10688)
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5402, size: 64)
!5402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !4651, line: 1236, size: 320, elements: !5403)
!5403 = !{!5404, !5405, !5406, !5407, !5408}
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5402, file: !4651, line: 1237, baseType: !289, size: 128)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5402, file: !4651, line: 1238, baseType: !289, size: 128, offset: 128)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5402, file: !4651, line: 1239, baseType: !477, size: 16, offset: 256)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5402, file: !4651, line: 1240, baseType: !540, size: 8, offset: 272)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5402, file: !4651, line: 1241, baseType: !540, size: 8, offset: 280)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1258, file: !1259, line: 1054, baseType: !5410, size: 64, offset: 10752)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1259, line: 55, flags: DIFlagFwdDecl)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1258, file: !1259, line: 1056, baseType: !4682, size: 64, offset: 10816)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1258, file: !1259, line: 1058, baseType: !4873, size: 64, offset: 10880)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1258, file: !1259, line: 1061, baseType: !5415, size: 64, offset: 10944)
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5416, size: 64)
!5416 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1259, line: 43, flags: DIFlagFwdDecl)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1258, file: !1259, line: 1064, baseType: !317, size: 64, offset: 11008)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1258, file: !1259, line: 1065, baseType: !5419, size: 64, offset: 11072)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3595, line: 14, baseType: !5421)
!5421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3595, line: 12, size: 384, elements: !5422)
!5422 = !{!5423}
!5423 = !DIDerivedType(tag: DW_TAG_member, scope: !5421, file: !3595, line: 13, baseType: !5424, size: 384)
!5424 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5421, file: !3595, line: 13, size: 384, elements: !5425)
!5425 = !{!5426, !5427, !5428, !5429}
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5424, file: !3595, line: 13, baseType: !37, size: 32)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5424, file: !3595, line: 13, baseType: !37, size: 32, offset: 32)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5424, file: !3595, line: 13, baseType: !37, size: 32, offset: 64)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5424, file: !3595, line: 13, baseType: !5430, size: 256, offset: 128)
!5430 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5431, line: 32, size: 256, elements: !5432)
!5431 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5432 = !{!5433, !5438, !5451, !5457, !5466, !5486, !5491}
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5430, file: !5431, line: 37, baseType: !5434, size: 64)
!5434 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5430, file: !5431, line: 34, size: 64, elements: !5435)
!5435 = !{!5436, !5437}
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5434, file: !5431, line: 35, baseType: !1510, size: 32)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5434, file: !5431, line: 36, baseType: !655, size: 32, offset: 32)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5430, file: !5431, line: 45, baseType: !5439, size: 192)
!5439 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5430, file: !5431, line: 40, size: 192, elements: !5440)
!5440 = !{!5441, !5443, !5444, !5450}
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5439, file: !5431, line: 41, baseType: !5442, size: 32)
!5442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !596, line: 95, baseType: !37)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5439, file: !5431, line: 42, baseType: !37, size: 32, offset: 32)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5439, file: !5431, line: 43, baseType: !5445, size: 64, offset: 64)
!5445 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5431, line: 11, baseType: !5446)
!5446 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5431, line: 8, size: 64, elements: !5447)
!5447 = !{!5448, !5449}
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5446, file: !5431, line: 9, baseType: !37, size: 32)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5446, file: !5431, line: 10, baseType: !570, size: 64)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5439, file: !5431, line: 44, baseType: !37, size: 32, offset: 128)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5430, file: !5431, line: 52, baseType: !5452, size: 128)
!5452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5430, file: !5431, line: 48, size: 128, elements: !5453)
!5453 = !{!5454, !5455, !5456}
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5452, file: !5431, line: 49, baseType: !1510, size: 32)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5452, file: !5431, line: 50, baseType: !655, size: 32, offset: 32)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5452, file: !5431, line: 51, baseType: !5445, size: 64, offset: 64)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5430, file: !5431, line: 61, baseType: !5458, size: 256)
!5458 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5430, file: !5431, line: 55, size: 256, elements: !5459)
!5459 = !{!5460, !5461, !5462, !5463, !5465}
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5458, file: !5431, line: 56, baseType: !1510, size: 32)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5458, file: !5431, line: 57, baseType: !655, size: 32, offset: 32)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5458, file: !5431, line: 58, baseType: !37, size: 32, offset: 64)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5458, file: !5431, line: 59, baseType: !5464, size: 64, offset: 128)
!5464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !596, line: 94, baseType: !1017)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5458, file: !5431, line: 60, baseType: !5464, size: 64, offset: 192)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5430, file: !5431, line: 95, baseType: !5467, size: 256)
!5467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5430, file: !5431, line: 64, size: 256, elements: !5468)
!5468 = !{!5469, !5470}
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5467, file: !5431, line: 65, baseType: !570, size: 64)
!5470 = !DIDerivedType(tag: DW_TAG_member, scope: !5467, file: !5431, line: 77, baseType: !5471, size: 192, offset: 64)
!5471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5467, file: !5431, line: 77, size: 192, elements: !5472)
!5472 = !{!5473, !5474, !5481}
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5471, file: !5431, line: 82, baseType: !1246, size: 16)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5471, file: !5431, line: 88, baseType: !5475, size: 192)
!5475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5471, file: !5431, line: 84, size: 192, elements: !5476)
!5476 = !{!5477, !5479, !5480}
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5475, file: !5431, line: 85, baseType: !5478, size: 64)
!5478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 64, elements: !1371)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5475, file: !5431, line: 86, baseType: !570, size: 64, offset: 64)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5475, file: !5431, line: 87, baseType: !570, size: 64, offset: 128)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5471, file: !5431, line: 93, baseType: !5482, size: 96)
!5482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5471, file: !5431, line: 90, size: 96, elements: !5483)
!5483 = !{!5484, !5485}
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5482, file: !5431, line: 91, baseType: !5478, size: 64)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5482, file: !5431, line: 92, baseType: !468, size: 32, offset: 64)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5430, file: !5431, line: 101, baseType: !5487, size: 128)
!5487 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5430, file: !5431, line: 98, size: 128, elements: !5488)
!5488 = !{!5489, !5490}
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5487, file: !5431, line: 99, baseType: !513, size: 64)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5487, file: !5431, line: 100, baseType: !37, size: 32, offset: 64)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5430, file: !5431, line: 108, baseType: !5492, size: 128)
!5492 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5430, file: !5431, line: 104, size: 128, elements: !5493)
!5493 = !{!5494, !5495, !5496}
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5492, file: !5431, line: 105, baseType: !570, size: 64)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5492, file: !5431, line: 106, baseType: !37, size: 32, offset: 64)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5492, file: !5431, line: 107, baseType: !7, size: 32, offset: 96)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1258, file: !1259, line: 1067, baseType: !3662, offset: 11136)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1258, file: !1259, line: 1099, baseType: !5499, size: 64, offset: 11136)
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5500, size: 64)
!5500 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1259, line: 56, flags: DIFlagFwdDecl)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1258, file: !1259, line: 1103, baseType: !289, size: 128, offset: 11200)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1258, file: !1259, line: 1104, baseType: !5503, size: 64, offset: 11328)
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1259, line: 46, flags: DIFlagFwdDecl)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1258, file: !1259, line: 1105, baseType: !954, size: 192, offset: 11392)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1258, file: !1259, line: 1106, baseType: !7, size: 32, offset: 11584)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1258, file: !1259, line: 1109, baseType: !5508, size: 128, offset: 11648)
!5508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5509, size: 128, elements: !478)
!5509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5510, size: 64)
!5510 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1259, line: 51, flags: DIFlagFwdDecl)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1258, file: !1259, line: 1110, baseType: !954, size: 192, offset: 11776)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1258, file: !1259, line: 1111, baseType: !289, size: 128, offset: 11968)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1258, file: !1259, line: 1173, baseType: !5514, size: 64, offset: 12096)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5516, line: 62, size: 256, align: 256, elements: !5517)
!5516 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5517 = !{!5518, !5519, !5520, !5525}
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5515, file: !5516, line: 75, baseType: !468, size: 32)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5515, file: !5516, line: 90, baseType: !468, size: 32, offset: 32)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5515, file: !5516, line: 124, baseType: !5521, size: 64, offset: 64)
!5521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5515, file: !5516, line: 109, size: 64, elements: !5522)
!5522 = !{!5523, !5524}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5521, file: !5516, line: 110, baseType: !338, size: 64)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5521, file: !5516, line: 112, baseType: !338, size: 64)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5515, file: !5516, line: 144, baseType: !468, size: 32, offset: 128)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1258, file: !1259, line: 1174, baseType: !707, size: 32, offset: 12160)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1258, file: !1259, line: 1179, baseType: !317, size: 64, offset: 12224)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1258, file: !1259, line: 1182, baseType: !5529, size: 128, offset: 12288)
!5529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1198, line: 76, size: 128, elements: !5530)
!5530 = !{!5531, !5536, !5537}
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5529, file: !1198, line: 85, baseType: !5532, size: 64)
!5532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5533, line: 7, size: 64, elements: !5534)
!5533 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5534 = !{!5535}
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5532, file: !5533, line: 12, baseType: !1412, size: 64)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5529, file: !1198, line: 88, baseType: !540, size: 8, offset: 64)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5529, file: !1198, line: 95, baseType: !540, size: 8, offset: 72)
!5538 = !DIDerivedType(tag: DW_TAG_member, scope: !1258, file: !1259, line: 1184, baseType: !5539, size: 128, offset: 12416)
!5539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1258, file: !1259, line: 1184, size: 128, elements: !5540)
!5540 = !{!5541, !5542}
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5539, file: !1259, line: 1185, baseType: !1271, size: 32)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5539, file: !1259, line: 1186, baseType: !304, size: 128, align: 64)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1258, file: !1259, line: 1190, baseType: !5544, size: 64, offset: 12544)
!5544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5545, size: 64)
!5545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !5546, line: 57, size: 1088, elements: !5547)
!5546 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5547 = !{!5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556, !5557, !5558, !5559, !5560, !5561, !5562, !5572, !5573, !5600}
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5545, file: !5546, line: 58, baseType: !954, size: 192)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !5545, file: !5546, line: 59, baseType: !1100, size: 128, offset: 192)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !5545, file: !5546, line: 59, baseType: !1100, size: 128, offset: 320)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5545, file: !5546, line: 60, baseType: !7, size: 32, offset: 448)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5545, file: !5546, line: 61, baseType: !7, size: 32, offset: 480)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !5545, file: !5546, line: 62, baseType: !7, size: 32, offset: 512)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !5545, file: !5546, line: 63, baseType: !7, size: 32, offset: 544)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !5545, file: !5546, line: 67, baseType: !7, size: 32, offset: 576)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !5545, file: !5546, line: 68, baseType: !7, size: 32, offset: 608)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !5545, file: !5546, line: 69, baseType: !7, size: 32, offset: 640)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !5545, file: !5546, line: 70, baseType: !7, size: 32, offset: 672)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !5545, file: !5546, line: 71, baseType: !7, size: 32, offset: 704)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !5545, file: !5546, line: 72, baseType: !7, size: 32, offset: 736)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !5545, file: !5546, line: 73, baseType: !624, size: 64, offset: 768)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !5545, file: !5546, line: 74, baseType: !5563, size: 64, offset: 832)
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5564, size: 64)
!5564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !639, line: 1314, size: 320, elements: !5565)
!5565 = !{!5566, !5567, !5568, !5569, !5570, !5571}
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !5564, file: !639, line: 1315, baseType: !2772)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5564, file: !639, line: 1316, baseType: !37, size: 32)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !5564, file: !639, line: 1317, baseType: !37, size: 32, offset: 32)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !5564, file: !639, line: 1318, baseType: !5563, size: 64, offset: 64)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !5564, file: !639, line: 1319, baseType: !1010, size: 64, offset: 128)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !5564, file: !639, line: 1320, baseType: !304, size: 128, align: 64, offset: 192)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !5545, file: !5546, line: 75, baseType: !5563, size: 64, offset: 896)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !5545, file: !5546, line: 76, baseType: !5574, size: 64, offset: 960)
!5574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5575, size: 64)
!5575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !5546, line: 26, size: 320, elements: !5576)
!5576 = !{!5577, !5578, !5579, !5580, !5598, !5599}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5575, file: !5546, line: 27, baseType: !624, size: 64)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5575, file: !5546, line: 28, baseType: !7, size: 32, offset: 64)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5575, file: !5546, line: 28, baseType: !7, size: 32, offset: 96)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5575, file: !5546, line: 29, baseType: !5581, size: 64, offset: 128)
!5581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5582, size: 64)
!5582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5583)
!5583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !5546, line: 93, size: 256, elements: !5584)
!5584 = !{!5585, !5589, !5593, !5597}
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !5583, file: !5546, line: 101, baseType: !5586, size: 64)
!5586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5587, size: 64)
!5587 = !DISubroutineType(types: !5588)
!5588 = !{!37, !5544, !5574}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5583, file: !5546, line: 107, baseType: !5590, size: 64, offset: 64)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64)
!5591 = !DISubroutineType(types: !5592)
!5592 = !{null, !5544, !5574}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !5583, file: !5546, line: 117, baseType: !5594, size: 64, offset: 128)
!5594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5595, size: 64)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!540, !5544, !5574}
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5583, file: !5546, line: 122, baseType: !5594, size: 64, offset: 192)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5575, file: !5546, line: 30, baseType: !7, size: 32, offset: 192)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5575, file: !5546, line: 31, baseType: !317, size: 64, offset: 256)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5545, file: !5546, line: 77, baseType: !1733, size: 64, offset: 1024)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1258, file: !1259, line: 1192, baseType: !5602, size: 128, offset: 12608)
!5602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1198, line: 64, size: 128, elements: !5603)
!5603 = !{!5604, !5605, !5606}
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5602, file: !1198, line: 65, baseType: !624, size: 64)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5602, file: !1198, line: 67, baseType: !468, size: 32, offset: 64)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5602, file: !1198, line: 68, baseType: !468, size: 32, offset: 96)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1258, file: !1259, line: 1206, baseType: !37, size: 32, offset: 12736)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1258, file: !1259, line: 1207, baseType: !37, size: 32, offset: 12768)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1258, file: !1259, line: 1209, baseType: !317, size: 64, offset: 12800)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1258, file: !1259, line: 1219, baseType: !336, size: 64, offset: 12864)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1258, file: !1259, line: 1220, baseType: !336, size: 64, offset: 12928)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1258, file: !1259, line: 1317, baseType: !37, size: 32, offset: 12992)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1258, file: !1259, line: 1319, baseType: !1257, size: 64, offset: 13056)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1258, file: !1259, line: 1322, baseType: !5615, size: 64, offset: 13120)
!5615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 64)
!5616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5617, line: 56, size: 512, elements: !5618)
!5617 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5618 = !{!5619, !5620, !5621, !5622, !5623, !5625, !5626, !5628}
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5616, file: !5617, line: 57, baseType: !5615, size: 64)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5616, file: !5617, line: 58, baseType: !570, size: 64, offset: 64)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5616, file: !5617, line: 59, baseType: !317, size: 64, offset: 128)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5616, file: !5617, line: 60, baseType: !317, size: 64, offset: 192)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5616, file: !5617, line: 61, baseType: !5624, size: 64, offset: 256)
!5624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5616, file: !5617, line: 62, baseType: !7, size: 32, offset: 320)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5616, file: !5617, line: 63, baseType: !5627, size: 64, offset: 384)
!5627 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !282, line: 153, baseType: !336)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5616, file: !5617, line: 64, baseType: !2244, size: 64, offset: 448)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1258, file: !1259, line: 1326, baseType: !1271, size: 32, offset: 13184)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1258, file: !1259, line: 1342, baseType: !570, size: 64, offset: 13248)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1258, file: !1259, line: 1343, baseType: !338, size: 64, offset: 13312)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1258, file: !1259, line: 1344, baseType: !336, size: 64, offset: 13376)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1258, file: !1259, line: 1345, baseType: !338, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1258, file: !1259, line: 1346, baseType: !338, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1258, file: !1259, line: 1347, baseType: !338, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1258, file: !1259, line: 1348, baseType: !304, size: 128, align: 64, offset: 13504)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1258, file: !1259, line: 1358, baseType: !5638, size: 34816, offset: 13824)
!5638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5639, line: 485, size: 34816, elements: !5640)
!5639 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5640 = !{!5641, !5659, !5660, !5661, !5662, !5663, !5664, !5665, !5666, !5670, !5671, !5672, !5673, !5674, !5675, !5678, !5679, !5680}
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5638, file: !5639, line: 487, baseType: !5642, size: 192)
!5642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5643, size: 192, elements: !867)
!5643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5644, line: 16, size: 64, elements: !5645)
!5644 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5645 = !{!5646, !5647, !5648, !5649, !5650, !5651, !5652, !5653, !5654, !5655, !5656, !5657, !5658}
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5643, file: !5644, line: 17, baseType: !1038, size: 16)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5643, file: !5644, line: 18, baseType: !1038, size: 16, offset: 16)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5643, file: !5644, line: 19, baseType: !1038, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5643, file: !5644, line: 19, baseType: !1038, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5643, file: !5644, line: 19, baseType: !1038, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5643, file: !5644, line: 19, baseType: !1038, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5643, file: !5644, line: 19, baseType: !1038, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5643, file: !5644, line: 20, baseType: !1038, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5643, file: !5644, line: 20, baseType: !1038, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5643, file: !5644, line: 20, baseType: !1038, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5643, file: !5644, line: 20, baseType: !1038, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5643, file: !5644, line: 20, baseType: !1038, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5643, file: !5644, line: 20, baseType: !1038, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5638, file: !5639, line: 491, baseType: !317, size: 64, offset: 192)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5638, file: !5639, line: 495, baseType: !477, size: 16, offset: 256)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5638, file: !5639, line: 496, baseType: !477, size: 16, offset: 272)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5638, file: !5639, line: 497, baseType: !477, size: 16, offset: 288)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5638, file: !5639, line: 498, baseType: !477, size: 16, offset: 304)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5638, file: !5639, line: 502, baseType: !317, size: 64, offset: 320)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5638, file: !5639, line: 503, baseType: !317, size: 64, offset: 384)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5638, file: !5639, line: 514, baseType: !5667, size: 256, offset: 448)
!5667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5668, size: 256, elements: !1202)
!5668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5669, size: 64)
!5669 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !5639, line: 483, flags: DIFlagFwdDecl)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5638, file: !5639, line: 516, baseType: !317, size: 64, offset: 704)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5638, file: !5639, line: 518, baseType: !317, size: 64, offset: 768)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5638, file: !5639, line: 520, baseType: !317, size: 64, offset: 832)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5638, file: !5639, line: 521, baseType: !317, size: 64, offset: 896)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5638, file: !5639, line: 522, baseType: !317, size: 64, offset: 960)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5638, file: !5639, line: 528, baseType: !5676, size: 64, offset: 1024)
!5676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5677, size: 64)
!5677 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5639, line: 10, flags: DIFlagFwdDecl)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5638, file: !5639, line: 535, baseType: !317, size: 64, offset: 1088)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5638, file: !5639, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5638, file: !5639, line: 540, baseType: !5681, size: 33280, offset: 1536)
!5681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !5682, line: 317, size: 33280, elements: !5683)
!5682 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!5683 = !{!5684, !5685, !5686}
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !5681, file: !5682, line: 330, baseType: !7, size: 32)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !5681, file: !5682, line: 337, baseType: !317, size: 64, offset: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5681, file: !5682, line: 348, baseType: !5687, size: 32768, offset: 512)
!5687 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !5682, line: 304, size: 32768, elements: !5688)
!5688 = !{!5689, !5702, !5737, !5787, !5799}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !5687, file: !5682, line: 305, baseType: !5690, size: 896)
!5690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !5682, line: 12, size: 896, elements: !5691)
!5691 = !{!5692, !5693, !5694, !5695, !5696, !5697, !5698, !5699, !5701}
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5690, file: !5682, line: 13, baseType: !707, size: 32)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5690, file: !5682, line: 14, baseType: !707, size: 32, offset: 32)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5690, file: !5682, line: 15, baseType: !707, size: 32, offset: 64)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5690, file: !5682, line: 16, baseType: !707, size: 32, offset: 96)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5690, file: !5682, line: 17, baseType: !707, size: 32, offset: 128)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5690, file: !5682, line: 18, baseType: !707, size: 32, offset: 160)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5690, file: !5682, line: 19, baseType: !707, size: 32, offset: 192)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5690, file: !5682, line: 22, baseType: !5700, size: 640, offset: 224)
!5700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 640, elements: !2498)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5690, file: !5682, line: 25, baseType: !707, size: 32, offset: 864)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !5687, file: !5682, line: 306, baseType: !5703, size: 4096, align: 128)
!5703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !5682, line: 34, size: 4096, align: 128, elements: !5704)
!5704 = !{!5705, !5706, !5707, !5708, !5709, !5724, !5725, !5726, !5728, !5730, !5732}
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5703, file: !5682, line: 35, baseType: !1038, size: 16)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5703, file: !5682, line: 36, baseType: !1038, size: 16, offset: 16)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5703, file: !5682, line: 37, baseType: !1038, size: 16, offset: 32)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !5703, file: !5682, line: 38, baseType: !1038, size: 16, offset: 48)
!5709 = !DIDerivedType(tag: DW_TAG_member, scope: !5703, file: !5682, line: 39, baseType: !5710, size: 128, offset: 64)
!5710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5703, file: !5682, line: 39, size: 128, elements: !5711)
!5711 = !{!5712, !5717}
!5712 = !DIDerivedType(tag: DW_TAG_member, scope: !5710, file: !5682, line: 40, baseType: !5713, size: 128)
!5713 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5710, file: !5682, line: 40, size: 128, elements: !5714)
!5714 = !{!5715, !5716}
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !5713, file: !5682, line: 41, baseType: !336, size: 64)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !5713, file: !5682, line: 42, baseType: !336, size: 64, offset: 64)
!5717 = !DIDerivedType(tag: DW_TAG_member, scope: !5710, file: !5682, line: 44, baseType: !5718, size: 128)
!5718 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5710, file: !5682, line: 44, size: 128, elements: !5719)
!5719 = !{!5720, !5721, !5722, !5723}
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5718, file: !5682, line: 45, baseType: !707, size: 32)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5718, file: !5682, line: 46, baseType: !707, size: 32, offset: 32)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5718, file: !5682, line: 47, baseType: !707, size: 32, offset: 64)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5718, file: !5682, line: 48, baseType: !707, size: 32, offset: 96)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !5703, file: !5682, line: 51, baseType: !707, size: 32, offset: 192)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !5703, file: !5682, line: 52, baseType: !707, size: 32, offset: 224)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5703, file: !5682, line: 55, baseType: !5727, size: 1024, offset: 256)
!5727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 1024, elements: !716)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !5703, file: !5682, line: 58, baseType: !5729, size: 2048, offset: 1280)
!5729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 2048, elements: !3707)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5703, file: !5682, line: 60, baseType: !5731, size: 384, offset: 3328)
!5731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 384, elements: !2833)
!5732 = !DIDerivedType(tag: DW_TAG_member, scope: !5703, file: !5682, line: 62, baseType: !5733, size: 384, offset: 3712)
!5733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5703, file: !5682, line: 62, size: 384, elements: !5734)
!5734 = !{!5735, !5736}
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !5733, file: !5682, line: 63, baseType: !5731, size: 384)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !5733, file: !5682, line: 64, baseType: !5731, size: 384)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5687, file: !5682, line: 307, baseType: !5738, size: 1088)
!5738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !5682, line: 79, size: 1088, elements: !5739)
!5739 = !{!5740, !5741, !5742, !5743, !5744, !5745, !5746, !5747, !5748, !5749, !5750, !5751, !5752, !5753, !5754, !5786}
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5738, file: !5682, line: 80, baseType: !707, size: 32)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5738, file: !5682, line: 81, baseType: !707, size: 32, offset: 32)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5738, file: !5682, line: 82, baseType: !707, size: 32, offset: 64)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5738, file: !5682, line: 83, baseType: !707, size: 32, offset: 96)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5738, file: !5682, line: 84, baseType: !707, size: 32, offset: 128)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5738, file: !5682, line: 85, baseType: !707, size: 32, offset: 160)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5738, file: !5682, line: 86, baseType: !707, size: 32, offset: 192)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5738, file: !5682, line: 88, baseType: !5700, size: 640, offset: 224)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !5738, file: !5682, line: 89, baseType: !1397, size: 8, offset: 864)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5738, file: !5682, line: 90, baseType: !1397, size: 8, offset: 872)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !5738, file: !5682, line: 91, baseType: !1397, size: 8, offset: 880)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !5738, file: !5682, line: 92, baseType: !1397, size: 8, offset: 888)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !5738, file: !5682, line: 93, baseType: !1397, size: 8, offset: 896)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !5738, file: !5682, line: 94, baseType: !1397, size: 8, offset: 904)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5738, file: !5682, line: 95, baseType: !5755, size: 64, offset: 960)
!5755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5756, size: 64)
!5756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !5757, line: 11, size: 128, elements: !5758)
!5757 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!5758 = !{!5759, !5760}
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !5756, file: !5757, line: 12, baseType: !513, size: 64)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5756, file: !5757, line: 13, baseType: !5761, size: 64, offset: 64)
!5761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5762, size: 64)
!5762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !5763, line: 56, size: 1344, elements: !5764)
!5763 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!5764 = !{!5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5781, !5782, !5783, !5784, !5785}
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5762, file: !5763, line: 61, baseType: !317, size: 64)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5762, file: !5763, line: 62, baseType: !317, size: 64, offset: 64)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !5762, file: !5763, line: 63, baseType: !317, size: 64, offset: 128)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5762, file: !5763, line: 64, baseType: !317, size: 64, offset: 192)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !5762, file: !5763, line: 65, baseType: !317, size: 64, offset: 256)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !5762, file: !5763, line: 66, baseType: !317, size: 64, offset: 320)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !5762, file: !5763, line: 68, baseType: !317, size: 64, offset: 384)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !5762, file: !5763, line: 69, baseType: !317, size: 64, offset: 448)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !5762, file: !5763, line: 70, baseType: !317, size: 64, offset: 512)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !5762, file: !5763, line: 71, baseType: !317, size: 64, offset: 576)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !5762, file: !5763, line: 72, baseType: !317, size: 64, offset: 640)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !5762, file: !5763, line: 73, baseType: !317, size: 64, offset: 704)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5762, file: !5763, line: 74, baseType: !317, size: 64, offset: 768)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !5762, file: !5763, line: 75, baseType: !317, size: 64, offset: 832)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !5762, file: !5763, line: 76, baseType: !317, size: 64, offset: 896)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !5762, file: !5763, line: 81, baseType: !317, size: 64, offset: 960)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5762, file: !5763, line: 83, baseType: !317, size: 64, offset: 1024)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !5762, file: !5763, line: 84, baseType: !317, size: 64, offset: 1088)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5762, file: !5763, line: 85, baseType: !317, size: 64, offset: 1152)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5762, file: !5763, line: 86, baseType: !317, size: 64, offset: 1216)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !5762, file: !5763, line: 87, baseType: !317, size: 64, offset: 1280)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !5738, file: !5682, line: 96, baseType: !707, size: 32, offset: 1024)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !5687, file: !5682, line: 308, baseType: !5788, size: 4608, align: 512)
!5788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !5682, line: 289, size: 4608, align: 512, elements: !5789)
!5789 = !{!5790, !5791, !5798}
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !5788, file: !5682, line: 290, baseType: !5703, size: 4096, align: 128)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5788, file: !5682, line: 291, baseType: !5792, size: 512, offset: 4096)
!5792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !5682, line: 268, size: 512, elements: !5793)
!5793 = !{!5794, !5795, !5796}
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !5792, file: !5682, line: 269, baseType: !336, size: 64)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !5792, file: !5682, line: 270, baseType: !336, size: 64, offset: 64)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5792, file: !5682, line: 271, baseType: !5797, size: 384, offset: 128)
!5797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 384, elements: !1671)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !5788, file: !5682, line: 292, baseType: !2856, offset: 4608)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !5687, file: !5682, line: 309, baseType: !5800, size: 32768)
!5800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 32768, elements: !5801)
!5801 = !{!5802}
!5802 = !DISubrange(count: 4096)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1254, file: !626, line: 378, baseType: !5804, size: 64, offset: 64)
!5804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1250, file: !626, line: 384, baseType: !1547, size: 192, offset: 192)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1129, file: !626, line: 500, baseType: !729, offset: 6656)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1129, file: !626, line: 501, baseType: !5808, size: 64, offset: 6656)
!5808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5809, size: 64)
!5809 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !626, line: 387, flags: DIFlagFwdDecl)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1129, file: !626, line: 516, baseType: !1759, size: 64, offset: 6720)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1129, file: !626, line: 519, baseType: !1010, size: 64, offset: 6784)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1129, file: !626, line: 521, baseType: !5813, size: 64, offset: 6848)
!5813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5814, size: 64)
!5814 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !626, line: 521, flags: DIFlagFwdDecl)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1129, file: !626, line: 545, baseType: !388, size: 32, offset: 6912)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1129, file: !626, line: 548, baseType: !540, size: 8, offset: 6944)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1129, file: !626, line: 550, baseType: !5818, offset: 6952)
!5818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !5819, line: 142, elements: !743)
!5819 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1129, file: !626, line: 554, baseType: !1807, size: 256, offset: 6976)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1129, file: !626, line: 557, baseType: !707, size: 32, offset: 7232)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1126, file: !626, line: 565, baseType: !5823, offset: 7296)
!5823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, elements: !314)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1116, file: !626, line: 333, baseType: !5825, size: 64, offset: 576)
!5825 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1148, line: 284, baseType: !5826)
!5826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1148, line: 284, size: 64, elements: !5827)
!5827 = !{!5828}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !5826, file: !1148, line: 284, baseType: !5829, size: 64)
!5829 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1153, line: 19, baseType: !317)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1116, file: !626, line: 334, baseType: !317, size: 64, offset: 640)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1116, file: !626, line: 343, baseType: !5832, size: 256, offset: 704)
!5832 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1116, file: !626, line: 340, size: 256, elements: !5833)
!5833 = !{!5834, !5835}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5832, file: !626, line: 341, baseType: !438, size: 192, align: 64)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !5832, file: !626, line: 342, baseType: !317, size: 64, offset: 192)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1116, file: !626, line: 351, baseType: !289, size: 128, offset: 960)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1116, file: !626, line: 353, baseType: !5838, size: 64, offset: 1088)
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5839, size: 64)
!5839 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !626, line: 353, flags: DIFlagFwdDecl)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1116, file: !626, line: 356, baseType: !4042, size: 64, offset: 1152)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1116, file: !626, line: 359, baseType: !317, size: 64, offset: 1216)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1116, file: !626, line: 361, baseType: !1010, size: 64, offset: 1280)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1116, file: !626, line: 362, baseType: !570, size: 64, offset: 1344)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1116, file: !626, line: 365, baseType: !376, size: 64, offset: 1408)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1116, file: !626, line: 373, baseType: !5846, offset: 1472)
!5846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !626, line: 296, elements: !743)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1003, file: !639, line: 1836, baseType: !317, size: 64, offset: 832)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1003, file: !639, line: 1837, baseType: !5849, size: 64, offset: 896)
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{!37, !642, !1010}
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1003, file: !639, line: 1838, baseType: !5853, size: 64, offset: 960)
!5853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5854, size: 64)
!5854 = !DISubroutineType(types: !5855)
!5855 = !{!37, !1010, !5856}
!5856 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !639, line: 1007, baseType: !570)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1003, file: !639, line: 1839, baseType: !5849, size: 64, offset: 1024)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1003, file: !639, line: 1840, baseType: !5859, size: 64, offset: 1088)
!5859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5860, size: 64)
!5860 = !DISubroutineType(types: !5861)
!5861 = !{!37, !1010, !824, !824, !37}
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1003, file: !639, line: 1841, baseType: !5863, size: 64, offset: 1152)
!5863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5864, size: 64)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{!37, !37, !1010, !37}
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1003, file: !639, line: 1842, baseType: !5867, size: 64, offset: 1216)
!5867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5868, size: 64)
!5868 = !DISubroutineType(types: !5869)
!5869 = !{!37, !1010, !37, !5870}
!5870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5871, size: 64)
!5871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !639, line: 1062, size: 1664, elements: !5872)
!5872 = !{!5873, !5874, !5875, !5876, !5877, !5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5903, !5934}
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !5871, file: !639, line: 1063, baseType: !5870, size: 64)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !5871, file: !639, line: 1064, baseType: !289, size: 128, offset: 64)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !5871, file: !639, line: 1065, baseType: !281, size: 128, offset: 192)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !5871, file: !639, line: 1066, baseType: !289, size: 128, offset: 320)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !5871, file: !639, line: 1069, baseType: !289, size: 128, offset: 448)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !5871, file: !639, line: 1072, baseType: !5856, size: 64, offset: 576)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !5871, file: !639, line: 1073, baseType: !7, size: 32, offset: 640)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !5871, file: !639, line: 1074, baseType: !494, size: 8, offset: 672)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !5871, file: !639, line: 1075, baseType: !7, size: 32, offset: 704)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !5871, file: !639, line: 1076, baseType: !37, size: 32, offset: 736)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !5871, file: !639, line: 1077, baseType: !1100, size: 128, offset: 768)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !5871, file: !639, line: 1078, baseType: !1010, size: 64, offset: 896)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !5871, file: !639, line: 1079, baseType: !824, size: 64, offset: 960)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !5871, file: !639, line: 1080, baseType: !824, size: 64, offset: 1024)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !5871, file: !639, line: 1082, baseType: !5563, size: 64, offset: 1088)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !5871, file: !639, line: 1084, baseType: !317, size: 64, offset: 1152)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !5871, file: !639, line: 1085, baseType: !317, size: 64, offset: 1216)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !5871, file: !639, line: 1087, baseType: !5891, size: 64, offset: 1280)
!5891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5892, size: 64)
!5892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5893)
!5893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !639, line: 1011, size: 128, elements: !5894)
!5894 = !{!5895, !5899}
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !5893, file: !639, line: 1012, baseType: !5896, size: 64)
!5896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5897, size: 64)
!5897 = !DISubroutineType(types: !5898)
!5898 = !{null, !5870, !5870}
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !5893, file: !639, line: 1013, baseType: !5900, size: 64, offset: 64)
!5900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5901, size: 64)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{null, !5870}
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !5871, file: !639, line: 1088, baseType: !5904, size: 64, offset: 1344)
!5904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5905, size: 64)
!5905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5906)
!5906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !639, line: 1016, size: 512, elements: !5907)
!5907 = !{!5908, !5912, !5916, !5917, !5921, !5925, !5929, !5933}
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !5906, file: !639, line: 1017, baseType: !5909, size: 64)
!5909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5910, size: 64)
!5910 = !DISubroutineType(types: !5911)
!5911 = !{!5856, !5856}
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !5906, file: !639, line: 1018, baseType: !5913, size: 64, offset: 64)
!5913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5914, size: 64)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{null, !5856}
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !5906, file: !639, line: 1019, baseType: !5900, size: 64, offset: 128)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !5906, file: !639, line: 1020, baseType: !5918, size: 64, offset: 192)
!5918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5919, size: 64)
!5919 = !DISubroutineType(types: !5920)
!5920 = !{!37, !5870, !37}
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !5906, file: !639, line: 1021, baseType: !5922, size: 64, offset: 256)
!5922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5923, size: 64)
!5923 = !DISubroutineType(types: !5924)
!5924 = !{!540, !5870}
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !5906, file: !639, line: 1022, baseType: !5926, size: 64, offset: 320)
!5926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5927, size: 64)
!5927 = !DISubroutineType(types: !5928)
!5928 = !{!37, !5870, !37, !292}
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !5906, file: !639, line: 1023, baseType: !5930, size: 64, offset: 384)
!5930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5931, size: 64)
!5931 = !DISubroutineType(types: !5932)
!5932 = !{null, !5870, !3480}
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !5906, file: !639, line: 1024, baseType: !5922, size: 64, offset: 448)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !5871, file: !639, line: 1097, baseType: !5935, size: 256, offset: 1408)
!5935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5871, file: !639, line: 1089, size: 256, elements: !5936)
!5936 = !{!5937, !5946, !5952}
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !5935, file: !639, line: 1090, baseType: !5938, size: 256)
!5938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !5939, line: 10, size: 256, elements: !5940)
!5939 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5940 = !{!5941, !5942, !5945}
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5938, file: !5939, line: 11, baseType: !707, size: 32)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5938, file: !5939, line: 12, baseType: !5943, size: 64, offset: 64)
!5943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5944, size: 64)
!5944 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !5939, line: 5, flags: DIFlagFwdDecl)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5938, file: !5939, line: 13, baseType: !289, size: 128, offset: 128)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !5935, file: !639, line: 1091, baseType: !5947, size: 64)
!5947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !5939, line: 17, size: 64, elements: !5948)
!5948 = !{!5949}
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5947, file: !5939, line: 18, baseType: !5950, size: 64)
!5950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5951, size: 64)
!5951 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !5939, line: 16, flags: DIFlagFwdDecl)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !5935, file: !639, line: 1096, baseType: !5953, size: 192)
!5953 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5935, file: !639, line: 1092, size: 192, elements: !5954)
!5954 = !{!5955, !5956, !5957}
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5953, file: !639, line: 1093, baseType: !289, size: 128)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5953, file: !639, line: 1094, baseType: !37, size: 32, offset: 128)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !5953, file: !639, line: 1095, baseType: !7, size: 32, offset: 160)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1003, file: !639, line: 1843, baseType: !5959, size: 64, offset: 1280)
!5959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5960, size: 64)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{!1015, !1010, !624, !37, !594, !969, !37}
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1003, file: !639, line: 1844, baseType: !1138, size: 64, offset: 1344)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1003, file: !639, line: 1845, baseType: !5964, size: 64, offset: 1408)
!5964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5965, size: 64)
!5965 = !DISubroutineType(types: !5966)
!5966 = !{!37, !37}
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1003, file: !639, line: 1846, baseType: !5867, size: 64, offset: 1472)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1003, file: !639, line: 1847, baseType: !5969, size: 64, offset: 1536)
!5969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5970, size: 64)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{!1015, !5544, !1010, !969, !594, !7}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1003, file: !639, line: 1848, baseType: !5973, size: 64, offset: 1600)
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{!1015, !1010, !969, !5544, !594, !7}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1003, file: !639, line: 1849, baseType: !5977, size: 64, offset: 1664)
!5977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5978, size: 64)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!37, !1010, !513, !5980, !3480}
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5870, size: 64)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1003, file: !639, line: 1850, baseType: !5982, size: 64, offset: 1728)
!5982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5983, size: 64)
!5983 = !DISubroutineType(types: !5984)
!5984 = !{!513, !1010, !37, !824, !824}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1003, file: !639, line: 1852, baseType: !5986, size: 64, offset: 1792)
!5986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5987, size: 64)
!5987 = !DISubroutineType(types: !5988)
!5988 = !{null, !942, !1010}
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1003, file: !639, line: 1856, baseType: !5990, size: 64, offset: 1856)
!5990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5991, size: 64)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{!1015, !1010, !824, !1010, !824, !594, !7}
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1003, file: !639, line: 1858, baseType: !5994, size: 64, offset: 1920)
!5994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5995, size: 64)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{!824, !1010, !824, !1010, !824, !824, !7}
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1003, file: !639, line: 1861, baseType: !5859, size: 64, offset: 1984)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !986, file: !639, line: 929, baseType: !729, offset: 384)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !986, file: !639, line: 930, baseType: !6000, size: 32, offset: 384)
!6000 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !639, line: 296, baseType: !7, size: 32, elements: !6001)
!6001 = !{!6002, !6003, !6004, !6005, !6006, !6007}
!6002 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!6003 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!6004 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!6005 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!6006 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!6007 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !986, file: !639, line: 931, baseType: !376, size: 64, offset: 448)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !986, file: !639, line: 932, baseType: !7, size: 32, offset: 512)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !986, file: !639, line: 933, baseType: !4752, size: 32, offset: 544)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !986, file: !639, line: 934, baseType: !954, size: 192, offset: 576)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !986, file: !639, line: 935, baseType: !824, size: 64, offset: 768)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !986, file: !639, line: 936, baseType: !6014, size: 192, offset: 832)
!6014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !639, line: 885, size: 192, elements: !6015)
!6015 = !{!6016, !6017, !6018, !6026, !6027, !6028}
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6014, file: !639, line: 886, baseType: !2772)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6014, file: !639, line: 887, baseType: !1521, size: 64)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6014, file: !639, line: 888, baseType: !6019, size: 32, offset: 64)
!6019 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1523, line: 9, baseType: !7, size: 32, elements: !6020)
!6020 = !{!6021, !6022, !6023, !6024, !6025}
!6021 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!6022 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!6023 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!6024 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!6025 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6014, file: !639, line: 889, baseType: !649, size: 32, offset: 96)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6014, file: !639, line: 889, baseType: !649, size: 32, offset: 128)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6014, file: !639, line: 890, baseType: !37, size: 32, offset: 160)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !986, file: !639, line: 937, baseType: !1592, size: 64, offset: 1024)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !986, file: !639, line: 938, baseType: !6031, size: 256, offset: 1088)
!6031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !639, line: 896, size: 256, elements: !6032)
!6032 = !{!6033, !6034, !6035, !6036, !6037, !6038}
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6031, file: !639, line: 897, baseType: !317, size: 64)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6031, file: !639, line: 898, baseType: !7, size: 32, offset: 64)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6031, file: !639, line: 899, baseType: !7, size: 32, offset: 96)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6031, file: !639, line: 902, baseType: !7, size: 32, offset: 128)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6031, file: !639, line: 903, baseType: !7, size: 32, offset: 160)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6031, file: !639, line: 904, baseType: !824, size: 64, offset: 192)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !986, file: !639, line: 940, baseType: !336, size: 64, offset: 1344)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !986, file: !639, line: 945, baseType: !570, size: 64, offset: 1408)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !986, file: !639, line: 949, baseType: !289, size: 128, offset: 1472)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !986, file: !639, line: 950, baseType: !289, size: 128, offset: 1600)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !986, file: !639, line: 952, baseType: !637, size: 64, offset: 1728)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !986, file: !639, line: 953, baseType: !6045, size: 32, offset: 1792)
!6045 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !6046, line: 8, baseType: !707)
!6046 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !986, file: !639, line: 954, baseType: !6045, size: 32, offset: 1824)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !943, file: !944, line: 28, baseType: !570, size: 64, offset: 832)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !875, file: !639, line: 1955, baseType: !939, size: 64, offset: 1088)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !875, file: !639, line: 1956, baseType: !939, size: 64, offset: 1152)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !875, file: !639, line: 1957, baseType: !939, size: 64, offset: 1216)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !875, file: !639, line: 1963, baseType: !6053, size: 64, offset: 1280)
!6053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 64)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{!37, !814, !624, !1990}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !875, file: !639, line: 1964, baseType: !6057, size: 64, offset: 1344)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6058, size: 64)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{!513, !814, !6060}
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !6062, line: 12, size: 256, elements: !6063)
!6062 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!6063 = !{!6064, !6065, !6066, !6067, !6068}
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !6061, file: !6062, line: 13, baseType: !1990, size: 32)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !6061, file: !6062, line: 16, baseType: !37, size: 32, offset: 32)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !6061, file: !6062, line: 23, baseType: !317, size: 64, offset: 64)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !6061, file: !6062, line: 30, baseType: !317, size: 64, offset: 128)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !6061, file: !6062, line: 33, baseType: !6069, size: 64, offset: 192)
!6069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6070, size: 64)
!6070 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !626, line: 27, flags: DIFlagFwdDecl)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !875, file: !639, line: 1966, baseType: !6057, size: 64, offset: 1408)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !815, file: !639, line: 1424, baseType: !6073, size: 64, offset: 448)
!6073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6074, size: 64)
!6074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6075)
!6075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !6076, line: 322, size: 704, elements: !6077)
!6076 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!6077 = !{!6078, !6129, !6133, !6137, !6138, !6139, !6140, !6141, !6146, !6151, !6155}
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !6075, file: !6076, line: 323, baseType: !6079, size: 64)
!6079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6080, size: 64)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{!37, !6082}
!6082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6083, size: 64)
!6083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !6076, line: 294, size: 1600, elements: !6084)
!6084 = !{!6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6114, !6115, !6116}
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !6083, file: !6076, line: 295, baseType: !281, size: 128)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !6083, file: !6076, line: 296, baseType: !289, size: 128, offset: 128)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !6083, file: !6076, line: 297, baseType: !289, size: 128, offset: 256)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !6083, file: !6076, line: 298, baseType: !289, size: 128, offset: 384)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !6083, file: !6076, line: 299, baseType: !954, size: 192, offset: 512)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !6083, file: !6076, line: 300, baseType: !729, offset: 704)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !6083, file: !6076, line: 301, baseType: !388, size: 32, offset: 704)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !6083, file: !6076, line: 302, baseType: !814, size: 64, offset: 768)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !6083, file: !6076, line: 303, baseType: !6094, size: 64, offset: 832)
!6094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !6076, line: 68, size: 64, elements: !6095)
!6095 = !{!6096, !6108}
!6096 = !DIDerivedType(tag: DW_TAG_member, scope: !6094, file: !6076, line: 69, baseType: !6097, size: 32)
!6097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6094, file: !6076, line: 69, size: 32, elements: !6098)
!6098 = !{!6099, !6100, !6101}
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6097, file: !6076, line: 70, baseType: !649, size: 32)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6097, file: !6076, line: 71, baseType: !657, size: 32)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !6097, file: !6076, line: 72, baseType: !6102, size: 32)
!6102 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !6103, line: 24, baseType: !6104)
!6103 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!6104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6103, line: 22, size: 32, elements: !6105)
!6105 = !{!6106}
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6104, file: !6103, line: 23, baseType: !6107, size: 32)
!6107 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !6103, line: 20, baseType: !655)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6094, file: !6076, line: 74, baseType: !6109, size: 32, offset: 32)
!6109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !6076, line: 54, baseType: !7, size: 32, elements: !6110)
!6110 = !{!6111, !6112, !6113}
!6111 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!6112 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!6113 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !6083, file: !6076, line: 304, baseType: !824, size: 64, offset: 896)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !6083, file: !6076, line: 305, baseType: !317, size: 64, offset: 960)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !6083, file: !6076, line: 306, baseType: !6117, size: 576, offset: 1024)
!6117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !6076, line: 205, size: 576, elements: !6118)
!6118 = !{!6119, !6121, !6122, !6123, !6124, !6125, !6126, !6127, !6128}
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !6117, file: !6076, line: 206, baseType: !6120, size: 64)
!6120 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !6076, line: 66, baseType: !384)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !6117, file: !6076, line: 207, baseType: !6120, size: 64, offset: 64)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !6117, file: !6076, line: 208, baseType: !6120, size: 64, offset: 128)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !6117, file: !6076, line: 209, baseType: !6120, size: 64, offset: 192)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !6117, file: !6076, line: 210, baseType: !6120, size: 64, offset: 256)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !6117, file: !6076, line: 211, baseType: !6120, size: 64, offset: 320)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !6117, file: !6076, line: 212, baseType: !6120, size: 64, offset: 384)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !6117, file: !6076, line: 213, baseType: !1642, size: 64, offset: 448)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !6117, file: !6076, line: 214, baseType: !1642, size: 64, offset: 512)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !6075, file: !6076, line: 324, baseType: !6130, size: 64, offset: 64)
!6130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6131, size: 64)
!6131 = !DISubroutineType(types: !6132)
!6132 = !{!6082, !814, !37}
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !6075, file: !6076, line: 325, baseType: !6134, size: 64, offset: 128)
!6134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 64)
!6135 = !DISubroutineType(types: !6136)
!6136 = !{null, !6082}
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !6075, file: !6076, line: 326, baseType: !6079, size: 64, offset: 192)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !6075, file: !6076, line: 327, baseType: !6079, size: 64, offset: 256)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !6075, file: !6076, line: 328, baseType: !6079, size: 64, offset: 320)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6075, file: !6076, line: 329, baseType: !917, size: 64, offset: 384)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !6075, file: !6076, line: 332, baseType: !6142, size: 64, offset: 448)
!6142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6143, size: 64)
!6143 = !DISubroutineType(types: !6144)
!6144 = !{!6145, !642}
!6145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6120, size: 64)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !6075, file: !6076, line: 333, baseType: !6147, size: 64, offset: 512)
!6147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6148, size: 64)
!6148 = !DISubroutineType(types: !6149)
!6149 = !{!37, !642, !6150}
!6150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6102, size: 64)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !6075, file: !6076, line: 335, baseType: !6152, size: 64, offset: 576)
!6152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6153, size: 64)
!6153 = !DISubroutineType(types: !6154)
!6154 = !{!37, !642, !6145}
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6075, file: !6076, line: 337, baseType: !6156, size: 64, offset: 640)
!6156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6157, size: 64)
!6157 = !DISubroutineType(types: !6158)
!6158 = !{!37, !814, !6159}
!6159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6094, size: 64)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !815, file: !639, line: 1425, baseType: !6161, size: 64, offset: 512)
!6161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6162, size: 64)
!6162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6163)
!6163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !6076, line: 428, size: 704, elements: !6164)
!6164 = !{!6165, !6169, !6170, !6174, !6175, !6176, !6191, !6214, !6218, !6219, !6242}
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !6163, file: !6076, line: 429, baseType: !6166, size: 64)
!6166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6167, size: 64)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{!37, !814, !37, !37, !805}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !6163, file: !6076, line: 430, baseType: !917, size: 64, offset: 64)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !6163, file: !6076, line: 431, baseType: !6171, size: 64, offset: 128)
!6171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6172, size: 64)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{!37, !814, !7}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !6163, file: !6076, line: 432, baseType: !6171, size: 64, offset: 192)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !6163, file: !6076, line: 433, baseType: !917, size: 64, offset: 256)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !6163, file: !6076, line: 434, baseType: !6177, size: 64, offset: 320)
!6177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6178, size: 64)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{!37, !814, !37, !6180}
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6181, size: 64)
!6181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !6076, line: 415, size: 256, elements: !6182)
!6182 = !{!6183, !6184, !6185, !6186, !6187, !6188, !6189, !6190}
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !6181, file: !6076, line: 416, baseType: !37, size: 32)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !6181, file: !6076, line: 417, baseType: !7, size: 32, offset: 32)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !6181, file: !6076, line: 418, baseType: !7, size: 32, offset: 64)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !6181, file: !6076, line: 420, baseType: !7, size: 32, offset: 96)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !6181, file: !6076, line: 421, baseType: !7, size: 32, offset: 128)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !6181, file: !6076, line: 422, baseType: !7, size: 32, offset: 160)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !6181, file: !6076, line: 423, baseType: !7, size: 32, offset: 192)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !6181, file: !6076, line: 424, baseType: !7, size: 32, offset: 224)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !6163, file: !6076, line: 435, baseType: !6192, size: 64, offset: 384)
!6192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6193, size: 64)
!6193 = !DISubroutineType(types: !6194)
!6194 = !{!37, !814, !6094, !6195}
!6195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6196, size: 64)
!6196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !6076, line: 343, size: 960, elements: !6197)
!6197 = !{!6198, !6199, !6200, !6201, !6202, !6203, !6204, !6205, !6206, !6207, !6208, !6209, !6210, !6211, !6212, !6213}
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !6196, file: !6076, line: 344, baseType: !37, size: 32)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !6196, file: !6076, line: 345, baseType: !336, size: 64, offset: 64)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !6196, file: !6076, line: 346, baseType: !336, size: 64, offset: 128)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !6196, file: !6076, line: 347, baseType: !336, size: 64, offset: 192)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !6196, file: !6076, line: 348, baseType: !336, size: 64, offset: 256)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !6196, file: !6076, line: 349, baseType: !336, size: 64, offset: 320)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !6196, file: !6076, line: 350, baseType: !336, size: 64, offset: 384)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !6196, file: !6076, line: 351, baseType: !382, size: 64, offset: 448)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !6196, file: !6076, line: 353, baseType: !382, size: 64, offset: 512)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !6196, file: !6076, line: 354, baseType: !37, size: 32, offset: 576)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !6196, file: !6076, line: 355, baseType: !37, size: 32, offset: 608)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !6196, file: !6076, line: 356, baseType: !336, size: 64, offset: 640)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !6196, file: !6076, line: 357, baseType: !336, size: 64, offset: 704)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !6196, file: !6076, line: 358, baseType: !336, size: 64, offset: 768)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !6196, file: !6076, line: 359, baseType: !382, size: 64, offset: 832)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !6196, file: !6076, line: 360, baseType: !37, size: 32, offset: 896)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !6163, file: !6076, line: 436, baseType: !6215, size: 64, offset: 448)
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6216, size: 64)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{!37, !814, !6159, !6195}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !6163, file: !6076, line: 438, baseType: !6192, size: 64, offset: 512)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6163, file: !6076, line: 439, baseType: !6220, size: 64, offset: 576)
!6220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6221, size: 64)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{!37, !814, !6223}
!6223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6224, size: 64)
!6224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !6076, line: 409, size: 1408, elements: !6225)
!6225 = !{!6226, !6227}
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !6224, file: !6076, line: 410, baseType: !7, size: 32)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !6224, file: !6076, line: 411, baseType: !6228, size: 1344, offset: 64)
!6228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6229, size: 1344, elements: !867)
!6229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !6076, line: 395, size: 448, elements: !6230)
!6230 = !{!6231, !6232, !6233, !6234, !6235, !6236, !6237, !6238, !6239, !6241}
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6229, file: !6076, line: 396, baseType: !7, size: 32)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !6229, file: !6076, line: 397, baseType: !7, size: 32, offset: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !6229, file: !6076, line: 399, baseType: !7, size: 32, offset: 64)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !6229, file: !6076, line: 400, baseType: !7, size: 32, offset: 96)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !6229, file: !6076, line: 401, baseType: !7, size: 32, offset: 128)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !6229, file: !6076, line: 402, baseType: !7, size: 32, offset: 160)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !6229, file: !6076, line: 403, baseType: !7, size: 32, offset: 192)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6229, file: !6076, line: 404, baseType: !340, size: 64, offset: 256)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6229, file: !6076, line: 405, baseType: !6240, size: 64, offset: 320)
!6240 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !282, line: 126, baseType: !336)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !6229, file: !6076, line: 406, baseType: !6240, size: 64, offset: 384)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !6163, file: !6076, line: 440, baseType: !6171, size: 64, offset: 640)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !815, file: !639, line: 1426, baseType: !6244, size: 64, offset: 576)
!6244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6245, size: 64)
!6245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6246)
!6246 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !639, line: 49, flags: DIFlagFwdDecl)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !815, file: !639, line: 1427, baseType: !317, size: 64, offset: 640)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !815, file: !639, line: 1428, baseType: !317, size: 64, offset: 704)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !815, file: !639, line: 1429, baseType: !317, size: 64, offset: 768)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !815, file: !639, line: 1430, baseType: !673, size: 64, offset: 832)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !815, file: !639, line: 1431, baseType: !1162, size: 256, offset: 896)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !815, file: !639, line: 1432, baseType: !37, size: 32, offset: 1152)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !815, file: !639, line: 1433, baseType: !388, size: 32, offset: 1184)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !815, file: !639, line: 1437, baseType: !6255, size: 64, offset: 1216)
!6255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6256, size: 64)
!6256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6257, size: 64)
!6257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6258)
!6258 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !639, line: 1437, flags: DIFlagFwdDecl)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !815, file: !639, line: 1449, baseType: !6260, size: 64, offset: 1280)
!6260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !690, line: 34, size: 64, elements: !6261)
!6261 = !{!6262}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6260, file: !690, line: 35, baseType: !693, size: 64)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !815, file: !639, line: 1450, baseType: !289, size: 128, offset: 1344)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !815, file: !639, line: 1451, baseType: !4662, size: 64, offset: 1472)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !815, file: !639, line: 1452, baseType: !4682, size: 64, offset: 1536)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !815, file: !639, line: 1453, baseType: !6267, size: 64, offset: 1600)
!6267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6268, size: 64)
!6268 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !639, line: 1453, flags: DIFlagFwdDecl)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !815, file: !639, line: 1454, baseType: !281, size: 128, offset: 1664)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !815, file: !639, line: 1455, baseType: !7, size: 32, offset: 1792)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !815, file: !639, line: 1456, baseType: !6272, size: 2432, offset: 1856)
!6272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !6076, line: 518, size: 2432, elements: !6273)
!6273 = !{!6274, !6275, !6276, !6278, !6310}
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6272, file: !6076, line: 519, baseType: !7, size: 32)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !6272, file: !6076, line: 520, baseType: !1162, size: 256, offset: 64)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6272, file: !6076, line: 521, baseType: !6277, size: 192, offset: 320)
!6277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !642, size: 192, elements: !867)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6272, file: !6076, line: 522, baseType: !6279, size: 1728, offset: 512)
!6279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6280, size: 1728, elements: !867)
!6280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !6076, line: 222, size: 576, elements: !6281)
!6281 = !{!6282, !6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309}
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !6280, file: !6076, line: 223, baseType: !6283, size: 64)
!6283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6284, size: 64)
!6284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !6076, line: 443, size: 256, elements: !6285)
!6285 = !{!6286, !6287, !6300, !6301}
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !6284, file: !6076, line: 444, baseType: !37, size: 32)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !6284, file: !6076, line: 445, baseType: !6288, size: 64, offset: 64)
!6288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6289, size: 64)
!6289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6290)
!6290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !6076, line: 310, size: 512, elements: !6291)
!6291 = !{!6292, !6293, !6294, !6295, !6296, !6297, !6298, !6299}
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !6290, file: !6076, line: 311, baseType: !917, size: 64)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !6290, file: !6076, line: 312, baseType: !917, size: 64, offset: 64)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !6290, file: !6076, line: 313, baseType: !917, size: 64, offset: 128)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !6290, file: !6076, line: 314, baseType: !917, size: 64, offset: 192)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !6290, file: !6076, line: 315, baseType: !6079, size: 64, offset: 256)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !6290, file: !6076, line: 316, baseType: !6079, size: 64, offset: 320)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !6290, file: !6076, line: 317, baseType: !6079, size: 64, offset: 384)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6290, file: !6076, line: 318, baseType: !6156, size: 64, offset: 448)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !6284, file: !6076, line: 446, baseType: !852, size: 64, offset: 128)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !6284, file: !6076, line: 447, baseType: !6283, size: 64, offset: 192)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !6280, file: !6076, line: 224, baseType: !37, size: 32, offset: 64)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !6280, file: !6076, line: 226, baseType: !289, size: 128, offset: 128)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !6280, file: !6076, line: 227, baseType: !317, size: 64, offset: 256)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !6280, file: !6076, line: 228, baseType: !7, size: 32, offset: 320)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !6280, file: !6076, line: 229, baseType: !7, size: 32, offset: 352)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !6280, file: !6076, line: 230, baseType: !6120, size: 64, offset: 384)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !6280, file: !6076, line: 231, baseType: !6120, size: 64, offset: 448)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !6280, file: !6076, line: 232, baseType: !570, size: 64, offset: 512)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6272, file: !6076, line: 523, baseType: !6311, size: 192, offset: 2240)
!6311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6288, size: 192, elements: !867)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !815, file: !639, line: 1458, baseType: !6313, size: 2112, offset: 4288)
!6313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !639, line: 1410, size: 2112, elements: !6314)
!6314 = !{!6315, !6316, !6317}
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6313, file: !639, line: 1411, baseType: !37, size: 32)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !6313, file: !639, line: 1412, baseType: !1100, size: 128, offset: 64)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !6313, file: !639, line: 1413, baseType: !6318, size: 1920, offset: 192)
!6318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6319, size: 1920, elements: !867)
!6319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !6320, line: 12, size: 640, elements: !6321)
!6320 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!6321 = !{!6322, !6330, !6332, !6337, !6338}
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !6319, file: !6320, line: 13, baseType: !6323, size: 320)
!6323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !6324, line: 17, size: 320, elements: !6325)
!6324 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!6325 = !{!6326, !6327, !6328, !6329}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !6323, file: !6324, line: 18, baseType: !37, size: 32)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !6323, file: !6324, line: 19, baseType: !37, size: 32, offset: 32)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !6323, file: !6324, line: 20, baseType: !1100, size: 128, offset: 64)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !6323, file: !6324, line: 22, baseType: !304, size: 128, align: 64, offset: 192)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !6319, file: !6320, line: 14, baseType: !6331, size: 64, offset: 320)
!6331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !6319, file: !6320, line: 15, baseType: !6333, size: 64, offset: 384)
!6333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !6334, line: 16, size: 64, elements: !6335)
!6334 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!6335 = !{!6336}
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !6333, file: !6334, line: 17, baseType: !1257, size: 64)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6319, file: !6320, line: 16, baseType: !1100, size: 128, offset: 448)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6319, file: !6320, line: 17, baseType: !388, size: 32, offset: 576)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !815, file: !639, line: 1465, baseType: !570, size: 64, offset: 6400)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !815, file: !639, line: 1468, baseType: !707, size: 32, offset: 6464)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !815, file: !639, line: 1470, baseType: !1642, size: 64, offset: 6528)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !815, file: !639, line: 1471, baseType: !1642, size: 64, offset: 6592)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !815, file: !639, line: 1473, baseType: !468, size: 32, offset: 6656)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !815, file: !639, line: 1474, baseType: !6345, size: 64, offset: 6720)
!6345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6346, size: 64)
!6346 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !639, line: 603, flags: DIFlagFwdDecl)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !815, file: !639, line: 1477, baseType: !3761, size: 256, offset: 6784)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !815, file: !639, line: 1478, baseType: !6349, size: 128, offset: 7040)
!6349 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !6350, line: 18, baseType: !6351)
!6350 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!6351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6350, line: 16, size: 128, elements: !6352)
!6352 = !{!6353}
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6351, file: !6350, line: 17, baseType: !2211, size: 128)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !815, file: !639, line: 1480, baseType: !7, size: 32, offset: 7168)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !815, file: !639, line: 1481, baseType: !4752, size: 32, offset: 7200)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !815, file: !639, line: 1487, baseType: !954, size: 192, offset: 7232)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !815, file: !639, line: 1493, baseType: !297, size: 64, offset: 7424)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !815, file: !639, line: 1495, baseType: !746, size: 64, offset: 7488)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !815, file: !639, line: 1500, baseType: !37, size: 32, offset: 7552)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !815, file: !639, line: 1502, baseType: !6361, size: 448, offset: 7616)
!6361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !6062, line: 60, size: 448, elements: !6362)
!6362 = !{!6363, !6368, !6369, !6370, !6371, !6372, !6373}
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6361, file: !6062, line: 61, baseType: !6364, size: 64)
!6364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6365, size: 64)
!6365 = !DISubroutineType(types: !6366)
!6366 = !{!317, !6367, !6060}
!6367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 64)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6361, file: !6062, line: 63, baseType: !6364, size: 64, offset: 64)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6361, file: !6062, line: 66, baseType: !513, size: 64, offset: 128)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6361, file: !6062, line: 67, baseType: !37, size: 32, offset: 192)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6361, file: !6062, line: 68, baseType: !7, size: 32, offset: 224)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6361, file: !6062, line: 71, baseType: !289, size: 128, offset: 256)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6361, file: !6062, line: 77, baseType: !6374, size: 64, offset: 384)
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !815, file: !639, line: 1505, baseType: !376, size: 64, offset: 8064)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !815, file: !639, line: 1508, baseType: !376, size: 64, offset: 8128)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !815, file: !639, line: 1511, baseType: !37, size: 32, offset: 8192)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !815, file: !639, line: 1514, baseType: !6045, size: 32, offset: 8224)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !815, file: !639, line: 1517, baseType: !2757, size: 64, offset: 8256)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !815, file: !639, line: 1518, baseType: !857, size: 64, offset: 8320)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !815, file: !639, line: 1525, baseType: !1759, size: 64, offset: 8384)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !815, file: !639, line: 1532, baseType: !6383, size: 64, offset: 8448)
!6383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6384, line: 52, size: 64, elements: !6385)
!6384 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6385 = !{!6386}
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6383, file: !6384, line: 53, baseType: !6387, size: 64)
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6388, size: 64)
!6388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6384, line: 40, size: 256, elements: !6389)
!6389 = !{!6390, !6391, !6396}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6388, file: !6384, line: 42, baseType: !729)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6388, file: !6384, line: 44, baseType: !6392, size: 192)
!6392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6384, line: 28, size: 192, elements: !6393)
!6393 = !{!6394, !6395}
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6392, file: !6384, line: 29, baseType: !289, size: 128)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6392, file: !6384, line: 31, baseType: !513, size: 64, offset: 128)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6388, file: !6384, line: 49, baseType: !513, size: 64, offset: 192)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !815, file: !639, line: 1533, baseType: !6383, size: 64, offset: 8512)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !815, file: !639, line: 1534, baseType: !304, size: 128, align: 64, offset: 8576)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !815, file: !639, line: 1535, baseType: !1807, size: 256, offset: 8704)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !815, file: !639, line: 1537, baseType: !954, size: 192, offset: 8960)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !815, file: !639, line: 1542, baseType: !37, size: 32, offset: 9152)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !815, file: !639, line: 1545, baseType: !729, offset: 9184)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !815, file: !639, line: 1546, baseType: !289, size: 128, offset: 9216)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !815, file: !639, line: 1548, baseType: !729, offset: 9344)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !815, file: !639, line: 1549, baseType: !289, size: 128, offset: 9344)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !674, file: !675, line: 104, baseType: !317, size: 64, offset: 896)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !674, file: !675, line: 105, baseType: !570, size: 64, offset: 960)
!6408 = !DIDerivedType(tag: DW_TAG_member, scope: !674, file: !675, line: 107, baseType: !6409, size: 128, offset: 1024)
!6409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !674, file: !675, line: 107, size: 128, elements: !6410)
!6410 = !{!6411, !6412}
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6409, file: !675, line: 108, baseType: !289, size: 128)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6409, file: !675, line: 109, baseType: !1099, size: 64)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !674, file: !675, line: 111, baseType: !289, size: 128, offset: 1152)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !674, file: !675, line: 112, baseType: !289, size: 128, offset: 1280)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !674, file: !675, line: 120, baseType: !6416, size: 128, offset: 1408)
!6416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !674, file: !675, line: 116, size: 128, elements: !6417)
!6417 = !{!6418, !6419, !6420}
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6416, file: !675, line: 117, baseType: !281, size: 128)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6416, file: !675, line: 118, baseType: !689, size: 128)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6416, file: !675, line: 119, baseType: !304, size: 128, align: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !667, file: !639, line: 1866, baseType: !6422, size: 64, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6423, size: 64)
!6423 = !DISubroutineType(types: !6424)
!6424 = !{!297, !673, !642, !6425}
!6425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6426, size: 64)
!6426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !6427, line: 10, size: 128, elements: !6428)
!6427 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!6428 = !{!6429, !6430}
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6426, file: !6427, line: 11, baseType: !3290, size: 64)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6426, file: !6427, line: 12, baseType: !570, size: 64, offset: 64)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !667, file: !639, line: 1867, baseType: !6432, size: 64, offset: 128)
!6432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6433, size: 64)
!6433 = !DISubroutineType(types: !6434)
!6434 = !{!37, !642, !37}
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !667, file: !639, line: 1868, baseType: !6436, size: 64, offset: 192)
!6436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6437, size: 64)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{!6439, !642, !37}
!6439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6440, size: 64)
!6440 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !639, line: 581, flags: DIFlagFwdDecl)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !667, file: !639, line: 1870, baseType: !6442, size: 64, offset: 256)
!6442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6443, size: 64)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{!37, !673, !577, !37}
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !667, file: !639, line: 1872, baseType: !6446, size: 64, offset: 320)
!6446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6447, size: 64)
!6447 = !DISubroutineType(types: !6448)
!6448 = !{!37, !642, !673, !646, !540}
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !667, file: !639, line: 1873, baseType: !6450, size: 64, offset: 384)
!6450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6451, size: 64)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!37, !673, !642, !673}
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !667, file: !639, line: 1874, baseType: !6454, size: 64, offset: 448)
!6454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6455, size: 64)
!6455 = !DISubroutineType(types: !6456)
!6456 = !{!37, !642, !673}
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !667, file: !639, line: 1875, baseType: !6458, size: 64, offset: 512)
!6458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6459, size: 64)
!6459 = !DISubroutineType(types: !6460)
!6460 = !{!37, !642, !673, !297}
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !667, file: !639, line: 1876, baseType: !6462, size: 64, offset: 576)
!6462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6463, size: 64)
!6463 = !DISubroutineType(types: !6464)
!6464 = !{!37, !642, !673, !646}
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !667, file: !639, line: 1877, baseType: !6454, size: 64, offset: 640)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !667, file: !639, line: 1878, baseType: !6467, size: 64, offset: 704)
!6467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6468, size: 64)
!6468 = !DISubroutineType(types: !6469)
!6469 = !{!37, !642, !673, !646, !819}
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !667, file: !639, line: 1879, baseType: !6471, size: 64, offset: 768)
!6471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6472, size: 64)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!37, !642, !673, !642, !673, !7}
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !667, file: !639, line: 1881, baseType: !6475, size: 64, offset: 832)
!6475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6476, size: 64)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{!37, !673, !6478}
!6478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6479, size: 64)
!6479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !639, line: 219, size: 640, elements: !6480)
!6480 = !{!6481, !6482, !6483, !6484, !6485, !6486, !6491, !6492, !6493}
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !6479, file: !639, line: 220, baseType: !7, size: 32)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !6479, file: !639, line: 221, baseType: !646, size: 16, offset: 32)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !6479, file: !639, line: 222, baseType: !649, size: 32, offset: 64)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !6479, file: !639, line: 223, baseType: !657, size: 32, offset: 96)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !6479, file: !639, line: 224, baseType: !824, size: 64, offset: 128)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !6479, file: !639, line: 225, baseType: !6487, size: 128, offset: 192)
!6487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1643, line: 13, size: 128, elements: !6488)
!6488 = !{!6489, !6490}
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6487, file: !1643, line: 14, baseType: !1642, size: 64)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6487, file: !1643, line: 15, baseType: !513, size: 64, offset: 64)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !6479, file: !639, line: 226, baseType: !6487, size: 128, offset: 320)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !6479, file: !639, line: 227, baseType: !6487, size: 128, offset: 448)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !6479, file: !639, line: 234, baseType: !1010, size: 64, offset: 576)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !667, file: !639, line: 1882, baseType: !6495, size: 64, offset: 896)
!6495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6496, size: 64)
!6496 = !DISubroutineType(types: !6497)
!6497 = !{!37, !805, !6498, !707, !7}
!6498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6499, size: 64)
!6499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !6500, line: 22, size: 1152, elements: !6501)
!6500 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!6501 = !{!6502, !6503, !6504, !6505, !6506, !6507, !6508, !6509, !6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517, !6518, !6519}
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !6499, file: !6500, line: 23, baseType: !707, size: 32)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6499, file: !6500, line: 24, baseType: !646, size: 16, offset: 32)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !6499, file: !6500, line: 25, baseType: !7, size: 32, offset: 64)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !6499, file: !6500, line: 26, baseType: !1650, size: 32, offset: 96)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !6499, file: !6500, line: 27, baseType: !336, size: 64, offset: 128)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !6499, file: !6500, line: 28, baseType: !336, size: 64, offset: 192)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6499, file: !6500, line: 37, baseType: !336, size: 64, offset: 256)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6499, file: !6500, line: 38, baseType: !819, size: 32, offset: 320)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !6499, file: !6500, line: 39, baseType: !819, size: 32, offset: 352)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6499, file: !6500, line: 40, baseType: !649, size: 32, offset: 384)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6499, file: !6500, line: 41, baseType: !657, size: 32, offset: 416)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6499, file: !6500, line: 42, baseType: !824, size: 64, offset: 448)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !6499, file: !6500, line: 43, baseType: !6487, size: 128, offset: 512)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !6499, file: !6500, line: 44, baseType: !6487, size: 128, offset: 640)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6499, file: !6500, line: 45, baseType: !6487, size: 128, offset: 768)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !6499, file: !6500, line: 46, baseType: !6487, size: 128, offset: 896)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6499, file: !6500, line: 47, baseType: !336, size: 64, offset: 1024)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !6499, file: !6500, line: 48, baseType: !336, size: 64, offset: 1088)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !667, file: !639, line: 1883, baseType: !6521, size: 64, offset: 960)
!6521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6522, size: 64)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{!1015, !673, !577, !594}
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !667, file: !639, line: 1884, baseType: !6525, size: 64, offset: 1024)
!6525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6526, size: 64)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{!37, !642, !6528, !336, !336}
!6528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6529, size: 64)
!6529 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !639, line: 50, flags: DIFlagFwdDecl)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !667, file: !639, line: 1886, baseType: !6531, size: 64, offset: 1088)
!6531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6532, size: 64)
!6532 = !DISubroutineType(types: !6533)
!6533 = !{!37, !642, !6534, !37}
!6534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6487, size: 64)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !667, file: !639, line: 1887, baseType: !6536, size: 64, offset: 1152)
!6536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6537, size: 64)
!6537 = !DISubroutineType(types: !6538)
!6538 = !{!37, !642, !673, !1010, !7, !646}
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !667, file: !639, line: 1890, baseType: !6462, size: 64, offset: 1216)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !667, file: !639, line: 1891, baseType: !6541, size: 64, offset: 1280)
!6541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6542, size: 64)
!6542 = !DISubroutineType(types: !6543)
!6543 = !{!37, !642, !6439, !37}
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !643, file: !639, line: 623, baseType: !814, size: 64, offset: 192)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !643, file: !639, line: 624, baseType: !637, size: 64, offset: 256)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !643, file: !639, line: 631, baseType: !317, size: 64, offset: 320)
!6547 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 639, baseType: !6548, size: 32, offset: 384)
!6548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 639, size: 32, elements: !6549)
!6549 = !{!6550, !6551}
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !6548, file: !639, line: 640, baseType: !5078, size: 32)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !6548, file: !639, line: 641, baseType: !7, size: 32)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !643, file: !639, line: 643, baseType: !819, size: 32, offset: 416)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !643, file: !639, line: 644, baseType: !824, size: 64, offset: 448)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !643, file: !639, line: 645, baseType: !6487, size: 128, offset: 512)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !643, file: !639, line: 646, baseType: !6487, size: 128, offset: 640)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !643, file: !639, line: 647, baseType: !6487, size: 128, offset: 768)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !643, file: !639, line: 648, baseType: !729, offset: 896)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !643, file: !639, line: 649, baseType: !477, size: 16, offset: 896)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !643, file: !639, line: 650, baseType: !1397, size: 8, offset: 912)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !643, file: !639, line: 651, baseType: !1397, size: 8, offset: 920)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !643, file: !639, line: 652, baseType: !6240, size: 64, offset: 960)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !643, file: !639, line: 659, baseType: !317, size: 64, offset: 1024)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !643, file: !639, line: 660, baseType: !1162, size: 256, offset: 1088)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !643, file: !639, line: 662, baseType: !317, size: 64, offset: 1344)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !643, file: !639, line: 663, baseType: !317, size: 64, offset: 1408)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !643, file: !639, line: 665, baseType: !281, size: 128, offset: 1472)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !643, file: !639, line: 666, baseType: !289, size: 128, offset: 1600)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !643, file: !639, line: 675, baseType: !289, size: 128, offset: 1728)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !643, file: !639, line: 676, baseType: !289, size: 128, offset: 1856)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !643, file: !639, line: 677, baseType: !289, size: 128, offset: 1984)
!6571 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 678, baseType: !6572, size: 128, offset: 2112)
!6572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 678, size: 128, elements: !6573)
!6573 = !{!6574, !6575}
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !6572, file: !639, line: 679, baseType: !857, size: 64)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !6572, file: !639, line: 680, baseType: !304, size: 128, align: 64)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !643, file: !639, line: 682, baseType: !378, size: 64, offset: 2240)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !643, file: !639, line: 683, baseType: !378, size: 64, offset: 2304)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !643, file: !639, line: 684, baseType: !388, size: 32, offset: 2368)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !643, file: !639, line: 685, baseType: !388, size: 32, offset: 2400)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !643, file: !639, line: 686, baseType: !388, size: 32, offset: 2432)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !643, file: !639, line: 688, baseType: !388, size: 32, offset: 2464)
!6582 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 690, baseType: !6583, size: 64, offset: 2496)
!6583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 690, size: 64, elements: !6584)
!6584 = !{!6585, !6586}
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !6583, file: !639, line: 691, baseType: !1001, size: 64)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !6583, file: !639, line: 692, baseType: !882, size: 64)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !643, file: !639, line: 694, baseType: !6588, size: 64, offset: 2560)
!6588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6589, size: 64)
!6589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !639, line: 1100, size: 384, elements: !6590)
!6590 = !{!6591, !6592, !6593, !6594}
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !6589, file: !639, line: 1101, baseType: !729)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !6589, file: !639, line: 1102, baseType: !289, size: 128)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !6589, file: !639, line: 1103, baseType: !289, size: 128, offset: 128)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !6589, file: !639, line: 1104, baseType: !289, size: 128, offset: 256)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !643, file: !639, line: 695, baseType: !638, size: 1216, align: 64, offset: 2624)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !643, file: !639, line: 696, baseType: !289, size: 128, offset: 3840)
!6597 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 697, baseType: !6598, size: 64, offset: 3968)
!6598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 697, size: 64, elements: !6599)
!6599 = !{!6600, !6601, !6602, !6605, !6606}
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !6598, file: !639, line: 698, baseType: !5544, size: 64)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !6598, file: !639, line: 699, baseType: !4662, size: 64)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !6598, file: !639, line: 700, baseType: !6603, size: 64)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64)
!6604 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !639, line: 700, flags: DIFlagFwdDecl)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !6598, file: !639, line: 701, baseType: !577, size: 64)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !6598, file: !639, line: 702, baseType: !7, size: 32)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !643, file: !639, line: 705, baseType: !468, size: 32, offset: 4032)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !643, file: !639, line: 708, baseType: !468, size: 32, offset: 4064)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !643, file: !639, line: 709, baseType: !6345, size: 64, offset: 4096)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !643, file: !639, line: 720, baseType: !570, size: 64, offset: 4160)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !638, file: !639, line: 453, baseType: !1985, size: 128, offset: 64)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !638, file: !639, line: 454, baseType: !1990, size: 32, offset: 192)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !638, file: !639, line: 455, baseType: !388, size: 32, offset: 224)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !638, file: !639, line: 460, baseType: !1387, size: 128, offset: 256)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !638, file: !639, line: 461, baseType: !1162, size: 256, offset: 384)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !638, file: !639, line: 462, baseType: !317, size: 64, offset: 640)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !638, file: !639, line: 463, baseType: !317, size: 64, offset: 704)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !638, file: !639, line: 464, baseType: !317, size: 64, offset: 768)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !638, file: !639, line: 465, baseType: !6620, size: 64, offset: 832)
!6620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6621, size: 64)
!6621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6622)
!6622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !639, line: 367, size: 1408, elements: !6623)
!6623 = !{!6624, !6628, !6632, !6636, !6640, !6644, !6656, !6660, !6664, !6668, !6672, !6676, !6680, !6681, !6685, !6691, !6692, !6693, !6697, !6702, !6706, !6713}
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !6622, file: !639, line: 368, baseType: !6625, size: 64)
!6625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6626, size: 64)
!6626 = !DISubroutineType(types: !6627)
!6627 = !{!37, !624, !894}
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !6622, file: !639, line: 369, baseType: !6629, size: 64, offset: 64)
!6629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6630, size: 64)
!6630 = !DISubroutineType(types: !6631)
!6631 = !{!37, !1010, !624}
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !6622, file: !639, line: 372, baseType: !6633, size: 64, offset: 128)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{!37, !637, !894}
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !6622, file: !639, line: 375, baseType: !6637, size: 64, offset: 192)
!6637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6638, size: 64)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{!37, !624}
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !6622, file: !639, line: 381, baseType: !6641, size: 64, offset: 256)
!6641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6642, size: 64)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{!37, !1010, !637, !292, !7}
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !6622, file: !639, line: 383, baseType: !6645, size: 64, offset: 320)
!6645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6646, size: 64)
!6646 = !DISubroutineType(types: !6647)
!6647 = !{null, !6648}
!6648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6649, size: 64)
!6649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1047, line: 795, size: 256, elements: !6650)
!6650 = !{!6651, !6652, !6653, !6654, !6655}
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6649, file: !1047, line: 796, baseType: !1010, size: 64)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !6649, file: !1047, line: 797, baseType: !637, size: 64, offset: 64)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !6649, file: !1047, line: 799, baseType: !317, size: 64, offset: 128)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !6649, file: !1047, line: 800, baseType: !7, size: 32, offset: 192)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !6649, file: !1047, line: 801, baseType: !7, size: 32, offset: 224)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !6622, file: !639, line: 385, baseType: !6657, size: 64, offset: 384)
!6657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6658, size: 64)
!6658 = !DISubroutineType(types: !6659)
!6659 = !{!37, !1010, !637, !824, !7, !7, !5624, !3480}
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !6622, file: !639, line: 388, baseType: !6661, size: 64, offset: 448)
!6661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6662, size: 64)
!6662 = !DISubroutineType(types: !6663)
!6663 = !{!37, !1010, !637, !824, !7, !7, !624, !570}
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !6622, file: !639, line: 393, baseType: !6665, size: 64, offset: 512)
!6665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6666, size: 64)
!6666 = !DISubroutineType(types: !6667)
!6667 = !{!3775, !637, !3775}
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !6622, file: !639, line: 394, baseType: !6669, size: 64, offset: 576)
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6670, size: 64)
!6670 = !DISubroutineType(types: !6671)
!6671 = !{null, !624, !7, !7}
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !6622, file: !639, line: 395, baseType: !6673, size: 64, offset: 640)
!6673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6674, size: 64)
!6674 = !DISubroutineType(types: !6675)
!6675 = !{!37, !624, !1990}
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !6622, file: !639, line: 396, baseType: !6677, size: 64, offset: 704)
!6677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6678, size: 64)
!6678 = !DISubroutineType(types: !6679)
!6679 = !{null, !624}
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !6622, file: !639, line: 397, baseType: !1023, size: 64, offset: 768)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !6622, file: !639, line: 402, baseType: !6682, size: 64, offset: 832)
!6682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6683, size: 64)
!6683 = !DISubroutineType(types: !6684)
!6684 = !{!37, !637, !624, !624, !11}
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !6622, file: !639, line: 404, baseType: !6686, size: 64, offset: 896)
!6686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6687, size: 64)
!6687 = !DISubroutineType(types: !6688)
!6688 = !{!540, !624, !6689}
!6689 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !6690, line: 305, baseType: !7)
!6690 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !6622, file: !639, line: 405, baseType: !6677, size: 64, offset: 960)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !6622, file: !639, line: 406, baseType: !6637, size: 64, offset: 1024)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !6622, file: !639, line: 407, baseType: !6694, size: 64, offset: 1088)
!6694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6695, size: 64)
!6695 = !DISubroutineType(types: !6696)
!6696 = !{!37, !624, !317, !317}
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !6622, file: !639, line: 409, baseType: !6698, size: 64, offset: 1152)
!6698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6699, size: 64)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{null, !624, !6701, !6701}
!6701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !6622, file: !639, line: 410, baseType: !6703, size: 64, offset: 1216)
!6703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6704, size: 64)
!6704 = !DISubroutineType(types: !6705)
!6705 = !{!37, !637, !624}
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !6622, file: !639, line: 413, baseType: !6707, size: 64, offset: 1280)
!6707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6708, size: 64)
!6708 = !DISubroutineType(types: !6709)
!6709 = !{!37, !6710, !1010, !6712}
!6710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6711, size: 64)
!6711 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !639, line: 61, flags: DIFlagFwdDecl)
!6712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !6622, file: !639, line: 415, baseType: !6714, size: 64, offset: 1344)
!6714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6715, size: 64)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{null, !1010}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !638, file: !639, line: 466, baseType: !317, size: 64, offset: 896)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !638, file: !639, line: 467, baseType: !6045, size: 32, offset: 960)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !638, file: !639, line: 468, baseType: !729, offset: 992)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !638, file: !639, line: 469, baseType: !289, size: 128, offset: 1024)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !638, file: !639, line: 470, baseType: !570, size: 64, offset: 1152)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !633, file: !626, line: 87, baseType: !317, size: 64, offset: 192)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !633, file: !626, line: 94, baseType: !317, size: 64, offset: 256)
!6724 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 96, baseType: !6725, size: 64)
!6725 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 96, size: 64, elements: !6726)
!6726 = !{!6727}
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !6725, file: !626, line: 101, baseType: !6728, size: 64)
!6728 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !282, line: 143, baseType: !336)
!6729 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 103, baseType: !6730, size: 320)
!6730 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 103, size: 320, elements: !6731)
!6731 = !{!6732, !6742, !6743, !6744}
!6732 = !DIDerivedType(tag: DW_TAG_member, scope: !6730, file: !626, line: 104, baseType: !6733, size: 128)
!6733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6730, file: !626, line: 104, size: 128, elements: !6734)
!6734 = !{!6735, !6736}
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !6733, file: !626, line: 105, baseType: !289, size: 128)
!6736 = !DIDerivedType(tag: DW_TAG_member, scope: !6733, file: !626, line: 106, baseType: !6737, size: 128)
!6737 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6733, file: !626, line: 106, size: 128, elements: !6738)
!6738 = !{!6739, !6740, !6741}
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6737, file: !626, line: 107, baseType: !624, size: 64)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6737, file: !626, line: 109, baseType: !37, size: 32, offset: 64)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !6737, file: !626, line: 110, baseType: !37, size: 32, offset: 96)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !6730, file: !626, line: 117, baseType: !2252, size: 64, offset: 128)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !6730, file: !626, line: 119, baseType: !570, size: 64, offset: 192)
!6744 = !DIDerivedType(tag: DW_TAG_member, scope: !6730, file: !626, line: 120, baseType: !6745, size: 64, offset: 256)
!6745 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6730, file: !626, line: 120, size: 64, elements: !6746)
!6746 = !{!6747, !6748, !6749}
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !6745, file: !626, line: 121, baseType: !570, size: 64)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !6745, file: !626, line: 122, baseType: !317, size: 64)
!6749 = !DIDerivedType(tag: DW_TAG_member, scope: !6745, file: !626, line: 123, baseType: !6750, size: 32)
!6750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6745, file: !626, line: 123, size: 32, elements: !6751)
!6751 = !{!6752, !6753, !6754}
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !6750, file: !626, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !6750, file: !626, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6750, file: !626, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!6755 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 130, baseType: !6756, size: 192)
!6756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 130, size: 192, elements: !6757)
!6757 = !{!6758, !6759, !6760, !6761, !6762}
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !6756, file: !626, line: 131, baseType: !317, size: 64)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !6756, file: !626, line: 134, baseType: !494, size: 8, offset: 64)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !6756, file: !626, line: 135, baseType: !494, size: 8, offset: 72)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !6756, file: !626, line: 136, baseType: !388, size: 32, offset: 96)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !6756, file: !626, line: 137, baseType: !7, size: 32, offset: 128)
!6763 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 139, baseType: !6764, size: 256)
!6764 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 139, size: 256, elements: !6765)
!6765 = !{!6766, !6767, !6768}
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !6764, file: !626, line: 140, baseType: !317, size: 64)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !6764, file: !626, line: 141, baseType: !388, size: 32, offset: 64)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !6764, file: !626, line: 143, baseType: !289, size: 128, offset: 128)
!6769 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 145, baseType: !6770, size: 256)
!6770 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 145, size: 256, elements: !6771)
!6771 = !{!6772, !6773, !6774, !6775, !6780}
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !6770, file: !626, line: 146, baseType: !317, size: 64)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !6770, file: !626, line: 147, baseType: !4099, size: 64, offset: 64)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !6770, file: !626, line: 148, baseType: !317, size: 64, offset: 128)
!6775 = !DIDerivedType(tag: DW_TAG_member, scope: !6770, file: !626, line: 149, baseType: !6776, size: 64, offset: 192)
!6776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6770, file: !626, line: 149, size: 64, elements: !6777)
!6777 = !{!6778, !6779}
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !6776, file: !626, line: 150, baseType: !1125, size: 64)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !6776, file: !626, line: 151, baseType: !388, size: 32)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !6770, file: !626, line: 156, baseType: !729, offset: 256)
!6781 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 159, baseType: !6782, size: 128)
!6782 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 159, size: 128, elements: !6783)
!6783 = !{!6784, !6835}
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !6782, file: !626, line: 161, baseType: !6785, size: 64)
!6785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6786, size: 64)
!6786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !6787, line: 110, size: 1152, elements: !6788)
!6787 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!6788 = !{!6789, !6799, !6800, !6801, !6802, !6809, !6810, !6822, !6823, !6824}
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !6786, file: !6787, line: 111, baseType: !6790, size: 384)
!6790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !6787, line: 19, size: 384, elements: !6791)
!6791 = !{!6792, !6794, !6795, !6796, !6797, !6798}
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !6790, file: !6787, line: 20, baseType: !6793, size: 64)
!6793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !6790, file: !6787, line: 21, baseType: !6793, size: 64, offset: 64)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !6790, file: !6787, line: 22, baseType: !6793, size: 64, offset: 128)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6790, file: !6787, line: 23, baseType: !317, size: 64, offset: 192)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !6790, file: !6787, line: 24, baseType: !317, size: 64, offset: 256)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !6790, file: !6787, line: 25, baseType: !317, size: 64, offset: 320)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !6786, file: !6787, line: 112, baseType: !3796, size: 64, offset: 384)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !6786, file: !6787, line: 113, baseType: !3782, size: 128, offset: 448)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !6786, file: !6787, line: 114, baseType: !1547, size: 192, offset: 576)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6786, file: !6787, line: 115, baseType: !6803, size: 32, offset: 768)
!6803 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !6787, line: 59, baseType: !7, size: 32, elements: !6804)
!6804 = !{!6805, !6806, !6807, !6808}
!6805 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!6806 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!6807 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!6808 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6786, file: !6787, line: 116, baseType: !7, size: 32, offset: 800)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6786, file: !6787, line: 117, baseType: !6811, size: 64, offset: 832)
!6811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6812, size: 64)
!6812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6813)
!6813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !6787, line: 67, size: 256, elements: !6814)
!6814 = !{!6815, !6816, !6820, !6821}
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !6813, file: !6787, line: 73, baseType: !6677, size: 64)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !6813, file: !6787, line: 78, baseType: !6817, size: 64, offset: 64)
!6817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6818, size: 64)
!6818 = !DISubroutineType(types: !6819)
!6819 = !{null, !6785}
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !6813, file: !6787, line: 83, baseType: !6817, size: 64, offset: 128)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !6813, file: !6787, line: 89, baseType: !4060, size: 64, offset: 192)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6786, file: !6787, line: 118, baseType: !570, size: 64, offset: 896)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !6786, file: !6787, line: 119, baseType: !37, size: 32, offset: 960)
!6824 = !DIDerivedType(tag: DW_TAG_member, scope: !6786, file: !6787, line: 120, baseType: !6825, size: 128, offset: 1024)
!6825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6786, file: !6787, line: 120, size: 128, elements: !6826)
!6826 = !{!6827, !6833}
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !6825, file: !6787, line: 121, baseType: !6828, size: 128)
!6828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !6829, line: 6, size: 128, elements: !6830)
!6829 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!6830 = !{!6831, !6832}
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6828, file: !6829, line: 7, baseType: !336, size: 64)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6828, file: !6829, line: 8, baseType: !336, size: 64, offset: 64)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !6825, file: !6787, line: 122, baseType: !6834)
!6834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6828, elements: !1922)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !6782, file: !626, line: 162, baseType: !570, size: 64, offset: 64)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !630, file: !626, line: 176, baseType: !304, size: 128, align: 64)
!6837 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !626, line: 179, baseType: !6838, size: 32, offset: 384)
!6838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !625, file: !626, line: 179, size: 32, elements: !6839)
!6839 = !{!6840, !6841, !6842, !6843}
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !6838, file: !626, line: 184, baseType: !388, size: 32)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !6838, file: !626, line: 192, baseType: !7, size: 32)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6838, file: !626, line: 194, baseType: !7, size: 32)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !6838, file: !626, line: 195, baseType: !37, size: 32)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !625, file: !626, line: 199, baseType: !388, size: 32, offset: 416)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !620, file: !621, line: 33, baseType: !7, size: 32, offset: 64)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !620, file: !621, line: 34, baseType: !7, size: 32, offset: 96)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !600, file: !590, line: 42, baseType: !5544, size: 64)
!6848 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !590, line: 44, baseType: !6849, size: 64, offset: 256)
!6849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !590, line: 44, size: 64, elements: !6850)
!6850 = !{!6851, !6852}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !6849, file: !590, line: 45, baseType: !317, size: 64)
!6852 = !DIDerivedType(tag: DW_TAG_member, scope: !6849, file: !590, line: 46, baseType: !6853, size: 64)
!6853 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6849, file: !590, line: 46, size: 64, elements: !6854)
!6854 = !{!6855, !6856}
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6853, file: !590, line: 47, baseType: !7, size: 32)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !6853, file: !590, line: 48, baseType: !7, size: 32, offset: 32)
!6857 = !DIDerivedType(tag: DW_TAG_member, scope: !584, file: !520, line: 60, baseType: !6858, size: 64, offset: 448)
!6858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !584, file: !520, line: 60, size: 64, elements: !6859)
!6859 = !{!6860, !6861}
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !6858, file: !520, line: 61, baseType: !570, size: 64)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !6858, file: !520, line: 62, baseType: !570, size: 64)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !584, file: !520, line: 64, baseType: !540, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !584, file: !520, line: 65, baseType: !595, size: 64, offset: 576)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !584, file: !520, line: 66, baseType: !7, size: 32, offset: 640)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !584, file: !520, line: 67, baseType: !1026, size: 64, offset: 704)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !507, file: !452, line: 1159, baseType: !6867, size: 64, offset: 832)
!6867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6868, size: 64)
!6868 = !DISubroutineType(types: !6869)
!6869 = !{!37, !450, !583, !594, !37, !37, !539}
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !507, file: !452, line: 1162, baseType: !6871, size: 64, offset: 896)
!6871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6872, size: 64)
!6872 = !DISubroutineType(types: !6873)
!6873 = !{!37, !450, !624, !37, !594, !37}
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !507, file: !452, line: 1164, baseType: !515, size: 64, offset: 960)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !507, file: !452, line: 1166, baseType: !515, size: 64, offset: 1024)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !507, file: !452, line: 1169, baseType: !6877, size: 64, offset: 1088)
!6877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6878, size: 64)
!6878 = !DISubroutineType(types: !6879)
!6879 = !{!37, !450, !420}
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !507, file: !452, line: 1172, baseType: !551, size: 64, offset: 1152)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !507, file: !452, line: 1175, baseType: !547, size: 64, offset: 1216)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !507, file: !452, line: 1176, baseType: !551, size: 64, offset: 1280)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !507, file: !452, line: 1177, baseType: !551, size: 64, offset: 1344)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !507, file: !452, line: 1178, baseType: !6885, size: 64, offset: 1408)
!6885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 64)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{!37, !450, !477}
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !507, file: !452, line: 1182, baseType: !7, size: 32, offset: 1472)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !507, file: !452, line: 1185, baseType: !6890, size: 64, offset: 1536)
!6890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6891, size: 64)
!6891 = !DISubroutineType(types: !6892)
!6892 = !{!540, !6893, !37}
!6893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6894, size: 64)
!6894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !507, file: !452, line: 1186, baseType: !6896, size: 64, offset: 1600)
!6896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6897, size: 64)
!6897 = !DISubroutineType(types: !6898)
!6898 = !{!540, !6893}
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !507, file: !452, line: 1188, baseType: !551, size: 64, offset: 1664)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !507, file: !452, line: 1189, baseType: !551, size: 64, offset: 1728)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !507, file: !452, line: 1190, baseType: !6374, size: 64, offset: 1792)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !507, file: !452, line: 1191, baseType: !6903, size: 64, offset: 1856)
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !507, file: !452, line: 1198, baseType: !2427, size: 64, offset: 1920)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !507, file: !452, line: 1199, baseType: !6906, size: 64, offset: 1984)
!6906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !507, file: !452, line: 1201, baseType: !539, size: 64, offset: 2048)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !507, file: !452, line: 1202, baseType: !539, size: 64, offset: 2112)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !507, file: !452, line: 1203, baseType: !707, size: 32, offset: 2176)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !507, file: !452, line: 1204, baseType: !707, size: 32, offset: 2208)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !507, file: !452, line: 1206, baseType: !37, size: 32, offset: 2240)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !507, file: !452, line: 1207, baseType: !540, size: 8, offset: 2272)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !507, file: !452, line: 1209, baseType: !2252, size: 64, offset: 2304)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !507, file: !452, line: 1210, baseType: !7, size: 32, offset: 2368)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !507, file: !452, line: 1211, baseType: !6916, size: 32, offset: 2400)
!6916 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !282, line: 149, baseType: !7)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !507, file: !452, line: 1212, baseType: !7, size: 32, offset: 2432)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !507, file: !452, line: 1213, baseType: !7, size: 32, offset: 2464)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !507, file: !452, line: 1215, baseType: !6903, size: 64, offset: 2496)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !507, file: !452, line: 1217, baseType: !6921, size: 64, offset: 2560)
!6921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6922, size: 64)
!6922 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !452, line: 1105, flags: DIFlagFwdDecl)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !507, file: !452, line: 1218, baseType: !6924, size: 64, offset: 2624)
!6924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6925, size: 64)
!6925 = !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !452, line: 1106, flags: DIFlagFwdDecl)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !507, file: !452, line: 1225, baseType: !6927, size: 64, offset: 2688)
!6927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !507, file: !452, line: 1220, size: 64, elements: !6928)
!6928 = !{!6929, !6930, !6933, !6936}
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !6927, file: !452, line: 1221, baseType: !2396, size: 64)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !6927, file: !452, line: 1222, baseType: !6931, size: 64)
!6931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6932, size: 64)
!6932 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !452, line: 1222, flags: DIFlagFwdDecl)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !6927, file: !452, line: 1223, baseType: !6934, size: 64)
!6934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6935, size: 64)
!6935 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !452, line: 1108, flags: DIFlagFwdDecl)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !6927, file: !452, line: 1224, baseType: !6937, size: 64)
!6937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6938, size: 64)
!6938 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !452, line: 1109, flags: DIFlagFwdDecl)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !507, file: !452, line: 1227, baseType: !852, size: 64, offset: 2752)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !507, file: !452, line: 1229, baseType: !3761, size: 256, offset: 2816)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !507, file: !452, line: 1231, baseType: !289, size: 128, offset: 3072)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !507, file: !452, line: 1235, baseType: !532, size: 64, offset: 3200)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !455, file: !452, line: 198, baseType: !2704, size: 64, offset: 384)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !455, file: !452, line: 201, baseType: !2204, size: 128, offset: 448)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !455, file: !452, line: 202, baseType: !2204, size: 128, offset: 576)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !455, file: !452, line: 205, baseType: !378, size: 64, offset: 704)
!6947 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 212, baseType: !6948, size: 64, offset: 768)
!6948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 212, size: 64, elements: !6949)
!6949 = !{!6950, !6951, !6952}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !6948, file: !452, line: 213, baseType: !317, size: 64)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !6948, file: !452, line: 214, baseType: !450, size: 64)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !6948, file: !452, line: 215, baseType: !6953, size: 64)
!6953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !455, file: !452, line: 222, baseType: !6955, offset: 832)
!6955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, elements: !1922)
!6956 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 224, baseType: !6957, size: 128, offset: 832)
!6957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 224, size: 128, elements: !6958)
!6958 = !{!6959, !6960}
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !6957, file: !452, line: 225, baseType: !281, size: 128)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !6957, file: !452, line: 226, baseType: !6961, size: 128)
!6961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !6962, line: 25, size: 128, elements: !6963)
!6962 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!6963 = !{!6964, !6966}
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6961, file: !6962, line: 26, baseType: !6965, size: 64)
!6965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6961, size: 64)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !6961, file: !6962, line: 26, baseType: !6967, size: 64, offset: 64)
!6967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6965, size: 64)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !455, file: !452, line: 228, baseType: !477, size: 16, offset: 960)
!6969 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 232, baseType: !6970, size: 32, offset: 992)
!6970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 232, size: 32, elements: !6971)
!6971 = !{!6972, !6973, !6974}
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !6970, file: !452, line: 233, baseType: !37, size: 32)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !6970, file: !452, line: 234, baseType: !707, size: 32)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !6970, file: !452, line: 235, baseType: !707, size: 32)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !455, file: !452, line: 238, baseType: !1271, size: 32, offset: 1024)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !455, file: !452, line: 240, baseType: !6955, offset: 1056)
!6977 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 241, baseType: !6978, size: 32, offset: 1056)
!6978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 241, size: 32, elements: !6979)
!6979 = !{!6980, !6981, !6982}
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !6978, file: !452, line: 242, baseType: !707, size: 32)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !6978, file: !452, line: 243, baseType: !707, size: 32)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !6978, file: !452, line: 244, baseType: !707, size: 32)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !451, file: !452, line: 387, baseType: !6984, size: 192, offset: 1088)
!6984 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !452, line: 108, baseType: !6985)
!6985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !452, line: 95, size: 192, elements: !6986)
!6986 = !{!6987, !6988, !6989}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !6985, file: !452, line: 96, baseType: !729)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !6985, file: !452, line: 97, baseType: !37, size: 32)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !6985, file: !452, line: 98, baseType: !1100, size: 128, offset: 64)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !451, file: !452, line: 388, baseType: !388, size: 32, offset: 1280)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !451, file: !452, line: 389, baseType: !37, size: 32, offset: 1312)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !451, file: !452, line: 390, baseType: !2762, size: 192, offset: 1344)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !451, file: !452, line: 391, baseType: !420, size: 64, offset: 1536)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !451, file: !452, line: 392, baseType: !2762, size: 192, offset: 1600)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !451, file: !452, line: 406, baseType: !6996, size: 192, offset: 1792)
!6996 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !451, file: !452, line: 401, size: 192, elements: !6997)
!6997 = !{!6998, !6999, !7000, !7001}
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !6996, file: !452, line: 402, baseType: !388, size: 32)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6996, file: !452, line: 403, baseType: !37, size: 32, offset: 32)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6996, file: !452, line: 404, baseType: !420, size: 64, offset: 64)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6996, file: !452, line: 405, baseType: !420, size: 64, offset: 128)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !451, file: !452, line: 409, baseType: !37, size: 32, offset: 1984)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !451, file: !452, line: 411, baseType: !7, size: 32, offset: 2016)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !451, file: !452, line: 413, baseType: !7, size: 32, offset: 2048)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !451, file: !452, line: 415, baseType: !37, size: 32, offset: 2080)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !451, file: !452, line: 417, baseType: !7007, size: 64, offset: 2112)
!7007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7008, size: 64)
!7008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !2911, line: 552, size: 256, elements: !7009)
!7009 = !{!7010, !7011, !7012}
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7008, file: !2911, line: 553, baseType: !1271, size: 32)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7008, file: !2911, line: 554, baseType: !304, size: 128, align: 64, offset: 64)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7008, file: !2911, line: 555, baseType: !2909, size: 64, offset: 192)
!7013 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !452, line: 418, baseType: !7014, size: 64, offset: 2176)
!7014 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !452, line: 418, size: 64, elements: !7015)
!7015 = !{!7016, !7025}
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !7014, file: !452, line: 419, baseType: !7017, size: 64)
!7017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7018, size: 64)
!7018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !7019, line: 98, size: 384, elements: !7020)
!7019 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7020 = !{!7021, !7022, !7023, !7024}
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7018, file: !7019, line: 100, baseType: !1100, size: 128)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !7018, file: !7019, line: 101, baseType: !5563, size: 64, offset: 128)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7018, file: !7019, line: 102, baseType: !317, size: 64, offset: 192)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7018, file: !7019, line: 103, baseType: !304, size: 128, align: 64, offset: 256)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !7014, file: !452, line: 421, baseType: !7017, size: 64)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !451, file: !452, line: 427, baseType: !2594, size: 64, offset: 2240)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !451, file: !452, line: 428, baseType: !2594, size: 64, offset: 2304)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !451, file: !452, line: 429, baseType: !388, size: 32, offset: 2368)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !451, file: !452, line: 430, baseType: !37, size: 32, offset: 2400)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !451, file: !452, line: 433, baseType: !37, size: 32, offset: 2432)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !451, file: !452, line: 434, baseType: !1271, size: 32, offset: 2464)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !451, file: !452, line: 435, baseType: !317, size: 64, offset: 2496)
!7033 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !452, line: 436, baseType: !7034, size: 64, offset: 2560)
!7034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !452, line: 436, size: 64, elements: !7035)
!7035 = !{!7036, !7037}
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !7034, file: !452, line: 437, baseType: !420, size: 64)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !7034, file: !452, line: 438, baseType: !1133, size: 64)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !451, file: !452, line: 440, baseType: !420, size: 64, offset: 2624)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !451, file: !452, line: 441, baseType: !2762, size: 192, offset: 2688)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !451, file: !452, line: 442, baseType: !1490, size: 32, offset: 2880)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !451, file: !452, line: 443, baseType: !37, size: 32, offset: 2912)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !451, file: !452, line: 444, baseType: !468, size: 32, offset: 2944)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !451, file: !452, line: 445, baseType: !707, size: 32, offset: 2976)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !451, file: !452, line: 446, baseType: !513, size: 64, offset: 3008)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !451, file: !452, line: 447, baseType: !2221, size: 320, offset: 3072)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !451, file: !452, line: 448, baseType: !468, size: 32, offset: 3392)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !451, file: !452, line: 449, baseType: !468, size: 32, offset: 3424)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !451, file: !452, line: 450, baseType: !317, size: 64, offset: 3456)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !451, file: !452, line: 451, baseType: !317, size: 64, offset: 3520)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !451, file: !452, line: 452, baseType: !5602, size: 128, offset: 3584)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !451, file: !452, line: 453, baseType: !334, size: 64, offset: 3712)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !451, file: !452, line: 454, baseType: !334, size: 64, offset: 3776)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !451, file: !452, line: 455, baseType: !334, size: 64, offset: 3840)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !451, file: !452, line: 456, baseType: !37, size: 32, offset: 3904)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !451, file: !452, line: 457, baseType: !7, size: 32, offset: 3936)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !451, file: !452, line: 458, baseType: !1990, size: 32, offset: 3968)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !451, file: !452, line: 459, baseType: !468, size: 32, offset: 4000)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !451, file: !452, line: 465, baseType: !1397, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !451, file: !452, line: 466, baseType: !1397, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !451, file: !452, line: 467, baseType: !1397, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !451, file: !452, line: 468, baseType: !1397, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !451, file: !452, line: 469, baseType: !1397, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !451, file: !452, line: 470, baseType: !1397, size: 8, offset: 4040)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !451, file: !452, line: 471, baseType: !1038, size: 16, offset: 4048)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !451, file: !452, line: 472, baseType: !1038, size: 16, offset: 4064)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !451, file: !452, line: 473, baseType: !1038, size: 16, offset: 4080)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !451, file: !452, line: 474, baseType: !317, size: 64, offset: 4096)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !451, file: !452, line: 475, baseType: !506, size: 64, offset: 4160)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !451, file: !452, line: 476, baseType: !2772, offset: 4224)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !451, file: !452, line: 477, baseType: !37, size: 32, offset: 4224)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !451, file: !452, line: 478, baseType: !37, size: 32, offset: 4256)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !451, file: !452, line: 479, baseType: !707, size: 32, offset: 4288)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !451, file: !452, line: 480, baseType: !707, size: 32, offset: 4320)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !451, file: !452, line: 481, baseType: !649, size: 32, offset: 4352)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !451, file: !452, line: 482, baseType: !1521, size: 64, offset: 4416)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !451, file: !452, line: 483, baseType: !1592, size: 64, offset: 4480)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !451, file: !452, line: 484, baseType: !513, size: 64, offset: 4544)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !451, file: !452, line: 485, baseType: !1341, size: 64, offset: 4608)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !451, file: !452, line: 489, baseType: !1038, size: 16, offset: 4672)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !451, file: !452, line: 490, baseType: !1397, size: 8, offset: 4688)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !451, file: !452, line: 491, baseType: !707, size: 32, offset: 4704)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !451, file: !452, line: 492, baseType: !388, size: 32, offset: 4736)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !451, file: !452, line: 494, baseType: !1397, size: 8, offset: 4768)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !451, file: !452, line: 495, baseType: !1397, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !451, file: !452, line: 496, baseType: !1397, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !451, file: !452, line: 497, baseType: !1397, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !451, file: !452, line: 499, baseType: !7088, size: 64, offset: 4800)
!7088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7089, size: 64)
!7089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !7019, line: 116, size: 704, elements: !7090)
!7090 = !{!7091, !7101, !7102, !7103, !7104, !7105, !7208}
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7089, file: !7019, line: 117, baseType: !7092, size: 32)
!7092 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !7093, line: 54, baseType: !7094)
!7093 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7094 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7093, line: 48, baseType: !7, size: 32, elements: !7095)
!7095 = !{!7096, !7097, !7098, !7099, !7100}
!7096 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!7097 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!7098 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!7099 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!7100 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7089, file: !7019, line: 119, baseType: !1246, size: 16, offset: 32)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7089, file: !7019, line: 121, baseType: !317, size: 64, offset: 64)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7089, file: !7019, line: 123, baseType: !1010, size: 64, offset: 128)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7089, file: !7019, line: 124, baseType: !450, size: 64, offset: 192)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7089, file: !7019, line: 125, baseType: !7106, size: 64, offset: 256)
!7106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7107, size: 64)
!7107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7108)
!7108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !7019, line: 139, size: 1728, elements: !7109)
!7109 = !{!7110, !7111, !7112, !7113, !7117, !7121, !7125, !7129, !7133, !7134, !7138, !7142, !7146, !7150, !7151, !7155, !7159, !7163, !7167, !7171, !7175, !7179, !7183, !7184, !7185, !7205, !7206, !7207}
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7108, file: !7019, line: 140, baseType: !37, size: 32)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7108, file: !7019, line: 141, baseType: !7, size: 32, offset: 32)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7108, file: !7019, line: 142, baseType: !852, size: 64, offset: 64)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7108, file: !7019, line: 143, baseType: !7114, size: 64, offset: 128)
!7114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7115, size: 64)
!7115 = !DISubroutineType(types: !7116)
!7116 = !{!37, !7088}
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7108, file: !7019, line: 144, baseType: !7118, size: 64, offset: 192)
!7118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7119, size: 64)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{!37, !7088, !518, !37}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7108, file: !7019, line: 147, baseType: !7122, size: 64, offset: 256)
!7122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7123, size: 64)
!7123 = !DISubroutineType(types: !7124)
!7124 = !{!37, !7088, !518, !37, !37}
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !7108, file: !7019, line: 150, baseType: !7126, size: 64, offset: 320)
!7126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7127, size: 64)
!7127 = !DISubroutineType(types: !7128)
!7128 = !{!37, !7088, !7088}
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !7108, file: !7019, line: 152, baseType: !7130, size: 64, offset: 384)
!7130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7131, size: 64)
!7131 = !DISubroutineType(types: !7132)
!7132 = !{!37, !7088, !7088, !37, !540}
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !7108, file: !7019, line: 154, baseType: !7118, size: 64, offset: 448)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7108, file: !7019, line: 157, baseType: !7135, size: 64, offset: 512)
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7136, size: 64)
!7136 = !DISubroutineType(types: !7137)
!7137 = !{!1089, !1010, !7088, !1090}
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7108, file: !7019, line: 159, baseType: !7139, size: 64, offset: 576)
!7139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7140, size: 64)
!7140 = !DISubroutineType(types: !7141)
!7141 = !{!37, !7088, !7, !317}
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !7108, file: !7019, line: 165, baseType: !7143, size: 64, offset: 640)
!7143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7144, size: 64)
!7144 = !DISubroutineType(types: !7145)
!7145 = !{!37, !7088, !570, !540, !540}
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !7108, file: !7019, line: 167, baseType: !7147, size: 64, offset: 704)
!7147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7148, size: 64)
!7148 = !DISubroutineType(types: !7149)
!7149 = !{!37, !7088, !37}
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7108, file: !7019, line: 168, baseType: !7147, size: 64, offset: 768)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !7108, file: !7019, line: 169, baseType: !7152, size: 64, offset: 832)
!7152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7153, size: 64)
!7153 = !DISubroutineType(types: !7154)
!7154 = !{!37, !7088, !37, !37, !562, !7}
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !7108, file: !7019, line: 172, baseType: !7156, size: 64, offset: 896)
!7156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7157, size: 64)
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!37, !7088, !37, !37, !577, !539}
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !7108, file: !7019, line: 174, baseType: !7160, size: 64, offset: 960)
!7160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7161, size: 64)
!7161 = !DISubroutineType(types: !7162)
!7162 = !{null, !942, !7088}
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !7108, file: !7019, line: 175, baseType: !7164, size: 64, offset: 1024)
!7164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7165, size: 64)
!7165 = !DISubroutineType(types: !7166)
!7166 = !{!37, !7088, !583, !594}
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !7108, file: !7019, line: 185, baseType: !7168, size: 64, offset: 1088)
!7168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7169, size: 64)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{!37, !7088, !583, !594, !37}
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !7108, file: !7019, line: 187, baseType: !7172, size: 64, offset: 1152)
!7172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7173, size: 64)
!7173 = !DISubroutineType(types: !7174)
!7174 = !{!37, !1010, !7088, !1115}
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !7108, file: !7019, line: 189, baseType: !7176, size: 64, offset: 1216)
!7176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7177, size: 64)
!7177 = !DISubroutineType(types: !7178)
!7178 = !{!1015, !7088, !624, !37, !594, !37}
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !7108, file: !7019, line: 191, baseType: !7180, size: 64, offset: 1280)
!7180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7181, size: 64)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{!1015, !7088, !969, !5544, !594, !7}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !7108, file: !7019, line: 193, baseType: !532, size: 64, offset: 1344)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !7108, file: !7019, line: 194, baseType: !7114, size: 64, offset: 1408)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !7108, file: !7019, line: 199, baseType: !7186, size: 64, offset: 1472)
!7186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7187, size: 64)
!7187 = !DISubroutineType(types: !7188)
!7188 = !{!37, !450, !7189, !7201}
!7189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7190, size: 64)
!7190 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !639, line: 362, baseType: !7191)
!7191 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 354, size: 256, elements: !7192)
!7192 = !{!7193, !7194, !7195, !7200}
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !7191, file: !639, line: 355, baseType: !594, size: 64)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7191, file: !639, line: 356, baseType: !594, size: 64, offset: 64)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7191, file: !639, line: 360, baseType: !7196, size: 64, offset: 128)
!7196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7191, file: !639, line: 357, size: 64, elements: !7197)
!7197 = !{!7198, !7199}
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7196, file: !639, line: 358, baseType: !577, size: 64)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7196, file: !639, line: 359, baseType: !570, size: 64)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7191, file: !639, line: 361, baseType: !37, size: 32, offset: 192)
!7201 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !7019, line: 136, baseType: !7202)
!7202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7203, size: 64)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{!37, !7189, !420, !7, !594}
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !7108, file: !7019, line: 201, baseType: !6871, size: 64, offset: 1536)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !7108, file: !7019, line: 203, baseType: !580, size: 64, offset: 1600)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !7108, file: !7019, line: 205, baseType: !532, size: 64, offset: 1664)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7089, file: !7019, line: 127, baseType: !7018, size: 384, offset: 320)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !451, file: !452, line: 500, baseType: !570, size: 64, offset: 4864)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !451, file: !452, line: 504, baseType: !7211, offset: 4928)
!7211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !7212, line: 871, elements: !743)
!7212 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !451, file: !452, line: 505, baseType: !6069, size: 64, offset: 4928)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !451, file: !452, line: 506, baseType: !551, size: 64, offset: 4992)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !451, file: !452, line: 507, baseType: !551, size: 64, offset: 5056)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !451, file: !452, line: 508, baseType: !551, size: 64, offset: 5120)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !451, file: !452, line: 509, baseType: !551, size: 64, offset: 5184)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !451, file: !452, line: 510, baseType: !6877, size: 64, offset: 5248)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !451, file: !452, line: 517, baseType: !551, size: 64, offset: 5312)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !451, file: !452, line: 518, baseType: !7221, size: 64, offset: 5376)
!7221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7222, size: 64)
!7222 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !2911, line: 38, flags: DIFlagFwdDecl)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !451, file: !452, line: 522, baseType: !304, size: 128, align: 64, offset: 5440)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !447, file: !422, line: 735, baseType: !37, size: 32)
!7225 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 738, baseType: !7226, size: 64, offset: 256)
!7226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 738, size: 64, elements: !7227)
!7227 = !{!7228, !7229}
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !7226, file: !422, line: 739, baseType: !1341, size: 64)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !7226, file: !422, line: 740, baseType: !336, size: 64)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !421, file: !422, line: 748, baseType: !7231, size: 384, align: 64, offset: 320)
!7231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 384, elements: !7232)
!7232 = !{!7233}
!7233 = !DISubrange(count: 48)
!7234 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 750, baseType: !7235, size: 128, offset: 704)
!7235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 750, size: 128, elements: !7236)
!7236 = !{!7237, !7242}
!7237 = !DIDerivedType(tag: DW_TAG_member, scope: !7235, file: !422, line: 751, baseType: !7238, size: 128)
!7238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7235, file: !422, line: 751, size: 128, elements: !7239)
!7239 = !{!7240, !7241}
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !7238, file: !422, line: 752, baseType: !317, size: 64)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7238, file: !422, line: 753, baseType: !2649, size: 64, offset: 64)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !7235, file: !422, line: 755, baseType: !289, size: 128)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !421, file: !422, line: 761, baseType: !7, size: 32, offset: 832)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !421, file: !422, line: 762, baseType: !7, size: 32, offset: 864)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !421, file: !422, line: 763, baseType: !476, size: 16, offset: 896)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !421, file: !422, line: 764, baseType: !476, size: 16, offset: 912)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !421, file: !422, line: 769, baseType: !476, size: 16, offset: 928)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !421, file: !422, line: 780, baseType: !7249, offset: 944)
!7249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, elements: !1922)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !421, file: !422, line: 782, baseType: !1398, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !421, file: !422, line: 783, baseType: !1398, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !421, file: !422, line: 784, baseType: !1398, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !421, file: !422, line: 785, baseType: !1398, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !421, file: !422, line: 786, baseType: !1398, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !421, file: !422, line: 787, baseType: !1398, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !421, file: !422, line: 795, baseType: !7257, offset: 960)
!7257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, elements: !1922)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !421, file: !422, line: 807, baseType: !7249, offset: 960)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !421, file: !422, line: 809, baseType: !1398, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !421, file: !422, line: 810, baseType: !1398, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !421, file: !422, line: 811, baseType: !1398, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !421, file: !422, line: 812, baseType: !1398, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !421, file: !422, line: 813, baseType: !1398, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !421, file: !422, line: 815, baseType: !1398, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !421, file: !422, line: 816, baseType: !1398, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !421, file: !422, line: 817, baseType: !1398, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !421, file: !422, line: 818, baseType: !1398, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !421, file: !422, line: 819, baseType: !1398, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !421, file: !422, line: 821, baseType: !1398, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !421, file: !422, line: 822, baseType: !1398, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !421, file: !422, line: 823, baseType: !1398, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !421, file: !422, line: 832, baseType: !7249, offset: 976)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !421, file: !422, line: 834, baseType: !1398, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !421, file: !422, line: 835, baseType: !1398, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !421, file: !422, line: 836, baseType: !1398, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !421, file: !422, line: 837, baseType: !1398, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !421, file: !422, line: 838, baseType: !1398, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !421, file: !422, line: 840, baseType: !1398, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !421, file: !422, line: 843, baseType: !1398, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !421, file: !422, line: 844, baseType: !1398, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !421, file: !422, line: 845, baseType: !1398, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !421, file: !422, line: 847, baseType: !1398, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !421, file: !422, line: 848, baseType: !1398, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!7284 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 866, baseType: !7285, size: 32, offset: 992)
!7285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 866, size: 32, elements: !7286)
!7286 = !{!7287, !7289}
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !7285, file: !422, line: 867, baseType: !7288, size: 32)
!7288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !467, line: 37, baseType: !468)
!7289 = !DIDerivedType(tag: DW_TAG_member, scope: !7285, file: !422, line: 868, baseType: !7290, size: 32)
!7290 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7285, file: !422, line: 868, size: 32, elements: !7291)
!7291 = !{!7292, !7293}
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !7290, file: !422, line: 869, baseType: !476, size: 16)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !7290, file: !422, line: 870, baseType: !476, size: 16, offset: 16)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !421, file: !422, line: 873, baseType: !468, size: 32, offset: 1024)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !421, file: !422, line: 874, baseType: !37, size: 32, offset: 1056)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !421, file: !422, line: 875, baseType: !468, size: 32, offset: 1088)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !421, file: !422, line: 876, baseType: !489, size: 16, offset: 1120)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !421, file: !422, line: 877, baseType: !476, size: 16, offset: 1136)
!7299 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 879, baseType: !7300, size: 32, offset: 1152)
!7300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 879, size: 32, elements: !7301)
!7301 = !{!7302, !7303}
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7300, file: !422, line: 880, baseType: !7, size: 32)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !7300, file: !422, line: 881, baseType: !7, size: 32)
!7304 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 888, baseType: !7305, size: 32, offset: 1184)
!7305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 888, size: 32, elements: !7306)
!7306 = !{!7307, !7308}
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !7305, file: !422, line: 889, baseType: !468, size: 32)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !7305, file: !422, line: 890, baseType: !468, size: 32)
!7309 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 893, baseType: !7310, size: 16, offset: 1216)
!7310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 893, size: 16, elements: !7311)
!7311 = !{!7312, !7313}
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !7310, file: !422, line: 894, baseType: !489, size: 16)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !7310, file: !422, line: 895, baseType: !1398, size: 8)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !421, file: !422, line: 898, baseType: !476, size: 16, offset: 1232)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !421, file: !422, line: 899, baseType: !476, size: 16, offset: 1248)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !421, file: !422, line: 900, baseType: !476, size: 16, offset: 1264)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !421, file: !422, line: 902, baseType: !489, size: 16, offset: 1280)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !421, file: !422, line: 903, baseType: !476, size: 16, offset: 1296)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !421, file: !422, line: 904, baseType: !476, size: 16, offset: 1312)
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !421, file: !422, line: 905, baseType: !476, size: 16, offset: 1328)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !421, file: !422, line: 908, baseType: !7257, offset: 1344)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !421, file: !422, line: 912, baseType: !7323, size: 32, offset: 1344)
!7323 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !422, line: 606, baseType: !7)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !421, file: !422, line: 913, baseType: !7323, size: 32, offset: 1376)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !421, file: !422, line: 914, baseType: !7326, size: 64, offset: 1408)
!7326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !421, file: !422, line: 915, baseType: !7326, size: 64, offset: 1472)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !421, file: !422, line: 916, baseType: !7, size: 32, offset: 1536)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !421, file: !422, line: 917, baseType: !1271, size: 32, offset: 1568)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !403, file: !36, line: 1290, baseType: !7331, size: 64, offset: 320)
!7331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7332, size: 64)
!7332 = !DISubroutineType(types: !7333)
!7333 = !{!334, !420, !295, !334}
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !403, file: !36, line: 1293, baseType: !7335, size: 64, offset: 384)
!7335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7336, size: 64)
!7336 = !DISubroutineType(types: !7337)
!7337 = !{!1038, !295, !420, !295}
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !403, file: !36, line: 1296, baseType: !7339, size: 64, offset: 448)
!7339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7340, size: 64)
!7340 = !DISubroutineType(types: !7341)
!7341 = !{null, !295, !37}
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !403, file: !36, line: 1298, baseType: !410, size: 64, offset: 512)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !403, file: !36, line: 1299, baseType: !7344, size: 64, offset: 576)
!7344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7345, size: 64)
!7345 = !DISubroutineType(types: !7346)
!7346 = !{!37, !295, !570}
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !403, file: !36, line: 1301, baseType: !406, size: 64, offset: 640)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !403, file: !36, line: 1302, baseType: !7349, size: 64, offset: 704)
!7349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7350, size: 64)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{!37, !295, !7352, !37}
!7352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7353, size: 64)
!7353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !7354, line: 234, size: 320, elements: !7355)
!7354 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!7355 = !{!7356, !7360}
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !7353, file: !7354, line: 239, baseType: !7357, size: 128)
!7357 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7353, file: !7354, line: 236, size: 128, elements: !7358)
!7358 = !{!7359}
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !7357, file: !7354, line: 238, baseType: !272, size: 128)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !7353, file: !7354, line: 255, baseType: !7361, size: 192, offset: 128)
!7361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7353, file: !7354, line: 241, size: 192, elements: !7362)
!7362 = !{!7363, !7364, !7365, !7366, !7367, !7368, !7369, !7370, !7371, !7380, !7381, !7382, !7383}
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !7361, file: !7354, line: 242, baseType: !519, size: 128)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !7361, file: !7354, line: 243, baseType: !519, size: 128)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !7361, file: !7354, line: 244, baseType: !519, size: 128)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !7361, file: !7354, line: 245, baseType: !519, size: 128)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !7361, file: !7354, line: 246, baseType: !519, size: 128)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !7361, file: !7354, line: 247, baseType: !1246, size: 16)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !7361, file: !7354, line: 248, baseType: !37, size: 32)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !7361, file: !7354, line: 249, baseType: !37, size: 32)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !7361, file: !7354, line: 250, baseType: !7372, size: 192)
!7372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !7354, line: 196, size: 192, elements: !7373)
!7373 = !{!7374, !7375, !7376, !7377, !7378, !7379}
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !7372, file: !7354, line: 197, baseType: !317, size: 64)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !7372, file: !7354, line: 198, baseType: !317, size: 64, offset: 64)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !7372, file: !7354, line: 199, baseType: !477, size: 16, offset: 128)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7372, file: !7354, line: 200, baseType: !494, size: 8, offset: 144)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7372, file: !7354, line: 201, baseType: !494, size: 8, offset: 152)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7372, file: !7354, line: 202, baseType: !494, size: 8, offset: 160)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !7361, file: !7354, line: 251, baseType: !272, size: 128)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !7361, file: !7354, line: 252, baseType: !272, size: 128)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !7361, file: !7354, line: 253, baseType: !570, size: 64)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !7361, file: !7354, line: 254, baseType: !7384, size: 128)
!7384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !7354, line: 207, size: 128, elements: !7385)
!7385 = !{!7386, !7387, !7388}
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7384, file: !7354, line: 208, baseType: !7, size: 32)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7384, file: !7354, line: 209, baseType: !7, size: 32, offset: 32)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !7384, file: !7354, line: 222, baseType: !7389, size: 64, offset: 64)
!7389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7384, file: !7354, line: 210, size: 64, elements: !7390)
!7390 = !{!7391, !7399, !7406, !7418, !7424, !7431, !7442, !7450}
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !7389, file: !7354, line: 212, baseType: !7392, size: 64)
!7392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7393, size: 64)
!7393 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !7394, line: 56, baseType: !7395)
!7394 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!7395 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7394, line: 53, size: 32, elements: !7396)
!7396 = !{!7397, !7398}
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7395, file: !7394, line: 54, baseType: !477, size: 16)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7395, file: !7394, line: 55, baseType: !477, size: 16, offset: 16)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !7389, file: !7354, line: 213, baseType: !7400, size: 64)
!7400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7401, size: 64)
!7401 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !7394, line: 80, baseType: !7402)
!7402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7394, line: 77, size: 64, elements: !7403)
!7403 = !{!7404, !7405}
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !7402, file: !7394, line: 78, baseType: !7, size: 32)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7402, file: !7394, line: 79, baseType: !7, size: 32, offset: 32)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !7389, file: !7354, line: 214, baseType: !7407, size: 64)
!7407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7408, size: 64)
!7408 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !7394, line: 66, baseType: !7409)
!7409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7394, line: 58, size: 192, elements: !7410)
!7410 = !{!7411, !7412, !7413, !7414, !7415, !7416, !7417}
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !7409, file: !7394, line: 59, baseType: !7, size: 32)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !7409, file: !7394, line: 60, baseType: !7, size: 32, offset: 32)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !7409, file: !7394, line: 61, baseType: !7, size: 32, offset: 64)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !7409, file: !7394, line: 62, baseType: !7, size: 32, offset: 96)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !7409, file: !7394, line: 63, baseType: !7, size: 32, offset: 128)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !7409, file: !7394, line: 64, baseType: !477, size: 16, offset: 160)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7409, file: !7394, line: 65, baseType: !477, size: 16, offset: 176)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !7389, file: !7354, line: 215, baseType: !7419, size: 64)
!7419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7420, size: 64)
!7420 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !7394, line: 70, baseType: !7421)
!7421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7394, line: 68, size: 32, elements: !7422)
!7422 = !{!7423}
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7421, file: !7394, line: 69, baseType: !7, size: 32)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !7389, file: !7354, line: 216, baseType: !7425, size: 64)
!7425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7426, size: 64)
!7426 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !7394, line: 75, baseType: !7427)
!7427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7394, line: 72, size: 160, elements: !7428)
!7428 = !{!7429, !7430}
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7427, file: !7394, line: 73, baseType: !7, size: 32)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !7427, file: !7394, line: 74, baseType: !272, size: 128, offset: 32)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !7389, file: !7354, line: 217, baseType: !7432, size: 64)
!7432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7433, size: 64)
!7433 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !7394, line: 89, baseType: !7434)
!7434 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7394, line: 82, size: 192, elements: !7435)
!7435 = !{!7436, !7437, !7438, !7439, !7440, !7441}
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7434, file: !7394, line: 83, baseType: !477, size: 16)
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !7434, file: !7394, line: 84, baseType: !7, size: 32, offset: 32)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !7434, file: !7394, line: 85, baseType: !7, size: 32, offset: 64)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !7434, file: !7394, line: 86, baseType: !7, size: 32, offset: 96)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !7434, file: !7394, line: 87, baseType: !7, size: 32, offset: 128)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !7434, file: !7394, line: 88, baseType: !7, size: 32, offset: 160)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !7389, file: !7354, line: 220, baseType: !7443, size: 64)
!7443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7444, size: 64)
!7444 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !7394, line: 44, baseType: !7445)
!7445 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7394, line: 40, size: 96, elements: !7446)
!7446 = !{!7447, !7448, !7449}
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7445, file: !7394, line: 41, baseType: !7, size: 32)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7445, file: !7394, line: 42, baseType: !7, size: 32, offset: 32)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7445, file: !7394, line: 43, baseType: !477, size: 16, offset: 64)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !7389, file: !7354, line: 221, baseType: !7451, size: 64)
!7451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7452, size: 64)
!7452 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !7394, line: 51, baseType: !7453)
!7453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7394, line: 46, size: 128, elements: !7454)
!7454 = !{!7455, !7456, !7457, !7458}
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7453, file: !7394, line: 47, baseType: !7, size: 32)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7453, file: !7394, line: 48, baseType: !7, size: 32, offset: 32)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7453, file: !7394, line: 49, baseType: !477, size: 16, offset: 64)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !7453, file: !7394, line: 50, baseType: !7, size: 32, offset: 96)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !403, file: !36, line: 1304, baseType: !7460, size: 64, offset: 768)
!7460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7461, size: 64)
!7461 = !DISubroutineType(types: !7462)
!7462 = !{!37, !295, !7463}
!7463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7372, size: 64)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !403, file: !36, line: 1306, baseType: !7465, size: 64, offset: 832)
!7465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7466, size: 64)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{!37, !295, !37}
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !403, file: !36, line: 1308, baseType: !7469, size: 64, offset: 896)
!7469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7470, size: 64)
!7470 = !DISubroutineType(types: !7471)
!7471 = !{!37, !295, !2809}
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !403, file: !36, line: 1310, baseType: !7473, size: 64, offset: 960)
!7473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7474, size: 64)
!7474 = !DISubroutineType(types: !7475)
!7475 = !{null, !295, !7}
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !403, file: !36, line: 1313, baseType: !7477, size: 64, offset: 1024)
!7477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7478, size: 64)
!7478 = !DISubroutineType(types: !7479)
!7479 = !{null, !295, !7480}
!7480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7481, size: 64)
!7481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !7482, line: 214, size: 1536, elements: !7483)
!7482 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7483 = !{!7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504, !7505, !7506, !7507}
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7481, file: !7482, line: 215, baseType: !338, size: 64)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7481, file: !7482, line: 216, baseType: !338, size: 64, offset: 64)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7481, file: !7482, line: 217, baseType: !338, size: 64, offset: 128)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7481, file: !7482, line: 218, baseType: !338, size: 64, offset: 192)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !7481, file: !7482, line: 219, baseType: !338, size: 64, offset: 256)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !7481, file: !7482, line: 220, baseType: !338, size: 64, offset: 320)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7481, file: !7482, line: 221, baseType: !338, size: 64, offset: 384)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7481, file: !7482, line: 222, baseType: !338, size: 64, offset: 448)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7481, file: !7482, line: 223, baseType: !338, size: 64, offset: 512)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !7481, file: !7482, line: 224, baseType: !338, size: 64, offset: 576)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !7481, file: !7482, line: 227, baseType: !338, size: 64, offset: 640)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !7481, file: !7482, line: 228, baseType: !338, size: 64, offset: 704)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !7481, file: !7482, line: 229, baseType: !338, size: 64, offset: 768)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !7481, file: !7482, line: 230, baseType: !338, size: 64, offset: 832)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !7481, file: !7482, line: 231, baseType: !338, size: 64, offset: 896)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !7481, file: !7482, line: 232, baseType: !338, size: 64, offset: 960)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !7481, file: !7482, line: 235, baseType: !338, size: 64, offset: 1024)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !7481, file: !7482, line: 236, baseType: !338, size: 64, offset: 1088)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !7481, file: !7482, line: 237, baseType: !338, size: 64, offset: 1152)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !7481, file: !7482, line: 238, baseType: !338, size: 64, offset: 1216)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !7481, file: !7482, line: 239, baseType: !338, size: 64, offset: 1280)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !7481, file: !7482, line: 242, baseType: !338, size: 64, offset: 1344)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !7481, file: !7482, line: 243, baseType: !338, size: 64, offset: 1408)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !7481, file: !7482, line: 244, baseType: !338, size: 64, offset: 1472)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !403, file: !36, line: 1315, baseType: !7509, size: 64, offset: 1088)
!7509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7510, size: 64)
!7510 = !DISubroutineType(types: !7511)
!7511 = !{!540, !2682, !37}
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !403, file: !36, line: 1316, baseType: !7513, size: 64, offset: 1152)
!7513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7514, size: 64)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{!37, !37, !2682, !570}
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !403, file: !36, line: 1319, baseType: !7517, size: 64, offset: 1216)
!7517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7518, size: 64)
!7518 = !DISubroutineType(types: !7519)
!7519 = !{!7520, !295}
!7520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !403, file: !36, line: 1321, baseType: !7522, size: 64, offset: 1280)
!7522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7523, size: 64)
!7523 = !DISubroutineType(types: !7524)
!7524 = !{!37, !295, !489, !1038}
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !403, file: !36, line: 1323, baseType: !7522, size: 64, offset: 1344)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !403, file: !36, line: 1331, baseType: !7527, size: 64, offset: 1408)
!7527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7528, size: 64)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{!37, !295, !37, !7530}
!7530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !403, file: !36, line: 1333, baseType: !7532, size: 64, offset: 1472)
!7532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7533, size: 64)
!7533 = !DISubroutineType(types: !7534)
!7534 = !{!37, !295, !37, !1038, !1397, !489}
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !403, file: !36, line: 1336, baseType: !7536, size: 64, offset: 1536)
!7536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7537, size: 64)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{!37, !295, !37, !37, !37}
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !403, file: !36, line: 1339, baseType: !7540, size: 64, offset: 1600)
!7540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7541, size: 64)
!7541 = !DISubroutineType(types: !7542)
!7542 = !{!37, !295, !37, !540}
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !403, file: !36, line: 1341, baseType: !7540, size: 64, offset: 1664)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !403, file: !36, line: 1343, baseType: !7545, size: 64, offset: 1728)
!7545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7546, size: 64)
!7546 = !DISubroutineType(types: !7547)
!7547 = !{!37, !295, !37, !7548}
!7548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7549, size: 64)
!7549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !7550, line: 20, size: 576, elements: !7551)
!7550 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7551 = !{!7552, !7553, !7555, !7556, !7557, !7558, !7559, !7560, !7561, !7562, !7563}
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7549, file: !7550, line: 21, baseType: !468, size: 32)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !7549, file: !7550, line: 22, baseType: !7554, size: 256, offset: 32)
!7554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 256, elements: !716)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !7549, file: !7550, line: 23, baseType: !468, size: 32, offset: 288)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !7549, file: !7550, line: 24, baseType: !468, size: 32, offset: 320)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !7549, file: !7550, line: 25, baseType: !468, size: 32, offset: 352)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !7549, file: !7550, line: 26, baseType: !468, size: 32, offset: 384)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !7549, file: !7550, line: 27, baseType: !468, size: 32, offset: 416)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !7549, file: !7550, line: 28, baseType: !468, size: 32, offset: 448)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !7549, file: !7550, line: 29, baseType: !468, size: 32, offset: 480)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !7549, file: !7550, line: 30, baseType: !468, size: 32, offset: 512)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !7549, file: !7550, line: 31, baseType: !489, size: 16, offset: 544)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !403, file: !36, line: 1346, baseType: !7565, size: 64, offset: 1792)
!7565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7566, size: 64)
!7566 = !DISubroutineType(types: !7567)
!7567 = !{!37, !295, !37, !37}
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !403, file: !36, line: 1348, baseType: !7569, size: 64, offset: 1856)
!7569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7570, size: 64)
!7570 = !DISubroutineType(types: !7571)
!7571 = !{!37, !295, !37, !7572}
!7572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7573, size: 64)
!7573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !7550, line: 9, size: 512, elements: !7574)
!7574 = !{!7575, !7576, !7577, !7578, !7579, !7580, !7581, !7582}
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7573, file: !7550, line: 10, baseType: !338, size: 64)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7573, file: !7550, line: 11, baseType: !338, size: 64, offset: 64)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7573, file: !7550, line: 12, baseType: !338, size: 64, offset: 128)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7573, file: !7550, line: 13, baseType: !338, size: 64, offset: 192)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !7573, file: !7550, line: 14, baseType: !338, size: 64, offset: 256)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7573, file: !7550, line: 15, baseType: !338, size: 64, offset: 320)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7573, file: !7550, line: 16, baseType: !338, size: 64, offset: 384)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7573, file: !7550, line: 17, baseType: !338, size: 64, offset: 448)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !403, file: !36, line: 1352, baseType: !7584, size: 64, offset: 1920)
!7584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7585, size: 64)
!7585 = !DISubroutineType(types: !7586)
!7586 = !{!37, !295, !37, !7587}
!7587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7588, size: 64)
!7588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !403, file: !36, line: 1355, baseType: !7590, size: 64, offset: 1984)
!7590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7591, size: 64)
!7591 = !DISubroutineType(types: !7592)
!7592 = !{!37, !295, !37, !420}
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !403, file: !36, line: 1357, baseType: !7594, size: 64, offset: 2048)
!7594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7595, size: 64)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!37, !295, !37, !7597, !7597}
!7597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7598, size: 64)
!7598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !7482, line: 956, size: 128, elements: !7599)
!7599 = !{!7600, !7601}
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7598, file: !7482, line: 957, baseType: !468, size: 32)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !7598, file: !7482, line: 958, baseType: !338, size: 64, offset: 64)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !403, file: !36, line: 1361, baseType: !7603, size: 64, offset: 2112)
!7603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7604, size: 64)
!7604 = !DISubroutineType(types: !7605)
!7605 = !{!37, !295, !37, !336, !37}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !403, file: !36, line: 1364, baseType: !7540, size: 64, offset: 2176)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !403, file: !36, line: 1367, baseType: !7608, size: 64, offset: 2240)
!7608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7609, size: 64)
!7609 = !DISubroutineType(types: !7610)
!7610 = !{!37, !295, !42, !570}
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !403, file: !36, line: 1400, baseType: !7612, size: 64, offset: 2304)
!7612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7613, size: 64)
!7613 = !DISubroutineType(types: !7614)
!7614 = !{!37, !295, !295, !2444}
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !403, file: !36, line: 1403, baseType: !7616, size: 64, offset: 2368)
!7616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7617, size: 64)
!7617 = !DISubroutineType(types: !7618)
!7618 = !{!37, !295, !295}
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !403, file: !36, line: 1405, baseType: !7620, size: 64, offset: 2432)
!7620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7621, size: 64)
!7621 = !DISubroutineType(types: !7622)
!7622 = !{!295, !295, !420, !540}
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !403, file: !36, line: 1408, baseType: !7624, size: 64, offset: 2496)
!7624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7625, size: 64)
!7625 = !DISubroutineType(types: !7626)
!7626 = !{!334, !295, !334}
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !403, file: !36, line: 1410, baseType: !7628, size: 64, offset: 2560)
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7629, size: 64)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{!37, !295, !334}
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !403, file: !36, line: 1412, baseType: !7632, size: 64, offset: 2624)
!7632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7633, size: 64)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!37, !295, !2665}
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !403, file: !36, line: 1414, baseType: !7636, size: 64, offset: 2688)
!7636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7637, size: 64)
!7637 = !DISubroutineType(types: !7638)
!7638 = !{null, !295, !2665}
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !403, file: !36, line: 1417, baseType: !7640, size: 64, offset: 2752)
!7640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7641, size: 64)
!7641 = !DISubroutineType(types: !7642)
!7642 = !{!37, !7643, !7587, !295, !711, !1038, !1038, !2444}
!7643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7644, size: 64)
!7644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !7645, line: 8, size: 96, elements: !7646)
!7645 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!7646 = !{!7647, !7648, !7649, !7650, !7651, !7652, !7653}
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !7644, file: !7645, line: 9, baseType: !1398, size: 8)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !7644, file: !7645, line: 10, baseType: !1398, size: 8, offset: 8)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !7644, file: !7645, line: 11, baseType: !476, size: 16, offset: 16)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !7644, file: !7645, line: 12, baseType: !1490, size: 32, offset: 32)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !7644, file: !7645, line: 13, baseType: !476, size: 16, offset: 64)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !7644, file: !7645, line: 14, baseType: !1398, size: 8, offset: 80)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !7644, file: !7645, line: 15, baseType: !1398, size: 8, offset: 88)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !403, file: !36, line: 1424, baseType: !7655, size: 64, offset: 2816)
!7655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7656, size: 64)
!7656 = !DISubroutineType(types: !7657)
!7657 = !{!37, !7643, !7587, !295, !711, !1038}
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !403, file: !36, line: 1429, baseType: !7659, size: 64, offset: 2880)
!7659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7660, size: 64)
!7660 = !DISubroutineType(types: !7661)
!7661 = !{!37, !420, !7662, !295, !295, !539}
!7662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7663, size: 64)
!7663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2446, line: 203, size: 1024, elements: !7664)
!7664 = !{!7665, !7666, !7676, !7680, !7684, !7685, !7686, !7687, !7688, !7689, !7690, !7691, !7692, !7693}
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7663, file: !2446, line: 204, baseType: !420, size: 64)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !7663, file: !2446, line: 205, baseType: !7667, size: 64, offset: 64)
!7667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7668, size: 64)
!7668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7669)
!7669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2453, line: 44, size: 128, elements: !7670)
!7670 = !{!7671, !7672, !7673, !7674, !7675}
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !7669, file: !2453, line: 45, baseType: !468, size: 32)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !7669, file: !2453, line: 46, baseType: !476, size: 16, offset: 32)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !7669, file: !2453, line: 47, baseType: !476, size: 16, offset: 48)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !7669, file: !2453, line: 48, baseType: !468, size: 32, offset: 64)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !7669, file: !2453, line: 49, baseType: !468, size: 32, offset: 96)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !7663, file: !2446, line: 206, baseType: !7677, size: 64, offset: 128)
!7677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7678, size: 64)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!37, !420, !7662}
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7663, file: !2446, line: 208, baseType: !7681, size: 64, offset: 192)
!7681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7682, size: 64)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{!37, !7662}
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7663, file: !2446, line: 209, baseType: !570, size: 64, offset: 256)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !7663, file: !2446, line: 211, baseType: !852, size: 64, offset: 320)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !7663, file: !2446, line: 212, baseType: !2444, size: 64, offset: 384)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7663, file: !2446, line: 213, baseType: !1038, size: 16, offset: 448)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !7663, file: !2446, line: 214, baseType: !1038, size: 16, offset: 464)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !7663, file: !2446, line: 215, baseType: !707, size: 32, offset: 480)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !7663, file: !2446, line: 216, baseType: !7, size: 32, offset: 512)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7663, file: !2446, line: 216, baseType: !7, size: 32, offset: 544)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !7663, file: !2446, line: 217, baseType: !540, size: 8, offset: 576)
!7693 = !DIDerivedType(tag: DW_TAG_member, scope: !7663, file: !2446, line: 218, baseType: !7694, size: 384, offset: 640)
!7694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7663, file: !2446, line: 218, size: 384, elements: !7695)
!7695 = !{!7696, !7698}
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !7694, file: !2446, line: 219, baseType: !7697, size: 384)
!7697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 384, elements: !7232)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !7694, file: !2446, line: 224, baseType: !7699, size: 384)
!7699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, size: 384, elements: !1671)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !403, file: !36, line: 1434, baseType: !7701, size: 64, offset: 2944)
!7701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7702, size: 64)
!7702 = !DISubroutineType(types: !7703)
!7703 = !{!37, !420, !7587, !295, !711, !1038, !707, !707, !2444}
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !403, file: !36, line: 1440, baseType: !7705, size: 64, offset: 3008)
!7705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7706, size: 64)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!37, !295, !7708, !1038, !2444}
!7708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7669, size: 64)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !403, file: !36, line: 1444, baseType: !7710, size: 64, offset: 3072)
!7710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7711, size: 64)
!7711 = !DISubroutineType(types: !7712)
!7712 = !{!37, !420, !707, !707, !295, !707, !37}
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !403, file: !36, line: 1449, baseType: !7714, size: 64, offset: 3136)
!7714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7715, size: 64)
!7715 = !DISubroutineType(types: !7716)
!7716 = !{!37, !295, !7708, !1038}
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !403, file: !36, line: 1452, baseType: !7718, size: 64, offset: 3200)
!7718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7719, size: 64)
!7719 = !DISubroutineType(types: !7720)
!7720 = !{!37, !295, !540}
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !403, file: !36, line: 1454, baseType: !7722, size: 64, offset: 3264)
!7722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7723, size: 64)
!7723 = !DISubroutineType(types: !7724)
!7724 = !{!37, !295, !7725}
!7725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7726, size: 64)
!7726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !36, line: 820, size: 264, elements: !7727)
!7727 = !{!7728, !7729}
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7726, file: !36, line: 821, baseType: !715, size: 256)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !7726, file: !36, line: 822, baseType: !494, size: 8, offset: 256)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !403, file: !36, line: 1456, baseType: !7722, size: 64, offset: 3328)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !403, file: !36, line: 1458, baseType: !7732, size: 64, offset: 3392)
!7732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7733, size: 64)
!7733 = !DISubroutineType(types: !7734)
!7734 = !{!37, !295, !577, !594}
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !403, file: !36, line: 1460, baseType: !7736, size: 64, offset: 3456)
!7736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7737, size: 64)
!7737 = !DISubroutineType(types: !7738)
!7738 = !{null, !295, !7739}
!7739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7740, size: 64)
!7740 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !36, line: 67, flags: DIFlagFwdDecl)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !403, file: !36, line: 1462, baseType: !7736, size: 64, offset: 3520)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !403, file: !36, line: 1464, baseType: !7743, size: 64, offset: 3584)
!7743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7744, size: 64)
!7744 = !DISubroutineType(types: !7745)
!7745 = !{!570, !295, !295}
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !403, file: !36, line: 1466, baseType: !7747, size: 64, offset: 3648)
!7747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7748, size: 64)
!7748 = !DISubroutineType(types: !7749)
!7749 = !{null, !295, !570}
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !403, file: !36, line: 1469, baseType: !7751, size: 64, offset: 3712)
!7751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7752, size: 64)
!7752 = !DISubroutineType(types: !7753)
!7753 = !{!37, !295, !37, !707}
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !403, file: !36, line: 1472, baseType: !7755, size: 64, offset: 3776)
!7755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7756, size: 64)
!7756 = !DISubroutineType(types: !7757)
!7757 = !{!37, !2682}
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !403, file: !36, line: 1473, baseType: !7718, size: 64, offset: 3840)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !403, file: !36, line: 1475, baseType: !7760, size: 64, offset: 3904)
!7760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7761, size: 64)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{!37, !295, !420}
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !403, file: !36, line: 1477, baseType: !7339, size: 64, offset: 3968)
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !403, file: !36, line: 1479, baseType: !7765, size: 64, offset: 4032)
!7765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7766, size: 64)
!7766 = !DISubroutineType(types: !7767)
!7767 = !{!37, !295, !7768}
!7768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7769, size: 64)
!7769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !36, line: 894, size: 256, elements: !7770)
!7770 = !{!7771, !7772}
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !7769, file: !36, line: 895, baseType: !62, size: 32)
!7772 = !DIDerivedType(tag: DW_TAG_member, scope: !7769, file: !36, line: 896, baseType: !7773, size: 192, offset: 64)
!7773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7769, file: !36, line: 896, size: 192, elements: !7774)
!7774 = !{!7775, !7781, !7810}
!7775 = !DIDerivedType(tag: DW_TAG_member, scope: !7773, file: !36, line: 898, baseType: !7776, size: 192)
!7776 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7773, file: !36, line: 898, size: 192, elements: !7777)
!7777 = !{!7778, !7779, !7780}
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7776, file: !36, line: 899, baseType: !707, size: 32)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7776, file: !36, line: 900, baseType: !2909, size: 64, offset: 64)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !7776, file: !36, line: 901, baseType: !2444, size: 64, offset: 128)
!7781 = !DIDerivedType(tag: DW_TAG_member, scope: !7773, file: !36, line: 904, baseType: !7782, size: 64)
!7782 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7773, file: !36, line: 904, size: 64, elements: !7783)
!7783 = !{!7784}
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !7782, file: !36, line: 905, baseType: !7785, size: 64)
!7785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7786, size: 64)
!7786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !145, line: 222, size: 2560, elements: !7787)
!7787 = !{!7788, !7789, !7790, !7808, !7809}
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !7786, file: !145, line: 223, baseType: !3034, size: 2048)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !7786, file: !145, line: 224, baseType: !295, size: 64, offset: 2048)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !7786, file: !145, line: 225, baseType: !7791, size: 64, offset: 2112)
!7791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7792, size: 64)
!7792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7793)
!7793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !145, line: 212, size: 256, elements: !7794)
!7794 = !{!7795, !7799, !7800, !7804}
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !7793, file: !145, line: 213, baseType: !7796, size: 64)
!7796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7797, size: 64)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!37, !7785, !570, !570}
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !7793, file: !145, line: 215, baseType: !7796, size: 64, offset: 64)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !7793, file: !145, line: 217, baseType: !7801, size: 64, offset: 128)
!7801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7802, size: 64)
!7802 = !DISubroutineType(types: !7803)
!7803 = !{!37, !7785, !570, !570, !336}
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !7793, file: !145, line: 219, baseType: !7805, size: 64, offset: 192)
!7805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7806, size: 64)
!7806 = !DISubroutineType(types: !7807)
!7807 = !{!37, !7785, !570}
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !7786, file: !145, line: 226, baseType: !570, size: 64, offset: 2176)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !7786, file: !145, line: 227, baseType: !289, size: 128, offset: 2240)
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !7773, file: !36, line: 911, baseType: !7811, size: 128)
!7811 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7773, file: !36, line: 908, size: 128, elements: !7812)
!7812 = !{!7813, !7816}
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !7811, file: !36, line: 909, baseType: !7814, size: 64)
!7814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7815, size: 64)
!7815 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !36, line: 909, flags: DIFlagFwdDecl)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !7811, file: !36, line: 910, baseType: !1038, size: 16, offset: 64)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !403, file: !36, line: 1481, baseType: !7818, size: 64, offset: 4096)
!7818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7819, size: 64)
!7819 = !DISubroutineType(types: !7820)
!7820 = !{!37, !295, !37, !7821, !707}
!7821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7822, size: 64)
!7822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7823, size: 64)
!7823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !7824, line: 94, size: 256, elements: !7825)
!7824 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!7825 = !{!7826, !7827, !7828, !7829, !7830, !7831, !7836}
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7823, file: !7824, line: 95, baseType: !570, size: 64)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7823, file: !7824, line: 96, baseType: !1038, size: 16, offset: 64)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !7823, file: !7824, line: 97, baseType: !1038, size: 16, offset: 80)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !7823, file: !7824, line: 98, baseType: !707, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !7823, file: !7824, line: 99, baseType: !707, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !7823, file: !7824, line: 103, baseType: !7832, size: 64, offset: 128)
!7832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !7824, line: 50, size: 64, elements: !7833)
!7833 = !{!7834, !7835}
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7832, file: !7824, line: 51, baseType: !707, size: 32)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7832, file: !7824, line: 52, baseType: !707, size: 32, offset: 32)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !7823, file: !7824, line: 104, baseType: !295, size: 64, offset: 192)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !403, file: !36, line: 1484, baseType: !7838, size: 64, offset: 4160)
!7838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7839, size: 64)
!7839 = !DISubroutineType(types: !7840)
!7840 = !{!37, !295, !707, !707}
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !403, file: !36, line: 1486, baseType: !7842, size: 64, offset: 4224)
!7842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7843, size: 64)
!7843 = !DISubroutineType(types: !7844)
!7844 = !{!7845, !295}
!7845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7846, size: 64)
!7846 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !36, line: 1486, flags: DIFlagFwdDecl)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !403, file: !36, line: 1487, baseType: !7848, size: 64, offset: 4288)
!7848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7849, size: 64)
!7849 = !DISubroutineType(types: !7850)
!7850 = !{!37, !295, !7851, !37}
!7851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7852, size: 64)
!7852 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !36, line: 56, flags: DIFlagFwdDecl)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !403, file: !36, line: 1489, baseType: !7854, size: 64, offset: 4352)
!7854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7855, size: 64)
!7855 = !DISubroutineType(types: !7856)
!7856 = !{!295, !295}
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !269, file: !36, line: 1917, baseType: !7858, size: 64, offset: 4032)
!7858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7859, size: 64)
!7859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7860)
!7860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !256, line: 421, size: 3904, elements: !7861)
!7861 = !{!7862, !7863, !7883, !7884, !7895, !7907, !7911, !7915, !7919, !7920, !7921, !7938, !7939, !7951, !7952, !7982, !7983, !7999, !8003, !8012, !8023, !8027, !8040, !8044, !8048, !8058, !8059, !8060, !8061, !8065, !8066, !8168, !8172, !8182, !8186, !8187, !8188, !8192, !8199, !8203, !8207, !8223, !8227, !8239, !8243, !8244, !8259, !8271, !8272, !8288, !8289, !8303, !8307, !8311, !8312, !8351, !8357, !8368, !8369, !8370, !8371}
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !7860, file: !256, line: 422, baseType: !707, size: 32)
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !7860, file: !256, line: 423, baseType: !7864, size: 64, offset: 64)
!7864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7865, size: 64)
!7865 = !DISubroutineType(types: !7866)
!7866 = !{null, !295, !7867}
!7867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7868, size: 64)
!7868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !214, line: 177, size: 1568, elements: !7869)
!7869 = !{!7870, !7871, !7872, !7873, !7874, !7875, !7876, !7878, !7879, !7880, !7881, !7882}
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7868, file: !214, line: 178, baseType: !468, size: 32)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7868, file: !214, line: 179, baseType: !3761, size: 256, offset: 32)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !7868, file: !214, line: 180, baseType: !3761, size: 256, offset: 288)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !7868, file: !214, line: 181, baseType: !3761, size: 256, offset: 544)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !7868, file: !214, line: 182, baseType: !3761, size: 256, offset: 800)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !7868, file: !214, line: 183, baseType: !3761, size: 256, offset: 1056)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !7868, file: !214, line: 184, baseType: !7877, size: 96, offset: 1312)
!7877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 96, elements: !2833)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !7868, file: !214, line: 185, baseType: !468, size: 32, offset: 1408)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !7868, file: !214, line: 186, baseType: !468, size: 32, offset: 1440)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !7868, file: !214, line: 187, baseType: !468, size: 32, offset: 1472)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !7868, file: !214, line: 188, baseType: !468, size: 32, offset: 1504)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !7868, file: !214, line: 189, baseType: !468, size: 32, offset: 1536)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !7860, file: !256, line: 424, baseType: !406, size: 64, offset: 128)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !7860, file: !256, line: 425, baseType: !7885, size: 64, offset: 192)
!7885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7886, size: 64)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{null, !295, !7888, !570}
!7888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7889, size: 64)
!7889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !214, line: 310, size: 96, elements: !7890)
!7890 = !{!7891, !7892, !7893, !7894}
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7889, file: !214, line: 311, baseType: !468, size: 32)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !7889, file: !214, line: 312, baseType: !468, size: 32, offset: 32)
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7889, file: !214, line: 313, baseType: !468, size: 32, offset: 64)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7889, file: !214, line: 314, baseType: !7249, offset: 96)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !7860, file: !256, line: 426, baseType: !7896, size: 64, offset: 256)
!7896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7897, size: 64)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{null, !295, !7899}
!7899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7900, size: 64)
!7900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !214, line: 203, size: 160, elements: !7901)
!7901 = !{!7902, !7903, !7904, !7905}
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7900, file: !214, line: 204, baseType: !468, size: 32)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7900, file: !214, line: 205, baseType: !468, size: 32, offset: 32)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !7900, file: !214, line: 206, baseType: !468, size: 32, offset: 64)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !7900, file: !214, line: 207, baseType: !7906, size: 48, offset: 96)
!7906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 48, elements: !1671)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !7860, file: !256, line: 427, baseType: !7908, size: 64, offset: 320)
!7908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7909, size: 64)
!7909 = !DISubroutineType(types: !7910)
!7910 = !{!37, !295, !7899}
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !7860, file: !256, line: 428, baseType: !7912, size: 64, offset: 384)
!7912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7913, size: 64)
!7913 = !DISubroutineType(types: !7914)
!7914 = !{!707, !295}
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !7860, file: !256, line: 429, baseType: !7916, size: 64, offset: 448)
!7916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7917, size: 64)
!7917 = !DISubroutineType(types: !7918)
!7918 = !{null, !295, !707}
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !7860, file: !256, line: 430, baseType: !406, size: 64, offset: 512)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !7860, file: !256, line: 431, baseType: !7912, size: 64, offset: 576)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !7860, file: !256, line: 432, baseType: !7922, size: 64, offset: 640)
!7922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7923, size: 64)
!7923 = !DISubroutineType(types: !7924)
!7924 = !{!37, !295, !7925}
!7925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7926, size: 64)
!7926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !256, line: 93, size: 64, elements: !7927)
!7927 = !{!7928, !7929}
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !7926, file: !256, line: 94, baseType: !213, size: 32)
!7929 = !DIDerivedType(tag: DW_TAG_member, scope: !7926, file: !256, line: 95, baseType: !7930, size: 32, offset: 32)
!7930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7926, file: !256, line: 95, size: 32, elements: !7931)
!7931 = !{!7932, !7933, !7934, !7935, !7936, !7937}
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !7930, file: !256, line: 96, baseType: !226, size: 32)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !7930, file: !256, line: 97, baseType: !234, size: 32)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !7930, file: !256, line: 98, baseType: !240, size: 32)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !7930, file: !256, line: 99, baseType: !247, size: 32)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !7930, file: !256, line: 100, baseType: !251, size: 32)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !7930, file: !256, line: 101, baseType: !1397, size: 8)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !7860, file: !256, line: 434, baseType: !406, size: 64, offset: 704)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !7860, file: !256, line: 435, baseType: !7940, size: 64, offset: 768)
!7940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7941, size: 64)
!7941 = !DISubroutineType(types: !7942)
!7942 = !{!37, !295, !7943, !7530}
!7943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7944, size: 64)
!7944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !214, line: 335, size: 128, elements: !7945)
!7945 = !{!7946, !7947, !7948, !7949, !7950}
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7944, file: !214, line: 336, baseType: !468, size: 32)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !7944, file: !214, line: 337, baseType: !468, size: 32, offset: 32)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7944, file: !214, line: 338, baseType: !468, size: 32, offset: 64)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7944, file: !214, line: 339, baseType: !468, size: 32, offset: 96)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7944, file: !214, line: 340, baseType: !7249, offset: 128)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !7860, file: !256, line: 437, baseType: !7940, size: 64, offset: 832)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !7860, file: !256, line: 439, baseType: !7953, size: 64, offset: 896)
!7953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7954, size: 64)
!7954 = !DISubroutineType(types: !7955)
!7955 = !{!37, !295, !7956}
!7956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7957, size: 64)
!7957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !214, line: 462, size: 736, elements: !7958)
!7958 = !{!7959, !7960, !7961, !7962, !7963, !7964, !7965, !7966, !7967, !7968, !7969, !7970, !7971, !7972, !7973, !7974, !7975, !7976, !7977, !7978, !7979, !7980, !7981}
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7957, file: !214, line: 463, baseType: !468, size: 32)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !7957, file: !214, line: 464, baseType: !468, size: 32, offset: 32)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !7957, file: !214, line: 465, baseType: !468, size: 32, offset: 64)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !7957, file: !214, line: 466, baseType: !468, size: 32, offset: 96)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !7957, file: !214, line: 467, baseType: !468, size: 32, offset: 128)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !7957, file: !214, line: 468, baseType: !468, size: 32, offset: 160)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !7957, file: !214, line: 469, baseType: !468, size: 32, offset: 192)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !7957, file: !214, line: 470, baseType: !468, size: 32, offset: 224)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !7957, file: !214, line: 471, baseType: !468, size: 32, offset: 256)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !7957, file: !214, line: 472, baseType: !468, size: 32, offset: 288)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !7957, file: !214, line: 473, baseType: !468, size: 32, offset: 320)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !7957, file: !214, line: 474, baseType: !468, size: 32, offset: 352)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !7957, file: !214, line: 475, baseType: !468, size: 32, offset: 384)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !7957, file: !214, line: 476, baseType: !468, size: 32, offset: 416)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !7957, file: !214, line: 477, baseType: !468, size: 32, offset: 448)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !7957, file: !214, line: 478, baseType: !468, size: 32, offset: 480)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !7957, file: !214, line: 479, baseType: !468, size: 32, offset: 512)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !7957, file: !214, line: 480, baseType: !468, size: 32, offset: 544)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !7957, file: !214, line: 481, baseType: !468, size: 32, offset: 576)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !7957, file: !214, line: 482, baseType: !468, size: 32, offset: 608)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !7957, file: !214, line: 483, baseType: !468, size: 32, offset: 640)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !7957, file: !214, line: 484, baseType: !468, size: 32, offset: 672)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !7957, file: !214, line: 485, baseType: !468, size: 32, offset: 704)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !7860, file: !256, line: 440, baseType: !7953, size: 64, offset: 960)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !7860, file: !256, line: 441, baseType: !7984, size: 64, offset: 1024)
!7984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7985, size: 64)
!7985 = !DISubroutineType(types: !7986)
!7986 = !{null, !295, !7987}
!7987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7988, size: 64)
!7988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !214, line: 513, size: 288, elements: !7989)
!7989 = !{!7990, !7991, !7992, !7993, !7994, !7995, !7996, !7997, !7998}
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7988, file: !214, line: 514, baseType: !468, size: 32)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !7988, file: !214, line: 515, baseType: !468, size: 32, offset: 32)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !7988, file: !214, line: 516, baseType: !468, size: 32, offset: 64)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !7988, file: !214, line: 517, baseType: !468, size: 32, offset: 96)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !7988, file: !214, line: 518, baseType: !468, size: 32, offset: 128)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !7988, file: !214, line: 519, baseType: !468, size: 32, offset: 160)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !7988, file: !214, line: 520, baseType: !468, size: 32, offset: 192)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !7988, file: !214, line: 521, baseType: !468, size: 32, offset: 224)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !7988, file: !214, line: 522, baseType: !468, size: 32, offset: 256)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !7860, file: !256, line: 443, baseType: !8000, size: 64, offset: 1088)
!8000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8001, size: 64)
!8001 = !DISubroutineType(types: !8002)
!8002 = !{!37, !295, !7987}
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !7860, file: !256, line: 445, baseType: !8004, size: 64, offset: 1152)
!8004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8005, size: 64)
!8005 = !DISubroutineType(types: !8006)
!8006 = !{null, !295, !8007}
!8007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8008, size: 64)
!8008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !256, line: 260, size: 128, elements: !8009)
!8009 = !{!8010, !8011}
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !8008, file: !256, line: 261, baseType: !336, size: 64)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !8008, file: !256, line: 262, baseType: !336, size: 64, offset: 64)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !7860, file: !256, line: 447, baseType: !8013, size: 64, offset: 1216)
!8013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8014, size: 64)
!8014 = !DISubroutineType(types: !8015)
!8015 = !{null, !295, !8016}
!8016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8017, size: 64)
!8017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !214, line: 575, size: 128, elements: !8018)
!8018 = !{!8019, !8020, !8021, !8022}
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8017, file: !214, line: 576, baseType: !468, size: 32)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8017, file: !214, line: 577, baseType: !468, size: 32, offset: 32)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !8017, file: !214, line: 578, baseType: !468, size: 32, offset: 64)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !8017, file: !214, line: 579, baseType: !468, size: 32, offset: 96)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !7860, file: !256, line: 449, baseType: !8024, size: 64, offset: 1280)
!8024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8025, size: 64)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!37, !295, !8016}
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !7860, file: !256, line: 451, baseType: !8028, size: 64, offset: 1344)
!8028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8029, size: 64)
!8029 = !DISubroutineType(types: !8030)
!8030 = !{null, !295, !8031, !3338}
!8031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8032, size: 64)
!8032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !214, line: 770, size: 128, elements: !8033)
!8033 = !{!8034, !8035, !8036, !8037, !8038}
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8032, file: !214, line: 771, baseType: !468, size: 32)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8032, file: !214, line: 772, baseType: !468, size: 32, offset: 32)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8032, file: !214, line: 773, baseType: !468, size: 32, offset: 64)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8032, file: !214, line: 774, baseType: !468, size: 32, offset: 96)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8032, file: !214, line: 775, baseType: !8039, offset: 128)
!8039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, elements: !1922)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !7860, file: !256, line: 452, baseType: !8041, size: 64, offset: 1408)
!8041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8042, size: 64)
!8042 = !DISubroutineType(types: !8043)
!8043 = !{null, !295, !707, !7530}
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !7860, file: !256, line: 453, baseType: !8045, size: 64, offset: 1472)
!8045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8046, size: 64)
!8046 = !DISubroutineType(types: !8047)
!8047 = !{!37, !295, !255}
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !7860, file: !256, line: 454, baseType: !8049, size: 64, offset: 1536)
!8049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8050, size: 64)
!8050 = !DISubroutineType(types: !8051)
!8051 = !{null, !295, !8052, !3338}
!8052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8053, size: 64)
!8053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !214, line: 789, size: 64, elements: !8054)
!8054 = !{!8055, !8056, !8057}
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8053, file: !214, line: 790, baseType: !468, size: 32)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8053, file: !214, line: 791, baseType: !468, size: 32, offset: 32)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8053, file: !214, line: 792, baseType: !8039, offset: 64)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !7860, file: !256, line: 456, baseType: !406, size: 64, offset: 1600)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !7860, file: !256, line: 457, baseType: !410, size: 64, offset: 1664)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !7860, file: !256, line: 458, baseType: !7912, size: 64, offset: 1728)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !7860, file: !256, line: 459, baseType: !8062, size: 64, offset: 1792)
!8062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8063, size: 64)
!8063 = !DISubroutineType(types: !8064)
!8064 = !{!37, !295, !707}
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !7860, file: !256, line: 460, baseType: !7465, size: 64, offset: 1856)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !7860, file: !256, line: 461, baseType: !8067, size: 64, offset: 1920)
!8067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8068, size: 64)
!8068 = !DISubroutineType(types: !8069)
!8069 = !{!37, !295, !8070, !1460}
!8070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8071, size: 64)
!8071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !214, line: 1088, size: 1536, elements: !8072)
!8072 = !{!8073, !8074, !8075, !8076, !8162, !8167}
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8071, file: !214, line: 1089, baseType: !468, size: 32)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8071, file: !214, line: 1090, baseType: !468, size: 32, offset: 32)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8071, file: !214, line: 1091, baseType: !338, size: 64, offset: 64)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !8071, file: !214, line: 1092, baseType: !8077, size: 1344, offset: 128)
!8077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !214, line: 992, size: 1344, elements: !8078)
!8078 = !{!8079, !8080, !8148, !8158, !8159, !8160, !8161}
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8077, file: !214, line: 993, baseType: !468, size: 32)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !8077, file: !214, line: 994, baseType: !8081, size: 416, offset: 32)
!8081 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !214, line: 939, size: 416, elements: !8082)
!8082 = !{!8083, !8091, !8092, !8093, !8100, !8101, !8110, !8118, !8119, !8120, !8127, !8128, !8136, !8144}
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !8081, file: !214, line: 940, baseType: !8084, size: 128)
!8084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !214, line: 845, size: 128, elements: !8085)
!8085 = !{!8086, !8087, !8088, !8089, !8090}
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8084, file: !214, line: 846, baseType: !466, size: 32)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8084, file: !214, line: 847, baseType: !466, size: 32, offset: 32)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8084, file: !214, line: 848, baseType: !489, size: 16, offset: 64)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8084, file: !214, line: 849, baseType: !489, size: 16, offset: 80)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8084, file: !214, line: 850, baseType: !1398, size: 8, offset: 96)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !8081, file: !214, line: 941, baseType: !8084, size: 128)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !8081, file: !214, line: 942, baseType: !8084, size: 128)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !8081, file: !214, line: 943, baseType: !8094, size: 128)
!8094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !214, line: 862, size: 128, elements: !8095)
!8095 = !{!8096, !8097, !8098, !8099}
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8094, file: !214, line: 863, baseType: !466, size: 32)
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8094, file: !214, line: 864, baseType: !466, size: 32, offset: 32)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8094, file: !214, line: 865, baseType: !466, size: 32, offset: 64)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8094, file: !214, line: 866, baseType: !1398, size: 8, offset: 96)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !8081, file: !214, line: 944, baseType: !8094, size: 128)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !8081, file: !214, line: 945, baseType: !8102, size: 128)
!8102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !214, line: 880, size: 128, elements: !8103)
!8103 = !{!8104, !8105, !8106, !8107, !8108, !8109}
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8102, file: !214, line: 881, baseType: !466, size: 32)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8102, file: !214, line: 882, baseType: !466, size: 32, offset: 32)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8102, file: !214, line: 883, baseType: !466, size: 32, offset: 64)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8102, file: !214, line: 884, baseType: !1398, size: 8, offset: 96)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !8102, file: !214, line: 885, baseType: !1398, size: 8, offset: 104)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !8102, file: !214, line: 886, baseType: !1398, size: 8, offset: 112)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !8081, file: !214, line: 946, baseType: !8111, size: 320)
!8111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !214, line: 899, size: 320, elements: !8112)
!8112 = !{!8113, !8114, !8115, !8116, !8117}
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8111, file: !214, line: 900, baseType: !2215, size: 128)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8111, file: !214, line: 901, baseType: !2215, size: 128, offset: 128)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8111, file: !214, line: 902, baseType: !489, size: 16, offset: 256)
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8111, file: !214, line: 903, baseType: !489, size: 16, offset: 272)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8111, file: !214, line: 904, baseType: !1398, size: 8, offset: 288)
!8118 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !8081, file: !214, line: 947, baseType: !8111, size: 320)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !8081, file: !214, line: 948, baseType: !8111, size: 320)
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !8081, file: !214, line: 949, baseType: !8121, size: 320)
!8121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !214, line: 916, size: 320, elements: !8122)
!8122 = !{!8123, !8124, !8125, !8126}
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8121, file: !214, line: 917, baseType: !2215, size: 128)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8121, file: !214, line: 918, baseType: !2215, size: 128, offset: 128)
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8121, file: !214, line: 919, baseType: !466, size: 32, offset: 256)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8121, file: !214, line: 920, baseType: !1398, size: 8, offset: 288)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !8081, file: !214, line: 950, baseType: !8121, size: 320)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !8081, file: !214, line: 951, baseType: !8129, size: 320)
!8129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !214, line: 931, size: 320, elements: !8130)
!8130 = !{!8131, !8132, !8133, !8134, !8135}
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8129, file: !214, line: 932, baseType: !2215, size: 128)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8129, file: !214, line: 933, baseType: !2215, size: 128, offset: 128)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8129, file: !214, line: 934, baseType: !466, size: 32, offset: 256)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8129, file: !214, line: 935, baseType: !1398, size: 8, offset: 288)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !8129, file: !214, line: 936, baseType: !1398, size: 8, offset: 296)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !8081, file: !214, line: 952, baseType: !8137, size: 112)
!8137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !8138, line: 164, size: 112, elements: !8139)
!8138 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!8139 = !{!8140, !8142, !8143}
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8137, file: !8138, line: 165, baseType: !8141, size: 48)
!8141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 48, elements: !1671)
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !8137, file: !8138, line: 166, baseType: !8141, size: 48, offset: 48)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !8137, file: !8138, line: 167, baseType: !489, size: 16, offset: 96)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !8081, file: !214, line: 953, baseType: !8145, size: 416)
!8145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 416, elements: !8146)
!8146 = !{!8147}
!8147 = !DISubrange(count: 52)
!8148 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !8077, file: !214, line: 995, baseType: !8149, size: 160, offset: 448)
!8149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !214, line: 967, size: 160, elements: !8150)
!8150 = !{!8151, !8153, !8154, !8155, !8156}
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8149, file: !214, line: 968, baseType: !8152, size: 16)
!8152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 16, elements: !478)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8149, file: !214, line: 969, baseType: !8141, size: 48, offset: 16)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !8149, file: !214, line: 970, baseType: !489, size: 16, offset: 64)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !8149, file: !214, line: 971, baseType: !489, size: 16, offset: 80)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8149, file: !214, line: 972, baseType: !8157, size: 64, offset: 96)
!8157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 64, elements: !478)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !8077, file: !214, line: 996, baseType: !8081, size: 416, offset: 608)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !8077, file: !214, line: 997, baseType: !8149, size: 160, offset: 1024)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !8077, file: !214, line: 998, baseType: !338, size: 64, offset: 1216)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8077, file: !214, line: 999, baseType: !468, size: 32, offset: 1280)
!8162 = !DIDerivedType(tag: DW_TAG_member, scope: !8071, file: !214, line: 1093, baseType: !8163, size: 32, offset: 1472)
!8163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8071, file: !214, line: 1093, size: 32, elements: !8164)
!8164 = !{!8165, !8166}
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !8163, file: !214, line: 1094, baseType: !468, size: 32)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !8163, file: !214, line: 1095, baseType: !468, size: 32)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !8071, file: !214, line: 1097, baseType: !7257, offset: 1504)
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !7860, file: !256, line: 463, baseType: !8169, size: 64, offset: 1984)
!8169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8170, size: 64)
!8170 = !DISubroutineType(types: !8171)
!8171 = !{!37, !295, !8070}
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !7860, file: !256, line: 464, baseType: !8173, size: 64, offset: 2048)
!8173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8174, size: 64)
!8174 = !DISubroutineType(types: !8175)
!8175 = !{!37, !295, !8176}
!8176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8177, size: 64)
!8177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !214, line: 1217, size: 1088, elements: !8178)
!8178 = !{!8179, !8180, !8181}
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8177, file: !214, line: 1218, baseType: !468, size: 32)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !8177, file: !214, line: 1219, baseType: !468, size: 32, offset: 32)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8177, file: !214, line: 1220, baseType: !2990, size: 1024, offset: 64)
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !7860, file: !256, line: 465, baseType: !8183, size: 64, offset: 2112)
!8183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8184, size: 64)
!8184 = !DISubroutineType(types: !8185)
!8185 = !{!37, !295, !1460}
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !7860, file: !256, line: 466, baseType: !7912, size: 64, offset: 2176)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !7860, file: !256, line: 467, baseType: !7912, size: 64, offset: 2240)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !7860, file: !256, line: 468, baseType: !8189, size: 64, offset: 2304)
!8189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8190, size: 64)
!8190 = !DISubroutineType(types: !8191)
!8191 = !{!37, !295, !1460, !7530, !7530}
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !7860, file: !256, line: 470, baseType: !8193, size: 64, offset: 2368)
!8193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8194, size: 64)
!8194 = !DISubroutineType(types: !8195)
!8195 = !{!37, !295, !8196, !8197, !8198}
!8196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!8197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8198, size: 64)
!8198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1397)
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !7860, file: !256, line: 472, baseType: !8200, size: 64, offset: 2432)
!8200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8201, size: 64)
!8201 = !DISubroutineType(types: !8202)
!8202 = !{!37, !295, !1460, !7530, !7530, !707}
!8203 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !7860, file: !256, line: 474, baseType: !8204, size: 64, offset: 2496)
!8204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8205, size: 64)
!8205 = !DISubroutineType(types: !8206)
!8206 = !{!37, !295, !8196, !8197, !8198, !1460, !540}
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !7860, file: !256, line: 477, baseType: !8208, size: 64, offset: 2560)
!8208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8209, size: 64)
!8209 = !DISubroutineType(types: !8210)
!8210 = !{null, !295, !8211}
!8211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8212, size: 64)
!8212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !214, line: 541, size: 288, elements: !8213)
!8213 = !{!8214, !8215, !8216, !8217, !8218, !8219, !8220, !8221, !8222}
!8214 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8212, file: !214, line: 542, baseType: !468, size: 32)
!8215 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !8212, file: !214, line: 543, baseType: !468, size: 32, offset: 32)
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !8212, file: !214, line: 544, baseType: !468, size: 32, offset: 64)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !8212, file: !214, line: 545, baseType: !468, size: 32, offset: 96)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !8212, file: !214, line: 546, baseType: !468, size: 32, offset: 128)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !8212, file: !214, line: 547, baseType: !468, size: 32, offset: 160)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !8212, file: !214, line: 548, baseType: !468, size: 32, offset: 192)
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !8212, file: !214, line: 549, baseType: !468, size: 32, offset: 224)
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !8212, file: !214, line: 550, baseType: !468, size: 32, offset: 256)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !7860, file: !256, line: 478, baseType: !8224, size: 64, offset: 2624)
!8224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8225, size: 64)
!8225 = !DISubroutineType(types: !8226)
!8226 = !{!37, !295, !8211}
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !7860, file: !256, line: 479, baseType: !8228, size: 64, offset: 2688)
!8228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8229, size: 64)
!8229 = !DISubroutineType(types: !8230)
!8230 = !{!37, !295, !8231}
!8231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8232, size: 64)
!8232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !214, line: 1237, size: 128, elements: !8233)
!8233 = !{!8234, !8235, !8236, !8237, !8238}
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8232, file: !214, line: 1238, baseType: !468, size: 32)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8232, file: !214, line: 1239, baseType: !468, size: 32, offset: 32)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8232, file: !214, line: 1240, baseType: !468, size: 32, offset: 64)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8232, file: !214, line: 1241, baseType: !468, size: 32, offset: 96)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8232, file: !214, line: 1242, baseType: !7249, offset: 128)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !7860, file: !256, line: 480, baseType: !8240, size: 64, offset: 2752)
!8240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8241, size: 64)
!8241 = !DISubroutineType(types: !8242)
!8242 = !{!37, !295, !8231, !570}
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !7860, file: !256, line: 482, baseType: !8228, size: 64, offset: 2816)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !7860, file: !256, line: 483, baseType: !8245, size: 64, offset: 2880)
!8245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8246, size: 64)
!8246 = !DISubroutineType(types: !8247)
!8247 = !{!37, !295, !8248}
!8248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8249, size: 64)
!8249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !214, line: 1317, size: 352, elements: !8250)
!8250 = !{!8251, !8252, !8253, !8254, !8255, !8257, !8258}
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8249, file: !214, line: 1318, baseType: !468, size: 32)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !8249, file: !214, line: 1319, baseType: !468, size: 32, offset: 32)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !8249, file: !214, line: 1320, baseType: !1490, size: 32, offset: 64)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !8249, file: !214, line: 1321, baseType: !468, size: 32, offset: 96)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !8249, file: !214, line: 1322, baseType: !8256, size: 96, offset: 128)
!8256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 96, elements: !867)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !8249, file: !214, line: 1323, baseType: !468, size: 32, offset: 224)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !8249, file: !214, line: 1324, baseType: !8256, size: 96, offset: 256)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !7860, file: !256, line: 484, baseType: !8260, size: 64, offset: 2944)
!8260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8261, size: 64)
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!37, !295, !8263}
!8263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8264, size: 64)
!8264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !214, line: 382, size: 352, elements: !8265)
!8265 = !{!8266, !8267, !8268, !8269}
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8264, file: !214, line: 383, baseType: !468, size: 32)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8264, file: !214, line: 384, baseType: !468, size: 32, offset: 32)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !8264, file: !214, line: 385, baseType: !468, size: 32, offset: 64)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8264, file: !214, line: 386, baseType: !8270, size: 256, offset: 96)
!8270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 256, elements: !1371)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !7860, file: !256, line: 486, baseType: !7940, size: 64, offset: 3008)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !7860, file: !256, line: 488, baseType: !8273, size: 64, offset: 3072)
!8273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8274, size: 64)
!8274 = !DISubroutineType(types: !8275)
!8275 = !{!37, !295, !8276}
!8276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8277, size: 64)
!8277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !214, line: 360, size: 320, elements: !8278)
!8278 = !{!8279, !8280, !8281, !8282, !8283, !8284, !8285, !8286, !8287}
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8277, file: !214, line: 361, baseType: !468, size: 32)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8277, file: !214, line: 362, baseType: !468, size: 32, offset: 32)
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !8277, file: !214, line: 363, baseType: !468, size: 32, offset: 64)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !8277, file: !214, line: 364, baseType: !468, size: 32, offset: 96)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !8277, file: !214, line: 365, baseType: !468, size: 32, offset: 128)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !8277, file: !214, line: 366, baseType: !468, size: 32, offset: 160)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !8277, file: !214, line: 367, baseType: !468, size: 32, offset: 192)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !8277, file: !214, line: 368, baseType: !468, size: 32, offset: 224)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8277, file: !214, line: 369, baseType: !1613, size: 64, offset: 256)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !7860, file: !256, line: 489, baseType: !8273, size: 64, offset: 3136)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !7860, file: !256, line: 490, baseType: !8290, size: 64, offset: 3200)
!8290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8291, size: 64)
!8291 = !DISubroutineType(types: !8292)
!8292 = !{!37, !295, !8293, !570}
!8293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8294, size: 64)
!8294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8295)
!8295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !214, line: 244, size: 128, elements: !8296)
!8296 = !{!8297, !8298, !8299, !8300, !8301}
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8295, file: !214, line: 245, baseType: !468, size: 32)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8295, file: !214, line: 246, baseType: !468, size: 32, offset: 32)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !8295, file: !214, line: 247, baseType: !468, size: 32, offset: 64)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8295, file: !214, line: 248, baseType: !468, size: 32, offset: 96)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8295, file: !214, line: 249, baseType: !8302, offset: 128)
!8302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, elements: !1922)
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !7860, file: !256, line: 492, baseType: !8304, size: 64, offset: 3264)
!8304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8305, size: 64)
!8305 = !DISubroutineType(types: !8306)
!8306 = !{!37, !295, !8293, !2244}
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !7860, file: !256, line: 494, baseType: !8308, size: 64, offset: 3328)
!8308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8309, size: 64)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!37, !295, !707, !7956}
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !7860, file: !256, line: 496, baseType: !8308, size: 64, offset: 3392)
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !7860, file: !256, line: 498, baseType: !8313, size: 64, offset: 3456)
!8313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8314, size: 64)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{!37, !295, !8316}
!8316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8317, size: 64)
!8317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !256, line: 124, size: 768, elements: !8318)
!8318 = !{!8319, !8344}
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8317, file: !256, line: 125, baseType: !8320, size: 384)
!8320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !214, line: 1996, size: 384, elements: !8321)
!8321 = !{!8322, !8323, !8324, !8325, !8326, !8327, !8328, !8329, !8330, !8331, !8334, !8335, !8336, !8337, !8339, !8343}
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8320, file: !214, line: 1997, baseType: !468, size: 32)
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !8320, file: !214, line: 1998, baseType: !468, size: 32, offset: 32)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !8320, file: !214, line: 1999, baseType: !1398, size: 8, offset: 64)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8320, file: !214, line: 2000, baseType: !1398, size: 8, offset: 72)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !8320, file: !214, line: 2001, baseType: !1398, size: 8, offset: 80)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8320, file: !214, line: 2002, baseType: !1398, size: 8, offset: 88)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !8320, file: !214, line: 2003, baseType: !1398, size: 8, offset: 96)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !8320, file: !214, line: 2004, baseType: !1398, size: 8, offset: 104)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !8320, file: !214, line: 2005, baseType: !1398, size: 8, offset: 112)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !8320, file: !214, line: 2006, baseType: !8332, size: 8, offset: 120)
!8332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !339, line: 20, baseType: !8333)
!8333 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !8320, file: !214, line: 2007, baseType: !1398, size: 8, offset: 128)
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !8320, file: !214, line: 2008, baseType: !1398, size: 8, offset: 136)
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !8320, file: !214, line: 2009, baseType: !1398, size: 8, offset: 144)
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !8320, file: !214, line: 2010, baseType: !8338, size: 8, offset: 152)
!8338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 8, elements: !1416)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8320, file: !214, line: 2011, baseType: !8340, size: 224, offset: 160)
!8340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 224, elements: !8341)
!8341 = !{!8342}
!8342 = !DISubrange(count: 7)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !8320, file: !214, line: 2012, baseType: !7257, offset: 384)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !8317, file: !256, line: 130, baseType: !8345, size: 384, offset: 384)
!8345 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8317, file: !256, line: 126, size: 384, elements: !8346)
!8346 = !{!8347, !8349, !8350}
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8345, file: !256, line: 127, baseType: !8348, size: 128)
!8348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 128, elements: !478)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !8345, file: !256, line: 128, baseType: !8348, size: 128, offset: 128)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !8345, file: !256, line: 129, baseType: !8348, size: 128, offset: 256)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !7860, file: !256, line: 500, baseType: !8352, size: 64, offset: 3520)
!8352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8353, size: 64)
!8353 = !DISubroutineType(types: !8354)
!8354 = !{!37, !295, !8355}
!8355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8356, size: 64)
!8356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8317)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !7860, file: !256, line: 502, baseType: !8358, size: 64, offset: 3584)
!8358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8359, size: 64)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{!37, !295, !8361}
!8361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8362, size: 64)
!8362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !214, line: 1389, size: 128, elements: !8363)
!8363 = !{!8364, !8365, !8366, !8367}
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8362, file: !214, line: 1390, baseType: !468, size: 32)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !8362, file: !214, line: 1392, baseType: !468, size: 32, offset: 32)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !8362, file: !214, line: 1393, baseType: !468, size: 32, offset: 64)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8362, file: !214, line: 1394, baseType: !468, size: 32, offset: 96)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !7860, file: !256, line: 504, baseType: !8358, size: 64, offset: 3648)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !7860, file: !256, line: 506, baseType: !8049, size: 64, offset: 3712)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !7860, file: !256, line: 508, baseType: !8290, size: 64, offset: 3776)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !7860, file: !256, line: 510, baseType: !8304, size: 64, offset: 3840)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !269, file: !36, line: 1922, baseType: !8373, size: 64, offset: 4096)
!8373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8374, size: 64)
!8374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8375)
!8375 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !36, line: 1922, flags: DIFlagFwdDecl)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !269, file: !36, line: 1933, baseType: !8377, size: 64, offset: 4160)
!8377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8378, size: 64)
!8378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8379)
!8379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !36, line: 270, size: 384, elements: !8380)
!8380 = !{!8381, !8385, !8391, !8396, !8400, !8404}
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !8379, file: !36, line: 271, baseType: !8382, size: 64)
!8382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8383, size: 64)
!8383 = !DISubroutineType(types: !8384)
!8384 = !{!37, !420, !295, !477, !2244, !2244, !7}
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !8379, file: !36, line: 274, baseType: !8386, size: 64, offset: 64)
!8386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8387, size: 64)
!8387 = !DISubroutineType(types: !8388)
!8388 = !{!37, !8389, !7326}
!8389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8390, size: 64)
!8390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !8379, file: !36, line: 275, baseType: !8392, size: 64, offset: 128)
!8392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8393, size: 64)
!8393 = !DISubroutineType(types: !8394)
!8394 = !{!37, !2689, !8395, !489}
!8395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !8379, file: !36, line: 276, baseType: !8397, size: 64, offset: 192)
!8397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8398, size: 64)
!8398 = !DISubroutineType(types: !8399)
!8399 = !{null, !8395, !2682, !711}
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !8379, file: !36, line: 279, baseType: !8401, size: 64, offset: 256)
!8401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8402, size: 64)
!8402 = !DISubroutineType(types: !8403)
!8403 = !{!540, !297, !7}
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !8379, file: !36, line: 280, baseType: !8405, size: 64, offset: 320)
!8405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8406, size: 64)
!8406 = !DISubroutineType(types: !8407)
!8407 = !{!489, !8389}
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !269, file: !36, line: 1935, baseType: !7, size: 32, offset: 4224)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !269, file: !36, line: 1936, baseType: !7, size: 32, offset: 4256)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !269, file: !36, line: 1938, baseType: !477, size: 16, offset: 4288)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !269, file: !36, line: 1939, baseType: !477, size: 16, offset: 4304)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !269, file: !36, line: 1941, baseType: !494, size: 8, offset: 4320)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !269, file: !36, line: 1942, baseType: !494, size: 8, offset: 4328)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !269, file: !36, line: 1944, baseType: !494, size: 8, offset: 4336)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !269, file: !36, line: 1945, baseType: !494, size: 8, offset: 4344)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !269, file: !36, line: 1952, baseType: !7, size: 32, offset: 4352)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !269, file: !36, line: 1953, baseType: !7, size: 32, offset: 4384)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !269, file: !36, line: 1954, baseType: !7, size: 32, offset: 4416)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !269, file: !36, line: 1955, baseType: !477, size: 16, offset: 4448)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !269, file: !36, line: 1956, baseType: !477, size: 16, offset: 4464)
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !269, file: !36, line: 1957, baseType: !494, size: 8, offset: 4480)
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !269, file: !36, line: 1958, baseType: !494, size: 8, offset: 4488)
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !269, file: !36, line: 1960, baseType: !477, size: 16, offset: 4496)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !269, file: !36, line: 1961, baseType: !477, size: 16, offset: 4512)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !269, file: !36, line: 1964, baseType: !715, size: 256, offset: 4528)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !269, file: !36, line: 1965, baseType: !494, size: 8, offset: 4784)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !269, file: !36, line: 1966, baseType: !494, size: 8, offset: 4792)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !269, file: !36, line: 1967, baseType: !494, size: 8, offset: 4800)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !269, file: !36, line: 1968, baseType: !494, size: 8, offset: 4808)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !269, file: !36, line: 1970, baseType: !477, size: 16, offset: 4816)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !269, file: !36, line: 1971, baseType: !477, size: 16, offset: 4832)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !269, file: !36, line: 1972, baseType: !477, size: 16, offset: 4848)
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !269, file: !36, line: 1973, baseType: !729, offset: 4864)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !269, file: !36, line: 1975, baseType: !8435, size: 192, offset: 4864)
!8435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !36, line: 224, size: 192, elements: !8436)
!8436 = !{!8437, !8438}
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8435, file: !36, line: 225, baseType: !289, size: 128)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8435, file: !36, line: 226, baseType: !37, size: 32, offset: 128)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !269, file: !36, line: 1976, baseType: !8435, size: 192, offset: 5056)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !269, file: !36, line: 1977, baseType: !8435, size: 192, offset: 5248)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !269, file: !36, line: 1980, baseType: !3815, size: 64, offset: 5440)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !269, file: !36, line: 1985, baseType: !7, size: 32, offset: 5504)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !269, file: !36, line: 1986, baseType: !7, size: 32, offset: 5536)
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !269, file: !36, line: 1987, baseType: !540, size: 8, offset: 5568)
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !269, file: !36, line: 1996, baseType: !8446, size: 64, offset: 5632)
!8446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8447, size: 64)
!8447 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !36, line: 1996, flags: DIFlagFwdDecl)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !269, file: !36, line: 2007, baseType: !8449, size: 64, offset: 5696)
!8449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8450, size: 64)
!8450 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !36, line: 2007, flags: DIFlagFwdDecl)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !269, file: !36, line: 2011, baseType: !8452, size: 64, offset: 5760)
!8452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8453, size: 64)
!8453 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !36, line: 2011, flags: DIFlagFwdDecl)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !269, file: !36, line: 2015, baseType: !8455, size: 64, offset: 5824)
!8455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8456, size: 64)
!8456 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !36, line: 62, flags: DIFlagFwdDecl)
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !269, file: !36, line: 2016, baseType: !8458, size: 64, offset: 5888)
!8458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8459, size: 64)
!8459 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !36, line: 64, flags: DIFlagFwdDecl)
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !269, file: !36, line: 2025, baseType: !7326, size: 64, offset: 5952)
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !269, file: !36, line: 2027, baseType: !8462, size: 64, offset: 6016)
!8462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8463, size: 64)
!8463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !36, line: 736, size: 1536, elements: !8464)
!8464 = !{!8465, !8466, !8467}
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8463, file: !36, line: 741, baseType: !3807, size: 512)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8463, file: !36, line: 742, baseType: !295, size: 64, offset: 512)
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !8463, file: !36, line: 743, baseType: !8468, size: 512, align: 512, offset: 1024)
!8468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !7824, line: 57, size: 512, align: 512, elements: !8469)
!8469 = !{!8470, !8471, !8472, !8473}
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8468, file: !7824, line: 58, baseType: !295, size: 64)
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !8468, file: !7824, line: 59, baseType: !707, size: 32, offset: 64)
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !8468, file: !7824, line: 60, baseType: !707, size: 32, offset: 96)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8468, file: !7824, line: 61, baseType: !7832, size: 64, offset: 128)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !269, file: !36, line: 2028, baseType: !7, size: 32, offset: 6080)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !269, file: !36, line: 2029, baseType: !7, size: 32, offset: 6112)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !269, file: !36, line: 2031, baseType: !2909, size: 64, offset: 6144)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !269, file: !36, line: 2032, baseType: !317, size: 64, offset: 6208)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !269, file: !36, line: 2033, baseType: !37, size: 32, offset: 6272)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !269, file: !36, line: 2034, baseType: !8480, size: 64, offset: 6336)
!8480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8481, size: 64)
!8481 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !36, line: 430, baseType: !8482)
!8482 = !DISubroutineType(types: !8483)
!8483 = !{!8484, !8485}
!8484 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !36, line: 429, baseType: !262)
!8485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !269, file: !36, line: 2035, baseType: !570, size: 64, offset: 6400)
!8487 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !269, file: !36, line: 2040, baseType: !8488, size: 64, offset: 6464)
!8488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8489, size: 64)
!8489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !36, line: 584, size: 1600, elements: !8490)
!8490 = !{!8491, !8492, !8870, !8871, !8872, !8873, !8874, !8875, !8876, !8877, !8878, !8879}
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8489, file: !36, line: 588, baseType: !295, size: 64)
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !8489, file: !36, line: 589, baseType: !8493, size: 64, offset: 64)
!8493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8494, size: 64)
!8494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !8495, line: 57, size: 2048, elements: !8496)
!8495 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!8496 = !{!8497, !8501, !8505, !8506, !8507, !8810, !8830, !8831, !8832, !8833, !8834, !8837, !8847, !8848, !8849, !8850, !8851, !8858, !8859, !8860, !8861, !8862, !8863, !8864, !8865, !8866, !8867, !8868}
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8494, file: !8495, line: 58, baseType: !8498, size: 64)
!8498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8499, size: 64)
!8499 = !DISubroutineType(types: !8500)
!8500 = !{!37, !420, !8493, !8485}
!8501 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8494, file: !8495, line: 61, baseType: !8502, size: 64, offset: 64)
!8502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8503, size: 64)
!8503 = !DISubroutineType(types: !8504)
!8504 = !{!420, !8493}
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8494, file: !8495, line: 62, baseType: !7, size: 32, offset: 128)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !8494, file: !8495, line: 82, baseType: !707, size: 32, offset: 160)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8494, file: !8495, line: 83, baseType: !8508, size: 64, offset: 192)
!8508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8509, size: 64)
!8509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8510)
!8510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !8495, line: 238, size: 1344, elements: !8511)
!8511 = !{!8512, !8514, !8770, !8771, !8772, !8773, !8774, !8775, !8776, !8780, !8784, !8785, !8786, !8787, !8791, !8795, !8799, !8803, !8804, !8808, !8809}
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8510, file: !8495, line: 239, baseType: !8513, size: 64)
!8513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8510, size: 64)
!8514 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !8510, file: !8495, line: 240, baseType: !8515, size: 64, offset: 64)
!8515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8516, size: 64)
!8516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8517)
!8517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !8495, line: 198, size: 896, elements: !8518)
!8518 = !{!8519, !8520, !8535, !8540, !8544, !8548, !8552, !8556, !8560, !8566, !8733, !8737, !8738, !8742}
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8517, file: !8495, line: 199, baseType: !7, size: 32)
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !8517, file: !8495, line: 201, baseType: !8521, size: 64, offset: 64)
!8521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8522, size: 64)
!8522 = !DISubroutineType(types: !8523)
!8523 = !{!8488, !8493, !8524}
!8524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8525, size: 64)
!8525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !8526, line: 577, size: 160, elements: !8527)
!8526 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!8527 = !{!8528, !8529, !8530, !8531, !8532, !8533, !8534}
!8528 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !8525, file: !8526, line: 578, baseType: !494, size: 8)
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !8525, file: !8526, line: 579, baseType: !494, size: 8, offset: 8)
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !8525, file: !8526, line: 580, baseType: !477, size: 16, offset: 16)
!8531 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !8525, file: !8526, line: 581, baseType: !37, size: 32, offset: 32)
!8532 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !8525, file: !8526, line: 582, baseType: !468, size: 32, offset: 64)
!8533 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !8525, file: !8526, line: 583, baseType: !468, size: 32, offset: 96)
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !8525, file: !8526, line: 588, baseType: !468, size: 32, offset: 128)
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !8517, file: !8495, line: 202, baseType: !8536, size: 64, offset: 128)
!8536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8537, size: 64)
!8537 = !DISubroutineType(types: !8538)
!8538 = !{!37, !8493, !317, !8493, !8539, !2444}
!8539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8493, size: 64)
!8540 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !8517, file: !8495, line: 205, baseType: !8541, size: 64, offset: 192)
!8541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8542, size: 64)
!8542 = !DISubroutineType(types: !8543)
!8543 = !{!8493, !8493, !317}
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !8517, file: !8495, line: 206, baseType: !8545, size: 64, offset: 256)
!8545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8546, size: 64)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{null, !8493, !317}
!8548 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !8517, file: !8495, line: 209, baseType: !8549, size: 64, offset: 320)
!8549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8550, size: 64)
!8550 = !DISubroutineType(types: !8551)
!8551 = !{!317, !8493, !707}
!8552 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8517, file: !8495, line: 210, baseType: !8553, size: 64, offset: 384)
!8553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8554, size: 64)
!8554 = !DISubroutineType(types: !8555)
!8555 = !{!37, !8493, !707, !707, !7587, !2427, !2444}
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !8517, file: !8495, line: 213, baseType: !8557, size: 64, offset: 448)
!8557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8558, size: 64)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{!37, !8493, !317}
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !8517, file: !8495, line: 214, baseType: !8561, size: 64, offset: 512)
!8561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8562, size: 64)
!8562 = !DISubroutineType(types: !8563)
!8563 = !{null, !8493, !8564}
!8564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8565, size: 64)
!8565 = !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !8495, line: 24, flags: DIFlagFwdDecl)
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !8517, file: !8495, line: 217, baseType: !8567, size: 64, offset: 576)
!8567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8568, size: 64)
!8568 = !DISubroutineType(types: !8569)
!8569 = !{!8570, !8493, !317, !2444}
!8570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8571, size: 64)
!8571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !8495, line: 411, size: 9920, elements: !8572)
!8572 = !{!8573, !8574, !8575, !8576, !8577, !8578, !8579, !8580, !8581, !8586, !8587, !8588, !8589, !8590, !8591, !8729, !8730, !8732}
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8571, file: !8495, line: 415, baseType: !954, size: 192)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !8571, file: !8495, line: 416, baseType: !289, size: 128, offset: 192)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8571, file: !8495, line: 417, baseType: !707, size: 32, offset: 320)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !8571, file: !8495, line: 418, baseType: !707, size: 32, offset: 352)
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8571, file: !8495, line: 419, baseType: !1271, size: 32, offset: 384)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !8571, file: !8495, line: 420, baseType: !1962, size: 64, offset: 448)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8571, file: !8495, line: 421, baseType: !8493, size: 64, offset: 512)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !8571, file: !8495, line: 422, baseType: !1162, size: 256, offset: 576)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !8571, file: !8495, line: 423, baseType: !8582, size: 128, offset: 832)
!8582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !8583, line: 430, size: 128, elements: !8584)
!8583 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!8584 = !{!8585}
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !8582, file: !8583, line: 431, baseType: !289, size: 128)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !8571, file: !8495, line: 424, baseType: !289, size: 128, offset: 960)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !8571, file: !8495, line: 425, baseType: !540, size: 8, offset: 1088)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !8571, file: !8495, line: 426, baseType: !388, size: 32, offset: 1120)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !8571, file: !8495, line: 427, baseType: !7, size: 32, offset: 1152)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !8571, file: !8495, line: 428, baseType: !7, size: 32, offset: 1184)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !8571, file: !8495, line: 432, baseType: !8592, size: 192, offset: 1216)
!8592 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8571, file: !8495, line: 429, size: 192, elements: !8593)
!8593 = !{!8594, !8728}
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !8592, file: !8495, line: 430, baseType: !8595, size: 64)
!8595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8596, size: 64)
!8596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !8495, line: 395, size: 832, elements: !8597)
!8597 = !{!8598, !8599, !8718, !8719, !8720, !8721, !8722, !8723, !8724, !8725, !8726, !8727}
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !8596, file: !8495, line: 397, baseType: !954, size: 192)
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !8596, file: !8495, line: 398, baseType: !8600, size: 64, offset: 192)
!8600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8601, size: 64)
!8601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !8495, line: 356, size: 768, elements: !8602)
!8602 = !{!8603, !8604, !8605, !8637, !8638, !8639, !8640, !8712, !8713, !8714, !8715, !8716, !8717}
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8601, file: !8495, line: 358, baseType: !8600, size: 64)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !8601, file: !8495, line: 359, baseType: !570, size: 64, offset: 64)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !8601, file: !8495, line: 362, baseType: !8606, size: 64, offset: 128)
!8606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8607, size: 64)
!8607 = !DISubroutineType(types: !8608)
!8608 = !{!37, !420, !8609, !8611}
!8609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8610, size: 64)
!8610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8601)
!8611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8612, size: 64)
!8612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !8495, line: 275, size: 128, elements: !8613)
!8613 = !{!8614}
!8614 = !DIDerivedType(tag: DW_TAG_member, scope: !8612, file: !8495, line: 276, baseType: !8615, size: 128)
!8615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8612, file: !8495, line: 276, size: 128, elements: !8616)
!8616 = !{!8617, !8622, !8623}
!8617 = !DIDerivedType(tag: DW_TAG_member, scope: !8615, file: !8495, line: 277, baseType: !8618, size: 128)
!8618 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8615, file: !8495, line: 277, size: 128, elements: !8619)
!8619 = !{!8620, !8621}
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !8618, file: !8495, line: 278, baseType: !317, size: 64)
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !8618, file: !8495, line: 279, baseType: !707, size: 32, offset: 64)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !8615, file: !8495, line: 281, baseType: !8609, size: 64)
!8623 = !DIDerivedType(tag: DW_TAG_member, scope: !8615, file: !8495, line: 284, baseType: !8624, size: 128)
!8624 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8615, file: !8495, line: 284, size: 128, elements: !8625)
!8625 = !{!8626, !8627}
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !8624, file: !8495, line: 285, baseType: !540, size: 8)
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !8624, file: !8495, line: 286, baseType: !8628, size: 64, offset: 64)
!8628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8629, size: 64)
!8629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !8630, line: 59, size: 160, elements: !8631)
!8630 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!8631 = !{!8632, !8633, !8634, !8635, !8636}
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !8629, file: !8630, line: 60, baseType: !468, size: 32)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !8629, file: !8630, line: 61, baseType: !468, size: 32, offset: 32)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !8629, file: !8630, line: 62, baseType: !468, size: 32, offset: 64)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !8629, file: !8630, line: 63, baseType: !468, size: 32, offset: 96)
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !8629, file: !8630, line: 64, baseType: !468, size: 32, offset: 128)
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !8601, file: !8495, line: 365, baseType: !489, size: 16, offset: 192)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8601, file: !8495, line: 368, baseType: !707, size: 32, offset: 224)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8601, file: !8495, line: 369, baseType: !570, size: 64, offset: 256)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8601, file: !8495, line: 370, baseType: !8641, size: 64, offset: 320)
!8641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8642, size: 64)
!8642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8643)
!8643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !8495, line: 293, size: 1536, elements: !8644)
!8644 = !{!8645, !8646, !8647, !8648, !8652, !8656, !8660, !8664, !8668, !8672, !8676, !8682, !8690, !8691, !8692, !8696, !8700, !8701, !8705, !8706, !8710, !8711}
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8643, file: !8495, line: 294, baseType: !289, size: 128)
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !8643, file: !8495, line: 295, baseType: !272, size: 128, offset: 128)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !8643, file: !8495, line: 297, baseType: !8606, size: 64, offset: 256)
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8643, file: !8495, line: 300, baseType: !8649, size: 64, offset: 320)
!8649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8650, size: 64)
!8650 = !DISubroutineType(types: !8651)
!8651 = !{!37, !8600}
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !8643, file: !8495, line: 301, baseType: !8653, size: 64, offset: 384)
!8653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8654, size: 64)
!8654 = !DISubroutineType(types: !8655)
!8655 = !{null, !8600, !540, !2444}
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !8643, file: !8495, line: 304, baseType: !8657, size: 64, offset: 448)
!8657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8658, size: 64)
!8658 = !DISubroutineType(types: !8659)
!8659 = !{!570, !8600, !707}
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !8643, file: !8495, line: 305, baseType: !8661, size: 64, offset: 512)
!8661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8662, size: 64)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{null, !8600, !570}
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8643, file: !8495, line: 306, baseType: !8665, size: 64, offset: 576)
!8665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8666, size: 64)
!8666 = !DISubroutineType(types: !8667)
!8667 = !{!37, !1962, !420, !8600, !317, !707, !7587, !3480, !540, !540, !2444}
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !8643, file: !8495, line: 311, baseType: !8669, size: 64, offset: 640)
!8669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8670, size: 64)
!8670 = !DISubroutineType(types: !8671)
!8671 = !{!37, !8600, !570, !6701, !540, !2444}
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !8643, file: !8495, line: 314, baseType: !8673, size: 64, offset: 704)
!8673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8674, size: 64)
!8674 = !DISubroutineType(types: !8675)
!8675 = !{!540, !8600}
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !8643, file: !8495, line: 315, baseType: !8677, size: 64, offset: 768)
!8677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8678, size: 64)
!8678 = !DISubroutineType(types: !8679)
!8679 = !{null, !8600, !8680, !540}
!8680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8681, size: 64)
!8681 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !8495, line: 25, flags: DIFlagFwdDecl)
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !8643, file: !8495, line: 317, baseType: !8683, size: 64, offset: 832)
!8683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8684, size: 64)
!8684 = !DISubroutineType(types: !8685)
!8685 = !{!37, !8600, !540, !8686, !570, !2444}
!8686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8687, size: 64)
!8687 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !8583, line: 450, baseType: !8688)
!8688 = !DISubroutineType(types: !8689)
!8689 = !{!37, !42, !570, !570}
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !8643, file: !8495, line: 320, baseType: !8661, size: 64, offset: 896)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !8643, file: !8495, line: 322, baseType: !8661, size: 64, offset: 960)
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !8643, file: !8495, line: 324, baseType: !8693, size: 64, offset: 1024)
!8693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8694, size: 64)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{null, !570, !707, !317, !570, !317}
!8696 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !8643, file: !8495, line: 326, baseType: !8697, size: 64, offset: 1088)
!8697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8698, size: 64)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{!570, !1962, !8595, !7587, !2444}
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !8643, file: !8495, line: 330, baseType: !3290, size: 64, offset: 1152)
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8643, file: !8495, line: 333, baseType: !8702, size: 64, offset: 1216)
!8702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8703, size: 64)
!8703 = !DISubroutineType(types: !8704)
!8704 = !{!37, !1962, !8600, !570, !420, !8524, !540}
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !8643, file: !8495, line: 336, baseType: !8702, size: 64, offset: 1280)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !8643, file: !8495, line: 340, baseType: !8707, size: 64, offset: 1344)
!8707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8708, size: 64)
!8708 = !DISubroutineType(types: !8709)
!8709 = !{!37, !420, !1962, !570}
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8643, file: !8495, line: 344, baseType: !852, size: 64, offset: 1408)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8643, file: !8495, line: 345, baseType: !37, size: 32, offset: 1472)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !8601, file: !8495, line: 371, baseType: !8595, size: 64, offset: 384)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8601, file: !8495, line: 375, baseType: !729, offset: 448)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !8601, file: !8495, line: 376, baseType: !540, size: 8, offset: 448)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8601, file: !8495, line: 377, baseType: !1271, size: 32, offset: 480)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8601, file: !8495, line: 378, baseType: !304, size: 128, align: 64, offset: 512)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !8601, file: !8495, line: 379, baseType: !281, size: 128, offset: 640)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8596, file: !8495, line: 399, baseType: !289, size: 128, offset: 256)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !8596, file: !8495, line: 400, baseType: !8570, size: 64, offset: 384)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8596, file: !8495, line: 401, baseType: !707, size: 32, offset: 448)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8596, file: !8495, line: 402, baseType: !7, size: 32, offset: 480)
!8722 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !8596, file: !8495, line: 403, baseType: !7, size: 32, offset: 512)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !8596, file: !8495, line: 404, baseType: !540, size: 8, offset: 544)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !8596, file: !8495, line: 405, baseType: !540, size: 8, offset: 552)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !8596, file: !8495, line: 406, baseType: !8641, size: 64, offset: 576)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !8596, file: !8495, line: 407, baseType: !570, size: 64, offset: 640)
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8596, file: !8495, line: 408, baseType: !304, size: 128, align: 64, offset: 704)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !8592, file: !8495, line: 431, baseType: !289, size: 128, offset: 64)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8571, file: !8495, line: 433, baseType: !304, size: 128, align: 64, offset: 1408)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !8571, file: !8495, line: 434, baseType: !8731, size: 8192, offset: 1536)
!8731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 8192, elements: !2991)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !8571, file: !8495, line: 435, baseType: !954, size: 192, offset: 9728)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !8517, file: !8495, line: 220, baseType: !8734, size: 64, offset: 640)
!8734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8735, size: 64)
!8735 = !DISubroutineType(types: !8736)
!8736 = !{!317, !8493, !317, !707}
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !8517, file: !8495, line: 222, baseType: !8545, size: 64, offset: 704)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8517, file: !8495, line: 225, baseType: !8739, size: 64, offset: 768)
!8739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8740, size: 64)
!8740 = !DISubroutineType(types: !8741)
!8741 = !{!37, !8493, !317, !420, !8524}
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8517, file: !8495, line: 227, baseType: !8743, size: 64, offset: 832)
!8743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8744, size: 64)
!8744 = !DISubroutineType(types: !8745)
!8745 = !{!37, !8493, !317, !8746}
!8746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8747, size: 64)
!8747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !8748, line: 23, size: 768, elements: !8749)
!8748 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!8749 = !{!8750, !8751, !8752, !8753, !8754, !8755, !8756, !8757, !8758}
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8747, file: !8748, line: 24, baseType: !4097, size: 64)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !8747, file: !8748, line: 25, baseType: !420, size: 64, offset: 64)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8747, file: !8748, line: 26, baseType: !7588, size: 64, offset: 128)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !8747, file: !8748, line: 29, baseType: !37, size: 32, offset: 192)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !8747, file: !8748, line: 30, baseType: !37, size: 32, offset: 224)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !8747, file: !8748, line: 31, baseType: !37, size: 32, offset: 256)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !8747, file: !8748, line: 32, baseType: !570, size: 64, offset: 320)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !8747, file: !8748, line: 33, baseType: !37, size: 32, offset: 384)
!8758 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !8747, file: !8748, line: 34, baseType: !8759, size: 320, offset: 448)
!8759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !8760, line: 34, size: 320, elements: !8761)
!8760 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!8761 = !{!8762, !8763, !8764, !8765, !8766, !8767, !8768, !8769}
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !8759, file: !8760, line: 35, baseType: !338, size: 64)
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !8759, file: !8760, line: 36, baseType: !468, size: 32, offset: 64)
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !8759, file: !8760, line: 37, baseType: !468, size: 32, offset: 96)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !8759, file: !8760, line: 38, baseType: !468, size: 32, offset: 128)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !8759, file: !8760, line: 40, baseType: !468, size: 32, offset: 160)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !8759, file: !8760, line: 41, baseType: !468, size: 32, offset: 192)
!8768 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !8759, file: !8760, line: 42, baseType: !468, size: 32, offset: 224)
!8769 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !8759, file: !8760, line: 43, baseType: !468, size: 32, offset: 256)
!8770 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8510, file: !8495, line: 241, baseType: !272, size: 128, offset: 128)
!8771 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !8510, file: !8495, line: 242, baseType: !37, size: 32, offset: 256)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !8510, file: !8495, line: 243, baseType: !7, size: 32, offset: 288)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8510, file: !8495, line: 245, baseType: !8498, size: 64, offset: 320)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8510, file: !8495, line: 248, baseType: !8502, size: 64, offset: 384)
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !8510, file: !8495, line: 249, baseType: !8502, size: 64, offset: 448)
!8776 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8510, file: !8495, line: 251, baseType: !8777, size: 64, offset: 512)
!8777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8778, size: 64)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{!37, !8493, !7588, !2444}
!8780 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8510, file: !8495, line: 253, baseType: !8781, size: 64, offset: 576)
!8781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8782, size: 64)
!8782 = !DISubroutineType(types: !8783)
!8783 = !{null, !8493}
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !8510, file: !8495, line: 254, baseType: !8781, size: 64, offset: 640)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8510, file: !8495, line: 255, baseType: !8777, size: 64, offset: 704)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !8510, file: !8495, line: 258, baseType: !8781, size: 64, offset: 768)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !8510, file: !8495, line: 259, baseType: !8788, size: 64, offset: 832)
!8788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8789, size: 64)
!8789 = !DISubroutineType(types: !8790)
!8790 = !{!37, !8493, !7}
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8510, file: !8495, line: 261, baseType: !8792, size: 64, offset: 896)
!8792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8793, size: 64)
!8793 = !DISubroutineType(types: !8794)
!8794 = !{!37, !8493, !420}
!8795 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8510, file: !8495, line: 262, baseType: !8796, size: 64, offset: 960)
!8796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8797, size: 64)
!8797 = !DISubroutineType(types: !8798)
!8798 = !{!37, !8493, !8746}
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !8510, file: !8495, line: 264, baseType: !8800, size: 64, offset: 1024)
!8800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8801, size: 64)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{null, !8493, !707}
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !8510, file: !8495, line: 266, baseType: !8800, size: 64, offset: 1088)
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !8510, file: !8495, line: 268, baseType: !8805, size: 64, offset: 1152)
!8805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8806, size: 64)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{!707, !8493}
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !8510, file: !8495, line: 269, baseType: !8805, size: 64, offset: 1216)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8510, file: !8495, line: 271, baseType: !852, size: 64, offset: 1280)
!8810 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !8494, file: !8495, line: 84, baseType: !8811, size: 64, offset: 256)
!8811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8812, size: 64)
!8812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !8495, line: 41, size: 512, elements: !8813)
!8813 = !{!8814, !8815, !8816, !8827, !8828}
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8812, file: !8495, line: 42, baseType: !304, size: 128, align: 64)
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8812, file: !8495, line: 43, baseType: !289, size: 128, offset: 128)
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !8812, file: !8495, line: 44, baseType: !8817, size: 192, offset: 256)
!8817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !8760, line: 102, size: 192, elements: !8818)
!8818 = !{!8819, !8820, !8821, !8822, !8823, !8824, !8825, !8826}
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !8817, file: !8760, line: 103, baseType: !494, size: 8)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !8817, file: !8760, line: 104, baseType: !494, size: 8, offset: 8)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !8817, file: !8760, line: 105, baseType: !1246, size: 16, offset: 16)
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !8817, file: !8760, line: 106, baseType: !37, size: 32, offset: 32)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !8817, file: !8760, line: 107, baseType: !7, size: 32, offset: 64)
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !8817, file: !8760, line: 108, baseType: !7, size: 32, offset: 96)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !8817, file: !8760, line: 109, baseType: !7, size: 32, offset: 128)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !8817, file: !8760, line: 110, baseType: !7, size: 32, offset: 160)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8812, file: !8495, line: 45, baseType: !37, size: 32, offset: 448)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8812, file: !8495, line: 46, baseType: !8829, offset: 480)
!8829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, elements: !314)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !8494, file: !8495, line: 85, baseType: !281, size: 128, offset: 320)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !8494, file: !8495, line: 86, baseType: !707, size: 32, offset: 448)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8494, file: !8495, line: 87, baseType: !707, size: 32, offset: 480)
!8833 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !8494, file: !8495, line: 89, baseType: !8488, size: 64, offset: 512)
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !8494, file: !8495, line: 91, baseType: !8835, size: 64, offset: 576)
!8835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8836, size: 64)
!8836 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !8748, line: 21, flags: DIFlagFwdDecl)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !8494, file: !8495, line: 92, baseType: !8838, size: 64, offset: 640)
!8838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8839, size: 64)
!8839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !8748, line: 16, size: 128, align: 128, elements: !8840)
!8840 = !{!8841, !8846}
!8841 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !8839, file: !8748, line: 17, baseType: !8842, size: 128)
!8842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !8748, line: 11, size: 128, elements: !8843)
!8843 = !{!8844, !8845}
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !8842, file: !8748, line: 12, baseType: !338, size: 64)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !8842, file: !8748, line: 13, baseType: !338, size: 64, offset: 64)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !8839, file: !8748, line: 18, baseType: !2058, offset: 128)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !8494, file: !8495, line: 93, baseType: !8628, size: 64, offset: 704)
!8848 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8494, file: !8495, line: 94, baseType: !37, size: 32, offset: 768)
!8849 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8494, file: !8495, line: 95, baseType: !1271, size: 32, offset: 800)
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !8494, file: !8495, line: 100, baseType: !2762, size: 192, offset: 832)
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8494, file: !8495, line: 101, baseType: !8852, size: 192, offset: 1024)
!8852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !8495, line: 50, size: 192, elements: !8853)
!8853 = !{!8854, !8855, !8856, !8857}
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8852, file: !8495, line: 51, baseType: !420, size: 64)
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8852, file: !8495, line: 52, baseType: !420, size: 64, offset: 64)
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !8852, file: !8495, line: 53, baseType: !468, size: 32, offset: 128)
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8852, file: !8495, line: 54, baseType: !729, offset: 160)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !8494, file: !8495, line: 102, baseType: !8842, size: 128, offset: 1216)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !8494, file: !8495, line: 103, baseType: !684, size: 32, offset: 1344)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !8494, file: !8495, line: 104, baseType: !8629, size: 160, offset: 1376)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8494, file: !8495, line: 105, baseType: !317, size: 64, offset: 1536)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !8494, file: !8495, line: 106, baseType: !8493, size: 64, offset: 1600)
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !8494, file: !8495, line: 107, baseType: !2762, size: 192, offset: 1664)
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !8494, file: !8495, line: 109, baseType: !729, offset: 1856)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !8494, file: !8495, line: 110, baseType: !729, offset: 1856)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !8494, file: !8495, line: 113, baseType: !540, size: 8, offset: 1856)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8494, file: !8495, line: 114, baseType: !304, size: 128, align: 64, offset: 1920)
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !8494, file: !8495, line: 117, baseType: !8869, align: 512, offset: 2048)
!8869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, elements: !314)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !8489, file: !36, line: 590, baseType: !8493, size: 64, offset: 128)
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8489, file: !36, line: 592, baseType: !3807, size: 512, offset: 192)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !8489, file: !36, line: 597, baseType: !317, size: 64, offset: 704)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !8489, file: !36, line: 602, baseType: !317, size: 64, offset: 768)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !8489, file: !36, line: 605, baseType: !295, size: 64, offset: 832)
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !8489, file: !36, line: 612, baseType: !729, offset: 896)
!8876 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !8489, file: !36, line: 613, baseType: !37, size: 32, offset: 896)
!8877 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !8489, file: !36, line: 617, baseType: !317, size: 64, offset: 960)
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8489, file: !36, line: 619, baseType: !317, size: 64, offset: 1024)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !8489, file: !36, line: 622, baseType: !8880, size: 512, offset: 1088)
!8880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !8881, line: 43, size: 512, elements: !8882)
!8881 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!8882 = !{!8883, !8884, !8885, !8886, !8887, !8888, !8889, !8890, !8891, !8892, !8893, !8894, !8895}
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !8880, file: !8881, line: 45, baseType: !7, size: 32)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !8880, file: !8881, line: 46, baseType: !7, size: 32, offset: 32)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !8880, file: !8881, line: 47, baseType: !7, size: 32, offset: 64)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !8880, file: !8881, line: 51, baseType: !7, size: 32, offset: 96)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !8880, file: !8881, line: 52, baseType: !7, size: 32, offset: 128)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !8880, file: !8881, line: 54, baseType: !7, size: 32, offset: 160)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !8880, file: !8881, line: 55, baseType: !7, size: 32, offset: 192)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !8880, file: !8881, line: 56, baseType: !7, size: 32, offset: 224)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !8880, file: !8881, line: 58, baseType: !7, size: 32, offset: 256)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !8880, file: !8881, line: 59, baseType: !317, size: 64, offset: 320)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !8880, file: !8881, line: 62, baseType: !7, size: 32, offset: 384)
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !8880, file: !8881, line: 63, baseType: !7, size: 32, offset: 416)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !8880, file: !8881, line: 64, baseType: !7, size: 32, offset: 448)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !269, file: !36, line: 2045, baseType: !715, size: 256, offset: 6528)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !269, file: !36, line: 2049, baseType: !281, size: 128, offset: 6784)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !269, file: !36, line: 2054, baseType: !8488, size: 64, offset: 6912)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !269, file: !36, line: 2055, baseType: !7, size: 32, offset: 6976)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !269, file: !36, line: 2056, baseType: !7, size: 32, offset: 7008)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !269, file: !36, line: 2057, baseType: !8493, size: 64, offset: 7040)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !269, file: !36, line: 2058, baseType: !7, size: 32, offset: 7104)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !269, file: !36, line: 2059, baseType: !729, offset: 7136)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !269, file: !36, line: 2061, baseType: !8905, size: 64, offset: 7168)
!8905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8906, size: 64)
!8906 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !36, line: 879, flags: DIFlagFwdDecl)
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !269, file: !36, line: 2075, baseType: !2221, size: 320, offset: 7232)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !269, file: !36, line: 2076, baseType: !37, size: 32, offset: 7552)
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !269, file: !36, line: 2078, baseType: !707, size: 32, offset: 7584)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !269, file: !36, line: 2080, baseType: !289, size: 128, offset: 7616)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !269, file: !36, line: 2081, baseType: !539, size: 64, offset: 7744)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !269, file: !36, line: 2083, baseType: !289, size: 128, offset: 7808)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !269, file: !36, line: 2091, baseType: !268, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !269, file: !36, line: 2093, baseType: !540, size: 8, offset: 7944)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !269, file: !36, line: 2098, baseType: !8916, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!8916 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !269, file: !36, line: 2095, baseType: !7, size: 32, elements: !8917)
!8917 = !{!8918, !8919}
!8918 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!8919 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !269, file: !36, line: 2100, baseType: !540, size: 8, offset: 7968)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !269, file: !36, line: 2101, baseType: !410, size: 64, offset: 8000)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !269, file: !36, line: 2107, baseType: !2704, size: 64, offset: 8064)
!8923 = !DIDerivedType(tag: DW_TAG_member, scope: !269, file: !36, line: 2110, baseType: !8924, size: 64, offset: 8128)
!8924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !269, file: !36, line: 2110, size: 64, elements: !8925)
!8925 = !{!8926, !8927, !8948, !8957}
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !8924, file: !36, line: 2111, baseType: !570, size: 64)
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !8924, file: !36, line: 2112, baseType: !8928, size: 64)
!8928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8929, size: 64)
!8929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !36, line: 2542, size: 128, align: 128, elements: !8930)
!8930 = !{!8931, !8946, !8947}
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !8929, file: !36, line: 2543, baseType: !8932, size: 64)
!8932 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !2059, line: 79, baseType: !8933)
!8933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2059, line: 77, size: 64, elements: !8934)
!8934 = !{!8935}
!8935 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !8933, file: !2059, line: 78, baseType: !8936, size: 64)
!8936 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !8937, line: 26, baseType: !8938)
!8937 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!8938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8937, line: 24, size: 64, elements: !8939)
!8939 = !{!8940}
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !8938, file: !8937, line: 25, baseType: !8941, size: 64)
!8941 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !8942, line: 12, baseType: !8943)
!8942 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!8943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8942, line: 10, size: 64, elements: !8944)
!8944 = !{!8945}
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !8943, file: !8942, line: 11, baseType: !376, size: 64)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !8929, file: !36, line: 2544, baseType: !8932, size: 64, offset: 64)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !8929, file: !36, line: 2545, baseType: !2058, offset: 128)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !8924, file: !36, line: 2113, baseType: !8949, size: 64)
!8949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8950, size: 64)
!8950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !36, line: 2534, size: 256, align: 256, elements: !8951)
!8951 = !{!8952, !8953, !8954, !8955, !8956}
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !8950, file: !36, line: 2535, baseType: !336, size: 64)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !8950, file: !36, line: 2536, baseType: !336, size: 64, offset: 64)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !8950, file: !36, line: 2537, baseType: !336, size: 64, offset: 128)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !8950, file: !36, line: 2538, baseType: !336, size: 64, offset: 192)
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !8950, file: !36, line: 2539, baseType: !2058, offset: 256)
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !8924, file: !36, line: 2114, baseType: !8958, size: 64)
!8958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8959, size: 64)
!8959 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !36, line: 2114, flags: DIFlagFwdDecl)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !269, file: !36, line: 2124, baseType: !3803, size: 5568, offset: 8192)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !269, file: !36, line: 2125, baseType: !8962, size: 256, offset: 13760)
!8962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3885, size: 256, elements: !1202)
!8963 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !269, file: !36, line: 2126, baseType: !3885, size: 64, offset: 14016)
!8964 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !269, file: !36, line: 2128, baseType: !8965, size: 64, offset: 14080)
!8965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8966, size: 64)
!8966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8967)
!8967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !8968, line: 59, size: 1600, elements: !8969)
!8968 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!8969 = !{!8970, !8971, !8972, !8973, !8974, !8975, !8976, !8980, !8984, !8988, !8992, !8996, !9000, !9001, !9002, !9006, !9007, !9008, !9009, !9013, !9017, !9021, !9025, !9029}
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8967, file: !8968, line: 60, baseType: !289, size: 128)
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !8967, file: !8968, line: 62, baseType: !297, size: 64, offset: 128)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !8967, file: !8968, line: 64, baseType: !594, size: 64, offset: 192)
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8967, file: !8968, line: 65, baseType: !410, size: 64, offset: 256)
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !8967, file: !8968, line: 67, baseType: !7, size: 32, offset: 320)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !8967, file: !8968, line: 68, baseType: !2458, size: 64, offset: 384)
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !8967, file: !8968, line: 69, baseType: !8977, size: 64, offset: 448)
!8977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8978, size: 64)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{!37, !7587, !7587, !2444}
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !8967, file: !8968, line: 73, baseType: !8981, size: 64, offset: 512)
!8981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8982, size: 64)
!8982 = !DISubroutineType(types: !8983)
!8983 = !{!37, !1962, !295, !7587, !7587, !2444}
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !8967, file: !8968, line: 78, baseType: !8985, size: 64, offset: 576)
!8985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8986, size: 64)
!8986 = !DISubroutineType(types: !8987)
!8987 = !{!37, !295, !7587, !7587, !2444}
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !8967, file: !8968, line: 82, baseType: !8989, size: 64, offset: 640)
!8989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8990, size: 64)
!8990 = !DISubroutineType(types: !8991)
!8991 = !{null, !295, !292}
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !8967, file: !8968, line: 85, baseType: !8993, size: 64, offset: 704)
!8993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8994, size: 64)
!8994 = !DISubroutineType(types: !8995)
!8995 = !{!594, !2682}
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !8967, file: !8968, line: 86, baseType: !8997, size: 64, offset: 768)
!8997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8998, size: 64)
!8998 = !DISubroutineType(types: !8999)
!8999 = !{!37, !420, !2682}
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !8967, file: !8968, line: 89, baseType: !8993, size: 64, offset: 832)
!9001 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !8967, file: !8968, line: 90, baseType: !8997, size: 64, offset: 896)
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !8967, file: !8968, line: 92, baseType: !9003, size: 64, offset: 960)
!9003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9004, size: 64)
!9004 = !DISubroutineType(types: !9005)
!9005 = !{!7}
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !8967, file: !8968, line: 93, baseType: !9003, size: 64, offset: 1024)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !8967, file: !8968, line: 95, baseType: !7, size: 32, offset: 1088)
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !8967, file: !8968, line: 96, baseType: !2458, size: 64, offset: 1152)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !8967, file: !8968, line: 97, baseType: !9010, size: 64, offset: 1216)
!9010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9011, size: 64)
!9011 = !DISubroutineType(types: !9012)
!9012 = !{!37, !295, !295, !7587, !7587, !2444}
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !8967, file: !8968, line: 102, baseType: !9014, size: 64, offset: 1280)
!9014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9015, size: 64)
!9015 = !DISubroutineType(types: !9016)
!9016 = !{!594, !2682, !2682}
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !8967, file: !8968, line: 104, baseType: !9018, size: 64, offset: 1344)
!9018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9019, size: 64)
!9019 = !DISubroutineType(types: !9020)
!9020 = !{!37, !420, !2682, !2682}
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !8967, file: !8968, line: 107, baseType: !9022, size: 64, offset: 1408)
!9022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9023, size: 64)
!9023 = !DISubroutineType(types: !9024)
!9024 = !{!1962, !2682}
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !8967, file: !8968, line: 108, baseType: !9026, size: 64, offset: 1472)
!9026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9027, size: 64)
!9027 = !DISubroutineType(types: !9028)
!9028 = !{!594, !2682, !37}
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !8967, file: !8968, line: 110, baseType: !9030, size: 64, offset: 1536)
!9030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9031, size: 64)
!9031 = !DISubroutineType(types: !9032)
!9032 = !{!37, !420, !2682, !539, !37}
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !269, file: !36, line: 2132, baseType: !7, size: 32, offset: 14144)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !269, file: !36, line: 2134, baseType: !1038, size: 16, offset: 14176)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !269, file: !36, line: 2139, baseType: !1244, size: 16, offset: 14192)
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !269, file: !36, line: 2140, baseType: !9037, size: 512, offset: 14208)
!9037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9038, size: 512, elements: !274)
!9038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !36, line: 793, size: 32, elements: !9039)
!9039 = !{!9040, !9041}
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9038, file: !36, line: 794, baseType: !1038, size: 16)
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !9038, file: !36, line: 795, baseType: !1038, size: 16, offset: 16)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !269, file: !36, line: 2141, baseType: !9043, size: 128, offset: 14720)
!9043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 128, elements: !274)
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !269, file: !36, line: 2149, baseType: !9045, size: 64, offset: 14848)
!9045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9046, size: 64)
!9046 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !256, line: 536, flags: DIFlagFwdDecl)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !269, file: !36, line: 2150, baseType: !9048, size: 64, offset: 14912)
!9048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9049, size: 64)
!9049 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !36, line: 60, flags: DIFlagFwdDecl)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !269, file: !36, line: 2151, baseType: !9051, size: 64, offset: 14976)
!9051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !269, file: !36, line: 2152, baseType: !9051, size: 64, offset: 15040)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !269, file: !36, line: 2153, baseType: !540, size: 8, offset: 15104)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !269, file: !36, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !269, file: !36, line: 2156, baseType: !289, size: 128, offset: 15168)
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !269, file: !36, line: 2162, baseType: !9057, size: 64, offset: 15296)
!9057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9058, size: 64)
!9058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9059)
!9059 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !36, line: 68, flags: DIFlagFwdDecl)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !269, file: !36, line: 2163, baseType: !9061, size: 64, offset: 15360)
!9061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9062, size: 64)
!9062 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !36, line: 69, flags: DIFlagFwdDecl)
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !269, file: !36, line: 2166, baseType: !9064, size: 384, offset: 15424)
!9064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9065, size: 384, elements: !867)
!9065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !36, line: 889, size: 128, elements: !9066)
!9066 = !{!9067, !9068}
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !9065, file: !36, line: 890, baseType: !2909, size: 64)
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9065, file: !36, line: 891, baseType: !9069, size: 64, offset: 64)
!9069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9070, size: 64)
!9070 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !36, line: 880, flags: DIFlagFwdDecl)
!9071 = !{!9072, !9073, !9074, !9075, !9076, !9077}
!9072 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!9073 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!9074 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!9075 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!9076 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!9077 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!9078 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9079, line: 10, baseType: !7, size: 32, elements: !9080)
!9079 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!9080 = !{!9081, !9082}
!9081 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!9082 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!9083 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !9084, line: 305, baseType: !7, size: 32, elements: !9085)
!9084 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!9085 = !{!9086, !9087, !9088, !9089}
!9086 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!9087 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!9088 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!9089 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!9090 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !9091, line: 11, baseType: !7, size: 32, elements: !9092)
!9091 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!9092 = !{!9093, !9094, !9095}
!9093 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!9094 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!9095 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!9096 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1808, line: 30, baseType: !513, size: 64, elements: !9097)
!9097 = !{!9098, !9099, !9100, !9101, !9102, !9103, !9104, !9105, !9106, !9107, !9108, !9109, !9110, !9111, !9112, !9113, !9114, !9115, !9116, !9117, !9118, !9119, !9120, !9121, !9122, !9123, !9124, !9125, !9126}
!9098 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!9099 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!9100 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!9101 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!9102 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!9103 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!9104 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!9105 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!9106 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!9107 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!9108 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!9109 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!9110 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!9111 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!9112 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!9113 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!9114 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!9115 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!9116 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!9117 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!9118 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!9119 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!9120 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!9121 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!9122 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!9123 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!9124 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!9125 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!9126 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!9127 = !{!570, !9128, !317, !9432, !2427, !9673, !37, !468, !9675, !9134, !1990, !9457, !9152, !9677, !9678, !9680, !1460, !476, !9681, !9682, !9683, !9559, !9538, !852, !9617, !9688, !9464, !9702, !9703, !1257}
!9128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9129, size: 64)
!9129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hfc_multi", file: !9130, line: 138, size: 36480, elements: !9131)
!9130 = !DIFile(filename: "drivers/isdn/hardware/mISDN/hfc_multi.h", directory: "/home/lizy2001/genbc/linux")
!9131 = !{!9132, !9133, !9147, !9148, !9149, !9150, !9151, !9153, !9154, !9427, !9428, !9433, !9434, !9438, !9439, !9444, !9445, !9449, !9450, !9455, !9456, !9458, !9459, !9460, !9461, !9462, !9463, !9465, !9466, !9467, !9468, !9487, !9488, !9489, !9490, !9492, !9493, !9494, !9495, !9496, !9497, !9498, !9499, !9500, !9501, !9502, !9504, !9506, !9507, !9508, !9509, !9511, !9512, !9513, !9514, !9515, !9516, !9517, !9518, !9532, !9533, !9669}
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9129, file: !9130, line: 139, baseType: !289, size: 128)
!9133 = !DIDerivedType(tag: DW_TAG_member, name: "mtyp", scope: !9129, file: !9130, line: 140, baseType: !9134, size: 64, offset: 128)
!9134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9135, size: 64)
!9135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hm_map", file: !9130, line: 125, size: 384, elements: !9136)
!9136 = !{!9137, !9138, !9139, !9140, !9141, !9142, !9143, !9144, !9145, !9146}
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_name", scope: !9135, file: !9130, line: 126, baseType: !577, size: 64)
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "card_name", scope: !9135, file: !9130, line: 127, baseType: !577, size: 64, offset: 64)
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9135, file: !9130, line: 128, baseType: !37, size: 32, offset: 128)
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !9135, file: !9130, line: 129, baseType: !37, size: 32, offset: 160)
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "clock2", scope: !9135, file: !9130, line: 130, baseType: !37, size: 32, offset: 192)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "leds", scope: !9135, file: !9130, line: 131, baseType: !37, size: 32, offset: 224)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "opticalsupport", scope: !9135, file: !9130, line: 132, baseType: !37, size: 32, offset: 256)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "dip_type", scope: !9135, file: !9130, line: 133, baseType: !37, size: 32, offset: 288)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "io_mode", scope: !9135, file: !9130, line: 134, baseType: !37, size: 32, offset: 320)
!9146 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !9135, file: !9130, line: 135, baseType: !37, size: 32, offset: 352)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9129, file: !9130, line: 141, baseType: !37, size: 32, offset: 192)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "pcm", scope: !9129, file: !9130, line: 142, baseType: !37, size: 32, offset: 224)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "ctype", scope: !9129, file: !9130, line: 143, baseType: !37, size: 32, offset: 256)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !9129, file: !9130, line: 144, baseType: !37, size: 32, offset: 288)
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !9129, file: !9130, line: 146, baseType: !9152, size: 32, offset: 320)
!9152 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int", file: !282, line: 81, baseType: !7)
!9153 = !DIDerivedType(tag: DW_TAG_member, name: "irqcnt", scope: !9129, file: !9130, line: 147, baseType: !9152, size: 32, offset: 352)
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "pci_dev", scope: !9129, file: !9130, line: 148, baseType: !9155, size: 64, offset: 384)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9156, size: 64)
!9156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !9157, line: 309, size: 19264, elements: !9158)
!9157 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!9158 = !{!9159, !9160, !9229, !9230, !9231, !9232, !9243, !9244, !9245, !9246, !9247, !9248, !9249, !9250, !9251, !9252, !9253, !9254, !9255, !9256, !9257, !9258, !9259, !9324, !9325, !9326, !9328, !9329, !9330, !9331, !9332, !9333, !9334, !9335, !9336, !9337, !9338, !9339, !9340, !9341, !9342, !9343, !9344, !9345, !9346, !9347, !9350, !9351, !9352, !9353, !9354, !9355, !9356, !9357, !9361, !9362, !9363, !9364, !9365, !9366, !9367, !9368, !9369, !9370, !9371, !9372, !9373, !9374, !9375, !9376, !9377, !9378, !9379, !9380, !9381, !9382, !9383, !9384, !9385, !9386, !9387, !9388, !9389, !9390, !9391, !9392, !9393, !9394, !9395, !9396, !9397, !9398, !9400, !9401, !9403, !9404, !9405, !9406, !9408, !9409, !9410, !9413, !9420, !9421, !9422, !9423, !9424, !9425, !9426}
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !9156, file: !9157, line: 310, baseType: !289, size: 128)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9156, file: !9157, line: 311, baseType: !9161, size: 64, offset: 128)
!9161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9162, size: 64)
!9162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !9157, line: 605, size: 8064, elements: !9163)
!9163 = !{!9164, !9165, !9166, !9167, !9168, !9169, !9170, !9185, !9186, !9187, !9211, !9214, !9215, !9216, !9217, !9218, !9219, !9220, !9221, !9222, !9224, !9225, !9226, !9227, !9228}
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9162, file: !9157, line: 606, baseType: !289, size: 128)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9162, file: !9157, line: 607, baseType: !9161, size: 64, offset: 128)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9162, file: !9157, line: 608, baseType: !289, size: 128, offset: 192)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !9162, file: !9157, line: 609, baseType: !289, size: 128, offset: 320)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !9162, file: !9157, line: 610, baseType: !9155, size: 64, offset: 448)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !9162, file: !9157, line: 611, baseType: !289, size: 128, offset: 512)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !9162, file: !9157, line: 613, baseType: !9171, size: 256, offset: 640)
!9171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9172, size: 256, elements: !1202)
!9172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9173, size: 64)
!9173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !9174, line: 20, size: 512, elements: !9175)
!9174 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!9175 = !{!9176, !9178, !9179, !9180, !9181, !9182, !9183, !9184}
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9173, file: !9174, line: 21, baseType: !9177, size: 64)
!9177 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !282, line: 158, baseType: !5627)
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !9173, file: !9174, line: 22, baseType: !9177, size: 64, offset: 64)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9173, file: !9174, line: 23, baseType: !297, size: 64, offset: 128)
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9173, file: !9174, line: 24, baseType: !317, size: 64, offset: 192)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !9173, file: !9174, line: 25, baseType: !317, size: 64, offset: 256)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9173, file: !9174, line: 26, baseType: !9172, size: 64, offset: 320)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !9173, file: !9174, line: 26, baseType: !9172, size: 64, offset: 384)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !9173, file: !9174, line: 26, baseType: !9172, size: 64, offset: 448)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !9162, file: !9157, line: 614, baseType: !289, size: 128, offset: 896)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !9162, file: !9157, line: 615, baseType: !9173, size: 512, offset: 1024)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9162, file: !9157, line: 617, baseType: !9188, size: 64, offset: 1536)
!9188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9189, size: 64)
!9189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !9157, line: 731, size: 320, elements: !9190)
!9190 = !{!9191, !9195, !9199, !9203, !9207}
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !9189, file: !9157, line: 732, baseType: !9192, size: 64)
!9192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9193, size: 64)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{!37, !9161}
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !9189, file: !9157, line: 733, baseType: !9196, size: 64, offset: 64)
!9196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9197, size: 64)
!9197 = !DISubroutineType(types: !9198)
!9198 = !{null, !9161}
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !9189, file: !9157, line: 734, baseType: !9200, size: 64, offset: 128)
!9200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9201, size: 64)
!9201 = !DISubroutineType(types: !9202)
!9202 = !{!570, !9161, !7, !37}
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !9189, file: !9157, line: 735, baseType: !9204, size: 64, offset: 192)
!9204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9205, size: 64)
!9205 = !DISubroutineType(types: !9206)
!9206 = !{!37, !9161, !7, !37, !37, !1460}
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !9189, file: !9157, line: 736, baseType: !9208, size: 64, offset: 256)
!9208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9209, size: 64)
!9209 = !DISubroutineType(types: !9210)
!9210 = !{!37, !9161, !7, !37, !37, !707}
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !9162, file: !9157, line: 618, baseType: !9212, size: 64, offset: 1600)
!9212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9213, size: 64)
!9213 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !9157, line: 537, flags: DIFlagFwdDecl)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !9162, file: !9157, line: 619, baseType: !570, size: 64, offset: 1664)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !9162, file: !9157, line: 620, baseType: !1997, size: 64, offset: 1728)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !9162, file: !9157, line: 622, baseType: !494, size: 8, offset: 1792)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !9162, file: !9157, line: 623, baseType: !494, size: 8, offset: 1800)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !9162, file: !9157, line: 624, baseType: !494, size: 8, offset: 1808)
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !9162, file: !9157, line: 625, baseType: !494, size: 8, offset: 1816)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9162, file: !9157, line: 630, baseType: !7231, size: 384, offset: 1824)
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !9162, file: !9157, line: 632, baseType: !477, size: 16, offset: 2208)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !9162, file: !9157, line: 633, baseType: !9223, size: 16, offset: 2224)
!9223 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !9157, line: 237, baseType: !477)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !9162, file: !9157, line: 634, baseType: !4172, size: 64, offset: 2240)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9162, file: !9157, line: 635, baseType: !3803, size: 5568, offset: 2304)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !9162, file: !9157, line: 636, baseType: !3898, size: 64, offset: 7872)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !9162, file: !9157, line: 637, baseType: !3898, size: 64, offset: 7936)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !9162, file: !9157, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !9156, file: !9157, line: 312, baseType: !9161, size: 64, offset: 192)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !9156, file: !9157, line: 314, baseType: !570, size: 64, offset: 256)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !9156, file: !9157, line: 315, baseType: !1997, size: 64, offset: 320)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !9156, file: !9157, line: 316, baseType: !9233, size: 64, offset: 384)
!9233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9234, size: 64)
!9234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !9157, line: 69, size: 832, elements: !9235)
!9235 = !{!9236, !9237, !9238, !9241, !9242}
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9234, file: !9157, line: 70, baseType: !9161, size: 64)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9234, file: !9157, line: 71, baseType: !289, size: 128, offset: 64)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !9234, file: !9157, line: 72, baseType: !9239, size: 64, offset: 192)
!9239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9240, size: 64)
!9240 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !9157, line: 72, flags: DIFlagFwdDecl)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !9234, file: !9157, line: 73, baseType: !494, size: 8, offset: 256)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9234, file: !9157, line: 74, baseType: !3807, size: 512, offset: 320)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !9156, file: !9157, line: 318, baseType: !7, size: 32, offset: 448)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !9156, file: !9157, line: 319, baseType: !477, size: 16, offset: 480)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !9156, file: !9157, line: 320, baseType: !477, size: 16, offset: 496)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !9156, file: !9157, line: 321, baseType: !477, size: 16, offset: 512)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !9156, file: !9157, line: 322, baseType: !477, size: 16, offset: 528)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9156, file: !9157, line: 323, baseType: !7, size: 32, offset: 544)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !9156, file: !9157, line: 324, baseType: !1397, size: 8, offset: 576)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !9156, file: !9157, line: 325, baseType: !1397, size: 8, offset: 584)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !9156, file: !9157, line: 330, baseType: !1397, size: 8, offset: 592)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !9156, file: !9157, line: 331, baseType: !1397, size: 8, offset: 600)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !9156, file: !9157, line: 332, baseType: !1397, size: 8, offset: 608)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !9156, file: !9157, line: 333, baseType: !1397, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !9156, file: !9157, line: 334, baseType: !1397, size: 8, offset: 624)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !9156, file: !9157, line: 335, baseType: !1397, size: 8, offset: 632)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !9156, file: !9157, line: 336, baseType: !1038, size: 16, offset: 640)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !9156, file: !9157, line: 337, baseType: !2427, size: 64, offset: 704)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !9156, file: !9157, line: 339, baseType: !9260, size: 64, offset: 768)
!9260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9261, size: 64)
!9261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !9157, line: 858, size: 2048, elements: !9262)
!9262 = !{!9263, !9264, !9265, !9277, !9281, !9285, !9289, !9293, !9294, !9298, !9317, !9318, !9319}
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9261, file: !9157, line: 859, baseType: !289, size: 128)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9261, file: !9157, line: 860, baseType: !297, size: 64, offset: 128)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !9261, file: !9157, line: 861, baseType: !9266, size: 64, offset: 192)
!9266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9267, size: 64)
!9267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9268)
!9268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !4263, line: 38, size: 256, elements: !9269)
!9269 = !{!9270, !9271, !9272, !9273, !9274, !9275, !9276}
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !9268, file: !4263, line: 39, baseType: !468, size: 32)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !9268, file: !4263, line: 39, baseType: !468, size: 32, offset: 32)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !9268, file: !4263, line: 40, baseType: !468, size: 32, offset: 64)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !9268, file: !4263, line: 40, baseType: !468, size: 32, offset: 96)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9268, file: !4263, line: 41, baseType: !468, size: 32, offset: 128)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !9268, file: !4263, line: 41, baseType: !468, size: 32, offset: 160)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !9268, file: !4263, line: 42, baseType: !4277, size: 64, offset: 192)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !9261, file: !9157, line: 862, baseType: !9278, size: 64, offset: 256)
!9278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9279, size: 64)
!9279 = !DISubroutineType(types: !9280)
!9280 = !{!37, !9155, !9266}
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !9261, file: !9157, line: 863, baseType: !9282, size: 64, offset: 320)
!9282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9283, size: 64)
!9283 = !DISubroutineType(types: !9284)
!9284 = !{null, !9155}
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !9261, file: !9157, line: 864, baseType: !9286, size: 64, offset: 384)
!9286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9287, size: 64)
!9287 = !DISubroutineType(types: !9288)
!9288 = !{!37, !9155, !4288}
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !9261, file: !9157, line: 865, baseType: !9290, size: 64, offset: 448)
!9290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9291, size: 64)
!9291 = !DISubroutineType(types: !9292)
!9292 = !{!37, !9155}
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !9261, file: !9157, line: 866, baseType: !9282, size: 64, offset: 512)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !9261, file: !9157, line: 867, baseType: !9295, size: 64, offset: 576)
!9295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9296, size: 64)
!9296 = !DISubroutineType(types: !9297)
!9297 = !{!37, !9155, !37}
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !9261, file: !9157, line: 868, baseType: !9299, size: 64, offset: 640)
!9299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9300, size: 64)
!9300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9301)
!9301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !9157, line: 795, size: 384, elements: !9302)
!9302 = !{!9303, !9309, !9313, !9314, !9315, !9316}
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !9301, file: !9157, line: 797, baseType: !9304, size: 64)
!9304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9305, size: 64)
!9305 = !DISubroutineType(types: !9306)
!9306 = !{!9307, !9155, !9308}
!9307 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !9157, line: 772, baseType: !7)
!9308 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !9157, line: 180, baseType: !7)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !9301, file: !9157, line: 801, baseType: !9310, size: 64, offset: 64)
!9310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9311, size: 64)
!9311 = !DISubroutineType(types: !9312)
!9312 = !{!9307, !9155}
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !9301, file: !9157, line: 804, baseType: !9310, size: 64, offset: 128)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !9301, file: !9157, line: 807, baseType: !9282, size: 64, offset: 192)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !9301, file: !9157, line: 808, baseType: !9282, size: 64, offset: 256)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !9301, file: !9157, line: 811, baseType: !9282, size: 64, offset: 320)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !9261, file: !9157, line: 869, baseType: !3884, size: 64, offset: 704)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !9261, file: !9157, line: 870, baseType: !4245, size: 1152, offset: 768)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !9261, file: !9157, line: 871, baseType: !9320, size: 128, offset: 1920)
!9320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !9157, line: 759, size: 128, elements: !9321)
!9321 = !{!9322, !9323}
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9320, file: !9157, line: 760, baseType: !729)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9320, file: !9157, line: 761, baseType: !289, size: 128)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !9156, file: !9157, line: 340, baseType: !336, size: 64, offset: 832)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !9156, file: !9157, line: 346, baseType: !4477, size: 128, offset: 896)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !9156, file: !9157, line: 348, baseType: !9327, size: 32, offset: 1024)
!9327 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !9157, line: 155, baseType: !37)
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !9156, file: !9157, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !9156, file: !9157, line: 352, baseType: !1397, size: 8, offset: 1064)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !9156, file: !9157, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !9156, file: !9157, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !9156, file: !9157, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !9156, file: !9157, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !9156, file: !9157, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !9156, file: !9157, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !9156, file: !9157, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !9156, file: !9157, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !9156, file: !9157, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !9156, file: !9157, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !9156, file: !9157, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !9156, file: !9157, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!9342 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !9156, file: !9157, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!9343 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !9156, file: !9157, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!9344 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !9156, file: !9157, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !9156, file: !9157, line: 376, baseType: !7, size: 32, offset: 1120)
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !9156, file: !9157, line: 377, baseType: !7, size: 32, offset: 1152)
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !9156, file: !9157, line: 380, baseType: !9348, size: 64, offset: 1216)
!9348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9349, size: 64)
!9349 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !9157, line: 303, flags: DIFlagFwdDecl)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !9156, file: !9157, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !9156, file: !9157, line: 383, baseType: !37, size: 32, offset: 1312)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !9156, file: !9157, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !9156, file: !9157, line: 387, baseType: !9308, size: 32, offset: 1376)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9156, file: !9157, line: 388, baseType: !3803, size: 5568, offset: 1408)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !9156, file: !9157, line: 390, baseType: !37, size: 32, offset: 6976)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !9156, file: !9157, line: 396, baseType: !7, size: 32, offset: 7008)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !9156, file: !9157, line: 397, baseType: !9358, size: 8704, offset: 7040)
!9358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9173, size: 8704, elements: !9359)
!9359 = !{!9360}
!9360 = !DISubrange(count: 17)
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !9156, file: !9157, line: 399, baseType: !540, size: 8, offset: 15744)
!9362 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !9156, file: !9157, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !9156, file: !9157, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !9156, file: !9157, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !9156, file: !9157, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !9156, file: !9157, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!9367 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !9156, file: !9157, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !9156, file: !9157, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !9156, file: !9157, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !9156, file: !9157, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !9156, file: !9157, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !9156, file: !9157, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !9156, file: !9157, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !9156, file: !9157, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!9375 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !9156, file: !9157, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!9376 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !9156, file: !9157, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !9156, file: !9157, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !9156, file: !9157, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!9379 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !9156, file: !9157, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !9156, file: !9157, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !9156, file: !9157, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !9156, file: !9157, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !9156, file: !9157, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !9156, file: !9157, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !9156, file: !9157, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !9156, file: !9157, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !9156, file: !9157, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !9156, file: !9157, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !9156, file: !9157, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !9156, file: !9157, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!9391 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !9156, file: !9157, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!9392 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !9156, file: !9157, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !9156, file: !9157, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!9394 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !9156, file: !9157, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!9395 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !9156, file: !9157, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !9156, file: !9157, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !9156, file: !9157, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!9398 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !9156, file: !9157, line: 450, baseType: !9399, size: 16, offset: 15792)
!9399 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !9157, line: 206, baseType: !477)
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !9156, file: !9157, line: 451, baseType: !388, size: 32, offset: 15808)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !9156, file: !9157, line: 453, baseType: !9402, size: 512, offset: 15840)
!9402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 512, elements: !274)
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !9156, file: !9157, line: 454, baseType: !857, size: 64, offset: 16384)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !9156, file: !9157, line: 455, baseType: !3898, size: 64, offset: 16448)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !9156, file: !9157, line: 456, baseType: !37, size: 32, offset: 16512)
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !9156, file: !9157, line: 457, baseType: !9407, size: 1088, offset: 16576)
!9407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3898, size: 1088, elements: !9359)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !9156, file: !9157, line: 458, baseType: !9407, size: 1088, offset: 17664)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !9156, file: !9157, line: 469, baseType: !3884, size: 64, offset: 18752)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !9156, file: !9157, line: 471, baseType: !9411, size: 64, offset: 18816)
!9411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9412, size: 64)
!9412 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !9157, line: 304, flags: DIFlagFwdDecl)
!9413 = !DIDerivedType(tag: DW_TAG_member, scope: !9156, file: !9157, line: 478, baseType: !9414, size: 64, offset: 18880)
!9414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9156, file: !9157, line: 478, size: 64, elements: !9415)
!9415 = !{!9416, !9419}
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !9414, file: !9157, line: 479, baseType: !9417, size: 64)
!9417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9418, size: 64)
!9418 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !9157, line: 305, flags: DIFlagFwdDecl)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !9414, file: !9157, line: 480, baseType: !9155, size: 64)
!9420 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !9156, file: !9157, line: 482, baseType: !1038, size: 16, offset: 18944)
!9421 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !9156, file: !9157, line: 483, baseType: !1397, size: 8, offset: 18960)
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !9156, file: !9157, line: 497, baseType: !1038, size: 16, offset: 18976)
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !9156, file: !9157, line: 498, baseType: !5627, size: 64, offset: 19008)
!9424 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !9156, file: !9157, line: 499, baseType: !594, size: 64, offset: 19072)
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !9156, file: !9157, line: 500, baseType: !577, size: 64, offset: 19136)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !9156, file: !9157, line: 502, baseType: !317, size: 64, offset: 19200)
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "io_mode", scope: !9129, file: !9130, line: 149, baseType: !37, size: 32, offset: 448)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "HFC_outb", scope: !9129, file: !9130, line: 168, baseType: !9429, size: 64, offset: 512)
!9429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9430, size: 64)
!9430 = !DISubroutineType(types: !9431)
!9431 = !{null, !9128, !9432, !9432}
!9432 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_char", file: !282, line: 79, baseType: !494)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "HFC_outb_nodebug", scope: !9129, file: !9130, line: 170, baseType: !9429, size: 64, offset: 576)
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "HFC_inb", scope: !9129, file: !9130, line: 172, baseType: !9435, size: 64, offset: 640)
!9435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9436, size: 64)
!9436 = !DISubroutineType(types: !9437)
!9437 = !{!9432, !9128, !9432}
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "HFC_inb_nodebug", scope: !9129, file: !9130, line: 173, baseType: !9435, size: 64, offset: 704)
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "HFC_inw", scope: !9129, file: !9130, line: 174, baseType: !9440, size: 64, offset: 768)
!9440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9441, size: 64)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{!9443, !9128, !9432}
!9443 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_short", file: !282, line: 80, baseType: !477)
!9444 = !DIDerivedType(tag: DW_TAG_member, name: "HFC_inw_nodebug", scope: !9129, file: !9130, line: 175, baseType: !9440, size: 64, offset: 832)
!9445 = !DIDerivedType(tag: DW_TAG_member, name: "HFC_wait", scope: !9129, file: !9130, line: 176, baseType: !9446, size: 64, offset: 896)
!9446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9447, size: 64)
!9447 = !DISubroutineType(types: !9448)
!9448 = !{null, !9128}
!9449 = !DIDerivedType(tag: DW_TAG_member, name: "HFC_wait_nodebug", scope: !9129, file: !9130, line: 177, baseType: !9446, size: 64, offset: 960)
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "read_fifo", scope: !9129, file: !9130, line: 179, baseType: !9451, size: 64, offset: 1024)
!9451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9452, size: 64)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{null, !9128, !9454, !37}
!9454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9432, size: 64)
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "write_fifo", scope: !9129, file: !9130, line: 181, baseType: !9451, size: 64, offset: 1088)
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "pci_origmembase", scope: !9129, file: !9130, line: 183, baseType: !9457, size: 64, offset: 1152)
!9457 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_long", file: !282, line: 82, baseType: !317)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "plx_origmembase", scope: !9129, file: !9130, line: 183, baseType: !9457, size: 64, offset: 1216)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "pci_membase", scope: !9129, file: !9130, line: 184, baseType: !570, size: 64, offset: 1280)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "plx_membase", scope: !9129, file: !9130, line: 185, baseType: !570, size: 64, offset: 1344)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "xhfc_origmembase", scope: !9129, file: !9130, line: 186, baseType: !9457, size: 64, offset: 1408)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "xhfc_membase", scope: !9129, file: !9130, line: 187, baseType: !9454, size: 64, offset: 1472)
!9463 = !DIDerivedType(tag: DW_TAG_member, name: "xhfc_memaddr", scope: !9129, file: !9130, line: 188, baseType: !9464, size: 64, offset: 1536)
!9464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9457, size: 64)
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "xhfc_memdata", scope: !9129, file: !9130, line: 188, baseType: !9464, size: 64, offset: 1600)
!9466 = !DIDerivedType(tag: DW_TAG_member, name: "pb_irqmsk", scope: !9129, file: !9130, line: 192, baseType: !9457, size: 64, offset: 1664)
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "pci_iobase", scope: !9129, file: !9130, line: 193, baseType: !9457, size: 64, offset: 1728)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !9129, file: !9130, line: 194, baseType: !9469, size: 192, offset: 1792)
!9469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hfcm_hw", file: !9130, line: 65, size: 192, elements: !9470)
!9470 = !{!9471, !9472, !9473, !9474, !9475, !9476, !9477, !9478, !9479, !9480, !9481, !9482, !9484, !9485}
!9471 = !DIDerivedType(tag: DW_TAG_member, name: "r_ctrl", scope: !9469, file: !9130, line: 66, baseType: !9432, size: 8)
!9472 = !DIDerivedType(tag: DW_TAG_member, name: "r_irq_ctrl", scope: !9469, file: !9130, line: 67, baseType: !9432, size: 8, offset: 8)
!9473 = !DIDerivedType(tag: DW_TAG_member, name: "r_cirm", scope: !9469, file: !9130, line: 68, baseType: !9432, size: 8, offset: 16)
!9474 = !DIDerivedType(tag: DW_TAG_member, name: "r_ram_sz", scope: !9469, file: !9130, line: 69, baseType: !9432, size: 8, offset: 24)
!9475 = !DIDerivedType(tag: DW_TAG_member, name: "r_pcm_md0", scope: !9469, file: !9130, line: 70, baseType: !9432, size: 8, offset: 32)
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "r_irqmsk_misc", scope: !9469, file: !9130, line: 71, baseType: !9432, size: 8, offset: 40)
!9477 = !DIDerivedType(tag: DW_TAG_member, name: "r_dtmf", scope: !9469, file: !9130, line: 72, baseType: !9432, size: 8, offset: 48)
!9478 = !DIDerivedType(tag: DW_TAG_member, name: "r_st_sync", scope: !9469, file: !9130, line: 73, baseType: !9432, size: 8, offset: 56)
!9479 = !DIDerivedType(tag: DW_TAG_member, name: "r_sci_msk", scope: !9469, file: !9130, line: 74, baseType: !9432, size: 8, offset: 64)
!9480 = !DIDerivedType(tag: DW_TAG_member, name: "r_tx0", scope: !9469, file: !9130, line: 75, baseType: !9432, size: 8, offset: 72)
!9481 = !DIDerivedType(tag: DW_TAG_member, name: "r_tx1", scope: !9469, file: !9130, line: 75, baseType: !9432, size: 8, offset: 80)
!9482 = !DIDerivedType(tag: DW_TAG_member, name: "a_st_ctrl0", scope: !9469, file: !9130, line: 76, baseType: !9483, size: 64, offset: 88)
!9483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9432, size: 64, elements: !1371)
!9484 = !DIDerivedType(tag: DW_TAG_member, name: "r_bert_wd_md", scope: !9469, file: !9130, line: 77, baseType: !9432, size: 8, offset: 152)
!9485 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !9469, file: !9130, line: 78, baseType: !9486, size: 32, offset: 160)
!9486 = !DIDerivedType(tag: DW_TAG_typedef, name: "timer_t", file: !282, line: 26, baseType: !5442)
!9487 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !9129, file: !9130, line: 196, baseType: !9457, size: 64, offset: 1984)
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "masterclk", scope: !9129, file: !9130, line: 197, baseType: !37, size: 32, offset: 2048)
!9489 = !DIDerivedType(tag: DW_TAG_member, name: "silence", scope: !9129, file: !9130, line: 198, baseType: !494, size: 8, offset: 2080)
!9490 = !DIDerivedType(tag: DW_TAG_member, name: "silence_data", scope: !9129, file: !9130, line: 199, baseType: !9491, size: 1024, offset: 2088)
!9491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 1024, elements: !2991)
!9492 = !DIDerivedType(tag: DW_TAG_member, name: "dtmf", scope: !9129, file: !9130, line: 200, baseType: !37, size: 32, offset: 3136)
!9493 = !DIDerivedType(tag: DW_TAG_member, name: "Flen", scope: !9129, file: !9130, line: 201, baseType: !37, size: 32, offset: 3168)
!9494 = !DIDerivedType(tag: DW_TAG_member, name: "Zlen", scope: !9129, file: !9130, line: 202, baseType: !37, size: 32, offset: 3200)
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "max_trans", scope: !9129, file: !9130, line: 203, baseType: !37, size: 32, offset: 3232)
!9496 = !DIDerivedType(tag: DW_TAG_member, name: "Zmin", scope: !9129, file: !9130, line: 204, baseType: !37, size: 32, offset: 3264)
!9497 = !DIDerivedType(tag: DW_TAG_member, name: "DTMFbase", scope: !9129, file: !9130, line: 205, baseType: !37, size: 32, offset: 3296)
!9498 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !9129, file: !9130, line: 207, baseType: !9152, size: 32, offset: 3328)
!9499 = !DIDerivedType(tag: DW_TAG_member, name: "leds", scope: !9129, file: !9130, line: 208, baseType: !9152, size: 32, offset: 3360)
!9500 = !DIDerivedType(tag: DW_TAG_member, name: "ledstate", scope: !9129, file: !9130, line: 209, baseType: !9457, size: 64, offset: 3392)
!9501 = !DIDerivedType(tag: DW_TAG_member, name: "opticalsupport", scope: !9129, file: !9130, line: 210, baseType: !37, size: 32, offset: 3456)
!9502 = !DIDerivedType(tag: DW_TAG_member, name: "bmask", scope: !9129, file: !9130, line: 213, baseType: !9503, size: 1024, offset: 3488)
!9503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9152, size: 1024, elements: !716)
!9504 = !DIDerivedType(tag: DW_TAG_member, name: "dnum", scope: !9129, file: !9130, line: 214, baseType: !9505, size: 256, offset: 4512)
!9505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9432, size: 256, elements: !716)
!9506 = !DIDerivedType(tag: DW_TAG_member, name: "created", scope: !9129, file: !9130, line: 215, baseType: !9505, size: 256, offset: 4768)
!9507 = !DIDerivedType(tag: DW_TAG_member, name: "activity_tx", scope: !9129, file: !9130, line: 216, baseType: !9152, size: 32, offset: 5024)
!9508 = !DIDerivedType(tag: DW_TAG_member, name: "activity_rx", scope: !9129, file: !9130, line: 217, baseType: !9152, size: 32, offset: 5056)
!9509 = !DIDerivedType(tag: DW_TAG_member, name: "flash", scope: !9129, file: !9130, line: 220, baseType: !9510, size: 256, offset: 5088)
!9510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9152, size: 256, elements: !1371)
!9511 = !DIDerivedType(tag: DW_TAG_member, name: "wdcount", scope: !9129, file: !9130, line: 222, baseType: !9457, size: 64, offset: 5376)
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "wdbyte", scope: !9129, file: !9130, line: 224, baseType: !9432, size: 8, offset: 5440)
!9513 = !DIDerivedType(tag: DW_TAG_member, name: "e1_state", scope: !9129, file: !9130, line: 225, baseType: !37, size: 32, offset: 5472)
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "e1_getclock", scope: !9129, file: !9130, line: 226, baseType: !37, size: 32, offset: 5504)
!9515 = !DIDerivedType(tag: DW_TAG_member, name: "syncronized", scope: !9129, file: !9130, line: 227, baseType: !37, size: 32, offset: 5536)
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "e1_resync", scope: !9129, file: !9130, line: 228, baseType: !37, size: 32, offset: 5568)
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9129, file: !9130, line: 230, baseType: !729, offset: 5600)
!9518 = !DIDerivedType(tag: DW_TAG_member, name: "iclock", scope: !9129, file: !9130, line: 232, baseType: !9519, size: 64, offset: 5632)
!9519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9520, size: 64)
!9520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mISDNclock", file: !9521, line: 527, size: 832, elements: !9522)
!9521 = !DIFile(filename: "./include/linux/mISDNif.h", directory: "/home/lizy2001/genbc/linux")
!9522 = !{!9523, !9524, !9525, !9526, !9531}
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9520, file: !9521, line: 528, baseType: !289, size: 128)
!9524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9520, file: !9521, line: 529, baseType: !4747, size: 512, offset: 128)
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "pri", scope: !9520, file: !9521, line: 530, baseType: !37, size: 32, offset: 640)
!9526 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !9520, file: !9521, line: 531, baseType: !9527, size: 64, offset: 704)
!9527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9528, size: 64)
!9528 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockctl_func_t", file: !9521, line: 525, baseType: !9529)
!9529 = !DISubroutineType(types: !9530)
!9530 = !{!37, !570, !37}
!9531 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9520, file: !9521, line: 532, baseType: !570, size: 64, offset: 768)
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "iclock_on", scope: !9129, file: !9130, line: 233, baseType: !37, size: 32, offset: 5696)
!9533 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !9129, file: !9130, line: 240, baseType: !9534, size: 28672, offset: 5760)
!9534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9535, size: 28672, elements: !716)
!9535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hfc_chan", file: !9130, line: 40, size: 896, elements: !9536)
!9536 = !{!9537, !9616, !9647, !9648, !9649, !9650, !9651, !9652, !9653, !9654, !9655, !9656, !9657, !9658, !9659, !9660, !9661, !9662, !9663, !9664, !9665, !9666, !9667}
!9537 = !DIDerivedType(tag: DW_TAG_member, name: "dch", scope: !9535, file: !9130, line: 41, baseType: !9538, size: 64)
!9538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9539, size: 64)
!9539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dchannel", file: !9540, line: 78, size: 8384, elements: !9541)
!9540 = !DIFile(filename: "./include/linux/mISDNhw.h", directory: "/home/lizy2001/genbc/linux")
!9541 = !{!9542, !9595, !9596, !9597, !9601, !9602, !9603, !9604, !9605, !9606, !9607, !9608, !9609, !9610, !9611, !9612, !9613, !9614, !9615}
!9542 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9539, file: !9540, line: 79, baseType: !9543, size: 6656)
!9543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mISDNdevice", file: !9521, line: 494, size: 6656, elements: !9544)
!9544 = !{!9545, !9586, !9587, !9588, !9589, !9590, !9592, !9593, !9594}
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "D", scope: !9543, file: !9521, line: 495, baseType: !9546, size: 640)
!9546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mISDNchannel", file: !9521, line: 467, size: 640, elements: !9547)
!9547 = !{!9548, !9549, !9550, !9551, !9552, !9553, !9574, !9575, !9580, !9581}
!9548 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9546, file: !9521, line: 468, baseType: !289, size: 128)
!9549 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9546, file: !9521, line: 469, baseType: !9152, size: 32, offset: 128)
!9550 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !9546, file: !9521, line: 470, baseType: !9152, size: 32, offset: 160)
!9551 = !DIDerivedType(tag: DW_TAG_member, name: "opt", scope: !9546, file: !9521, line: 471, baseType: !9457, size: 64, offset: 192)
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !9546, file: !9521, line: 472, baseType: !9152, size: 32, offset: 256)
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !9546, file: !9521, line: 473, baseType: !9554, size: 64, offset: 320)
!9554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9555, size: 64)
!9555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mISDNstack", file: !9521, line: 506, size: 1664, elements: !9556)
!9556 = !{!9557, !9558, !9560, !9561, !9562, !9563, !9564, !9565, !9567, !9568, !9569}
!9557 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !9555, file: !9521, line: 507, baseType: !9457, size: 64)
!9558 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9555, file: !9521, line: 508, baseType: !9559, size: 64, offset: 64)
!9559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9543, size: 64)
!9560 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !9555, file: !9521, line: 509, baseType: !1257, size: 64, offset: 128)
!9561 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !9555, file: !9521, line: 510, baseType: !1546, size: 64, offset: 192)
!9562 = !DIDerivedType(tag: DW_TAG_member, name: "workq", scope: !9555, file: !9521, line: 511, baseType: !1100, size: 128, offset: 256)
!9563 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !9555, file: !9521, line: 512, baseType: !2762, size: 192, offset: 384)
!9564 = !DIDerivedType(tag: DW_TAG_member, name: "layer2", scope: !9555, file: !9521, line: 513, baseType: !289, size: 128, offset: 576)
!9565 = !DIDerivedType(tag: DW_TAG_member, name: "layer1", scope: !9555, file: !9521, line: 514, baseType: !9566, size: 64, offset: 704)
!9566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9546, size: 64)
!9567 = !DIDerivedType(tag: DW_TAG_member, name: "own", scope: !9555, file: !9521, line: 515, baseType: !9546, size: 640, offset: 768)
!9568 = !DIDerivedType(tag: DW_TAG_member, name: "lmutex", scope: !9555, file: !9521, line: 516, baseType: !954, size: 192, offset: 1408)
!9569 = !DIDerivedType(tag: DW_TAG_member, name: "l1sock", scope: !9555, file: !9521, line: 517, baseType: !9570, size: 64, offset: 1600)
!9570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mISDN_sock_list", file: !9521, line: 480, size: 64, elements: !9571)
!9571 = !{!9572, !9573}
!9572 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9570, file: !9521, line: 481, baseType: !857, size: 64)
!9573 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9570, file: !9521, line: 482, baseType: !2772, offset: 64)
!9574 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !9546, file: !9521, line: 474, baseType: !9566, size: 64, offset: 384)
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "send", scope: !9546, file: !9521, line: 475, baseType: !9576, size: 64, offset: 448)
!9576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9577, size: 64)
!9577 = !DIDerivedType(tag: DW_TAG_typedef, name: "send_func_t", file: !9521, line: 457, baseType: !9578)
!9578 = !DISubroutineType(types: !9579)
!9579 = !{!37, !9566, !420}
!9580 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !9546, file: !9521, line: 476, baseType: !9576, size: 64, offset: 512)
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !9546, file: !9521, line: 477, baseType: !9582, size: 64, offset: 576)
!9582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9583, size: 64)
!9583 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctrl_func_t", file: !9521, line: 456, baseType: !9584)
!9584 = !DISubroutineType(types: !9585)
!9585 = !{!37, !9566, !9152, !570}
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9543, file: !9521, line: 496, baseType: !9152, size: 32, offset: 640)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "Dprotocols", scope: !9543, file: !9521, line: 497, baseType: !9152, size: 32, offset: 672)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "Bprotocols", scope: !9543, file: !9521, line: 498, baseType: !9152, size: 32, offset: 704)
!9589 = !DIDerivedType(tag: DW_TAG_member, name: "nrbchan", scope: !9543, file: !9521, line: 499, baseType: !9152, size: 32, offset: 736)
!9590 = !DIDerivedType(tag: DW_TAG_member, name: "channelmap", scope: !9543, file: !9521, line: 500, baseType: !9591, size: 128, offset: 768)
!9591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9432, size: 128, elements: !274)
!9592 = !DIDerivedType(tag: DW_TAG_member, name: "bchannels", scope: !9543, file: !9521, line: 501, baseType: !289, size: 128, offset: 896)
!9593 = !DIDerivedType(tag: DW_TAG_member, name: "teimgr", scope: !9543, file: !9521, line: 502, baseType: !9566, size: 64, offset: 1024)
!9594 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9543, file: !9521, line: 503, baseType: !3803, size: 5568, offset: 1088)
!9595 = !DIDerivedType(tag: DW_TAG_member, name: "Flags", scope: !9539, file: !9540, line: 80, baseType: !9457, size: 64, offset: 6656)
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "workq", scope: !9539, file: !9540, line: 81, baseType: !1807, size: 256, offset: 6720)
!9597 = !DIDerivedType(tag: DW_TAG_member, name: "phfunc", scope: !9539, file: !9540, line: 82, baseType: !9598, size: 64, offset: 6976)
!9598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9599, size: 64)
!9599 = !DISubroutineType(types: !9600)
!9600 = !{null, !9538}
!9601 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9539, file: !9540, line: 83, baseType: !9152, size: 32, offset: 7040)
!9602 = !DIDerivedType(tag: DW_TAG_member, name: "l1", scope: !9539, file: !9540, line: 84, baseType: !570, size: 64, offset: 7104)
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !9539, file: !9540, line: 85, baseType: !570, size: 64, offset: 7168)
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !9539, file: !9540, line: 86, baseType: !37, size: 32, offset: 7232)
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !9539, file: !9540, line: 87, baseType: !2221, size: 320, offset: 7296)
!9606 = !DIDerivedType(tag: DW_TAG_member, name: "rx_skb", scope: !9539, file: !9540, line: 89, baseType: !420, size: 64, offset: 7616)
!9607 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !9539, file: !9540, line: 90, baseType: !37, size: 32, offset: 7680)
!9608 = !DIDerivedType(tag: DW_TAG_member, name: "squeue", scope: !9539, file: !9540, line: 92, baseType: !2762, size: 192, offset: 7744)
!9609 = !DIDerivedType(tag: DW_TAG_member, name: "rqueue", scope: !9539, file: !9540, line: 93, baseType: !2762, size: 192, offset: 7936)
!9610 = !DIDerivedType(tag: DW_TAG_member, name: "tx_skb", scope: !9539, file: !9540, line: 94, baseType: !420, size: 64, offset: 8128)
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "tx_idx", scope: !9539, file: !9540, line: 95, baseType: !37, size: 32, offset: 8192)
!9612 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !9539, file: !9540, line: 96, baseType: !37, size: 32, offset: 8224)
!9613 = !DIDerivedType(tag: DW_TAG_member, name: "err_crc", scope: !9539, file: !9540, line: 98, baseType: !37, size: 32, offset: 8256)
!9614 = !DIDerivedType(tag: DW_TAG_member, name: "err_tx", scope: !9539, file: !9540, line: 99, baseType: !37, size: 32, offset: 8288)
!9615 = !DIDerivedType(tag: DW_TAG_member, name: "err_rx", scope: !9539, file: !9540, line: 100, baseType: !37, size: 32, offset: 8320)
!9616 = !DIDerivedType(tag: DW_TAG_member, name: "bch", scope: !9535, file: !9130, line: 42, baseType: !9617, size: 64, offset: 64)
!9617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9618, size: 64)
!9618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bchannel", file: !9540, line: 140, size: 2368, elements: !9619)
!9619 = !{!9620, !9621, !9622, !9623, !9624, !9625, !9626, !9627, !9628, !9630, !9631, !9632, !9633, !9634, !9635, !9636, !9637, !9638, !9639, !9640, !9641, !9642, !9643, !9644, !9645, !9646}
!9620 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !9618, file: !9540, line: 141, baseType: !9546, size: 640)
!9621 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !9618, file: !9540, line: 142, baseType: !37, size: 32, offset: 640)
!9622 = !DIDerivedType(tag: DW_TAG_member, name: "Flags", scope: !9618, file: !9540, line: 143, baseType: !9457, size: 64, offset: 704)
!9623 = !DIDerivedType(tag: DW_TAG_member, name: "workq", scope: !9618, file: !9540, line: 144, baseType: !1807, size: 256, offset: 768)
!9624 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9618, file: !9540, line: 145, baseType: !9152, size: 32, offset: 1024)
!9625 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !9618, file: !9540, line: 146, baseType: !570, size: 64, offset: 1088)
!9626 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !9618, file: !9540, line: 147, baseType: !37, size: 32, offset: 1152)
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !9618, file: !9540, line: 148, baseType: !2221, size: 320, offset: 1216)
!9628 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !9618, file: !9540, line: 150, baseType: !9629, size: 32, offset: 1536)
!9629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 32, elements: !1202)
!9630 = !DIDerivedType(tag: DW_TAG_member, name: "rx_skb", scope: !9618, file: !9540, line: 151, baseType: !420, size: 64, offset: 1600)
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !9618, file: !9540, line: 152, baseType: !477, size: 16, offset: 1664)
!9632 = !DIDerivedType(tag: DW_TAG_member, name: "init_maxlen", scope: !9618, file: !9540, line: 153, baseType: !477, size: 16, offset: 1680)
!9633 = !DIDerivedType(tag: DW_TAG_member, name: "next_maxlen", scope: !9618, file: !9540, line: 154, baseType: !477, size: 16, offset: 1696)
!9634 = !DIDerivedType(tag: DW_TAG_member, name: "minlen", scope: !9618, file: !9540, line: 155, baseType: !477, size: 16, offset: 1712)
!9635 = !DIDerivedType(tag: DW_TAG_member, name: "init_minlen", scope: !9618, file: !9540, line: 156, baseType: !477, size: 16, offset: 1728)
!9636 = !DIDerivedType(tag: DW_TAG_member, name: "next_minlen", scope: !9618, file: !9540, line: 157, baseType: !477, size: 16, offset: 1744)
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "next_skb", scope: !9618, file: !9540, line: 159, baseType: !420, size: 64, offset: 1792)
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "tx_skb", scope: !9618, file: !9540, line: 160, baseType: !420, size: 64, offset: 1856)
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "rqueue", scope: !9618, file: !9540, line: 161, baseType: !2762, size: 192, offset: 1920)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "rcount", scope: !9618, file: !9540, line: 162, baseType: !37, size: 32, offset: 2112)
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "tx_idx", scope: !9618, file: !9540, line: 163, baseType: !37, size: 32, offset: 2144)
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !9618, file: !9540, line: 164, baseType: !37, size: 32, offset: 2176)
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "err_crc", scope: !9618, file: !9540, line: 166, baseType: !37, size: 32, offset: 2208)
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "err_tx", scope: !9618, file: !9540, line: 167, baseType: !37, size: 32, offset: 2240)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "err_rx", scope: !9618, file: !9540, line: 168, baseType: !37, size: 32, offset: 2272)
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "dropcnt", scope: !9618, file: !9540, line: 169, baseType: !37, size: 32, offset: 2304)
!9647 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !9535, file: !9130, line: 43, baseType: !37, size: 32, offset: 128)
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "nt_timer", scope: !9535, file: !9130, line: 45, baseType: !37, size: 32, offset: 160)
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "los", scope: !9535, file: !9130, line: 46, baseType: !37, size: 32, offset: 192)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "ais", scope: !9535, file: !9130, line: 46, baseType: !37, size: 32, offset: 224)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "slip_tx", scope: !9535, file: !9130, line: 46, baseType: !37, size: 32, offset: 256)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "slip_rx", scope: !9535, file: !9130, line: 46, baseType: !37, size: 32, offset: 288)
!9653 = !DIDerivedType(tag: DW_TAG_member, name: "rdi", scope: !9535, file: !9130, line: 46, baseType: !37, size: 32, offset: 320)
!9654 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !9535, file: !9130, line: 47, baseType: !37, size: 32, offset: 352)
!9655 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !9535, file: !9130, line: 48, baseType: !9457, size: 64, offset: 384)
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !9535, file: !9130, line: 49, baseType: !37, size: 32, offset: 448)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9535, file: !9130, line: 50, baseType: !9152, size: 32, offset: 480)
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "slot_tx", scope: !9535, file: !9130, line: 51, baseType: !37, size: 32, offset: 512)
!9659 = !DIDerivedType(tag: DW_TAG_member, name: "bank_tx", scope: !9535, file: !9130, line: 52, baseType: !37, size: 32, offset: 544)
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "slot_rx", scope: !9535, file: !9130, line: 53, baseType: !37, size: 32, offset: 576)
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "bank_rx", scope: !9535, file: !9130, line: 54, baseType: !37, size: 32, offset: 608)
!9662 = !DIDerivedType(tag: DW_TAG_member, name: "conf", scope: !9535, file: !9130, line: 55, baseType: !37, size: 32, offset: 640)
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "txpending", scope: !9535, file: !9130, line: 56, baseType: !37, size: 32, offset: 672)
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "Zfill", scope: !9535, file: !9130, line: 58, baseType: !37, size: 32, offset: 704)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "rx_off", scope: !9535, file: !9130, line: 59, baseType: !37, size: 32, offset: 736)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_count", scope: !9535, file: !9130, line: 60, baseType: !37, size: 32, offset: 768)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !9535, file: !9130, line: 61, baseType: !9668, size: 64, offset: 832)
!9668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "slot_owner", scope: !9129, file: !9130, line: 241, baseType: !9670, size: 2048, offset: 34432)
!9670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8333, size: 2048, elements: !9671)
!9671 = !{!9672}
!9672 = !DISubrange(count: 256)
!9673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9674, size: 64)
!9674 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!9675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9676, size: 64)
!9676 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !292)
!9677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!9678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9679, size: 64)
!9679 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !477)
!9680 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !467, line: 31, baseType: !468)
!9681 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !467, line: 29, baseType: !476)
!9682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!9683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9684, size: 64)
!9684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mISDNhead", file: !9521, line: 256, size: 64, elements: !9685)
!9685 = !{!9686, !9687}
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "prim", scope: !9684, file: !9521, line: 257, baseType: !7, size: 32)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9684, file: !9521, line: 258, baseType: !7, size: 32, offset: 32)
!9688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9689, size: 64)
!9689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dsp_features", file: !9690, line: 26, size: 320, elements: !9691)
!9690 = !DIFile(filename: "./include/linux/mISDNdsp.h", directory: "/home/lizy2001/genbc/linux")
!9691 = !{!9692, !9693, !9694, !9695, !9696, !9697, !9698, !9699, !9700, !9701}
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "hfc_id", scope: !9689, file: !9690, line: 27, baseType: !37, size: 32)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "hfc_dtmf", scope: !9689, file: !9690, line: 28, baseType: !37, size: 32, offset: 32)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "hfc_conf", scope: !9689, file: !9690, line: 29, baseType: !37, size: 32, offset: 64)
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "hfc_loops", scope: !9689, file: !9690, line: 30, baseType: !37, size: 32, offset: 96)
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "hfc_echocanhw", scope: !9689, file: !9690, line: 31, baseType: !37, size: 32, offset: 128)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "pcm_id", scope: !9689, file: !9690, line: 32, baseType: !37, size: 32, offset: 160)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "pcm_slots", scope: !9689, file: !9690, line: 33, baseType: !37, size: 32, offset: 192)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "pcm_banks", scope: !9689, file: !9690, line: 34, baseType: !37, size: 32, offset: 224)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "unclocked", scope: !9689, file: !9690, line: 35, baseType: !37, size: 32, offset: 256)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "unordered", scope: !9689, file: !9690, line: 36, baseType: !37, size: 32, offset: 288)
!9702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!9703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!9704 = !{!0, !9705, !9710, !9715, !9718, !9763, !9813, !9818, !9820, !9823, !9825, !9827, !9829, !9831, !9833, !9836, !9838, !9840, !9842, !9844, !9846, !9851, !9853, !9858, !9860, !9862, !9864, !9869, !9871, !9873, !9875, !9877, !9879, !9884, !9887, !9889, !9891, !9893, !9895, !9900, !9903, !9905, !9907, !9912, !9914, !9916, !9918, !9920, !9922, !9925, !9928, !9930, !9933, !9935, !9937, !9939, !9941, !9943, !9946, !9949, !9951, !9953, !9955, !9957, !9960, !9962, !9964, !9966, !9968, !9970, !9972, !9974, !9977, !9981, !9983, !9985, !9987, !9989, !9991, !9997, !9999, !10001}
!9705 = !DIGlobalVariableExpression(var: !9706, expr: !DIExpression())
!9706 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file509", scope: !2, file: !3, line: 224, type: !9707, isLocal: true, isDefinition: true, align: 8)
!9707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 408, elements: !9708)
!9708 = !{!9709}
!9709 = !DISubrange(count: 51)
!9710 = !DIGlobalVariableExpression(var: !9711, expr: !DIExpression())
!9711 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license510", scope: !2, file: !3, line: 224, type: !9712, isLocal: true, isDefinition: true, align: 8)
!9712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 168, elements: !9713)
!9713 = !{!9714}
!9714 = !DISubrange(count: 21)
!9715 = !DIGlobalVariableExpression(var: !9716, expr: !DIExpression())
!9716 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_version511", scope: !2, file: !3, line: 225, type: !9717, isLocal: true, isDefinition: true, align: 8)
!9717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 176, elements: !5082)
!9718 = !DIGlobalVariableExpression(var: !9719, expr: !DIExpression())
!9719 = distinct !DIGlobalVariable(name: "__modver_attr", scope: !2, file: !3, line: 225, type: !9720, isLocal: true, isDefinition: true)
!9720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9721)
!9721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9722, size: 64)
!9722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9723)
!9723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_version_attribute", file: !9724, line: 65, size: 576, align: 64, elements: !9725)
!9724 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!9725 = !{!9726, !9761, !9762}
!9726 = !DIDerivedType(tag: DW_TAG_member, name: "mattr", scope: !9723, file: !9724, line: 66, baseType: !9727, size: 448)
!9727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_attribute", file: !9724, line: 54, size: 448, elements: !9728)
!9728 = !{!9729, !9730, !9745, !9749, !9753, !9757}
!9729 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9727, file: !9724, line: 55, baseType: !3873, size: 128)
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !9727, file: !9724, line: 56, baseType: !9731, size: 64, offset: 128)
!9731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9732, size: 64)
!9732 = !DISubroutineType(types: !9733)
!9733 = !{!1015, !9734, !9735, !577}
!9734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9727, size: 64)
!9735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9736, size: 64)
!9736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "module_kobject", file: !9724, line: 46, size: 768, elements: !9737)
!9737 = !{!9738, !9739, !9740, !9741, !9744}
!9738 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9736, file: !9724, line: 47, baseType: !3807, size: 512)
!9739 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !9736, file: !9724, line: 48, baseType: !852, size: 64, offset: 512)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "drivers_dir", scope: !9736, file: !9724, line: 49, baseType: !3813, size: 64, offset: 576)
!9741 = !DIDerivedType(tag: DW_TAG_member, name: "mp", scope: !9736, file: !9724, line: 50, baseType: !9742, size: 64, offset: 640)
!9742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9743, size: 64)
!9743 = !DICompositeType(tag: DW_TAG_structure_type, name: "module_param_attrs", file: !9724, line: 50, flags: DIFlagFwdDecl)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "kobj_completion", scope: !9736, file: !9724, line: 51, baseType: !1546, size: 64, offset: 704)
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !9727, file: !9724, line: 58, baseType: !9746, size: 64, offset: 192)
!9746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9747, size: 64)
!9747 = !DISubroutineType(types: !9748)
!9748 = !{!1015, !9734, !9735, !297, !594}
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9727, file: !9724, line: 60, baseType: !9750, size: 64, offset: 256)
!9750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9751, size: 64)
!9751 = !DISubroutineType(types: !9752)
!9752 = !{null, !852, !297}
!9753 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !9727, file: !9724, line: 61, baseType: !9754, size: 64, offset: 320)
!9754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9755, size: 64)
!9755 = !DISubroutineType(types: !9756)
!9756 = !{!37, !852}
!9757 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !9727, file: !9724, line: 62, baseType: !9758, size: 64, offset: 384)
!9758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9759, size: 64)
!9759 = !DISubroutineType(types: !9760)
!9760 = !{null, !852}
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !9723, file: !9724, line: 67, baseType: !297, size: 64, offset: 448)
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !9723, file: !9724, line: 68, baseType: !297, size: 64, offset: 512)
!9763 = !DIGlobalVariableExpression(var: !9764, expr: !DIExpression())
!9764 = distinct !DIGlobalVariable(name: "__param_debug", scope: !2, file: !3, line: 226, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9766)
!9766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !9767, line: 69, size: 320, elements: !9768)
!9767 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!9768 = !{!9769, !9770, !9771, !9787, !9789, !9791, !9792}
!9769 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9766, file: !9767, line: 70, baseType: !297, size: 64)
!9770 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !9766, file: !9767, line: 71, baseType: !852, size: 64, offset: 64)
!9771 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9766, file: !9767, line: 72, baseType: !9772, size: 64, offset: 128)
!9772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9773, size: 64)
!9773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9774)
!9774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !9767, line: 47, size: 256, elements: !9775)
!9775 = !{!9776, !9777, !9782, !9786}
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9774, file: !9767, line: 49, baseType: !7, size: 32)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !9774, file: !9767, line: 51, baseType: !9778, size: 64, offset: 64)
!9778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9779, size: 64)
!9779 = !DISubroutineType(types: !9780)
!9780 = !{!37, !297, !9781}
!9781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9765, size: 64)
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9774, file: !9767, line: 53, baseType: !9783, size: 64, offset: 128)
!9783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9784, size: 64)
!9784 = !DISubroutineType(types: !9785)
!9785 = !{!37, !577, !9781}
!9786 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !9774, file: !9767, line: 55, baseType: !3290, size: 64, offset: 192)
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !9766, file: !9767, line: 73, baseType: !9788, size: 16, offset: 192)
!9788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !9766, file: !9767, line: 74, baseType: !9790, size: 8, offset: 208)
!9790 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !337, line: 16, baseType: !8332)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9766, file: !9767, line: 75, baseType: !1397, size: 8, offset: 216)
!9792 = !DIDerivedType(tag: DW_TAG_member, scope: !9766, file: !9767, line: 76, baseType: !9793, size: 64, offset: 256)
!9793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9766, file: !9767, line: 76, size: 64, elements: !9794)
!9794 = !{!9795, !9796, !9803}
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9793, file: !9767, line: 77, baseType: !570, size: 64)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !9793, file: !9767, line: 78, baseType: !9797, size: 64)
!9797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9798, size: 64)
!9798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9799)
!9799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !9767, line: 86, size: 128, elements: !9800)
!9800 = !{!9801, !9802}
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !9799, file: !9767, line: 87, baseType: !7, size: 32)
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !9799, file: !9767, line: 88, baseType: !577, size: 64, offset: 64)
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !9793, file: !9767, line: 79, baseType: !9804, size: 64)
!9804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9805, size: 64)
!9805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9806)
!9806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !9767, line: 92, size: 256, elements: !9807)
!9807 = !{!9808, !9809, !9810, !9811, !9812}
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !9806, file: !9767, line: 94, baseType: !7, size: 32)
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !9806, file: !9767, line: 95, baseType: !7, size: 32, offset: 32)
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !9806, file: !9767, line: 96, baseType: !6331, size: 64, offset: 64)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9806, file: !9767, line: 97, baseType: !9772, size: 64, offset: 128)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !9806, file: !9767, line: 98, baseType: !570, size: 64, offset: 192)
!9813 = !DIGlobalVariableExpression(var: !9814, expr: !DIExpression())
!9814 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debugtype512", scope: !2, file: !3, line: 226, type: !9815, isLocal: true, isDefinition: true, align: 8)
!9815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 232, elements: !9816)
!9816 = !{!9817}
!9817 = !DISubrange(count: 29)
!9818 = !DIGlobalVariableExpression(var: !9819, expr: !DIExpression())
!9819 = distinct !DIGlobalVariable(name: "__param_poll", scope: !2, file: !3, line: 227, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9820 = !DIGlobalVariableExpression(var: !9821, expr: !DIExpression())
!9821 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_polltype513", scope: !2, file: !3, line: 227, type: !9822, isLocal: true, isDefinition: true, align: 8)
!9822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 224, elements: !2083)
!9823 = !DIGlobalVariableExpression(var: !9824, expr: !DIExpression())
!9824 = distinct !DIGlobalVariable(name: "__param_clock", scope: !2, file: !3, line: 228, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9825 = !DIGlobalVariableExpression(var: !9826, expr: !DIExpression())
!9826 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_clocktype514", scope: !2, file: !3, line: 228, type: !9822, isLocal: true, isDefinition: true, align: 8)
!9827 = !DIGlobalVariableExpression(var: !9828, expr: !DIExpression())
!9828 = distinct !DIGlobalVariable(name: "__param_timer", scope: !2, file: !3, line: 229, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9829 = !DIGlobalVariableExpression(var: !9830, expr: !DIExpression())
!9830 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_timertype515", scope: !2, file: !3, line: 229, type: !9815, isLocal: true, isDefinition: true, align: 8)
!9831 = !DIGlobalVariableExpression(var: !9832, expr: !DIExpression())
!9832 = distinct !DIGlobalVariable(name: "__param_clockdelay_te", scope: !2, file: !3, line: 230, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9833 = !DIGlobalVariableExpression(var: !9834, expr: !DIExpression())
!9834 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_clockdelay_tetype516", scope: !2, file: !3, line: 230, type: !9835, isLocal: true, isDefinition: true, align: 8)
!9835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 296, elements: !2055)
!9836 = !DIGlobalVariableExpression(var: !9837, expr: !DIExpression())
!9837 = distinct !DIGlobalVariable(name: "__param_clockdelay_nt", scope: !2, file: !3, line: 231, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9838 = !DIGlobalVariableExpression(var: !9839, expr: !DIExpression())
!9839 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_clockdelay_nttype517", scope: !2, file: !3, line: 231, type: !9835, isLocal: true, isDefinition: true, align: 8)
!9840 = !DIGlobalVariableExpression(var: !9841, expr: !DIExpression())
!9841 = distinct !DIGlobalVariable(name: "__param_type", scope: !2, file: !3, line: 232, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9842 = !DIGlobalVariableExpression(var: !9843, expr: !DIExpression())
!9843 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_typetype518", scope: !2, file: !3, line: 232, type: !9835, isLocal: true, isDefinition: true, align: 8)
!9844 = !DIGlobalVariableExpression(var: !9845, expr: !DIExpression())
!9845 = distinct !DIGlobalVariable(name: "__param_pcm", scope: !2, file: !3, line: 233, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9846 = !DIGlobalVariableExpression(var: !9847, expr: !DIExpression())
!9847 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_pcmtype519", scope: !2, file: !3, line: 233, type: !9848, isLocal: true, isDefinition: true, align: 8)
!9848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 280, elements: !9849)
!9849 = !{!9850}
!9850 = !DISubrange(count: 35)
!9851 = !DIGlobalVariableExpression(var: !9852, expr: !DIExpression())
!9852 = distinct !DIGlobalVariable(name: "__param_dmask", scope: !2, file: !3, line: 234, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9853 = !DIGlobalVariableExpression(var: !9854, expr: !DIExpression())
!9854 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_dmasktype520", scope: !2, file: !3, line: 234, type: !9855, isLocal: true, isDefinition: true, align: 8)
!9855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 304, elements: !9856)
!9856 = !{!9857}
!9857 = !DISubrange(count: 38)
!9858 = !DIGlobalVariableExpression(var: !9859, expr: !DIExpression())
!9859 = distinct !DIGlobalVariable(name: "__param_bmask", scope: !2, file: !3, line: 235, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9860 = !DIGlobalVariableExpression(var: !9861, expr: !DIExpression())
!9861 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_bmasktype521", scope: !2, file: !3, line: 235, type: !9855, isLocal: true, isDefinition: true, align: 8)
!9862 = !DIGlobalVariableExpression(var: !9863, expr: !DIExpression())
!9863 = distinct !DIGlobalVariable(name: "__param_iomode", scope: !2, file: !3, line: 236, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9864 = !DIGlobalVariableExpression(var: !9865, expr: !DIExpression())
!9865 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_iomodetype522", scope: !2, file: !3, line: 236, type: !9866, isLocal: true, isDefinition: true, align: 8)
!9866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 312, elements: !9867)
!9867 = !{!9868}
!9868 = !DISubrange(count: 39)
!9869 = !DIGlobalVariableExpression(var: !9870, expr: !DIExpression())
!9870 = distinct !DIGlobalVariable(name: "__param_port", scope: !2, file: !3, line: 237, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9871 = !DIGlobalVariableExpression(var: !9872, expr: !DIExpression())
!9872 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_porttype523", scope: !2, file: !3, line: 237, type: !9835, isLocal: true, isDefinition: true, align: 8)
!9873 = !DIGlobalVariableExpression(var: !9874, expr: !DIExpression())
!9874 = distinct !DIGlobalVariable(name: "__param_hwid", scope: !2, file: !3, line: 238, type: !9765, isLocal: true, isDefinition: true, align: 64)
!9875 = !DIGlobalVariableExpression(var: !9876, expr: !DIExpression())
!9876 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_hwidtype524", scope: !2, file: !3, line: 238, type: !9822, isLocal: true, isDefinition: true, align: 8)
!9877 = !DIGlobalVariableExpression(var: !9878, expr: !DIExpression())
!9878 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_HFCmulti_init546", scope: !2, file: !3, line: 5566, type: !570, isLocal: true, isDefinition: true)
!9879 = !DIGlobalVariableExpression(var: !9880, expr: !DIExpression())
!9880 = distinct !DIGlobalVariable(name: "__exitcall_HFCmulti_cleanup", scope: !2, file: !3, line: 5567, type: !9881, isLocal: true, isDefinition: true)
!9881 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !9882, line: 117, baseType: !9883)
!9882 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!9883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!9884 = !DIGlobalVariableExpression(var: !9885, expr: !DIExpression())
!9885 = distinct !DIGlobalVariable(name: "debug", scope: !2, file: !3, line: 209, type: !9886, isLocal: true, isDefinition: true)
!9886 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !282, line: 87, baseType: !7)
!9887 = !DIGlobalVariableExpression(var: !9888, expr: !DIExpression())
!9888 = distinct !DIGlobalVariable(name: "poll", scope: !2, file: !3, line: 210, type: !9886, isLocal: true, isDefinition: true)
!9889 = !DIGlobalVariableExpression(var: !9890, expr: !DIExpression())
!9890 = distinct !DIGlobalVariable(name: "clock", scope: !2, file: !3, line: 211, type: !37, isLocal: true, isDefinition: true)
!9891 = !DIGlobalVariableExpression(var: !9892, expr: !DIExpression())
!9892 = distinct !DIGlobalVariable(name: "timer", scope: !2, file: !3, line: 212, type: !9886, isLocal: true, isDefinition: true)
!9893 = !DIGlobalVariableExpression(var: !9894, expr: !DIExpression())
!9894 = distinct !DIGlobalVariable(name: "___modver_attr", scope: !2, file: !3, line: 225, type: !9723, isLocal: true, isDefinition: true)
!9895 = !DIGlobalVariableExpression(var: !9896, expr: !DIExpression())
!9896 = distinct !DIGlobalVariable(name: "__param_str_debug", scope: !2, file: !3, line: 226, type: !9897, isLocal: true, isDefinition: true)
!9897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 120, elements: !9898)
!9898 = !{!9899}
!9899 = !DISubrange(count: 15)
!9900 = !DIGlobalVariableExpression(var: !9901, expr: !DIExpression())
!9901 = distinct !DIGlobalVariable(name: "__param_str_poll", scope: !2, file: !3, line: 227, type: !9902, isLocal: true, isDefinition: true)
!9902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 112, elements: !528)
!9903 = !DIGlobalVariableExpression(var: !9904, expr: !DIExpression())
!9904 = distinct !DIGlobalVariable(name: "__param_str_clock", scope: !2, file: !3, line: 228, type: !9897, isLocal: true, isDefinition: true)
!9905 = !DIGlobalVariableExpression(var: !9906, expr: !DIExpression())
!9906 = distinct !DIGlobalVariable(name: "__param_str_timer", scope: !2, file: !3, line: 229, type: !9897, isLocal: true, isDefinition: true)
!9907 = !DIGlobalVariableExpression(var: !9908, expr: !DIExpression())
!9908 = distinct !DIGlobalVariable(name: "__param_str_clockdelay_te", scope: !2, file: !3, line: 230, type: !9909, isLocal: true, isDefinition: true)
!9909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 184, elements: !9910)
!9910 = !{!9911}
!9911 = !DISubrange(count: 23)
!9912 = !DIGlobalVariableExpression(var: !9913, expr: !DIExpression())
!9913 = distinct !DIGlobalVariable(name: "clockdelay_te", scope: !2, file: !3, line: 213, type: !9886, isLocal: true, isDefinition: true)
!9914 = !DIGlobalVariableExpression(var: !9915, expr: !DIExpression())
!9915 = distinct !DIGlobalVariable(name: "__param_str_clockdelay_nt", scope: !2, file: !3, line: 231, type: !9909, isLocal: true, isDefinition: true)
!9916 = !DIGlobalVariableExpression(var: !9917, expr: !DIExpression())
!9917 = distinct !DIGlobalVariable(name: "clockdelay_nt", scope: !2, file: !3, line: 214, type: !9886, isLocal: true, isDefinition: true)
!9918 = !DIGlobalVariableExpression(var: !9919, expr: !DIExpression())
!9919 = distinct !DIGlobalVariable(name: "__param_str_type", scope: !2, file: !3, line: 232, type: !9902, isLocal: true, isDefinition: true)
!9920 = !DIGlobalVariableExpression(var: !9921, expr: !DIExpression())
!9921 = distinct !DIGlobalVariable(name: "__param_arr_type", scope: !2, file: !3, line: 232, type: !9805, isLocal: true, isDefinition: true)
!9922 = !DIGlobalVariableExpression(var: !9923, expr: !DIExpression())
!9923 = distinct !DIGlobalVariable(name: "type", scope: !2, file: !3, line: 203, type: !9924, isLocal: true, isDefinition: true)
!9924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9886, size: 256, elements: !1371)
!9925 = !DIGlobalVariableExpression(var: !9926, expr: !DIExpression())
!9926 = distinct !DIGlobalVariable(name: "__param_str_pcm", scope: !2, file: !3, line: 233, type: !9927, isLocal: true, isDefinition: true)
!9927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 104, elements: !2742)
!9928 = !DIGlobalVariableExpression(var: !9929, expr: !DIExpression())
!9929 = distinct !DIGlobalVariable(name: "__param_arr_pcm", scope: !2, file: !3, line: 233, type: !9805, isLocal: true, isDefinition: true)
!9930 = !DIGlobalVariableExpression(var: !9931, expr: !DIExpression())
!9931 = distinct !DIGlobalVariable(name: "pcm", scope: !2, file: !3, line: 204, type: !9932, isLocal: true, isDefinition: true)
!9932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 256, elements: !1371)
!9933 = !DIGlobalVariableExpression(var: !9934, expr: !DIExpression())
!9934 = distinct !DIGlobalVariable(name: "__param_str_dmask", scope: !2, file: !3, line: 234, type: !9897, isLocal: true, isDefinition: true)
!9935 = !DIGlobalVariableExpression(var: !9936, expr: !DIExpression())
!9936 = distinct !DIGlobalVariable(name: "__param_arr_dmask", scope: !2, file: !3, line: 234, type: !9805, isLocal: true, isDefinition: true)
!9937 = !DIGlobalVariableExpression(var: !9938, expr: !DIExpression())
!9938 = distinct !DIGlobalVariable(name: "dmask", scope: !2, file: !3, line: 205, type: !9924, isLocal: true, isDefinition: true)
!9939 = !DIGlobalVariableExpression(var: !9940, expr: !DIExpression())
!9940 = distinct !DIGlobalVariable(name: "__param_str_bmask", scope: !2, file: !3, line: 235, type: !9897, isLocal: true, isDefinition: true)
!9941 = !DIGlobalVariableExpression(var: !9942, expr: !DIExpression())
!9942 = distinct !DIGlobalVariable(name: "__param_arr_bmask", scope: !2, file: !3, line: 235, type: !9805, isLocal: true, isDefinition: true)
!9943 = !DIGlobalVariableExpression(var: !9944, expr: !DIExpression())
!9944 = distinct !DIGlobalVariable(name: "bmask", scope: !2, file: !3, line: 206, type: !9945, isLocal: true, isDefinition: true)
!9945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9886, size: 8192, elements: !9671)
!9946 = !DIGlobalVariableExpression(var: !9947, expr: !DIExpression())
!9947 = distinct !DIGlobalVariable(name: "__param_str_iomode", scope: !2, file: !3, line: 236, type: !9948, isLocal: true, isDefinition: true)
!9948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 128, elements: !274)
!9949 = !DIGlobalVariableExpression(var: !9950, expr: !DIExpression())
!9950 = distinct !DIGlobalVariable(name: "__param_arr_iomode", scope: !2, file: !3, line: 236, type: !9805, isLocal: true, isDefinition: true)
!9951 = !DIGlobalVariableExpression(var: !9952, expr: !DIExpression())
!9952 = distinct !DIGlobalVariable(name: "iomode", scope: !2, file: !3, line: 207, type: !9924, isLocal: true, isDefinition: true)
!9953 = !DIGlobalVariableExpression(var: !9954, expr: !DIExpression())
!9954 = distinct !DIGlobalVariable(name: "__param_str_port", scope: !2, file: !3, line: 237, type: !9902, isLocal: true, isDefinition: true)
!9955 = !DIGlobalVariableExpression(var: !9956, expr: !DIExpression())
!9956 = distinct !DIGlobalVariable(name: "__param_arr_port", scope: !2, file: !3, line: 237, type: !9805, isLocal: true, isDefinition: true)
!9957 = !DIGlobalVariableExpression(var: !9958, expr: !DIExpression())
!9958 = distinct !DIGlobalVariable(name: "port", scope: !2, file: !3, line: 208, type: !9959, isLocal: true, isDefinition: true)
!9959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9886, size: 2048, elements: !3707)
!9960 = !DIGlobalVariableExpression(var: !9961, expr: !DIExpression())
!9961 = distinct !DIGlobalVariable(name: "__param_str_hwid", scope: !2, file: !3, line: 238, type: !9902, isLocal: true, isDefinition: true)
!9962 = !DIGlobalVariableExpression(var: !9963, expr: !DIExpression())
!9963 = distinct !DIGlobalVariable(name: "hwid", scope: !2, file: !3, line: 219, type: !9886, isLocal: true, isDefinition: true)
!9964 = !DIGlobalVariableExpression(var: !9965, expr: !DIExpression())
!9965 = distinct !DIGlobalVariable(name: "HFClist", scope: !2, file: !3, line: 175, type: !289, isLocal: true, isDefinition: true)
!9966 = !DIGlobalVariableExpression(var: !9967, expr: !DIExpression())
!9967 = distinct !DIGlobalVariable(name: "HFClock", scope: !2, file: !3, line: 176, type: !729, isLocal: true, isDefinition: true)
!9968 = !DIGlobalVariableExpression(var: !9969, expr: !DIExpression())
!9969 = distinct !DIGlobalVariable(name: "plx_lock", scope: !2, file: !3, line: 182, type: !729, isLocal: true, isDefinition: true)
!9970 = !DIGlobalVariableExpression(var: !9971, expr: !DIExpression())
!9971 = distinct !DIGlobalVariable(name: "syncmaster", scope: !2, file: !3, line: 180, type: !9128, isLocal: true, isDefinition: true)
!9972 = !DIGlobalVariableExpression(var: !9973, expr: !DIExpression())
!9973 = distinct !DIGlobalVariable(name: "hfcmultipci_driver", scope: !2, file: !3, line: 5454, type: !9261, isLocal: true, isDefinition: true)
!9974 = !DIGlobalVariableExpression(var: !9975, expr: !DIExpression())
!9975 = distinct !DIGlobalVariable(name: "hfmultipci_ids", scope: !2, file: !3, line: 5336, type: !9976, isLocal: true, isDefinition: true)
!9976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9267, size: 9984, elements: !9867)
!9977 = !DIGlobalVariableExpression(var: !9978, expr: !DIExpression())
!9978 = distinct !DIGlobalVariable(name: "hfcm_map", scope: !2, file: !3, line: 5287, type: !9979, isLocal: true, isDefinition: true)
!9979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9980, size: 13440, elements: !9849)
!9980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9135)
!9981 = !DIGlobalVariableExpression(var: !9982, expr: !DIExpression())
!9982 = distinct !DIGlobalVariable(name: "E1_cnt", scope: !2, file: !3, line: 221, type: !37, isLocal: true, isDefinition: true)
!9983 = !DIGlobalVariableExpression(var: !9984, expr: !DIExpression())
!9984 = distinct !DIGlobalVariable(name: "bmask_cnt", scope: !2, file: !3, line: 221, type: !37, isLocal: true, isDefinition: true)
!9985 = !DIGlobalVariableExpression(var: !9986, expr: !DIExpression())
!9986 = distinct !DIGlobalVariable(name: "Port_cnt", scope: !2, file: !3, line: 221, type: !37, isLocal: true, isDefinition: true)
!9987 = !DIGlobalVariableExpression(var: !9988, expr: !DIExpression())
!9988 = distinct !DIGlobalVariable(name: "nt_t1_count", scope: !2, file: !3, line: 190, type: !9932, isLocal: true, isDefinition: true)
!9989 = !DIGlobalVariableExpression(var: !9990, expr: !DIExpression())
!9990 = distinct !DIGlobalVariable(name: "poll_timer", scope: !2, file: !3, line: 188, type: !37, isLocal: true, isDefinition: true)
!9991 = !DIGlobalVariableExpression(var: !9992, expr: !DIExpression())
!9992 = distinct !DIGlobalVariable(name: "irq_proc_cnt", scope: !9993, file: !3, line: 2808, type: !37, isLocal: true, isDefinition: true)
!9993 = distinct !DISubprogram(name: "hfcmulti_interrupt", scope: !3, file: !3, line: 2677, type: !9994, scopeLine: 2678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!9994 = !DISubroutineType(types: !9995)
!9995 = !{!9996, !37, !570}
!9996 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !9091, line: 17, baseType: !9090)
!9997 = !DIGlobalVariableExpression(var: !9998, expr: !DIExpression())
!9998 = distinct !DIGlobalVariable(name: "plxsd_master", scope: !2, file: !3, line: 181, type: !37, isLocal: true, isDefinition: true)
!9999 = !DIGlobalVariableExpression(var: !10000, expr: !DIExpression())
!10000 = distinct !DIGlobalVariable(name: "PCM_cnt", scope: !2, file: !3, line: 221, type: !37, isLocal: true, isDefinition: true)
!10001 = !DIGlobalVariableExpression(var: !10002, expr: !DIExpression())
!10002 = distinct !DIGlobalVariable(name: "HFC_cnt", scope: !2, file: !3, line: 221, type: !37, isLocal: true, isDefinition: true)
!10003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 272, elements: !10004)
!10004 = !{!10005}
!10005 = !DISubrange(count: 34)
!10006 = !{!"rsp"}
!10007 = !{i32 7, !"Dwarf Version", i32 4}
!10008 = !{i32 2, !"Debug Info Version", i32 3}
!10009 = !{i32 1, !"wchar_size", i32 2}
!10010 = !{i32 1, !"Code Model", i32 2}
!10011 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!10012 = distinct !DISubprogram(name: "HFCmulti_cleanup", scope: !3, file: !3, line: 5462, type: !3704, scopeLine: 5463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10013 = !DILocalVariable(name: "card", scope: !10012, file: !3, line: 5464, type: !9128)
!10014 = !DILocation(line: 5464, column: 20, scope: !10012)
!10015 = !DILocalVariable(name: "next", scope: !10012, file: !3, line: 5464, type: !9128)
!10016 = !DILocation(line: 5464, column: 27, scope: !10012)
!10017 = !DILocalVariable(name: "__mptr", scope: !10018, file: !3, line: 5467, type: !570)
!10018 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 5467, column: 2)
!10019 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 5467, column: 2)
!10020 = !DILocation(line: 5467, column: 2, scope: !10018)
!10021 = !DILocation(line: 5467, column: 2, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 5467, column: 2)
!10023 = !DILocation(line: 5467, column: 2, scope: !10019)
!10024 = !DILocalVariable(name: "__mptr", scope: !10025, file: !3, line: 5467, type: !570)
!10025 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 5467, column: 2)
!10026 = !DILocation(line: 5467, column: 2, scope: !10025)
!10027 = !DILocation(line: 5467, column: 2, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 5467, column: 2)
!10029 = !DILocation(line: 5467, column: 2, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 5467, column: 2)
!10031 = !DILocation(line: 5468, column: 16, scope: !10030)
!10032 = !DILocation(line: 5468, column: 3, scope: !10030)
!10033 = !DILocalVariable(name: "__mptr", scope: !10034, file: !3, line: 5467, type: !570)
!10034 = distinct !DILexicalBlock(scope: !10030, file: !3, line: 5467, column: 2)
!10035 = !DILocation(line: 5467, column: 2, scope: !10034)
!10036 = !DILocation(line: 5467, column: 2, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 5467, column: 2)
!10038 = distinct !{!10038, !10023, !10039}
!10039 = !DILocation(line: 5468, column: 20, scope: !10019)
!10040 = !DILocation(line: 5469, column: 2, scope: !10012)
!10041 = !DILocation(line: 5470, column: 1, scope: !10012)
!10042 = distinct !DISubprogram(name: "release_card", scope: !3, file: !3, line: 4628, type: !9447, scopeLine: 4629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10043 = !DILocalVariable(name: "lock", arg: 1, scope: !10044, file: !10045, line: 407, type: !4097)
!10044 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !10045, file: !10045, line: 407, type: !10046, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10045 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!10046 = !DISubroutineType(types: !10047)
!10047 = !{null, !4097, !317}
!10048 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !10049)
!10049 = distinct !DILocation(line: 4644, column: 2, scope: !10042)
!10050 = !DILocalVariable(name: "flags", arg: 2, scope: !10044, file: !10045, line: 407, type: !317)
!10051 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !10049)
!10052 = !DILocalVariable(name: "lock", arg: 1, scope: !10053, file: !10045, line: 327, type: !4097)
!10053 = distinct !DISubprogram(name: "spinlock_check", scope: !10045, file: !10045, line: 327, type: !10054, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10054 = !DISubroutineType(types: !10055)
!10055 = !{!10056, !4097}
!10056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!10057 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !10058)
!10058 = distinct !DILocation(line: 4642, column: 2, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 4642, column: 2)
!10060 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 4642, column: 2)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 4642, column: 2)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 4642, column: 2)
!10063 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4642, column: 2)
!10064 = !DILocalVariable(name: "hc", arg: 1, scope: !10042, file: !3, line: 4628, type: !9128)
!10065 = !DILocation(line: 4628, column: 32, scope: !10042)
!10066 = !DILocalVariable(name: "flags", scope: !10042, file: !3, line: 4630, type: !9457)
!10067 = !DILocation(line: 4630, column: 9, scope: !10042)
!10068 = !DILocalVariable(name: "ch", scope: !10042, file: !3, line: 4631, type: !37)
!10069 = !DILocation(line: 4631, column: 6, scope: !10042)
!10070 = !DILocation(line: 4633, column: 6, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4633, column: 6)
!10072 = !DILocation(line: 4633, column: 12, scope: !10071)
!10073 = !DILocation(line: 4633, column: 6, scope: !10042)
!10074 = !DILocation(line: 4635, column: 20, scope: !10071)
!10075 = !DILocation(line: 4635, column: 24, scope: !10071)
!10076 = !DILocation(line: 4634, column: 3, scope: !10071)
!10077 = !DILocation(line: 4638, column: 6, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4638, column: 6)
!10079 = !DILocation(line: 4638, column: 10, scope: !10078)
!10080 = !DILocation(line: 4638, column: 6, scope: !10042)
!10081 = !DILocation(line: 4639, column: 26, scope: !10078)
!10082 = !DILocation(line: 4639, column: 30, scope: !10078)
!10083 = !DILocation(line: 4639, column: 3, scope: !10078)
!10084 = !DILocation(line: 4642, column: 2, scope: !10042)
!10085 = !DILocation(line: 4642, column: 2, scope: !10063)
!10086 = !DILocalVariable(name: "__dummy", scope: !10087, file: !3, line: 4642, type: !317)
!10087 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 4642, column: 2)
!10088 = !DILocation(line: 4642, column: 2, scope: !10087)
!10089 = !DILocalVariable(name: "__dummy2", scope: !10087, file: !3, line: 4642, type: !9457)
!10090 = !DILocation(line: 4642, column: 2, scope: !10062)
!10091 = !DILocation(line: 4642, column: 2, scope: !10061)
!10092 = !DILocation(line: 4642, column: 2, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 4642, column: 2)
!10094 = !DILocalVariable(name: "__dummy", scope: !10095, file: !3, line: 4642, type: !317)
!10095 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 4642, column: 2)
!10096 = distinct !DILexicalBlock(scope: !10093, file: !3, line: 4642, column: 2)
!10097 = !DILocation(line: 4642, column: 2, scope: !10095)
!10098 = !DILocalVariable(name: "__dummy2", scope: !10095, file: !3, line: 4642, type: !9457)
!10099 = !DILocation(line: 4642, column: 2, scope: !10096)
!10100 = !DILocation(line: 4642, column: 2, scope: !10060)
!10101 = !{i32 -2138010054}
!10102 = !DILocation(line: 4642, column: 2, scope: !10059)
!10103 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !10058)
!10104 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !10058)
!10105 = !DILocation(line: 4643, column: 16, scope: !10042)
!10106 = !DILocation(line: 4643, column: 2, scope: !10042)
!10107 = !DILocation(line: 4644, column: 26, scope: !10042)
!10108 = !DILocation(line: 4644, column: 30, scope: !10042)
!10109 = !DILocation(line: 4644, column: 36, scope: !10042)
!10110 = !DILocalVariable(name: "__dummy", scope: !10111, file: !10045, line: 409, type: !317)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !10045, line: 409, column: 2)
!10112 = distinct !DILexicalBlock(scope: !10044, file: !10045, line: 409, column: 2)
!10113 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !10049)
!10114 = !DILocalVariable(name: "__dummy2", scope: !10111, file: !10045, line: 409, type: !317)
!10115 = !DILocalVariable(name: "__dummy", scope: !10116, file: !10045, line: 409, type: !317)
!10116 = distinct !DILexicalBlock(scope: !10117, file: !10045, line: 409, column: 2)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !10045, line: 409, column: 2)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !10045, line: 409, column: 2)
!10119 = distinct !DILexicalBlock(scope: !10112, file: !10045, line: 409, column: 2)
!10120 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !10049)
!10121 = !DILocalVariable(name: "__dummy2", scope: !10116, file: !10045, line: 409, type: !317)
!10122 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !10049)
!10123 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !10049)
!10124 = distinct !DILexicalBlock(scope: !10119, file: !10045, line: 409, column: 2)
!10125 = !{i32 -2145202049}
!10126 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !10049)
!10127 = distinct !DILexicalBlock(scope: !10124, file: !10045, line: 409, column: 2)
!10128 = !DILocation(line: 4645, column: 2, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 4645, column: 2)
!10130 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 4645, column: 2)
!10131 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 4645, column: 2)
!10132 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4645, column: 2)
!10133 = !DILocation(line: 4646, column: 6, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4646, column: 6)
!10135 = !DILocation(line: 4646, column: 10, scope: !10134)
!10136 = !DILocation(line: 4646, column: 6, scope: !10042)
!10137 = !DILocation(line: 4647, column: 7, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !3, line: 4647, column: 7)
!10139 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 4646, column: 15)
!10140 = !DILocation(line: 4647, column: 13, scope: !10138)
!10141 = !DILocation(line: 4647, column: 7, scope: !10139)
!10142 = !DILocation(line: 4649, column: 18, scope: !10138)
!10143 = !DILocation(line: 4649, column: 22, scope: !10138)
!10144 = !DILocation(line: 4649, column: 27, scope: !10138)
!10145 = !DILocation(line: 4648, column: 4, scope: !10138)
!10146 = !DILocation(line: 4650, column: 12, scope: !10139)
!10147 = !DILocation(line: 4650, column: 16, scope: !10139)
!10148 = !DILocation(line: 4650, column: 21, scope: !10139)
!10149 = !DILocation(line: 4650, column: 3, scope: !10139)
!10150 = !DILocation(line: 4651, column: 3, scope: !10139)
!10151 = !DILocation(line: 4651, column: 7, scope: !10139)
!10152 = !DILocation(line: 4651, column: 11, scope: !10139)
!10153 = !DILocation(line: 4653, column: 2, scope: !10139)
!10154 = !DILocation(line: 4656, column: 6, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4656, column: 6)
!10156 = !DILocation(line: 4656, column: 12, scope: !10155)
!10157 = !DILocation(line: 4656, column: 6, scope: !10042)
!10158 = !DILocation(line: 4657, column: 3, scope: !10155)
!10159 = !DILocation(line: 4659, column: 10, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4659, column: 2)
!10161 = !DILocation(line: 4659, column: 7, scope: !10160)
!10162 = !DILocation(line: 4659, column: 15, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10160, file: !3, line: 4659, column: 2)
!10164 = !DILocation(line: 4659, column: 18, scope: !10163)
!10165 = !DILocation(line: 4659, column: 2, scope: !10160)
!10166 = !DILocation(line: 4660, column: 7, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10168, file: !3, line: 4660, column: 7)
!10168 = distinct !DILexicalBlock(scope: !10163, file: !3, line: 4659, column: 31)
!10169 = !DILocation(line: 4660, column: 11, scope: !10167)
!10170 = !DILocation(line: 4660, column: 16, scope: !10167)
!10171 = !DILocation(line: 4660, column: 20, scope: !10167)
!10172 = !DILocation(line: 4660, column: 7, scope: !10168)
!10173 = !DILocation(line: 4661, column: 17, scope: !10167)
!10174 = !DILocation(line: 4661, column: 21, scope: !10167)
!10175 = !DILocation(line: 4661, column: 25, scope: !10167)
!10176 = !DILocation(line: 4661, column: 30, scope: !10167)
!10177 = !DILocation(line: 4661, column: 34, scope: !10167)
!10178 = !DILocation(line: 4661, column: 4, scope: !10167)
!10179 = !DILocation(line: 4662, column: 2, scope: !10168)
!10180 = !DILocation(line: 4659, column: 27, scope: !10163)
!10181 = !DILocation(line: 4659, column: 2, scope: !10163)
!10182 = distinct !{!10182, !10165, !10183}
!10183 = !DILocation(line: 4662, column: 2, scope: !10160)
!10184 = !DILocation(line: 4665, column: 6, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4665, column: 6)
!10186 = !DILocation(line: 4665, column: 10, scope: !10185)
!10187 = !DILocation(line: 4665, column: 6, scope: !10042)
!10188 = !DILocation(line: 4666, column: 17, scope: !10185)
!10189 = !DILocation(line: 4666, column: 3, scope: !10185)
!10190 = !DILocation(line: 4669, column: 22, scope: !10042)
!10191 = !DILocation(line: 4669, column: 2, scope: !10042)
!10192 = !DILocation(line: 4671, column: 6, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4671, column: 6)
!10194 = !DILocation(line: 4671, column: 12, scope: !10193)
!10195 = !DILocation(line: 4671, column: 6, scope: !10042)
!10196 = !DILocation(line: 4672, column: 3, scope: !10193)
!10197 = !DILocation(line: 4674, column: 12, scope: !10042)
!10198 = !DILocation(line: 4674, column: 16, scope: !10042)
!10199 = !DILocation(line: 4674, column: 2, scope: !10042)
!10200 = !DILocation(line: 4676, column: 6, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4676, column: 6)
!10202 = !DILocation(line: 4676, column: 12, scope: !10201)
!10203 = !DILocation(line: 4676, column: 6, scope: !10042)
!10204 = !DILocation(line: 4677, column: 3, scope: !10201)
!10205 = !DILocation(line: 4678, column: 6, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4678, column: 6)
!10207 = !DILocation(line: 4678, column: 12, scope: !10206)
!10208 = !DILocation(line: 4678, column: 9, scope: !10206)
!10209 = !DILocation(line: 4678, column: 6, scope: !10042)
!10210 = !DILocation(line: 4679, column: 14, scope: !10206)
!10211 = !DILocation(line: 4679, column: 3, scope: !10206)
!10212 = !DILocation(line: 4680, column: 8, scope: !10042)
!10213 = !DILocation(line: 4680, column: 2, scope: !10042)
!10214 = !DILocation(line: 4681, column: 6, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 4681, column: 6)
!10216 = !DILocation(line: 4681, column: 12, scope: !10215)
!10217 = !DILocation(line: 4681, column: 6, scope: !10042)
!10218 = !DILocation(line: 4682, column: 3, scope: !10215)
!10219 = !DILocation(line: 4684, column: 1, scope: !10042)
!10220 = distinct !DISubprogram(name: "HFCmulti_init", scope: !3, file: !3, line: 5473, type: !10221, scopeLine: 5474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10221 = !DISubroutineType(types: !10222)
!10222 = !{!37}
!10223 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !10224)
!10224 = distinct !DILocation(line: 5486, column: 2, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5486, column: 2)
!10226 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !10227)
!10227 = distinct !DILocation(line: 5485, column: 2, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5485, column: 2)
!10229 = !DILocalVariable(name: "err", scope: !10220, file: !3, line: 5475, type: !37)
!10230 = !DILocation(line: 5475, column: 6, scope: !10220)
!10231 = !DILocalVariable(name: "i", scope: !10220, file: !3, line: 5476, type: !37)
!10232 = !DILocation(line: 5476, column: 6, scope: !10220)
!10233 = !DILocalVariable(name: "xhfc", scope: !10220, file: !3, line: 5476, type: !37)
!10234 = !DILocation(line: 5476, column: 9, scope: !10220)
!10235 = !DILocalVariable(name: "m", scope: !10220, file: !3, line: 5477, type: !9135)
!10236 = !DILocation(line: 5477, column: 16, scope: !10220)
!10237 = !DILocation(line: 5479, column: 2, scope: !10220)
!10238 = !DILocation(line: 5485, column: 2, scope: !10220)
!10239 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !10227)
!10240 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !10227)
!10241 = !DILocation(line: 5485, column: 2, scope: !10228)
!10242 = !DILocation(line: 5486, column: 2, scope: !10220)
!10243 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !10224)
!10244 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !10224)
!10245 = !DILocation(line: 5486, column: 2, scope: !10225)
!10246 = !DILocation(line: 5488, column: 6, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5488, column: 6)
!10248 = !DILocation(line: 5488, column: 12, scope: !10247)
!10249 = !DILocation(line: 5488, column: 6, scope: !10220)
!10250 = !DILocation(line: 5489, column: 3, scope: !10247)
!10251 = !DILocation(line: 5491, column: 10, scope: !10220)
!10252 = !DILocation(line: 5491, column: 2, scope: !10220)
!10253 = !DILocation(line: 5493, column: 14, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5491, column: 16)
!10255 = !DILocation(line: 5494, column: 8, scope: !10254)
!10256 = !DILocation(line: 5495, column: 3, scope: !10254)
!10257 = !DILocation(line: 5497, column: 14, scope: !10254)
!10258 = !DILocation(line: 5498, column: 3, scope: !10254)
!10259 = !DILocation(line: 5500, column: 14, scope: !10254)
!10260 = !DILocation(line: 5501, column: 3, scope: !10254)
!10261 = !DILocation(line: 5503, column: 14, scope: !10254)
!10262 = !DILocation(line: 5504, column: 3, scope: !10254)
!10263 = !DILocation(line: 5506, column: 14, scope: !10254)
!10264 = !DILocation(line: 5507, column: 3, scope: !10254)
!10265 = !DILocation(line: 5509, column: 14, scope: !10254)
!10266 = !DILocation(line: 5510, column: 3, scope: !10254)
!10267 = !DILocation(line: 5512, column: 14, scope: !10254)
!10268 = !DILocation(line: 5513, column: 3, scope: !10254)
!10269 = !DILocation(line: 5516, column: 52, scope: !10254)
!10270 = !DILocation(line: 5515, column: 3, scope: !10254)
!10271 = !DILocation(line: 5517, column: 7, scope: !10254)
!10272 = !DILocation(line: 5518, column: 10, scope: !10254)
!10273 = !DILocation(line: 5518, column: 3, scope: !10254)
!10274 = !DILocation(line: 5522, column: 7, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5522, column: 6)
!10276 = !DILocation(line: 5522, column: 6, scope: !10220)
!10277 = !DILocation(line: 5523, column: 9, scope: !10275)
!10278 = !DILocation(line: 5523, column: 3, scope: !10275)
!10279 = !DILocation(line: 5527, column: 10, scope: !10220)
!10280 = !DILocation(line: 5527, column: 2, scope: !10220)
!10281 = !DILocation(line: 5529, column: 8, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5527, column: 16)
!10283 = !DILocation(line: 5530, column: 7, scope: !10282)
!10284 = !DILocation(line: 5531, column: 3, scope: !10282)
!10285 = !DILocation(line: 5533, column: 8, scope: !10282)
!10286 = !DILocation(line: 5534, column: 7, scope: !10282)
!10287 = !DILocation(line: 5535, column: 3, scope: !10282)
!10288 = !DILocation(line: 5537, column: 8, scope: !10282)
!10289 = !DILocation(line: 5538, column: 7, scope: !10282)
!10290 = !DILocation(line: 5539, column: 3, scope: !10282)
!10291 = !DILocation(line: 5541, column: 8, scope: !10282)
!10292 = !DILocation(line: 5542, column: 2, scope: !10282)
!10293 = !DILocation(line: 5544, column: 9, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5544, column: 2)
!10295 = !DILocation(line: 5544, column: 7, scope: !10294)
!10296 = !DILocation(line: 5544, column: 14, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 5544, column: 2)
!10298 = !DILocation(line: 5544, column: 18, scope: !10297)
!10299 = !DILocation(line: 5544, column: 16, scope: !10297)
!10300 = !DILocation(line: 5544, column: 2, scope: !10294)
!10301 = !DILocation(line: 5545, column: 9, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10297, file: !3, line: 5544, column: 29)
!10303 = !DILocation(line: 5545, column: 7, scope: !10302)
!10304 = !DILocation(line: 5546, column: 7, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 5546, column: 7)
!10306 = !DILocation(line: 5546, column: 7, scope: !10302)
!10307 = !DILocation(line: 5548, column: 19, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 5546, column: 12)
!10309 = !DILocation(line: 5547, column: 4, scope: !10308)
!10310 = !DILocation(line: 5549, column: 11, scope: !10308)
!10311 = !DILocation(line: 5549, column: 4, scope: !10308)
!10312 = !DILocation(line: 5551, column: 10, scope: !10302)
!10313 = !DILocation(line: 5552, column: 47, scope: !10302)
!10314 = !DILocation(line: 5552, column: 3, scope: !10302)
!10315 = !DILocation(line: 5553, column: 2, scope: !10302)
!10316 = !DILocation(line: 5544, column: 24, scope: !10297)
!10317 = !DILocation(line: 5544, column: 2, scope: !10297)
!10318 = distinct !{!10318, !10300, !10319}
!10319 = !DILocation(line: 5553, column: 2, scope: !10294)
!10320 = !DILocation(line: 5556, column: 8, scope: !10220)
!10321 = !DILocation(line: 5556, column: 6, scope: !10220)
!10322 = !DILocation(line: 5557, column: 6, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5557, column: 6)
!10324 = !DILocation(line: 5557, column: 10, scope: !10323)
!10325 = !DILocation(line: 5557, column: 6, scope: !10220)
!10326 = !DILocation(line: 5558, column: 57, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10323, file: !3, line: 5557, column: 15)
!10328 = !DILocation(line: 5558, column: 3, scope: !10327)
!10329 = !DILocation(line: 5559, column: 10, scope: !10327)
!10330 = !DILocation(line: 5559, column: 3, scope: !10327)
!10331 = !DILocation(line: 5562, column: 2, scope: !10220)
!10332 = !DILocation(line: 5563, column: 1, scope: !10220)
!10333 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !10334, file: !10334, line: 666, type: !10335, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10334 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!10335 = !DISubroutineType(types: !10336)
!10336 = !{!317}
!10337 = !DILocalVariable(name: "f", scope: !10333, file: !10334, line: 668, type: !317)
!10338 = !DILocation(line: 668, column: 16, scope: !10333)
!10339 = !DILocation(line: 670, column: 6, scope: !10333)
!10340 = !DILocation(line: 670, column: 4, scope: !10333)
!10341 = !DILocation(line: 671, column: 2, scope: !10333)
!10342 = !DILocation(line: 672, column: 9, scope: !10333)
!10343 = !DILocation(line: 672, column: 2, scope: !10333)
!10344 = distinct !DISubprogram(name: "disable_hwirq", scope: !3, file: !3, line: 543, type: !9447, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10345 = !DILocalVariable(name: "hc", arg: 1, scope: !10344, file: !3, line: 543, type: !9128)
!10346 = !DILocation(line: 543, column: 33, scope: !10344)
!10347 = !DILocation(line: 545, column: 2, scope: !10344)
!10348 = !DILocation(line: 545, column: 6, scope: !10344)
!10349 = !DILocation(line: 545, column: 9, scope: !10344)
!10350 = !DILocation(line: 545, column: 20, scope: !10344)
!10351 = !DILocation(line: 546, column: 2, scope: !10344)
!10352 = !DILocation(line: 547, column: 1, scope: !10344)
!10353 = distinct !DISubprogram(name: "release_port", scope: !3, file: !3, line: 4513, type: !10354, scopeLine: 4514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10354 = !DISubroutineType(types: !10355)
!10355 = !{null, !9128, !9538}
!10356 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !10357)
!10357 = distinct !DILocation(line: 4611, column: 4, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 4611, column: 4)
!10359 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 4611, column: 4)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 4611, column: 4)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !3, line: 4611, column: 4)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 4611, column: 4)
!10363 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 4599, column: 29)
!10364 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 4599, column: 7)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 4577, column: 9)
!10366 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 4553, column: 6)
!10367 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !10368)
!10368 = distinct !DILocation(line: 4607, column: 4, scope: !10363)
!10369 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !10368)
!10370 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !10371)
!10371 = distinct !DILocation(line: 4597, column: 4, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 4597, column: 4)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 4597, column: 4)
!10374 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 4597, column: 4)
!10375 = distinct !DILexicalBlock(scope: !10376, file: !3, line: 4597, column: 4)
!10376 = distinct !DILexicalBlock(scope: !10377, file: !3, line: 4597, column: 4)
!10377 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 4585, column: 29)
!10378 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 4585, column: 7)
!10379 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !10380)
!10380 = distinct !DILocation(line: 4593, column: 4, scope: !10377)
!10381 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !10380)
!10382 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !10383)
!10383 = distinct !DILocation(line: 4574, column: 5, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10385, file: !3, line: 4574, column: 5)
!10385 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 4574, column: 5)
!10386 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 4574, column: 5)
!10387 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 4574, column: 5)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !3, line: 4574, column: 5)
!10389 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 4563, column: 25)
!10390 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 4563, column: 8)
!10391 = distinct !DILexicalBlock(scope: !10392, file: !3, line: 4560, column: 29)
!10392 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 4560, column: 3)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 4560, column: 3)
!10394 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 4553, column: 32)
!10395 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !10396)
!10396 = distinct !DILocation(line: 4570, column: 5, scope: !10389)
!10397 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !10396)
!10398 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !10399)
!10399 = distinct !DILocation(line: 4615, column: 2, scope: !10353)
!10400 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !10399)
!10401 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !10402)
!10402 = distinct !DILocation(line: 4546, column: 2, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 4546, column: 2)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !3, line: 4546, column: 2)
!10405 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 4546, column: 2)
!10406 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 4546, column: 2)
!10407 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 4546, column: 2)
!10408 = !DILocalVariable(name: "hc", arg: 1, scope: !10353, file: !3, line: 4513, type: !9128)
!10409 = !DILocation(line: 4513, column: 32, scope: !10353)
!10410 = !DILocalVariable(name: "dch", arg: 2, scope: !10353, file: !3, line: 4513, type: !9538)
!10411 = !DILocation(line: 4513, column: 53, scope: !10353)
!10412 = !DILocalVariable(name: "pt", scope: !10353, file: !3, line: 4515, type: !37)
!10413 = !DILocation(line: 4515, column: 6, scope: !10353)
!10414 = !DILocalVariable(name: "ci", scope: !10353, file: !3, line: 4515, type: !37)
!10415 = !DILocation(line: 4515, column: 10, scope: !10353)
!10416 = !DILocalVariable(name: "i", scope: !10353, file: !3, line: 4515, type: !37)
!10417 = !DILocation(line: 4515, column: 14, scope: !10353)
!10418 = !DILocalVariable(name: "flags", scope: !10353, file: !3, line: 4516, type: !9457)
!10419 = !DILocation(line: 4516, column: 9, scope: !10353)
!10420 = !DILocalVariable(name: "pb", scope: !10353, file: !3, line: 4517, type: !9617)
!10421 = !DILocation(line: 4517, column: 19, scope: !10353)
!10422 = !DILocation(line: 4519, column: 7, scope: !10353)
!10423 = !DILocation(line: 4519, column: 12, scope: !10353)
!10424 = !DILocation(line: 4519, column: 5, scope: !10353)
!10425 = !DILocation(line: 4520, column: 7, scope: !10353)
!10426 = !DILocation(line: 4520, column: 11, scope: !10353)
!10427 = !DILocation(line: 4520, column: 16, scope: !10353)
!10428 = !DILocation(line: 4520, column: 20, scope: !10353)
!10429 = !DILocation(line: 4520, column: 5, scope: !10353)
!10430 = !DILocation(line: 4522, column: 6, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 4522, column: 6)
!10432 = !DILocation(line: 4522, column: 12, scope: !10431)
!10433 = !DILocation(line: 4522, column: 6, scope: !10353)
!10434 = !DILocation(line: 4524, column: 20, scope: !10431)
!10435 = !DILocation(line: 4524, column: 23, scope: !10431)
!10436 = !DILocation(line: 4523, column: 3, scope: !10431)
!10437 = !DILocation(line: 4526, column: 6, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 4526, column: 6)
!10439 = !DILocation(line: 4526, column: 12, scope: !10438)
!10440 = !DILocation(line: 4526, column: 16, scope: !10438)
!10441 = !DILocation(line: 4526, column: 9, scope: !10438)
!10442 = !DILocation(line: 4526, column: 6, scope: !10353)
!10443 = !DILocation(line: 4528, column: 20, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 4526, column: 23)
!10445 = !DILocation(line: 4528, column: 23, scope: !10444)
!10446 = !DILocation(line: 4527, column: 3, scope: !10444)
!10447 = !DILocation(line: 4529, column: 3, scope: !10444)
!10448 = !DILocation(line: 4532, column: 6, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 4532, column: 6)
!10450 = !DILocation(line: 4532, column: 12, scope: !10449)
!10451 = !DILocation(line: 4532, column: 6, scope: !10353)
!10452 = !DILocation(line: 4534, column: 20, scope: !10449)
!10453 = !DILocation(line: 4534, column: 23, scope: !10449)
!10454 = !DILocation(line: 4533, column: 3, scope: !10449)
!10455 = !DILocation(line: 4536, column: 6, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 4536, column: 6)
!10457 = !DILocation(line: 4536, column: 11, scope: !10456)
!10458 = !DILocation(line: 4536, column: 15, scope: !10456)
!10459 = !DILocation(line: 4536, column: 17, scope: !10456)
!10460 = !DILocation(line: 4536, column: 26, scope: !10456)
!10461 = !DILocation(line: 4536, column: 6, scope: !10353)
!10462 = !DILocation(line: 4537, column: 12, scope: !10456)
!10463 = !DILocation(line: 4537, column: 17, scope: !10456)
!10464 = !DILocation(line: 4537, column: 3, scope: !10456)
!10465 = !DILocation(line: 4539, column: 2, scope: !10353)
!10466 = !DILocation(line: 4539, column: 6, scope: !10353)
!10467 = !DILocation(line: 4539, column: 11, scope: !10353)
!10468 = !DILocation(line: 4539, column: 15, scope: !10353)
!10469 = !DILocation(line: 4539, column: 19, scope: !10353)
!10470 = !DILocation(line: 4541, column: 6, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 4541, column: 6)
!10472 = !DILocation(line: 4541, column: 10, scope: !10471)
!10473 = !DILocation(line: 4541, column: 18, scope: !10471)
!10474 = !DILocation(line: 4541, column: 6, scope: !10353)
!10475 = !DILocation(line: 4542, column: 3, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 4541, column: 23)
!10477 = !DILocation(line: 4542, column: 7, scope: !10476)
!10478 = !DILocation(line: 4542, column: 15, scope: !10476)
!10479 = !DILocation(line: 4542, column: 19, scope: !10476)
!10480 = !DILocation(line: 4543, column: 28, scope: !10476)
!10481 = !DILocation(line: 4543, column: 33, scope: !10476)
!10482 = !DILocation(line: 4543, column: 3, scope: !10476)
!10483 = !DILocation(line: 4544, column: 2, scope: !10476)
!10484 = !DILocation(line: 4546, column: 2, scope: !10353)
!10485 = !DILocation(line: 4546, column: 2, scope: !10407)
!10486 = !DILocalVariable(name: "__dummy", scope: !10487, file: !3, line: 4546, type: !317)
!10487 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 4546, column: 2)
!10488 = !DILocation(line: 4546, column: 2, scope: !10487)
!10489 = !DILocalVariable(name: "__dummy2", scope: !10487, file: !3, line: 4546, type: !9457)
!10490 = !DILocation(line: 4546, column: 2, scope: !10406)
!10491 = !DILocation(line: 4546, column: 2, scope: !10405)
!10492 = !DILocation(line: 4546, column: 2, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10405, file: !3, line: 4546, column: 2)
!10494 = !DILocalVariable(name: "__dummy", scope: !10495, file: !3, line: 4546, type: !317)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 4546, column: 2)
!10496 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 4546, column: 2)
!10497 = !DILocation(line: 4546, column: 2, scope: !10495)
!10498 = !DILocalVariable(name: "__dummy2", scope: !10495, file: !3, line: 4546, type: !9457)
!10499 = !DILocation(line: 4546, column: 2, scope: !10496)
!10500 = !DILocation(line: 4546, column: 2, scope: !10404)
!10501 = !{i32 -2138014316}
!10502 = !DILocation(line: 4546, column: 2, scope: !10403)
!10503 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !10402)
!10504 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !10402)
!10505 = !DILocation(line: 4548, column: 6, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 4548, column: 6)
!10507 = !DILocation(line: 4548, column: 11, scope: !10506)
!10508 = !DILocation(line: 4548, column: 17, scope: !10506)
!10509 = !DILocation(line: 4548, column: 6, scope: !10353)
!10510 = !DILocation(line: 4549, column: 14, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 4548, column: 27)
!10512 = !DILocation(line: 4549, column: 19, scope: !10511)
!10513 = !DILocation(line: 4549, column: 3, scope: !10511)
!10514 = !DILocation(line: 4550, column: 3, scope: !10511)
!10515 = !DILocation(line: 4550, column: 8, scope: !10511)
!10516 = !DILocation(line: 4550, column: 14, scope: !10511)
!10517 = !DILocation(line: 4550, column: 23, scope: !10511)
!10518 = !DILocation(line: 4551, column: 2, scope: !10511)
!10519 = !DILocation(line: 4553, column: 6, scope: !10366)
!10520 = !DILocation(line: 4553, column: 10, scope: !10366)
!10521 = !DILocation(line: 4553, column: 16, scope: !10366)
!10522 = !DILocation(line: 4553, column: 6, scope: !10353)
!10523 = !DILocation(line: 4555, column: 33, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 4555, column: 7)
!10525 = !DILocation(line: 4555, column: 37, scope: !10524)
!10526 = !DILocation(line: 4555, column: 7, scope: !10524)
!10527 = !DILocation(line: 4555, column: 7, scope: !10394)
!10528 = !DILocation(line: 4556, column: 4, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 4555, column: 44)
!10530 = !DILocation(line: 4556, column: 8, scope: !10529)
!10531 = !DILocation(line: 4556, column: 20, scope: !10529)
!10532 = !DILocation(line: 4557, column: 20, scope: !10529)
!10533 = !DILocation(line: 4557, column: 4, scope: !10529)
!10534 = !DILocation(line: 4558, column: 3, scope: !10529)
!10535 = !DILocation(line: 4560, column: 10, scope: !10393)
!10536 = !DILocation(line: 4560, column: 8, scope: !10393)
!10537 = !DILocation(line: 4560, column: 15, scope: !10392)
!10538 = !DILocation(line: 4560, column: 17, scope: !10392)
!10539 = !DILocation(line: 4560, column: 3, scope: !10393)
!10540 = !DILocation(line: 4561, column: 16, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 4561, column: 8)
!10542 = !DILocation(line: 4561, column: 13, scope: !10541)
!10543 = !DILocation(line: 4561, column: 21, scope: !10541)
!10544 = !DILocation(line: 4561, column: 25, scope: !10541)
!10545 = !DILocation(line: 4561, column: 31, scope: !10541)
!10546 = !DILocation(line: 4561, column: 19, scope: !10541)
!10547 = !DILocation(line: 4561, column: 8, scope: !10391)
!10548 = !DILocation(line: 4562, column: 5, scope: !10541)
!10549 = !DILocation(line: 4563, column: 8, scope: !10390)
!10550 = !DILocation(line: 4563, column: 12, scope: !10390)
!10551 = !DILocation(line: 4563, column: 17, scope: !10390)
!10552 = !DILocation(line: 4563, column: 20, scope: !10390)
!10553 = !DILocation(line: 4563, column: 8, scope: !10391)
!10554 = !DILocation(line: 4564, column: 9, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10389, file: !3, line: 4564, column: 9)
!10556 = !DILocation(line: 4564, column: 15, scope: !10555)
!10557 = !DILocation(line: 4564, column: 9, scope: !10389)
!10558 = !DILocation(line: 4567, column: 23, scope: !10555)
!10559 = !DILocation(line: 4567, column: 27, scope: !10555)
!10560 = !DILocation(line: 4567, column: 32, scope: !10555)
!10561 = !DILocation(line: 4567, column: 35, scope: !10555)
!10562 = !DILocation(line: 4567, column: 40, scope: !10555)
!10563 = !DILocation(line: 4567, column: 45, scope: !10555)
!10564 = !DILocation(line: 4565, column: 6, scope: !10555)
!10565 = !DILocation(line: 4568, column: 10, scope: !10389)
!10566 = !DILocation(line: 4568, column: 14, scope: !10389)
!10567 = !DILocation(line: 4568, column: 19, scope: !10389)
!10568 = !DILocation(line: 4568, column: 22, scope: !10389)
!10569 = !DILocation(line: 4568, column: 8, scope: !10389)
!10570 = !DILocation(line: 4569, column: 5, scope: !10389)
!10571 = !DILocation(line: 4569, column: 9, scope: !10389)
!10572 = !DILocation(line: 4569, column: 14, scope: !10389)
!10573 = !DILocation(line: 4569, column: 17, scope: !10389)
!10574 = !DILocation(line: 4569, column: 21, scope: !10389)
!10575 = !DILocation(line: 4570, column: 29, scope: !10389)
!10576 = !DILocation(line: 4570, column: 33, scope: !10389)
!10577 = !DILocation(line: 4570, column: 39, scope: !10389)
!10578 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !10396)
!10579 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !10396)
!10580 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !10396)
!10581 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !10396)
!10582 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !10396)
!10583 = !DILocation(line: 4571, column: 24, scope: !10389)
!10584 = !DILocation(line: 4571, column: 5, scope: !10389)
!10585 = !DILocation(line: 4572, column: 11, scope: !10389)
!10586 = !DILocation(line: 4572, column: 5, scope: !10389)
!10587 = !DILocation(line: 4573, column: 11, scope: !10389)
!10588 = !DILocation(line: 4573, column: 15, scope: !10389)
!10589 = !DILocation(line: 4573, column: 20, scope: !10389)
!10590 = !DILocation(line: 4573, column: 23, scope: !10389)
!10591 = !DILocation(line: 4573, column: 5, scope: !10389)
!10592 = !DILocation(line: 4574, column: 5, scope: !10389)
!10593 = !DILocation(line: 4574, column: 5, scope: !10388)
!10594 = !DILocalVariable(name: "__dummy", scope: !10595, file: !3, line: 4574, type: !317)
!10595 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 4574, column: 5)
!10596 = !DILocation(line: 4574, column: 5, scope: !10595)
!10597 = !DILocalVariable(name: "__dummy2", scope: !10595, file: !3, line: 4574, type: !9457)
!10598 = !DILocation(line: 4574, column: 5, scope: !10387)
!10599 = !DILocation(line: 4574, column: 5, scope: !10386)
!10600 = !DILocation(line: 4574, column: 5, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 4574, column: 5)
!10602 = !DILocalVariable(name: "__dummy", scope: !10603, file: !3, line: 4574, type: !317)
!10603 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 4574, column: 5)
!10604 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 4574, column: 5)
!10605 = !DILocation(line: 4574, column: 5, scope: !10603)
!10606 = !DILocalVariable(name: "__dummy2", scope: !10603, file: !3, line: 4574, type: !9457)
!10607 = !DILocation(line: 4574, column: 5, scope: !10604)
!10608 = !DILocation(line: 4574, column: 5, scope: !10385)
!10609 = !{i32 -2138013251}
!10610 = !DILocation(line: 4574, column: 5, scope: !10384)
!10611 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !10383)
!10612 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !10383)
!10613 = !DILocation(line: 4575, column: 4, scope: !10389)
!10614 = !DILocation(line: 4576, column: 3, scope: !10391)
!10615 = !DILocation(line: 4560, column: 25, scope: !10392)
!10616 = !DILocation(line: 4560, column: 3, scope: !10392)
!10617 = distinct !{!10617, !10539, !10618}
!10618 = !DILocation(line: 4576, column: 3, scope: !10393)
!10619 = !DILocation(line: 4577, column: 2, scope: !10394)
!10620 = !DILocation(line: 4579, column: 33, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 4579, column: 7)
!10622 = !DILocation(line: 4579, column: 37, scope: !10621)
!10623 = !DILocation(line: 4579, column: 7, scope: !10621)
!10624 = !DILocation(line: 4579, column: 7, scope: !10365)
!10625 = !DILocation(line: 4581, column: 12, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 4579, column: 44)
!10627 = !DILocation(line: 4581, column: 16, scope: !10626)
!10628 = !DILocation(line: 4581, column: 21, scope: !10626)
!10629 = !DILocation(line: 4581, column: 25, scope: !10626)
!10630 = !DILocation(line: 4581, column: 9, scope: !10626)
!10631 = !DILocation(line: 4581, column: 5, scope: !10626)
!10632 = !DILocation(line: 4580, column: 4, scope: !10626)
!10633 = !DILocation(line: 4580, column: 8, scope: !10626)
!10634 = !DILocation(line: 4580, column: 20, scope: !10626)
!10635 = !DILocation(line: 4582, column: 20, scope: !10626)
!10636 = !DILocation(line: 4582, column: 4, scope: !10626)
!10637 = !DILocation(line: 4583, column: 3, scope: !10626)
!10638 = !DILocation(line: 4585, column: 7, scope: !10378)
!10639 = !DILocation(line: 4585, column: 11, scope: !10378)
!10640 = !DILocation(line: 4585, column: 16, scope: !10378)
!10641 = !DILocation(line: 4585, column: 19, scope: !10378)
!10642 = !DILocation(line: 4585, column: 24, scope: !10378)
!10643 = !DILocation(line: 4585, column: 7, scope: !10365)
!10644 = !DILocation(line: 4586, column: 8, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10377, file: !3, line: 4586, column: 8)
!10646 = !DILocation(line: 4586, column: 14, scope: !10645)
!10647 = !DILocation(line: 4586, column: 8, scope: !10377)
!10648 = !DILocation(line: 4589, column: 22, scope: !10645)
!10649 = !DILocation(line: 4589, column: 26, scope: !10645)
!10650 = !DILocation(line: 4589, column: 31, scope: !10645)
!10651 = !DILocation(line: 4589, column: 34, scope: !10645)
!10652 = !DILocation(line: 4589, column: 39, scope: !10645)
!10653 = !DILocation(line: 4589, column: 44, scope: !10645)
!10654 = !DILocation(line: 4590, column: 12, scope: !10645)
!10655 = !DILocation(line: 4590, column: 15, scope: !10645)
!10656 = !DILocation(line: 4587, column: 5, scope: !10645)
!10657 = !DILocation(line: 4591, column: 9, scope: !10377)
!10658 = !DILocation(line: 4591, column: 13, scope: !10377)
!10659 = !DILocation(line: 4591, column: 18, scope: !10377)
!10660 = !DILocation(line: 4591, column: 21, scope: !10377)
!10661 = !DILocation(line: 4591, column: 26, scope: !10377)
!10662 = !DILocation(line: 4591, column: 7, scope: !10377)
!10663 = !DILocation(line: 4592, column: 4, scope: !10377)
!10664 = !DILocation(line: 4592, column: 8, scope: !10377)
!10665 = !DILocation(line: 4592, column: 13, scope: !10377)
!10666 = !DILocation(line: 4592, column: 16, scope: !10377)
!10667 = !DILocation(line: 4592, column: 21, scope: !10377)
!10668 = !DILocation(line: 4592, column: 25, scope: !10377)
!10669 = !DILocation(line: 4593, column: 28, scope: !10377)
!10670 = !DILocation(line: 4593, column: 32, scope: !10377)
!10671 = !DILocation(line: 4593, column: 38, scope: !10377)
!10672 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !10380)
!10673 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !10380)
!10674 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !10380)
!10675 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !10380)
!10676 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !10380)
!10677 = !DILocation(line: 4594, column: 23, scope: !10377)
!10678 = !DILocation(line: 4594, column: 4, scope: !10377)
!10679 = !DILocation(line: 4595, column: 10, scope: !10377)
!10680 = !DILocation(line: 4595, column: 4, scope: !10377)
!10681 = !DILocation(line: 4596, column: 10, scope: !10377)
!10682 = !DILocation(line: 4596, column: 14, scope: !10377)
!10683 = !DILocation(line: 4596, column: 19, scope: !10377)
!10684 = !DILocation(line: 4596, column: 22, scope: !10377)
!10685 = !DILocation(line: 4596, column: 27, scope: !10377)
!10686 = !DILocation(line: 4596, column: 4, scope: !10377)
!10687 = !DILocation(line: 4597, column: 4, scope: !10377)
!10688 = !DILocation(line: 4597, column: 4, scope: !10376)
!10689 = !DILocalVariable(name: "__dummy", scope: !10690, file: !3, line: 4597, type: !317)
!10690 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 4597, column: 4)
!10691 = !DILocation(line: 4597, column: 4, scope: !10690)
!10692 = !DILocalVariable(name: "__dummy2", scope: !10690, file: !3, line: 4597, type: !9457)
!10693 = !DILocation(line: 4597, column: 4, scope: !10375)
!10694 = !DILocation(line: 4597, column: 4, scope: !10374)
!10695 = !DILocation(line: 4597, column: 4, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 4597, column: 4)
!10697 = !DILocalVariable(name: "__dummy", scope: !10698, file: !3, line: 4597, type: !317)
!10698 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 4597, column: 4)
!10699 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 4597, column: 4)
!10700 = !DILocation(line: 4597, column: 4, scope: !10698)
!10701 = !DILocalVariable(name: "__dummy2", scope: !10698, file: !3, line: 4597, type: !9457)
!10702 = !DILocation(line: 4597, column: 4, scope: !10699)
!10703 = !DILocation(line: 4597, column: 4, scope: !10373)
!10704 = !{i32 -2138012200}
!10705 = !DILocation(line: 4597, column: 4, scope: !10372)
!10706 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !10371)
!10707 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !10371)
!10708 = !DILocation(line: 4598, column: 3, scope: !10377)
!10709 = !DILocation(line: 4599, column: 7, scope: !10364)
!10710 = !DILocation(line: 4599, column: 11, scope: !10364)
!10711 = !DILocation(line: 4599, column: 16, scope: !10364)
!10712 = !DILocation(line: 4599, column: 19, scope: !10364)
!10713 = !DILocation(line: 4599, column: 24, scope: !10364)
!10714 = !DILocation(line: 4599, column: 7, scope: !10365)
!10715 = !DILocation(line: 4600, column: 8, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 4600, column: 8)
!10717 = !DILocation(line: 4600, column: 14, scope: !10716)
!10718 = !DILocation(line: 4600, column: 8, scope: !10363)
!10719 = !DILocation(line: 4603, column: 22, scope: !10716)
!10720 = !DILocation(line: 4603, column: 26, scope: !10716)
!10721 = !DILocation(line: 4603, column: 31, scope: !10716)
!10722 = !DILocation(line: 4603, column: 34, scope: !10716)
!10723 = !DILocation(line: 4603, column: 39, scope: !10716)
!10724 = !DILocation(line: 4603, column: 44, scope: !10716)
!10725 = !DILocation(line: 4604, column: 12, scope: !10716)
!10726 = !DILocation(line: 4604, column: 15, scope: !10716)
!10727 = !DILocation(line: 4601, column: 5, scope: !10716)
!10728 = !DILocation(line: 4605, column: 9, scope: !10363)
!10729 = !DILocation(line: 4605, column: 13, scope: !10363)
!10730 = !DILocation(line: 4605, column: 18, scope: !10363)
!10731 = !DILocation(line: 4605, column: 21, scope: !10363)
!10732 = !DILocation(line: 4605, column: 26, scope: !10363)
!10733 = !DILocation(line: 4605, column: 7, scope: !10363)
!10734 = !DILocation(line: 4606, column: 4, scope: !10363)
!10735 = !DILocation(line: 4606, column: 8, scope: !10363)
!10736 = !DILocation(line: 4606, column: 13, scope: !10363)
!10737 = !DILocation(line: 4606, column: 16, scope: !10363)
!10738 = !DILocation(line: 4606, column: 21, scope: !10363)
!10739 = !DILocation(line: 4606, column: 25, scope: !10363)
!10740 = !DILocation(line: 4607, column: 28, scope: !10363)
!10741 = !DILocation(line: 4607, column: 32, scope: !10363)
!10742 = !DILocation(line: 4607, column: 38, scope: !10363)
!10743 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !10368)
!10744 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !10368)
!10745 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !10368)
!10746 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !10368)
!10747 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !10368)
!10748 = !DILocation(line: 4608, column: 23, scope: !10363)
!10749 = !DILocation(line: 4608, column: 4, scope: !10363)
!10750 = !DILocation(line: 4609, column: 10, scope: !10363)
!10751 = !DILocation(line: 4609, column: 4, scope: !10363)
!10752 = !DILocation(line: 4610, column: 10, scope: !10363)
!10753 = !DILocation(line: 4610, column: 14, scope: !10363)
!10754 = !DILocation(line: 4610, column: 19, scope: !10363)
!10755 = !DILocation(line: 4610, column: 22, scope: !10363)
!10756 = !DILocation(line: 4610, column: 27, scope: !10363)
!10757 = !DILocation(line: 4610, column: 4, scope: !10363)
!10758 = !DILocation(line: 4611, column: 4, scope: !10363)
!10759 = !DILocation(line: 4611, column: 4, scope: !10362)
!10760 = !DILocalVariable(name: "__dummy", scope: !10761, file: !3, line: 4611, type: !317)
!10761 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 4611, column: 4)
!10762 = !DILocation(line: 4611, column: 4, scope: !10761)
!10763 = !DILocalVariable(name: "__dummy2", scope: !10761, file: !3, line: 4611, type: !9457)
!10764 = !DILocation(line: 4611, column: 4, scope: !10361)
!10765 = !DILocation(line: 4611, column: 4, scope: !10360)
!10766 = !DILocation(line: 4611, column: 4, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 4611, column: 4)
!10768 = !DILocalVariable(name: "__dummy", scope: !10769, file: !3, line: 4611, type: !317)
!10769 = distinct !DILexicalBlock(scope: !10770, file: !3, line: 4611, column: 4)
!10770 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 4611, column: 4)
!10771 = !DILocation(line: 4611, column: 4, scope: !10769)
!10772 = !DILocalVariable(name: "__dummy2", scope: !10769, file: !3, line: 4611, type: !9457)
!10773 = !DILocation(line: 4611, column: 4, scope: !10770)
!10774 = !DILocation(line: 4611, column: 4, scope: !10359)
!10775 = !{i32 -2138011152}
!10776 = !DILocation(line: 4611, column: 4, scope: !10358)
!10777 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !10357)
!10778 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !10357)
!10779 = !DILocation(line: 4612, column: 3, scope: !10363)
!10780 = !DILocation(line: 4615, column: 26, scope: !10353)
!10781 = !DILocation(line: 4615, column: 30, scope: !10353)
!10782 = !DILocation(line: 4615, column: 36, scope: !10353)
!10783 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !10399)
!10784 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !10399)
!10785 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !10399)
!10786 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !10399)
!10787 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !10399)
!10788 = !DILocation(line: 4617, column: 6, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 4617, column: 6)
!10790 = !DILocation(line: 4617, column: 12, scope: !10789)
!10791 = !DILocation(line: 4617, column: 6, scope: !10353)
!10792 = !DILocation(line: 4619, column: 4, scope: !10789)
!10793 = !DILocation(line: 4619, column: 6, scope: !10789)
!10794 = !DILocation(line: 4619, column: 10, scope: !10789)
!10795 = !DILocation(line: 4618, column: 3, scope: !10789)
!10796 = !DILocation(line: 4620, column: 21, scope: !10353)
!10797 = !DILocation(line: 4620, column: 2, scope: !10353)
!10798 = !DILocation(line: 4621, column: 8, scope: !10353)
!10799 = !DILocation(line: 4621, column: 2, scope: !10353)
!10800 = !DILocation(line: 4623, column: 6, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 4623, column: 6)
!10802 = !DILocation(line: 4623, column: 12, scope: !10801)
!10803 = !DILocation(line: 4623, column: 6, scope: !10353)
!10804 = !DILocation(line: 4624, column: 3, scope: !10801)
!10805 = !DILocation(line: 4625, column: 1, scope: !10353)
!10806 = distinct !DISubprogram(name: "hfcmulti_leds", scope: !3, file: !3, line: 1603, type: !9447, scopeLine: 1604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10807 = !DILocalVariable(name: "hc", arg: 1, scope: !10806, file: !3, line: 1603, type: !9128)
!10808 = !DILocation(line: 1603, column: 33, scope: !10806)
!10809 = !DILocalVariable(name: "lled", scope: !10806, file: !3, line: 1605, type: !317)
!10810 = !DILocation(line: 1605, column: 16, scope: !10806)
!10811 = !DILocalVariable(name: "leddw", scope: !10806, file: !3, line: 1606, type: !317)
!10812 = !DILocation(line: 1606, column: 16, scope: !10806)
!10813 = !DILocalVariable(name: "i", scope: !10806, file: !3, line: 1607, type: !37)
!10814 = !DILocation(line: 1607, column: 6, scope: !10806)
!10815 = !DILocalVariable(name: "state", scope: !10806, file: !3, line: 1607, type: !37)
!10816 = !DILocation(line: 1607, column: 9, scope: !10806)
!10817 = !DILocalVariable(name: "active", scope: !10806, file: !3, line: 1607, type: !37)
!10818 = !DILocation(line: 1607, column: 16, scope: !10806)
!10819 = !DILocalVariable(name: "leds", scope: !10806, file: !3, line: 1607, type: !37)
!10820 = !DILocation(line: 1607, column: 24, scope: !10806)
!10821 = !DILocalVariable(name: "dch", scope: !10806, file: !3, line: 1608, type: !9538)
!10822 = !DILocation(line: 1608, column: 19, scope: !10806)
!10823 = !DILocalVariable(name: "led", scope: !10806, file: !3, line: 1609, type: !10824)
!10824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 128, elements: !1202)
!10825 = !DILocation(line: 1609, column: 6, scope: !10806)
!10826 = !DILocation(line: 1611, column: 10, scope: !10806)
!10827 = !DILocation(line: 1611, column: 14, scope: !10806)
!10828 = !DILocation(line: 1611, column: 2, scope: !10806)
!10829 = !DILocation(line: 1619, column: 3, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 1611, column: 20)
!10831 = !DILocation(line: 1619, column: 10, scope: !10830)
!10832 = !DILocation(line: 1620, column: 3, scope: !10830)
!10833 = !DILocation(line: 1620, column: 10, scope: !10830)
!10834 = !DILocation(line: 1621, column: 3, scope: !10830)
!10835 = !DILocation(line: 1621, column: 10, scope: !10830)
!10836 = !DILocation(line: 1622, column: 3, scope: !10830)
!10837 = !DILocation(line: 1622, column: 10, scope: !10830)
!10838 = !DILocation(line: 1623, column: 9, scope: !10830)
!10839 = !DILocation(line: 1623, column: 13, scope: !10830)
!10840 = !DILocation(line: 1623, column: 18, scope: !10830)
!10841 = !DILocation(line: 1623, column: 22, scope: !10830)
!10842 = !DILocation(line: 1623, column: 31, scope: !10830)
!10843 = !DILocation(line: 1623, column: 7, scope: !10830)
!10844 = !DILocation(line: 1624, column: 7, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 1624, column: 7)
!10846 = !DILocation(line: 1624, column: 7, scope: !10830)
!10847 = !DILocation(line: 1625, column: 8, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 1625, column: 8)
!10849 = distinct !DILexicalBlock(scope: !10845, file: !3, line: 1624, column: 12)
!10850 = !DILocation(line: 1625, column: 12, scope: !10848)
!10851 = !DILocation(line: 1625, column: 17, scope: !10848)
!10852 = !DILocation(line: 1625, column: 21, scope: !10848)
!10853 = !DILocation(line: 1625, column: 30, scope: !10848)
!10854 = !DILocation(line: 1625, column: 8, scope: !10849)
!10855 = !DILocation(line: 1626, column: 5, scope: !10848)
!10856 = !DILocation(line: 1626, column: 12, scope: !10848)
!10857 = !DILocation(line: 1627, column: 8, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 1627, column: 8)
!10859 = !DILocation(line: 1627, column: 12, scope: !10858)
!10860 = !DILocation(line: 1627, column: 21, scope: !10858)
!10861 = !DILocation(line: 1627, column: 8, scope: !10849)
!10862 = !DILocation(line: 1628, column: 5, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 1627, column: 27)
!10864 = !DILocation(line: 1628, column: 12, scope: !10863)
!10865 = !DILocation(line: 1629, column: 5, scope: !10863)
!10866 = !DILocation(line: 1629, column: 9, scope: !10863)
!10867 = !DILocation(line: 1629, column: 18, scope: !10863)
!10868 = !DILocation(line: 1630, column: 5, scope: !10863)
!10869 = !DILocation(line: 1630, column: 9, scope: !10863)
!10870 = !DILocation(line: 1630, column: 18, scope: !10863)
!10871 = !DILocation(line: 1631, column: 4, scope: !10863)
!10872 = !DILocation(line: 1632, column: 5, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10858, file: !3, line: 1631, column: 11)
!10874 = !DILocation(line: 1632, column: 12, scope: !10873)
!10875 = !DILocation(line: 1633, column: 5, scope: !10873)
!10876 = !DILocation(line: 1633, column: 12, scope: !10873)
!10877 = !DILocation(line: 1634, column: 10, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1634, column: 9)
!10879 = !DILocation(line: 1634, column: 14, scope: !10878)
!10880 = !DILocation(line: 1634, column: 23, scope: !10878)
!10881 = !DILocation(line: 1634, column: 26, scope: !10878)
!10882 = !DILocation(line: 1634, column: 30, scope: !10878)
!10883 = !DILocation(line: 1634, column: 9, scope: !10873)
!10884 = !DILocation(line: 1635, column: 21, scope: !10878)
!10885 = !DILocation(line: 1635, column: 6, scope: !10878)
!10886 = !DILocation(line: 1635, column: 10, scope: !10878)
!10887 = !DILocation(line: 1635, column: 19, scope: !10878)
!10888 = !DILocation(line: 1636, column: 10, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1636, column: 9)
!10890 = !DILocation(line: 1636, column: 14, scope: !10889)
!10891 = !DILocation(line: 1636, column: 23, scope: !10889)
!10892 = !DILocation(line: 1636, column: 26, scope: !10889)
!10893 = !DILocation(line: 1636, column: 30, scope: !10889)
!10894 = !DILocation(line: 1636, column: 9, scope: !10873)
!10895 = !DILocation(line: 1637, column: 21, scope: !10889)
!10896 = !DILocation(line: 1637, column: 6, scope: !10889)
!10897 = !DILocation(line: 1637, column: 10, scope: !10889)
!10898 = !DILocation(line: 1637, column: 19, scope: !10889)
!10899 = !DILocation(line: 1638, column: 9, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1638, column: 9)
!10901 = !DILocation(line: 1638, column: 13, scope: !10900)
!10902 = !DILocation(line: 1638, column: 22, scope: !10900)
!10903 = !DILocation(line: 1638, column: 25, scope: !10900)
!10904 = !DILocation(line: 1638, column: 29, scope: !10900)
!10905 = !DILocation(line: 1638, column: 38, scope: !10900)
!10906 = !DILocation(line: 1638, column: 9, scope: !10873)
!10907 = !DILocation(line: 1639, column: 6, scope: !10900)
!10908 = !DILocation(line: 1639, column: 13, scope: !10900)
!10909 = !DILocation(line: 1640, column: 9, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1640, column: 9)
!10911 = !DILocation(line: 1640, column: 13, scope: !10910)
!10912 = !DILocation(line: 1640, column: 22, scope: !10910)
!10913 = !DILocation(line: 1640, column: 25, scope: !10910)
!10914 = !DILocation(line: 1640, column: 29, scope: !10910)
!10915 = !DILocation(line: 1640, column: 38, scope: !10910)
!10916 = !DILocation(line: 1640, column: 9, scope: !10873)
!10917 = !DILocation(line: 1641, column: 6, scope: !10910)
!10918 = !DILocation(line: 1641, column: 13, scope: !10910)
!10919 = !DILocation(line: 1642, column: 9, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1642, column: 9)
!10921 = !DILocation(line: 1642, column: 13, scope: !10920)
!10922 = !DILocation(line: 1642, column: 22, scope: !10920)
!10923 = !DILocation(line: 1642, column: 9, scope: !10873)
!10924 = !DILocation(line: 1643, column: 6, scope: !10920)
!10925 = !DILocation(line: 1643, column: 10, scope: !10920)
!10926 = !DILocation(line: 1643, column: 19, scope: !10920)
!10927 = !DILocation(line: 1644, column: 9, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1644, column: 9)
!10929 = !DILocation(line: 1644, column: 13, scope: !10928)
!10930 = !DILocation(line: 1644, column: 22, scope: !10928)
!10931 = !DILocation(line: 1644, column: 9, scope: !10873)
!10932 = !DILocation(line: 1645, column: 6, scope: !10928)
!10933 = !DILocation(line: 1645, column: 10, scope: !10928)
!10934 = !DILocation(line: 1645, column: 19, scope: !10928)
!10935 = !DILocation(line: 1646, column: 9, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1646, column: 9)
!10937 = !DILocation(line: 1646, column: 13, scope: !10936)
!10938 = !DILocation(line: 1646, column: 9, scope: !10873)
!10939 = !DILocation(line: 1647, column: 22, scope: !10936)
!10940 = !DILocation(line: 1647, column: 6, scope: !10936)
!10941 = !DILocation(line: 1647, column: 10, scope: !10936)
!10942 = !DILocation(line: 1647, column: 19, scope: !10936)
!10943 = !DILocation(line: 1648, column: 9, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1648, column: 9)
!10945 = !DILocation(line: 1648, column: 13, scope: !10944)
!10946 = !DILocation(line: 1648, column: 9, scope: !10873)
!10947 = !DILocation(line: 1649, column: 22, scope: !10944)
!10948 = !DILocation(line: 1649, column: 6, scope: !10944)
!10949 = !DILocation(line: 1649, column: 10, scope: !10944)
!10950 = !DILocation(line: 1649, column: 19, scope: !10944)
!10951 = !DILocation(line: 1651, column: 3, scope: !10849)
!10952 = !DILocation(line: 1652, column: 11, scope: !10830)
!10953 = !DILocation(line: 1652, column: 21, scope: !10830)
!10954 = !DILocation(line: 1652, column: 27, scope: !10830)
!10955 = !DILocation(line: 1652, column: 18, scope: !10830)
!10956 = !DILocation(line: 1652, column: 35, scope: !10830)
!10957 = !DILocation(line: 1652, column: 41, scope: !10830)
!10958 = !DILocation(line: 1652, column: 32, scope: !10830)
!10959 = !DILocation(line: 1652, column: 49, scope: !10830)
!10960 = !DILocation(line: 1652, column: 55, scope: !10830)
!10961 = !DILocation(line: 1652, column: 46, scope: !10830)
!10962 = !DILocation(line: 1652, column: 60, scope: !10830)
!10963 = !DILocation(line: 1652, column: 8, scope: !10830)
!10964 = !DILocation(line: 1654, column: 7, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 1654, column: 7)
!10966 = !DILocation(line: 1654, column: 20, scope: !10965)
!10967 = !DILocation(line: 1654, column: 24, scope: !10965)
!10968 = !DILocation(line: 1654, column: 15, scope: !10965)
!10969 = !DILocation(line: 1654, column: 12, scope: !10965)
!10970 = !DILocation(line: 1654, column: 7, scope: !10830)
!10971 = !DILocation(line: 1655, column: 4, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 1654, column: 34)
!10973 = !DILocation(line: 1656, column: 19, scope: !10972)
!10974 = !DILocation(line: 1656, column: 4, scope: !10972)
!10975 = !DILocation(line: 1656, column: 8, scope: !10972)
!10976 = !DILocation(line: 1656, column: 17, scope: !10972)
!10977 = !DILocation(line: 1657, column: 3, scope: !10972)
!10978 = !DILocation(line: 1658, column: 3, scope: !10830)
!10979 = !DILocation(line: 1665, column: 10, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 1665, column: 3)
!10981 = !DILocation(line: 1665, column: 8, scope: !10980)
!10982 = !DILocation(line: 1665, column: 15, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 1665, column: 3)
!10984 = !DILocation(line: 1665, column: 17, scope: !10983)
!10985 = !DILocation(line: 1665, column: 3, scope: !10980)
!10986 = !DILocation(line: 1666, column: 10, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10983, file: !3, line: 1665, column: 27)
!10988 = !DILocation(line: 1667, column: 11, scope: !10987)
!10989 = !DILocation(line: 1668, column: 10, scope: !10987)
!10990 = !DILocation(line: 1668, column: 14, scope: !10987)
!10991 = !DILocation(line: 1668, column: 20, scope: !10987)
!10992 = !DILocation(line: 1668, column: 22, scope: !10987)
!10993 = !DILocation(line: 1668, column: 28, scope: !10987)
!10994 = !DILocation(line: 1668, column: 33, scope: !10987)
!10995 = !DILocation(line: 1668, column: 8, scope: !10987)
!10996 = !DILocation(line: 1669, column: 8, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 1669, column: 8)
!10998 = !DILocation(line: 1669, column: 8, scope: !10987)
!10999 = !DILocation(line: 1670, column: 13, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 1669, column: 13)
!11001 = !DILocation(line: 1670, column: 18, scope: !11000)
!11002 = !DILocation(line: 1670, column: 11, scope: !11000)
!11003 = !DILocation(line: 1671, column: 9, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 1671, column: 9)
!11005 = !DILocation(line: 1671, column: 14, scope: !11004)
!11006 = !DILocation(line: 1671, column: 18, scope: !11004)
!11007 = !DILocation(line: 1671, column: 20, scope: !11004)
!11008 = !DILocation(line: 1671, column: 29, scope: !11004)
!11009 = !DILocation(line: 1671, column: 9, scope: !11000)
!11010 = !DILocation(line: 1672, column: 13, scope: !11004)
!11011 = !DILocation(line: 1672, column: 6, scope: !11004)
!11012 = !DILocation(line: 1674, column: 13, scope: !11004)
!11013 = !DILocation(line: 1675, column: 4, scope: !11000)
!11014 = !DILocation(line: 1676, column: 8, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 1676, column: 8)
!11016 = !DILocation(line: 1676, column: 8, scope: !10987)
!11017 = !DILocation(line: 1677, column: 9, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 1677, column: 9)
!11019 = distinct !DILexicalBlock(scope: !11015, file: !3, line: 1676, column: 15)
!11020 = !DILocation(line: 1677, column: 18, scope: !11018)
!11021 = !DILocation(line: 1677, column: 15, scope: !11018)
!11022 = !DILocation(line: 1677, column: 9, scope: !11019)
!11023 = !DILocation(line: 1678, column: 10, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 1677, column: 26)
!11025 = !DILocation(line: 1678, column: 6, scope: !11024)
!11026 = !DILocation(line: 1678, column: 13, scope: !11024)
!11027 = !DILocation(line: 1679, column: 25, scope: !11024)
!11028 = !DILocation(line: 1679, column: 29, scope: !11024)
!11029 = !DILocation(line: 1679, column: 6, scope: !11024)
!11030 = !DILocation(line: 1679, column: 10, scope: !11024)
!11031 = !DILocation(line: 1679, column: 22, scope: !11024)
!11032 = !DILocation(line: 1680, column: 11, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 1680, column: 10)
!11034 = !DILocation(line: 1680, column: 15, scope: !11033)
!11035 = !DILocation(line: 1680, column: 21, scope: !11033)
!11036 = !DILocation(line: 1680, column: 24, scope: !11033)
!11037 = !DILocation(line: 1681, column: 8, scope: !11033)
!11038 = !DILocation(line: 1681, column: 12, scope: !11033)
!11039 = !DILocation(line: 1681, column: 32, scope: !11033)
!11040 = !DILocation(line: 1681, column: 29, scope: !11033)
!11041 = !DILocation(line: 1681, column: 24, scope: !11033)
!11042 = !DILocation(line: 1680, column: 10, scope: !11024)
!11043 = !DILocation(line: 1682, column: 23, scope: !11033)
!11044 = !DILocation(line: 1682, column: 8, scope: !11033)
!11045 = !DILocation(line: 1682, column: 12, scope: !11033)
!11046 = !DILocation(line: 1682, column: 18, scope: !11033)
!11047 = !DILocation(line: 1682, column: 21, scope: !11033)
!11048 = !DILocation(line: 1683, column: 10, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 1683, column: 10)
!11050 = !DILocation(line: 1683, column: 14, scope: !11049)
!11051 = !DILocation(line: 1683, column: 20, scope: !11049)
!11052 = !DILocation(line: 1683, column: 23, scope: !11049)
!11053 = !DILocation(line: 1683, column: 26, scope: !11049)
!11054 = !DILocation(line: 1683, column: 30, scope: !11049)
!11055 = !DILocation(line: 1683, column: 36, scope: !11049)
!11056 = !DILocation(line: 1683, column: 39, scope: !11049)
!11057 = !DILocation(line: 1683, column: 10, scope: !11024)
!11058 = !DILocation(line: 1684, column: 11, scope: !11049)
!11059 = !DILocation(line: 1684, column: 7, scope: !11049)
!11060 = !DILocation(line: 1684, column: 14, scope: !11049)
!11061 = !DILocation(line: 1685, column: 10, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 1685, column: 10)
!11063 = !DILocation(line: 1685, column: 14, scope: !11062)
!11064 = !DILocation(line: 1685, column: 20, scope: !11062)
!11065 = !DILocation(line: 1685, column: 23, scope: !11062)
!11066 = !DILocation(line: 1685, column: 10, scope: !11024)
!11067 = !DILocation(line: 1686, column: 7, scope: !11062)
!11068 = !DILocation(line: 1686, column: 11, scope: !11062)
!11069 = !DILocation(line: 1686, column: 17, scope: !11062)
!11070 = !DILocation(line: 1686, column: 20, scope: !11062)
!11071 = !DILocation(line: 1687, column: 10, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 1687, column: 10)
!11073 = !DILocation(line: 1687, column: 14, scope: !11072)
!11074 = !DILocation(line: 1687, column: 20, scope: !11072)
!11075 = !DILocation(line: 1687, column: 10, scope: !11024)
!11076 = !DILocation(line: 1688, column: 23, scope: !11072)
!11077 = !DILocation(line: 1688, column: 7, scope: !11072)
!11078 = !DILocation(line: 1688, column: 11, scope: !11072)
!11079 = !DILocation(line: 1688, column: 17, scope: !11072)
!11080 = !DILocation(line: 1688, column: 20, scope: !11072)
!11081 = !DILocation(line: 1689, column: 5, scope: !11024)
!11082 = !DILocation(line: 1690, column: 10, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 1689, column: 12)
!11084 = !DILocation(line: 1690, column: 6, scope: !11083)
!11085 = !DILocation(line: 1690, column: 13, scope: !11083)
!11086 = !DILocation(line: 1691, column: 6, scope: !11083)
!11087 = !DILocation(line: 1691, column: 10, scope: !11083)
!11088 = !DILocation(line: 1691, column: 16, scope: !11083)
!11089 = !DILocation(line: 1691, column: 19, scope: !11083)
!11090 = !DILocation(line: 1693, column: 4, scope: !11019)
!11091 = !DILocation(line: 1694, column: 9, scope: !11015)
!11092 = !DILocation(line: 1694, column: 5, scope: !11015)
!11093 = !DILocation(line: 1694, column: 12, scope: !11015)
!11094 = !DILocation(line: 1695, column: 3, scope: !10987)
!11095 = !DILocation(line: 1665, column: 23, scope: !10983)
!11096 = !DILocation(line: 1665, column: 3, scope: !10983)
!11097 = distinct !{!11097, !10985, !11098}
!11098 = !DILocation(line: 1695, column: 3, scope: !10980)
!11099 = !DILocation(line: 1696, column: 33, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 1696, column: 7)
!11101 = !DILocation(line: 1696, column: 37, scope: !11100)
!11102 = !DILocation(line: 1696, column: 7, scope: !11100)
!11103 = !DILocation(line: 1696, column: 7, scope: !10830)
!11104 = !DILocation(line: 1697, column: 9, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 1696, column: 44)
!11106 = !DILocation(line: 1698, column: 11, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 1698, column: 4)
!11108 = !DILocation(line: 1698, column: 9, scope: !11107)
!11109 = !DILocation(line: 1698, column: 16, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 1698, column: 4)
!11111 = !DILocation(line: 1698, column: 18, scope: !11110)
!11112 = !DILocation(line: 1698, column: 4, scope: !11107)
!11113 = !DILocation(line: 1699, column: 13, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 1699, column: 9)
!11115 = distinct !DILexicalBlock(scope: !11110, file: !3, line: 1698, column: 28)
!11116 = !DILocation(line: 1699, column: 9, scope: !11114)
!11117 = !DILocation(line: 1699, column: 16, scope: !11114)
!11118 = !DILocation(line: 1699, column: 9, scope: !11115)
!11119 = !DILocation(line: 1701, column: 23, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 1699, column: 22)
!11121 = !DILocation(line: 1701, column: 25, scope: !11120)
!11122 = !DILocation(line: 1701, column: 19, scope: !11120)
!11123 = !DILocation(line: 1701, column: 11, scope: !11120)
!11124 = !DILocation(line: 1702, column: 5, scope: !11120)
!11125 = !DILocation(line: 1702, column: 20, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 1702, column: 16)
!11127 = !DILocation(line: 1702, column: 16, scope: !11126)
!11128 = !DILocation(line: 1702, column: 23, scope: !11126)
!11129 = !DILocation(line: 1702, column: 16, scope: !11114)
!11130 = !DILocation(line: 1704, column: 23, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 1702, column: 29)
!11132 = !DILocation(line: 1704, column: 25, scope: !11131)
!11133 = !DILocation(line: 1704, column: 19, scope: !11131)
!11134 = !DILocation(line: 1704, column: 11, scope: !11131)
!11135 = !DILocation(line: 1705, column: 5, scope: !11131)
!11136 = !DILocation(line: 1706, column: 4, scope: !11115)
!11137 = !DILocation(line: 1698, column: 24, scope: !11110)
!11138 = !DILocation(line: 1698, column: 4, scope: !11110)
!11139 = distinct !{!11139, !11112, !11140}
!11140 = !DILocation(line: 1706, column: 4, scope: !11107)
!11141 = !DILocation(line: 1707, column: 8, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 1707, column: 8)
!11143 = !DILocation(line: 1707, column: 21, scope: !11142)
!11144 = !DILocation(line: 1707, column: 25, scope: !11142)
!11145 = !DILocation(line: 1707, column: 16, scope: !11142)
!11146 = !DILocation(line: 1707, column: 13, scope: !11142)
!11147 = !DILocation(line: 1707, column: 8, scope: !11105)
!11148 = !DILocation(line: 1708, column: 13, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11142, file: !3, line: 1707, column: 35)
!11150 = !DILocation(line: 1708, column: 31, scope: !11149)
!11151 = !DILocation(line: 1708, column: 5, scope: !11149)
!11152 = !DILocation(line: 1709, column: 20, scope: !11149)
!11153 = !DILocation(line: 1709, column: 5, scope: !11149)
!11154 = !DILocation(line: 1709, column: 9, scope: !11149)
!11155 = !DILocation(line: 1709, column: 18, scope: !11149)
!11156 = !DILocation(line: 1710, column: 4, scope: !11149)
!11157 = !DILocation(line: 1711, column: 3, scope: !11105)
!11158 = !DILocation(line: 1712, column: 13, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 1711, column: 10)
!11160 = !DILocation(line: 1712, column: 20, scope: !11159)
!11161 = !DILocation(line: 1712, column: 25, scope: !11159)
!11162 = !DILocation(line: 1712, column: 35, scope: !11159)
!11163 = !DILocation(line: 1712, column: 42, scope: !11159)
!11164 = !DILocation(line: 1712, column: 47, scope: !11159)
!11165 = !DILocation(line: 1712, column: 31, scope: !11159)
!11166 = !DILocation(line: 1713, column: 7, scope: !11159)
!11167 = !DILocation(line: 1713, column: 14, scope: !11159)
!11168 = !DILocation(line: 1713, column: 19, scope: !11159)
!11169 = !DILocation(line: 1712, column: 53, scope: !11159)
!11170 = !DILocation(line: 1713, column: 29, scope: !11159)
!11171 = !DILocation(line: 1713, column: 36, scope: !11159)
!11172 = !DILocation(line: 1713, column: 41, scope: !11159)
!11173 = !DILocation(line: 1713, column: 25, scope: !11159)
!11174 = !DILocation(line: 1714, column: 7, scope: !11159)
!11175 = !DILocation(line: 1714, column: 14, scope: !11159)
!11176 = !DILocation(line: 1714, column: 19, scope: !11159)
!11177 = !DILocation(line: 1713, column: 47, scope: !11159)
!11178 = !DILocation(line: 1714, column: 29, scope: !11159)
!11179 = !DILocation(line: 1714, column: 36, scope: !11159)
!11180 = !DILocation(line: 1714, column: 41, scope: !11159)
!11181 = !DILocation(line: 1714, column: 25, scope: !11159)
!11182 = !DILocation(line: 1715, column: 7, scope: !11159)
!11183 = !DILocation(line: 1715, column: 14, scope: !11159)
!11184 = !DILocation(line: 1715, column: 19, scope: !11159)
!11185 = !DILocation(line: 1714, column: 47, scope: !11159)
!11186 = !DILocation(line: 1715, column: 29, scope: !11159)
!11187 = !DILocation(line: 1715, column: 36, scope: !11159)
!11188 = !DILocation(line: 1715, column: 41, scope: !11159)
!11189 = !DILocation(line: 1715, column: 25, scope: !11159)
!11190 = !DILocation(line: 1712, column: 9, scope: !11159)
!11191 = !DILocation(line: 1716, column: 8, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 1716, column: 8)
!11193 = !DILocation(line: 1716, column: 21, scope: !11192)
!11194 = !DILocation(line: 1716, column: 25, scope: !11192)
!11195 = !DILocation(line: 1716, column: 16, scope: !11192)
!11196 = !DILocation(line: 1716, column: 13, scope: !11192)
!11197 = !DILocation(line: 1716, column: 8, scope: !11159)
!11198 = !DILocation(line: 1717, column: 5, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 1716, column: 35)
!11200 = !DILocation(line: 1718, column: 5, scope: !11199)
!11201 = !DILocation(line: 1719, column: 20, scope: !11199)
!11202 = !DILocation(line: 1719, column: 5, scope: !11199)
!11203 = !DILocation(line: 1719, column: 9, scope: !11199)
!11204 = !DILocation(line: 1719, column: 18, scope: !11199)
!11205 = !DILocation(line: 1720, column: 4, scope: !11199)
!11206 = !DILocation(line: 1722, column: 3, scope: !10830)
!11207 = !DILocation(line: 1729, column: 10, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 1729, column: 3)
!11209 = !DILocation(line: 1729, column: 8, scope: !11208)
!11210 = !DILocation(line: 1729, column: 15, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11208, file: !3, line: 1729, column: 3)
!11212 = !DILocation(line: 1729, column: 17, scope: !11211)
!11213 = !DILocation(line: 1729, column: 3, scope: !11208)
!11214 = !DILocation(line: 1730, column: 10, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 1729, column: 27)
!11216 = !DILocation(line: 1731, column: 11, scope: !11215)
!11217 = !DILocation(line: 1732, column: 10, scope: !11215)
!11218 = !DILocation(line: 1732, column: 14, scope: !11215)
!11219 = !DILocation(line: 1732, column: 20, scope: !11215)
!11220 = !DILocation(line: 1732, column: 22, scope: !11215)
!11221 = !DILocation(line: 1732, column: 28, scope: !11215)
!11222 = !DILocation(line: 1732, column: 33, scope: !11215)
!11223 = !DILocation(line: 1732, column: 8, scope: !11215)
!11224 = !DILocation(line: 1733, column: 8, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 1733, column: 8)
!11226 = !DILocation(line: 1733, column: 8, scope: !11215)
!11227 = !DILocation(line: 1734, column: 13, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11225, file: !3, line: 1733, column: 13)
!11229 = !DILocation(line: 1734, column: 18, scope: !11228)
!11230 = !DILocation(line: 1734, column: 11, scope: !11228)
!11231 = !DILocation(line: 1735, column: 9, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11228, file: !3, line: 1735, column: 9)
!11233 = !DILocation(line: 1735, column: 14, scope: !11232)
!11234 = !DILocation(line: 1735, column: 18, scope: !11232)
!11235 = !DILocation(line: 1735, column: 20, scope: !11232)
!11236 = !DILocation(line: 1735, column: 29, scope: !11232)
!11237 = !DILocation(line: 1735, column: 9, scope: !11228)
!11238 = !DILocation(line: 1736, column: 13, scope: !11232)
!11239 = !DILocation(line: 1736, column: 6, scope: !11232)
!11240 = !DILocation(line: 1738, column: 13, scope: !11232)
!11241 = !DILocation(line: 1739, column: 4, scope: !11228)
!11242 = !DILocation(line: 1740, column: 8, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 1740, column: 8)
!11244 = !DILocation(line: 1740, column: 8, scope: !11215)
!11245 = !DILocation(line: 1741, column: 9, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11247, file: !3, line: 1741, column: 9)
!11247 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 1740, column: 15)
!11248 = !DILocation(line: 1741, column: 18, scope: !11246)
!11249 = !DILocation(line: 1741, column: 15, scope: !11246)
!11250 = !DILocation(line: 1741, column: 9, scope: !11247)
!11251 = !DILocation(line: 1742, column: 10, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 1741, column: 26)
!11253 = !DILocation(line: 1742, column: 6, scope: !11252)
!11254 = !DILocation(line: 1742, column: 13, scope: !11252)
!11255 = !DILocation(line: 1743, column: 25, scope: !11252)
!11256 = !DILocation(line: 1743, column: 29, scope: !11252)
!11257 = !DILocation(line: 1743, column: 6, scope: !11252)
!11258 = !DILocation(line: 1743, column: 10, scope: !11252)
!11259 = !DILocation(line: 1743, column: 22, scope: !11252)
!11260 = !DILocation(line: 1744, column: 11, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 1744, column: 10)
!11262 = !DILocation(line: 1744, column: 15, scope: !11261)
!11263 = !DILocation(line: 1744, column: 21, scope: !11261)
!11264 = !DILocation(line: 1744, column: 24, scope: !11261)
!11265 = !DILocation(line: 1745, column: 8, scope: !11261)
!11266 = !DILocation(line: 1745, column: 12, scope: !11261)
!11267 = !DILocation(line: 1745, column: 32, scope: !11261)
!11268 = !DILocation(line: 1745, column: 29, scope: !11261)
!11269 = !DILocation(line: 1745, column: 24, scope: !11261)
!11270 = !DILocation(line: 1744, column: 10, scope: !11252)
!11271 = !DILocation(line: 1746, column: 23, scope: !11261)
!11272 = !DILocation(line: 1746, column: 8, scope: !11261)
!11273 = !DILocation(line: 1746, column: 12, scope: !11261)
!11274 = !DILocation(line: 1746, column: 18, scope: !11261)
!11275 = !DILocation(line: 1746, column: 21, scope: !11261)
!11276 = !DILocation(line: 1747, column: 10, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 1747, column: 10)
!11278 = !DILocation(line: 1747, column: 14, scope: !11277)
!11279 = !DILocation(line: 1747, column: 20, scope: !11277)
!11280 = !DILocation(line: 1747, column: 23, scope: !11277)
!11281 = !DILocation(line: 1747, column: 10, scope: !11252)
!11282 = !DILocation(line: 1748, column: 11, scope: !11277)
!11283 = !DILocation(line: 1748, column: 7, scope: !11277)
!11284 = !DILocation(line: 1748, column: 14, scope: !11277)
!11285 = !DILocation(line: 1749, column: 10, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 1749, column: 10)
!11287 = !DILocation(line: 1749, column: 14, scope: !11286)
!11288 = !DILocation(line: 1749, column: 20, scope: !11286)
!11289 = !DILocation(line: 1749, column: 23, scope: !11286)
!11290 = !DILocation(line: 1749, column: 10, scope: !11252)
!11291 = !DILocation(line: 1750, column: 7, scope: !11286)
!11292 = !DILocation(line: 1750, column: 11, scope: !11286)
!11293 = !DILocation(line: 1750, column: 17, scope: !11286)
!11294 = !DILocation(line: 1750, column: 20, scope: !11286)
!11295 = !DILocation(line: 1751, column: 10, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 1751, column: 10)
!11297 = !DILocation(line: 1751, column: 14, scope: !11296)
!11298 = !DILocation(line: 1751, column: 20, scope: !11296)
!11299 = !DILocation(line: 1751, column: 10, scope: !11252)
!11300 = !DILocation(line: 1752, column: 23, scope: !11296)
!11301 = !DILocation(line: 1752, column: 7, scope: !11296)
!11302 = !DILocation(line: 1752, column: 11, scope: !11296)
!11303 = !DILocation(line: 1752, column: 17, scope: !11296)
!11304 = !DILocation(line: 1752, column: 20, scope: !11296)
!11305 = !DILocation(line: 1753, column: 5, scope: !11252)
!11306 = !DILocation(line: 1754, column: 10, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 1753, column: 12)
!11308 = !DILocation(line: 1754, column: 6, scope: !11307)
!11309 = !DILocation(line: 1754, column: 13, scope: !11307)
!11310 = !DILocation(line: 1755, column: 6, scope: !11307)
!11311 = !DILocation(line: 1755, column: 10, scope: !11307)
!11312 = !DILocation(line: 1755, column: 16, scope: !11307)
!11313 = !DILocation(line: 1755, column: 19, scope: !11307)
!11314 = !DILocation(line: 1757, column: 4, scope: !11247)
!11315 = !DILocation(line: 1758, column: 9, scope: !11243)
!11316 = !DILocation(line: 1758, column: 5, scope: !11243)
!11317 = !DILocation(line: 1758, column: 12, scope: !11243)
!11318 = !DILocation(line: 1759, column: 3, scope: !11215)
!11319 = !DILocation(line: 1729, column: 23, scope: !11211)
!11320 = !DILocation(line: 1729, column: 3, scope: !11211)
!11321 = distinct !{!11321, !11213, !11322}
!11322 = !DILocation(line: 1759, column: 3, scope: !11208)
!11323 = !DILocation(line: 1760, column: 11, scope: !10830)
!11324 = !DILocation(line: 1760, column: 18, scope: !10830)
!11325 = !DILocation(line: 1760, column: 27, scope: !10830)
!11326 = !DILocation(line: 1760, column: 34, scope: !10830)
!11327 = !DILocation(line: 1760, column: 39, scope: !10830)
!11328 = !DILocation(line: 1760, column: 23, scope: !10830)
!11329 = !DILocation(line: 1760, column: 49, scope: !10830)
!11330 = !DILocation(line: 1760, column: 55, scope: !10830)
!11331 = !DILocation(line: 1760, column: 59, scope: !10830)
!11332 = !DILocation(line: 1760, column: 45, scope: !10830)
!11333 = !DILocation(line: 1761, column: 8, scope: !10830)
!11334 = !DILocation(line: 1761, column: 14, scope: !10830)
!11335 = !DILocation(line: 1761, column: 18, scope: !10830)
!11336 = !DILocation(line: 1761, column: 4, scope: !10830)
!11337 = !DILocation(line: 1760, column: 8, scope: !10830)
!11338 = !DILocation(line: 1762, column: 7, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 1762, column: 7)
!11340 = !DILocation(line: 1762, column: 20, scope: !11339)
!11341 = !DILocation(line: 1762, column: 24, scope: !11339)
!11342 = !DILocation(line: 1762, column: 15, scope: !11339)
!11343 = !DILocation(line: 1762, column: 12, scope: !11339)
!11344 = !DILocation(line: 1762, column: 7, scope: !10830)
!11345 = !DILocation(line: 1763, column: 4, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11339, file: !3, line: 1762, column: 34)
!11347 = !DILocation(line: 1765, column: 4, scope: !11346)
!11348 = !DILocation(line: 1767, column: 19, scope: !11346)
!11349 = !DILocation(line: 1767, column: 4, scope: !11346)
!11350 = !DILocation(line: 1767, column: 8, scope: !11346)
!11351 = !DILocation(line: 1767, column: 17, scope: !11346)
!11352 = !DILocation(line: 1768, column: 3, scope: !11346)
!11353 = !DILocation(line: 1769, column: 3, scope: !10830)
!11354 = !DILocation(line: 1775, column: 8, scope: !10830)
!11355 = !DILocation(line: 1776, column: 10, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 1776, column: 3)
!11357 = !DILocation(line: 1776, column: 8, scope: !11356)
!11358 = !DILocation(line: 1776, column: 15, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11356, file: !3, line: 1776, column: 3)
!11360 = !DILocation(line: 1776, column: 17, scope: !11359)
!11361 = !DILocation(line: 1776, column: 3, scope: !11356)
!11362 = !DILocation(line: 1777, column: 10, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11359, file: !3, line: 1776, column: 27)
!11364 = !DILocation(line: 1778, column: 11, scope: !11363)
!11365 = !DILocation(line: 1779, column: 10, scope: !11363)
!11366 = !DILocation(line: 1779, column: 14, scope: !11363)
!11367 = !DILocation(line: 1779, column: 20, scope: !11363)
!11368 = !DILocation(line: 1779, column: 22, scope: !11363)
!11369 = !DILocation(line: 1779, column: 28, scope: !11363)
!11370 = !DILocation(line: 1779, column: 33, scope: !11363)
!11371 = !DILocation(line: 1779, column: 8, scope: !11363)
!11372 = !DILocation(line: 1780, column: 8, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 1780, column: 8)
!11374 = !DILocation(line: 1780, column: 8, scope: !11363)
!11375 = !DILocation(line: 1781, column: 13, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 1780, column: 13)
!11377 = !DILocation(line: 1781, column: 18, scope: !11376)
!11378 = !DILocation(line: 1781, column: 11, scope: !11376)
!11379 = !DILocation(line: 1782, column: 9, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11376, file: !3, line: 1782, column: 9)
!11381 = !DILocation(line: 1782, column: 14, scope: !11380)
!11382 = !DILocation(line: 1782, column: 18, scope: !11380)
!11383 = !DILocation(line: 1782, column: 20, scope: !11380)
!11384 = !DILocation(line: 1782, column: 29, scope: !11380)
!11385 = !DILocation(line: 1782, column: 9, scope: !11376)
!11386 = !DILocation(line: 1783, column: 13, scope: !11380)
!11387 = !DILocation(line: 1783, column: 6, scope: !11380)
!11388 = !DILocation(line: 1785, column: 13, scope: !11380)
!11389 = !DILocation(line: 1786, column: 4, scope: !11376)
!11390 = !DILocation(line: 1787, column: 8, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 1787, column: 8)
!11392 = !DILocation(line: 1787, column: 8, scope: !11363)
!11393 = !DILocation(line: 1788, column: 9, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 1788, column: 9)
!11395 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 1787, column: 15)
!11396 = !DILocation(line: 1788, column: 18, scope: !11394)
!11397 = !DILocation(line: 1788, column: 15, scope: !11394)
!11398 = !DILocation(line: 1788, column: 9, scope: !11395)
!11399 = !DILocation(line: 1789, column: 21, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11394, file: !3, line: 1788, column: 26)
!11401 = !DILocation(line: 1789, column: 18, scope: !11400)
!11402 = !DILocation(line: 1789, column: 14, scope: !11400)
!11403 = !DILocation(line: 1789, column: 11, scope: !11400)
!11404 = !DILocation(line: 1790, column: 25, scope: !11400)
!11405 = !DILocation(line: 1790, column: 29, scope: !11400)
!11406 = !DILocation(line: 1790, column: 6, scope: !11400)
!11407 = !DILocation(line: 1790, column: 10, scope: !11400)
!11408 = !DILocation(line: 1790, column: 22, scope: !11400)
!11409 = !DILocation(line: 1791, column: 11, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 1791, column: 10)
!11411 = !DILocation(line: 1791, column: 15, scope: !11410)
!11412 = !DILocation(line: 1791, column: 21, scope: !11410)
!11413 = !DILocation(line: 1791, column: 24, scope: !11410)
!11414 = !DILocation(line: 1792, column: 8, scope: !11410)
!11415 = !DILocation(line: 1792, column: 12, scope: !11410)
!11416 = !DILocation(line: 1792, column: 32, scope: !11410)
!11417 = !DILocation(line: 1792, column: 29, scope: !11410)
!11418 = !DILocation(line: 1792, column: 24, scope: !11410)
!11419 = !DILocation(line: 1791, column: 10, scope: !11400)
!11420 = !DILocation(line: 1793, column: 23, scope: !11410)
!11421 = !DILocation(line: 1793, column: 8, scope: !11410)
!11422 = !DILocation(line: 1793, column: 12, scope: !11410)
!11423 = !DILocation(line: 1793, column: 18, scope: !11410)
!11424 = !DILocation(line: 1793, column: 21, scope: !11410)
!11425 = !DILocation(line: 1794, column: 10, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 1794, column: 10)
!11427 = !DILocation(line: 1794, column: 14, scope: !11426)
!11428 = !DILocation(line: 1794, column: 20, scope: !11426)
!11429 = !DILocation(line: 1794, column: 23, scope: !11426)
!11430 = !DILocation(line: 1794, column: 10, scope: !11400)
!11431 = !DILocation(line: 1795, column: 20, scope: !11426)
!11432 = !DILocation(line: 1795, column: 17, scope: !11426)
!11433 = !DILocation(line: 1795, column: 15, scope: !11426)
!11434 = !DILocation(line: 1795, column: 12, scope: !11426)
!11435 = !DILocation(line: 1795, column: 7, scope: !11426)
!11436 = !DILocation(line: 1796, column: 10, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 1796, column: 10)
!11438 = !DILocation(line: 1796, column: 14, scope: !11437)
!11439 = !DILocation(line: 1796, column: 20, scope: !11437)
!11440 = !DILocation(line: 1796, column: 23, scope: !11437)
!11441 = !DILocation(line: 1796, column: 10, scope: !11400)
!11442 = !DILocation(line: 1797, column: 7, scope: !11437)
!11443 = !DILocation(line: 1797, column: 11, scope: !11437)
!11444 = !DILocation(line: 1797, column: 17, scope: !11437)
!11445 = !DILocation(line: 1797, column: 20, scope: !11437)
!11446 = !DILocation(line: 1798, column: 10, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 1798, column: 10)
!11448 = !DILocation(line: 1798, column: 14, scope: !11447)
!11449 = !DILocation(line: 1798, column: 20, scope: !11447)
!11450 = !DILocation(line: 1798, column: 10, scope: !11400)
!11451 = !DILocation(line: 1799, column: 23, scope: !11447)
!11452 = !DILocation(line: 1799, column: 7, scope: !11447)
!11453 = !DILocation(line: 1799, column: 11, scope: !11447)
!11454 = !DILocation(line: 1799, column: 17, scope: !11447)
!11455 = !DILocation(line: 1799, column: 20, scope: !11447)
!11456 = !DILocation(line: 1800, column: 5, scope: !11400)
!11457 = !DILocation(line: 1801, column: 6, scope: !11394)
!11458 = !DILocation(line: 1801, column: 10, scope: !11394)
!11459 = !DILocation(line: 1801, column: 16, scope: !11394)
!11460 = !DILocation(line: 1801, column: 19, scope: !11394)
!11461 = !DILocation(line: 1802, column: 4, scope: !11395)
!11462 = !DILocation(line: 1803, column: 3, scope: !11363)
!11463 = !DILocation(line: 1776, column: 23, scope: !11359)
!11464 = !DILocation(line: 1776, column: 3, scope: !11359)
!11465 = distinct !{!11465, !11361, !11466}
!11466 = !DILocation(line: 1803, column: 3, scope: !11356)
!11467 = !DILocation(line: 1804, column: 11, scope: !10830)
!11468 = !DILocation(line: 1804, column: 16, scope: !10830)
!11469 = !DILocation(line: 1804, column: 24, scope: !10830)
!11470 = !DILocation(line: 1804, column: 29, scope: !10830)
!11471 = !DILocation(line: 1804, column: 22, scope: !10830)
!11472 = !DILocation(line: 1804, column: 37, scope: !10830)
!11473 = !DILocation(line: 1804, column: 42, scope: !10830)
!11474 = !DILocation(line: 1804, column: 35, scope: !10830)
!11475 = !DILocation(line: 1804, column: 49, scope: !10830)
!11476 = !DILocation(line: 1804, column: 47, scope: !10830)
!11477 = !DILocation(line: 1804, column: 9, scope: !10830)
!11478 = !DILocation(line: 1805, column: 7, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 1805, column: 7)
!11480 = !DILocation(line: 1805, column: 16, scope: !11479)
!11481 = !DILocation(line: 1805, column: 20, scope: !11479)
!11482 = !DILocation(line: 1805, column: 13, scope: !11479)
!11483 = !DILocation(line: 1805, column: 7, scope: !10830)
!11484 = !DILocation(line: 1809, column: 4, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11479, file: !3, line: 1805, column: 30)
!11486 = !DILocation(line: 1810, column: 17, scope: !11485)
!11487 = !DILocation(line: 1810, column: 21, scope: !11485)
!11488 = !DILocation(line: 1810, column: 32, scope: !11485)
!11489 = !DILocation(line: 1810, column: 4, scope: !11485)
!11490 = !DILocation(line: 1811, column: 9, scope: !11485)
!11491 = !DILocation(line: 1811, column: 16, scope: !11485)
!11492 = !DILocation(line: 1811, column: 20, scope: !11485)
!11493 = !DILocation(line: 1811, column: 4, scope: !11485)
!11494 = !DILocation(line: 1812, column: 4, scope: !11485)
!11495 = !DILocation(line: 1813, column: 19, scope: !11485)
!11496 = !DILocation(line: 1813, column: 4, scope: !11485)
!11497 = !DILocation(line: 1813, column: 8, scope: !11485)
!11498 = !DILocation(line: 1813, column: 17, scope: !11485)
!11499 = !DILocation(line: 1814, column: 3, scope: !11485)
!11500 = !DILocation(line: 1815, column: 3, scope: !10830)
!11501 = !DILocation(line: 1817, column: 2, scope: !10806)
!11502 = !DILocation(line: 1817, column: 6, scope: !10806)
!11503 = !DILocation(line: 1817, column: 18, scope: !10806)
!11504 = !DILocation(line: 1818, column: 2, scope: !10806)
!11505 = !DILocation(line: 1818, column: 6, scope: !10806)
!11506 = !DILocation(line: 1818, column: 18, scope: !10806)
!11507 = !DILocation(line: 1819, column: 1, scope: !10806)
!11508 = distinct !DISubprogram(name: "release_io_hfcmulti", scope: !3, file: !3, line: 1040, type: !9447, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11509 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !11510)
!11510 = distinct !DILocation(line: 1078, column: 3, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 1058, column: 62)
!11512 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1058, column: 6)
!11513 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !11510)
!11514 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !11515)
!11515 = distinct !DILocation(line: 1062, column: 3, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11517, file: !3, line: 1062, column: 3)
!11517 = distinct !DILexicalBlock(scope: !11518, file: !3, line: 1062, column: 3)
!11518 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 1062, column: 3)
!11519 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 1062, column: 3)
!11520 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 1062, column: 3)
!11521 = !DILocalVariable(name: "hc", arg: 1, scope: !11508, file: !3, line: 1040, type: !9128)
!11522 = !DILocation(line: 1040, column: 39, scope: !11508)
!11523 = !DILocalVariable(name: "plx_acc_32", scope: !11508, file: !3, line: 1042, type: !570)
!11524 = !DILocation(line: 1042, column: 16, scope: !11508)
!11525 = !DILocalVariable(name: "pv", scope: !11508, file: !3, line: 1043, type: !9152)
!11526 = !DILocation(line: 1043, column: 8, scope: !11508)
!11527 = !DILocalVariable(name: "plx_flags", scope: !11508, file: !3, line: 1044, type: !9457)
!11528 = !DILocation(line: 1044, column: 9, scope: !11508)
!11529 = !DILocation(line: 1046, column: 6, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1046, column: 6)
!11531 = !DILocation(line: 1046, column: 12, scope: !11530)
!11532 = !DILocation(line: 1046, column: 6, scope: !11508)
!11533 = !DILocation(line: 1047, column: 3, scope: !11530)
!11534 = !DILocation(line: 1050, column: 2, scope: !11508)
!11535 = !DILocation(line: 1050, column: 6, scope: !11508)
!11536 = !DILocation(line: 1050, column: 9, scope: !11508)
!11537 = !DILocation(line: 1050, column: 16, scope: !11508)
!11538 = !DILocation(line: 1051, column: 2, scope: !11508)
!11539 = !DILocation(line: 1052, column: 2, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11541, file: !3, line: 1052, column: 2)
!11541 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 1052, column: 2)
!11542 = distinct !DILexicalBlock(scope: !11543, file: !3, line: 1052, column: 2)
!11543 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1052, column: 2)
!11544 = !DILocation(line: 1053, column: 2, scope: !11508)
!11545 = !DILocation(line: 1053, column: 6, scope: !11508)
!11546 = !DILocation(line: 1053, column: 9, scope: !11508)
!11547 = !DILocation(line: 1053, column: 16, scope: !11508)
!11548 = !DILocation(line: 1054, column: 2, scope: !11508)
!11549 = !DILocation(line: 1055, column: 2, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 1055, column: 2)
!11551 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 1055, column: 2)
!11552 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 1055, column: 2)
!11553 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1055, column: 2)
!11554 = !DILocation(line: 1058, column: 32, scope: !11512)
!11555 = !DILocation(line: 1058, column: 36, scope: !11512)
!11556 = !DILocation(line: 1058, column: 6, scope: !11512)
!11557 = !DILocation(line: 1058, column: 42, scope: !11512)
!11558 = !DILocation(line: 1058, column: 45, scope: !11512)
!11559 = !DILocation(line: 1058, column: 49, scope: !11512)
!11560 = !DILocation(line: 1058, column: 6, scope: !11508)
!11561 = !DILocation(line: 1059, column: 7, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 1059, column: 7)
!11563 = !DILocation(line: 1059, column: 13, scope: !11562)
!11564 = !DILocation(line: 1059, column: 7, scope: !11511)
!11565 = !DILocation(line: 1061, column: 21, scope: !11562)
!11566 = !DILocation(line: 1061, column: 25, scope: !11562)
!11567 = !DILocation(line: 1061, column: 28, scope: !11562)
!11568 = !DILocation(line: 1060, column: 4, scope: !11562)
!11569 = !DILocation(line: 1062, column: 3, scope: !11511)
!11570 = !DILocation(line: 1062, column: 3, scope: !11520)
!11571 = !DILocalVariable(name: "__dummy", scope: !11572, file: !3, line: 1062, type: !317)
!11572 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 1062, column: 3)
!11573 = !DILocation(line: 1062, column: 3, scope: !11572)
!11574 = !DILocalVariable(name: "__dummy2", scope: !11572, file: !3, line: 1062, type: !9457)
!11575 = !DILocation(line: 1062, column: 3, scope: !11519)
!11576 = !DILocation(line: 1062, column: 3, scope: !11518)
!11577 = !DILocation(line: 1062, column: 3, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11518, file: !3, line: 1062, column: 3)
!11579 = !DILocalVariable(name: "__dummy", scope: !11580, file: !3, line: 1062, type: !317)
!11580 = distinct !DILexicalBlock(scope: !11581, file: !3, line: 1062, column: 3)
!11581 = distinct !DILexicalBlock(scope: !11578, file: !3, line: 1062, column: 3)
!11582 = !DILocation(line: 1062, column: 3, scope: !11580)
!11583 = !DILocalVariable(name: "__dummy2", scope: !11580, file: !3, line: 1062, type: !9457)
!11584 = !DILocation(line: 1062, column: 3, scope: !11581)
!11585 = !DILocation(line: 1062, column: 3, scope: !11517)
!11586 = !{i32 -2138099020}
!11587 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !11515)
!11588 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !11515)
!11589 = !DILocation(line: 1062, column: 3, scope: !11516)
!11590 = !DILocation(line: 1063, column: 16, scope: !11511)
!11591 = !DILocation(line: 1063, column: 20, scope: !11511)
!11592 = !DILocation(line: 1063, column: 32, scope: !11511)
!11593 = !DILocation(line: 1063, column: 14, scope: !11511)
!11594 = !DILocation(line: 1064, column: 26, scope: !11511)
!11595 = !DILocation(line: 1064, column: 3, scope: !11511)
!11596 = !DILocation(line: 1065, column: 14, scope: !11511)
!11597 = !DILocation(line: 1065, column: 8, scope: !11511)
!11598 = !DILocation(line: 1065, column: 6, scope: !11511)
!11599 = !DILocation(line: 1067, column: 6, scope: !11511)
!11600 = !DILocation(line: 1069, column: 6, scope: !11511)
!11601 = !DILocation(line: 1070, column: 6, scope: !11511)
!11602 = !DILocation(line: 1071, column: 6, scope: !11511)
!11603 = !DILocation(line: 1073, column: 6, scope: !11511)
!11604 = !DILocation(line: 1074, column: 10, scope: !11511)
!11605 = !DILocation(line: 1074, column: 14, scope: !11511)
!11606 = !DILocation(line: 1074, column: 3, scope: !11511)
!11607 = !DILocation(line: 1075, column: 7, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 1075, column: 7)
!11609 = !DILocation(line: 1075, column: 13, scope: !11608)
!11610 = !DILocation(line: 1075, column: 7, scope: !11511)
!11611 = !DILocation(line: 1077, column: 21, scope: !11608)
!11612 = !DILocation(line: 1076, column: 4, scope: !11608)
!11613 = !DILocation(line: 1078, column: 37, scope: !11511)
!11614 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !11510)
!11615 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !11510)
!11616 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !11510)
!11617 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !11510)
!11618 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !11510)
!11619 = !DILocation(line: 1079, column: 2, scope: !11511)
!11620 = !DILocation(line: 1082, column: 38, scope: !11508)
!11621 = !DILocation(line: 1082, column: 42, scope: !11508)
!11622 = !DILocation(line: 1082, column: 2, scope: !11508)
!11623 = !DILocation(line: 1083, column: 6, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1083, column: 6)
!11625 = !DILocation(line: 1083, column: 10, scope: !11624)
!11626 = !DILocation(line: 1083, column: 6, scope: !11508)
!11627 = !DILocation(line: 1084, column: 25, scope: !11624)
!11628 = !DILocation(line: 1084, column: 29, scope: !11624)
!11629 = !DILocation(line: 1084, column: 3, scope: !11624)
!11630 = !DILocation(line: 1085, column: 6, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1085, column: 6)
!11632 = !DILocation(line: 1085, column: 10, scope: !11631)
!11633 = !DILocation(line: 1085, column: 6, scope: !11508)
!11634 = !DILocation(line: 1086, column: 11, scope: !11631)
!11635 = !DILocation(line: 1086, column: 15, scope: !11631)
!11636 = !DILocation(line: 1086, column: 3, scope: !11631)
!11637 = !DILocation(line: 1087, column: 6, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1087, column: 6)
!11639 = !DILocation(line: 1087, column: 10, scope: !11638)
!11640 = !DILocation(line: 1087, column: 6, scope: !11508)
!11641 = !DILocation(line: 1088, column: 11, scope: !11638)
!11642 = !DILocation(line: 1088, column: 15, scope: !11638)
!11643 = !DILocation(line: 1088, column: 3, scope: !11638)
!11644 = !DILocation(line: 1089, column: 6, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1089, column: 6)
!11646 = !DILocation(line: 1089, column: 10, scope: !11645)
!11647 = !DILocation(line: 1089, column: 6, scope: !11508)
!11648 = !DILocation(line: 1090, column: 3, scope: !11645)
!11649 = !DILocation(line: 1091, column: 6, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1091, column: 6)
!11651 = !DILocation(line: 1091, column: 10, scope: !11650)
!11652 = !DILocation(line: 1091, column: 6, scope: !11508)
!11653 = !DILocation(line: 1092, column: 19, scope: !11650)
!11654 = !DILocation(line: 1092, column: 23, scope: !11650)
!11655 = !DILocation(line: 1092, column: 3, scope: !11650)
!11656 = !DILocation(line: 1094, column: 6, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1094, column: 6)
!11658 = !DILocation(line: 1094, column: 10, scope: !11657)
!11659 = !DILocation(line: 1094, column: 6, scope: !11508)
!11660 = !DILocation(line: 1095, column: 22, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1094, column: 19)
!11662 = !DILocation(line: 1095, column: 26, scope: !11661)
!11663 = !DILocation(line: 1095, column: 3, scope: !11661)
!11664 = !DILocation(line: 1096, column: 19, scope: !11661)
!11665 = !DILocation(line: 1096, column: 23, scope: !11661)
!11666 = !DILocation(line: 1096, column: 3, scope: !11661)
!11667 = !DILocation(line: 1097, column: 2, scope: !11661)
!11668 = !DILocation(line: 1098, column: 6, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1098, column: 6)
!11670 = !DILocation(line: 1098, column: 12, scope: !11669)
!11671 = !DILocation(line: 1098, column: 6, scope: !11508)
!11672 = !DILocation(line: 1099, column: 3, scope: !11669)
!11673 = !DILocation(line: 1100, column: 1, scope: !11508)
!11674 = distinct !DISubprogram(name: "list_del", scope: !11675, file: !11675, line: 144, type: !11676, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11675 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!11676 = !DISubroutineType(types: !11677)
!11677 = !{null, !292}
!11678 = !DILocalVariable(name: "entry", arg: 1, scope: !11674, file: !11675, line: 144, type: !292)
!11679 = !DILocation(line: 144, column: 47, scope: !11674)
!11680 = !DILocation(line: 146, column: 19, scope: !11674)
!11681 = !DILocation(line: 146, column: 2, scope: !11674)
!11682 = !DILocation(line: 147, column: 2, scope: !11674)
!11683 = !DILocation(line: 147, column: 9, scope: !11674)
!11684 = !DILocation(line: 147, column: 14, scope: !11674)
!11685 = !DILocation(line: 148, column: 2, scope: !11674)
!11686 = !DILocation(line: 148, column: 9, scope: !11674)
!11687 = !DILocation(line: 148, column: 14, scope: !11674)
!11688 = !DILocation(line: 149, column: 1, scope: !11674)
!11689 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !10334, file: !10334, line: 646, type: !10335, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11690 = !DILocalVariable(name: "__ret", scope: !11691, file: !10334, line: 648, type: !317)
!11691 = distinct !DILexicalBlock(scope: !11689, file: !10334, line: 648, column: 9)
!11692 = !DILocation(line: 648, column: 9, scope: !11691)
!11693 = !DILocalVariable(name: "__edi", scope: !11691, file: !10334, line: 648, type: !317)
!11694 = !DILocalVariable(name: "__esi", scope: !11691, file: !10334, line: 648, type: !317)
!11695 = !DILocalVariable(name: "__edx", scope: !11691, file: !10334, line: 648, type: !317)
!11696 = !DILocalVariable(name: "__ecx", scope: !11691, file: !10334, line: 648, type: !317)
!11697 = !DILocalVariable(name: "__eax", scope: !11691, file: !10334, line: 648, type: !317)
!11698 = !DILocation(line: 648, column: 9, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11700, file: !10334, line: 648, column: 9)
!11700 = distinct !DILexicalBlock(scope: !11691, file: !10334, line: 648, column: 9)
!11701 = !{i32 -2145622438, i32 -2145620123, i32 -2145619889, i32 -2145619838, i32 -2145619810, i32 -2145619785, i32 -2145620101, i32 -2145620088, i32 -2145619650, i32 -2145619531, i32 -2145619996, i32 -2145619969, i32 -2145619941, i32 -2145619911}
!11702 = !DILocalVariable(name: "__mask", scope: !11703, file: !10334, line: 648, type: !317)
!11703 = distinct !DILexicalBlock(scope: !11699, file: !10334, line: 648, column: 9)
!11704 = !DILocation(line: 648, column: 9, scope: !11703)
!11705 = !DILocation(line: 648, column: 9, scope: !11700)
!11706 = !DILocation(line: 648, column: 2, scope: !11689)
!11707 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !10334, file: !10334, line: 656, type: !3704, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11708 = !DILocalVariable(name: "__edi", scope: !11709, file: !10334, line: 658, type: !317)
!11709 = distinct !DILexicalBlock(scope: !11707, file: !10334, line: 658, column: 2)
!11710 = !DILocation(line: 658, column: 2, scope: !11709)
!11711 = !DILocalVariable(name: "__esi", scope: !11709, file: !10334, line: 658, type: !317)
!11712 = !DILocalVariable(name: "__edx", scope: !11709, file: !10334, line: 658, type: !317)
!11713 = !DILocalVariable(name: "__ecx", scope: !11709, file: !10334, line: 658, type: !317)
!11714 = !DILocalVariable(name: "__eax", scope: !11709, file: !10334, line: 658, type: !317)
!11715 = !{i32 -2145615344, i32 -2145614612, i32 -2145614378, i32 -2145614327, i32 -2145614299, i32 -2145614274, i32 -2145614590, i32 -2145614577, i32 -2145614139, i32 -2145614020, i32 -2145614485, i32 -2145614458, i32 -2145614430, i32 -2145614400}
!11716 = !DILocation(line: 659, column: 1, scope: !11707)
!11717 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !10334, file: !10334, line: 651, type: !11718, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11718 = !DISubroutineType(types: !11719)
!11719 = !{null, !317}
!11720 = !DILocalVariable(name: "f", arg: 1, scope: !11717, file: !10334, line: 651, type: !317)
!11721 = !DILocation(line: 651, column: 65, scope: !11717)
!11722 = !DILocalVariable(name: "__edi", scope: !11723, file: !10334, line: 653, type: !317)
!11723 = distinct !DILexicalBlock(scope: !11717, file: !10334, line: 653, column: 2)
!11724 = !DILocation(line: 653, column: 2, scope: !11723)
!11725 = !DILocalVariable(name: "__esi", scope: !11723, file: !10334, line: 653, type: !317)
!11726 = !DILocalVariable(name: "__edx", scope: !11723, file: !10334, line: 653, type: !317)
!11727 = !DILocalVariable(name: "__ecx", scope: !11723, file: !10334, line: 653, type: !317)
!11728 = !DILocalVariable(name: "__eax", scope: !11723, file: !10334, line: 653, type: !317)
!11729 = !{i32 -2145617971, i32 -2145617221, i32 -2145616987, i32 -2145616936, i32 -2145616908, i32 -2145616883, i32 -2145617199, i32 -2145617186, i32 -2145616748, i32 -2145616629, i32 -2145617094, i32 -2145617067, i32 -2145617039, i32 -2145617009}
!11730 = !DILocation(line: 654, column: 1, scope: !11717)
!11731 = distinct !DISubprogram(name: "test_bit", scope: !11732, file: !11732, line: 132, type: !11733, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11732 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!11733 = !DISubroutineType(types: !11734)
!11734 = !{!540, !513, !11735}
!11735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11736, size: 64)
!11736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11737)
!11737 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !317)
!11738 = !DILocalVariable(name: "nr", arg: 1, scope: !11739, file: !11740, line: 210, type: !513)
!11739 = distinct !DISubprogram(name: "variable_test_bit", scope: !11740, file: !11740, line: 210, type: !11733, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11740 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!11741 = !DILocation(line: 210, column: 52, scope: !11739, inlinedAt: !11742)
!11742 = distinct !DILocation(line: 135, column: 9, scope: !11731)
!11743 = !DILocalVariable(name: "addr", arg: 2, scope: !11739, file: !11740, line: 210, type: !11735)
!11744 = !DILocation(line: 210, column: 86, scope: !11739, inlinedAt: !11742)
!11745 = !DILocalVariable(name: "oldbit", scope: !11739, file: !11740, line: 212, type: !540)
!11746 = !DILocation(line: 212, column: 7, scope: !11739, inlinedAt: !11742)
!11747 = !DILocalVariable(name: "nr", arg: 1, scope: !11748, file: !11740, line: 204, type: !513)
!11748 = distinct !DISubprogram(name: "constant_test_bit", scope: !11740, file: !11740, line: 204, type: !11733, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11749 = !DILocation(line: 204, column: 52, scope: !11748, inlinedAt: !11750)
!11750 = distinct !DILocation(line: 135, column: 9, scope: !11731)
!11751 = !DILocalVariable(name: "addr", arg: 2, scope: !11748, file: !11740, line: 204, type: !11735)
!11752 = !DILocation(line: 204, column: 86, scope: !11748, inlinedAt: !11750)
!11753 = !DILocalVariable(name: "v", arg: 1, scope: !11754, file: !11755, line: 69, type: !11758)
!11754 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !11755, file: !11755, line: 69, type: !11756, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11755 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!11756 = !DISubroutineType(types: !11757)
!11757 = !{null, !11758, !594}
!11758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11759, size: 64)
!11759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11760)
!11760 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!11761 = !DILocation(line: 69, column: 73, scope: !11754, inlinedAt: !11762)
!11762 = distinct !DILocation(line: 134, column: 2, scope: !11731)
!11763 = !DILocalVariable(name: "size", arg: 2, scope: !11754, file: !11755, line: 69, type: !594)
!11764 = !DILocation(line: 69, column: 83, scope: !11754, inlinedAt: !11762)
!11765 = !DILocalVariable(name: "nr", arg: 1, scope: !11731, file: !11732, line: 132, type: !513)
!11766 = !DILocation(line: 132, column: 34, scope: !11731)
!11767 = !DILocalVariable(name: "addr", arg: 2, scope: !11731, file: !11732, line: 132, type: !11735)
!11768 = !DILocation(line: 132, column: 68, scope: !11731)
!11769 = !DILocation(line: 134, column: 25, scope: !11731)
!11770 = !DILocation(line: 134, column: 32, scope: !11731)
!11771 = !DILocation(line: 134, column: 30, scope: !11731)
!11772 = !DILocation(line: 71, column: 19, scope: !11754, inlinedAt: !11762)
!11773 = !DILocation(line: 71, column: 22, scope: !11754, inlinedAt: !11762)
!11774 = !DILocation(line: 71, column: 2, scope: !11754, inlinedAt: !11762)
!11775 = !DILocation(line: 72, column: 2, scope: !11754, inlinedAt: !11762)
!11776 = !DILocation(line: 135, column: 9, scope: !11731)
!11777 = !DILocation(line: 206, column: 19, scope: !11748, inlinedAt: !11750)
!11778 = !DILocation(line: 206, column: 22, scope: !11748, inlinedAt: !11750)
!11779 = !DILocation(line: 206, column: 15, scope: !11748, inlinedAt: !11750)
!11780 = !DILocation(line: 207, column: 4, scope: !11748, inlinedAt: !11750)
!11781 = !DILocation(line: 207, column: 9, scope: !11748, inlinedAt: !11750)
!11782 = !DILocation(line: 207, column: 12, scope: !11748, inlinedAt: !11750)
!11783 = !DILocation(line: 206, column: 44, scope: !11748, inlinedAt: !11750)
!11784 = !DILocation(line: 207, column: 37, scope: !11748, inlinedAt: !11750)
!11785 = !DILocation(line: 217, column: 33, scope: !11739, inlinedAt: !11742)
!11786 = !DILocation(line: 217, column: 46, scope: !11739, inlinedAt: !11742)
!11787 = !DILocation(line: 214, column: 2, scope: !11739, inlinedAt: !11742)
!11788 = !{i32 -2147024097, i32 -2147024037}
!11789 = !DILocation(line: 219, column: 9, scope: !11739, inlinedAt: !11742)
!11790 = !DILocation(line: 135, column: 2, scope: !11731)
!11791 = distinct !DISubprogram(name: "plxsd_checksync", scope: !3, file: !3, line: 1014, type: !11792, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11792 = !DISubroutineType(types: !11793)
!11793 = !{null, !9128, !37}
!11794 = !DILocalVariable(name: "hc", arg: 1, scope: !11791, file: !3, line: 1014, type: !9128)
!11795 = !DILocation(line: 1014, column: 35, scope: !11791)
!11796 = !DILocalVariable(name: "rm", arg: 2, scope: !11791, file: !3, line: 1014, type: !37)
!11797 = !DILocation(line: 1014, column: 43, scope: !11791)
!11798 = !DILocation(line: 1016, column: 6, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 1016, column: 6)
!11800 = !DILocation(line: 1016, column: 10, scope: !11799)
!11801 = !DILocation(line: 1016, column: 6, scope: !11791)
!11802 = !DILocation(line: 1017, column: 7, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11804, file: !3, line: 1017, column: 7)
!11804 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 1016, column: 23)
!11805 = !DILocation(line: 1017, column: 18, scope: !11803)
!11806 = !DILocation(line: 1017, column: 7, scope: !11804)
!11807 = !DILocation(line: 1018, column: 8, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 1018, column: 8)
!11809 = distinct !DILexicalBlock(scope: !11803, file: !3, line: 1017, column: 27)
!11810 = !DILocation(line: 1018, column: 14, scope: !11808)
!11811 = !DILocation(line: 1018, column: 8, scope: !11809)
!11812 = !DILocation(line: 1020, column: 36, scope: !11808)
!11813 = !DILocation(line: 1020, column: 40, scope: !11808)
!11814 = !DILocation(line: 1020, column: 43, scope: !11808)
!11815 = !DILocation(line: 1021, column: 12, scope: !11808)
!11816 = !DILocation(line: 1021, column: 16, scope: !11808)
!11817 = !DILocation(line: 1019, column: 5, scope: !11808)
!11818 = !DILocation(line: 1022, column: 20, scope: !11809)
!11819 = !DILocation(line: 1022, column: 24, scope: !11809)
!11820 = !DILocation(line: 1022, column: 28, scope: !11809)
!11821 = !DILocation(line: 1022, column: 4, scope: !11809)
!11822 = !DILocation(line: 1023, column: 3, scope: !11809)
!11823 = !DILocation(line: 1024, column: 2, scope: !11804)
!11824 = !DILocation(line: 1025, column: 7, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11826, file: !3, line: 1025, column: 7)
!11826 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 1024, column: 9)
!11827 = !DILocation(line: 1025, column: 21, scope: !11825)
!11828 = !DILocation(line: 1025, column: 18, scope: !11825)
!11829 = !DILocation(line: 1025, column: 7, scope: !11826)
!11830 = !DILocation(line: 1026, column: 8, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 1026, column: 8)
!11832 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 1025, column: 25)
!11833 = !DILocation(line: 1026, column: 14, scope: !11831)
!11834 = !DILocation(line: 1026, column: 8, scope: !11832)
!11835 = !DILocation(line: 1028, column: 36, scope: !11831)
!11836 = !DILocation(line: 1028, column: 40, scope: !11831)
!11837 = !DILocation(line: 1028, column: 43, scope: !11831)
!11838 = !DILocation(line: 1029, column: 12, scope: !11831)
!11839 = !DILocation(line: 1029, column: 16, scope: !11831)
!11840 = !DILocation(line: 1027, column: 5, scope: !11831)
!11841 = !DILocation(line: 1030, column: 20, scope: !11832)
!11842 = !DILocation(line: 1030, column: 30, scope: !11832)
!11843 = !DILocation(line: 1030, column: 4, scope: !11832)
!11844 = !DILocation(line: 1031, column: 3, scope: !11832)
!11845 = !DILocation(line: 1033, column: 1, scope: !11791)
!11846 = distinct !DISubprogram(name: "kasan_check_read", scope: !11847, file: !11847, line: 34, type: !11848, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11847 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11848 = !DISubroutineType(types: !11849)
!11849 = !{!540, !11758, !7}
!11850 = !DILocalVariable(name: "p", arg: 1, scope: !11846, file: !11847, line: 34, type: !11758)
!11851 = !DILocation(line: 34, column: 58, scope: !11846)
!11852 = !DILocalVariable(name: "size", arg: 2, scope: !11846, file: !11847, line: 34, type: !7)
!11853 = !DILocation(line: 34, column: 74, scope: !11846)
!11854 = !DILocation(line: 36, column: 2, scope: !11846)
!11855 = distinct !DISubprogram(name: "kcsan_check_access", scope: !11856, file: !11856, line: 178, type: !11857, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11856 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11857 = !DISubroutineType(types: !11858)
!11858 = !{null, !11758, !594, !37}
!11859 = !DILocalVariable(name: "ptr", arg: 1, scope: !11855, file: !11856, line: 178, type: !11758)
!11860 = !DILocation(line: 178, column: 60, scope: !11855)
!11861 = !DILocalVariable(name: "size", arg: 2, scope: !11855, file: !11856, line: 178, type: !594)
!11862 = !DILocation(line: 178, column: 72, scope: !11855)
!11863 = !DILocalVariable(name: "type", arg: 3, scope: !11855, file: !11856, line: 179, type: !37)
!11864 = !DILocation(line: 179, column: 15, scope: !11855)
!11865 = !DILocation(line: 179, column: 23, scope: !11855)
!11866 = distinct !DISubprogram(name: "hfcmulti_resync", scope: !3, file: !3, line: 912, type: !11867, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11867 = !DISubroutineType(types: !11868)
!11868 = !{null, !9128, !9128, !37}
!11869 = !DILocalVariable(name: "lock", arg: 1, scope: !11870, file: !10045, line: 392, type: !4097)
!11870 = distinct !DISubprogram(name: "spin_unlock", scope: !10045, file: !10045, line: 392, type: !11871, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11871 = !DISubroutineType(types: !11872)
!11872 = !{null, !4097}
!11873 = !DILocation(line: 392, column: 53, scope: !11870, inlinedAt: !11874)
!11874 = distinct !DILocation(line: 1008, column: 2, scope: !11866)
!11875 = !DILocalVariable(name: "lock", arg: 1, scope: !11876, file: !10045, line: 352, type: !4097)
!11876 = distinct !DISubprogram(name: "spin_lock", scope: !10045, file: !10045, line: 352, type: !11871, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11877 = !DILocation(line: 352, column: 51, scope: !11876, inlinedAt: !11878)
!11878 = distinct !DILocation(line: 920, column: 2, scope: !11866)
!11879 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !11880)
!11880 = distinct !DILocation(line: 1009, column: 2, scope: !11866)
!11881 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !11880)
!11882 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !11883)
!11883 = distinct !DILocation(line: 919, column: 2, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !3, line: 919, column: 2)
!11885 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 919, column: 2)
!11886 = distinct !DILexicalBlock(scope: !11887, file: !3, line: 919, column: 2)
!11887 = distinct !DILexicalBlock(scope: !11888, file: !3, line: 919, column: 2)
!11888 = distinct !DILexicalBlock(scope: !11866, file: !3, line: 919, column: 2)
!11889 = !DILocalVariable(name: "locked", arg: 1, scope: !11866, file: !3, line: 912, type: !9128)
!11890 = !DILocation(line: 912, column: 35, scope: !11866)
!11891 = !DILocalVariable(name: "newmaster", arg: 2, scope: !11866, file: !3, line: 912, type: !9128)
!11892 = !DILocation(line: 912, column: 61, scope: !11866)
!11893 = !DILocalVariable(name: "rm", arg: 3, scope: !11866, file: !3, line: 912, type: !37)
!11894 = !DILocation(line: 912, column: 76, scope: !11866)
!11895 = !DILocalVariable(name: "hc", scope: !11866, file: !3, line: 914, type: !9128)
!11896 = !DILocation(line: 914, column: 20, scope: !11866)
!11897 = !DILocalVariable(name: "next", scope: !11866, file: !3, line: 914, type: !9128)
!11898 = !DILocation(line: 914, column: 25, scope: !11866)
!11899 = !DILocalVariable(name: "pcmmaster", scope: !11866, file: !3, line: 914, type: !9128)
!11900 = !DILocation(line: 914, column: 32, scope: !11866)
!11901 = !DILocalVariable(name: "plx_acc_32", scope: !11866, file: !3, line: 915, type: !570)
!11902 = !DILocation(line: 915, column: 16, scope: !11866)
!11903 = !DILocalVariable(name: "pv", scope: !11866, file: !3, line: 916, type: !9152)
!11904 = !DILocation(line: 916, column: 8, scope: !11866)
!11905 = !DILocalVariable(name: "flags", scope: !11866, file: !3, line: 917, type: !9457)
!11906 = !DILocation(line: 917, column: 9, scope: !11866)
!11907 = !DILocation(line: 919, column: 2, scope: !11866)
!11908 = !DILocation(line: 919, column: 2, scope: !11888)
!11909 = !DILocalVariable(name: "__dummy", scope: !11910, file: !3, line: 919, type: !317)
!11910 = distinct !DILexicalBlock(scope: !11887, file: !3, line: 919, column: 2)
!11911 = !DILocation(line: 919, column: 2, scope: !11910)
!11912 = !DILocalVariable(name: "__dummy2", scope: !11910, file: !3, line: 919, type: !9457)
!11913 = !DILocation(line: 919, column: 2, scope: !11887)
!11914 = !DILocation(line: 919, column: 2, scope: !11886)
!11915 = !DILocation(line: 919, column: 2, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 919, column: 2)
!11917 = !DILocalVariable(name: "__dummy", scope: !11918, file: !3, line: 919, type: !317)
!11918 = distinct !DILexicalBlock(scope: !11919, file: !3, line: 919, column: 2)
!11919 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 919, column: 2)
!11920 = !DILocation(line: 919, column: 2, scope: !11918)
!11921 = !DILocalVariable(name: "__dummy2", scope: !11918, file: !3, line: 919, type: !9457)
!11922 = !DILocation(line: 919, column: 2, scope: !11919)
!11923 = !DILocation(line: 919, column: 2, scope: !11885)
!11924 = !{i32 -2138112503}
!11925 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !11883)
!11926 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !11883)
!11927 = !DILocation(line: 919, column: 2, scope: !11884)
!11928 = !DILocation(line: 354, column: 2, scope: !11929, inlinedAt: !11878)
!11929 = distinct !DILexicalBlock(scope: !11876, file: !10045, line: 354, column: 2)
!11930 = !{i32 -2145206736}
!11931 = !DILocation(line: 354, column: 2, scope: !11932, inlinedAt: !11878)
!11932 = distinct !DILexicalBlock(scope: !11929, file: !10045, line: 354, column: 2)
!11933 = !DILocation(line: 922, column: 6, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11866, file: !3, line: 922, column: 6)
!11935 = !DILocation(line: 922, column: 12, scope: !11934)
!11936 = !DILocation(line: 922, column: 6, scope: !11866)
!11937 = !DILocation(line: 924, column: 20, scope: !11934)
!11938 = !DILocation(line: 923, column: 3, scope: !11934)
!11939 = !DILocation(line: 927, column: 6, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11866, file: !3, line: 927, column: 6)
!11941 = !DILocation(line: 927, column: 6, scope: !11866)
!11942 = !DILocation(line: 928, column: 7, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11944, file: !3, line: 928, column: 7)
!11944 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 927, column: 17)
!11945 = !DILocation(line: 928, column: 13, scope: !11943)
!11946 = !DILocation(line: 928, column: 7, scope: !11944)
!11947 = !DILocation(line: 929, column: 4, scope: !11943)
!11948 = !DILocation(line: 930, column: 2, scope: !11944)
!11949 = !DILocalVariable(name: "__mptr", scope: !11950, file: !3, line: 931, type: !570)
!11950 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 931, column: 3)
!11951 = distinct !DILexicalBlock(scope: !11952, file: !3, line: 931, column: 3)
!11952 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 930, column: 9)
!11953 = !DILocation(line: 931, column: 3, scope: !11950)
!11954 = !DILocation(line: 931, column: 3, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11950, file: !3, line: 931, column: 3)
!11956 = !DILocation(line: 931, column: 3, scope: !11951)
!11957 = !DILocalVariable(name: "__mptr", scope: !11958, file: !3, line: 931, type: !570)
!11958 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 931, column: 3)
!11959 = !DILocation(line: 931, column: 3, scope: !11958)
!11960 = !DILocation(line: 931, column: 3, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11958, file: !3, line: 931, column: 3)
!11962 = !DILocation(line: 931, column: 3, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 931, column: 3)
!11964 = !DILocation(line: 932, column: 34, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 932, column: 8)
!11966 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 931, column: 54)
!11967 = !DILocation(line: 932, column: 38, scope: !11965)
!11968 = !DILocation(line: 932, column: 8, scope: !11965)
!11969 = !DILocation(line: 932, column: 8, scope: !11966)
!11970 = !DILocation(line: 933, column: 9, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11972, file: !3, line: 933, column: 9)
!11972 = distinct !DILexicalBlock(scope: !11965, file: !3, line: 932, column: 45)
!11973 = !DILocation(line: 933, column: 13, scope: !11971)
!11974 = !DILocation(line: 933, column: 9, scope: !11972)
!11975 = !DILocation(line: 934, column: 18, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11971, file: !3, line: 933, column: 26)
!11977 = !DILocation(line: 934, column: 16, scope: !11976)
!11978 = !DILocation(line: 935, column: 6, scope: !11976)
!11979 = !DILocation(line: 937, column: 4, scope: !11972)
!11980 = !DILocation(line: 938, column: 3, scope: !11966)
!11981 = !DILocalVariable(name: "__mptr", scope: !11982, file: !3, line: 931, type: !570)
!11982 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 931, column: 3)
!11983 = !DILocation(line: 931, column: 3, scope: !11982)
!11984 = !DILocation(line: 931, column: 3, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 931, column: 3)
!11986 = distinct !{!11986, !11956, !11987}
!11987 = !DILocation(line: 938, column: 3, scope: !11951)
!11988 = !DILocalVariable(name: "__mptr", scope: !11989, file: !3, line: 942, type: !570)
!11989 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 942, column: 2)
!11990 = distinct !DILexicalBlock(scope: !11866, file: !3, line: 942, column: 2)
!11991 = !DILocation(line: 942, column: 2, scope: !11989)
!11992 = !DILocation(line: 942, column: 2, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 942, column: 2)
!11994 = !DILocation(line: 942, column: 2, scope: !11990)
!11995 = !DILocalVariable(name: "__mptr", scope: !11996, file: !3, line: 942, type: !570)
!11996 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 942, column: 2)
!11997 = !DILocation(line: 942, column: 2, scope: !11996)
!11998 = !DILocation(line: 942, column: 2, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 942, column: 2)
!12000 = !DILocation(line: 942, column: 2, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 942, column: 2)
!12002 = !DILocation(line: 943, column: 33, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !12004, file: !3, line: 943, column: 7)
!12004 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 942, column: 53)
!12005 = !DILocation(line: 943, column: 37, scope: !12003)
!12006 = !DILocation(line: 943, column: 7, scope: !12003)
!12007 = !DILocation(line: 943, column: 7, scope: !12004)
!12008 = !DILocation(line: 944, column: 17, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12003, file: !3, line: 943, column: 44)
!12010 = !DILocation(line: 944, column: 21, scope: !12009)
!12011 = !DILocation(line: 944, column: 33, scope: !12009)
!12012 = !DILocation(line: 944, column: 15, scope: !12009)
!12013 = !DILocation(line: 945, column: 15, scope: !12009)
!12014 = !DILocation(line: 945, column: 9, scope: !12009)
!12015 = !DILocation(line: 945, column: 7, scope: !12009)
!12016 = !DILocation(line: 946, column: 7, scope: !12009)
!12017 = !DILocation(line: 947, column: 11, scope: !12009)
!12018 = !DILocation(line: 947, column: 15, scope: !12009)
!12019 = !DILocation(line: 947, column: 4, scope: !12009)
!12020 = !DILocation(line: 948, column: 39, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12009, file: !3, line: 948, column: 8)
!12022 = !DILocation(line: 948, column: 43, scope: !12021)
!12023 = !DILocation(line: 948, column: 8, scope: !12021)
!12024 = !DILocation(line: 948, column: 8, scope: !12009)
!12025 = !DILocation(line: 949, column: 17, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 948, column: 50)
!12027 = !DILocation(line: 949, column: 15, scope: !12026)
!12028 = !DILocation(line: 950, column: 9, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12026, file: !3, line: 950, column: 9)
!12030 = !DILocation(line: 950, column: 13, scope: !12029)
!12031 = !DILocation(line: 950, column: 19, scope: !12029)
!12032 = !DILocation(line: 950, column: 9, scope: !12026)
!12033 = !DILocation(line: 951, column: 10, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 951, column: 10)
!12035 = distinct !DILexicalBlock(scope: !12029, file: !3, line: 950, column: 35)
!12036 = !DILocation(line: 951, column: 16, scope: !12034)
!12037 = !DILocation(line: 951, column: 10, scope: !12035)
!12038 = !DILocation(line: 952, column: 7, scope: !12034)
!12039 = !DILocation(line: 954, column: 6, scope: !12035)
!12040 = !DILocation(line: 954, column: 10, scope: !12035)
!12041 = !DILocation(line: 954, column: 20, scope: !12035)
!12042 = !DILocation(line: 955, column: 5, scope: !12035)
!12043 = !DILocation(line: 956, column: 4, scope: !12026)
!12044 = !DILocation(line: 957, column: 3, scope: !12009)
!12045 = !DILocation(line: 958, column: 2, scope: !12004)
!12046 = !DILocalVariable(name: "__mptr", scope: !12047, file: !3, line: 942, type: !570)
!12047 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 942, column: 2)
!12048 = !DILocation(line: 942, column: 2, scope: !12047)
!12049 = !DILocation(line: 942, column: 2, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12047, file: !3, line: 942, column: 2)
!12051 = distinct !{!12051, !11994, !12052}
!12052 = !DILocation(line: 958, column: 2, scope: !11990)
!12053 = !DILocation(line: 960, column: 6, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !11866, file: !3, line: 960, column: 6)
!12055 = !DILocation(line: 960, column: 6, scope: !11866)
!12056 = !DILocation(line: 961, column: 8, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 960, column: 17)
!12058 = !DILocation(line: 961, column: 6, scope: !12057)
!12059 = !DILocation(line: 962, column: 7, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12057, file: !3, line: 962, column: 7)
!12061 = !DILocation(line: 962, column: 13, scope: !12060)
!12062 = !DILocation(line: 962, column: 7, scope: !12057)
!12063 = !DILocation(line: 964, column: 27, scope: !12060)
!12064 = !DILocation(line: 964, column: 31, scope: !12060)
!12065 = !DILocation(line: 964, column: 35, scope: !12060)
!12066 = !DILocation(line: 963, column: 4, scope: !12060)
!12067 = !DILocation(line: 966, column: 16, scope: !12057)
!12068 = !DILocation(line: 966, column: 20, scope: !12057)
!12069 = !DILocation(line: 966, column: 32, scope: !12057)
!12070 = !DILocation(line: 966, column: 14, scope: !12057)
!12071 = !DILocation(line: 967, column: 14, scope: !12057)
!12072 = !DILocation(line: 967, column: 8, scope: !12057)
!12073 = !DILocation(line: 967, column: 6, scope: !12057)
!12074 = !DILocation(line: 968, column: 6, scope: !12057)
!12075 = !DILocation(line: 969, column: 10, scope: !12057)
!12076 = !DILocation(line: 969, column: 14, scope: !12057)
!12077 = !DILocation(line: 969, column: 3, scope: !12057)
!12078 = !DILocation(line: 971, column: 7, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12057, file: !3, line: 971, column: 7)
!12080 = !DILocation(line: 971, column: 11, scope: !12079)
!12081 = !DILocation(line: 971, column: 17, scope: !12079)
!12082 = !DILocation(line: 972, column: 7, scope: !12079)
!12083 = !DILocation(line: 972, column: 39, scope: !12079)
!12084 = !DILocation(line: 972, column: 43, scope: !12079)
!12085 = !DILocation(line: 972, column: 11, scope: !12079)
!12086 = !DILocation(line: 971, column: 7, scope: !12057)
!12087 = !DILocation(line: 973, column: 8, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 973, column: 8)
!12089 = distinct !DILexicalBlock(scope: !12079, file: !3, line: 972, column: 50)
!12090 = !DILocation(line: 973, column: 14, scope: !12088)
!12091 = !DILocation(line: 973, column: 8, scope: !12089)
!12092 = !DILocation(line: 974, column: 5, scope: !12088)
!12093 = !DILocation(line: 975, column: 4, scope: !12089)
!12094 = !DILocation(line: 975, column: 8, scope: !12089)
!12095 = !DILocation(line: 975, column: 18, scope: !12089)
!12096 = !DILocation(line: 976, column: 3, scope: !12089)
!12097 = !DILocation(line: 977, column: 2, scope: !12057)
!12098 = !DILocation(line: 978, column: 7, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12100, file: !3, line: 978, column: 7)
!12100 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 977, column: 9)
!12101 = !DILocation(line: 978, column: 7, scope: !12100)
!12102 = !DILocation(line: 979, column: 9, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12099, file: !3, line: 978, column: 18)
!12104 = !DILocation(line: 979, column: 7, scope: !12103)
!12105 = !DILocation(line: 980, column: 8, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 980, column: 8)
!12107 = !DILocation(line: 980, column: 14, scope: !12106)
!12108 = !DILocation(line: 980, column: 8, scope: !12103)
!12109 = !DILocation(line: 983, column: 29, scope: !12106)
!12110 = !DILocation(line: 983, column: 33, scope: !12106)
!12111 = !DILocation(line: 983, column: 37, scope: !12106)
!12112 = !DILocation(line: 981, column: 5, scope: !12106)
!12113 = !DILocation(line: 984, column: 8, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 984, column: 8)
!12115 = !DILocation(line: 984, column: 12, scope: !12114)
!12116 = !DILocation(line: 984, column: 18, scope: !12114)
!12117 = !DILocation(line: 984, column: 8, scope: !12103)
!12118 = !DILocation(line: 987, column: 9, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 987, column: 9)
!12120 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 984, column: 34)
!12121 = !DILocation(line: 987, column: 15, scope: !12119)
!12122 = !DILocation(line: 987, column: 9, scope: !12120)
!12123 = !DILocation(line: 988, column: 6, scope: !12119)
!12124 = !DILocation(line: 990, column: 5, scope: !12120)
!12125 = !DILocation(line: 990, column: 9, scope: !12120)
!12126 = !DILocation(line: 990, column: 19, scope: !12120)
!12127 = !DILocation(line: 991, column: 4, scope: !12120)
!12128 = !DILocation(line: 992, column: 9, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !3, line: 992, column: 9)
!12130 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 991, column: 11)
!12131 = !DILocation(line: 992, column: 15, scope: !12129)
!12132 = !DILocation(line: 992, column: 9, scope: !12130)
!12133 = !DILocation(line: 995, column: 37, scope: !12129)
!12134 = !DILocation(line: 995, column: 41, scope: !12129)
!12135 = !DILocation(line: 993, column: 6, scope: !12129)
!12136 = !DILocation(line: 997, column: 17, scope: !12103)
!12137 = !DILocation(line: 997, column: 21, scope: !12103)
!12138 = !DILocation(line: 997, column: 33, scope: !12103)
!12139 = !DILocation(line: 997, column: 15, scope: !12103)
!12140 = !DILocation(line: 998, column: 15, scope: !12103)
!12141 = !DILocation(line: 998, column: 9, scope: !12103)
!12142 = !DILocation(line: 998, column: 7, scope: !12103)
!12143 = !DILocation(line: 999, column: 7, scope: !12103)
!12144 = !DILocation(line: 1000, column: 11, scope: !12103)
!12145 = !DILocation(line: 1000, column: 15, scope: !12103)
!12146 = !DILocation(line: 1000, column: 4, scope: !12103)
!12147 = !DILocation(line: 1001, column: 3, scope: !12103)
!12148 = !DILocation(line: 1002, column: 9, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12099, file: !3, line: 1002, column: 8)
!12150 = !DILocation(line: 1002, column: 8, scope: !12099)
!12151 = !DILocation(line: 1003, column: 5, scope: !12149)
!12152 = !DILocation(line: 1006, column: 15, scope: !11866)
!12153 = !DILocation(line: 1006, column: 13, scope: !11866)
!12154 = !DILocation(line: 394, column: 2, scope: !12155, inlinedAt: !11874)
!12155 = distinct !DILexicalBlock(scope: !11870, file: !10045, line: 394, column: 2)
!12156 = !{i32 -2145204375}
!12157 = !DILocation(line: 394, column: 2, scope: !12158, inlinedAt: !11874)
!12158 = distinct !DILexicalBlock(scope: !12155, file: !10045, line: 394, column: 2)
!12159 = !DILocation(line: 1009, column: 35, scope: !11866)
!12160 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !11880)
!12161 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !11880)
!12162 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !11880)
!12163 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !11880)
!12164 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !11880)
!12165 = !DILocation(line: 1010, column: 1, scope: !11866)
!12166 = distinct !DISubprogram(name: "readl", scope: !12167, file: !12167, line: 59, type: !12168, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12167 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!12168 = !DISubroutineType(types: !12169)
!12169 = !{!7, !11758}
!12170 = !DILocalVariable(name: "addr", arg: 1, scope: !12166, file: !12167, line: 59, type: !11758)
!12171 = !DILocation(line: 59, column: 1, scope: !12166)
!12172 = !DILocalVariable(name: "ret", scope: !12166, file: !12167, line: 59, type: !7)
!12173 = !{i32 -2143192139}
!12174 = distinct !DISubprogram(name: "writel", scope: !12167, file: !12167, line: 67, type: !12175, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12175 = !DISubroutineType(types: !12176)
!12176 = !{null, !7, !12177}
!12177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11760, size: 64)
!12178 = !DILocalVariable(name: "val", arg: 1, scope: !12174, file: !12167, line: 67, type: !7)
!12179 = !DILocation(line: 67, column: 1, scope: !12174)
!12180 = !DILocalVariable(name: "addr", arg: 2, scope: !12174, file: !12167, line: 67, type: !12177)
!12181 = !{i32 -2143189746}
!12182 = distinct !DISubprogram(name: "vpm_out", scope: !3, file: !3, line: 702, type: !12183, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12183 = !DISubroutineType(types: !12184)
!12184 = !{null, !9128, !37, !477, !494}
!12185 = !DILocalVariable(name: "c", arg: 1, scope: !12182, file: !3, line: 702, type: !9128)
!12186 = !DILocation(line: 702, column: 27, scope: !12182)
!12187 = !DILocalVariable(name: "which", arg: 2, scope: !12182, file: !3, line: 702, type: !37)
!12188 = !DILocation(line: 702, column: 34, scope: !12182)
!12189 = !DILocalVariable(name: "addr", arg: 3, scope: !12182, file: !3, line: 702, type: !477)
!12190 = !DILocation(line: 702, column: 56, scope: !12182)
!12191 = !DILocalVariable(name: "data", arg: 4, scope: !12182, file: !3, line: 703, type: !494)
!12192 = !DILocation(line: 703, column: 16, scope: !12182)
!12193 = !DILocation(line: 705, column: 20, scope: !12182)
!12194 = !DILocation(line: 705, column: 23, scope: !12182)
!12195 = !DILocation(line: 705, column: 2, scope: !12182)
!12196 = !DILocation(line: 707, column: 18, scope: !12182)
!12197 = !DILocation(line: 707, column: 2, scope: !12182)
!12198 = !DILocation(line: 709, column: 7, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 709, column: 6)
!12200 = !DILocation(line: 709, column: 6, scope: !12182)
!12201 = !DILocation(line: 710, column: 16, scope: !12199)
!12202 = !DILocation(line: 710, column: 3, scope: !12199)
!12203 = !DILocation(line: 712, column: 16, scope: !12199)
!12204 = !DILocation(line: 712, column: 3, scope: !12199)
!12205 = !DILocation(line: 714, column: 17, scope: !12182)
!12206 = !DILocation(line: 714, column: 23, scope: !12182)
!12207 = !DILocation(line: 714, column: 2, scope: !12182)
!12208 = !DILocation(line: 716, column: 15, scope: !12182)
!12209 = !DILocation(line: 716, column: 2, scope: !12182)
!12210 = !DILocation(line: 718, column: 19, scope: !12182)
!12211 = !DILocation(line: 718, column: 2, scope: !12182)
!12212 = !DILocalVariable(name: "regin", scope: !12213, file: !3, line: 721, type: !494)
!12213 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 720, column: 2)
!12214 = !DILocation(line: 721, column: 17, scope: !12213)
!12215 = !DILocation(line: 722, column: 18, scope: !12213)
!12216 = !DILocation(line: 722, column: 21, scope: !12213)
!12217 = !DILocation(line: 722, column: 28, scope: !12213)
!12218 = !DILocation(line: 722, column: 11, scope: !12213)
!12219 = !DILocation(line: 722, column: 9, scope: !12213)
!12220 = !DILocation(line: 723, column: 7, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 723, column: 7)
!12222 = !DILocation(line: 723, column: 16, scope: !12221)
!12223 = !DILocation(line: 723, column: 13, scope: !12221)
!12224 = !DILocation(line: 723, column: 7, scope: !12213)
!12225 = !DILocation(line: 725, column: 21, scope: !12221)
!12226 = !DILocation(line: 725, column: 27, scope: !12221)
!12227 = !DILocation(line: 725, column: 33, scope: !12221)
!12228 = !DILocation(line: 724, column: 4, scope: !12221)
!12229 = !DILocation(line: 728, column: 1, scope: !12182)
!12230 = distinct !DISubprogram(name: "outw", scope: !12167, file: !12167, line: 335, type: !12231, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12231 = !DISubroutineType(types: !12232)
!12232 = !{null, !477, !37}
!12233 = !DILocalVariable(name: "value", arg: 1, scope: !12230, file: !12167, line: 335, type: !477)
!12234 = !DILocation(line: 335, column: 1, scope: !12230)
!12235 = !DILocalVariable(name: "port", arg: 2, scope: !12230, file: !12167, line: 335, type: !37)
!12236 = !{i32 -2143177133}
!12237 = distinct !DISubprogram(name: "outl", scope: !12167, file: !12167, line: 336, type: !12238, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12238 = !DISubroutineType(types: !12239)
!12239 = !{null, !7, !37}
!12240 = !DILocalVariable(name: "value", arg: 1, scope: !12237, file: !12167, line: 336, type: !7)
!12241 = !DILocation(line: 336, column: 1, scope: !12237)
!12242 = !DILocalVariable(name: "port", arg: 2, scope: !12237, file: !12167, line: 336, type: !37)
!12243 = !{i32 -2143174380}
!12244 = distinct !DISubprogram(name: "vpm_write_address", scope: !3, file: !3, line: 660, type: !12245, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12245 = !DISubroutineType(types: !12246)
!12246 = !{null, !9128, !477}
!12247 = !DILocalVariable(name: "hc", arg: 1, scope: !12244, file: !3, line: 660, type: !9128)
!12248 = !DILocation(line: 660, column: 37, scope: !12244)
!12249 = !DILocalVariable(name: "addr", arg: 2, scope: !12244, file: !3, line: 660, type: !477)
!12250 = !DILocation(line: 660, column: 56, scope: !12244)
!12251 = !DILocation(line: 662, column: 17, scope: !12244)
!12252 = !DILocation(line: 662, column: 31, scope: !12244)
!12253 = !DILocation(line: 662, column: 29, scope: !12244)
!12254 = !DILocation(line: 662, column: 24, scope: !12244)
!12255 = !DILocation(line: 662, column: 2, scope: !12244)
!12256 = !DILocation(line: 663, column: 17, scope: !12244)
!12257 = !DILocation(line: 663, column: 32, scope: !12244)
!12258 = !DILocation(line: 663, column: 37, scope: !12244)
!12259 = !DILocation(line: 663, column: 29, scope: !12244)
!12260 = !DILocation(line: 663, column: 24, scope: !12244)
!12261 = !DILocation(line: 663, column: 2, scope: !12244)
!12262 = !DILocation(line: 664, column: 1, scope: !12244)
!12263 = distinct !DISubprogram(name: "enablepcibridge", scope: !3, file: !3, line: 554, type: !9447, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12264 = !DILocalVariable(name: "c", arg: 1, scope: !12263, file: !3, line: 554, type: !9128)
!12265 = !DILocation(line: 554, column: 35, scope: !12263)
!12266 = !DILocation(line: 556, column: 2, scope: !12263)
!12267 = !DILocation(line: 557, column: 1, scope: !12263)
!12268 = distinct !DISubprogram(name: "cpld_set_reg", scope: !3, file: !3, line: 624, type: !12269, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12269 = !DISubroutineType(types: !12270)
!12270 = !{null, !9128, !494}
!12271 = !DILocalVariable(name: "hc", arg: 1, scope: !12268, file: !3, line: 624, type: !9128)
!12272 = !DILocation(line: 624, column: 32, scope: !12268)
!12273 = !DILocalVariable(name: "reg", arg: 2, scope: !12268, file: !3, line: 624, type: !494)
!12274 = !DILocation(line: 624, column: 50, scope: !12268)
!12275 = !DILocation(line: 627, column: 2, scope: !12268)
!12276 = !DILocation(line: 628, column: 1, scope: !12268)
!12277 = distinct !DISubprogram(name: "writepcibridge", scope: !3, file: !3, line: 594, type: !12278, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12278 = !DISubroutineType(types: !12279)
!12279 = !{null, !9128, !494, !494}
!12280 = !DILocalVariable(name: "hc", arg: 1, scope: !12277, file: !3, line: 594, type: !9128)
!12281 = !DILocation(line: 594, column: 34, scope: !12277)
!12282 = !DILocalVariable(name: "address", arg: 2, scope: !12277, file: !3, line: 594, type: !494)
!12283 = !DILocation(line: 594, column: 52, scope: !12277)
!12284 = !DILocalVariable(name: "data", arg: 3, scope: !12277, file: !3, line: 594, type: !494)
!12285 = !DILocation(line: 594, column: 75, scope: !12277)
!12286 = !DILocalVariable(name: "cipv", scope: !12277, file: !3, line: 596, type: !477)
!12287 = !DILocation(line: 596, column: 17, scope: !12277)
!12288 = !DILocalVariable(name: "datav", scope: !12277, file: !3, line: 597, type: !7)
!12289 = !DILocation(line: 597, column: 15, scope: !12277)
!12290 = !DILocation(line: 599, column: 7, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 599, column: 6)
!12292 = !DILocation(line: 599, column: 11, scope: !12291)
!12293 = !DILocation(line: 599, column: 6, scope: !12277)
!12294 = !DILocation(line: 600, column: 3, scope: !12291)
!12295 = !DILocation(line: 602, column: 6, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 602, column: 6)
!12297 = !DILocation(line: 602, column: 14, scope: !12296)
!12298 = !DILocation(line: 602, column: 6, scope: !12277)
!12299 = !DILocation(line: 603, column: 8, scope: !12296)
!12300 = !DILocation(line: 603, column: 3, scope: !12296)
!12301 = !DILocation(line: 605, column: 8, scope: !12296)
!12302 = !DILocation(line: 608, column: 7, scope: !12277)
!12303 = !DILocation(line: 608, column: 13, scope: !12277)
!12304 = !DILocation(line: 608, column: 17, scope: !12277)
!12305 = !DILocation(line: 608, column: 28, scope: !12277)
!12306 = !DILocation(line: 608, column: 2, scope: !12277)
!12307 = !DILocation(line: 610, column: 10, scope: !12277)
!12308 = !DILocation(line: 610, column: 26, scope: !12277)
!12309 = !DILocation(line: 610, column: 18, scope: !12277)
!12310 = !DILocation(line: 610, column: 31, scope: !12277)
!12311 = !DILocation(line: 610, column: 15, scope: !12277)
!12312 = !DILocation(line: 610, column: 48, scope: !12277)
!12313 = !DILocation(line: 610, column: 40, scope: !12277)
!12314 = !DILocation(line: 610, column: 53, scope: !12277)
!12315 = !DILocation(line: 610, column: 37, scope: !12277)
!12316 = !DILocation(line: 611, column: 12, scope: !12277)
!12317 = !DILocation(line: 611, column: 4, scope: !12277)
!12318 = !DILocation(line: 611, column: 17, scope: !12277)
!12319 = !DILocation(line: 610, column: 60, scope: !12277)
!12320 = !DILocation(line: 610, column: 8, scope: !12277)
!12321 = !DILocation(line: 620, column: 7, scope: !12277)
!12322 = !DILocation(line: 620, column: 14, scope: !12277)
!12323 = !DILocation(line: 620, column: 18, scope: !12277)
!12324 = !DILocation(line: 620, column: 2, scope: !12277)
!12325 = !DILocation(line: 621, column: 1, scope: !12277)
!12326 = distinct !DISubprogram(name: "disablepcibridge", scope: !3, file: !3, line: 560, type: !9447, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12327 = !DILocalVariable(name: "c", arg: 1, scope: !12326, file: !3, line: 560, type: !9128)
!12328 = !DILocation(line: 560, column: 36, scope: !12326)
!12329 = !DILocation(line: 562, column: 2, scope: !12326)
!12330 = !DILocation(line: 563, column: 1, scope: !12326)
!12331 = distinct !DISubprogram(name: "vpm_in", scope: !3, file: !3, line: 681, type: !12332, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12332 = !DISubroutineType(types: !12333)
!12333 = !{!494, !9128, !37, !477}
!12334 = !DILocalVariable(name: "c", arg: 1, scope: !12331, file: !3, line: 681, type: !9128)
!12335 = !DILocation(line: 681, column: 26, scope: !12331)
!12336 = !DILocalVariable(name: "which", arg: 2, scope: !12331, file: !3, line: 681, type: !37)
!12337 = !DILocation(line: 681, column: 33, scope: !12331)
!12338 = !DILocalVariable(name: "addr", arg: 3, scope: !12331, file: !3, line: 681, type: !477)
!12339 = !DILocation(line: 681, column: 55, scope: !12331)
!12340 = !DILocalVariable(name: "res", scope: !12331, file: !3, line: 683, type: !494)
!12341 = !DILocation(line: 683, column: 16, scope: !12331)
!12342 = !DILocation(line: 685, column: 20, scope: !12331)
!12343 = !DILocation(line: 685, column: 23, scope: !12331)
!12344 = !DILocation(line: 685, column: 2, scope: !12331)
!12345 = !DILocation(line: 687, column: 7, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12331, file: !3, line: 687, column: 6)
!12347 = !DILocation(line: 687, column: 6, scope: !12331)
!12348 = !DILocation(line: 688, column: 16, scope: !12346)
!12349 = !DILocation(line: 688, column: 3, scope: !12346)
!12350 = !DILocation(line: 690, column: 16, scope: !12346)
!12351 = !DILocation(line: 690, column: 3, scope: !12346)
!12352 = !DILocation(line: 692, column: 18, scope: !12331)
!12353 = !DILocation(line: 692, column: 2, scope: !12331)
!12354 = !DILocation(line: 693, column: 22, scope: !12331)
!12355 = !DILocation(line: 693, column: 8, scope: !12331)
!12356 = !DILocation(line: 693, column: 6, scope: !12331)
!12357 = !DILocation(line: 694, column: 19, scope: !12331)
!12358 = !DILocation(line: 694, column: 2, scope: !12331)
!12359 = !DILocation(line: 696, column: 15, scope: !12331)
!12360 = !DILocation(line: 696, column: 2, scope: !12331)
!12361 = !DILocation(line: 698, column: 9, scope: !12331)
!12362 = !DILocation(line: 698, column: 2, scope: !12331)
!12363 = distinct !DISubprogram(name: "cpld_write_reg", scope: !3, file: !3, line: 631, type: !12278, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12364 = !DILocalVariable(name: "hc", arg: 1, scope: !12363, file: !3, line: 631, type: !9128)
!12365 = !DILocation(line: 631, column: 34, scope: !12363)
!12366 = !DILocalVariable(name: "reg", arg: 2, scope: !12363, file: !3, line: 631, type: !494)
!12367 = !DILocation(line: 631, column: 52, scope: !12363)
!12368 = !DILocalVariable(name: "val", arg: 3, scope: !12363, file: !3, line: 631, type: !494)
!12369 = !DILocation(line: 631, column: 71, scope: !12363)
!12370 = !DILocation(line: 633, column: 15, scope: !12363)
!12371 = !DILocation(line: 633, column: 19, scope: !12363)
!12372 = !DILocation(line: 633, column: 2, scope: !12363)
!12373 = !DILocation(line: 635, column: 18, scope: !12363)
!12374 = !DILocation(line: 635, column: 2, scope: !12363)
!12375 = !DILocation(line: 636, column: 17, scope: !12363)
!12376 = !DILocation(line: 636, column: 24, scope: !12363)
!12377 = !DILocation(line: 636, column: 2, scope: !12363)
!12378 = !DILocation(line: 637, column: 19, scope: !12363)
!12379 = !DILocation(line: 637, column: 2, scope: !12363)
!12380 = !DILocation(line: 639, column: 2, scope: !12363)
!12381 = distinct !DISubprogram(name: "readpcibridge", scope: !3, file: !3, line: 566, type: !12382, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12382 = !DISubroutineType(types: !12383)
!12383 = !{!494, !9128, !494}
!12384 = !DILocalVariable(name: "hc", arg: 1, scope: !12381, file: !3, line: 566, type: !9128)
!12385 = !DILocation(line: 566, column: 33, scope: !12381)
!12386 = !DILocalVariable(name: "address", arg: 2, scope: !12381, file: !3, line: 566, type: !494)
!12387 = !DILocation(line: 566, column: 51, scope: !12381)
!12388 = !DILocalVariable(name: "cipv", scope: !12381, file: !3, line: 568, type: !477)
!12389 = !DILocation(line: 568, column: 17, scope: !12381)
!12390 = !DILocalVariable(name: "data", scope: !12381, file: !3, line: 569, type: !494)
!12391 = !DILocation(line: 569, column: 16, scope: !12381)
!12392 = !DILocation(line: 571, column: 7, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12381, file: !3, line: 571, column: 6)
!12394 = !DILocation(line: 571, column: 11, scope: !12393)
!12395 = !DILocation(line: 571, column: 6, scope: !12381)
!12396 = !DILocation(line: 572, column: 3, scope: !12393)
!12397 = !DILocation(line: 575, column: 2, scope: !12381)
!12398 = !DILocation(line: 577, column: 6, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12381, file: !3, line: 577, column: 6)
!12400 = !DILocation(line: 577, column: 14, scope: !12399)
!12401 = !DILocation(line: 577, column: 6, scope: !12381)
!12402 = !DILocation(line: 578, column: 8, scope: !12399)
!12403 = !DILocation(line: 578, column: 3, scope: !12399)
!12404 = !DILocation(line: 580, column: 8, scope: !12399)
!12405 = !DILocation(line: 584, column: 7, scope: !12381)
!12406 = !DILocation(line: 584, column: 13, scope: !12381)
!12407 = !DILocation(line: 584, column: 17, scope: !12381)
!12408 = !DILocation(line: 584, column: 28, scope: !12381)
!12409 = !DILocation(line: 584, column: 2, scope: !12381)
!12410 = !DILocation(line: 585, column: 13, scope: !12381)
!12411 = !DILocation(line: 585, column: 17, scope: !12381)
!12412 = !DILocation(line: 585, column: 9, scope: !12381)
!12413 = !DILocation(line: 585, column: 7, scope: !12381)
!12414 = !DILocation(line: 588, column: 2, scope: !12381)
!12415 = !DILocation(line: 590, column: 9, scope: !12381)
!12416 = !DILocation(line: 590, column: 2, scope: !12381)
!12417 = !DILocation(line: 591, column: 1, scope: !12381)
!12418 = distinct !DISubprogram(name: "inb", scope: !12167, file: !12167, line: 334, type: !12419, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12419 = !DISubroutineType(types: !12420)
!12420 = !{!494, !37}
!12421 = !DILocalVariable(name: "port", arg: 1, scope: !12418, file: !12167, line: 334, type: !37)
!12422 = !DILocation(line: 334, column: 1, scope: !12418)
!12423 = !DILocalVariable(name: "value", scope: !12418, file: !12167, line: 334, type: !494)
!12424 = !{i32 -2143179674}
!12425 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !12426, file: !12426, line: 81, type: !12427, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12426 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12427 = !DISubroutineType(types: !12428)
!12428 = !{!540, !513, !12429}
!12429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11737, size: 64)
!12430 = !DILocalVariable(name: "nr", arg: 1, scope: !12431, file: !11740, line: 160, type: !513)
!12431 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !11740, file: !11740, line: 160, type: !12427, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12432 = !DILocation(line: 160, column: 30, scope: !12431, inlinedAt: !12433)
!12433 = distinct !DILocation(line: 84, column: 9, scope: !12425)
!12434 = !DILocalVariable(name: "addr", arg: 2, scope: !12431, file: !11740, line: 160, type: !12429)
!12435 = !DILocation(line: 160, column: 58, scope: !12431, inlinedAt: !12433)
!12436 = !DILocalVariable(name: "c", scope: !12437, file: !11740, line: 162, type: !540)
!12437 = distinct !DILexicalBlock(scope: !12431, file: !11740, line: 162, column: 9)
!12438 = !DILocation(line: 162, column: 9, scope: !12437, inlinedAt: !12433)
!12439 = !DILocalVariable(name: "v", arg: 1, scope: !12440, file: !11755, line: 99, type: !11758)
!12440 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !11755, file: !11755, line: 99, type: !11756, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12441 = !DILocation(line: 99, column: 79, scope: !12440, inlinedAt: !12442)
!12442 = distinct !DILocation(line: 83, column: 2, scope: !12425)
!12443 = !DILocalVariable(name: "size", arg: 2, scope: !12440, file: !11755, line: 99, type: !594)
!12444 = !DILocation(line: 99, column: 89, scope: !12440, inlinedAt: !12442)
!12445 = !DILocalVariable(name: "nr", arg: 1, scope: !12425, file: !12426, line: 81, type: !513)
!12446 = !DILocation(line: 81, column: 44, scope: !12425)
!12447 = !DILocalVariable(name: "addr", arg: 2, scope: !12425, file: !12426, line: 81, type: !12429)
!12448 = !DILocation(line: 81, column: 72, scope: !12425)
!12449 = !DILocation(line: 83, column: 31, scope: !12425)
!12450 = !DILocation(line: 83, column: 38, scope: !12425)
!12451 = !DILocation(line: 83, column: 36, scope: !12425)
!12452 = !DILocation(line: 101, column: 20, scope: !12440, inlinedAt: !12442)
!12453 = !DILocation(line: 101, column: 23, scope: !12440, inlinedAt: !12442)
!12454 = !DILocation(line: 101, column: 2, scope: !12440, inlinedAt: !12442)
!12455 = !DILocation(line: 102, column: 2, scope: !12440, inlinedAt: !12442)
!12456 = !DILocation(line: 84, column: 33, scope: !12425)
!12457 = !DILocation(line: 84, column: 37, scope: !12425)
!12458 = !{i32 -2147026947, i32 -2147026851}
!12459 = !DILocation(line: 84, column: 2, scope: !12425)
!12460 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !9157, file: !9157, line: 1870, type: !12461, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12461 = !DISubroutineType(types: !12462)
!12462 = !{null, !9155, !570}
!12463 = !DILocalVariable(name: "pdev", arg: 1, scope: !12460, file: !9157, line: 1870, type: !9155)
!12464 = !DILocation(line: 1870, column: 52, scope: !12460)
!12465 = !DILocalVariable(name: "data", arg: 2, scope: !12460, file: !9157, line: 1870, type: !570)
!12466 = !DILocation(line: 1870, column: 64, scope: !12460)
!12467 = !DILocation(line: 1872, column: 19, scope: !12460)
!12468 = !DILocation(line: 1872, column: 25, scope: !12460)
!12469 = !DILocation(line: 1872, column: 30, scope: !12460)
!12470 = !DILocation(line: 1872, column: 2, scope: !12460)
!12471 = !DILocation(line: 1873, column: 1, scope: !12460)
!12472 = distinct !DISubprogram(name: "kasan_check_write", scope: !11847, file: !11847, line: 38, type: !11848, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12473 = !DILocalVariable(name: "p", arg: 1, scope: !12472, file: !11847, line: 38, type: !11758)
!12474 = !DILocation(line: 38, column: 59, scope: !12472)
!12475 = !DILocalVariable(name: "size", arg: 2, scope: !12472, file: !11847, line: 38, type: !7)
!12476 = !DILocation(line: 38, column: 75, scope: !12472)
!12477 = !DILocation(line: 40, column: 2, scope: !12472)
!12478 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !3804, file: !3804, line: 660, type: !12479, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12479 = !DISubroutineType(types: !12480)
!12480 = !{null, !4172, !570}
!12481 = !DILocalVariable(name: "dev", arg: 1, scope: !12478, file: !3804, line: 660, type: !4172)
!12482 = !DILocation(line: 660, column: 51, scope: !12478)
!12483 = !DILocalVariable(name: "data", arg: 2, scope: !12478, file: !3804, line: 660, type: !570)
!12484 = !DILocation(line: 660, column: 62, scope: !12478)
!12485 = !DILocation(line: 662, column: 21, scope: !12478)
!12486 = !DILocation(line: 662, column: 2, scope: !12478)
!12487 = !DILocation(line: 662, column: 7, scope: !12478)
!12488 = !DILocation(line: 662, column: 19, scope: !12478)
!12489 = !DILocation(line: 663, column: 1, scope: !12478)
!12490 = distinct !DISubprogram(name: "__list_del_entry", scope: !11675, file: !11675, line: 130, type: !11676, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12491 = !DILocalVariable(name: "entry", arg: 1, scope: !12490, file: !11675, line: 130, type: !292)
!12492 = !DILocation(line: 130, column: 55, scope: !12490)
!12493 = !DILocation(line: 132, column: 30, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12490, file: !11675, line: 132, column: 6)
!12495 = !DILocation(line: 132, column: 7, scope: !12494)
!12496 = !DILocation(line: 132, column: 6, scope: !12490)
!12497 = !DILocation(line: 133, column: 3, scope: !12494)
!12498 = !DILocation(line: 135, column: 13, scope: !12490)
!12499 = !DILocation(line: 135, column: 20, scope: !12490)
!12500 = !DILocation(line: 135, column: 26, scope: !12490)
!12501 = !DILocation(line: 135, column: 33, scope: !12490)
!12502 = !DILocation(line: 135, column: 2, scope: !12490)
!12503 = !DILocation(line: 136, column: 1, scope: !12490)
!12504 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !11675, file: !11675, line: 51, type: !12505, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12505 = !DISubroutineType(types: !12506)
!12506 = !{!540, !292}
!12507 = !DILocalVariable(name: "entry", arg: 1, scope: !12504, file: !11675, line: 51, type: !292)
!12508 = !DILocation(line: 51, column: 61, scope: !12504)
!12509 = !DILocation(line: 53, column: 2, scope: !12504)
!12510 = distinct !DISubprogram(name: "__list_del", scope: !11675, file: !11675, line: 110, type: !12511, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12511 = !DISubroutineType(types: !12512)
!12512 = !{null, !292, !292}
!12513 = !DILocalVariable(name: "prev", arg: 1, scope: !12510, file: !11675, line: 110, type: !292)
!12514 = !DILocation(line: 110, column: 50, scope: !12510)
!12515 = !DILocalVariable(name: "next", arg: 2, scope: !12510, file: !11675, line: 110, type: !292)
!12516 = !DILocation(line: 110, column: 75, scope: !12510)
!12517 = !DILocation(line: 112, column: 15, scope: !12510)
!12518 = !DILocation(line: 112, column: 2, scope: !12510)
!12519 = !DILocation(line: 112, column: 8, scope: !12510)
!12520 = !DILocation(line: 112, column: 13, scope: !12510)
!12521 = !DILocation(line: 113, column: 2, scope: !12510)
!12522 = !DILocation(line: 113, column: 2, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12510, file: !11675, line: 113, column: 2)
!12524 = !DILocation(line: 113, column: 2, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12523, file: !11675, line: 113, column: 2)
!12526 = !DILocation(line: 113, column: 2, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12523, file: !11675, line: 113, column: 2)
!12528 = !DILocation(line: 114, column: 1, scope: !12510)
!12529 = distinct !DISubprogram(name: "hfcmulti_probe", scope: !3, file: !3, line: 5428, type: !9279, scopeLine: 5429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12530 = !DILocalVariable(name: "pdev", arg: 1, scope: !12529, file: !3, line: 5428, type: !9155)
!12531 = !DILocation(line: 5428, column: 32, scope: !12529)
!12532 = !DILocalVariable(name: "ent", arg: 2, scope: !12529, file: !3, line: 5428, type: !9266)
!12533 = !DILocation(line: 5428, column: 66, scope: !12529)
!12534 = !DILocalVariable(name: "m", scope: !12529, file: !3, line: 5430, type: !9134)
!12535 = !DILocation(line: 5430, column: 17, scope: !12529)
!12536 = !DILocation(line: 5430, column: 38, scope: !12529)
!12537 = !DILocation(line: 5430, column: 43, scope: !12529)
!12538 = !DILocation(line: 5430, column: 21, scope: !12529)
!12539 = !DILocalVariable(name: "ret", scope: !12529, file: !3, line: 5431, type: !37)
!12540 = !DILocation(line: 5431, column: 7, scope: !12529)
!12541 = !DILocation(line: 5433, column: 6, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12529, file: !3, line: 5433, column: 6)
!12543 = !DILocation(line: 5433, column: 8, scope: !12542)
!12544 = !DILocation(line: 5433, column: 16, scope: !12542)
!12545 = !DILocation(line: 5433, column: 19, scope: !12542)
!12546 = !DILocation(line: 5433, column: 24, scope: !12542)
!12547 = !DILocation(line: 5433, column: 31, scope: !12542)
!12548 = !DILocation(line: 5433, column: 52, scope: !12542)
!12549 = !DILocation(line: 5434, column: 7, scope: !12542)
!12550 = !DILocation(line: 5434, column: 12, scope: !12542)
!12551 = !DILocation(line: 5434, column: 19, scope: !12542)
!12552 = !DILocation(line: 5434, column: 46, scope: !12542)
!12553 = !DILocation(line: 5435, column: 7, scope: !12542)
!12554 = !DILocation(line: 5435, column: 12, scope: !12542)
!12555 = !DILocation(line: 5435, column: 19, scope: !12542)
!12556 = !DILocation(line: 5435, column: 46, scope: !12542)
!12557 = !DILocation(line: 5436, column: 7, scope: !12542)
!12558 = !DILocation(line: 5436, column: 12, scope: !12542)
!12559 = !DILocation(line: 5436, column: 19, scope: !12542)
!12560 = !DILocation(line: 5433, column: 6, scope: !12529)
!12561 = !DILocation(line: 5439, column: 46, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12542, file: !3, line: 5436, column: 48)
!12563 = !DILocation(line: 5439, column: 52, scope: !12562)
!12564 = !DILocation(line: 5440, column: 10, scope: !12562)
!12565 = !DILocation(line: 5440, column: 16, scope: !12562)
!12566 = !DILocation(line: 5440, column: 24, scope: !12562)
!12567 = !DILocation(line: 5440, column: 30, scope: !12562)
!12568 = !DILocation(line: 5441, column: 10, scope: !12562)
!12569 = !DILocation(line: 5441, column: 16, scope: !12562)
!12570 = !DILocation(line: 5437, column: 3, scope: !12562)
!12571 = !DILocation(line: 5442, column: 3, scope: !12562)
!12572 = !DILocation(line: 5444, column: 3, scope: !12562)
!12573 = !DILocation(line: 5446, column: 22, scope: !12529)
!12574 = !DILocation(line: 5446, column: 25, scope: !12529)
!12575 = !DILocation(line: 5446, column: 31, scope: !12529)
!12576 = !DILocation(line: 5446, column: 8, scope: !12529)
!12577 = !DILocation(line: 5446, column: 6, scope: !12529)
!12578 = !DILocation(line: 5447, column: 6, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12529, file: !3, line: 5447, column: 6)
!12580 = !DILocation(line: 5447, column: 6, scope: !12529)
!12581 = !DILocation(line: 5448, column: 10, scope: !12579)
!12582 = !DILocation(line: 5448, column: 3, scope: !12579)
!12583 = !DILocation(line: 5449, column: 9, scope: !12529)
!12584 = !DILocation(line: 5450, column: 46, scope: !12529)
!12585 = !DILocation(line: 5450, column: 2, scope: !12529)
!12586 = !DILocation(line: 5451, column: 2, scope: !12529)
!12587 = !DILocation(line: 5452, column: 1, scope: !12529)
!12588 = distinct !DISubprogram(name: "hfc_remove_pci", scope: !3, file: !3, line: 5259, type: !9283, scopeLine: 5260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12589 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !12590)
!12590 = distinct !DILocation(line: 5273, column: 3, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 5270, column: 12)
!12592 = distinct !DILexicalBlock(scope: !12588, file: !3, line: 5270, column: 6)
!12593 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !12590)
!12594 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !12595)
!12595 = distinct !DILocation(line: 5271, column: 3, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 5271, column: 3)
!12597 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 5271, column: 3)
!12598 = distinct !DILexicalBlock(scope: !12599, file: !3, line: 5271, column: 3)
!12599 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 5271, column: 3)
!12600 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 5271, column: 3)
!12601 = !DILocalVariable(name: "pdev", arg: 1, scope: !12588, file: !3, line: 5259, type: !9155)
!12602 = !DILocation(line: 5259, column: 44, scope: !12588)
!12603 = !DILocalVariable(name: "card", scope: !12588, file: !3, line: 5261, type: !9128)
!12604 = !DILocation(line: 5261, column: 20, scope: !12588)
!12605 = !DILocation(line: 5261, column: 43, scope: !12588)
!12606 = !DILocation(line: 5261, column: 27, scope: !12588)
!12607 = !DILocalVariable(name: "flags", scope: !12588, file: !3, line: 5262, type: !9457)
!12608 = !DILocation(line: 5262, column: 11, scope: !12588)
!12609 = !DILocation(line: 5264, column: 6, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12588, file: !3, line: 5264, column: 6)
!12611 = !DILocation(line: 5264, column: 6, scope: !12588)
!12612 = !DILocation(line: 5267, column: 10, scope: !12610)
!12613 = !DILocation(line: 5267, column: 16, scope: !12610)
!12614 = !DILocation(line: 5267, column: 24, scope: !12610)
!12615 = !DILocation(line: 5267, column: 30, scope: !12610)
!12616 = !DILocation(line: 5268, column: 10, scope: !12610)
!12617 = !DILocation(line: 5268, column: 16, scope: !12610)
!12618 = !DILocation(line: 5268, column: 34, scope: !12610)
!12619 = !DILocation(line: 5268, column: 40, scope: !12610)
!12620 = !DILocation(line: 5265, column: 3, scope: !12610)
!12621 = !DILocation(line: 5270, column: 6, scope: !12592)
!12622 = !DILocation(line: 5270, column: 6, scope: !12588)
!12623 = !DILocation(line: 5271, column: 3, scope: !12591)
!12624 = !DILocation(line: 5271, column: 3, scope: !12600)
!12625 = !DILocalVariable(name: "__dummy", scope: !12626, file: !3, line: 5271, type: !317)
!12626 = distinct !DILexicalBlock(scope: !12599, file: !3, line: 5271, column: 3)
!12627 = !DILocation(line: 5271, column: 3, scope: !12626)
!12628 = !DILocalVariable(name: "__dummy2", scope: !12626, file: !3, line: 5271, type: !9457)
!12629 = !DILocation(line: 5271, column: 3, scope: !12599)
!12630 = !DILocation(line: 5271, column: 3, scope: !12598)
!12631 = !DILocation(line: 5271, column: 3, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 5271, column: 3)
!12633 = !DILocalVariable(name: "__dummy", scope: !12634, file: !3, line: 5271, type: !317)
!12634 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 5271, column: 3)
!12635 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 5271, column: 3)
!12636 = !DILocation(line: 5271, column: 3, scope: !12634)
!12637 = !DILocalVariable(name: "__dummy2", scope: !12634, file: !3, line: 5271, type: !9457)
!12638 = !DILocation(line: 5271, column: 3, scope: !12635)
!12639 = !DILocation(line: 5271, column: 3, scope: !12597)
!12640 = !{i32 -2138003309}
!12641 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !12595)
!12642 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !12595)
!12643 = !DILocation(line: 5271, column: 3, scope: !12596)
!12644 = !DILocation(line: 5272, column: 16, scope: !12591)
!12645 = !DILocation(line: 5272, column: 3, scope: !12591)
!12646 = !DILocation(line: 5273, column: 36, scope: !12591)
!12647 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !12590)
!12648 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !12590)
!12649 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !12590)
!12650 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !12590)
!12651 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !12590)
!12652 = !DILocation(line: 5274, column: 2, scope: !12591)
!12653 = !DILocation(line: 5275, column: 7, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12655, file: !3, line: 5275, column: 7)
!12655 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 5274, column: 10)
!12656 = !DILocation(line: 5275, column: 7, scope: !12655)
!12657 = !DILocation(line: 5276, column: 4, scope: !12654)
!12658 = !DILocation(line: 5279, column: 1, scope: !12588)
!12659 = distinct !DISubprogram(name: "hfcmulti_init", scope: !3, file: !3, line: 4987, type: !12660, scopeLine: 4989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12660 = !DISubroutineType(types: !12661)
!12661 = !{!37, !9134, !9155, !9266}
!12662 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !12663)
!12663 = distinct !DILocation(line: 5246, column: 2, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 5246, column: 2)
!12665 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 5246, column: 2)
!12666 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 5246, column: 2)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 5246, column: 2)
!12668 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5246, column: 2)
!12669 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !12670)
!12670 = distinct !DILocation(line: 5230, column: 2, scope: !12659)
!12671 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !12670)
!12672 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !12673)
!12673 = distinct !DILocation(line: 5248, column: 2, scope: !12659)
!12674 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !12673)
!12675 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !12676)
!12676 = distinct !DILocation(line: 5228, column: 2, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 5228, column: 2)
!12678 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 5228, column: 2)
!12679 = distinct !DILexicalBlock(scope: !12680, file: !3, line: 5228, column: 2)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !3, line: 5228, column: 2)
!12681 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5228, column: 2)
!12682 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !12683)
!12683 = distinct !DILocation(line: 5023, column: 2, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5023, column: 2)
!12685 = !DILocalVariable(name: "m", arg: 1, scope: !12659, file: !3, line: 4987, type: !9134)
!12686 = !DILocation(line: 4987, column: 30, scope: !12659)
!12687 = !DILocalVariable(name: "pdev", arg: 2, scope: !12659, file: !3, line: 4987, type: !9155)
!12688 = !DILocation(line: 4987, column: 49, scope: !12659)
!12689 = !DILocalVariable(name: "ent", arg: 3, scope: !12659, file: !3, line: 4988, type: !9266)
!12690 = !DILocation(line: 4988, column: 36, scope: !12659)
!12691 = !DILocalVariable(name: "ret_err", scope: !12659, file: !3, line: 4990, type: !37)
!12692 = !DILocation(line: 4990, column: 7, scope: !12659)
!12693 = !DILocalVariable(name: "pt", scope: !12659, file: !3, line: 4991, type: !37)
!12694 = !DILocation(line: 4991, column: 7, scope: !12659)
!12695 = !DILocalVariable(name: "hc", scope: !12659, file: !3, line: 4992, type: !9128)
!12696 = !DILocation(line: 4992, column: 20, scope: !12659)
!12697 = !DILocalVariable(name: "flags", scope: !12659, file: !3, line: 4993, type: !9457)
!12698 = !DILocation(line: 4993, column: 10, scope: !12659)
!12699 = !DILocalVariable(name: "dips", scope: !12659, file: !3, line: 4994, type: !9432)
!12700 = !DILocation(line: 4994, column: 10, scope: !12659)
!12701 = !DILocalVariable(name: "pmj", scope: !12659, file: !3, line: 4994, type: !9432)
!12702 = !DILocation(line: 4994, column: 20, scope: !12659)
!12703 = !DILocalVariable(name: "i", scope: !12659, file: !3, line: 4995, type: !37)
!12704 = !DILocation(line: 4995, column: 7, scope: !12659)
!12705 = !DILocalVariable(name: "ch", scope: !12659, file: !3, line: 4995, type: !37)
!12706 = !DILocation(line: 4995, column: 10, scope: !12659)
!12707 = !DILocalVariable(name: "maskcheck", scope: !12659, file: !3, line: 4996, type: !9152)
!12708 = !DILocation(line: 4996, column: 9, scope: !12659)
!12709 = !DILocation(line: 4998, column: 6, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 4998, column: 6)
!12711 = !DILocation(line: 4998, column: 14, scope: !12710)
!12712 = !DILocation(line: 4998, column: 6, scope: !12659)
!12713 = !DILocation(line: 4999, column: 3, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 4998, column: 28)
!12715 = !DILocation(line: 5001, column: 3, scope: !12714)
!12716 = !DILocation(line: 5003, column: 12, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5003, column: 6)
!12718 = !DILocation(line: 5003, column: 7, scope: !12717)
!12719 = !DILocation(line: 5003, column: 21, scope: !12717)
!12720 = !DILocation(line: 5003, column: 29, scope: !12717)
!12721 = !DILocation(line: 5003, column: 38, scope: !12717)
!12722 = !DILocation(line: 5003, column: 33, scope: !12717)
!12723 = !DILocation(line: 5003, column: 47, scope: !12717)
!12724 = !DILocation(line: 5003, column: 58, scope: !12717)
!12725 = !DILocation(line: 5003, column: 61, scope: !12717)
!12726 = !DILocation(line: 5003, column: 55, scope: !12717)
!12727 = !DILocation(line: 5003, column: 6, scope: !12659)
!12728 = !DILocation(line: 5006, column: 10, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12717, file: !3, line: 5003, column: 67)
!12730 = !DILocation(line: 5006, column: 13, scope: !12729)
!12731 = !DILocation(line: 5006, column: 26, scope: !12729)
!12732 = !DILocation(line: 5006, column: 29, scope: !12729)
!12733 = !DILocation(line: 5006, column: 40, scope: !12729)
!12734 = !DILocation(line: 5006, column: 43, scope: !12729)
!12735 = !DILocation(line: 5006, column: 49, scope: !12729)
!12736 = !DILocation(line: 5007, column: 15, scope: !12729)
!12737 = !DILocation(line: 5007, column: 10, scope: !12729)
!12738 = !DILocation(line: 5007, column: 24, scope: !12729)
!12739 = !DILocation(line: 5004, column: 3, scope: !12729)
!12740 = !DILocation(line: 5008, column: 3, scope: !12729)
!12741 = !DILocation(line: 5010, column: 3, scope: !12729)
!12742 = !DILocation(line: 5012, column: 6, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5012, column: 6)
!12744 = !DILocation(line: 5012, column: 12, scope: !12743)
!12745 = !DILocation(line: 5012, column: 6, scope: !12659)
!12746 = !DILocation(line: 5014, column: 20, scope: !12743)
!12747 = !DILocation(line: 5014, column: 23, scope: !12743)
!12748 = !DILocation(line: 5014, column: 36, scope: !12743)
!12749 = !DILocation(line: 5014, column: 39, scope: !12743)
!12750 = !DILocation(line: 5014, column: 50, scope: !12743)
!12751 = !DILocation(line: 5014, column: 53, scope: !12743)
!12752 = !DILocation(line: 5015, column: 15, scope: !12743)
!12753 = !DILocation(line: 5015, column: 10, scope: !12743)
!12754 = !DILocation(line: 5013, column: 3, scope: !12743)
!12755 = !DILocation(line: 5018, column: 7, scope: !12659)
!12756 = !DILocation(line: 5018, column: 5, scope: !12659)
!12757 = !DILocation(line: 5019, column: 7, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5019, column: 6)
!12759 = !DILocation(line: 5019, column: 6, scope: !12659)
!12760 = !DILocation(line: 5020, column: 3, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 5019, column: 11)
!12762 = !DILocation(line: 5021, column: 3, scope: !12761)
!12763 = !DILocation(line: 5023, column: 2, scope: !12659)
!12764 = !DILocation(line: 5023, column: 2, scope: !12684)
!12765 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !12683)
!12766 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !12683)
!12767 = !DILocation(line: 5024, column: 13, scope: !12659)
!12768 = !DILocation(line: 5024, column: 2, scope: !12659)
!12769 = !DILocation(line: 5024, column: 6, scope: !12659)
!12770 = !DILocation(line: 5024, column: 11, scope: !12659)
!12771 = !DILocation(line: 5025, column: 15, scope: !12659)
!12772 = !DILocation(line: 5025, column: 18, scope: !12659)
!12773 = !DILocation(line: 5025, column: 2, scope: !12659)
!12774 = !DILocation(line: 5025, column: 6, scope: !12659)
!12775 = !DILocation(line: 5025, column: 12, scope: !12659)
!12776 = !DILocation(line: 5026, column: 14, scope: !12659)
!12777 = !DILocation(line: 5026, column: 17, scope: !12659)
!12778 = !DILocation(line: 5026, column: 2, scope: !12659)
!12779 = !DILocation(line: 5026, column: 6, scope: !12659)
!12780 = !DILocation(line: 5026, column: 12, scope: !12659)
!12781 = !DILocation(line: 5027, column: 11, scope: !12659)
!12782 = !DILocation(line: 5027, column: 2, scope: !12659)
!12783 = !DILocation(line: 5027, column: 6, scope: !12659)
!12784 = !DILocation(line: 5027, column: 9, scope: !12659)
!12785 = !DILocation(line: 5028, column: 16, scope: !12659)
!12786 = !DILocation(line: 5028, column: 12, scope: !12659)
!12787 = !DILocation(line: 5028, column: 2, scope: !12659)
!12788 = !DILocation(line: 5028, column: 6, scope: !12659)
!12789 = !DILocation(line: 5028, column: 10, scope: !12659)
!12790 = !DILocation(line: 5029, column: 23, scope: !12659)
!12791 = !DILocation(line: 5029, column: 16, scope: !12659)
!12792 = !DILocation(line: 5029, column: 2, scope: !12659)
!12793 = !DILocation(line: 5029, column: 6, scope: !12659)
!12794 = !DILocation(line: 5029, column: 14, scope: !12659)
!12795 = !DILocation(line: 5030, column: 6, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5030, column: 6)
!12797 = !DILocation(line: 5030, column: 10, scope: !12796)
!12798 = !DILocation(line: 5030, column: 16, scope: !12796)
!12799 = !DILocation(line: 5030, column: 31, scope: !12796)
!12800 = !DILocation(line: 5030, column: 40, scope: !12796)
!12801 = !DILocation(line: 5030, column: 34, scope: !12796)
!12802 = !DILocation(line: 5030, column: 6, scope: !12659)
!12803 = !DILocation(line: 5032, column: 6, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 5030, column: 49)
!12805 = !DILocation(line: 5033, column: 13, scope: !12804)
!12806 = !DILocation(line: 5034, column: 11, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12804, file: !3, line: 5034, column: 3)
!12808 = !DILocation(line: 5034, column: 8, scope: !12807)
!12809 = !DILocation(line: 5034, column: 16, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12807, file: !3, line: 5034, column: 3)
!12811 = !DILocation(line: 5034, column: 19, scope: !12810)
!12812 = !DILocation(line: 5034, column: 3, scope: !12807)
!12813 = !DILocation(line: 5035, column: 16, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 5035, column: 8)
!12815 = distinct !DILexicalBlock(scope: !12810, file: !3, line: 5034, column: 32)
!12816 = !DILocation(line: 5035, column: 13, scope: !12814)
!12817 = !DILocation(line: 5035, column: 28, scope: !12814)
!12818 = !DILocation(line: 5035, column: 22, scope: !12814)
!12819 = !DILocation(line: 5035, column: 20, scope: !12814)
!12820 = !DILocation(line: 5035, column: 8, scope: !12815)
!12821 = !DILocation(line: 5036, column: 5, scope: !12814)
!12822 = !DILocation(line: 5037, column: 19, scope: !12815)
!12823 = !DILocation(line: 5037, column: 4, scope: !12815)
!12824 = !DILocation(line: 5037, column: 8, scope: !12815)
!12825 = !DILocation(line: 5037, column: 13, scope: !12815)
!12826 = !DILocation(line: 5037, column: 17, scope: !12815)
!12827 = !DILocation(line: 5038, column: 35, scope: !12815)
!12828 = !DILocation(line: 5038, column: 20, scope: !12815)
!12829 = !DILocation(line: 5038, column: 4, scope: !12815)
!12830 = !DILocation(line: 5038, column: 8, scope: !12815)
!12831 = !DILocation(line: 5038, column: 14, scope: !12815)
!12832 = !DILocation(line: 5038, column: 18, scope: !12815)
!12833 = !DILocation(line: 5039, column: 9, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 5039, column: 8)
!12835 = !DILocation(line: 5039, column: 21, scope: !12834)
!12836 = !DILocation(line: 5039, column: 25, scope: !12834)
!12837 = !DILocation(line: 5039, column: 31, scope: !12834)
!12838 = !DILocation(line: 5039, column: 19, scope: !12834)
!12839 = !DILocation(line: 5040, column: 5, scope: !12834)
!12840 = !DILocation(line: 5040, column: 15, scope: !12834)
!12841 = !DILocation(line: 5040, column: 9, scope: !12834)
!12842 = !DILocation(line: 5040, column: 25, scope: !12834)
!12843 = !DILocation(line: 5040, column: 29, scope: !12834)
!12844 = !DILocation(line: 5040, column: 35, scope: !12834)
!12845 = !DILocation(line: 5040, column: 23, scope: !12834)
!12846 = !DILocation(line: 5039, column: 8, scope: !12815)
!12847 = !DILocation(line: 5043, column: 12, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12834, file: !3, line: 5040, column: 41)
!12849 = !DILocation(line: 5043, column: 19, scope: !12848)
!12850 = !DILocation(line: 5043, column: 24, scope: !12848)
!12851 = !DILocation(line: 5041, column: 5, scope: !12848)
!12852 = !DILocation(line: 5044, column: 11, scope: !12848)
!12853 = !DILocation(line: 5044, column: 5, scope: !12848)
!12854 = !DILocation(line: 5045, column: 5, scope: !12848)
!12855 = !DILocation(line: 5047, column: 17, scope: !12815)
!12856 = !DILocation(line: 5047, column: 21, scope: !12815)
!12857 = !DILocation(line: 5047, column: 27, scope: !12815)
!12858 = !DILocation(line: 5047, column: 14, scope: !12815)
!12859 = !DILocation(line: 5050, column: 5, scope: !12815)
!12860 = !DILocation(line: 5050, column: 12, scope: !12815)
!12861 = !DILocation(line: 5050, column: 17, scope: !12815)
!12862 = !DILocation(line: 5050, column: 21, scope: !12815)
!12863 = !DILocation(line: 5050, column: 25, scope: !12815)
!12864 = !DILocation(line: 5050, column: 31, scope: !12815)
!12865 = !DILocation(line: 5048, column: 4, scope: !12815)
!12866 = !DILocation(line: 5051, column: 6, scope: !12815)
!12867 = !DILocation(line: 5052, column: 3, scope: !12815)
!12868 = !DILocation(line: 5034, column: 28, scope: !12810)
!12869 = !DILocation(line: 5034, column: 3, scope: !12810)
!12870 = distinct !{!12870, !12812, !12871}
!12871 = !DILocation(line: 5052, column: 3, scope: !12807)
!12872 = !DILocation(line: 5053, column: 15, scope: !12804)
!12873 = !DILocation(line: 5053, column: 3, scope: !12804)
!12874 = !DILocation(line: 5053, column: 7, scope: !12804)
!12875 = !DILocation(line: 5053, column: 13, scope: !12804)
!12876 = !DILocation(line: 5054, column: 2, scope: !12804)
!12877 = !DILocation(line: 5055, column: 6, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5055, column: 6)
!12879 = !DILocation(line: 5055, column: 10, scope: !12878)
!12880 = !DILocation(line: 5055, column: 16, scope: !12878)
!12881 = !DILocation(line: 5055, column: 31, scope: !12878)
!12882 = !DILocation(line: 5055, column: 41, scope: !12878)
!12883 = !DILocation(line: 5055, column: 35, scope: !12878)
!12884 = !DILocation(line: 5055, column: 6, scope: !12659)
!12885 = !DILocation(line: 5057, column: 3, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12878, file: !3, line: 5055, column: 50)
!12887 = !DILocation(line: 5057, column: 7, scope: !12886)
!12888 = !DILocation(line: 5057, column: 15, scope: !12886)
!12889 = !DILocation(line: 5058, column: 3, scope: !12886)
!12890 = !DILocation(line: 5058, column: 7, scope: !12886)
!12891 = !DILocation(line: 5058, column: 16, scope: !12886)
!12892 = !DILocation(line: 5059, column: 3, scope: !12886)
!12893 = !DILocation(line: 5059, column: 7, scope: !12886)
!12894 = !DILocation(line: 5059, column: 13, scope: !12886)
!12895 = !DILocation(line: 5060, column: 2, scope: !12886)
!12896 = !DILocation(line: 5063, column: 2, scope: !12659)
!12897 = !DILocation(line: 5063, column: 6, scope: !12659)
!12898 = !DILocation(line: 5063, column: 16, scope: !12659)
!12899 = !DILocation(line: 5064, column: 11, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5064, column: 6)
!12901 = !DILocation(line: 5064, column: 6, scope: !12900)
!12902 = !DILocation(line: 5064, column: 20, scope: !12900)
!12903 = !DILocation(line: 5064, column: 6, scope: !12659)
!12904 = !DILocation(line: 5065, column: 36, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 5064, column: 29)
!12906 = !DILocation(line: 5065, column: 40, scope: !12905)
!12907 = !DILocation(line: 5065, column: 3, scope: !12905)
!12908 = !DILocation(line: 5066, column: 3, scope: !12905)
!12909 = !DILocation(line: 5066, column: 7, scope: !12905)
!12910 = !DILocation(line: 5066, column: 15, scope: !12905)
!12911 = !DILocation(line: 5067, column: 2, scope: !12905)
!12912 = !DILocation(line: 5068, column: 3, scope: !12900)
!12913 = !DILocation(line: 5068, column: 7, scope: !12900)
!12914 = !DILocation(line: 5068, column: 15, scope: !12900)
!12915 = !DILocation(line: 5069, column: 7, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5069, column: 6)
!12917 = !DILocation(line: 5069, column: 12, scope: !12916)
!12918 = !DILocation(line: 5069, column: 6, scope: !12916)
!12919 = !DILocation(line: 5069, column: 18, scope: !12916)
!12920 = !DILocation(line: 5069, column: 6, scope: !12659)
!12921 = !DILocation(line: 5070, column: 3, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12916, file: !3, line: 5069, column: 46)
!12923 = !DILocation(line: 5072, column: 9, scope: !12922)
!12924 = !DILocation(line: 5072, column: 3, scope: !12922)
!12925 = !DILocation(line: 5073, column: 3, scope: !12922)
!12926 = !DILocation(line: 5075, column: 9, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5075, column: 2)
!12928 = !DILocation(line: 5075, column: 7, scope: !12927)
!12929 = !DILocation(line: 5075, column: 14, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12927, file: !3, line: 5075, column: 2)
!12931 = !DILocation(line: 5075, column: 19, scope: !12930)
!12932 = !DILocation(line: 5075, column: 24, scope: !12930)
!12933 = !DILocation(line: 5075, column: 16, scope: !12930)
!12934 = !DILocation(line: 5075, column: 2, scope: !12927)
!12935 = !DILocation(line: 5076, column: 25, scope: !12930)
!12936 = !DILocation(line: 5076, column: 29, scope: !12930)
!12937 = !DILocation(line: 5076, column: 3, scope: !12930)
!12938 = !DILocation(line: 5076, column: 7, scope: !12930)
!12939 = !DILocation(line: 5076, column: 20, scope: !12930)
!12940 = !DILocation(line: 5076, column: 23, scope: !12930)
!12941 = !DILocation(line: 5075, column: 32, scope: !12930)
!12942 = !DILocation(line: 5075, column: 2, scope: !12930)
!12943 = distinct !{!12943, !12934, !12944}
!12944 = !DILocation(line: 5076, column: 29, scope: !12927)
!12945 = !DILocation(line: 5078, column: 6, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5078, column: 6)
!12947 = !DILocation(line: 5078, column: 10, scope: !12946)
!12948 = !DILocation(line: 5078, column: 16, scope: !12946)
!12949 = !DILocation(line: 5078, column: 6, scope: !12659)
!12950 = !DILocation(line: 5079, column: 14, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 5079, column: 7)
!12952 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 5078, column: 34)
!12953 = !DILocation(line: 5079, column: 9, scope: !12951)
!12954 = !DILocation(line: 5079, column: 23, scope: !12951)
!12955 = !DILocation(line: 5079, column: 7, scope: !12952)
!12956 = !DILocation(line: 5080, column: 37, scope: !12951)
!12957 = !DILocation(line: 5080, column: 41, scope: !12951)
!12958 = !DILocation(line: 5080, column: 4, scope: !12951)
!12959 = !DILocation(line: 5081, column: 36, scope: !12952)
!12960 = !DILocation(line: 5081, column: 40, scope: !12952)
!12961 = !DILocation(line: 5081, column: 3, scope: !12952)
!12962 = !DILocation(line: 5082, column: 2, scope: !12952)
!12963 = !DILocation(line: 5084, column: 11, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5084, column: 6)
!12965 = !DILocation(line: 5084, column: 6, scope: !12964)
!12966 = !DILocation(line: 5084, column: 20, scope: !12964)
!12967 = !DILocation(line: 5084, column: 6, scope: !12659)
!12968 = !DILocation(line: 5085, column: 41, scope: !12964)
!12969 = !DILocation(line: 5085, column: 45, scope: !12964)
!12970 = !DILocation(line: 5085, column: 3, scope: !12964)
!12971 = !DILocation(line: 5086, column: 11, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5086, column: 6)
!12973 = !DILocation(line: 5086, column: 6, scope: !12972)
!12974 = !DILocation(line: 5086, column: 20, scope: !12972)
!12975 = !DILocation(line: 5086, column: 6, scope: !12659)
!12976 = !DILocation(line: 5087, column: 42, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12972, file: !3, line: 5086, column: 30)
!12978 = !DILocation(line: 5087, column: 46, scope: !12977)
!12979 = !DILocation(line: 5087, column: 3, scope: !12977)
!12980 = !DILocation(line: 5088, column: 43, scope: !12977)
!12981 = !DILocation(line: 5088, column: 47, scope: !12977)
!12982 = !DILocation(line: 5088, column: 3, scope: !12977)
!12983 = !DILocation(line: 5089, column: 2, scope: !12977)
!12984 = !DILocation(line: 5090, column: 11, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5090, column: 6)
!12986 = !DILocation(line: 5090, column: 6, scope: !12985)
!12987 = !DILocation(line: 5090, column: 20, scope: !12985)
!12988 = !DILocation(line: 5090, column: 6, scope: !12659)
!12989 = !DILocation(line: 5091, column: 41, scope: !12985)
!12990 = !DILocation(line: 5091, column: 45, scope: !12985)
!12991 = !DILocation(line: 5091, column: 3, scope: !12985)
!12992 = !DILocation(line: 5092, column: 11, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5092, column: 6)
!12994 = !DILocation(line: 5092, column: 6, scope: !12993)
!12995 = !DILocation(line: 5092, column: 20, scope: !12993)
!12996 = !DILocation(line: 5092, column: 6, scope: !12659)
!12997 = !DILocation(line: 5093, column: 41, scope: !12993)
!12998 = !DILocation(line: 5093, column: 45, scope: !12993)
!12999 = !DILocation(line: 5093, column: 3, scope: !12993)
!13000 = !DILocation(line: 5094, column: 2, scope: !12659)
!13001 = !DILocation(line: 5094, column: 6, scope: !12659)
!13002 = !DILocation(line: 5094, column: 12, scope: !12659)
!13003 = !DILocation(line: 5095, column: 11, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5095, column: 6)
!13005 = !DILocation(line: 5095, column: 6, scope: !13004)
!13006 = !DILocation(line: 5095, column: 20, scope: !13004)
!13007 = !DILocation(line: 5095, column: 6, scope: !12659)
!13008 = !DILocation(line: 5096, column: 3, scope: !13004)
!13009 = !DILocation(line: 5096, column: 7, scope: !13004)
!13010 = !DILocation(line: 5096, column: 13, scope: !13004)
!13011 = !DILocation(line: 5097, column: 11, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5097, column: 6)
!13013 = !DILocation(line: 5097, column: 6, scope: !13012)
!13014 = !DILocation(line: 5097, column: 20, scope: !13012)
!13015 = !DILocation(line: 5097, column: 6, scope: !12659)
!13016 = !DILocation(line: 5098, column: 3, scope: !13012)
!13017 = !DILocation(line: 5098, column: 7, scope: !13012)
!13018 = !DILocation(line: 5098, column: 13, scope: !13012)
!13019 = !DILocation(line: 5099, column: 11, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5099, column: 6)
!13021 = !DILocation(line: 5099, column: 6, scope: !13020)
!13022 = !DILocation(line: 5099, column: 20, scope: !13020)
!13023 = !DILocation(line: 5099, column: 6, scope: !12659)
!13024 = !DILocation(line: 5100, column: 40, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 5099, column: 31)
!13026 = !DILocation(line: 5100, column: 44, scope: !13025)
!13027 = !DILocation(line: 5100, column: 3, scope: !13025)
!13028 = !DILocation(line: 5101, column: 3, scope: !13025)
!13029 = !DILocation(line: 5101, column: 7, scope: !13025)
!13030 = !DILocation(line: 5101, column: 15, scope: !13025)
!13031 = !DILocation(line: 5102, column: 3, scope: !13025)
!13032 = !DILocation(line: 5102, column: 7, scope: !13025)
!13033 = !DILocation(line: 5102, column: 14, scope: !13025)
!13034 = !DILocation(line: 5103, column: 3, scope: !13025)
!13035 = !DILocation(line: 5104, column: 2, scope: !13025)
!13036 = !DILocation(line: 5106, column: 6, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5106, column: 6)
!13038 = !DILocation(line: 5106, column: 11, scope: !13037)
!13039 = !DILocation(line: 5106, column: 14, scope: !13037)
!13040 = !DILocation(line: 5106, column: 6, scope: !12659)
!13041 = !DILocation(line: 5108, column: 23, scope: !13037)
!13042 = !DILocation(line: 5108, column: 27, scope: !13037)
!13043 = !DILocation(line: 5108, column: 33, scope: !13037)
!13044 = !DILocation(line: 5108, column: 13, scope: !13037)
!13045 = !DILocation(line: 5108, column: 11, scope: !13037)
!13046 = !DILocation(line: 5108, column: 3, scope: !13037)
!13047 = !DILocation(line: 5114, column: 3, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13037, file: !3, line: 5113, column: 2)
!13049 = !DILocation(line: 5115, column: 11, scope: !13048)
!13050 = !DILocation(line: 5118, column: 6, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5118, column: 6)
!13052 = !DILocation(line: 5118, column: 6, scope: !12659)
!13053 = !DILocation(line: 5119, column: 7, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 5119, column: 7)
!13055 = distinct !DILexicalBlock(scope: !13051, file: !3, line: 5118, column: 15)
!13056 = !DILocation(line: 5119, column: 13, scope: !13054)
!13057 = !DILocation(line: 5119, column: 10, scope: !13054)
!13058 = !DILocation(line: 5119, column: 7, scope: !13055)
!13059 = !DILocation(line: 5120, column: 15, scope: !13054)
!13060 = !DILocation(line: 5120, column: 4, scope: !13054)
!13061 = !DILocation(line: 5121, column: 9, scope: !13055)
!13062 = !DILocation(line: 5121, column: 3, scope: !13055)
!13063 = !DILocation(line: 5122, column: 10, scope: !13055)
!13064 = !DILocation(line: 5122, column: 3, scope: !13055)
!13065 = !DILocation(line: 5125, column: 25, scope: !12659)
!13066 = !DILocation(line: 5125, column: 29, scope: !12659)
!13067 = !DILocation(line: 5125, column: 2, scope: !12659)
!13068 = !DILocation(line: 5125, column: 6, scope: !12659)
!13069 = !DILocation(line: 5125, column: 23, scope: !12659)
!13070 = !DILocation(line: 5126, column: 24, scope: !12659)
!13071 = !DILocation(line: 5126, column: 28, scope: !12659)
!13072 = !DILocation(line: 5126, column: 2, scope: !12659)
!13073 = !DILocation(line: 5126, column: 6, scope: !12659)
!13074 = !DILocation(line: 5126, column: 22, scope: !12659)
!13075 = !DILocation(line: 5127, column: 24, scope: !12659)
!13076 = !DILocation(line: 5127, column: 28, scope: !12659)
!13077 = !DILocation(line: 5127, column: 2, scope: !12659)
!13078 = !DILocation(line: 5127, column: 6, scope: !12659)
!13079 = !DILocation(line: 5127, column: 22, scope: !12659)
!13080 = !DILocation(line: 5128, column: 25, scope: !12659)
!13081 = !DILocation(line: 5128, column: 29, scope: !12659)
!13082 = !DILocation(line: 5128, column: 2, scope: !12659)
!13083 = !DILocation(line: 5128, column: 6, scope: !12659)
!13084 = !DILocation(line: 5128, column: 23, scope: !12659)
!13085 = !DILocation(line: 5136, column: 10, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5136, column: 2)
!13087 = !DILocation(line: 5136, column: 7, scope: !13086)
!13088 = !DILocation(line: 5136, column: 15, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13086, file: !3, line: 5136, column: 2)
!13090 = !DILocation(line: 5136, column: 20, scope: !13089)
!13091 = !DILocation(line: 5136, column: 24, scope: !13089)
!13092 = !DILocation(line: 5136, column: 18, scope: !13089)
!13093 = !DILocation(line: 5136, column: 2, scope: !13086)
!13094 = !DILocation(line: 5137, column: 7, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 5137, column: 7)
!13096 = distinct !DILexicalBlock(scope: !13089, file: !3, line: 5136, column: 37)
!13097 = !DILocation(line: 5137, column: 16, scope: !13095)
!13098 = !DILocation(line: 5137, column: 7, scope: !13096)
!13099 = !DILocation(line: 5138, column: 4, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13095, file: !3, line: 5137, column: 30)
!13101 = !DILocation(line: 5140, column: 12, scope: !13100)
!13102 = !DILocation(line: 5141, column: 4, scope: !13100)
!13103 = !DILocation(line: 5143, column: 7, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 5143, column: 7)
!13105 = !DILocation(line: 5143, column: 11, scope: !13104)
!13106 = !DILocation(line: 5143, column: 17, scope: !13104)
!13107 = !DILocation(line: 5143, column: 7, scope: !13096)
!13108 = !DILocation(line: 5144, column: 27, scope: !13104)
!13109 = !DILocation(line: 5144, column: 31, scope: !13104)
!13110 = !DILocation(line: 5144, column: 34, scope: !13104)
!13111 = !DILocation(line: 5144, column: 14, scope: !13104)
!13112 = !DILocation(line: 5144, column: 12, scope: !13104)
!13113 = !DILocation(line: 5144, column: 4, scope: !13104)
!13114 = !DILocation(line: 5146, column: 30, scope: !13104)
!13115 = !DILocation(line: 5146, column: 34, scope: !13104)
!13116 = !DILocation(line: 5146, column: 14, scope: !13104)
!13117 = !DILocation(line: 5146, column: 12, scope: !13104)
!13118 = !DILocation(line: 5147, column: 7, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 5147, column: 7)
!13120 = !DILocation(line: 5147, column: 13, scope: !13119)
!13121 = !DILocation(line: 5147, column: 7, scope: !13096)
!13122 = !DILocation(line: 5151, column: 18, scope: !13119)
!13123 = !DILocation(line: 5151, column: 26, scope: !13119)
!13124 = !DILocation(line: 5151, column: 31, scope: !13119)
!13125 = !DILocation(line: 5151, column: 34, scope: !13119)
!13126 = !DILocation(line: 5151, column: 39, scope: !13119)
!13127 = !DILocation(line: 5148, column: 4, scope: !13119)
!13128 = !DILocation(line: 5153, column: 7, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 5153, column: 7)
!13130 = !DILocation(line: 5153, column: 7, scope: !13096)
!13131 = !DILocation(line: 5154, column: 4, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 5153, column: 16)
!13133 = !DILocation(line: 5154, column: 11, scope: !13132)
!13134 = !DILocation(line: 5155, column: 7, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13132, file: !3, line: 5154, column: 15)
!13136 = !DILocation(line: 5156, column: 9, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13135, file: !3, line: 5156, column: 9)
!13138 = !DILocation(line: 5156, column: 13, scope: !13137)
!13139 = !DILocation(line: 5156, column: 19, scope: !13137)
!13140 = !DILocation(line: 5156, column: 9, scope: !13135)
!13141 = !DILocation(line: 5157, column: 19, scope: !13137)
!13142 = !DILocation(line: 5158, column: 7, scope: !13137)
!13143 = !DILocation(line: 5158, column: 11, scope: !13137)
!13144 = !DILocation(line: 5158, column: 16, scope: !13137)
!13145 = !DILocation(line: 5158, column: 20, scope: !13137)
!13146 = !DILocation(line: 5158, column: 25, scope: !13137)
!13147 = !DILocation(line: 5158, column: 30, scope: !13137)
!13148 = !DILocation(line: 5157, column: 6, scope: !13137)
!13149 = !DILocation(line: 5160, column: 19, scope: !13137)
!13150 = !DILocation(line: 5161, column: 7, scope: !13137)
!13151 = !DILocation(line: 5161, column: 11, scope: !13137)
!13152 = !DILocation(line: 5161, column: 17, scope: !13137)
!13153 = !DILocation(line: 5161, column: 20, scope: !13137)
!13154 = !DILocation(line: 5161, column: 26, scope: !13137)
!13155 = !DILocation(line: 5161, column: 31, scope: !13137)
!13156 = !DILocation(line: 5160, column: 6, scope: !13137)
!13157 = distinct !{!13157, !13131, !13158}
!13158 = !DILocation(line: 5162, column: 4, scope: !13132)
!13159 = !DILocation(line: 5163, column: 4, scope: !13132)
!13160 = !DILocation(line: 5165, column: 7, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 5165, column: 7)
!13162 = !DILocation(line: 5165, column: 11, scope: !13161)
!13163 = !DILocation(line: 5165, column: 17, scope: !13161)
!13164 = !DILocation(line: 5165, column: 7, scope: !13096)
!13165 = !DILocation(line: 5166, column: 12, scope: !13161)
!13166 = !DILocation(line: 5166, column: 4, scope: !13161)
!13167 = !DILocation(line: 5167, column: 2, scope: !13096)
!13168 = !DILocation(line: 5136, column: 33, scope: !13089)
!13169 = !DILocation(line: 5136, column: 2, scope: !13089)
!13170 = distinct !{!13170, !13093, !13171}
!13171 = !DILocation(line: 5167, column: 2, scope: !13086)
!13172 = !DILocation(line: 5168, column: 6, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5168, column: 6)
!13174 = !DILocation(line: 5168, column: 10, scope: !13173)
!13175 = !DILocation(line: 5168, column: 16, scope: !13173)
!13176 = !DILocation(line: 5168, column: 6, scope: !12659)
!13177 = !DILocation(line: 5169, column: 11, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13173, file: !3, line: 5168, column: 32)
!13179 = !DILocation(line: 5170, column: 9, scope: !13178)
!13180 = !DILocation(line: 5171, column: 2, scope: !13178)
!13181 = !DILocation(line: 5174, column: 10, scope: !12659)
!13182 = !DILocation(line: 5174, column: 13, scope: !12659)
!13183 = !DILocation(line: 5174, column: 2, scope: !12659)
!13184 = !DILocation(line: 5181, column: 13, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5174, column: 23)
!13186 = !DILocation(line: 5181, column: 12, scope: !13185)
!13187 = !DILocation(line: 5181, column: 37, scope: !13185)
!13188 = !DILocation(line: 5181, column: 45, scope: !13185)
!13189 = !DILocation(line: 5182, column: 7, scope: !13185)
!13190 = !DILocation(line: 5182, column: 6, scope: !13185)
!13191 = !DILocation(line: 5182, column: 30, scope: !13185)
!13192 = !DILocation(line: 5182, column: 38, scope: !13185)
!13193 = !DILocation(line: 5181, column: 51, scope: !13185)
!13194 = !DILocation(line: 5183, column: 6, scope: !13185)
!13195 = !DILocation(line: 5183, column: 5, scope: !13185)
!13196 = !DILocation(line: 5183, column: 29, scope: !13185)
!13197 = !DILocation(line: 5182, column: 44, scope: !13185)
!13198 = !DILocation(line: 5181, column: 10, scope: !13185)
!13199 = !DILocation(line: 5181, column: 8, scope: !13185)
!13200 = !DILocation(line: 5186, column: 11, scope: !13185)
!13201 = !DILocation(line: 5186, column: 34, scope: !13185)
!13202 = !DILocation(line: 5186, column: 41, scope: !13185)
!13203 = !DILocation(line: 5186, column: 9, scope: !13185)
!13204 = !DILocation(line: 5186, column: 7, scope: !13185)
!13205 = !DILocation(line: 5188, column: 33, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13185, file: !3, line: 5188, column: 7)
!13207 = !DILocation(line: 5188, column: 37, scope: !13206)
!13208 = !DILocation(line: 5188, column: 7, scope: !13206)
!13209 = !DILocation(line: 5188, column: 7, scope: !13185)
!13210 = !DILocation(line: 5189, column: 11, scope: !13206)
!13211 = !DILocation(line: 5189, column: 10, scope: !13206)
!13212 = !DILocation(line: 5189, column: 15, scope: !13206)
!13213 = !DILocation(line: 5189, column: 8, scope: !13206)
!13214 = !DILocation(line: 5189, column: 4, scope: !13206)
!13215 = !DILocation(line: 5192, column: 10, scope: !13185)
!13216 = !DILocation(line: 5192, column: 13, scope: !13185)
!13217 = !DILocation(line: 5192, column: 26, scope: !13185)
!13218 = !DILocation(line: 5192, column: 29, scope: !13185)
!13219 = !DILocation(line: 5192, column: 40, scope: !13185)
!13220 = !DILocation(line: 5192, column: 46, scope: !13185)
!13221 = !DILocation(line: 5191, column: 3, scope: !13185)
!13222 = !DILocation(line: 5193, column: 3, scope: !13185)
!13223 = !DILocation(line: 5199, column: 3, scope: !13185)
!13224 = !DILocation(line: 5201, column: 16, scope: !13185)
!13225 = !DILocation(line: 5201, column: 20, scope: !13185)
!13226 = !DILocation(line: 5201, column: 31, scope: !13185)
!13227 = !DILocation(line: 5201, column: 3, scope: !13185)
!13228 = !DILocation(line: 5206, column: 14, scope: !13185)
!13229 = !DILocation(line: 5206, column: 18, scope: !13185)
!13230 = !DILocation(line: 5206, column: 10, scope: !13185)
!13231 = !DILocation(line: 5206, column: 8, scope: !13185)
!13232 = !DILocation(line: 5207, column: 14, scope: !13185)
!13233 = !DILocation(line: 5207, column: 18, scope: !13185)
!13234 = !DILocation(line: 5207, column: 10, scope: !13185)
!13235 = !DILocation(line: 5207, column: 8, scope: !13185)
!13236 = !DILocation(line: 5208, column: 14, scope: !13185)
!13237 = !DILocation(line: 5208, column: 18, scope: !13185)
!13238 = !DILocation(line: 5208, column: 10, scope: !13185)
!13239 = !DILocation(line: 5208, column: 8, scope: !13185)
!13240 = !DILocation(line: 5209, column: 15, scope: !13185)
!13241 = !DILocation(line: 5209, column: 19, scope: !13185)
!13242 = !DILocation(line: 5209, column: 11, scope: !13185)
!13243 = !DILocation(line: 5209, column: 10, scope: !13185)
!13244 = !DILocation(line: 5209, column: 31, scope: !13185)
!13245 = !DILocation(line: 5209, column: 8, scope: !13185)
!13246 = !DILocation(line: 5210, column: 13, scope: !13185)
!13247 = !DILocation(line: 5210, column: 17, scope: !13185)
!13248 = !DILocation(line: 5210, column: 28, scope: !13185)
!13249 = !DILocation(line: 5210, column: 3, scope: !13185)
!13250 = !DILocation(line: 5212, column: 3, scope: !13185)
!13251 = !DILocation(line: 5214, column: 10, scope: !13185)
!13252 = !DILocation(line: 5214, column: 13, scope: !13185)
!13253 = !DILocation(line: 5214, column: 26, scope: !13185)
!13254 = !DILocation(line: 5214, column: 29, scope: !13185)
!13255 = !DILocation(line: 5214, column: 40, scope: !13185)
!13256 = !DILocation(line: 5213, column: 3, scope: !13185)
!13257 = !DILocation(line: 5215, column: 3, scope: !13185)
!13258 = !DILocation(line: 5221, column: 12, scope: !13185)
!13259 = !DILocation(line: 5221, column: 11, scope: !13185)
!13260 = !DILocation(line: 5221, column: 35, scope: !13185)
!13261 = !DILocation(line: 5221, column: 43, scope: !13185)
!13262 = !DILocation(line: 5221, column: 10, scope: !13185)
!13263 = !DILocation(line: 5221, column: 8, scope: !13185)
!13264 = !DILocation(line: 5223, column: 10, scope: !13185)
!13265 = !DILocation(line: 5223, column: 13, scope: !13185)
!13266 = !DILocation(line: 5223, column: 26, scope: !13185)
!13267 = !DILocation(line: 5223, column: 29, scope: !13185)
!13268 = !DILocation(line: 5223, column: 40, scope: !13185)
!13269 = !DILocation(line: 5222, column: 3, scope: !13185)
!13270 = !DILocation(line: 5224, column: 3, scope: !13185)
!13271 = !DILocation(line: 5228, column: 2, scope: !12659)
!13272 = !DILocation(line: 5228, column: 2, scope: !12681)
!13273 = !DILocalVariable(name: "__dummy", scope: !13274, file: !3, line: 5228, type: !317)
!13274 = distinct !DILexicalBlock(scope: !12680, file: !3, line: 5228, column: 2)
!13275 = !DILocation(line: 5228, column: 2, scope: !13274)
!13276 = !DILocalVariable(name: "__dummy2", scope: !13274, file: !3, line: 5228, type: !9457)
!13277 = !DILocation(line: 5228, column: 2, scope: !12680)
!13278 = !DILocation(line: 5228, column: 2, scope: !12679)
!13279 = !DILocation(line: 5228, column: 2, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 5228, column: 2)
!13281 = !DILocalVariable(name: "__dummy", scope: !13282, file: !3, line: 5228, type: !317)
!13282 = distinct !DILexicalBlock(scope: !13283, file: !3, line: 5228, column: 2)
!13283 = distinct !DILexicalBlock(scope: !13280, file: !3, line: 5228, column: 2)
!13284 = !DILocation(line: 5228, column: 2, scope: !13282)
!13285 = !DILocalVariable(name: "__dummy2", scope: !13282, file: !3, line: 5228, type: !9457)
!13286 = !DILocation(line: 5228, column: 2, scope: !13283)
!13287 = !DILocation(line: 5228, column: 2, scope: !12678)
!13288 = !{i32 -2138005364}
!13289 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !12676)
!13290 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !12676)
!13291 = !DILocation(line: 5228, column: 2, scope: !12677)
!13292 = !DILocation(line: 5229, column: 17, scope: !12659)
!13293 = !DILocation(line: 5229, column: 21, scope: !12659)
!13294 = !DILocation(line: 5229, column: 2, scope: !12659)
!13295 = !DILocation(line: 5230, column: 35, scope: !12659)
!13296 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !12670)
!13297 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !12670)
!13298 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !12670)
!13299 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !12670)
!13300 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !12670)
!13301 = !DILocation(line: 5233, column: 6, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5233, column: 6)
!13303 = !DILocation(line: 5233, column: 15, scope: !13302)
!13304 = !DILocation(line: 5233, column: 23, scope: !13302)
!13305 = !DILocation(line: 5233, column: 12, scope: !13302)
!13306 = !DILocation(line: 5233, column: 6, scope: !12659)
!13307 = !DILocation(line: 5234, column: 62, scope: !13302)
!13308 = !DILocation(line: 5234, column: 16, scope: !13302)
!13309 = !DILocation(line: 5234, column: 3, scope: !13302)
!13310 = !DILocation(line: 5234, column: 7, scope: !13302)
!13311 = !DILocation(line: 5234, column: 14, scope: !13302)
!13312 = !DILocation(line: 5237, column: 13, scope: !12659)
!13313 = !DILocation(line: 5237, column: 16, scope: !12659)
!13314 = !DILocation(line: 5237, column: 12, scope: !12659)
!13315 = !DILocation(line: 5237, column: 25, scope: !12659)
!13316 = !DILocation(line: 5237, column: 29, scope: !12659)
!13317 = !DILocation(line: 5237, column: 38, scope: !12659)
!13318 = !DILocation(line: 5237, column: 2, scope: !12659)
!13319 = !DILocation(line: 5237, column: 6, scope: !12659)
!13320 = !DILocation(line: 5237, column: 10, scope: !12659)
!13321 = !DILocation(line: 5238, column: 22, scope: !12659)
!13322 = !DILocation(line: 5238, column: 12, scope: !12659)
!13323 = !DILocation(line: 5238, column: 10, scope: !12659)
!13324 = !DILocation(line: 5239, column: 6, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5239, column: 6)
!13326 = !DILocation(line: 5239, column: 6, scope: !12659)
!13327 = !DILocation(line: 5240, column: 45, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 5239, column: 15)
!13329 = !DILocation(line: 5240, column: 3, scope: !13328)
!13330 = !DILocation(line: 5241, column: 16, scope: !13328)
!13331 = !DILocation(line: 5241, column: 3, scope: !13328)
!13332 = !DILocation(line: 5242, column: 10, scope: !13328)
!13333 = !DILocation(line: 5242, column: 3, scope: !13328)
!13334 = !DILocation(line: 5246, column: 2, scope: !12659)
!13335 = !DILocation(line: 5246, column: 2, scope: !12668)
!13336 = !DILocalVariable(name: "__dummy", scope: !13337, file: !3, line: 5246, type: !317)
!13337 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 5246, column: 2)
!13338 = !DILocation(line: 5246, column: 2, scope: !13337)
!13339 = !DILocalVariable(name: "__dummy2", scope: !13337, file: !3, line: 5246, type: !9457)
!13340 = !DILocation(line: 5246, column: 2, scope: !12667)
!13341 = !DILocation(line: 5246, column: 2, scope: !12666)
!13342 = !DILocation(line: 5246, column: 2, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 5246, column: 2)
!13344 = !DILocalVariable(name: "__dummy", scope: !13345, file: !3, line: 5246, type: !317)
!13345 = distinct !DILexicalBlock(scope: !13346, file: !3, line: 5246, column: 2)
!13346 = distinct !DILexicalBlock(scope: !13343, file: !3, line: 5246, column: 2)
!13347 = !DILocation(line: 5246, column: 2, scope: !13345)
!13348 = !DILocalVariable(name: "__dummy2", scope: !13345, file: !3, line: 5246, type: !9457)
!13349 = !DILocation(line: 5246, column: 2, scope: !13346)
!13350 = !DILocation(line: 5246, column: 2, scope: !12665)
!13351 = !{i32 -2138004341}
!13352 = !DILocation(line: 5246, column: 2, scope: !12664)
!13353 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !12663)
!13354 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !12663)
!13355 = !DILocation(line: 5247, column: 15, scope: !12659)
!13356 = !DILocation(line: 5247, column: 2, scope: !12659)
!13357 = !DILocation(line: 5248, column: 26, scope: !12659)
!13358 = !DILocation(line: 5248, column: 30, scope: !12659)
!13359 = !DILocation(line: 5248, column: 36, scope: !12659)
!13360 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !12673)
!13361 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !12673)
!13362 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !12673)
!13363 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !12673)
!13364 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !12673)
!13365 = !DILocation(line: 5249, column: 2, scope: !12659)
!13366 = !DILabel(scope: !12659, name: "free_card", file: !3, line: 5251)
!13367 = !DILocation(line: 5251, column: 1, scope: !12659)
!13368 = !DILocation(line: 5252, column: 22, scope: !12659)
!13369 = !DILocation(line: 5252, column: 2, scope: !12659)
!13370 = !DILocation(line: 5253, column: 6, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 5253, column: 6)
!13372 = !DILocation(line: 5253, column: 12, scope: !13371)
!13373 = !DILocation(line: 5253, column: 9, scope: !13371)
!13374 = !DILocation(line: 5253, column: 6, scope: !12659)
!13375 = !DILocation(line: 5254, column: 14, scope: !13371)
!13376 = !DILocation(line: 5254, column: 3, scope: !13371)
!13377 = !DILocation(line: 5255, column: 8, scope: !12659)
!13378 = !DILocation(line: 5255, column: 2, scope: !12659)
!13379 = !DILocation(line: 5256, column: 9, scope: !12659)
!13380 = !DILocation(line: 5256, column: 2, scope: !12659)
!13381 = !DILocation(line: 5257, column: 1, scope: !12659)
!13382 = distinct !DISubprogram(name: "kzalloc", scope: !9084, file: !9084, line: 662, type: !13383, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13383 = !DISubroutineType(types: !13384)
!13384 = !{!570, !594, !1990}
!13385 = !DILocalVariable(name: "s", arg: 1, scope: !13386, file: !9084, line: 445, type: !2252)
!13386 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !9084, file: !9084, line: 445, type: !13387, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13387 = !DISubroutineType(types: !13388)
!13388 = !{!570, !2252, !1990, !594}
!13389 = !DILocation(line: 445, column: 72, scope: !13386, inlinedAt: !13390)
!13390 = distinct !DILocation(line: 552, column: 10, scope: !13391, inlinedAt: !13394)
!13391 = distinct !DILexicalBlock(scope: !13392, file: !9084, line: 540, column: 34)
!13392 = distinct !DILexicalBlock(scope: !13393, file: !9084, line: 540, column: 6)
!13393 = distinct !DISubprogram(name: "kmalloc", scope: !9084, file: !9084, line: 538, type: !13383, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13394 = distinct !DILocation(line: 664, column: 9, scope: !13382)
!13395 = !DILocalVariable(name: "flags", arg: 2, scope: !13386, file: !9084, line: 446, type: !1990)
!13396 = !DILocation(line: 446, column: 9, scope: !13386, inlinedAt: !13390)
!13397 = !DILocalVariable(name: "size", arg: 3, scope: !13386, file: !9084, line: 446, type: !594)
!13398 = !DILocation(line: 446, column: 23, scope: !13386, inlinedAt: !13390)
!13399 = !DILocalVariable(name: "ret", scope: !13386, file: !9084, line: 448, type: !570)
!13400 = !DILocation(line: 448, column: 8, scope: !13386, inlinedAt: !13390)
!13401 = !DILocalVariable(name: "flags", arg: 1, scope: !13402, file: !9084, line: 318, type: !1990)
!13402 = distinct !DISubprogram(name: "kmalloc_type", scope: !9084, file: !9084, line: 318, type: !13403, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13403 = !DISubroutineType(types: !13404)
!13404 = !{!9083, !1990}
!13405 = !DILocation(line: 318, column: 67, scope: !13402, inlinedAt: !13406)
!13406 = distinct !DILocation(line: 553, column: 20, scope: !13391, inlinedAt: !13394)
!13407 = !DILocalVariable(name: "size", arg: 1, scope: !13408, file: !9084, line: 346, type: !594)
!13408 = distinct !DISubprogram(name: "kmalloc_index", scope: !9084, file: !9084, line: 346, type: !13409, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13409 = !DISubroutineType(types: !13410)
!13410 = !{!7, !594}
!13411 = !DILocation(line: 346, column: 58, scope: !13408, inlinedAt: !13412)
!13412 = distinct !DILocation(line: 547, column: 11, scope: !13391, inlinedAt: !13394)
!13413 = !DILocalVariable(name: "size", arg: 1, scope: !13414, file: !9084, line: 472, type: !594)
!13414 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !9084, file: !9084, line: 472, type: !13415, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13415 = !DISubroutineType(types: !13416)
!13416 = !{!570, !594, !1990, !7}
!13417 = !DILocation(line: 472, column: 28, scope: !13414, inlinedAt: !13418)
!13418 = distinct !DILocation(line: 481, column: 9, scope: !13419, inlinedAt: !13420)
!13419 = distinct !DISubprogram(name: "kmalloc_large", scope: !9084, file: !9084, line: 478, type: !13383, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13420 = distinct !DILocation(line: 545, column: 11, scope: !13421, inlinedAt: !13394)
!13421 = distinct !DILexicalBlock(scope: !13391, file: !9084, line: 544, column: 7)
!13422 = !DILocalVariable(name: "flags", arg: 2, scope: !13414, file: !9084, line: 472, type: !1990)
!13423 = !DILocation(line: 472, column: 40, scope: !13414, inlinedAt: !13418)
!13424 = !DILocalVariable(name: "order", arg: 3, scope: !13414, file: !9084, line: 472, type: !7)
!13425 = !DILocation(line: 472, column: 60, scope: !13414, inlinedAt: !13418)
!13426 = !DILocalVariable(name: "size", arg: 1, scope: !13419, file: !9084, line: 478, type: !594)
!13427 = !DILocation(line: 478, column: 51, scope: !13419, inlinedAt: !13420)
!13428 = !DILocalVariable(name: "flags", arg: 2, scope: !13419, file: !9084, line: 478, type: !1990)
!13429 = !DILocation(line: 478, column: 63, scope: !13419, inlinedAt: !13420)
!13430 = !DILocalVariable(name: "order", scope: !13419, file: !9084, line: 480, type: !7)
!13431 = !DILocation(line: 480, column: 15, scope: !13419, inlinedAt: !13420)
!13432 = !DILocalVariable(name: "size", arg: 1, scope: !13393, file: !9084, line: 538, type: !594)
!13433 = !DILocation(line: 538, column: 45, scope: !13393, inlinedAt: !13394)
!13434 = !DILocalVariable(name: "flags", arg: 2, scope: !13393, file: !9084, line: 538, type: !1990)
!13435 = !DILocation(line: 538, column: 57, scope: !13393, inlinedAt: !13394)
!13436 = !DILocalVariable(name: "index", scope: !13391, file: !9084, line: 542, type: !7)
!13437 = !DILocation(line: 542, column: 16, scope: !13391, inlinedAt: !13394)
!13438 = !DILocalVariable(name: "size", arg: 1, scope: !13382, file: !9084, line: 662, type: !594)
!13439 = !DILocation(line: 662, column: 36, scope: !13382)
!13440 = !DILocalVariable(name: "flags", arg: 2, scope: !13382, file: !9084, line: 662, type: !1990)
!13441 = !DILocation(line: 662, column: 48, scope: !13382)
!13442 = !DILocation(line: 664, column: 17, scope: !13382)
!13443 = !DILocation(line: 664, column: 23, scope: !13382)
!13444 = !DILocation(line: 664, column: 29, scope: !13382)
!13445 = !DILocation(line: 540, column: 27, scope: !13392, inlinedAt: !13394)
!13446 = !DILocation(line: 540, column: 6, scope: !13392, inlinedAt: !13394)
!13447 = !DILocation(line: 540, column: 6, scope: !13393, inlinedAt: !13394)
!13448 = !DILocation(line: 544, column: 7, scope: !13421, inlinedAt: !13394)
!13449 = !DILocation(line: 544, column: 12, scope: !13421, inlinedAt: !13394)
!13450 = !DILocation(line: 544, column: 7, scope: !13391, inlinedAt: !13394)
!13451 = !DILocation(line: 545, column: 25, scope: !13421, inlinedAt: !13394)
!13452 = !DILocation(line: 545, column: 31, scope: !13421, inlinedAt: !13394)
!13453 = !DILocation(line: 480, column: 33, scope: !13419, inlinedAt: !13420)
!13454 = !DILocation(line: 480, column: 23, scope: !13419, inlinedAt: !13420)
!13455 = !DILocation(line: 481, column: 29, scope: !13419, inlinedAt: !13420)
!13456 = !DILocation(line: 481, column: 35, scope: !13419, inlinedAt: !13420)
!13457 = !DILocation(line: 481, column: 42, scope: !13419, inlinedAt: !13420)
!13458 = !DILocation(line: 474, column: 23, scope: !13414, inlinedAt: !13418)
!13459 = !DILocation(line: 474, column: 29, scope: !13414, inlinedAt: !13418)
!13460 = !DILocation(line: 474, column: 36, scope: !13414, inlinedAt: !13418)
!13461 = !DILocation(line: 474, column: 9, scope: !13414, inlinedAt: !13418)
!13462 = !DILocation(line: 545, column: 4, scope: !13421, inlinedAt: !13394)
!13463 = !DILocation(line: 547, column: 25, scope: !13391, inlinedAt: !13394)
!13464 = !DILocation(line: 348, column: 7, scope: !13465, inlinedAt: !13412)
!13465 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 348, column: 6)
!13466 = !DILocation(line: 348, column: 6, scope: !13408, inlinedAt: !13412)
!13467 = !DILocation(line: 349, column: 3, scope: !13465, inlinedAt: !13412)
!13468 = !DILocation(line: 351, column: 6, scope: !13469, inlinedAt: !13412)
!13469 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 351, column: 6)
!13470 = !DILocation(line: 351, column: 11, scope: !13469, inlinedAt: !13412)
!13471 = !DILocation(line: 351, column: 6, scope: !13408, inlinedAt: !13412)
!13472 = !DILocation(line: 352, column: 3, scope: !13469, inlinedAt: !13412)
!13473 = !DILocation(line: 354, column: 32, scope: !13474, inlinedAt: !13412)
!13474 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 354, column: 6)
!13475 = !DILocation(line: 354, column: 37, scope: !13474, inlinedAt: !13412)
!13476 = !DILocation(line: 354, column: 42, scope: !13474, inlinedAt: !13412)
!13477 = !DILocation(line: 354, column: 45, scope: !13474, inlinedAt: !13412)
!13478 = !DILocation(line: 354, column: 50, scope: !13474, inlinedAt: !13412)
!13479 = !DILocation(line: 354, column: 6, scope: !13408, inlinedAt: !13412)
!13480 = !DILocation(line: 355, column: 3, scope: !13474, inlinedAt: !13412)
!13481 = !DILocation(line: 356, column: 32, scope: !13482, inlinedAt: !13412)
!13482 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 356, column: 6)
!13483 = !DILocation(line: 356, column: 37, scope: !13482, inlinedAt: !13412)
!13484 = !DILocation(line: 356, column: 43, scope: !13482, inlinedAt: !13412)
!13485 = !DILocation(line: 356, column: 46, scope: !13482, inlinedAt: !13412)
!13486 = !DILocation(line: 356, column: 51, scope: !13482, inlinedAt: !13412)
!13487 = !DILocation(line: 356, column: 6, scope: !13408, inlinedAt: !13412)
!13488 = !DILocation(line: 357, column: 3, scope: !13482, inlinedAt: !13412)
!13489 = !DILocation(line: 358, column: 6, scope: !13490, inlinedAt: !13412)
!13490 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 358, column: 6)
!13491 = !DILocation(line: 358, column: 11, scope: !13490, inlinedAt: !13412)
!13492 = !DILocation(line: 358, column: 6, scope: !13408, inlinedAt: !13412)
!13493 = !DILocation(line: 358, column: 26, scope: !13490, inlinedAt: !13412)
!13494 = !DILocation(line: 359, column: 6, scope: !13495, inlinedAt: !13412)
!13495 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 359, column: 6)
!13496 = !DILocation(line: 359, column: 11, scope: !13495, inlinedAt: !13412)
!13497 = !DILocation(line: 359, column: 6, scope: !13408, inlinedAt: !13412)
!13498 = !DILocation(line: 359, column: 26, scope: !13495, inlinedAt: !13412)
!13499 = !DILocation(line: 360, column: 6, scope: !13500, inlinedAt: !13412)
!13500 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 360, column: 6)
!13501 = !DILocation(line: 360, column: 11, scope: !13500, inlinedAt: !13412)
!13502 = !DILocation(line: 360, column: 6, scope: !13408, inlinedAt: !13412)
!13503 = !DILocation(line: 360, column: 26, scope: !13500, inlinedAt: !13412)
!13504 = !DILocation(line: 361, column: 6, scope: !13505, inlinedAt: !13412)
!13505 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 361, column: 6)
!13506 = !DILocation(line: 361, column: 11, scope: !13505, inlinedAt: !13412)
!13507 = !DILocation(line: 361, column: 6, scope: !13408, inlinedAt: !13412)
!13508 = !DILocation(line: 361, column: 26, scope: !13505, inlinedAt: !13412)
!13509 = !DILocation(line: 362, column: 6, scope: !13510, inlinedAt: !13412)
!13510 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 362, column: 6)
!13511 = !DILocation(line: 362, column: 11, scope: !13510, inlinedAt: !13412)
!13512 = !DILocation(line: 362, column: 6, scope: !13408, inlinedAt: !13412)
!13513 = !DILocation(line: 362, column: 26, scope: !13510, inlinedAt: !13412)
!13514 = !DILocation(line: 363, column: 6, scope: !13515, inlinedAt: !13412)
!13515 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 363, column: 6)
!13516 = !DILocation(line: 363, column: 11, scope: !13515, inlinedAt: !13412)
!13517 = !DILocation(line: 363, column: 6, scope: !13408, inlinedAt: !13412)
!13518 = !DILocation(line: 363, column: 26, scope: !13515, inlinedAt: !13412)
!13519 = !DILocation(line: 364, column: 6, scope: !13520, inlinedAt: !13412)
!13520 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 364, column: 6)
!13521 = !DILocation(line: 364, column: 11, scope: !13520, inlinedAt: !13412)
!13522 = !DILocation(line: 364, column: 6, scope: !13408, inlinedAt: !13412)
!13523 = !DILocation(line: 364, column: 26, scope: !13520, inlinedAt: !13412)
!13524 = !DILocation(line: 365, column: 6, scope: !13525, inlinedAt: !13412)
!13525 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 365, column: 6)
!13526 = !DILocation(line: 365, column: 11, scope: !13525, inlinedAt: !13412)
!13527 = !DILocation(line: 365, column: 6, scope: !13408, inlinedAt: !13412)
!13528 = !DILocation(line: 365, column: 26, scope: !13525, inlinedAt: !13412)
!13529 = !DILocation(line: 366, column: 6, scope: !13530, inlinedAt: !13412)
!13530 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 366, column: 6)
!13531 = !DILocation(line: 366, column: 11, scope: !13530, inlinedAt: !13412)
!13532 = !DILocation(line: 366, column: 6, scope: !13408, inlinedAt: !13412)
!13533 = !DILocation(line: 366, column: 26, scope: !13530, inlinedAt: !13412)
!13534 = !DILocation(line: 367, column: 6, scope: !13535, inlinedAt: !13412)
!13535 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 367, column: 6)
!13536 = !DILocation(line: 367, column: 11, scope: !13535, inlinedAt: !13412)
!13537 = !DILocation(line: 367, column: 6, scope: !13408, inlinedAt: !13412)
!13538 = !DILocation(line: 367, column: 26, scope: !13535, inlinedAt: !13412)
!13539 = !DILocation(line: 368, column: 6, scope: !13540, inlinedAt: !13412)
!13540 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 368, column: 6)
!13541 = !DILocation(line: 368, column: 11, scope: !13540, inlinedAt: !13412)
!13542 = !DILocation(line: 368, column: 6, scope: !13408, inlinedAt: !13412)
!13543 = !DILocation(line: 368, column: 26, scope: !13540, inlinedAt: !13412)
!13544 = !DILocation(line: 369, column: 6, scope: !13545, inlinedAt: !13412)
!13545 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 369, column: 6)
!13546 = !DILocation(line: 369, column: 11, scope: !13545, inlinedAt: !13412)
!13547 = !DILocation(line: 369, column: 6, scope: !13408, inlinedAt: !13412)
!13548 = !DILocation(line: 369, column: 26, scope: !13545, inlinedAt: !13412)
!13549 = !DILocation(line: 370, column: 6, scope: !13550, inlinedAt: !13412)
!13550 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 370, column: 6)
!13551 = !DILocation(line: 370, column: 11, scope: !13550, inlinedAt: !13412)
!13552 = !DILocation(line: 370, column: 6, scope: !13408, inlinedAt: !13412)
!13553 = !DILocation(line: 370, column: 26, scope: !13550, inlinedAt: !13412)
!13554 = !DILocation(line: 371, column: 6, scope: !13555, inlinedAt: !13412)
!13555 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 371, column: 6)
!13556 = !DILocation(line: 371, column: 11, scope: !13555, inlinedAt: !13412)
!13557 = !DILocation(line: 371, column: 6, scope: !13408, inlinedAt: !13412)
!13558 = !DILocation(line: 371, column: 26, scope: !13555, inlinedAt: !13412)
!13559 = !DILocation(line: 372, column: 6, scope: !13560, inlinedAt: !13412)
!13560 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 372, column: 6)
!13561 = !DILocation(line: 372, column: 11, scope: !13560, inlinedAt: !13412)
!13562 = !DILocation(line: 372, column: 6, scope: !13408, inlinedAt: !13412)
!13563 = !DILocation(line: 372, column: 26, scope: !13560, inlinedAt: !13412)
!13564 = !DILocation(line: 373, column: 6, scope: !13565, inlinedAt: !13412)
!13565 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 373, column: 6)
!13566 = !DILocation(line: 373, column: 11, scope: !13565, inlinedAt: !13412)
!13567 = !DILocation(line: 373, column: 6, scope: !13408, inlinedAt: !13412)
!13568 = !DILocation(line: 373, column: 26, scope: !13565, inlinedAt: !13412)
!13569 = !DILocation(line: 374, column: 6, scope: !13570, inlinedAt: !13412)
!13570 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 374, column: 6)
!13571 = !DILocation(line: 374, column: 11, scope: !13570, inlinedAt: !13412)
!13572 = !DILocation(line: 374, column: 6, scope: !13408, inlinedAt: !13412)
!13573 = !DILocation(line: 374, column: 26, scope: !13570, inlinedAt: !13412)
!13574 = !DILocation(line: 375, column: 6, scope: !13575, inlinedAt: !13412)
!13575 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 375, column: 6)
!13576 = !DILocation(line: 375, column: 11, scope: !13575, inlinedAt: !13412)
!13577 = !DILocation(line: 375, column: 6, scope: !13408, inlinedAt: !13412)
!13578 = !DILocation(line: 375, column: 27, scope: !13575, inlinedAt: !13412)
!13579 = !DILocation(line: 376, column: 6, scope: !13580, inlinedAt: !13412)
!13580 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 376, column: 6)
!13581 = !DILocation(line: 376, column: 11, scope: !13580, inlinedAt: !13412)
!13582 = !DILocation(line: 376, column: 6, scope: !13408, inlinedAt: !13412)
!13583 = !DILocation(line: 376, column: 32, scope: !13580, inlinedAt: !13412)
!13584 = !DILocation(line: 377, column: 6, scope: !13585, inlinedAt: !13412)
!13585 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 377, column: 6)
!13586 = !DILocation(line: 377, column: 11, scope: !13585, inlinedAt: !13412)
!13587 = !DILocation(line: 377, column: 6, scope: !13408, inlinedAt: !13412)
!13588 = !DILocation(line: 377, column: 32, scope: !13585, inlinedAt: !13412)
!13589 = !DILocation(line: 378, column: 6, scope: !13590, inlinedAt: !13412)
!13590 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 378, column: 6)
!13591 = !DILocation(line: 378, column: 11, scope: !13590, inlinedAt: !13412)
!13592 = !DILocation(line: 378, column: 6, scope: !13408, inlinedAt: !13412)
!13593 = !DILocation(line: 378, column: 32, scope: !13590, inlinedAt: !13412)
!13594 = !DILocation(line: 379, column: 6, scope: !13595, inlinedAt: !13412)
!13595 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 379, column: 6)
!13596 = !DILocation(line: 379, column: 11, scope: !13595, inlinedAt: !13412)
!13597 = !DILocation(line: 379, column: 6, scope: !13408, inlinedAt: !13412)
!13598 = !DILocation(line: 379, column: 33, scope: !13595, inlinedAt: !13412)
!13599 = !DILocation(line: 380, column: 6, scope: !13600, inlinedAt: !13412)
!13600 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 380, column: 6)
!13601 = !DILocation(line: 380, column: 11, scope: !13600, inlinedAt: !13412)
!13602 = !DILocation(line: 380, column: 6, scope: !13408, inlinedAt: !13412)
!13603 = !DILocation(line: 380, column: 33, scope: !13600, inlinedAt: !13412)
!13604 = !DILocation(line: 381, column: 6, scope: !13605, inlinedAt: !13412)
!13605 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 381, column: 6)
!13606 = !DILocation(line: 381, column: 11, scope: !13605, inlinedAt: !13412)
!13607 = !DILocation(line: 381, column: 6, scope: !13408, inlinedAt: !13412)
!13608 = !DILocation(line: 381, column: 33, scope: !13605, inlinedAt: !13412)
!13609 = !DILocation(line: 382, column: 2, scope: !13610, inlinedAt: !13412)
!13610 = distinct !DILexicalBlock(scope: !13611, file: !9084, line: 382, column: 2)
!13611 = distinct !DILexicalBlock(scope: !13408, file: !9084, line: 382, column: 2)
!13612 = !{i32 -2143981296, i32 -2143981267, i32 -2143981221, i32 -2143981163, i32 -2143981109, i32 -2143981055, i32 -2143981000, i32 -2143980969}
!13613 = !DILocation(line: 382, column: 2, scope: !13614, inlinedAt: !13412)
!13614 = distinct !DILexicalBlock(scope: !13615, file: !9084, line: 382, column: 2)
!13615 = distinct !DILexicalBlock(scope: !13611, file: !9084, line: 382, column: 2)
!13616 = !{i32 -2143980526, i32 -2143980519, i32 -2143980465, i32 -2143980434, i32 -2143980404}
!13617 = !DILocation(line: 382, column: 2, scope: !13615, inlinedAt: !13412)
!13618 = !DILocation(line: 386, column: 1, scope: !13408, inlinedAt: !13412)
!13619 = !DILocation(line: 547, column: 9, scope: !13391, inlinedAt: !13394)
!13620 = !DILocation(line: 549, column: 8, scope: !13621, inlinedAt: !13394)
!13621 = distinct !DILexicalBlock(scope: !13391, file: !9084, line: 549, column: 7)
!13622 = !DILocation(line: 549, column: 7, scope: !13391, inlinedAt: !13394)
!13623 = !DILocation(line: 550, column: 4, scope: !13621, inlinedAt: !13394)
!13624 = !DILocation(line: 553, column: 33, scope: !13391, inlinedAt: !13394)
!13625 = !DILocation(line: 325, column: 6, scope: !13626, inlinedAt: !13406)
!13626 = distinct !DILexicalBlock(scope: !13402, file: !9084, line: 325, column: 6)
!13627 = !DILocation(line: 325, column: 6, scope: !13402, inlinedAt: !13406)
!13628 = !DILocation(line: 326, column: 3, scope: !13626, inlinedAt: !13406)
!13629 = !DILocation(line: 332, column: 9, scope: !13402, inlinedAt: !13406)
!13630 = !DILocation(line: 332, column: 15, scope: !13402, inlinedAt: !13406)
!13631 = !DILocation(line: 332, column: 2, scope: !13402, inlinedAt: !13406)
!13632 = !DILocation(line: 336, column: 1, scope: !13402, inlinedAt: !13406)
!13633 = !DILocation(line: 553, column: 5, scope: !13391, inlinedAt: !13394)
!13634 = !DILocation(line: 553, column: 41, scope: !13391, inlinedAt: !13394)
!13635 = !DILocation(line: 554, column: 5, scope: !13391, inlinedAt: !13394)
!13636 = !DILocation(line: 554, column: 12, scope: !13391, inlinedAt: !13394)
!13637 = !DILocation(line: 448, column: 31, scope: !13386, inlinedAt: !13390)
!13638 = !DILocation(line: 448, column: 34, scope: !13386, inlinedAt: !13390)
!13639 = !DILocation(line: 448, column: 14, scope: !13386, inlinedAt: !13390)
!13640 = !DILocation(line: 450, column: 22, scope: !13386, inlinedAt: !13390)
!13641 = !DILocation(line: 450, column: 25, scope: !13386, inlinedAt: !13390)
!13642 = !DILocation(line: 450, column: 30, scope: !13386, inlinedAt: !13390)
!13643 = !DILocation(line: 450, column: 36, scope: !13386, inlinedAt: !13390)
!13644 = !DILocation(line: 450, column: 8, scope: !13386, inlinedAt: !13390)
!13645 = !DILocation(line: 450, column: 6, scope: !13386, inlinedAt: !13390)
!13646 = !DILocation(line: 451, column: 9, scope: !13386, inlinedAt: !13390)
!13647 = !DILocation(line: 552, column: 3, scope: !13391, inlinedAt: !13394)
!13648 = !DILocation(line: 557, column: 19, scope: !13393, inlinedAt: !13394)
!13649 = !DILocation(line: 557, column: 25, scope: !13393, inlinedAt: !13394)
!13650 = !DILocation(line: 557, column: 9, scope: !13393, inlinedAt: !13394)
!13651 = !DILocation(line: 557, column: 2, scope: !13393, inlinedAt: !13394)
!13652 = !DILocation(line: 558, column: 1, scope: !13393, inlinedAt: !13394)
!13653 = !DILocation(line: 664, column: 2, scope: !13382)
!13654 = distinct !DISubprogram(name: "test_and_set_bit", scope: !12426, file: !12426, line: 68, type: !12427, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13655 = !DILocalVariable(name: "nr", arg: 1, scope: !13656, file: !11740, line: 136, type: !513)
!13656 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !11740, file: !11740, line: 136, type: !12427, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13657 = !DILocation(line: 136, column: 28, scope: !13656, inlinedAt: !13658)
!13658 = distinct !DILocation(line: 71, column: 9, scope: !13654)
!13659 = !DILocalVariable(name: "addr", arg: 2, scope: !13656, file: !11740, line: 136, type: !12429)
!13660 = !DILocation(line: 136, column: 56, scope: !13656, inlinedAt: !13658)
!13661 = !DILocalVariable(name: "c", scope: !13662, file: !11740, line: 138, type: !540)
!13662 = distinct !DILexicalBlock(scope: !13656, file: !11740, line: 138, column: 9)
!13663 = !DILocation(line: 138, column: 9, scope: !13662, inlinedAt: !13658)
!13664 = !DILocation(line: 99, column: 79, scope: !12440, inlinedAt: !13665)
!13665 = distinct !DILocation(line: 70, column: 2, scope: !13654)
!13666 = !DILocation(line: 99, column: 89, scope: !12440, inlinedAt: !13665)
!13667 = !DILocalVariable(name: "nr", arg: 1, scope: !13654, file: !12426, line: 68, type: !513)
!13668 = !DILocation(line: 68, column: 42, scope: !13654)
!13669 = !DILocalVariable(name: "addr", arg: 2, scope: !13654, file: !12426, line: 68, type: !12429)
!13670 = !DILocation(line: 68, column: 70, scope: !13654)
!13671 = !DILocation(line: 70, column: 31, scope: !13654)
!13672 = !DILocation(line: 70, column: 38, scope: !13654)
!13673 = !DILocation(line: 70, column: 36, scope: !13654)
!13674 = !DILocation(line: 101, column: 20, scope: !12440, inlinedAt: !13665)
!13675 = !DILocation(line: 101, column: 23, scope: !12440, inlinedAt: !13665)
!13676 = !DILocation(line: 101, column: 2, scope: !12440, inlinedAt: !13665)
!13677 = !DILocation(line: 102, column: 2, scope: !12440, inlinedAt: !13665)
!13678 = !DILocation(line: 71, column: 31, scope: !13654)
!13679 = !DILocation(line: 71, column: 35, scope: !13654)
!13680 = !{i32 -2147028859, i32 -2147028763}
!13681 = !DILocation(line: 71, column: 2, scope: !13654)
!13682 = distinct !DISubprogram(name: "setup_pci", scope: !3, file: !3, line: 4341, type: !13683, scopeLine: 4343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13683 = !DISubroutineType(types: !13684)
!13684 = !{!37, !9128, !9155, !9266}
!13685 = !DILocalVariable(name: "hc", arg: 1, scope: !13682, file: !3, line: 4341, type: !9128)
!13686 = !DILocation(line: 4341, column: 29, scope: !13682)
!13687 = !DILocalVariable(name: "pdev", arg: 2, scope: !13682, file: !3, line: 4341, type: !9155)
!13688 = !DILocation(line: 4341, column: 49, scope: !13682)
!13689 = !DILocalVariable(name: "ent", arg: 3, scope: !13682, file: !3, line: 4342, type: !9266)
!13690 = !DILocation(line: 4342, column: 32, scope: !13682)
!13691 = !DILocalVariable(name: "m", scope: !13682, file: !3, line: 4344, type: !9134)
!13692 = !DILocation(line: 4344, column: 17, scope: !13682)
!13693 = !DILocation(line: 4344, column: 38, scope: !13682)
!13694 = !DILocation(line: 4344, column: 43, scope: !13682)
!13695 = !DILocation(line: 4344, column: 21, scope: !13682)
!13696 = !DILocation(line: 4348, column: 9, scope: !13682)
!13697 = !DILocation(line: 4348, column: 12, scope: !13682)
!13698 = !DILocation(line: 4348, column: 25, scope: !13682)
!13699 = !DILocation(line: 4348, column: 28, scope: !13682)
!13700 = !DILocation(line: 4348, column: 39, scope: !13682)
!13701 = !DILocation(line: 4348, column: 42, scope: !13682)
!13702 = !DILocation(line: 4346, column: 2, scope: !13682)
!13703 = !DILocation(line: 4350, column: 16, scope: !13682)
!13704 = !DILocation(line: 4350, column: 2, scope: !13682)
!13705 = !DILocation(line: 4350, column: 6, scope: !13682)
!13706 = !DILocation(line: 4350, column: 14, scope: !13682)
!13707 = !DILocation(line: 4351, column: 6, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13682, file: !3, line: 4351, column: 6)
!13709 = !DILocation(line: 4351, column: 9, scope: !13708)
!13710 = !DILocation(line: 4351, column: 6, scope: !13682)
!13711 = !DILocation(line: 4352, column: 38, scope: !13708)
!13712 = !DILocation(line: 4352, column: 42, scope: !13708)
!13713 = !DILocation(line: 4352, column: 3, scope: !13708)
!13714 = !DILocation(line: 4354, column: 6, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13682, file: !3, line: 4354, column: 6)
!13716 = !DILocation(line: 4354, column: 11, scope: !13715)
!13717 = !DILocation(line: 4354, column: 18, scope: !13715)
!13718 = !DILocation(line: 4354, column: 42, scope: !13715)
!13719 = !DILocation(line: 4355, column: 6, scope: !13715)
!13720 = !DILocation(line: 4355, column: 11, scope: !13715)
!13721 = !DILocation(line: 4355, column: 18, scope: !13715)
!13722 = !DILocation(line: 4354, column: 6, scope: !13682)
!13723 = !DILocation(line: 4356, column: 37, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13715, file: !3, line: 4355, column: 49)
!13725 = !DILocation(line: 4356, column: 41, scope: !13724)
!13726 = !DILocation(line: 4356, column: 3, scope: !13724)
!13727 = !DILocation(line: 4357, column: 42, scope: !13724)
!13728 = !DILocation(line: 4357, column: 46, scope: !13724)
!13729 = !DILocation(line: 4357, column: 3, scope: !13724)
!13730 = !DILocation(line: 4358, column: 43, scope: !13724)
!13731 = !DILocation(line: 4358, column: 47, scope: !13724)
!13732 = !DILocation(line: 4358, column: 3, scope: !13724)
!13733 = !DILocation(line: 4359, column: 3, scope: !13724)
!13734 = !DILocation(line: 4359, column: 7, scope: !13724)
!13735 = !DILocation(line: 4359, column: 13, scope: !13724)
!13736 = !DILocation(line: 4360, column: 2, scope: !13724)
!13737 = !DILocation(line: 4362, column: 6, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13682, file: !3, line: 4362, column: 6)
!13739 = !DILocation(line: 4362, column: 10, scope: !13738)
!13740 = !DILocation(line: 4362, column: 19, scope: !13738)
!13741 = !DILocation(line: 4362, column: 23, scope: !13738)
!13742 = !DILocation(line: 4362, column: 6, scope: !13682)
!13743 = !DILocation(line: 4363, column: 3, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13738, file: !3, line: 4362, column: 29)
!13745 = !DILocation(line: 4364, column: 3, scope: !13744)
!13746 = !DILocation(line: 4366, column: 24, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13682, file: !3, line: 4366, column: 6)
!13748 = !DILocation(line: 4366, column: 28, scope: !13747)
!13749 = !DILocation(line: 4366, column: 6, scope: !13747)
!13750 = !DILocation(line: 4366, column: 6, scope: !13682)
!13751 = !DILocation(line: 4367, column: 3, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13747, file: !3, line: 4366, column: 38)
!13753 = !DILocation(line: 4368, column: 3, scope: !13752)
!13754 = !DILocation(line: 4370, column: 13, scope: !13682)
!13755 = !DILocation(line: 4370, column: 16, scope: !13682)
!13756 = !DILocation(line: 4370, column: 2, scope: !13682)
!13757 = !DILocation(line: 4370, column: 6, scope: !13682)
!13758 = !DILocation(line: 4370, column: 11, scope: !13682)
!13759 = !DILocation(line: 4371, column: 2, scope: !13682)
!13760 = !DILocation(line: 4371, column: 6, scope: !13682)
!13761 = !DILocation(line: 4371, column: 15, scope: !13682)
!13762 = !DILocation(line: 4372, column: 23, scope: !13682)
!13763 = !DILocation(line: 4372, column: 26, scope: !13682)
!13764 = !DILocation(line: 4372, column: 2, scope: !13682)
!13765 = !DILocation(line: 4372, column: 6, scope: !13682)
!13766 = !DILocation(line: 4372, column: 21, scope: !13682)
!13767 = !DILocation(line: 4374, column: 2, scope: !13682)
!13768 = !DILocation(line: 4374, column: 6, scope: !13682)
!13769 = !DILocation(line: 4374, column: 17, scope: !13682)
!13770 = !DILocation(line: 4375, column: 2, scope: !13682)
!13771 = !DILocation(line: 4375, column: 6, scope: !13682)
!13772 = !DILocation(line: 4375, column: 18, scope: !13682)
!13773 = !DILocation(line: 4376, column: 2, scope: !13682)
!13774 = !DILocation(line: 4376, column: 6, scope: !13682)
!13775 = !DILocation(line: 4376, column: 18, scope: !13682)
!13776 = !DILocation(line: 4379, column: 6, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13682, file: !3, line: 4379, column: 6)
!13778 = !DILocation(line: 4379, column: 9, scope: !13777)
!13779 = !DILocation(line: 4379, column: 6, scope: !13682)
!13780 = !DILocation(line: 4380, column: 17, scope: !13777)
!13781 = !DILocation(line: 4380, column: 20, scope: !13777)
!13782 = !DILocation(line: 4380, column: 3, scope: !13777)
!13783 = !DILocation(line: 4380, column: 7, scope: !13777)
!13784 = !DILocation(line: 4380, column: 15, scope: !13777)
!13785 = !DILocation(line: 4381, column: 10, scope: !13682)
!13786 = !DILocation(line: 4381, column: 14, scope: !13682)
!13787 = !DILocation(line: 4381, column: 2, scope: !13682)
!13788 = !DILocation(line: 4383, column: 37, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13682, file: !3, line: 4381, column: 23)
!13790 = !DILocation(line: 4383, column: 41, scope: !13789)
!13791 = !DILocation(line: 4383, column: 3, scope: !13789)
!13792 = !DILocation(line: 4384, column: 3, scope: !13789)
!13793 = !DILocation(line: 4384, column: 7, scope: !13789)
!13794 = !DILocation(line: 4384, column: 13, scope: !13789)
!13795 = !DILocation(line: 4385, column: 3, scope: !13789)
!13796 = !DILocation(line: 4385, column: 7, scope: !13789)
!13797 = !DILocation(line: 4385, column: 16, scope: !13789)
!13798 = !DILocation(line: 4386, column: 3, scope: !13789)
!13799 = !DILocation(line: 4386, column: 7, scope: !13789)
!13800 = !DILocation(line: 4386, column: 15, scope: !13789)
!13801 = !DILocation(line: 4387, column: 3, scope: !13789)
!13802 = !DILocation(line: 4387, column: 7, scope: !13789)
!13803 = !DILocation(line: 4387, column: 15, scope: !13789)
!13804 = !DILocation(line: 4388, column: 3, scope: !13789)
!13805 = !DILocation(line: 4388, column: 7, scope: !13789)
!13806 = !DILocation(line: 4388, column: 16, scope: !13789)
!13807 = !DILocation(line: 4389, column: 3, scope: !13789)
!13808 = !DILocation(line: 4389, column: 7, scope: !13789)
!13809 = !DILocation(line: 4389, column: 17, scope: !13789)
!13810 = !DILocation(line: 4390, column: 3, scope: !13789)
!13811 = !DILocation(line: 4390, column: 7, scope: !13789)
!13812 = !DILocation(line: 4390, column: 18, scope: !13789)
!13813 = !DILocation(line: 4391, column: 26, scope: !13789)
!13814 = !DILocation(line: 4391, column: 30, scope: !13789)
!13815 = !DILocation(line: 4391, column: 39, scope: !13789)
!13816 = !DILocation(line: 4391, column: 51, scope: !13789)
!13817 = !DILocation(line: 4391, column: 3, scope: !13789)
!13818 = !DILocation(line: 4391, column: 7, scope: !13789)
!13819 = !DILocation(line: 4391, column: 23, scope: !13789)
!13820 = !DILocation(line: 4394, column: 8, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 4394, column: 7)
!13822 = !DILocation(line: 4394, column: 12, scope: !13821)
!13823 = !DILocation(line: 4394, column: 7, scope: !13789)
!13824 = !DILocation(line: 4395, column: 4, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13821, file: !3, line: 4394, column: 29)
!13826 = !DILocation(line: 4397, column: 23, scope: !13825)
!13827 = !DILocation(line: 4397, column: 27, scope: !13825)
!13828 = !DILocation(line: 4397, column: 4, scope: !13825)
!13829 = !DILocation(line: 4398, column: 4, scope: !13825)
!13830 = !DILocation(line: 4401, column: 29, scope: !13789)
!13831 = !DILocation(line: 4401, column: 33, scope: !13789)
!13832 = !DILocation(line: 4401, column: 21, scope: !13789)
!13833 = !DILocation(line: 4401, column: 3, scope: !13789)
!13834 = !DILocation(line: 4401, column: 7, scope: !13789)
!13835 = !DILocation(line: 4401, column: 19, scope: !13789)
!13836 = !DILocation(line: 4402, column: 8, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 4402, column: 7)
!13838 = !DILocation(line: 4402, column: 12, scope: !13837)
!13839 = !DILocation(line: 4402, column: 7, scope: !13789)
!13840 = !DILocation(line: 4403, column: 4, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13837, file: !3, line: 4402, column: 25)
!13842 = !DILocation(line: 4406, column: 23, scope: !13841)
!13843 = !DILocation(line: 4406, column: 27, scope: !13841)
!13844 = !DILocation(line: 4406, column: 4, scope: !13841)
!13845 = !DILocation(line: 4407, column: 4, scope: !13841)
!13846 = !DILocation(line: 4411, column: 18, scope: !13789)
!13847 = !DILocation(line: 4411, column: 22, scope: !13789)
!13848 = !DILocation(line: 4411, column: 10, scope: !13789)
!13849 = !DILocation(line: 4411, column: 35, scope: !13789)
!13850 = !DILocation(line: 4411, column: 39, scope: !13789)
!13851 = !DILocation(line: 4409, column: 3, scope: !13789)
!13852 = !DILocation(line: 4413, column: 26, scope: !13789)
!13853 = !DILocation(line: 4413, column: 30, scope: !13789)
!13854 = !DILocation(line: 4413, column: 39, scope: !13789)
!13855 = !DILocation(line: 4413, column: 51, scope: !13789)
!13856 = !DILocation(line: 4413, column: 3, scope: !13789)
!13857 = !DILocation(line: 4413, column: 7, scope: !13789)
!13858 = !DILocation(line: 4413, column: 23, scope: !13789)
!13859 = !DILocation(line: 4415, column: 8, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 4415, column: 7)
!13861 = !DILocation(line: 4415, column: 12, scope: !13860)
!13862 = !DILocation(line: 4415, column: 7, scope: !13789)
!13863 = !DILocation(line: 4416, column: 4, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13860, file: !3, line: 4415, column: 29)
!13865 = !DILocation(line: 4418, column: 23, scope: !13864)
!13866 = !DILocation(line: 4418, column: 27, scope: !13864)
!13867 = !DILocation(line: 4418, column: 4, scope: !13864)
!13868 = !DILocation(line: 4419, column: 4, scope: !13864)
!13869 = !DILocation(line: 4422, column: 29, scope: !13789)
!13870 = !DILocation(line: 4422, column: 33, scope: !13789)
!13871 = !DILocation(line: 4422, column: 21, scope: !13789)
!13872 = !DILocation(line: 4422, column: 3, scope: !13789)
!13873 = !DILocation(line: 4422, column: 7, scope: !13789)
!13874 = !DILocation(line: 4422, column: 19, scope: !13789)
!13875 = !DILocation(line: 4423, column: 8, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 4423, column: 7)
!13877 = !DILocation(line: 4423, column: 12, scope: !13876)
!13878 = !DILocation(line: 4423, column: 7, scope: !13789)
!13879 = !DILocation(line: 4424, column: 4, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 4423, column: 25)
!13881 = !DILocation(line: 4426, column: 23, scope: !13880)
!13882 = !DILocation(line: 4426, column: 27, scope: !13880)
!13883 = !DILocation(line: 4426, column: 4, scope: !13880)
!13884 = !DILocation(line: 4427, column: 4, scope: !13880)
!13885 = !DILocation(line: 4433, column: 10, scope: !13789)
!13886 = !DILocation(line: 4433, column: 14, scope: !13789)
!13887 = !DILocation(line: 4433, column: 26, scope: !13789)
!13888 = !DILocation(line: 4433, column: 30, scope: !13789)
!13889 = !DILocation(line: 4433, column: 18, scope: !13789)
!13890 = !DILocation(line: 4433, column: 43, scope: !13789)
!13891 = !DILocation(line: 4433, column: 47, scope: !13789)
!13892 = !DILocation(line: 4434, column: 10, scope: !13789)
!13893 = !DILocation(line: 4434, column: 14, scope: !13789)
!13894 = !DILocation(line: 4434, column: 23, scope: !13789)
!13895 = !DILocation(line: 4434, column: 32, scope: !13789)
!13896 = !DILocation(line: 4434, column: 36, scope: !13789)
!13897 = !DILocation(line: 4430, column: 3, scope: !13789)
!13898 = !DILocation(line: 4435, column: 25, scope: !13789)
!13899 = !DILocation(line: 4435, column: 29, scope: !13789)
!13900 = !DILocation(line: 4435, column: 3, scope: !13789)
!13901 = !DILocation(line: 4436, column: 3, scope: !13789)
!13902 = !DILocation(line: 4438, column: 3, scope: !13789)
!13903 = !DILocation(line: 4438, column: 7, scope: !13789)
!13904 = !DILocation(line: 4438, column: 16, scope: !13789)
!13905 = !DILocation(line: 4439, column: 3, scope: !13789)
!13906 = !DILocation(line: 4439, column: 7, scope: !13789)
!13907 = !DILocation(line: 4439, column: 15, scope: !13789)
!13908 = !DILocation(line: 4440, column: 3, scope: !13789)
!13909 = !DILocation(line: 4440, column: 7, scope: !13789)
!13910 = !DILocation(line: 4440, column: 15, scope: !13789)
!13911 = !DILocation(line: 4441, column: 3, scope: !13789)
!13912 = !DILocation(line: 4441, column: 7, scope: !13789)
!13913 = !DILocation(line: 4441, column: 16, scope: !13789)
!13914 = !DILocation(line: 4442, column: 3, scope: !13789)
!13915 = !DILocation(line: 4442, column: 7, scope: !13789)
!13916 = !DILocation(line: 4442, column: 17, scope: !13789)
!13917 = !DILocation(line: 4443, column: 3, scope: !13789)
!13918 = !DILocation(line: 4443, column: 7, scope: !13789)
!13919 = !DILocation(line: 4443, column: 18, scope: !13789)
!13920 = !DILocation(line: 4444, column: 25, scope: !13789)
!13921 = !DILocation(line: 4444, column: 29, scope: !13789)
!13922 = !DILocation(line: 4444, column: 38, scope: !13789)
!13923 = !DILocation(line: 4444, column: 50, scope: !13789)
!13924 = !DILocation(line: 4444, column: 3, scope: !13789)
!13925 = !DILocation(line: 4444, column: 7, scope: !13789)
!13926 = !DILocation(line: 4444, column: 23, scope: !13789)
!13927 = !DILocation(line: 4445, column: 8, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 4445, column: 7)
!13929 = !DILocation(line: 4445, column: 12, scope: !13928)
!13930 = !DILocation(line: 4445, column: 7, scope: !13789)
!13931 = !DILocation(line: 4446, column: 4, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13928, file: !3, line: 4445, column: 29)
!13933 = !DILocation(line: 4448, column: 23, scope: !13932)
!13934 = !DILocation(line: 4448, column: 27, scope: !13932)
!13935 = !DILocation(line: 4448, column: 4, scope: !13932)
!13936 = !DILocation(line: 4449, column: 4, scope: !13932)
!13937 = !DILocation(line: 4452, column: 29, scope: !13789)
!13938 = !DILocation(line: 4452, column: 33, scope: !13789)
!13939 = !DILocation(line: 4452, column: 21, scope: !13789)
!13940 = !DILocation(line: 4452, column: 3, scope: !13789)
!13941 = !DILocation(line: 4452, column: 7, scope: !13789)
!13942 = !DILocation(line: 4452, column: 19, scope: !13789)
!13943 = !DILocation(line: 4453, column: 8, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 4453, column: 7)
!13945 = !DILocation(line: 4453, column: 12, scope: !13944)
!13946 = !DILocation(line: 4453, column: 7, scope: !13789)
!13947 = !DILocation(line: 4454, column: 4, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13944, file: !3, line: 4453, column: 25)
!13949 = !DILocation(line: 4457, column: 23, scope: !13948)
!13950 = !DILocation(line: 4457, column: 27, scope: !13948)
!13951 = !DILocation(line: 4457, column: 4, scope: !13948)
!13952 = !DILocation(line: 4458, column: 4, scope: !13948)
!13953 = !DILocation(line: 4461, column: 37, scope: !13789)
!13954 = !DILocation(line: 4461, column: 41, scope: !13789)
!13955 = !DILocation(line: 4461, column: 53, scope: !13789)
!13956 = !DILocation(line: 4461, column: 57, scope: !13789)
!13957 = !DILocation(line: 4461, column: 45, scope: !13789)
!13958 = !DILocation(line: 4462, column: 10, scope: !13789)
!13959 = !DILocation(line: 4462, column: 14, scope: !13789)
!13960 = !DILocation(line: 4462, column: 31, scope: !13789)
!13961 = !DILocation(line: 4462, column: 35, scope: !13789)
!13962 = !DILocation(line: 4462, column: 44, scope: !13789)
!13963 = !DILocation(line: 4462, column: 53, scope: !13789)
!13964 = !DILocation(line: 4462, column: 57, scope: !13789)
!13965 = !DILocation(line: 4460, column: 3, scope: !13789)
!13966 = !DILocation(line: 4463, column: 25, scope: !13789)
!13967 = !DILocation(line: 4463, column: 29, scope: !13789)
!13968 = !DILocation(line: 4463, column: 3, scope: !13789)
!13969 = !DILocation(line: 4464, column: 3, scope: !13789)
!13970 = !DILocation(line: 4466, column: 3, scope: !13789)
!13971 = !DILocation(line: 4466, column: 7, scope: !13789)
!13972 = !DILocation(line: 4466, column: 16, scope: !13789)
!13973 = !DILocation(line: 4467, column: 3, scope: !13789)
!13974 = !DILocation(line: 4467, column: 7, scope: !13789)
!13975 = !DILocation(line: 4467, column: 15, scope: !13789)
!13976 = !DILocation(line: 4468, column: 3, scope: !13789)
!13977 = !DILocation(line: 4468, column: 7, scope: !13789)
!13978 = !DILocation(line: 4468, column: 15, scope: !13789)
!13979 = !DILocation(line: 4469, column: 3, scope: !13789)
!13980 = !DILocation(line: 4469, column: 7, scope: !13789)
!13981 = !DILocation(line: 4469, column: 16, scope: !13789)
!13982 = !DILocation(line: 4470, column: 3, scope: !13789)
!13983 = !DILocation(line: 4470, column: 7, scope: !13789)
!13984 = !DILocation(line: 4470, column: 17, scope: !13789)
!13985 = !DILocation(line: 4471, column: 3, scope: !13789)
!13986 = !DILocation(line: 4471, column: 7, scope: !13789)
!13987 = !DILocation(line: 4471, column: 18, scope: !13789)
!13988 = !DILocation(line: 4472, column: 28, scope: !13789)
!13989 = !DILocation(line: 4472, column: 32, scope: !13789)
!13990 = !DILocation(line: 4472, column: 41, scope: !13789)
!13991 = !DILocation(line: 4472, column: 53, scope: !13789)
!13992 = !DILocation(line: 4472, column: 20, scope: !13789)
!13993 = !DILocation(line: 4472, column: 3, scope: !13789)
!13994 = !DILocation(line: 4472, column: 7, scope: !13789)
!13995 = !DILocation(line: 4472, column: 18, scope: !13789)
!13996 = !DILocation(line: 4473, column: 8, scope: !13997)
!13997 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 4473, column: 7)
!13998 = !DILocation(line: 4473, column: 12, scope: !13997)
!13999 = !DILocation(line: 4473, column: 7, scope: !13789)
!14000 = !DILocation(line: 4474, column: 4, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13997, file: !3, line: 4473, column: 24)
!14002 = !DILocation(line: 4476, column: 23, scope: !14001)
!14003 = !DILocation(line: 4476, column: 27, scope: !14001)
!14004 = !DILocation(line: 4476, column: 4, scope: !14001)
!14005 = !DILocation(line: 4477, column: 4, scope: !14001)
!14006 = !DILocation(line: 4480, column: 8, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 4480, column: 7)
!14008 = !DILocation(line: 4480, column: 7, scope: !13789)
!14009 = !DILocation(line: 4483, column: 11, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14007, file: !3, line: 4480, column: 55)
!14011 = !DILocation(line: 4483, column: 15, scope: !14010)
!14012 = !DILocation(line: 4481, column: 4, scope: !14010)
!14013 = !DILocation(line: 4484, column: 23, scope: !14010)
!14014 = !DILocation(line: 4484, column: 27, scope: !14010)
!14015 = !DILocation(line: 4484, column: 4, scope: !14010)
!14016 = !DILocation(line: 4485, column: 4, scope: !14010)
!14017 = !DILocation(line: 4490, column: 10, scope: !13789)
!14018 = !DILocation(line: 4490, column: 13, scope: !13789)
!14019 = !DILocation(line: 4490, column: 26, scope: !13789)
!14020 = !DILocation(line: 4490, column: 29, scope: !13789)
!14021 = !DILocation(line: 4490, column: 48, scope: !13789)
!14022 = !DILocation(line: 4490, column: 52, scope: !13789)
!14023 = !DILocation(line: 4490, column: 40, scope: !13789)
!14024 = !DILocation(line: 4491, column: 10, scope: !13789)
!14025 = !DILocation(line: 4491, column: 14, scope: !13789)
!14026 = !DILocation(line: 4491, column: 23, scope: !13789)
!14027 = !DILocation(line: 4491, column: 32, scope: !13789)
!14028 = !DILocation(line: 4491, column: 36, scope: !13789)
!14029 = !DILocation(line: 4488, column: 3, scope: !13789)
!14030 = !DILocation(line: 4492, column: 25, scope: !13789)
!14031 = !DILocation(line: 4492, column: 29, scope: !13789)
!14032 = !DILocation(line: 4492, column: 3, scope: !13789)
!14033 = !DILocation(line: 4493, column: 3, scope: !13789)
!14034 = !DILocation(line: 4495, column: 3, scope: !13789)
!14035 = !DILocation(line: 4496, column: 22, scope: !13789)
!14036 = !DILocation(line: 4496, column: 26, scope: !13789)
!14037 = !DILocation(line: 4496, column: 3, scope: !13789)
!14038 = !DILocation(line: 4497, column: 3, scope: !13789)
!14039 = !DILocation(line: 4500, column: 18, scope: !13682)
!14040 = !DILocation(line: 4500, column: 22, scope: !13682)
!14041 = !DILocation(line: 4500, column: 31, scope: !13682)
!14042 = !DILocation(line: 4500, column: 2, scope: !13682)
!14043 = !DILocation(line: 4504, column: 2, scope: !13682)
!14044 = !DILocation(line: 4505, column: 1, scope: !13682)
!14045 = distinct !DISubprogram(name: "init_e1_port", scope: !3, file: !3, line: 4796, type: !14046, scopeLine: 4797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14046 = !DISubroutineType(types: !14047)
!14047 = !{!37, !9128, !9134, !37}
!14048 = !DILocalVariable(name: "hc", arg: 1, scope: !14045, file: !3, line: 4796, type: !9128)
!14049 = !DILocation(line: 4796, column: 32, scope: !14045)
!14050 = !DILocalVariable(name: "m", arg: 2, scope: !14045, file: !3, line: 4796, type: !9134)
!14051 = !DILocation(line: 4796, column: 51, scope: !14045)
!14052 = !DILocalVariable(name: "pt", arg: 3, scope: !14045, file: !3, line: 4796, type: !37)
!14053 = !DILocation(line: 4796, column: 58, scope: !14045)
!14054 = !DILocalVariable(name: "dch", scope: !14045, file: !3, line: 4798, type: !9538)
!14055 = !DILocation(line: 4798, column: 19, scope: !14045)
!14056 = !DILocalVariable(name: "bch", scope: !14045, file: !3, line: 4799, type: !9617)
!14057 = !DILocation(line: 4799, column: 19, scope: !14045)
!14058 = !DILocalVariable(name: "ch", scope: !14045, file: !3, line: 4800, type: !37)
!14059 = !DILocation(line: 4800, column: 7, scope: !14045)
!14060 = !DILocalVariable(name: "ret", scope: !14045, file: !3, line: 4800, type: !37)
!14061 = !DILocation(line: 4800, column: 11, scope: !14045)
!14062 = !DILocalVariable(name: "name", scope: !14045, file: !3, line: 4801, type: !14063)
!14063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 160, elements: !2498)
!14064 = !DILocation(line: 4801, column: 8, scope: !14045)
!14065 = !DILocalVariable(name: "bcount", scope: !14045, file: !3, line: 4802, type: !37)
!14066 = !DILocation(line: 4802, column: 7, scope: !14045)
!14067 = !DILocation(line: 4804, column: 8, scope: !14045)
!14068 = !DILocation(line: 4804, column: 6, scope: !14045)
!14069 = !DILocation(line: 4805, column: 7, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14045, file: !3, line: 4805, column: 6)
!14071 = !DILocation(line: 4805, column: 6, scope: !14045)
!14072 = !DILocation(line: 4806, column: 3, scope: !14070)
!14073 = !DILocation(line: 4807, column: 15, scope: !14045)
!14074 = !DILocation(line: 4807, column: 2, scope: !14045)
!14075 = !DILocation(line: 4807, column: 7, scope: !14045)
!14076 = !DILocation(line: 4807, column: 13, scope: !14045)
!14077 = !DILocation(line: 4808, column: 21, scope: !14045)
!14078 = !DILocation(line: 4808, column: 2, scope: !14045)
!14079 = !DILocation(line: 4809, column: 12, scope: !14045)
!14080 = !DILocation(line: 4809, column: 2, scope: !14045)
!14081 = !DILocation(line: 4809, column: 7, scope: !14045)
!14082 = !DILocation(line: 4809, column: 10, scope: !14045)
!14083 = !DILocation(line: 4810, column: 2, scope: !14045)
!14084 = !DILocation(line: 4810, column: 7, scope: !14045)
!14085 = !DILocation(line: 4810, column: 11, scope: !14045)
!14086 = !DILocation(line: 4810, column: 22, scope: !14045)
!14087 = !DILocation(line: 4811, column: 2, scope: !14045)
!14088 = !DILocation(line: 4811, column: 7, scope: !14045)
!14089 = !DILocation(line: 4811, column: 11, scope: !14045)
!14090 = !DILocation(line: 4811, column: 22, scope: !14045)
!14091 = !DILocation(line: 4813, column: 2, scope: !14045)
!14092 = !DILocation(line: 4813, column: 7, scope: !14045)
!14093 = !DILocation(line: 4813, column: 11, scope: !14045)
!14094 = !DILocation(line: 4813, column: 13, scope: !14045)
!14095 = !DILocation(line: 4813, column: 18, scope: !14045)
!14096 = !DILocation(line: 4814, column: 2, scope: !14045)
!14097 = !DILocation(line: 4814, column: 7, scope: !14045)
!14098 = !DILocation(line: 4814, column: 11, scope: !14045)
!14099 = !DILocation(line: 4814, column: 13, scope: !14045)
!14100 = !DILocation(line: 4814, column: 18, scope: !14045)
!14101 = !DILocation(line: 4815, column: 14, scope: !14045)
!14102 = !DILocation(line: 4815, column: 18, scope: !14045)
!14103 = !DILocation(line: 4815, column: 23, scope: !14045)
!14104 = !DILocation(line: 4815, column: 2, scope: !14045)
!14105 = !DILocation(line: 4815, column: 7, scope: !14045)
!14106 = !DILocation(line: 4815, column: 12, scope: !14045)
!14107 = !DILocation(line: 4816, column: 31, scope: !14045)
!14108 = !DILocation(line: 4816, column: 2, scope: !14045)
!14109 = !DILocation(line: 4816, column: 6, scope: !14045)
!14110 = !DILocation(line: 4816, column: 11, scope: !14045)
!14111 = !DILocation(line: 4816, column: 15, scope: !14045)
!14112 = !DILocation(line: 4816, column: 20, scope: !14045)
!14113 = !DILocation(line: 4816, column: 25, scope: !14045)
!14114 = !DILocation(line: 4816, column: 29, scope: !14045)
!14115 = !DILocation(line: 4817, column: 32, scope: !14045)
!14116 = !DILocation(line: 4817, column: 2, scope: !14045)
!14117 = !DILocation(line: 4817, column: 6, scope: !14045)
!14118 = !DILocation(line: 4817, column: 11, scope: !14045)
!14119 = !DILocation(line: 4817, column: 15, scope: !14045)
!14120 = !DILocation(line: 4817, column: 20, scope: !14045)
!14121 = !DILocation(line: 4817, column: 25, scope: !14045)
!14122 = !DILocation(line: 4817, column: 30, scope: !14045)
!14123 = !DILocation(line: 4818, column: 2, scope: !14045)
!14124 = !DILocation(line: 4818, column: 6, scope: !14045)
!14125 = !DILocation(line: 4818, column: 11, scope: !14045)
!14126 = !DILocation(line: 4818, column: 15, scope: !14045)
!14127 = !DILocation(line: 4818, column: 20, scope: !14045)
!14128 = !DILocation(line: 4818, column: 25, scope: !14045)
!14129 = !DILocation(line: 4818, column: 34, scope: !14045)
!14130 = !DILocation(line: 4819, column: 10, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14045, file: !3, line: 4819, column: 2)
!14132 = !DILocation(line: 4819, column: 7, scope: !14131)
!14133 = !DILocation(line: 4819, column: 15, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14131, file: !3, line: 4819, column: 2)
!14135 = !DILocation(line: 4819, column: 18, scope: !14134)
!14136 = !DILocation(line: 4819, column: 2, scope: !14131)
!14137 = !DILocation(line: 4820, column: 15, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 4820, column: 7)
!14139 = distinct !DILexicalBlock(scope: !14134, file: !3, line: 4819, column: 31)
!14140 = !DILocation(line: 4820, column: 12, scope: !14138)
!14141 = !DILocation(line: 4820, column: 21, scope: !14138)
!14142 = !DILocation(line: 4820, column: 25, scope: !14138)
!14143 = !DILocation(line: 4820, column: 31, scope: !14138)
!14144 = !DILocation(line: 4820, column: 19, scope: !14138)
!14145 = !DILocation(line: 4820, column: 7, scope: !14139)
!14146 = !DILocation(line: 4821, column: 4, scope: !14138)
!14147 = !DILocation(line: 4822, column: 9, scope: !14139)
!14148 = !DILocation(line: 4822, column: 7, scope: !14139)
!14149 = !DILocation(line: 4823, column: 8, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 4823, column: 7)
!14151 = !DILocation(line: 4823, column: 7, scope: !14139)
!14152 = !DILocation(line: 4824, column: 4, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14150, file: !3, line: 4823, column: 13)
!14154 = !DILocation(line: 4826, column: 8, scope: !14153)
!14155 = !DILocation(line: 4827, column: 4, scope: !14153)
!14156 = !DILocation(line: 4829, column: 24, scope: !14139)
!14157 = !DILocation(line: 4829, column: 3, scope: !14139)
!14158 = !DILocation(line: 4829, column: 7, scope: !14139)
!14159 = !DILocation(line: 4829, column: 12, scope: !14139)
!14160 = !DILocation(line: 4829, column: 16, scope: !14139)
!14161 = !DILocation(line: 4829, column: 22, scope: !14139)
!14162 = !DILocation(line: 4830, column: 8, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 4830, column: 7)
!14164 = !DILocation(line: 4830, column: 12, scope: !14163)
!14165 = !DILocation(line: 4830, column: 17, scope: !14163)
!14166 = !DILocation(line: 4830, column: 21, scope: !14163)
!14167 = !DILocation(line: 4830, column: 7, scope: !14139)
!14168 = !DILocation(line: 4831, column: 4, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14163, file: !3, line: 4830, column: 28)
!14170 = !DILocation(line: 4833, column: 8, scope: !14169)
!14171 = !DILocation(line: 4834, column: 10, scope: !14169)
!14172 = !DILocation(line: 4834, column: 4, scope: !14169)
!14173 = !DILocation(line: 4835, column: 4, scope: !14169)
!14174 = !DILocation(line: 4837, column: 13, scope: !14139)
!14175 = !DILocation(line: 4837, column: 3, scope: !14139)
!14176 = !DILocation(line: 4837, column: 8, scope: !14139)
!14177 = !DILocation(line: 4837, column: 11, scope: !14139)
!14178 = !DILocation(line: 4838, column: 15, scope: !14139)
!14179 = !DILocation(line: 4838, column: 3, scope: !14139)
!14180 = !DILocation(line: 4838, column: 8, scope: !14139)
!14181 = !DILocation(line: 4838, column: 13, scope: !14139)
!14182 = !DILocation(line: 4839, column: 16, scope: !14139)
!14183 = !DILocation(line: 4839, column: 3, scope: !14139)
!14184 = !DILocation(line: 4839, column: 8, scope: !14139)
!14185 = !DILocation(line: 4839, column: 14, scope: !14139)
!14186 = !DILocation(line: 4840, column: 22, scope: !14139)
!14187 = !DILocation(line: 4840, column: 41, scope: !14139)
!14188 = !DILocation(line: 4840, column: 46, scope: !14139)
!14189 = !DILocation(line: 4840, column: 3, scope: !14139)
!14190 = !DILocation(line: 4841, column: 13, scope: !14139)
!14191 = !DILocation(line: 4841, column: 3, scope: !14139)
!14192 = !DILocation(line: 4841, column: 8, scope: !14139)
!14193 = !DILocation(line: 4841, column: 11, scope: !14139)
!14194 = !DILocation(line: 4842, column: 3, scope: !14139)
!14195 = !DILocation(line: 4842, column: 8, scope: !14139)
!14196 = !DILocation(line: 4842, column: 11, scope: !14139)
!14197 = !DILocation(line: 4842, column: 16, scope: !14139)
!14198 = !DILocation(line: 4843, column: 3, scope: !14139)
!14199 = !DILocation(line: 4843, column: 8, scope: !14139)
!14200 = !DILocation(line: 4843, column: 11, scope: !14139)
!14201 = !DILocation(line: 4843, column: 16, scope: !14139)
!14202 = !DILocation(line: 4844, column: 16, scope: !14139)
!14203 = !DILocation(line: 4844, column: 3, scope: !14139)
!14204 = !DILocation(line: 4844, column: 8, scope: !14139)
!14205 = !DILocation(line: 4844, column: 11, scope: !14139)
!14206 = !DILocation(line: 4844, column: 14, scope: !14139)
!14207 = !DILocation(line: 4845, column: 13, scope: !14139)
!14208 = !DILocation(line: 4845, column: 18, scope: !14139)
!14209 = !DILocation(line: 4845, column: 21, scope: !14139)
!14210 = !DILocation(line: 4845, column: 28, scope: !14139)
!14211 = !DILocation(line: 4845, column: 33, scope: !14139)
!14212 = !DILocation(line: 4845, column: 37, scope: !14139)
!14213 = !DILocation(line: 4845, column: 3, scope: !14139)
!14214 = !DILocation(line: 4846, column: 22, scope: !14139)
!14215 = !DILocation(line: 4846, column: 3, scope: !14139)
!14216 = !DILocation(line: 4846, column: 7, scope: !14139)
!14217 = !DILocation(line: 4846, column: 12, scope: !14139)
!14218 = !DILocation(line: 4846, column: 16, scope: !14139)
!14219 = !DILocation(line: 4846, column: 20, scope: !14139)
!14220 = !DILocation(line: 4847, column: 23, scope: !14139)
!14221 = !DILocation(line: 4847, column: 3, scope: !14139)
!14222 = !DILocation(line: 4847, column: 7, scope: !14139)
!14223 = !DILocation(line: 4847, column: 12, scope: !14139)
!14224 = !DILocation(line: 4847, column: 16, scope: !14139)
!14225 = !DILocation(line: 4847, column: 21, scope: !14139)
!14226 = !DILocation(line: 4848, column: 18, scope: !14139)
!14227 = !DILocation(line: 4848, column: 23, scope: !14139)
!14228 = !DILocation(line: 4848, column: 27, scope: !14139)
!14229 = !DILocation(line: 4848, column: 32, scope: !14139)
!14230 = !DILocation(line: 4848, column: 36, scope: !14139)
!14231 = !DILocation(line: 4848, column: 3, scope: !14139)
!14232 = !DILocation(line: 4849, column: 9, scope: !14139)
!14233 = !DILocation(line: 4850, column: 2, scope: !14139)
!14234 = !DILocation(line: 4819, column: 27, scope: !14134)
!14235 = !DILocation(line: 4819, column: 2, scope: !14134)
!14236 = distinct !{!14236, !14136, !14237}
!14237 = !DILocation(line: 4850, column: 2, scope: !14131)
!14238 = !DILocation(line: 4851, column: 21, scope: !14045)
!14239 = !DILocation(line: 4851, column: 2, scope: !14045)
!14240 = !DILocation(line: 4851, column: 7, scope: !14045)
!14241 = !DILocation(line: 4851, column: 11, scope: !14045)
!14242 = !DILocation(line: 4851, column: 19, scope: !14045)
!14243 = !DILocation(line: 4852, column: 6, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14045, file: !3, line: 4852, column: 6)
!14245 = !DILocation(line: 4852, column: 9, scope: !14244)
!14246 = !DILocation(line: 4852, column: 6, scope: !14045)
!14247 = !DILocation(line: 4853, column: 19, scope: !14244)
!14248 = !DILocation(line: 4853, column: 23, scope: !14244)
!14249 = !DILocation(line: 4853, column: 3, scope: !14244)
!14250 = !DILocation(line: 4854, column: 6, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14045, file: !3, line: 4854, column: 6)
!14252 = !DILocation(line: 4854, column: 10, scope: !14251)
!14253 = !DILocation(line: 4854, column: 16, scope: !14251)
!14254 = !DILocation(line: 4854, column: 6, scope: !14045)
!14255 = !DILocation(line: 4855, column: 12, scope: !14251)
!14256 = !DILocation(line: 4856, column: 5, scope: !14251)
!14257 = !DILocation(line: 4856, column: 13, scope: !14251)
!14258 = !DILocation(line: 4856, column: 18, scope: !14251)
!14259 = !DILocation(line: 4856, column: 20, scope: !14251)
!14260 = !DILocation(line: 4855, column: 3, scope: !14251)
!14261 = !DILocation(line: 4858, column: 12, scope: !14251)
!14262 = !DILocation(line: 4858, column: 52, scope: !14251)
!14263 = !DILocation(line: 4858, column: 60, scope: !14251)
!14264 = !DILocation(line: 4858, column: 3, scope: !14251)
!14265 = !DILocation(line: 4859, column: 31, scope: !14045)
!14266 = !DILocation(line: 4859, column: 36, scope: !14045)
!14267 = !DILocation(line: 4859, column: 42, scope: !14045)
!14268 = !DILocation(line: 4859, column: 46, scope: !14045)
!14269 = !DILocation(line: 4859, column: 55, scope: !14045)
!14270 = !DILocation(line: 4859, column: 60, scope: !14045)
!14271 = !DILocation(line: 4859, column: 8, scope: !14045)
!14272 = !DILocation(line: 4859, column: 6, scope: !14045)
!14273 = !DILocation(line: 4860, column: 6, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14045, file: !3, line: 4860, column: 6)
!14275 = !DILocation(line: 4860, column: 6, scope: !14045)
!14276 = !DILocation(line: 4861, column: 3, scope: !14274)
!14277 = !DILocation(line: 4862, column: 2, scope: !14045)
!14278 = !DILocation(line: 4862, column: 6, scope: !14045)
!14279 = !DILocation(line: 4862, column: 14, scope: !14045)
!14280 = !DILocation(line: 4862, column: 18, scope: !14045)
!14281 = !DILocation(line: 4863, column: 9, scope: !14045)
!14282 = !DILocation(line: 4863, column: 2, scope: !14045)
!14283 = !DILabel(scope: !14045, name: "free_chan", file: !3, line: 4864)
!14284 = !DILocation(line: 4864, column: 1, scope: !14045)
!14285 = !DILocation(line: 4865, column: 15, scope: !14045)
!14286 = !DILocation(line: 4865, column: 19, scope: !14045)
!14287 = !DILocation(line: 4865, column: 2, scope: !14045)
!14288 = !DILocation(line: 4866, column: 9, scope: !14045)
!14289 = !DILocation(line: 4866, column: 2, scope: !14045)
!14290 = !DILocation(line: 4867, column: 1, scope: !14045)
!14291 = distinct !DISubprogram(name: "init_multi_port", scope: !3, file: !3, line: 4870, type: !14292, scopeLine: 4871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14292 = !DISubroutineType(types: !14293)
!14293 = !{!37, !9128, !37}
!14294 = !DILocalVariable(name: "hc", arg: 1, scope: !14291, file: !3, line: 4870, type: !9128)
!14295 = !DILocation(line: 4870, column: 35, scope: !14291)
!14296 = !DILocalVariable(name: "pt", arg: 2, scope: !14291, file: !3, line: 4870, type: !37)
!14297 = !DILocation(line: 4870, column: 43, scope: !14291)
!14298 = !DILocalVariable(name: "dch", scope: !14291, file: !3, line: 4872, type: !9538)
!14299 = !DILocation(line: 4872, column: 19, scope: !14291)
!14300 = !DILocalVariable(name: "bch", scope: !14291, file: !3, line: 4873, type: !9617)
!14301 = !DILocation(line: 4873, column: 19, scope: !14291)
!14302 = !DILocalVariable(name: "ch", scope: !14291, file: !3, line: 4874, type: !37)
!14303 = !DILocation(line: 4874, column: 7, scope: !14291)
!14304 = !DILocalVariable(name: "i", scope: !14291, file: !3, line: 4874, type: !37)
!14305 = !DILocation(line: 4874, column: 11, scope: !14291)
!14306 = !DILocalVariable(name: "ret", scope: !14291, file: !3, line: 4874, type: !37)
!14307 = !DILocation(line: 4874, column: 14, scope: !14291)
!14308 = !DILocalVariable(name: "name", scope: !14291, file: !3, line: 4875, type: !14063)
!14309 = !DILocation(line: 4875, column: 8, scope: !14291)
!14310 = !DILocation(line: 4877, column: 8, scope: !14291)
!14311 = !DILocation(line: 4877, column: 6, scope: !14291)
!14312 = !DILocation(line: 4878, column: 7, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14291, file: !3, line: 4878, column: 6)
!14314 = !DILocation(line: 4878, column: 6, scope: !14291)
!14315 = !DILocation(line: 4879, column: 3, scope: !14313)
!14316 = !DILocation(line: 4880, column: 15, scope: !14291)
!14317 = !DILocation(line: 4880, column: 2, scope: !14291)
!14318 = !DILocation(line: 4880, column: 7, scope: !14291)
!14319 = !DILocation(line: 4880, column: 13, scope: !14291)
!14320 = !DILocation(line: 4881, column: 21, scope: !14291)
!14321 = !DILocation(line: 4881, column: 2, scope: !14291)
!14322 = !DILocation(line: 4882, column: 12, scope: !14291)
!14323 = !DILocation(line: 4882, column: 2, scope: !14291)
!14324 = !DILocation(line: 4882, column: 7, scope: !14291)
!14325 = !DILocation(line: 4882, column: 10, scope: !14291)
!14326 = !DILocation(line: 4883, column: 2, scope: !14291)
!14327 = !DILocation(line: 4883, column: 7, scope: !14291)
!14328 = !DILocation(line: 4883, column: 11, scope: !14291)
!14329 = !DILocation(line: 4883, column: 22, scope: !14291)
!14330 = !DILocation(line: 4884, column: 2, scope: !14291)
!14331 = !DILocation(line: 4884, column: 7, scope: !14291)
!14332 = !DILocation(line: 4884, column: 11, scope: !14291)
!14333 = !DILocation(line: 4884, column: 22, scope: !14291)
!14334 = !DILocation(line: 4886, column: 2, scope: !14291)
!14335 = !DILocation(line: 4886, column: 7, scope: !14291)
!14336 = !DILocation(line: 4886, column: 11, scope: !14291)
!14337 = !DILocation(line: 4886, column: 13, scope: !14291)
!14338 = !DILocation(line: 4886, column: 18, scope: !14291)
!14339 = !DILocation(line: 4887, column: 2, scope: !14291)
!14340 = !DILocation(line: 4887, column: 7, scope: !14291)
!14341 = !DILocation(line: 4887, column: 11, scope: !14291)
!14342 = !DILocation(line: 4887, column: 13, scope: !14291)
!14343 = !DILocation(line: 4887, column: 18, scope: !14291)
!14344 = !DILocation(line: 4888, column: 2, scope: !14291)
!14345 = !DILocation(line: 4888, column: 7, scope: !14291)
!14346 = !DILocation(line: 4888, column: 11, scope: !14291)
!14347 = !DILocation(line: 4888, column: 19, scope: !14291)
!14348 = !DILocation(line: 4889, column: 6, scope: !14291)
!14349 = !DILocation(line: 4889, column: 9, scope: !14291)
!14350 = !DILocation(line: 4889, column: 4, scope: !14291)
!14351 = !DILocation(line: 4890, column: 14, scope: !14291)
!14352 = !DILocation(line: 4890, column: 16, scope: !14291)
!14353 = !DILocation(line: 4890, column: 2, scope: !14291)
!14354 = !DILocation(line: 4890, column: 7, scope: !14291)
!14355 = !DILocation(line: 4890, column: 12, scope: !14291)
!14356 = !DILocation(line: 4891, column: 24, scope: !14291)
!14357 = !DILocation(line: 4891, column: 2, scope: !14291)
!14358 = !DILocation(line: 4891, column: 6, scope: !14291)
!14359 = !DILocation(line: 4891, column: 11, scope: !14291)
!14360 = !DILocation(line: 4891, column: 13, scope: !14291)
!14361 = !DILocation(line: 4891, column: 18, scope: !14291)
!14362 = !DILocation(line: 4891, column: 22, scope: !14291)
!14363 = !DILocation(line: 4892, column: 25, scope: !14291)
!14364 = !DILocation(line: 4892, column: 2, scope: !14291)
!14365 = !DILocation(line: 4892, column: 6, scope: !14291)
!14366 = !DILocation(line: 4892, column: 11, scope: !14291)
!14367 = !DILocation(line: 4892, column: 13, scope: !14291)
!14368 = !DILocation(line: 4892, column: 18, scope: !14291)
!14369 = !DILocation(line: 4892, column: 23, scope: !14291)
!14370 = !DILocation(line: 4893, column: 2, scope: !14291)
!14371 = !DILocation(line: 4893, column: 6, scope: !14291)
!14372 = !DILocation(line: 4893, column: 11, scope: !14291)
!14373 = !DILocation(line: 4893, column: 13, scope: !14291)
!14374 = !DILocation(line: 4893, column: 18, scope: !14291)
!14375 = !DILocation(line: 4893, column: 27, scope: !14291)
!14376 = !DILocation(line: 4894, column: 10, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14291, file: !3, line: 4894, column: 2)
!14378 = !DILocation(line: 4894, column: 7, scope: !14377)
!14379 = !DILocation(line: 4894, column: 15, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 4894, column: 2)
!14381 = !DILocation(line: 4894, column: 20, scope: !14380)
!14382 = !DILocation(line: 4894, column: 25, scope: !14380)
!14383 = !DILocation(line: 4894, column: 29, scope: !14380)
!14384 = !DILocation(line: 4894, column: 18, scope: !14380)
!14385 = !DILocation(line: 4894, column: 2, scope: !14377)
!14386 = !DILocation(line: 4895, column: 9, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14380, file: !3, line: 4894, column: 44)
!14388 = !DILocation(line: 4895, column: 7, scope: !14387)
!14389 = !DILocation(line: 4896, column: 8, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14387, file: !3, line: 4896, column: 7)
!14391 = !DILocation(line: 4896, column: 7, scope: !14387)
!14392 = !DILocation(line: 4897, column: 4, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14390, file: !3, line: 4896, column: 13)
!14394 = !DILocation(line: 4899, column: 8, scope: !14393)
!14395 = !DILocation(line: 4900, column: 4, scope: !14393)
!14396 = !DILocation(line: 4902, column: 28, scope: !14387)
!14397 = !DILocation(line: 4902, column: 3, scope: !14387)
!14398 = !DILocation(line: 4902, column: 7, scope: !14387)
!14399 = !DILocation(line: 4902, column: 12, scope: !14387)
!14400 = !DILocation(line: 4902, column: 16, scope: !14387)
!14401 = !DILocation(line: 4902, column: 14, scope: !14387)
!14402 = !DILocation(line: 4902, column: 20, scope: !14387)
!14403 = !DILocation(line: 4902, column: 26, scope: !14387)
!14404 = !DILocation(line: 4903, column: 8, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14387, file: !3, line: 4903, column: 7)
!14406 = !DILocation(line: 4903, column: 12, scope: !14405)
!14407 = !DILocation(line: 4903, column: 17, scope: !14405)
!14408 = !DILocation(line: 4903, column: 21, scope: !14405)
!14409 = !DILocation(line: 4903, column: 19, scope: !14405)
!14410 = !DILocation(line: 4903, column: 25, scope: !14405)
!14411 = !DILocation(line: 4903, column: 7, scope: !14387)
!14412 = !DILocation(line: 4904, column: 4, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14405, file: !3, line: 4903, column: 32)
!14414 = !DILocation(line: 4906, column: 8, scope: !14413)
!14415 = !DILocation(line: 4907, column: 10, scope: !14413)
!14416 = !DILocation(line: 4907, column: 4, scope: !14413)
!14417 = !DILocation(line: 4908, column: 4, scope: !14413)
!14418 = !DILocation(line: 4910, column: 13, scope: !14387)
!14419 = !DILocation(line: 4910, column: 16, scope: !14387)
!14420 = !DILocation(line: 4910, column: 3, scope: !14387)
!14421 = !DILocation(line: 4910, column: 8, scope: !14387)
!14422 = !DILocation(line: 4910, column: 11, scope: !14387)
!14423 = !DILocation(line: 4911, column: 15, scope: !14387)
!14424 = !DILocation(line: 4911, column: 19, scope: !14387)
!14425 = !DILocation(line: 4911, column: 17, scope: !14387)
!14426 = !DILocation(line: 4911, column: 3, scope: !14387)
!14427 = !DILocation(line: 4911, column: 8, scope: !14387)
!14428 = !DILocation(line: 4911, column: 13, scope: !14387)
!14429 = !DILocation(line: 4912, column: 16, scope: !14387)
!14430 = !DILocation(line: 4912, column: 3, scope: !14387)
!14431 = !DILocation(line: 4912, column: 8, scope: !14387)
!14432 = !DILocation(line: 4912, column: 14, scope: !14387)
!14433 = !DILocation(line: 4913, column: 22, scope: !14387)
!14434 = !DILocation(line: 4913, column: 41, scope: !14387)
!14435 = !DILocation(line: 4913, column: 46, scope: !14387)
!14436 = !DILocation(line: 4913, column: 3, scope: !14387)
!14437 = !DILocation(line: 4914, column: 13, scope: !14387)
!14438 = !DILocation(line: 4914, column: 3, scope: !14387)
!14439 = !DILocation(line: 4914, column: 8, scope: !14387)
!14440 = !DILocation(line: 4914, column: 11, scope: !14387)
!14441 = !DILocation(line: 4915, column: 3, scope: !14387)
!14442 = !DILocation(line: 4915, column: 8, scope: !14387)
!14443 = !DILocation(line: 4915, column: 11, scope: !14387)
!14444 = !DILocation(line: 4915, column: 16, scope: !14387)
!14445 = !DILocation(line: 4916, column: 3, scope: !14387)
!14446 = !DILocation(line: 4916, column: 8, scope: !14387)
!14447 = !DILocation(line: 4916, column: 11, scope: !14387)
!14448 = !DILocation(line: 4916, column: 16, scope: !14387)
!14449 = !DILocation(line: 4917, column: 16, scope: !14387)
!14450 = !DILocation(line: 4917, column: 19, scope: !14387)
!14451 = !DILocation(line: 4917, column: 3, scope: !14387)
!14452 = !DILocation(line: 4917, column: 8, scope: !14387)
!14453 = !DILocation(line: 4917, column: 11, scope: !14387)
!14454 = !DILocation(line: 4917, column: 14, scope: !14387)
!14455 = !DILocation(line: 4918, column: 13, scope: !14387)
!14456 = !DILocation(line: 4918, column: 18, scope: !14387)
!14457 = !DILocation(line: 4918, column: 21, scope: !14387)
!14458 = !DILocation(line: 4918, column: 28, scope: !14387)
!14459 = !DILocation(line: 4918, column: 33, scope: !14387)
!14460 = !DILocation(line: 4918, column: 37, scope: !14387)
!14461 = !DILocation(line: 4918, column: 3, scope: !14387)
!14462 = !DILocation(line: 4919, column: 26, scope: !14387)
!14463 = !DILocation(line: 4919, column: 3, scope: !14387)
!14464 = !DILocation(line: 4919, column: 7, scope: !14387)
!14465 = !DILocation(line: 4919, column: 12, scope: !14387)
!14466 = !DILocation(line: 4919, column: 16, scope: !14387)
!14467 = !DILocation(line: 4919, column: 14, scope: !14387)
!14468 = !DILocation(line: 4919, column: 20, scope: !14387)
!14469 = !DILocation(line: 4919, column: 24, scope: !14387)
!14470 = !DILocation(line: 4920, column: 27, scope: !14387)
!14471 = !DILocation(line: 4920, column: 3, scope: !14387)
!14472 = !DILocation(line: 4920, column: 7, scope: !14387)
!14473 = !DILocation(line: 4920, column: 12, scope: !14387)
!14474 = !DILocation(line: 4920, column: 16, scope: !14387)
!14475 = !DILocation(line: 4920, column: 14, scope: !14387)
!14476 = !DILocation(line: 4920, column: 20, scope: !14387)
!14477 = !DILocation(line: 4920, column: 25, scope: !14387)
!14478 = !DILocation(line: 4921, column: 18, scope: !14387)
!14479 = !DILocation(line: 4921, column: 23, scope: !14387)
!14480 = !DILocation(line: 4921, column: 27, scope: !14387)
!14481 = !DILocation(line: 4921, column: 32, scope: !14387)
!14482 = !DILocation(line: 4921, column: 36, scope: !14387)
!14483 = !DILocation(line: 4921, column: 3, scope: !14387)
!14484 = !DILocation(line: 4922, column: 2, scope: !14387)
!14485 = !DILocation(line: 4894, column: 40, scope: !14380)
!14486 = !DILocation(line: 4894, column: 2, scope: !14380)
!14487 = distinct !{!14487, !14385, !14488}
!14488 = !DILocation(line: 4922, column: 2, scope: !14377)
!14489 = !DILocation(line: 4924, column: 11, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14291, file: !3, line: 4924, column: 6)
!14491 = !DILocation(line: 4924, column: 6, scope: !14490)
!14492 = !DILocation(line: 4924, column: 21, scope: !14490)
!14493 = !DILocation(line: 4924, column: 6, scope: !14291)
!14494 = !DILocation(line: 4925, column: 7, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14496, file: !3, line: 4925, column: 7)
!14496 = distinct !DILexicalBlock(scope: !14490, file: !3, line: 4924, column: 30)
!14497 = !DILocation(line: 4925, column: 13, scope: !14495)
!14498 = !DILocation(line: 4925, column: 7, scope: !14496)
!14499 = !DILocation(line: 4929, column: 21, scope: !14495)
!14500 = !DILocation(line: 4929, column: 29, scope: !14495)
!14501 = !DILocation(line: 4929, column: 34, scope: !14495)
!14502 = !DILocation(line: 4929, column: 37, scope: !14495)
!14503 = !DILocation(line: 4926, column: 4, scope: !14495)
!14504 = !DILocation(line: 4930, column: 7, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14496, file: !3, line: 4930, column: 7)
!14506 = !DILocation(line: 4930, column: 12, scope: !14505)
!14507 = !DILocation(line: 4930, column: 16, scope: !14505)
!14508 = !DILocation(line: 4930, column: 18, scope: !14505)
!14509 = !DILocation(line: 4930, column: 27, scope: !14505)
!14510 = !DILocation(line: 4930, column: 7, scope: !14496)
!14511 = !DILocation(line: 4934, column: 11, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14505, file: !3, line: 4930, column: 44)
!14513 = !DILocation(line: 4934, column: 14, scope: !14512)
!14514 = !DILocation(line: 4934, column: 19, scope: !14512)
!14515 = !DILocation(line: 4934, column: 27, scope: !14512)
!14516 = !DILocation(line: 4931, column: 4, scope: !14512)
!14517 = !DILocation(line: 4935, column: 8, scope: !14512)
!14518 = !DILocation(line: 4936, column: 4, scope: !14512)
!14519 = !DILocation(line: 4938, column: 7, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14496, file: !3, line: 4938, column: 7)
!14521 = !DILocation(line: 4938, column: 11, scope: !14520)
!14522 = !DILocation(line: 4938, column: 21, scope: !14520)
!14523 = !DILocation(line: 4938, column: 7, scope: !14496)
!14524 = !DILocation(line: 4942, column: 11, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14520, file: !3, line: 4938, column: 27)
!14526 = !DILocation(line: 4942, column: 14, scope: !14525)
!14527 = !DILocation(line: 4942, column: 19, scope: !14525)
!14528 = !DILocation(line: 4942, column: 27, scope: !14525)
!14529 = !DILocation(line: 4942, column: 32, scope: !14525)
!14530 = !DILocation(line: 4942, column: 36, scope: !14525)
!14531 = !DILocation(line: 4942, column: 46, scope: !14525)
!14532 = !DILocation(line: 4939, column: 4, scope: !14525)
!14533 = !DILocation(line: 4943, column: 8, scope: !14525)
!14534 = !DILocation(line: 4944, column: 4, scope: !14525)
!14535 = !DILocation(line: 4946, column: 19, scope: !14496)
!14536 = !DILocation(line: 4946, column: 3, scope: !14496)
!14537 = !DILocation(line: 4946, column: 7, scope: !14496)
!14538 = !DILocation(line: 4946, column: 17, scope: !14496)
!14539 = !DILocation(line: 4947, column: 2, scope: !14496)
!14540 = !DILocation(line: 4949, column: 11, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14291, file: !3, line: 4949, column: 6)
!14542 = !DILocation(line: 4949, column: 6, scope: !14541)
!14543 = !DILocation(line: 4949, column: 21, scope: !14541)
!14544 = !DILocation(line: 4949, column: 6, scope: !14291)
!14545 = !DILocation(line: 4950, column: 7, scope: !14546)
!14546 = distinct !DILexicalBlock(scope: !14547, file: !3, line: 4950, column: 7)
!14547 = distinct !DILexicalBlock(scope: !14541, file: !3, line: 4949, column: 30)
!14548 = !DILocation(line: 4950, column: 13, scope: !14546)
!14549 = !DILocation(line: 4950, column: 7, scope: !14547)
!14550 = !DILocation(line: 4954, column: 21, scope: !14546)
!14551 = !DILocation(line: 4954, column: 29, scope: !14546)
!14552 = !DILocation(line: 4954, column: 34, scope: !14546)
!14553 = !DILocation(line: 4954, column: 37, scope: !14546)
!14554 = !DILocation(line: 4951, column: 4, scope: !14546)
!14555 = !DILocation(line: 4956, column: 7, scope: !14547)
!14556 = !DILocation(line: 4956, column: 11, scope: !14547)
!14557 = !DILocation(line: 4956, column: 16, scope: !14547)
!14558 = !DILocation(line: 4956, column: 18, scope: !14547)
!14559 = !DILocation(line: 4956, column: 23, scope: !14547)
!14560 = !DILocation(line: 4955, column: 3, scope: !14547)
!14561 = !DILocation(line: 4957, column: 2, scope: !14547)
!14562 = !DILocation(line: 4959, column: 11, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14291, file: !3, line: 4959, column: 6)
!14564 = !DILocation(line: 4959, column: 6, scope: !14563)
!14565 = !DILocation(line: 4959, column: 21, scope: !14563)
!14566 = !DILocation(line: 4959, column: 6, scope: !14291)
!14567 = !DILocation(line: 4960, column: 7, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14569, file: !3, line: 4960, column: 7)
!14569 = distinct !DILexicalBlock(scope: !14563, file: !3, line: 4959, column: 30)
!14570 = !DILocation(line: 4960, column: 13, scope: !14568)
!14571 = !DILocation(line: 4960, column: 7, scope: !14569)
!14572 = !DILocation(line: 4964, column: 21, scope: !14568)
!14573 = !DILocation(line: 4964, column: 29, scope: !14568)
!14574 = !DILocation(line: 4964, column: 34, scope: !14568)
!14575 = !DILocation(line: 4964, column: 37, scope: !14568)
!14576 = !DILocation(line: 4961, column: 4, scope: !14568)
!14577 = !DILocation(line: 4966, column: 7, scope: !14569)
!14578 = !DILocation(line: 4966, column: 11, scope: !14569)
!14579 = !DILocation(line: 4966, column: 16, scope: !14569)
!14580 = !DILocation(line: 4966, column: 18, scope: !14569)
!14581 = !DILocation(line: 4966, column: 23, scope: !14569)
!14582 = !DILocation(line: 4965, column: 3, scope: !14569)
!14583 = !DILocation(line: 4967, column: 2, scope: !14569)
!14584 = !DILocation(line: 4968, column: 6, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14291, file: !3, line: 4968, column: 6)
!14586 = !DILocation(line: 4968, column: 10, scope: !14585)
!14587 = !DILocation(line: 4968, column: 16, scope: !14585)
!14588 = !DILocation(line: 4968, column: 6, scope: !14291)
!14589 = !DILocation(line: 4969, column: 12, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14585, file: !3, line: 4968, column: 34)
!14591 = !DILocation(line: 4970, column: 5, scope: !14590)
!14592 = !DILocation(line: 4970, column: 13, scope: !14590)
!14593 = !DILocation(line: 4970, column: 18, scope: !14590)
!14594 = !DILocation(line: 4970, column: 21, scope: !14590)
!14595 = !DILocation(line: 4969, column: 3, scope: !14590)
!14596 = !DILocation(line: 4971, column: 32, scope: !14590)
!14597 = !DILocation(line: 4971, column: 37, scope: !14590)
!14598 = !DILocation(line: 4971, column: 48, scope: !14590)
!14599 = !DILocation(line: 4971, column: 9, scope: !14590)
!14600 = !DILocation(line: 4971, column: 7, scope: !14590)
!14601 = !DILocation(line: 4972, column: 2, scope: !14590)
!14602 = !DILocation(line: 4973, column: 12, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14585, file: !3, line: 4972, column: 9)
!14604 = !DILocation(line: 4974, column: 5, scope: !14603)
!14605 = !DILocation(line: 4974, column: 9, scope: !14603)
!14606 = !DILocation(line: 4974, column: 16, scope: !14603)
!14607 = !DILocation(line: 4974, column: 24, scope: !14603)
!14608 = !DILocation(line: 4974, column: 29, scope: !14603)
!14609 = !DILocation(line: 4974, column: 32, scope: !14603)
!14610 = !DILocation(line: 4973, column: 3, scope: !14603)
!14611 = !DILocation(line: 4975, column: 32, scope: !14603)
!14612 = !DILocation(line: 4975, column: 37, scope: !14603)
!14613 = !DILocation(line: 4975, column: 43, scope: !14603)
!14614 = !DILocation(line: 4975, column: 47, scope: !14603)
!14615 = !DILocation(line: 4975, column: 56, scope: !14603)
!14616 = !DILocation(line: 4975, column: 61, scope: !14603)
!14617 = !DILocation(line: 4975, column: 9, scope: !14603)
!14618 = !DILocation(line: 4975, column: 7, scope: !14603)
!14619 = !DILocation(line: 4977, column: 6, scope: !14620)
!14620 = distinct !DILexicalBlock(scope: !14291, file: !3, line: 4977, column: 6)
!14621 = !DILocation(line: 4977, column: 6, scope: !14291)
!14622 = !DILocation(line: 4978, column: 3, scope: !14620)
!14623 = !DILocation(line: 4979, column: 2, scope: !14291)
!14624 = !DILocation(line: 4979, column: 6, scope: !14291)
!14625 = !DILocation(line: 4979, column: 14, scope: !14291)
!14626 = !DILocation(line: 4979, column: 18, scope: !14291)
!14627 = !DILocation(line: 4980, column: 9, scope: !14291)
!14628 = !DILocation(line: 4980, column: 2, scope: !14291)
!14629 = !DILabel(scope: !14291, name: "free_chan", file: !3, line: 4981)
!14630 = !DILocation(line: 4981, column: 1, scope: !14291)
!14631 = !DILocation(line: 4982, column: 15, scope: !14291)
!14632 = !DILocation(line: 4982, column: 19, scope: !14291)
!14633 = !DILocation(line: 4982, column: 2, scope: !14291)
!14634 = !DILocation(line: 4983, column: 9, scope: !14291)
!14635 = !DILocation(line: 4983, column: 2, scope: !14291)
!14636 = !DILocation(line: 4984, column: 1, scope: !14291)
!14637 = distinct !DISubprogram(name: "list_add_tail", scope: !11675, file: !11675, line: 98, type: !12511, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14638 = !DILocalVariable(name: "new", arg: 1, scope: !14637, file: !11675, line: 98, type: !292)
!14639 = !DILocation(line: 98, column: 52, scope: !14637)
!14640 = !DILocalVariable(name: "head", arg: 2, scope: !14637, file: !11675, line: 98, type: !292)
!14641 = !DILocation(line: 98, column: 75, scope: !14637)
!14642 = !DILocation(line: 100, column: 13, scope: !14637)
!14643 = !DILocation(line: 100, column: 18, scope: !14637)
!14644 = !DILocation(line: 100, column: 24, scope: !14637)
!14645 = !DILocation(line: 100, column: 30, scope: !14637)
!14646 = !DILocation(line: 100, column: 2, scope: !14637)
!14647 = !DILocation(line: 101, column: 1, scope: !14637)
!14648 = distinct !DISubprogram(name: "clockctl", scope: !3, file: !3, line: 4227, type: !9529, scopeLine: 4228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14649 = !DILocalVariable(name: "priv", arg: 1, scope: !14648, file: !3, line: 4227, type: !570)
!14650 = !DILocation(line: 4227, column: 16, scope: !14648)
!14651 = !DILocalVariable(name: "enable", arg: 2, scope: !14648, file: !3, line: 4227, type: !37)
!14652 = !DILocation(line: 4227, column: 26, scope: !14648)
!14653 = !DILocalVariable(name: "hc", scope: !14648, file: !3, line: 4229, type: !9128)
!14654 = !DILocation(line: 4229, column: 20, scope: !14648)
!14655 = !DILocation(line: 4229, column: 25, scope: !14648)
!14656 = !DILocation(line: 4231, column: 18, scope: !14648)
!14657 = !DILocation(line: 4231, column: 2, scope: !14648)
!14658 = !DILocation(line: 4231, column: 6, scope: !14648)
!14659 = !DILocation(line: 4231, column: 16, scope: !14648)
!14660 = !DILocation(line: 4232, column: 2, scope: !14648)
!14661 = distinct !DISubprogram(name: "init_card", scope: !3, file: !3, line: 4244, type: !14662, scopeLine: 4245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14662 = !DISubroutineType(types: !14663)
!14663 = !{!37, !9128}
!14664 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !14665)
!14665 = distinct !DILocation(line: 4318, column: 3, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14667, file: !3, line: 4318, column: 3)
!14667 = distinct !DILexicalBlock(scope: !14668, file: !3, line: 4318, column: 3)
!14668 = distinct !DILexicalBlock(scope: !14669, file: !3, line: 4318, column: 3)
!14669 = distinct !DILexicalBlock(scope: !14670, file: !3, line: 4318, column: 3)
!14670 = distinct !DILexicalBlock(scope: !14671, file: !3, line: 4318, column: 3)
!14671 = distinct !DILexicalBlock(scope: !14672, file: !3, line: 4317, column: 43)
!14672 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4317, column: 6)
!14673 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !14674)
!14674 = distinct !DILocation(line: 4296, column: 2, scope: !14661)
!14675 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !14674)
!14676 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !14677)
!14677 = distinct !DILocation(line: 4294, column: 2, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14679, file: !3, line: 4294, column: 2)
!14679 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 4294, column: 2)
!14680 = distinct !DILexicalBlock(scope: !14681, file: !3, line: 4294, column: 2)
!14681 = distinct !DILexicalBlock(scope: !14682, file: !3, line: 4294, column: 2)
!14682 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4294, column: 2)
!14683 = !DILocalVariable(name: "pscr_ret__", scope: !14684, file: !14685, line: 15, type: !1257)
!14684 = distinct !DILexicalBlock(scope: !14686, file: !14685, line: 15, column: 9)
!14685 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!14686 = distinct !DISubprogram(name: "get_current", scope: !14685, file: !14685, line: 13, type: !14687, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14687 = !DISubroutineType(types: !14688)
!14688 = !{!1257}
!14689 = !DILocation(line: 15, column: 9, scope: !14684, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 4291, column: 2, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14692, file: !3, line: 4291, column: 2)
!14692 = distinct !DILexicalBlock(scope: !14693, file: !3, line: 4291, column: 2)
!14693 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4291, column: 2)
!14694 = !DILocalVariable(name: "__vpp_verify", scope: !14695, file: !14685, line: 15, type: !2244)
!14695 = distinct !DILexicalBlock(scope: !14684, file: !14685, line: 15, column: 9)
!14696 = !DILocation(line: 15, column: 9, scope: !14695, inlinedAt: !14690)
!14697 = !DILocalVariable(name: "pfo_val__", scope: !14698, file: !14685, line: 15, type: !336)
!14698 = distinct !DILexicalBlock(scope: !14684, file: !14685, line: 15, column: 9)
!14699 = !DILocation(line: 15, column: 9, scope: !14698, inlinedAt: !14690)
!14700 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !14701)
!14701 = distinct !DILocation(line: 4289, column: 2, scope: !14661)
!14702 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !14701)
!14703 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !14704)
!14704 = distinct !DILocation(line: 4287, column: 2, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14706, file: !3, line: 4287, column: 2)
!14706 = distinct !DILexicalBlock(scope: !14707, file: !3, line: 4287, column: 2)
!14707 = distinct !DILexicalBlock(scope: !14708, file: !3, line: 4287, column: 2)
!14708 = distinct !DILexicalBlock(scope: !14709, file: !3, line: 4287, column: 2)
!14709 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4287, column: 2)
!14710 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !14711)
!14711 = distinct !DILocation(line: 4273, column: 3, scope: !14712)
!14712 = distinct !DILexicalBlock(scope: !14713, file: !3, line: 4268, column: 43)
!14713 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4268, column: 6)
!14714 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !14711)
!14715 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !14716)
!14716 = distinct !DILocation(line: 4269, column: 3, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14718, file: !3, line: 4269, column: 3)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !3, line: 4269, column: 3)
!14719 = distinct !DILexicalBlock(scope: !14720, file: !3, line: 4269, column: 3)
!14720 = distinct !DILexicalBlock(scope: !14721, file: !3, line: 4269, column: 3)
!14721 = distinct !DILexicalBlock(scope: !14712, file: !3, line: 4269, column: 3)
!14722 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !14723)
!14723 = distinct !DILocation(line: 4258, column: 2, scope: !14661)
!14724 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !14723)
!14725 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !14726)
!14726 = distinct !DILocation(line: 4321, column: 3, scope: !14671)
!14727 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !14726)
!14728 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 4254, column: 2, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14731, file: !3, line: 4254, column: 2)
!14731 = distinct !DILexicalBlock(scope: !14732, file: !3, line: 4254, column: 2)
!14732 = distinct !DILexicalBlock(scope: !14733, file: !3, line: 4254, column: 2)
!14733 = distinct !DILexicalBlock(scope: !14734, file: !3, line: 4254, column: 2)
!14734 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4254, column: 2)
!14735 = !DILocalVariable(name: "hc", arg: 1, scope: !14661, file: !3, line: 4244, type: !9128)
!14736 = !DILocation(line: 4244, column: 29, scope: !14661)
!14737 = !DILocalVariable(name: "err", scope: !14661, file: !3, line: 4246, type: !37)
!14738 = !DILocation(line: 4246, column: 6, scope: !14661)
!14739 = !DILocalVariable(name: "flags", scope: !14661, file: !3, line: 4247, type: !9457)
!14740 = !DILocation(line: 4247, column: 9, scope: !14661)
!14741 = !DILocalVariable(name: "plx_acc", scope: !14661, file: !3, line: 4248, type: !570)
!14742 = !DILocation(line: 4248, column: 16, scope: !14661)
!14743 = !DILocalVariable(name: "plx_flags", scope: !14661, file: !3, line: 4249, type: !9457)
!14744 = !DILocation(line: 4249, column: 9, scope: !14661)
!14745 = !DILocation(line: 4251, column: 6, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4251, column: 6)
!14747 = !DILocation(line: 4251, column: 12, scope: !14746)
!14748 = !DILocation(line: 4251, column: 6, scope: !14661)
!14749 = !DILocation(line: 4252, column: 3, scope: !14746)
!14750 = !DILocation(line: 4254, column: 2, scope: !14661)
!14751 = !DILocation(line: 4254, column: 2, scope: !14734)
!14752 = !DILocalVariable(name: "__dummy", scope: !14753, file: !3, line: 4254, type: !317)
!14753 = distinct !DILexicalBlock(scope: !14733, file: !3, line: 4254, column: 2)
!14754 = !DILocation(line: 4254, column: 2, scope: !14753)
!14755 = !DILocalVariable(name: "__dummy2", scope: !14753, file: !3, line: 4254, type: !9457)
!14756 = !DILocation(line: 4254, column: 2, scope: !14733)
!14757 = !DILocation(line: 4254, column: 2, scope: !14732)
!14758 = !DILocation(line: 4254, column: 2, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14732, file: !3, line: 4254, column: 2)
!14760 = !DILocalVariable(name: "__dummy", scope: !14761, file: !3, line: 4254, type: !317)
!14761 = distinct !DILexicalBlock(scope: !14762, file: !3, line: 4254, column: 2)
!14762 = distinct !DILexicalBlock(scope: !14759, file: !3, line: 4254, column: 2)
!14763 = !DILocation(line: 4254, column: 2, scope: !14761)
!14764 = !DILocalVariable(name: "__dummy2", scope: !14761, file: !3, line: 4254, type: !9457)
!14765 = !DILocation(line: 4254, column: 2, scope: !14762)
!14766 = !DILocation(line: 4254, column: 2, scope: !14731)
!14767 = !{i32 -2138022064}
!14768 = !DILocation(line: 4254, column: 2, scope: !14730)
!14769 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !14729)
!14770 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !14729)
!14771 = !DILocation(line: 4256, column: 2, scope: !14661)
!14772 = !DILocation(line: 4256, column: 6, scope: !14661)
!14773 = !DILocation(line: 4256, column: 9, scope: !14661)
!14774 = !DILocation(line: 4256, column: 20, scope: !14661)
!14775 = !DILocation(line: 4257, column: 16, scope: !14661)
!14776 = !DILocation(line: 4257, column: 2, scope: !14661)
!14777 = !DILocation(line: 4258, column: 26, scope: !14661)
!14778 = !DILocation(line: 4258, column: 30, scope: !14661)
!14779 = !DILocation(line: 4258, column: 36, scope: !14661)
!14780 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !14723)
!14781 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !14723)
!14782 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !14723)
!14783 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !14723)
!14784 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !14723)
!14785 = !DILocation(line: 4260, column: 18, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4260, column: 6)
!14787 = !DILocation(line: 4260, column: 22, scope: !14786)
!14788 = !DILocation(line: 4261, column: 17, scope: !14786)
!14789 = !DILocation(line: 4260, column: 6, scope: !14786)
!14790 = !DILocation(line: 4260, column: 6, scope: !14661)
!14791 = !DILocation(line: 4263, column: 10, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14786, file: !3, line: 4261, column: 22)
!14793 = !DILocation(line: 4263, column: 14, scope: !14792)
!14794 = !DILocation(line: 4262, column: 3, scope: !14792)
!14795 = !DILocation(line: 4264, column: 3, scope: !14792)
!14796 = !DILocation(line: 4264, column: 7, scope: !14792)
!14797 = !DILocation(line: 4264, column: 11, scope: !14792)
!14798 = !DILocation(line: 4265, column: 3, scope: !14792)
!14799 = !DILocation(line: 4268, column: 32, scope: !14713)
!14800 = !DILocation(line: 4268, column: 36, scope: !14713)
!14801 = !DILocation(line: 4268, column: 6, scope: !14713)
!14802 = !DILocation(line: 4268, column: 6, scope: !14661)
!14803 = !DILocation(line: 4269, column: 3, scope: !14712)
!14804 = !DILocation(line: 4269, column: 3, scope: !14721)
!14805 = !DILocalVariable(name: "__dummy", scope: !14806, file: !3, line: 4269, type: !317)
!14806 = distinct !DILexicalBlock(scope: !14720, file: !3, line: 4269, column: 3)
!14807 = !DILocation(line: 4269, column: 3, scope: !14806)
!14808 = !DILocalVariable(name: "__dummy2", scope: !14806, file: !3, line: 4269, type: !9457)
!14809 = !DILocation(line: 4269, column: 3, scope: !14720)
!14810 = !DILocation(line: 4269, column: 3, scope: !14719)
!14811 = !DILocation(line: 4269, column: 3, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14719, file: !3, line: 4269, column: 3)
!14813 = !DILocalVariable(name: "__dummy", scope: !14814, file: !3, line: 4269, type: !317)
!14814 = distinct !DILexicalBlock(scope: !14815, file: !3, line: 4269, column: 3)
!14815 = distinct !DILexicalBlock(scope: !14812, file: !3, line: 4269, column: 3)
!14816 = !DILocation(line: 4269, column: 3, scope: !14814)
!14817 = !DILocalVariable(name: "__dummy2", scope: !14814, file: !3, line: 4269, type: !9457)
!14818 = !DILocation(line: 4269, column: 3, scope: !14815)
!14819 = !DILocation(line: 4269, column: 3, scope: !14718)
!14820 = !{i32 -2138020978}
!14821 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !14716)
!14822 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !14716)
!14823 = !DILocation(line: 4269, column: 3, scope: !14717)
!14824 = !DILocation(line: 4270, column: 13, scope: !14712)
!14825 = !DILocation(line: 4270, column: 17, scope: !14712)
!14826 = !DILocation(line: 4270, column: 29, scope: !14712)
!14827 = !DILocation(line: 4270, column: 11, scope: !14712)
!14828 = !DILocation(line: 4272, column: 10, scope: !14712)
!14829 = !DILocation(line: 4271, column: 3, scope: !14712)
!14830 = !DILocation(line: 4273, column: 37, scope: !14712)
!14831 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !14711)
!14832 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !14711)
!14833 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !14711)
!14834 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !14711)
!14835 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !14711)
!14836 = !DILocation(line: 4274, column: 2, scope: !14712)
!14837 = !DILocation(line: 4276, column: 6, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4276, column: 6)
!14839 = !DILocation(line: 4276, column: 12, scope: !14838)
!14840 = !DILocation(line: 4276, column: 6, scope: !14661)
!14841 = !DILocation(line: 4278, column: 20, scope: !14838)
!14842 = !DILocation(line: 4278, column: 24, scope: !14838)
!14843 = !DILocation(line: 4278, column: 29, scope: !14838)
!14844 = !DILocation(line: 4278, column: 33, scope: !14838)
!14845 = !DILocation(line: 4277, column: 3, scope: !14838)
!14846 = !DILocation(line: 4279, column: 18, scope: !14661)
!14847 = !DILocation(line: 4279, column: 8, scope: !14661)
!14848 = !DILocation(line: 4279, column: 6, scope: !14661)
!14849 = !DILocation(line: 4280, column: 6, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4280, column: 6)
!14851 = !DILocation(line: 4280, column: 6, scope: !14661)
!14852 = !DILocation(line: 4281, column: 3, scope: !14850)
!14853 = !DILocation(line: 4287, column: 2, scope: !14661)
!14854 = !DILocation(line: 4287, column: 2, scope: !14709)
!14855 = !DILocalVariable(name: "__dummy", scope: !14856, file: !3, line: 4287, type: !317)
!14856 = distinct !DILexicalBlock(scope: !14708, file: !3, line: 4287, column: 2)
!14857 = !DILocation(line: 4287, column: 2, scope: !14856)
!14858 = !DILocalVariable(name: "__dummy2", scope: !14856, file: !3, line: 4287, type: !9457)
!14859 = !DILocation(line: 4287, column: 2, scope: !14708)
!14860 = !DILocation(line: 4287, column: 2, scope: !14707)
!14861 = !DILocation(line: 4287, column: 2, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14707, file: !3, line: 4287, column: 2)
!14863 = !DILocalVariable(name: "__dummy", scope: !14864, file: !3, line: 4287, type: !317)
!14864 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 4287, column: 2)
!14865 = distinct !DILexicalBlock(scope: !14862, file: !3, line: 4287, column: 2)
!14866 = !DILocation(line: 4287, column: 2, scope: !14864)
!14867 = !DILocalVariable(name: "__dummy2", scope: !14864, file: !3, line: 4287, type: !9457)
!14868 = !DILocation(line: 4287, column: 2, scope: !14865)
!14869 = !DILocation(line: 4287, column: 2, scope: !14706)
!14870 = !{i32 -2138019920}
!14871 = !DILocation(line: 4287, column: 2, scope: !14705)
!14872 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !14704)
!14873 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !14704)
!14874 = !DILocation(line: 4288, column: 15, scope: !14661)
!14875 = !DILocation(line: 4288, column: 2, scope: !14661)
!14876 = !DILocation(line: 4289, column: 26, scope: !14661)
!14877 = !DILocation(line: 4289, column: 30, scope: !14661)
!14878 = !DILocation(line: 4289, column: 36, scope: !14661)
!14879 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !14701)
!14880 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !14701)
!14881 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !14701)
!14882 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !14701)
!14883 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !14701)
!14884 = !DILocation(line: 4291, column: 2, scope: !14661)
!14885 = !DILocation(line: 4291, column: 2, scope: !14693)
!14886 = !DILocation(line: 4291, column: 2, scope: !14692)
!14887 = !DILocation(line: 4291, column: 2, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14692, file: !3, line: 4291, column: 2)
!14889 = !{i32 -2146220527}
!14890 = !DILocation(line: 4291, column: 2, scope: !14691)
!14891 = !{i32 -2138018153}
!14892 = !DILocation(line: 4292, column: 2, scope: !14661)
!14893 = !DILocation(line: 4294, column: 2, scope: !14661)
!14894 = !DILocation(line: 4294, column: 2, scope: !14682)
!14895 = !DILocalVariable(name: "__dummy", scope: !14896, file: !3, line: 4294, type: !317)
!14896 = distinct !DILexicalBlock(scope: !14681, file: !3, line: 4294, column: 2)
!14897 = !DILocation(line: 4294, column: 2, scope: !14896)
!14898 = !DILocalVariable(name: "__dummy2", scope: !14896, file: !3, line: 4294, type: !9457)
!14899 = !DILocation(line: 4294, column: 2, scope: !14681)
!14900 = !DILocation(line: 4294, column: 2, scope: !14680)
!14901 = !DILocation(line: 4294, column: 2, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 4294, column: 2)
!14903 = !DILocalVariable(name: "__dummy", scope: !14904, file: !3, line: 4294, type: !317)
!14904 = distinct !DILexicalBlock(scope: !14905, file: !3, line: 4294, column: 2)
!14905 = distinct !DILexicalBlock(scope: !14902, file: !3, line: 4294, column: 2)
!14906 = !DILocation(line: 4294, column: 2, scope: !14904)
!14907 = !DILocalVariable(name: "__dummy2", scope: !14904, file: !3, line: 4294, type: !9457)
!14908 = !DILocation(line: 4294, column: 2, scope: !14905)
!14909 = !DILocation(line: 4294, column: 2, scope: !14679)
!14910 = !{i32 -2138017246}
!14911 = !DILocation(line: 4294, column: 2, scope: !14678)
!14912 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !14677)
!14913 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !14677)
!14914 = !DILocation(line: 4295, column: 16, scope: !14661)
!14915 = !DILocation(line: 4295, column: 2, scope: !14661)
!14916 = !DILocation(line: 4296, column: 26, scope: !14661)
!14917 = !DILocation(line: 4296, column: 30, scope: !14661)
!14918 = !DILocation(line: 4296, column: 36, scope: !14661)
!14919 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !14674)
!14920 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !14674)
!14921 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !14674)
!14922 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !14674)
!14923 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !14674)
!14924 = !DILocation(line: 4297, column: 6, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4297, column: 6)
!14926 = !DILocation(line: 4297, column: 12, scope: !14925)
!14927 = !DILocation(line: 4297, column: 6, scope: !14661)
!14928 = !DILocation(line: 4299, column: 20, scope: !14925)
!14929 = !DILocation(line: 4299, column: 24, scope: !14925)
!14930 = !DILocation(line: 4299, column: 29, scope: !14925)
!14931 = !DILocation(line: 4299, column: 33, scope: !14925)
!14932 = !DILocation(line: 4298, column: 3, scope: !14925)
!14933 = !DILocation(line: 4300, column: 6, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4300, column: 6)
!14935 = !DILocation(line: 4300, column: 10, scope: !14934)
!14936 = !DILocation(line: 4300, column: 6, scope: !14661)
!14937 = !DILocation(line: 4301, column: 7, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14939, file: !3, line: 4301, column: 7)
!14939 = distinct !DILexicalBlock(scope: !14934, file: !3, line: 4300, column: 18)
!14940 = !DILocation(line: 4301, column: 13, scope: !14938)
!14941 = !DILocation(line: 4301, column: 7, scope: !14939)
!14942 = !DILocation(line: 4302, column: 4, scope: !14938)
!14943 = !DILocation(line: 4304, column: 3, scope: !14939)
!14944 = !DILocation(line: 4306, column: 36, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4306, column: 6)
!14946 = !DILocation(line: 4306, column: 40, scope: !14945)
!14947 = !DILocation(line: 4306, column: 6, scope: !14945)
!14948 = !DILocation(line: 4306, column: 6, scope: !14661)
!14949 = !DILocation(line: 4307, column: 3, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !14945, file: !3, line: 4306, column: 47)
!14951 = !DILocation(line: 4308, column: 3, scope: !14950)
!14952 = !DILocation(line: 4312, column: 9, scope: !14661)
!14953 = !DILocation(line: 4312, column: 13, scope: !14661)
!14954 = !DILocation(line: 4311, column: 2, scope: !14661)
!14955 = !DILocation(line: 4314, column: 6, scope: !14661)
!14956 = !DILocation(line: 4314, column: 2, scope: !14661)
!14957 = !DILabel(scope: !14661, name: "error", file: !3, line: 4316)
!14958 = !DILocation(line: 4316, column: 1, scope: !14661)
!14959 = !DILocation(line: 4317, column: 32, scope: !14672)
!14960 = !DILocation(line: 4317, column: 36, scope: !14672)
!14961 = !DILocation(line: 4317, column: 6, scope: !14672)
!14962 = !DILocation(line: 4317, column: 6, scope: !14661)
!14963 = !DILocation(line: 4318, column: 3, scope: !14671)
!14964 = !DILocation(line: 4318, column: 3, scope: !14670)
!14965 = !DILocalVariable(name: "__dummy", scope: !14966, file: !3, line: 4318, type: !317)
!14966 = distinct !DILexicalBlock(scope: !14669, file: !3, line: 4318, column: 3)
!14967 = !DILocation(line: 4318, column: 3, scope: !14966)
!14968 = !DILocalVariable(name: "__dummy2", scope: !14966, file: !3, line: 4318, type: !9457)
!14969 = !DILocation(line: 4318, column: 3, scope: !14669)
!14970 = !DILocation(line: 4318, column: 3, scope: !14668)
!14971 = !DILocation(line: 4318, column: 3, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14668, file: !3, line: 4318, column: 3)
!14973 = !DILocalVariable(name: "__dummy", scope: !14974, file: !3, line: 4318, type: !317)
!14974 = distinct !DILexicalBlock(scope: !14975, file: !3, line: 4318, column: 3)
!14975 = distinct !DILexicalBlock(scope: !14972, file: !3, line: 4318, column: 3)
!14976 = !DILocation(line: 4318, column: 3, scope: !14974)
!14977 = !DILocalVariable(name: "__dummy2", scope: !14974, file: !3, line: 4318, type: !9457)
!14978 = !DILocation(line: 4318, column: 3, scope: !14975)
!14979 = !DILocation(line: 4318, column: 3, scope: !14667)
!14980 = !{i32 -2138016092}
!14981 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !14665)
!14982 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !14665)
!14983 = !DILocation(line: 4318, column: 3, scope: !14666)
!14984 = !DILocation(line: 4319, column: 13, scope: !14671)
!14985 = !DILocation(line: 4319, column: 17, scope: !14671)
!14986 = !DILocation(line: 4319, column: 29, scope: !14671)
!14987 = !DILocation(line: 4319, column: 11, scope: !14671)
!14988 = !DILocation(line: 4320, column: 16, scope: !14671)
!14989 = !DILocation(line: 4320, column: 3, scope: !14671)
!14990 = !DILocation(line: 4321, column: 37, scope: !14671)
!14991 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !14726)
!14992 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !14726)
!14993 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !14726)
!14994 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !14726)
!14995 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !14726)
!14996 = !DILocation(line: 4322, column: 2, scope: !14671)
!14997 = !DILocation(line: 4324, column: 6, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4324, column: 6)
!14999 = !DILocation(line: 4324, column: 12, scope: !14998)
!15000 = !DILocation(line: 4324, column: 6, scope: !14661)
!15001 = !DILocation(line: 4325, column: 52, scope: !14998)
!15002 = !DILocation(line: 4325, column: 56, scope: !14998)
!15003 = !DILocation(line: 4325, column: 3, scope: !14998)
!15004 = !DILocation(line: 4326, column: 6, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4326, column: 6)
!15006 = !DILocation(line: 4326, column: 10, scope: !15005)
!15007 = !DILocation(line: 4326, column: 6, scope: !14661)
!15008 = !DILocation(line: 4327, column: 12, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !15005, file: !3, line: 4326, column: 15)
!15010 = !DILocation(line: 4327, column: 16, scope: !15009)
!15011 = !DILocation(line: 4327, column: 21, scope: !15009)
!15012 = !DILocation(line: 4327, column: 3, scope: !15009)
!15013 = !DILocation(line: 4328, column: 3, scope: !15009)
!15014 = !DILocation(line: 4328, column: 7, scope: !15009)
!15015 = !DILocation(line: 4328, column: 11, scope: !15009)
!15016 = !DILocation(line: 4329, column: 2, scope: !15009)
!15017 = !DILocation(line: 4331, column: 6, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4331, column: 6)
!15019 = !DILocation(line: 4331, column: 12, scope: !15018)
!15020 = !DILocation(line: 4331, column: 6, scope: !14661)
!15021 = !DILocation(line: 4332, column: 54, scope: !15018)
!15022 = !DILocation(line: 4332, column: 3, scope: !15018)
!15023 = !DILocation(line: 4333, column: 9, scope: !14661)
!15024 = !DILocation(line: 4333, column: 2, scope: !14661)
!15025 = !DILocation(line: 4334, column: 1, scope: !14661)
!15026 = distinct !DISubprogram(name: "enable_hwirq", scope: !3, file: !3, line: 536, type: !9447, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15027 = !DILocalVariable(name: "hc", arg: 1, scope: !15026, file: !3, line: 536, type: !9128)
!15028 = !DILocation(line: 536, column: 32, scope: !15026)
!15029 = !DILocation(line: 538, column: 2, scope: !15026)
!15030 = !DILocation(line: 538, column: 6, scope: !15026)
!15031 = !DILocation(line: 538, column: 9, scope: !15026)
!15032 = !DILocation(line: 538, column: 20, scope: !15026)
!15033 = !DILocation(line: 539, column: 2, scope: !15026)
!15034 = !DILocation(line: 540, column: 1, scope: !15026)
!15035 = distinct !DISubprogram(name: "get_order", scope: !15036, file: !15036, line: 29, type: !15037, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15036 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!15037 = !DISubroutineType(types: !15038)
!15038 = !{!37, !317}
!15039 = !DILocalVariable(name: "x", arg: 1, scope: !15040, file: !11740, line: 366, type: !338)
!15040 = distinct !DISubprogram(name: "fls64", scope: !11740, file: !11740, line: 366, type: !15041, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15041 = !DISubroutineType(types: !15042)
!15042 = !{!37, !338}
!15043 = !DILocation(line: 366, column: 40, scope: !15040, inlinedAt: !15044)
!15044 = distinct !DILocation(line: 46, column: 9, scope: !15035)
!15045 = !DILocalVariable(name: "bitpos", scope: !15040, file: !11740, line: 368, type: !37)
!15046 = !DILocation(line: 368, column: 6, scope: !15040, inlinedAt: !15044)
!15047 = !DILocalVariable(name: "size", arg: 1, scope: !15035, file: !15036, line: 29, type: !317)
!15048 = !DILocation(line: 29, column: 63, scope: !15035)
!15049 = !DILocation(line: 31, column: 27, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15035, file: !15036, line: 31, column: 6)
!15051 = !DILocation(line: 31, column: 6, scope: !15050)
!15052 = !DILocation(line: 31, column: 6, scope: !15035)
!15053 = !DILocation(line: 32, column: 8, scope: !15054)
!15054 = distinct !DILexicalBlock(scope: !15055, file: !15036, line: 32, column: 7)
!15055 = distinct !DILexicalBlock(scope: !15050, file: !15036, line: 31, column: 34)
!15056 = !DILocation(line: 32, column: 7, scope: !15055)
!15057 = !DILocation(line: 33, column: 4, scope: !15054)
!15058 = !DILocation(line: 35, column: 7, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !15055, file: !15036, line: 35, column: 7)
!15060 = !DILocation(line: 35, column: 12, scope: !15059)
!15061 = !DILocation(line: 35, column: 7, scope: !15055)
!15062 = !DILocation(line: 36, column: 4, scope: !15059)
!15063 = !DILocation(line: 38, column: 10, scope: !15055)
!15064 = !DILocation(line: 38, column: 28, scope: !15055)
!15065 = !DILocation(line: 38, column: 41, scope: !15055)
!15066 = !DILocation(line: 38, column: 3, scope: !15055)
!15067 = !DILocation(line: 41, column: 6, scope: !15035)
!15068 = !DILocation(line: 42, column: 7, scope: !15035)
!15069 = !DILocation(line: 46, column: 15, scope: !15035)
!15070 = !DILocation(line: 374, column: 2, scope: !15040, inlinedAt: !15044)
!15071 = !DILocation(line: 376, column: 14, scope: !15040, inlinedAt: !15044)
!15072 = !{i32 418876}
!15073 = !DILocation(line: 377, column: 9, scope: !15040, inlinedAt: !15044)
!15074 = !DILocation(line: 377, column: 16, scope: !15040, inlinedAt: !15044)
!15075 = !DILocation(line: 46, column: 2, scope: !15035)
!15076 = !DILocation(line: 48, column: 1, scope: !15035)
!15077 = distinct !DISubprogram(name: "__ilog2_u64", scope: !15078, file: !15078, line: 30, type: !15079, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15078 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!15079 = !DISubroutineType(types: !15080)
!15080 = !{!37, !336}
!15081 = !DILocation(line: 366, column: 40, scope: !15040, inlinedAt: !15082)
!15082 = distinct !DILocation(line: 32, column: 9, scope: !15077)
!15083 = !DILocation(line: 368, column: 6, scope: !15040, inlinedAt: !15082)
!15084 = !DILocalVariable(name: "n", arg: 1, scope: !15077, file: !15078, line: 30, type: !336)
!15085 = !DILocation(line: 30, column: 21, scope: !15077)
!15086 = !DILocation(line: 32, column: 15, scope: !15077)
!15087 = !DILocation(line: 374, column: 2, scope: !15040, inlinedAt: !15082)
!15088 = !DILocation(line: 376, column: 14, scope: !15040, inlinedAt: !15082)
!15089 = !DILocation(line: 377, column: 9, scope: !15040, inlinedAt: !15082)
!15090 = !DILocation(line: 377, column: 16, scope: !15040, inlinedAt: !15082)
!15091 = !DILocation(line: 32, column: 18, scope: !15077)
!15092 = !DILocation(line: 32, column: 2, scope: !15077)
!15093 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !15094, file: !15094, line: 137, type: !15095, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15094 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!15095 = !DISubroutineType(types: !15096)
!15096 = !{!570, !2252, !2244, !594, !1990}
!15097 = !DILocalVariable(name: "s", arg: 1, scope: !15093, file: !15094, line: 137, type: !2252)
!15098 = !DILocation(line: 137, column: 54, scope: !15093)
!15099 = !DILocalVariable(name: "object", arg: 2, scope: !15093, file: !15094, line: 137, type: !2244)
!15100 = !DILocation(line: 137, column: 69, scope: !15093)
!15101 = !DILocalVariable(name: "size", arg: 3, scope: !15093, file: !15094, line: 138, type: !594)
!15102 = !DILocation(line: 138, column: 12, scope: !15093)
!15103 = !DILocalVariable(name: "flags", arg: 4, scope: !15093, file: !15094, line: 138, type: !1990)
!15104 = !DILocation(line: 138, column: 24, scope: !15093)
!15105 = !DILocation(line: 140, column: 17, scope: !15093)
!15106 = !DILocation(line: 140, column: 2, scope: !15093)
!15107 = distinct !DISubprogram(name: "HFC_outb_pcimem", scope: !3, file: !3, line: 278, type: !9430, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15108 = !DILocalVariable(name: "hc", arg: 1, scope: !15107, file: !3, line: 278, type: !9128)
!15109 = !DILocation(line: 278, column: 36, scope: !15107)
!15110 = !DILocalVariable(name: "reg", arg: 2, scope: !15107, file: !3, line: 278, type: !9432)
!15111 = !DILocation(line: 278, column: 47, scope: !15107)
!15112 = !DILocalVariable(name: "val", arg: 3, scope: !15107, file: !3, line: 278, type: !9432)
!15113 = !DILocation(line: 278, column: 59, scope: !15107)
!15114 = !DILocation(line: 281, column: 9, scope: !15107)
!15115 = !DILocation(line: 281, column: 14, scope: !15107)
!15116 = !DILocation(line: 281, column: 18, scope: !15107)
!15117 = !DILocation(line: 281, column: 32, scope: !15107)
!15118 = !DILocation(line: 281, column: 30, scope: !15107)
!15119 = !DILocation(line: 281, column: 2, scope: !15107)
!15120 = !DILocation(line: 282, column: 1, scope: !15107)
!15121 = distinct !DISubprogram(name: "HFC_inb_pcimem", scope: !3, file: !3, line: 287, type: !9436, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15122 = !DILocalVariable(name: "hc", arg: 1, scope: !15121, file: !3, line: 287, type: !9128)
!15123 = !DILocation(line: 287, column: 35, scope: !15121)
!15124 = !DILocalVariable(name: "reg", arg: 2, scope: !15121, file: !3, line: 287, type: !9432)
!15125 = !DILocation(line: 287, column: 46, scope: !15121)
!15126 = !DILocation(line: 290, column: 15, scope: !15121)
!15127 = !DILocation(line: 290, column: 19, scope: !15121)
!15128 = !DILocation(line: 290, column: 33, scope: !15121)
!15129 = !DILocation(line: 290, column: 31, scope: !15121)
!15130 = !DILocation(line: 290, column: 9, scope: !15121)
!15131 = !DILocation(line: 290, column: 2, scope: !15121)
!15132 = distinct !DISubprogram(name: "HFC_inw_pcimem", scope: !3, file: !3, line: 296, type: !9441, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15133 = !DILocalVariable(name: "hc", arg: 1, scope: !15132, file: !3, line: 296, type: !9128)
!15134 = !DILocation(line: 296, column: 35, scope: !15132)
!15135 = !DILocalVariable(name: "reg", arg: 2, scope: !15132, file: !3, line: 296, type: !9432)
!15136 = !DILocation(line: 296, column: 46, scope: !15132)
!15137 = !DILocation(line: 299, column: 15, scope: !15132)
!15138 = !DILocation(line: 299, column: 19, scope: !15132)
!15139 = !DILocation(line: 299, column: 33, scope: !15132)
!15140 = !DILocation(line: 299, column: 31, scope: !15132)
!15141 = !DILocation(line: 299, column: 9, scope: !15132)
!15142 = !DILocation(line: 299, column: 2, scope: !15132)
!15143 = distinct !DISubprogram(name: "HFC_wait_pcimem", scope: !3, file: !3, line: 305, type: !9447, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15144 = !DILocalVariable(name: "hc", arg: 1, scope: !15143, file: !3, line: 305, type: !9128)
!15145 = !DILocation(line: 305, column: 36, scope: !15143)
!15146 = !DILocation(line: 308, column: 2, scope: !15143)
!15147 = !DILocation(line: 308, column: 15, scope: !15143)
!15148 = !DILocation(line: 308, column: 19, scope: !15143)
!15149 = !DILocation(line: 308, column: 31, scope: !15143)
!15150 = !DILocation(line: 308, column: 9, scope: !15143)
!15151 = !DILocation(line: 308, column: 43, scope: !15143)
!15152 = !DILocation(line: 13, column: 2, scope: !15153, inlinedAt: !15155)
!15153 = distinct !DISubprogram(name: "rep_nop", scope: !15154, file: !15154, line: 11, type: !3704, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15154 = !DIFile(filename: "./arch/x86/include/asm/vdso/processor.h", directory: "/home/lizy2001/genbc/linux")
!15155 = distinct !DILocation(line: 18, column: 2, scope: !15156, inlinedAt: !15157)
!15156 = distinct !DISubprogram(name: "cpu_relax", scope: !15154, file: !15154, line: 16, type: !3704, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15157 = distinct !DILocation(line: 309, column: 3, scope: !15143)
!15158 = !{i32 1920925}
!15159 = distinct !{!15159, !15146, !15160}
!15160 = !DILocation(line: 309, column: 13, scope: !15143)
!15161 = !DILocation(line: 310, column: 1, scope: !15143)
!15162 = distinct !DISubprogram(name: "read_fifo_pcimem", scope: !3, file: !3, line: 514, type: !9452, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15163 = !DILocalVariable(name: "hc", arg: 1, scope: !15162, file: !3, line: 514, type: !9128)
!15164 = !DILocation(line: 514, column: 36, scope: !15162)
!15165 = !DILocalVariable(name: "data", arg: 2, scope: !15162, file: !3, line: 514, type: !9454)
!15166 = !DILocation(line: 514, column: 48, scope: !15162)
!15167 = !DILocalVariable(name: "len", arg: 3, scope: !15162, file: !3, line: 514, type: !37)
!15168 = !DILocation(line: 514, column: 58, scope: !15162)
!15169 = !DILocation(line: 516, column: 2, scope: !15162)
!15170 = !DILocation(line: 516, column: 9, scope: !15162)
!15171 = !DILocation(line: 516, column: 13, scope: !15162)
!15172 = !DILocation(line: 518, column: 4, scope: !15173)
!15173 = distinct !DILexicalBlock(scope: !15162, file: !3, line: 516, column: 19)
!15174 = !DILocation(line: 517, column: 11, scope: !15173)
!15175 = !DILocation(line: 517, column: 3, scope: !15173)
!15176 = !DILocation(line: 517, column: 16, scope: !15173)
!15177 = !DILocation(line: 519, column: 8, scope: !15173)
!15178 = !DILocation(line: 520, column: 7, scope: !15173)
!15179 = distinct !{!15179, !15169, !15180}
!15180 = !DILocation(line: 521, column: 2, scope: !15162)
!15181 = !DILocation(line: 522, column: 2, scope: !15162)
!15182 = !DILocation(line: 522, column: 9, scope: !15162)
!15183 = !DILocation(line: 522, column: 13, scope: !15162)
!15184 = !DILocation(line: 524, column: 4, scope: !15185)
!15185 = distinct !DILexicalBlock(scope: !15162, file: !3, line: 522, column: 19)
!15186 = !DILocation(line: 523, column: 11, scope: !15185)
!15187 = !DILocation(line: 523, column: 3, scope: !15185)
!15188 = !DILocation(line: 523, column: 16, scope: !15185)
!15189 = !DILocation(line: 525, column: 8, scope: !15185)
!15190 = !DILocation(line: 526, column: 7, scope: !15185)
!15191 = distinct !{!15191, !15181, !15192}
!15192 = !DILocation(line: 527, column: 2, scope: !15162)
!15193 = !DILocation(line: 528, column: 2, scope: !15162)
!15194 = !DILocation(line: 528, column: 9, scope: !15162)
!15195 = !DILocation(line: 529, column: 17, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15162, file: !3, line: 528, column: 14)
!15197 = !DILocation(line: 529, column: 21, scope: !15196)
!15198 = !DILocation(line: 529, column: 33, scope: !15196)
!15199 = !DILocation(line: 529, column: 11, scope: !15196)
!15200 = !DILocation(line: 529, column: 4, scope: !15196)
!15201 = !DILocation(line: 529, column: 9, scope: !15196)
!15202 = !DILocation(line: 530, column: 7, scope: !15196)
!15203 = !DILocation(line: 531, column: 6, scope: !15196)
!15204 = distinct !{!15204, !15193, !15205}
!15205 = !DILocation(line: 532, column: 2, scope: !15162)
!15206 = !DILocation(line: 533, column: 1, scope: !15162)
!15207 = distinct !DISubprogram(name: "write_fifo_pcimem", scope: !3, file: !3, line: 469, type: !9452, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15208 = !DILocalVariable(name: "hc", arg: 1, scope: !15207, file: !3, line: 469, type: !9128)
!15209 = !DILocation(line: 469, column: 37, scope: !15207)
!15210 = !DILocalVariable(name: "data", arg: 2, scope: !15207, file: !3, line: 469, type: !9454)
!15211 = !DILocation(line: 469, column: 49, scope: !15207)
!15212 = !DILocalVariable(name: "len", arg: 3, scope: !15207, file: !3, line: 469, type: !37)
!15213 = !DILocation(line: 469, column: 59, scope: !15207)
!15214 = !DILocation(line: 471, column: 2, scope: !15207)
!15215 = !DILocation(line: 471, column: 9, scope: !15207)
!15216 = !DILocation(line: 471, column: 13, scope: !15207)
!15217 = !DILocation(line: 472, column: 10, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 471, column: 19)
!15219 = !DILocation(line: 473, column: 10, scope: !15218)
!15220 = !DILocation(line: 473, column: 14, scope: !15218)
!15221 = !DILocation(line: 473, column: 26, scope: !15218)
!15222 = !DILocation(line: 472, column: 3, scope: !15218)
!15223 = !DILocation(line: 474, column: 8, scope: !15218)
!15224 = !DILocation(line: 475, column: 7, scope: !15218)
!15225 = distinct !{!15225, !15214, !15226}
!15226 = !DILocation(line: 476, column: 2, scope: !15207)
!15227 = !DILocation(line: 477, column: 2, scope: !15207)
!15228 = !DILocation(line: 477, column: 9, scope: !15207)
!15229 = !DILocation(line: 477, column: 13, scope: !15207)
!15230 = !DILocation(line: 478, column: 10, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 477, column: 19)
!15232 = !DILocation(line: 479, column: 10, scope: !15231)
!15233 = !DILocation(line: 479, column: 14, scope: !15231)
!15234 = !DILocation(line: 479, column: 26, scope: !15231)
!15235 = !DILocation(line: 478, column: 3, scope: !15231)
!15236 = !DILocation(line: 480, column: 8, scope: !15231)
!15237 = !DILocation(line: 481, column: 7, scope: !15231)
!15238 = distinct !{!15238, !15227, !15239}
!15239 = !DILocation(line: 482, column: 2, scope: !15207)
!15240 = !DILocation(line: 483, column: 2, scope: !15207)
!15241 = !DILocation(line: 483, column: 9, scope: !15207)
!15242 = !DILocation(line: 484, column: 11, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 483, column: 14)
!15244 = !DILocation(line: 484, column: 10, scope: !15243)
!15245 = !DILocation(line: 484, column: 17, scope: !15243)
!15246 = !DILocation(line: 484, column: 21, scope: !15243)
!15247 = !DILocation(line: 484, column: 33, scope: !15243)
!15248 = !DILocation(line: 484, column: 3, scope: !15243)
!15249 = !DILocation(line: 485, column: 7, scope: !15243)
!15250 = !DILocation(line: 486, column: 6, scope: !15243)
!15251 = distinct !{!15251, !15240, !15252}
!15252 = !DILocation(line: 487, column: 2, scope: !15207)
!15253 = !DILocation(line: 488, column: 1, scope: !15207)
!15254 = distinct !DISubprogram(name: "HFC_outb_regio", scope: !3, file: !3, line: 318, type: !9430, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15255 = !DILocalVariable(name: "hc", arg: 1, scope: !15254, file: !3, line: 318, type: !9128)
!15256 = !DILocation(line: 318, column: 35, scope: !15254)
!15257 = !DILocalVariable(name: "reg", arg: 2, scope: !15254, file: !3, line: 318, type: !9432)
!15258 = !DILocation(line: 318, column: 46, scope: !15254)
!15259 = !DILocalVariable(name: "val", arg: 3, scope: !15254, file: !3, line: 318, type: !9432)
!15260 = !DILocation(line: 318, column: 58, scope: !15254)
!15261 = !DILocation(line: 321, column: 7, scope: !15254)
!15262 = !DILocation(line: 321, column: 12, scope: !15254)
!15263 = !DILocation(line: 321, column: 16, scope: !15254)
!15264 = !DILocation(line: 321, column: 27, scope: !15254)
!15265 = !DILocation(line: 321, column: 2, scope: !15254)
!15266 = !DILocation(line: 322, column: 7, scope: !15254)
!15267 = !DILocation(line: 322, column: 12, scope: !15254)
!15268 = !DILocation(line: 322, column: 16, scope: !15254)
!15269 = !DILocation(line: 322, column: 2, scope: !15254)
!15270 = !DILocation(line: 323, column: 1, scope: !15254)
!15271 = distinct !DISubprogram(name: "HFC_inb_regio", scope: !3, file: !3, line: 328, type: !9436, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15272 = !DILocalVariable(name: "hc", arg: 1, scope: !15271, file: !3, line: 328, type: !9128)
!15273 = !DILocation(line: 328, column: 34, scope: !15271)
!15274 = !DILocalVariable(name: "reg", arg: 2, scope: !15271, file: !3, line: 328, type: !9432)
!15275 = !DILocation(line: 328, column: 45, scope: !15271)
!15276 = !DILocation(line: 331, column: 7, scope: !15271)
!15277 = !DILocation(line: 331, column: 12, scope: !15271)
!15278 = !DILocation(line: 331, column: 16, scope: !15271)
!15279 = !DILocation(line: 331, column: 27, scope: !15271)
!15280 = !DILocation(line: 331, column: 2, scope: !15271)
!15281 = !DILocation(line: 332, column: 13, scope: !15271)
!15282 = !DILocation(line: 332, column: 17, scope: !15271)
!15283 = !DILocation(line: 332, column: 9, scope: !15271)
!15284 = !DILocation(line: 332, column: 2, scope: !15271)
!15285 = distinct !DISubprogram(name: "HFC_inw_regio", scope: !3, file: !3, line: 338, type: !9441, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15286 = !DILocalVariable(name: "hc", arg: 1, scope: !15285, file: !3, line: 338, type: !9128)
!15287 = !DILocation(line: 338, column: 34, scope: !15285)
!15288 = !DILocalVariable(name: "reg", arg: 2, scope: !15285, file: !3, line: 338, type: !9432)
!15289 = !DILocation(line: 338, column: 45, scope: !15285)
!15290 = !DILocation(line: 341, column: 7, scope: !15285)
!15291 = !DILocation(line: 341, column: 12, scope: !15285)
!15292 = !DILocation(line: 341, column: 16, scope: !15285)
!15293 = !DILocation(line: 341, column: 27, scope: !15285)
!15294 = !DILocation(line: 341, column: 2, scope: !15285)
!15295 = !DILocation(line: 342, column: 13, scope: !15285)
!15296 = !DILocation(line: 342, column: 17, scope: !15285)
!15297 = !DILocation(line: 342, column: 9, scope: !15285)
!15298 = !DILocation(line: 342, column: 2, scope: !15285)
!15299 = distinct !DISubprogram(name: "HFC_wait_regio", scope: !3, file: !3, line: 348, type: !9447, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15300 = !DILocalVariable(name: "hc", arg: 1, scope: !15299, file: !3, line: 348, type: !9128)
!15301 = !DILocation(line: 348, column: 35, scope: !15299)
!15302 = !DILocation(line: 351, column: 17, scope: !15299)
!15303 = !DILocation(line: 351, column: 21, scope: !15299)
!15304 = !DILocation(line: 351, column: 32, scope: !15299)
!15305 = !DILocation(line: 351, column: 2, scope: !15299)
!15306 = !DILocation(line: 352, column: 2, scope: !15299)
!15307 = !DILocation(line: 352, column: 13, scope: !15299)
!15308 = !DILocation(line: 352, column: 17, scope: !15299)
!15309 = !DILocation(line: 352, column: 9, scope: !15299)
!15310 = !DILocation(line: 352, column: 29, scope: !15299)
!15311 = !DILocation(line: 13, column: 2, scope: !15153, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 18, column: 2, scope: !15156, inlinedAt: !15313)
!15313 = distinct !DILocation(line: 353, column: 3, scope: !15299)
!15314 = distinct !{!15314, !15306, !15315}
!15315 = !DILocation(line: 353, column: 13, scope: !15299)
!15316 = !DILocation(line: 354, column: 1, scope: !15299)
!15317 = distinct !DISubprogram(name: "read_fifo_regio", scope: !3, file: !3, line: 492, type: !9452, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15318 = !DILocalVariable(name: "hc", arg: 1, scope: !15317, file: !3, line: 492, type: !9128)
!15319 = !DILocation(line: 492, column: 35, scope: !15317)
!15320 = !DILocalVariable(name: "data", arg: 2, scope: !15317, file: !3, line: 492, type: !9454)
!15321 = !DILocation(line: 492, column: 47, scope: !15317)
!15322 = !DILocalVariable(name: "len", arg: 3, scope: !15317, file: !3, line: 492, type: !37)
!15323 = !DILocation(line: 492, column: 57, scope: !15317)
!15324 = !DILocation(line: 494, column: 22, scope: !15317)
!15325 = !DILocation(line: 494, column: 26, scope: !15317)
!15326 = !DILocation(line: 494, column: 38, scope: !15317)
!15327 = !DILocation(line: 494, column: 21, scope: !15317)
!15328 = !DILocation(line: 494, column: 2, scope: !15317)
!15329 = !DILocation(line: 495, column: 2, scope: !15317)
!15330 = !DILocation(line: 495, column: 9, scope: !15317)
!15331 = !DILocation(line: 495, column: 13, scope: !15317)
!15332 = !DILocation(line: 496, column: 18, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15317, file: !3, line: 495, column: 19)
!15334 = !DILocation(line: 496, column: 11, scope: !15333)
!15335 = !DILocation(line: 496, column: 3, scope: !15333)
!15336 = !DILocation(line: 496, column: 16, scope: !15333)
!15337 = !DILocation(line: 497, column: 8, scope: !15333)
!15338 = !DILocation(line: 498, column: 7, scope: !15333)
!15339 = distinct !{!15339, !15329, !15340}
!15340 = !DILocation(line: 499, column: 2, scope: !15317)
!15341 = !DILocation(line: 500, column: 2, scope: !15317)
!15342 = !DILocation(line: 500, column: 9, scope: !15317)
!15343 = !DILocation(line: 500, column: 13, scope: !15317)
!15344 = !DILocation(line: 501, column: 18, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15317, file: !3, line: 500, column: 19)
!15346 = !DILocation(line: 501, column: 11, scope: !15345)
!15347 = !DILocation(line: 501, column: 3, scope: !15345)
!15348 = !DILocation(line: 501, column: 16, scope: !15345)
!15349 = !DILocation(line: 502, column: 8, scope: !15345)
!15350 = !DILocation(line: 503, column: 7, scope: !15345)
!15351 = distinct !{!15351, !15341, !15352}
!15352 = !DILocation(line: 504, column: 2, scope: !15317)
!15353 = !DILocation(line: 505, column: 2, scope: !15317)
!15354 = !DILocation(line: 505, column: 9, scope: !15317)
!15355 = !DILocation(line: 506, column: 15, scope: !15356)
!15356 = distinct !DILexicalBlock(scope: !15317, file: !3, line: 505, column: 14)
!15357 = !DILocation(line: 506, column: 19, scope: !15356)
!15358 = !DILocation(line: 506, column: 11, scope: !15356)
!15359 = !DILocation(line: 506, column: 4, scope: !15356)
!15360 = !DILocation(line: 506, column: 9, scope: !15356)
!15361 = !DILocation(line: 507, column: 7, scope: !15356)
!15362 = !DILocation(line: 508, column: 6, scope: !15356)
!15363 = distinct !{!15363, !15353, !15364}
!15364 = !DILocation(line: 509, column: 2, scope: !15317)
!15365 = !DILocation(line: 510, column: 1, scope: !15317)
!15366 = distinct !DISubprogram(name: "write_fifo_regio", scope: !3, file: !3, line: 448, type: !9452, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15367 = !DILocalVariable(name: "hc", arg: 1, scope: !15366, file: !3, line: 448, type: !9128)
!15368 = !DILocation(line: 448, column: 36, scope: !15366)
!15369 = !DILocalVariable(name: "data", arg: 2, scope: !15366, file: !3, line: 448, type: !9454)
!15370 = !DILocation(line: 448, column: 48, scope: !15366)
!15371 = !DILocalVariable(name: "len", arg: 3, scope: !15366, file: !3, line: 448, type: !37)
!15372 = !DILocation(line: 448, column: 58, scope: !15366)
!15373 = !DILocation(line: 450, column: 22, scope: !15366)
!15374 = !DILocation(line: 450, column: 26, scope: !15366)
!15375 = !DILocation(line: 450, column: 38, scope: !15366)
!15376 = !DILocation(line: 450, column: 21, scope: !15366)
!15377 = !DILocation(line: 450, column: 2, scope: !15366)
!15378 = !DILocation(line: 451, column: 2, scope: !15366)
!15379 = !DILocation(line: 451, column: 9, scope: !15366)
!15380 = !DILocation(line: 451, column: 13, scope: !15366)
!15381 = !DILocation(line: 452, column: 8, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15366, file: !3, line: 451, column: 19)
!15383 = !DILocation(line: 452, column: 35, scope: !15382)
!15384 = !DILocation(line: 452, column: 39, scope: !15382)
!15385 = !DILocation(line: 452, column: 3, scope: !15382)
!15386 = !DILocation(line: 453, column: 8, scope: !15382)
!15387 = !DILocation(line: 454, column: 7, scope: !15382)
!15388 = distinct !{!15388, !15378, !15389}
!15389 = !DILocation(line: 455, column: 2, scope: !15366)
!15390 = !DILocation(line: 456, column: 2, scope: !15366)
!15391 = !DILocation(line: 456, column: 9, scope: !15366)
!15392 = !DILocation(line: 456, column: 13, scope: !15366)
!15393 = !DILocation(line: 457, column: 8, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15366, file: !3, line: 456, column: 19)
!15395 = !DILocation(line: 457, column: 35, scope: !15394)
!15396 = !DILocation(line: 457, column: 39, scope: !15394)
!15397 = !DILocation(line: 457, column: 3, scope: !15394)
!15398 = !DILocation(line: 458, column: 8, scope: !15394)
!15399 = !DILocation(line: 459, column: 7, scope: !15394)
!15400 = distinct !{!15400, !15390, !15401}
!15401 = !DILocation(line: 460, column: 2, scope: !15366)
!15402 = !DILocation(line: 461, column: 2, scope: !15366)
!15403 = !DILocation(line: 461, column: 9, scope: !15366)
!15404 = !DILocation(line: 462, column: 9, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15366, file: !3, line: 461, column: 14)
!15406 = !DILocation(line: 462, column: 8, scope: !15405)
!15407 = !DILocation(line: 462, column: 15, scope: !15405)
!15408 = !DILocation(line: 462, column: 19, scope: !15405)
!15409 = !DILocation(line: 462, column: 3, scope: !15405)
!15410 = !DILocation(line: 463, column: 7, scope: !15405)
!15411 = !DILocation(line: 464, column: 6, scope: !15405)
!15412 = distinct !{!15412, !15402, !15413}
!15413 = !DILocation(line: 465, column: 2, scope: !15366)
!15414 = !DILocation(line: 466, column: 1, scope: !15366)
!15415 = distinct !DISubprogram(name: "writeb", scope: !12167, file: !12167, line: 65, type: !15416, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15416 = !DISubroutineType(types: !15417)
!15417 = !{null, !494, !12177}
!15418 = !DILocalVariable(name: "val", arg: 1, scope: !15415, file: !12167, line: 65, type: !494)
!15419 = !DILocation(line: 65, column: 1, scope: !15415)
!15420 = !DILocalVariable(name: "addr", arg: 2, scope: !15415, file: !12167, line: 65, type: !12177)
!15421 = !{i32 -2143190516}
!15422 = distinct !DISubprogram(name: "readb", scope: !12167, file: !12167, line: 57, type: !15423, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15423 = !DISubroutineType(types: !15424)
!15424 = !{!494, !11758}
!15425 = !DILocalVariable(name: "addr", arg: 1, scope: !15422, file: !12167, line: 57, type: !11758)
!15426 = !DILocation(line: 57, column: 1, scope: !15422)
!15427 = !DILocalVariable(name: "ret", scope: !15422, file: !12167, line: 57, type: !494)
!15428 = !{i32 -2143192970}
!15429 = distinct !DISubprogram(name: "readw", scope: !12167, file: !12167, line: 58, type: !15430, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15430 = !DISubroutineType(types: !15431)
!15431 = !{!477, !11758}
!15432 = !DILocalVariable(name: "addr", arg: 1, scope: !15429, file: !12167, line: 58, type: !11758)
!15433 = !DILocation(line: 58, column: 1, scope: !15429)
!15434 = !DILocalVariable(name: "ret", scope: !15429, file: !12167, line: 58, type: !477)
!15435 = !{i32 -2143192556}
!15436 = distinct !DISubprogram(name: "writew", scope: !12167, file: !12167, line: 66, type: !15437, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15437 = !DISubroutineType(types: !15438)
!15438 = !{null, !477, !12177}
!15439 = !DILocalVariable(name: "val", arg: 1, scope: !15436, file: !12167, line: 66, type: !477)
!15440 = !DILocation(line: 66, column: 1, scope: !15436)
!15441 = !DILocalVariable(name: "addr", arg: 2, scope: !15436, file: !12167, line: 66, type: !12177)
!15442 = !{i32 -2143190132}
!15443 = distinct !DISubprogram(name: "outb", scope: !12167, file: !12167, line: 334, type: !15444, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15444 = !DISubroutineType(types: !15445)
!15445 = !{null, !494, !37}
!15446 = !DILocalVariable(name: "value", arg: 1, scope: !15443, file: !12167, line: 334, type: !494)
!15447 = !DILocation(line: 334, column: 1, scope: !15443)
!15448 = !DILocalVariable(name: "port", arg: 2, scope: !15443, file: !12167, line: 334, type: !37)
!15449 = !{i32 -2143179876}
!15450 = distinct !DISubprogram(name: "inw", scope: !12167, file: !12167, line: 335, type: !15451, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15451 = !DISubroutineType(types: !15452)
!15452 = !{!477, !37}
!15453 = !DILocalVariable(name: "port", arg: 1, scope: !15450, file: !12167, line: 335, type: !37)
!15454 = !DILocation(line: 335, column: 1, scope: !15450)
!15455 = !DILocalVariable(name: "value", scope: !15450, file: !12167, line: 335, type: !477)
!15456 = !{i32 -2143176931}
!15457 = distinct !DISubprogram(name: "inl", scope: !12167, file: !12167, line: 336, type: !15458, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15458 = !DISubroutineType(types: !15459)
!15459 = !{!7, !37}
!15460 = !DILocalVariable(name: "port", arg: 1, scope: !15457, file: !12167, line: 336, type: !37)
!15461 = !DILocation(line: 336, column: 1, scope: !15457)
!15462 = !DILocalVariable(name: "value", scope: !15457, file: !12167, line: 336, type: !7)
!15463 = !{i32 -2143174178}
!15464 = distinct !DISubprogram(name: "ph_state_change", scope: !3, file: !3, line: 3718, type: !9599, scopeLine: 3719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15465 = !DILocalVariable(name: "dch", arg: 1, scope: !15464, file: !3, line: 3718, type: !9538)
!15466 = !DILocation(line: 3718, column: 34, scope: !15464)
!15467 = !DILocalVariable(name: "hc", scope: !15464, file: !3, line: 3720, type: !9128)
!15468 = !DILocation(line: 3720, column: 20, scope: !15464)
!15469 = !DILocalVariable(name: "ch", scope: !15464, file: !3, line: 3721, type: !37)
!15470 = !DILocation(line: 3721, column: 6, scope: !15464)
!15471 = !DILocalVariable(name: "i", scope: !15464, file: !3, line: 3721, type: !37)
!15472 = !DILocation(line: 3721, column: 10, scope: !15464)
!15473 = !DILocation(line: 3723, column: 7, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !15464, file: !3, line: 3723, column: 6)
!15475 = !DILocation(line: 3723, column: 6, scope: !15464)
!15476 = !DILocation(line: 3724, column: 3, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15474, file: !3, line: 3723, column: 12)
!15478 = !DILocation(line: 3725, column: 3, scope: !15477)
!15479 = !DILocation(line: 3727, column: 7, scope: !15464)
!15480 = !DILocation(line: 3727, column: 12, scope: !15464)
!15481 = !DILocation(line: 3727, column: 5, scope: !15464)
!15482 = !DILocation(line: 3728, column: 7, scope: !15464)
!15483 = !DILocation(line: 3728, column: 12, scope: !15464)
!15484 = !DILocation(line: 3728, column: 5, scope: !15464)
!15485 = !DILocation(line: 3730, column: 6, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15464, file: !3, line: 3730, column: 6)
!15487 = !DILocation(line: 3730, column: 10, scope: !15486)
!15488 = !DILocation(line: 3730, column: 16, scope: !15486)
!15489 = !DILocation(line: 3730, column: 6, scope: !15464)
!15490 = !DILocation(line: 3731, column: 7, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15492, file: !3, line: 3731, column: 7)
!15492 = distinct !DILexicalBlock(scope: !15486, file: !3, line: 3730, column: 32)
!15493 = !DILocation(line: 3731, column: 12, scope: !15491)
!15494 = !DILocation(line: 3731, column: 16, scope: !15491)
!15495 = !DILocation(line: 3731, column: 18, scope: !15491)
!15496 = !DILocation(line: 3731, column: 27, scope: !15491)
!15497 = !DILocation(line: 3731, column: 7, scope: !15492)
!15498 = !DILocation(line: 3732, column: 8, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15500, file: !3, line: 3732, column: 8)
!15500 = distinct !DILexicalBlock(scope: !15491, file: !3, line: 3731, column: 44)
!15501 = !DILocation(line: 3732, column: 14, scope: !15499)
!15502 = !DILocation(line: 3732, column: 8, scope: !15500)
!15503 = !DILocation(line: 3735, column: 22, scope: !15499)
!15504 = !DILocation(line: 3735, column: 26, scope: !15499)
!15505 = !DILocation(line: 3735, column: 30, scope: !15499)
!15506 = !DILocation(line: 3735, column: 35, scope: !15499)
!15507 = !DILocation(line: 3733, column: 5, scope: !15499)
!15508 = !DILocation(line: 3736, column: 3, scope: !15500)
!15509 = !DILocation(line: 3737, column: 8, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15511, file: !3, line: 3737, column: 8)
!15511 = distinct !DILexicalBlock(scope: !15491, file: !3, line: 3736, column: 10)
!15512 = !DILocation(line: 3737, column: 14, scope: !15510)
!15513 = !DILocation(line: 3737, column: 8, scope: !15511)
!15514 = !DILocation(line: 3740, column: 22, scope: !15510)
!15515 = !DILocation(line: 3740, column: 26, scope: !15510)
!15516 = !DILocation(line: 3740, column: 30, scope: !15510)
!15517 = !DILocation(line: 3740, column: 35, scope: !15510)
!15518 = !DILocation(line: 3738, column: 5, scope: !15510)
!15519 = !DILocation(line: 3742, column: 11, scope: !15492)
!15520 = !DILocation(line: 3742, column: 16, scope: !15492)
!15521 = !DILocation(line: 3742, column: 3, scope: !15492)
!15522 = !DILocation(line: 3744, column: 8, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15524, file: !3, line: 3744, column: 8)
!15524 = distinct !DILexicalBlock(scope: !15492, file: !3, line: 3742, column: 23)
!15525 = !DILocation(line: 3744, column: 12, scope: !15523)
!15526 = !DILocation(line: 3744, column: 21, scope: !15523)
!15527 = !DILocation(line: 3744, column: 8, scope: !15524)
!15528 = !DILocation(line: 3745, column: 12, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15530, file: !3, line: 3745, column: 5)
!15530 = distinct !DILexicalBlock(scope: !15523, file: !3, line: 3744, column: 27)
!15531 = !DILocation(line: 3745, column: 10, scope: !15529)
!15532 = !DILocation(line: 3745, column: 17, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15529, file: !3, line: 3745, column: 5)
!15534 = !DILocation(line: 3745, column: 19, scope: !15533)
!15535 = !DILocation(line: 3745, column: 5, scope: !15529)
!15536 = !DILocation(line: 3747, column: 6, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15533, file: !3, line: 3745, column: 31)
!15538 = !DILocation(line: 3749, column: 6, scope: !15537)
!15539 = !DILocation(line: 3750, column: 6, scope: !15537)
!15540 = !DILocation(line: 3752, column: 6, scope: !15537)
!15541 = !DILocation(line: 3753, column: 5, scope: !15537)
!15542 = !DILocation(line: 3745, column: 27, scope: !15533)
!15543 = !DILocation(line: 3745, column: 5, scope: !15533)
!15544 = distinct !{!15544, !15535, !15545}
!15545 = !DILocation(line: 3753, column: 5, scope: !15529)
!15546 = !DILocation(line: 3754, column: 4, scope: !15530)
!15547 = !DILocation(line: 3755, column: 34, scope: !15524)
!15548 = !DILocation(line: 3755, column: 39, scope: !15524)
!15549 = !DILocation(line: 3755, column: 4, scope: !15524)
!15550 = !DILocation(line: 3756, column: 17, scope: !15524)
!15551 = !DILocation(line: 3756, column: 22, scope: !15524)
!15552 = !DILocation(line: 3756, column: 26, scope: !15524)
!15553 = !DILocation(line: 3756, column: 4, scope: !15524)
!15554 = !DILocation(line: 3758, column: 4, scope: !15524)
!15555 = !DILocation(line: 3761, column: 8, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15524, file: !3, line: 3761, column: 8)
!15557 = !DILocation(line: 3761, column: 12, scope: !15556)
!15558 = !DILocation(line: 3761, column: 21, scope: !15556)
!15559 = !DILocation(line: 3761, column: 8, scope: !15524)
!15560 = !DILocation(line: 3762, column: 5, scope: !15556)
!15561 = !DILocation(line: 3763, column: 36, scope: !15524)
!15562 = !DILocation(line: 3763, column: 41, scope: !15524)
!15563 = !DILocation(line: 3763, column: 4, scope: !15524)
!15564 = !DILocation(line: 3764, column: 17, scope: !15524)
!15565 = !DILocation(line: 3764, column: 22, scope: !15524)
!15566 = !DILocation(line: 3764, column: 26, scope: !15524)
!15567 = !DILocation(line: 3764, column: 4, scope: !15524)
!15568 = !DILocation(line: 3766, column: 3, scope: !15524)
!15569 = !DILocation(line: 3767, column: 18, scope: !15492)
!15570 = !DILocation(line: 3767, column: 23, scope: !15492)
!15571 = !DILocation(line: 3767, column: 3, scope: !15492)
!15572 = !DILocation(line: 3767, column: 7, scope: !15492)
!15573 = !DILocation(line: 3767, column: 16, scope: !15492)
!15574 = !DILocation(line: 3768, column: 2, scope: !15492)
!15575 = !DILocation(line: 3769, column: 7, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !15577, file: !3, line: 3769, column: 7)
!15577 = distinct !DILexicalBlock(scope: !15486, file: !3, line: 3768, column: 9)
!15578 = !DILocation(line: 3769, column: 12, scope: !15576)
!15579 = !DILocation(line: 3769, column: 16, scope: !15576)
!15580 = !DILocation(line: 3769, column: 18, scope: !15576)
!15581 = !DILocation(line: 3769, column: 27, scope: !15576)
!15582 = !DILocation(line: 3769, column: 7, scope: !15577)
!15583 = !DILocation(line: 3770, column: 8, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 3770, column: 8)
!15585 = distinct !DILexicalBlock(scope: !15576, file: !3, line: 3769, column: 44)
!15586 = !DILocation(line: 3770, column: 14, scope: !15584)
!15587 = !DILocation(line: 3770, column: 8, scope: !15585)
!15588 = !DILocation(line: 3773, column: 22, scope: !15584)
!15589 = !DILocation(line: 3773, column: 27, scope: !15584)
!15590 = !DILocation(line: 3771, column: 5, scope: !15584)
!15591 = !DILocation(line: 3774, column: 12, scope: !15585)
!15592 = !DILocation(line: 3774, column: 17, scope: !15585)
!15593 = !DILocation(line: 3774, column: 4, scope: !15585)
!15594 = !DILocation(line: 3776, column: 14, scope: !15595)
!15595 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 3774, column: 24)
!15596 = !DILocation(line: 3776, column: 19, scope: !15595)
!15597 = !DILocation(line: 3776, column: 5, scope: !15595)
!15598 = !DILocation(line: 3777, column: 5, scope: !15595)
!15599 = !DILocation(line: 3779, column: 14, scope: !15595)
!15600 = !DILocation(line: 3779, column: 19, scope: !15595)
!15601 = !DILocation(line: 3779, column: 5, scope: !15595)
!15602 = !DILocation(line: 3780, column: 5, scope: !15595)
!15603 = !DILocation(line: 3783, column: 14, scope: !15595)
!15604 = !DILocation(line: 3783, column: 19, scope: !15595)
!15605 = !DILocation(line: 3783, column: 5, scope: !15595)
!15606 = !DILocation(line: 3784, column: 5, scope: !15595)
!15607 = !DILocation(line: 3786, column: 14, scope: !15595)
!15608 = !DILocation(line: 3786, column: 19, scope: !15595)
!15609 = !DILocation(line: 3786, column: 5, scope: !15595)
!15610 = !DILocation(line: 3787, column: 5, scope: !15595)
!15611 = !DILocation(line: 3789, column: 14, scope: !15595)
!15612 = !DILocation(line: 3789, column: 19, scope: !15595)
!15613 = !DILocation(line: 3789, column: 5, scope: !15595)
!15614 = !DILocation(line: 3790, column: 5, scope: !15595)
!15615 = !DILocation(line: 3792, column: 3, scope: !15585)
!15616 = !DILocation(line: 3793, column: 8, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15618, file: !3, line: 3793, column: 8)
!15618 = distinct !DILexicalBlock(scope: !15576, file: !3, line: 3792, column: 10)
!15619 = !DILocation(line: 3793, column: 14, scope: !15617)
!15620 = !DILocation(line: 3793, column: 8, scope: !15618)
!15621 = !DILocation(line: 3795, column: 22, scope: !15617)
!15622 = !DILocation(line: 3795, column: 27, scope: !15617)
!15623 = !DILocation(line: 3794, column: 5, scope: !15617)
!15624 = !DILocation(line: 3796, column: 12, scope: !15618)
!15625 = !DILocation(line: 3796, column: 17, scope: !15618)
!15626 = !DILocation(line: 3796, column: 4, scope: !15618)
!15627 = !DILocation(line: 3798, column: 9, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15629, file: !3, line: 3798, column: 9)
!15629 = distinct !DILexicalBlock(scope: !15618, file: !3, line: 3796, column: 24)
!15630 = !DILocation(line: 3798, column: 13, scope: !15628)
!15631 = !DILocation(line: 3798, column: 18, scope: !15628)
!15632 = !DILocation(line: 3798, column: 22, scope: !15628)
!15633 = !DILocation(line: 3798, column: 31, scope: !15628)
!15634 = !DILocation(line: 3798, column: 9, scope: !15629)
!15635 = !DILocation(line: 3799, column: 6, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15628, file: !3, line: 3798, column: 37)
!15637 = !DILocation(line: 3799, column: 10, scope: !15636)
!15638 = !DILocation(line: 3799, column: 15, scope: !15636)
!15639 = !DILocation(line: 3799, column: 19, scope: !15636)
!15640 = !DILocation(line: 3799, column: 28, scope: !15636)
!15641 = !DILocation(line: 3800, column: 6, scope: !15636)
!15642 = !DILocation(line: 3803, column: 6, scope: !15643)
!15643 = distinct !DILexicalBlock(scope: !15644, file: !3, line: 3803, column: 6)
!15644 = distinct !DILexicalBlock(scope: !15645, file: !3, line: 3803, column: 6)
!15645 = distinct !DILexicalBlock(scope: !15646, file: !3, line: 3803, column: 6)
!15646 = distinct !DILexicalBlock(scope: !15636, file: !3, line: 3803, column: 6)
!15647 = !DILocation(line: 3804, column: 6, scope: !15636)
!15648 = !DILocation(line: 3806, column: 6, scope: !15649)
!15649 = distinct !DILexicalBlock(scope: !15650, file: !3, line: 3806, column: 6)
!15650 = distinct !DILexicalBlock(scope: !15651, file: !3, line: 3806, column: 6)
!15651 = distinct !DILexicalBlock(scope: !15652, file: !3, line: 3806, column: 6)
!15652 = distinct !DILexicalBlock(scope: !15636, file: !3, line: 3806, column: 6)
!15653 = !DILocation(line: 3807, column: 6, scope: !15636)
!15654 = !DILocation(line: 3808, column: 6, scope: !15636)
!15655 = !DILocation(line: 3808, column: 11, scope: !15636)
!15656 = !DILocation(line: 3808, column: 17, scope: !15636)
!15657 = !DILocation(line: 3809, column: 5, scope: !15636)
!15658 = !DILocation(line: 3812, column: 19, scope: !15659)
!15659 = distinct !DILexicalBlock(scope: !15628, file: !3, line: 3809, column: 12)
!15660 = !DILocation(line: 3812, column: 7, scope: !15659)
!15661 = !DILocation(line: 3812, column: 31, scope: !15659)
!15662 = !DILocation(line: 3811, column: 6, scope: !15659)
!15663 = !DILocation(line: 3811, column: 10, scope: !15659)
!15664 = !DILocation(line: 3811, column: 15, scope: !15659)
!15665 = !DILocation(line: 3811, column: 19, scope: !15659)
!15666 = !DILocation(line: 3811, column: 28, scope: !15659)
!15667 = !DILocation(line: 3813, column: 6, scope: !15659)
!15668 = !DILocation(line: 3816, column: 6, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15670, file: !3, line: 3816, column: 6)
!15670 = distinct !DILexicalBlock(scope: !15671, file: !3, line: 3816, column: 6)
!15671 = distinct !DILexicalBlock(scope: !15672, file: !3, line: 3816, column: 6)
!15672 = distinct !DILexicalBlock(scope: !15659, file: !3, line: 3816, column: 6)
!15673 = !DILocation(line: 3818, column: 6, scope: !15659)
!15674 = !DILocation(line: 3821, column: 5, scope: !15629)
!15675 = !DILocation(line: 3823, column: 5, scope: !15629)
!15676 = !DILocation(line: 3823, column: 9, scope: !15629)
!15677 = !DILocation(line: 3823, column: 14, scope: !15629)
!15678 = !DILocation(line: 3823, column: 18, scope: !15629)
!15679 = !DILocation(line: 3823, column: 27, scope: !15629)
!15680 = !DILocation(line: 3824, column: 37, scope: !15629)
!15681 = !DILocation(line: 3824, column: 42, scope: !15629)
!15682 = !DILocation(line: 3824, column: 5, scope: !15629)
!15683 = !DILocation(line: 3825, column: 18, scope: !15629)
!15684 = !DILocation(line: 3825, column: 23, scope: !15629)
!15685 = !DILocation(line: 3825, column: 27, scope: !15629)
!15686 = !DILocation(line: 3825, column: 5, scope: !15629)
!15687 = !DILocation(line: 3827, column: 5, scope: !15629)
!15688 = !DILocation(line: 3829, column: 5, scope: !15629)
!15689 = !DILocation(line: 3829, column: 9, scope: !15629)
!15690 = !DILocation(line: 3829, column: 14, scope: !15629)
!15691 = !DILocation(line: 3829, column: 18, scope: !15629)
!15692 = !DILocation(line: 3829, column: 27, scope: !15629)
!15693 = !DILocation(line: 3830, column: 5, scope: !15629)
!15694 = !DILocation(line: 3832, column: 5, scope: !15629)
!15695 = !DILocation(line: 3832, column: 9, scope: !15629)
!15696 = !DILocation(line: 3832, column: 14, scope: !15629)
!15697 = !DILocation(line: 3832, column: 18, scope: !15629)
!15698 = !DILocation(line: 3832, column: 27, scope: !15629)
!15699 = !DILocation(line: 3833, column: 35, scope: !15629)
!15700 = !DILocation(line: 3833, column: 40, scope: !15629)
!15701 = !DILocation(line: 3833, column: 5, scope: !15629)
!15702 = !DILocation(line: 3834, column: 18, scope: !15629)
!15703 = !DILocation(line: 3834, column: 23, scope: !15629)
!15704 = !DILocation(line: 3834, column: 27, scope: !15629)
!15705 = !DILocation(line: 3834, column: 5, scope: !15629)
!15706 = !DILocation(line: 3836, column: 5, scope: !15629)
!15707 = !DILocation(line: 3840, column: 1, scope: !15464)
!15708 = distinct !DISubprogram(name: "handle_dmsg", scope: !3, file: !3, line: 3325, type: !9578, scopeLine: 3326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15709 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !15710)
!15710 = distinct !DILocation(line: 3428, column: 4, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15712, file: !3, line: 3388, column: 44)
!15712 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 3388, column: 7)
!15713 = distinct !DILexicalBlock(scope: !15708, file: !3, line: 3335, column: 20)
!15714 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !15710)
!15715 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !15716)
!15716 = distinct !DILocation(line: 3389, column: 4, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15718, file: !3, line: 3389, column: 4)
!15718 = distinct !DILexicalBlock(scope: !15719, file: !3, line: 3389, column: 4)
!15719 = distinct !DILexicalBlock(scope: !15720, file: !3, line: 3389, column: 4)
!15720 = distinct !DILexicalBlock(scope: !15721, file: !3, line: 3389, column: 4)
!15721 = distinct !DILexicalBlock(scope: !15711, file: !3, line: 3389, column: 4)
!15722 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !15723)
!15723 = distinct !DILocation(line: 3382, column: 4, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15725, file: !3, line: 3354, column: 44)
!15725 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 3354, column: 7)
!15726 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !15723)
!15727 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !15728)
!15728 = distinct !DILocation(line: 3355, column: 4, scope: !15729)
!15729 = distinct !DILexicalBlock(scope: !15730, file: !3, line: 3355, column: 4)
!15730 = distinct !DILexicalBlock(scope: !15731, file: !3, line: 3355, column: 4)
!15731 = distinct !DILexicalBlock(scope: !15732, file: !3, line: 3355, column: 4)
!15732 = distinct !DILexicalBlock(scope: !15733, file: !3, line: 3355, column: 4)
!15733 = distinct !DILexicalBlock(scope: !15724, file: !3, line: 3355, column: 4)
!15734 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !15735)
!15735 = distinct !DILocation(line: 3351, column: 4, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 3341, column: 7)
!15737 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !15735)
!15738 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !15739)
!15739 = distinct !DILocation(line: 3348, column: 4, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15736, file: !3, line: 3341, column: 16)
!15741 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !15739)
!15742 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !15743)
!15743 = distinct !DILocation(line: 3339, column: 3, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15745, file: !3, line: 3339, column: 3)
!15745 = distinct !DILexicalBlock(scope: !15746, file: !3, line: 3339, column: 3)
!15746 = distinct !DILexicalBlock(scope: !15747, file: !3, line: 3339, column: 3)
!15747 = distinct !DILexicalBlock(scope: !15748, file: !3, line: 3339, column: 3)
!15748 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 3339, column: 3)
!15749 = !DILocalVariable(name: "ch", arg: 1, scope: !15708, file: !3, line: 3325, type: !9566)
!15750 = !DILocation(line: 3325, column: 34, scope: !15708)
!15751 = !DILocalVariable(name: "skb", arg: 2, scope: !15708, file: !3, line: 3325, type: !420)
!15752 = !DILocation(line: 3325, column: 54, scope: !15708)
!15753 = !DILocalVariable(name: "dev", scope: !15708, file: !3, line: 3327, type: !9559)
!15754 = !DILocation(line: 3327, column: 22, scope: !15708)
!15755 = !DILocalVariable(name: "__mptr", scope: !15756, file: !3, line: 3327, type: !570)
!15756 = distinct !DILexicalBlock(scope: !15708, file: !3, line: 3327, column: 28)
!15757 = !DILocation(line: 3327, column: 28, scope: !15756)
!15758 = !DILocation(line: 3327, column: 28, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15756, file: !3, line: 3327, column: 28)
!15760 = !DILocalVariable(name: "dch", scope: !15708, file: !3, line: 3328, type: !9538)
!15761 = !DILocation(line: 3328, column: 20, scope: !15708)
!15762 = !DILocalVariable(name: "__mptr", scope: !15763, file: !3, line: 3328, type: !570)
!15763 = distinct !DILexicalBlock(scope: !15708, file: !3, line: 3328, column: 26)
!15764 = !DILocation(line: 3328, column: 26, scope: !15763)
!15765 = !DILocation(line: 3328, column: 26, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15763, file: !3, line: 3328, column: 26)
!15767 = !DILocalVariable(name: "hc", scope: !15708, file: !3, line: 3329, type: !9128)
!15768 = !DILocation(line: 3329, column: 20, scope: !15708)
!15769 = !DILocation(line: 3329, column: 25, scope: !15708)
!15770 = !DILocation(line: 3329, column: 30, scope: !15708)
!15771 = !DILocalVariable(name: "hh", scope: !15708, file: !3, line: 3330, type: !9683)
!15772 = !DILocation(line: 3330, column: 20, scope: !15708)
!15773 = !DILocation(line: 3330, column: 25, scope: !15708)
!15774 = !DILocalVariable(name: "ret", scope: !15708, file: !3, line: 3331, type: !37)
!15775 = !DILocation(line: 3331, column: 8, scope: !15708)
!15776 = !DILocalVariable(name: "id", scope: !15708, file: !3, line: 3332, type: !7)
!15777 = !DILocation(line: 3332, column: 16, scope: !15708)
!15778 = !DILocalVariable(name: "flags", scope: !15708, file: !3, line: 3333, type: !9457)
!15779 = !DILocation(line: 3333, column: 11, scope: !15708)
!15780 = !DILocation(line: 3335, column: 10, scope: !15708)
!15781 = !DILocation(line: 3335, column: 14, scope: !15708)
!15782 = !DILocation(line: 3335, column: 2, scope: !15708)
!15783 = !DILocation(line: 3337, column: 7, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 3337, column: 7)
!15785 = !DILocation(line: 3337, column: 12, scope: !15784)
!15786 = !DILocation(line: 3337, column: 16, scope: !15784)
!15787 = !DILocation(line: 3337, column: 7, scope: !15713)
!15788 = !DILocation(line: 3338, column: 4, scope: !15784)
!15789 = !DILocation(line: 3339, column: 3, scope: !15713)
!15790 = !DILocation(line: 3339, column: 3, scope: !15748)
!15791 = !DILocalVariable(name: "__dummy", scope: !15792, file: !3, line: 3339, type: !317)
!15792 = distinct !DILexicalBlock(scope: !15747, file: !3, line: 3339, column: 3)
!15793 = !DILocation(line: 3339, column: 3, scope: !15792)
!15794 = !DILocalVariable(name: "__dummy2", scope: !15792, file: !3, line: 3339, type: !9457)
!15795 = !DILocation(line: 3339, column: 3, scope: !15747)
!15796 = !DILocation(line: 3339, column: 3, scope: !15746)
!15797 = !DILocation(line: 3339, column: 3, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15746, file: !3, line: 3339, column: 3)
!15799 = !DILocalVariable(name: "__dummy", scope: !15800, file: !3, line: 3339, type: !317)
!15800 = distinct !DILexicalBlock(scope: !15801, file: !3, line: 3339, column: 3)
!15801 = distinct !DILexicalBlock(scope: !15798, file: !3, line: 3339, column: 3)
!15802 = !DILocation(line: 3339, column: 3, scope: !15800)
!15803 = !DILocalVariable(name: "__dummy2", scope: !15800, file: !3, line: 3339, type: !9457)
!15804 = !DILocation(line: 3339, column: 3, scope: !15801)
!15805 = !DILocation(line: 3339, column: 3, scope: !15745)
!15806 = !{i32 -2138048355}
!15807 = !DILocation(line: 3339, column: 3, scope: !15744)
!15808 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !15743)
!15809 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !15743)
!15810 = !DILocation(line: 3340, column: 27, scope: !15713)
!15811 = !DILocation(line: 3340, column: 32, scope: !15713)
!15812 = !DILocation(line: 3340, column: 9, scope: !15713)
!15813 = !DILocation(line: 3340, column: 7, scope: !15713)
!15814 = !DILocation(line: 3341, column: 7, scope: !15736)
!15815 = !DILocation(line: 3341, column: 11, scope: !15736)
!15816 = !DILocation(line: 3341, column: 7, scope: !15713)
!15817 = !DILocation(line: 3342, column: 9, scope: !15740)
!15818 = !DILocation(line: 3342, column: 13, scope: !15740)
!15819 = !DILocation(line: 3342, column: 7, scope: !15740)
!15820 = !DILocation(line: 3343, column: 16, scope: !15740)
!15821 = !DILocation(line: 3343, column: 20, scope: !15740)
!15822 = !DILocation(line: 3343, column: 25, scope: !15740)
!15823 = !DILocation(line: 3343, column: 4, scope: !15740)
!15824 = !DILocation(line: 3344, column: 8, scope: !15740)
!15825 = !DILocation(line: 3346, column: 4, scope: !15740)
!15826 = !DILocation(line: 3347, column: 4, scope: !15740)
!15827 = !DILocation(line: 3348, column: 28, scope: !15740)
!15828 = !DILocation(line: 3348, column: 32, scope: !15740)
!15829 = !DILocation(line: 3348, column: 38, scope: !15740)
!15830 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !15739)
!15831 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !15739)
!15832 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !15739)
!15833 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !15739)
!15834 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !15739)
!15835 = !DILocation(line: 3349, column: 19, scope: !15740)
!15836 = !DILocation(line: 3349, column: 36, scope: !15740)
!15837 = !DILocation(line: 3349, column: 4, scope: !15740)
!15838 = !DILocation(line: 3350, column: 3, scope: !15740)
!15839 = !DILocation(line: 3351, column: 28, scope: !15736)
!15840 = !DILocation(line: 3351, column: 32, scope: !15736)
!15841 = !DILocation(line: 3351, column: 38, scope: !15736)
!15842 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !15735)
!15843 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !15735)
!15844 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !15735)
!15845 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !15735)
!15846 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !15735)
!15847 = !DILocation(line: 3352, column: 10, scope: !15713)
!15848 = !DILocation(line: 3352, column: 3, scope: !15713)
!15849 = !DILocation(line: 3354, column: 7, scope: !15725)
!15850 = !DILocation(line: 3354, column: 12, scope: !15725)
!15851 = !DILocation(line: 3354, column: 16, scope: !15725)
!15852 = !DILocation(line: 3354, column: 18, scope: !15725)
!15853 = !DILocation(line: 3354, column: 27, scope: !15725)
!15854 = !DILocation(line: 3354, column: 7, scope: !15713)
!15855 = !DILocation(line: 3355, column: 4, scope: !15724)
!15856 = !DILocation(line: 3355, column: 4, scope: !15733)
!15857 = !DILocalVariable(name: "__dummy", scope: !15858, file: !3, line: 3355, type: !317)
!15858 = distinct !DILexicalBlock(scope: !15732, file: !3, line: 3355, column: 4)
!15859 = !DILocation(line: 3355, column: 4, scope: !15858)
!15860 = !DILocalVariable(name: "__dummy2", scope: !15858, file: !3, line: 3355, type: !9457)
!15861 = !DILocation(line: 3355, column: 4, scope: !15732)
!15862 = !DILocation(line: 3355, column: 4, scope: !15731)
!15863 = !DILocation(line: 3355, column: 4, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15731, file: !3, line: 3355, column: 4)
!15865 = !DILocalVariable(name: "__dummy", scope: !15866, file: !3, line: 3355, type: !317)
!15866 = distinct !DILexicalBlock(scope: !15867, file: !3, line: 3355, column: 4)
!15867 = distinct !DILexicalBlock(scope: !15864, file: !3, line: 3355, column: 4)
!15868 = !DILocation(line: 3355, column: 4, scope: !15866)
!15869 = !DILocalVariable(name: "__dummy2", scope: !15866, file: !3, line: 3355, type: !9457)
!15870 = !DILocation(line: 3355, column: 4, scope: !15867)
!15871 = !DILocation(line: 3355, column: 4, scope: !15730)
!15872 = !{i32 -2138047247}
!15873 = !DILocation(line: 3355, column: 4, scope: !15729)
!15874 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !15728)
!15875 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !15728)
!15876 = !DILocation(line: 3356, column: 8, scope: !15724)
!15877 = !DILocation(line: 3357, column: 8, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15724, file: !3, line: 3357, column: 8)
!15879 = !DILocation(line: 3357, column: 14, scope: !15878)
!15880 = !DILocation(line: 3357, column: 8, scope: !15724)
!15881 = !DILocation(line: 3360, column: 22, scope: !15878)
!15882 = !DILocation(line: 3360, column: 26, scope: !15878)
!15883 = !DILocation(line: 3360, column: 31, scope: !15878)
!15884 = !DILocation(line: 3360, column: 36, scope: !15878)
!15885 = !DILocation(line: 3360, column: 42, scope: !15878)
!15886 = !DILocation(line: 3361, column: 12, scope: !15878)
!15887 = !DILocation(line: 3361, column: 16, scope: !15878)
!15888 = !DILocation(line: 3361, column: 22, scope: !15878)
!15889 = !DILocation(line: 3358, column: 5, scope: !15878)
!15890 = !DILocation(line: 3363, column: 8, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15724, file: !3, line: 3363, column: 8)
!15892 = !DILocation(line: 3363, column: 12, scope: !15891)
!15893 = !DILocation(line: 3363, column: 18, scope: !15891)
!15894 = !DILocation(line: 3363, column: 8, scope: !15724)
!15895 = !DILocation(line: 3364, column: 21, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15891, file: !3, line: 3363, column: 34)
!15897 = !DILocation(line: 3364, column: 5, scope: !15896)
!15898 = !DILocation(line: 3365, column: 9, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15896, file: !3, line: 3365, column: 9)
!15900 = !DILocation(line: 3365, column: 15, scope: !15899)
!15901 = !DILocation(line: 3365, column: 9, scope: !15896)
!15902 = !DILocation(line: 3368, column: 23, scope: !15899)
!15903 = !DILocation(line: 3368, column: 28, scope: !15899)
!15904 = !DILocation(line: 3366, column: 6, scope: !15899)
!15905 = !DILocation(line: 3369, column: 4, scope: !15896)
!15906 = !DILocation(line: 3370, column: 5, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15891, file: !3, line: 3369, column: 11)
!15908 = !DILocation(line: 3373, column: 5, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15910, file: !3, line: 3373, column: 5)
!15910 = distinct !DILexicalBlock(scope: !15911, file: !3, line: 3373, column: 5)
!15911 = distinct !DILexicalBlock(scope: !15912, file: !3, line: 3373, column: 5)
!15912 = distinct !DILexicalBlock(scope: !15907, file: !3, line: 3373, column: 5)
!15913 = !DILocation(line: 3374, column: 5, scope: !15907)
!15914 = !DILocation(line: 3376, column: 5, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15916, file: !3, line: 3376, column: 5)
!15916 = distinct !DILexicalBlock(scope: !15917, file: !3, line: 3376, column: 5)
!15917 = distinct !DILexicalBlock(scope: !15918, file: !3, line: 3376, column: 5)
!15918 = distinct !DILexicalBlock(scope: !15907, file: !3, line: 3376, column: 5)
!15919 = !DILocation(line: 3377, column: 5, scope: !15907)
!15920 = !DILocation(line: 3378, column: 5, scope: !15907)
!15921 = !DILocation(line: 3380, column: 5, scope: !15907)
!15922 = !DILocation(line: 3380, column: 10, scope: !15907)
!15923 = !DILocation(line: 3380, column: 16, scope: !15907)
!15924 = !DILocation(line: 3382, column: 28, scope: !15724)
!15925 = !DILocation(line: 3382, column: 32, scope: !15724)
!15926 = !DILocation(line: 3382, column: 38, scope: !15724)
!15927 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !15723)
!15928 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !15723)
!15929 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !15723)
!15930 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !15723)
!15931 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !15723)
!15932 = !DILocation(line: 3383, column: 3, scope: !15724)
!15933 = !DILocation(line: 3384, column: 19, scope: !15725)
!15934 = !DILocation(line: 3384, column: 24, scope: !15725)
!15935 = !DILocation(line: 3384, column: 28, scope: !15725)
!15936 = !DILocation(line: 3384, column: 32, scope: !15725)
!15937 = !DILocation(line: 3384, column: 10, scope: !15725)
!15938 = !DILocation(line: 3384, column: 8, scope: !15725)
!15939 = !DILocation(line: 3385, column: 3, scope: !15713)
!15940 = !DILocation(line: 3387, column: 41, scope: !15713)
!15941 = !DILocation(line: 3387, column: 46, scope: !15713)
!15942 = !DILocation(line: 3387, column: 3, scope: !15713)
!15943 = !DILocation(line: 3388, column: 7, scope: !15712)
!15944 = !DILocation(line: 3388, column: 12, scope: !15712)
!15945 = !DILocation(line: 3388, column: 16, scope: !15712)
!15946 = !DILocation(line: 3388, column: 18, scope: !15712)
!15947 = !DILocation(line: 3388, column: 27, scope: !15712)
!15948 = !DILocation(line: 3388, column: 7, scope: !15713)
!15949 = !DILocation(line: 3389, column: 4, scope: !15711)
!15950 = !DILocation(line: 3389, column: 4, scope: !15721)
!15951 = !DILocalVariable(name: "__dummy", scope: !15952, file: !3, line: 3389, type: !317)
!15952 = distinct !DILexicalBlock(scope: !15720, file: !3, line: 3389, column: 4)
!15953 = !DILocation(line: 3389, column: 4, scope: !15952)
!15954 = !DILocalVariable(name: "__dummy2", scope: !15952, file: !3, line: 3389, type: !9457)
!15955 = !DILocation(line: 3389, column: 4, scope: !15720)
!15956 = !DILocation(line: 3389, column: 4, scope: !15719)
!15957 = !DILocation(line: 3389, column: 4, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15719, file: !3, line: 3389, column: 4)
!15959 = !DILocalVariable(name: "__dummy", scope: !15960, file: !3, line: 3389, type: !317)
!15960 = distinct !DILexicalBlock(scope: !15961, file: !3, line: 3389, column: 4)
!15961 = distinct !DILexicalBlock(scope: !15958, file: !3, line: 3389, column: 4)
!15962 = !DILocation(line: 3389, column: 4, scope: !15960)
!15963 = !DILocalVariable(name: "__dummy2", scope: !15960, file: !3, line: 3389, type: !9457)
!15964 = !DILocation(line: 3389, column: 4, scope: !15961)
!15965 = !DILocation(line: 3389, column: 4, scope: !15718)
!15966 = !{i32 -2138045470}
!15967 = !DILocation(line: 3389, column: 4, scope: !15717)
!15968 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !15716)
!15969 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !15716)
!15970 = !DILocation(line: 3390, column: 8, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15711, file: !3, line: 3390, column: 8)
!15972 = !DILocation(line: 3390, column: 14, scope: !15971)
!15973 = !DILocation(line: 3390, column: 8, scope: !15711)
!15974 = !DILocation(line: 3393, column: 22, scope: !15971)
!15975 = !DILocation(line: 3393, column: 26, scope: !15971)
!15976 = !DILocation(line: 3393, column: 31, scope: !15971)
!15977 = !DILocation(line: 3393, column: 36, scope: !15971)
!15978 = !DILocation(line: 3393, column: 42, scope: !15971)
!15979 = !DILocation(line: 3394, column: 12, scope: !15971)
!15980 = !DILocation(line: 3394, column: 16, scope: !15971)
!15981 = !DILocation(line: 3394, column: 22, scope: !15971)
!15982 = !DILocation(line: 3391, column: 5, scope: !15971)
!15983 = !DILocation(line: 3396, column: 8, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15711, file: !3, line: 3396, column: 8)
!15985 = !DILocation(line: 3396, column: 12, scope: !15984)
!15986 = !DILocation(line: 3396, column: 18, scope: !15984)
!15987 = !DILocation(line: 3396, column: 8, scope: !15711)
!15988 = !DILocation(line: 3397, column: 9, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15990, file: !3, line: 3397, column: 9)
!15990 = distinct !DILexicalBlock(scope: !15984, file: !3, line: 3396, column: 34)
!15991 = !DILocation(line: 3397, column: 15, scope: !15989)
!15992 = !DILocation(line: 3397, column: 9, scope: !15990)
!15993 = !DILocation(line: 3398, column: 6, scope: !15989)
!15994 = !DILocation(line: 3401, column: 4, scope: !15990)
!15995 = !DILocation(line: 3402, column: 5, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15984, file: !3, line: 3401, column: 11)
!15997 = !DILocation(line: 3405, column: 5, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15999, file: !3, line: 3405, column: 5)
!15999 = distinct !DILexicalBlock(scope: !16000, file: !3, line: 3405, column: 5)
!16000 = distinct !DILexicalBlock(scope: !16001, file: !3, line: 3405, column: 5)
!16001 = distinct !DILexicalBlock(scope: !15996, file: !3, line: 3405, column: 5)
!16002 = !DILocation(line: 3406, column: 5, scope: !15996)
!16003 = !DILocation(line: 3408, column: 5, scope: !15996)
!16004 = !DILocation(line: 3408, column: 10, scope: !15996)
!16005 = !DILocation(line: 3408, column: 16, scope: !15996)
!16006 = !DILocation(line: 3410, column: 21, scope: !15711)
!16007 = !DILocation(line: 3410, column: 26, scope: !15711)
!16008 = !DILocation(line: 3410, column: 4, scope: !15711)
!16009 = !DILocation(line: 3411, column: 8, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !15711, file: !3, line: 3411, column: 8)
!16011 = !DILocation(line: 3411, column: 13, scope: !16010)
!16012 = !DILocation(line: 3411, column: 8, scope: !15711)
!16013 = !DILocation(line: 3412, column: 5, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !16010, file: !3, line: 3411, column: 21)
!16015 = !DILocation(line: 3413, column: 5, scope: !16014)
!16016 = !DILocation(line: 3413, column: 10, scope: !16014)
!16017 = !DILocation(line: 3413, column: 17, scope: !16014)
!16018 = !DILocation(line: 3414, column: 4, scope: !16014)
!16019 = !DILocation(line: 3415, column: 4, scope: !15711)
!16020 = !DILocation(line: 3415, column: 9, scope: !15711)
!16021 = !DILocation(line: 3415, column: 16, scope: !15711)
!16022 = !DILocation(line: 3416, column: 8, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !15711, file: !3, line: 3416, column: 8)
!16024 = !DILocation(line: 3416, column: 13, scope: !16023)
!16025 = !DILocation(line: 3416, column: 8, scope: !15711)
!16026 = !DILocation(line: 3417, column: 5, scope: !16027)
!16027 = distinct !DILexicalBlock(scope: !16023, file: !3, line: 3416, column: 21)
!16028 = !DILocation(line: 3418, column: 5, scope: !16027)
!16029 = !DILocation(line: 3418, column: 10, scope: !16027)
!16030 = !DILocation(line: 3418, column: 17, scope: !16027)
!16031 = !DILocation(line: 3419, column: 4, scope: !16027)
!16032 = !DILocation(line: 3420, column: 37, scope: !15711)
!16033 = !DILocation(line: 3420, column: 42, scope: !15711)
!16034 = !DILocation(line: 3420, column: 4, scope: !15711)
!16035 = !DILocation(line: 3421, column: 44, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !15711, file: !3, line: 3421, column: 8)
!16037 = !DILocation(line: 3421, column: 49, scope: !16036)
!16038 = !DILocation(line: 3421, column: 8, scope: !16036)
!16039 = !DILocation(line: 3421, column: 8, scope: !15711)
!16040 = !DILocation(line: 3422, column: 16, scope: !16036)
!16041 = !DILocation(line: 3422, column: 21, scope: !16036)
!16042 = !DILocation(line: 3422, column: 5, scope: !16036)
!16043 = !DILocation(line: 3427, column: 8, scope: !15711)
!16044 = !DILocation(line: 3428, column: 28, scope: !15711)
!16045 = !DILocation(line: 3428, column: 32, scope: !15711)
!16046 = !DILocation(line: 3428, column: 38, scope: !15711)
!16047 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !15710)
!16048 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !15710)
!16049 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !15710)
!16050 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !15710)
!16051 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !15710)
!16052 = !DILocation(line: 3429, column: 3, scope: !15711)
!16053 = !DILocation(line: 3430, column: 19, scope: !15712)
!16054 = !DILocation(line: 3430, column: 24, scope: !15712)
!16055 = !DILocation(line: 3430, column: 28, scope: !15712)
!16056 = !DILocation(line: 3430, column: 32, scope: !15712)
!16057 = !DILocation(line: 3430, column: 10, scope: !15712)
!16058 = !DILocation(line: 3430, column: 8, scope: !15712)
!16059 = !DILocation(line: 3431, column: 3, scope: !15713)
!16060 = !DILocation(line: 3433, column: 7, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !15708, file: !3, line: 3433, column: 6)
!16062 = !DILocation(line: 3433, column: 6, scope: !15708)
!16063 = !DILocation(line: 3434, column: 3, scope: !16061)
!16064 = !DILocation(line: 3435, column: 9, scope: !15708)
!16065 = !DILocation(line: 3435, column: 2, scope: !15708)
!16066 = !DILocation(line: 3436, column: 1, scope: !15708)
!16067 = distinct !DISubprogram(name: "hfcm_dctrl", scope: !3, file: !3, line: 4167, type: !9584, scopeLine: 4168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16068 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !16069)
!16069 = distinct !DILocation(line: 4213, column: 3, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !16071, file: !3, line: 4213, column: 3)
!16071 = distinct !DILexicalBlock(scope: !16072, file: !3, line: 4213, column: 3)
!16072 = distinct !DILexicalBlock(scope: !16073, file: !3, line: 4213, column: 3)
!16073 = distinct !DILexicalBlock(scope: !16074, file: !3, line: 4213, column: 3)
!16074 = distinct !DILexicalBlock(scope: !16075, file: !3, line: 4213, column: 3)
!16075 = distinct !DILexicalBlock(scope: !16067, file: !3, line: 4179, column: 15)
!16076 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !16077)
!16077 = distinct !DILocation(line: 4202, column: 4, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16075, file: !3, line: 4182, column: 25)
!16079 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !16077)
!16080 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !16081)
!16081 = distinct !DILocation(line: 4215, column: 3, scope: !16075)
!16082 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !16081)
!16083 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !16084)
!16084 = distinct !DILocation(line: 4200, column: 4, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16086, file: !3, line: 4200, column: 4)
!16086 = distinct !DILexicalBlock(scope: !16087, file: !3, line: 4200, column: 4)
!16087 = distinct !DILexicalBlock(scope: !16088, file: !3, line: 4200, column: 4)
!16088 = distinct !DILexicalBlock(scope: !16089, file: !3, line: 4200, column: 4)
!16089 = distinct !DILexicalBlock(scope: !16078, file: !3, line: 4200, column: 4)
!16090 = !DILocalVariable(name: "ch", arg: 1, scope: !16067, file: !3, line: 4167, type: !9566)
!16091 = !DILocation(line: 4167, column: 33, scope: !16067)
!16092 = !DILocalVariable(name: "cmd", arg: 2, scope: !16067, file: !3, line: 4167, type: !9152)
!16093 = !DILocation(line: 4167, column: 43, scope: !16067)
!16094 = !DILocalVariable(name: "arg", arg: 3, scope: !16067, file: !3, line: 4167, type: !570)
!16095 = !DILocation(line: 4167, column: 54, scope: !16067)
!16096 = !DILocalVariable(name: "dev", scope: !16067, file: !3, line: 4169, type: !9559)
!16097 = !DILocation(line: 4169, column: 22, scope: !16067)
!16098 = !DILocalVariable(name: "__mptr", scope: !16099, file: !3, line: 4169, type: !570)
!16099 = distinct !DILexicalBlock(scope: !16067, file: !3, line: 4169, column: 28)
!16100 = !DILocation(line: 4169, column: 28, scope: !16099)
!16101 = !DILocation(line: 4169, column: 28, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16099, file: !3, line: 4169, column: 28)
!16103 = !DILocalVariable(name: "dch", scope: !16067, file: !3, line: 4170, type: !9538)
!16104 = !DILocation(line: 4170, column: 20, scope: !16067)
!16105 = !DILocalVariable(name: "__mptr", scope: !16106, file: !3, line: 4170, type: !570)
!16106 = distinct !DILexicalBlock(scope: !16067, file: !3, line: 4170, column: 26)
!16107 = !DILocation(line: 4170, column: 26, scope: !16106)
!16108 = !DILocation(line: 4170, column: 26, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16106, file: !3, line: 4170, column: 26)
!16110 = !DILocalVariable(name: "hc", scope: !16067, file: !3, line: 4171, type: !9128)
!16111 = !DILocation(line: 4171, column: 20, scope: !16067)
!16112 = !DILocation(line: 4171, column: 25, scope: !16067)
!16113 = !DILocation(line: 4171, column: 30, scope: !16067)
!16114 = !DILocalVariable(name: "rq", scope: !16067, file: !3, line: 4172, type: !16115)
!16115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16116, size: 64)
!16116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "channel_req", file: !9521, line: 450, size: 192, elements: !16117)
!16117 = !{!16118, !16119, !16127}
!16118 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !16116, file: !9521, line: 451, baseType: !9152, size: 32)
!16119 = !DIDerivedType(tag: DW_TAG_member, name: "adr", scope: !16116, file: !9521, line: 452, baseType: !16120, size: 48, offset: 32)
!16120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_mISDN", file: !9521, line: 283, size: 48, elements: !16121)
!16121 = !{!16122, !16123, !16124, !16125, !16126}
!16122 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !16120, file: !9521, line: 284, baseType: !523, size: 16)
!16123 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !16120, file: !9521, line: 285, baseType: !494, size: 8, offset: 16)
!16124 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !16120, file: !9521, line: 286, baseType: !494, size: 8, offset: 24)
!16125 = !DIDerivedType(tag: DW_TAG_member, name: "sapi", scope: !16120, file: !9521, line: 287, baseType: !494, size: 8, offset: 32)
!16126 = !DIDerivedType(tag: DW_TAG_member, name: "tei", scope: !16120, file: !9521, line: 288, baseType: !494, size: 8, offset: 40)
!16127 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !16116, file: !9521, line: 453, baseType: !9566, size: 64, offset: 128)
!16128 = !DILocation(line: 4172, column: 22, scope: !16067)
!16129 = !DILocalVariable(name: "err", scope: !16067, file: !3, line: 4173, type: !37)
!16130 = !DILocation(line: 4173, column: 8, scope: !16067)
!16131 = !DILocalVariable(name: "flags", scope: !16067, file: !3, line: 4174, type: !9457)
!16132 = !DILocation(line: 4174, column: 11, scope: !16067)
!16133 = !DILocation(line: 4176, column: 6, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16067, file: !3, line: 4176, column: 6)
!16135 = !DILocation(line: 4176, column: 11, scope: !16134)
!16136 = !DILocation(line: 4176, column: 17, scope: !16134)
!16137 = !DILocation(line: 4176, column: 6, scope: !16067)
!16138 = !DILocation(line: 4178, column: 20, scope: !16134)
!16139 = !DILocation(line: 4178, column: 25, scope: !16134)
!16140 = !DILocation(line: 4177, column: 3, scope: !16134)
!16141 = !DILocation(line: 4179, column: 10, scope: !16067)
!16142 = !DILocation(line: 4179, column: 2, scope: !16067)
!16143 = !DILocation(line: 4181, column: 8, scope: !16075)
!16144 = !DILocation(line: 4181, column: 6, scope: !16075)
!16145 = !DILocation(line: 4182, column: 11, scope: !16075)
!16146 = !DILocation(line: 4182, column: 15, scope: !16075)
!16147 = !DILocation(line: 4182, column: 3, scope: !16075)
!16148 = !DILocation(line: 4185, column: 8, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16078, file: !3, line: 4185, column: 8)
!16150 = !DILocation(line: 4185, column: 12, scope: !16149)
!16151 = !DILocation(line: 4185, column: 18, scope: !16149)
!16152 = !DILocation(line: 4185, column: 8, scope: !16078)
!16153 = !DILocation(line: 4186, column: 9, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16149, file: !3, line: 4185, column: 34)
!16155 = !DILocation(line: 4187, column: 5, scope: !16154)
!16156 = !DILocation(line: 4189, column: 24, scope: !16078)
!16157 = !DILocation(line: 4189, column: 28, scope: !16078)
!16158 = !DILocation(line: 4189, column: 33, scope: !16078)
!16159 = !DILocation(line: 4189, column: 10, scope: !16078)
!16160 = !DILocation(line: 4189, column: 8, scope: !16078)
!16161 = !DILocation(line: 4190, column: 4, scope: !16078)
!16162 = !DILocation(line: 4193, column: 8, scope: !16163)
!16163 = distinct !DILexicalBlock(scope: !16078, file: !3, line: 4193, column: 8)
!16164 = !DILocation(line: 4193, column: 12, scope: !16163)
!16165 = !DILocation(line: 4193, column: 18, scope: !16163)
!16166 = !DILocation(line: 4193, column: 8, scope: !16078)
!16167 = !DILocation(line: 4194, column: 9, scope: !16168)
!16168 = distinct !DILexicalBlock(scope: !16163, file: !3, line: 4193, column: 34)
!16169 = !DILocation(line: 4195, column: 5, scope: !16168)
!16170 = !DILocation(line: 4197, column: 24, scope: !16078)
!16171 = !DILocation(line: 4197, column: 28, scope: !16078)
!16172 = !DILocation(line: 4197, column: 33, scope: !16078)
!16173 = !DILocation(line: 4197, column: 10, scope: !16078)
!16174 = !DILocation(line: 4197, column: 8, scope: !16078)
!16175 = !DILocation(line: 4198, column: 4, scope: !16078)
!16176 = !DILocation(line: 4200, column: 4, scope: !16078)
!16177 = !DILocation(line: 4200, column: 4, scope: !16089)
!16178 = !DILocalVariable(name: "__dummy", scope: !16179, file: !3, line: 4200, type: !317)
!16179 = distinct !DILexicalBlock(scope: !16088, file: !3, line: 4200, column: 4)
!16180 = !DILocation(line: 4200, column: 4, scope: !16179)
!16181 = !DILocalVariable(name: "__dummy2", scope: !16179, file: !3, line: 4200, type: !9457)
!16182 = !DILocation(line: 4200, column: 4, scope: !16088)
!16183 = !DILocation(line: 4200, column: 4, scope: !16087)
!16184 = !DILocation(line: 4200, column: 4, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16087, file: !3, line: 4200, column: 4)
!16186 = !DILocalVariable(name: "__dummy", scope: !16187, file: !3, line: 4200, type: !317)
!16187 = distinct !DILexicalBlock(scope: !16188, file: !3, line: 4200, column: 4)
!16188 = distinct !DILexicalBlock(scope: !16185, file: !3, line: 4200, column: 4)
!16189 = !DILocation(line: 4200, column: 4, scope: !16187)
!16190 = !DILocalVariable(name: "__dummy2", scope: !16187, file: !3, line: 4200, type: !9457)
!16191 = !DILocation(line: 4200, column: 4, scope: !16188)
!16192 = !DILocation(line: 4200, column: 4, scope: !16086)
!16193 = !{i32 -2138024207}
!16194 = !DILocation(line: 4200, column: 4, scope: !16085)
!16195 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !16084)
!16196 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !16084)
!16197 = !DILocation(line: 4201, column: 24, scope: !16078)
!16198 = !DILocation(line: 4201, column: 28, scope: !16078)
!16199 = !DILocation(line: 4201, column: 33, scope: !16078)
!16200 = !DILocation(line: 4201, column: 10, scope: !16078)
!16201 = !DILocation(line: 4201, column: 8, scope: !16078)
!16202 = !DILocation(line: 4202, column: 28, scope: !16078)
!16203 = !DILocation(line: 4202, column: 32, scope: !16078)
!16204 = !DILocation(line: 4202, column: 38, scope: !16078)
!16205 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !16077)
!16206 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !16077)
!16207 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !16077)
!16208 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !16077)
!16209 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !16077)
!16210 = !DILocation(line: 4203, column: 3, scope: !16078)
!16211 = !DILocation(line: 4204, column: 3, scope: !16075)
!16212 = !DILocation(line: 4206, column: 7, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16075, file: !3, line: 4206, column: 7)
!16214 = !DILocation(line: 4206, column: 13, scope: !16213)
!16215 = !DILocation(line: 4206, column: 7, scope: !16075)
!16216 = !DILocation(line: 4208, column: 21, scope: !16213)
!16217 = !DILocation(line: 4208, column: 26, scope: !16213)
!16218 = !DILocation(line: 4208, column: 30, scope: !16213)
!16219 = !DILocation(line: 4209, column: 11, scope: !16213)
!16220 = !DILocation(line: 4207, column: 4, scope: !16213)
!16221 = !DILocation(line: 4210, column: 3, scope: !16075)
!16222 = !DILocation(line: 4211, column: 3, scope: !16075)
!16223 = !DILocation(line: 4213, column: 3, scope: !16075)
!16224 = !DILocation(line: 4213, column: 3, scope: !16074)
!16225 = !DILocalVariable(name: "__dummy", scope: !16226, file: !3, line: 4213, type: !317)
!16226 = distinct !DILexicalBlock(scope: !16073, file: !3, line: 4213, column: 3)
!16227 = !DILocation(line: 4213, column: 3, scope: !16226)
!16228 = !DILocalVariable(name: "__dummy2", scope: !16226, file: !3, line: 4213, type: !9457)
!16229 = !DILocation(line: 4213, column: 3, scope: !16073)
!16230 = !DILocation(line: 4213, column: 3, scope: !16072)
!16231 = !DILocation(line: 4213, column: 3, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16072, file: !3, line: 4213, column: 3)
!16233 = !DILocalVariable(name: "__dummy", scope: !16234, file: !3, line: 4213, type: !317)
!16234 = distinct !DILexicalBlock(scope: !16235, file: !3, line: 4213, column: 3)
!16235 = distinct !DILexicalBlock(scope: !16232, file: !3, line: 4213, column: 3)
!16236 = !DILocation(line: 4213, column: 3, scope: !16234)
!16237 = !DILocalVariable(name: "__dummy2", scope: !16234, file: !3, line: 4213, type: !9457)
!16238 = !DILocation(line: 4213, column: 3, scope: !16235)
!16239 = !DILocation(line: 4213, column: 3, scope: !16071)
!16240 = !{i32 -2138023136}
!16241 = !DILocation(line: 4213, column: 3, scope: !16070)
!16242 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !16069)
!16243 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !16069)
!16244 = !DILocation(line: 4214, column: 23, scope: !16075)
!16245 = !DILocation(line: 4214, column: 28, scope: !16075)
!16246 = !DILocation(line: 4214, column: 9, scope: !16075)
!16247 = !DILocation(line: 4214, column: 7, scope: !16075)
!16248 = !DILocation(line: 4215, column: 27, scope: !16075)
!16249 = !DILocation(line: 4215, column: 31, scope: !16075)
!16250 = !DILocation(line: 4215, column: 37, scope: !16075)
!16251 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !16081)
!16252 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !16081)
!16253 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !16081)
!16254 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !16081)
!16255 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !16081)
!16256 = !DILocation(line: 4216, column: 3, scope: !16075)
!16257 = !DILocation(line: 4218, column: 7, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16075, file: !3, line: 4218, column: 7)
!16259 = !DILocation(line: 4218, column: 12, scope: !16258)
!16260 = !DILocation(line: 4218, column: 18, scope: !16258)
!16261 = !DILocation(line: 4218, column: 7, scope: !16075)
!16262 = !DILocation(line: 4220, column: 21, scope: !16258)
!16263 = !DILocation(line: 4219, column: 4, scope: !16258)
!16264 = !DILocation(line: 4221, column: 7, scope: !16075)
!16265 = !DILocation(line: 4222, column: 2, scope: !16075)
!16266 = !DILocation(line: 4223, column: 9, scope: !16067)
!16267 = !DILocation(line: 4223, column: 2, scope: !16067)
!16268 = distinct !DISubprogram(name: "handle_bmsg", scope: !3, file: !3, line: 3454, type: !9578, scopeLine: 3455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16269 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !16270)
!16270 = distinct !DILocation(line: 3533, column: 3, scope: !16271)
!16271 = distinct !DILexicalBlock(scope: !16268, file: !3, line: 3462, column: 20)
!16272 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !16270)
!16273 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !16274)
!16274 = distinct !DILocation(line: 3512, column: 3, scope: !16275)
!16275 = distinct !DILexicalBlock(scope: !16276, file: !3, line: 3512, column: 3)
!16276 = distinct !DILexicalBlock(scope: !16277, file: !3, line: 3512, column: 3)
!16277 = distinct !DILexicalBlock(scope: !16278, file: !3, line: 3512, column: 3)
!16278 = distinct !DILexicalBlock(scope: !16279, file: !3, line: 3512, column: 3)
!16279 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 3512, column: 3)
!16280 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !16281)
!16281 = distinct !DILocation(line: 3506, column: 3, scope: !16271)
!16282 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !16281)
!16283 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !16284)
!16284 = distinct !DILocation(line: 3481, column: 3, scope: !16285)
!16285 = distinct !DILexicalBlock(scope: !16286, file: !3, line: 3481, column: 3)
!16286 = distinct !DILexicalBlock(scope: !16287, file: !3, line: 3481, column: 3)
!16287 = distinct !DILexicalBlock(scope: !16288, file: !3, line: 3481, column: 3)
!16288 = distinct !DILexicalBlock(scope: !16289, file: !3, line: 3481, column: 3)
!16289 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 3481, column: 3)
!16290 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !16291)
!16291 = distinct !DILocation(line: 3475, column: 3, scope: !16271)
!16292 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !16291)
!16293 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !16294)
!16294 = distinct !DILocation(line: 3466, column: 3, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16296, file: !3, line: 3466, column: 3)
!16296 = distinct !DILexicalBlock(scope: !16297, file: !3, line: 3466, column: 3)
!16297 = distinct !DILexicalBlock(scope: !16298, file: !3, line: 3466, column: 3)
!16298 = distinct !DILexicalBlock(scope: !16299, file: !3, line: 3466, column: 3)
!16299 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 3466, column: 3)
!16300 = !DILocalVariable(name: "ch", arg: 1, scope: !16268, file: !3, line: 3454, type: !9566)
!16301 = !DILocation(line: 3454, column: 34, scope: !16268)
!16302 = !DILocalVariable(name: "skb", arg: 2, scope: !16268, file: !3, line: 3454, type: !420)
!16303 = !DILocation(line: 3454, column: 54, scope: !16268)
!16304 = !DILocalVariable(name: "bch", scope: !16268, file: !3, line: 3456, type: !9617)
!16305 = !DILocation(line: 3456, column: 20, scope: !16268)
!16306 = !DILocalVariable(name: "__mptr", scope: !16307, file: !3, line: 3456, type: !570)
!16307 = distinct !DILexicalBlock(scope: !16268, file: !3, line: 3456, column: 26)
!16308 = !DILocation(line: 3456, column: 26, scope: !16307)
!16309 = !DILocation(line: 3456, column: 26, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 3456, column: 26)
!16311 = !DILocalVariable(name: "hc", scope: !16268, file: !3, line: 3457, type: !9128)
!16312 = !DILocation(line: 3457, column: 20, scope: !16268)
!16313 = !DILocation(line: 3457, column: 25, scope: !16268)
!16314 = !DILocation(line: 3457, column: 30, scope: !16268)
!16315 = !DILocalVariable(name: "ret", scope: !16268, file: !3, line: 3458, type: !37)
!16316 = !DILocation(line: 3458, column: 8, scope: !16268)
!16317 = !DILocalVariable(name: "hh", scope: !16268, file: !3, line: 3459, type: !9683)
!16318 = !DILocation(line: 3459, column: 20, scope: !16268)
!16319 = !DILocation(line: 3459, column: 25, scope: !16268)
!16320 = !DILocalVariable(name: "flags", scope: !16268, file: !3, line: 3460, type: !317)
!16321 = !DILocation(line: 3460, column: 17, scope: !16268)
!16322 = !DILocation(line: 3462, column: 10, scope: !16268)
!16323 = !DILocation(line: 3462, column: 14, scope: !16268)
!16324 = !DILocation(line: 3462, column: 2, scope: !16268)
!16325 = !DILocation(line: 3464, column: 8, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 3464, column: 7)
!16327 = !DILocation(line: 3464, column: 13, scope: !16326)
!16328 = !DILocation(line: 3464, column: 7, scope: !16271)
!16329 = !DILocation(line: 3465, column: 4, scope: !16326)
!16330 = !DILocation(line: 3466, column: 3, scope: !16271)
!16331 = !DILocation(line: 3466, column: 3, scope: !16299)
!16332 = !DILocalVariable(name: "__dummy", scope: !16333, file: !3, line: 3466, type: !317)
!16333 = distinct !DILexicalBlock(scope: !16298, file: !3, line: 3466, column: 3)
!16334 = !DILocation(line: 3466, column: 3, scope: !16333)
!16335 = !DILocalVariable(name: "__dummy2", scope: !16333, file: !3, line: 3466, type: !317)
!16336 = !DILocation(line: 3466, column: 3, scope: !16298)
!16337 = !DILocation(line: 3466, column: 3, scope: !16297)
!16338 = !DILocation(line: 3466, column: 3, scope: !16339)
!16339 = distinct !DILexicalBlock(scope: !16297, file: !3, line: 3466, column: 3)
!16340 = !DILocalVariable(name: "__dummy", scope: !16341, file: !3, line: 3466, type: !317)
!16341 = distinct !DILexicalBlock(scope: !16342, file: !3, line: 3466, column: 3)
!16342 = distinct !DILexicalBlock(scope: !16339, file: !3, line: 3466, column: 3)
!16343 = !DILocation(line: 3466, column: 3, scope: !16341)
!16344 = !DILocalVariable(name: "__dummy2", scope: !16341, file: !3, line: 3466, type: !317)
!16345 = !DILocation(line: 3466, column: 3, scope: !16342)
!16346 = !DILocation(line: 3466, column: 3, scope: !16296)
!16347 = !{i32 -2138041502}
!16348 = !DILocation(line: 3466, column: 3, scope: !16295)
!16349 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !16294)
!16350 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !16294)
!16351 = !DILocation(line: 3467, column: 27, scope: !16271)
!16352 = !DILocation(line: 3467, column: 32, scope: !16271)
!16353 = !DILocation(line: 3467, column: 9, scope: !16271)
!16354 = !DILocation(line: 3467, column: 7, scope: !16271)
!16355 = !DILocation(line: 3468, column: 7, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 3468, column: 7)
!16357 = !DILocation(line: 3468, column: 11, scope: !16356)
!16358 = !DILocation(line: 3468, column: 7, scope: !16271)
!16359 = !DILocation(line: 3469, column: 16, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16356, file: !3, line: 3468, column: 16)
!16361 = !DILocation(line: 3469, column: 20, scope: !16360)
!16362 = !DILocation(line: 3469, column: 25, scope: !16360)
!16363 = !DILocation(line: 3469, column: 4, scope: !16360)
!16364 = !DILocation(line: 3470, column: 8, scope: !16360)
!16365 = !DILocation(line: 3472, column: 4, scope: !16360)
!16366 = !DILocation(line: 3473, column: 4, scope: !16360)
!16367 = !DILocation(line: 3474, column: 3, scope: !16360)
!16368 = !DILocation(line: 3475, column: 27, scope: !16271)
!16369 = !DILocation(line: 3475, column: 31, scope: !16271)
!16370 = !DILocation(line: 3475, column: 37, scope: !16271)
!16371 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !16291)
!16372 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !16291)
!16373 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !16291)
!16374 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !16291)
!16375 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !16291)
!16376 = !DILocation(line: 3476, column: 10, scope: !16271)
!16377 = !DILocation(line: 3476, column: 3, scope: !16271)
!16378 = !DILocation(line: 3478, column: 7, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 3478, column: 7)
!16380 = !DILocation(line: 3478, column: 13, scope: !16379)
!16381 = !DILocation(line: 3478, column: 7, scope: !16271)
!16382 = !DILocation(line: 3480, column: 21, scope: !16379)
!16383 = !DILocation(line: 3480, column: 26, scope: !16379)
!16384 = !DILocation(line: 3479, column: 4, scope: !16379)
!16385 = !DILocation(line: 3481, column: 3, scope: !16271)
!16386 = !DILocation(line: 3481, column: 3, scope: !16289)
!16387 = !DILocalVariable(name: "__dummy", scope: !16388, file: !3, line: 3481, type: !317)
!16388 = distinct !DILexicalBlock(scope: !16288, file: !3, line: 3481, column: 3)
!16389 = !DILocation(line: 3481, column: 3, scope: !16388)
!16390 = !DILocalVariable(name: "__dummy2", scope: !16388, file: !3, line: 3481, type: !317)
!16391 = !DILocation(line: 3481, column: 3, scope: !16288)
!16392 = !DILocation(line: 3481, column: 3, scope: !16287)
!16393 = !DILocation(line: 3481, column: 3, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16287, file: !3, line: 3481, column: 3)
!16395 = !DILocalVariable(name: "__dummy", scope: !16396, file: !3, line: 3481, type: !317)
!16396 = distinct !DILexicalBlock(scope: !16397, file: !3, line: 3481, column: 3)
!16397 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 3481, column: 3)
!16398 = !DILocation(line: 3481, column: 3, scope: !16396)
!16399 = !DILocalVariable(name: "__dummy2", scope: !16396, file: !3, line: 3481, type: !317)
!16400 = !DILocation(line: 3481, column: 3, scope: !16397)
!16401 = !DILocation(line: 3481, column: 3, scope: !16286)
!16402 = !{i32 -2138040371}
!16403 = !DILocation(line: 3481, column: 3, scope: !16285)
!16404 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !16284)
!16405 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !16284)
!16406 = !DILocation(line: 3483, column: 38, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 3483, column: 7)
!16408 = !DILocation(line: 3483, column: 43, scope: !16407)
!16409 = !DILocation(line: 3483, column: 8, scope: !16407)
!16410 = !DILocation(line: 3483, column: 7, scope: !16271)
!16411 = !DILocation(line: 3484, column: 4, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16407, file: !3, line: 3483, column: 51)
!16413 = !DILocation(line: 3484, column: 8, scope: !16412)
!16414 = !DILocation(line: 3484, column: 13, scope: !16412)
!16415 = !DILocation(line: 3484, column: 18, scope: !16412)
!16416 = !DILocation(line: 3484, column: 24, scope: !16412)
!16417 = !DILocation(line: 3484, column: 34, scope: !16412)
!16418 = !DILocation(line: 3485, column: 24, scope: !16412)
!16419 = !DILocation(line: 3485, column: 28, scope: !16412)
!16420 = !DILocation(line: 3485, column: 33, scope: !16412)
!16421 = !DILocation(line: 3486, column: 10, scope: !16412)
!16422 = !DILocation(line: 3486, column: 14, scope: !16412)
!16423 = !DILocation(line: 3487, column: 10, scope: !16412)
!16424 = !DILocation(line: 3487, column: 14, scope: !16412)
!16425 = !DILocation(line: 3487, column: 19, scope: !16412)
!16426 = !DILocation(line: 3487, column: 24, scope: !16412)
!16427 = !DILocation(line: 3487, column: 30, scope: !16412)
!16428 = !DILocation(line: 3488, column: 10, scope: !16412)
!16429 = !DILocation(line: 3488, column: 14, scope: !16412)
!16430 = !DILocation(line: 3488, column: 19, scope: !16412)
!16431 = !DILocation(line: 3488, column: 24, scope: !16412)
!16432 = !DILocation(line: 3488, column: 30, scope: !16412)
!16433 = !DILocation(line: 3489, column: 10, scope: !16412)
!16434 = !DILocation(line: 3489, column: 14, scope: !16412)
!16435 = !DILocation(line: 3489, column: 19, scope: !16412)
!16436 = !DILocation(line: 3489, column: 24, scope: !16412)
!16437 = !DILocation(line: 3489, column: 30, scope: !16412)
!16438 = !DILocation(line: 3490, column: 10, scope: !16412)
!16439 = !DILocation(line: 3490, column: 14, scope: !16412)
!16440 = !DILocation(line: 3490, column: 19, scope: !16412)
!16441 = !DILocation(line: 3490, column: 24, scope: !16412)
!16442 = !DILocation(line: 3490, column: 30, scope: !16412)
!16443 = !DILocation(line: 3485, column: 10, scope: !16412)
!16444 = !DILocation(line: 3485, column: 8, scope: !16412)
!16445 = !DILocation(line: 3491, column: 9, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16412, file: !3, line: 3491, column: 8)
!16447 = !DILocation(line: 3491, column: 8, scope: !16412)
!16448 = !DILocation(line: 3492, column: 9, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16450, file: !3, line: 3492, column: 9)
!16450 = distinct !DILexicalBlock(scope: !16446, file: !3, line: 3491, column: 14)
!16451 = !DILocation(line: 3492, column: 13, scope: !16449)
!16452 = !DILocation(line: 3492, column: 22, scope: !16449)
!16453 = !DILocation(line: 3492, column: 38, scope: !16449)
!16454 = !DILocation(line: 3492, column: 42, scope: !16449)
!16455 = !DILocation(line: 3492, column: 46, scope: !16449)
!16456 = !DILocation(line: 3493, column: 9, scope: !16449)
!16457 = !DILocation(line: 3493, column: 37, scope: !16449)
!16458 = !DILocation(line: 3493, column: 41, scope: !16449)
!16459 = !DILocation(line: 3493, column: 12, scope: !16449)
!16460 = !DILocation(line: 3492, column: 9, scope: !16450)
!16461 = !DILocation(line: 3495, column: 6, scope: !16462)
!16462 = distinct !DILexicalBlock(scope: !16449, file: !3, line: 3493, column: 48)
!16463 = !DILocation(line: 3495, column: 10, scope: !16462)
!16464 = !DILocation(line: 3495, column: 15, scope: !16462)
!16465 = !DILocation(line: 3496, column: 10, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16462, file: !3, line: 3496, column: 10)
!16467 = !DILocation(line: 3496, column: 16, scope: !16466)
!16468 = !DILocation(line: 3496, column: 10, scope: !16462)
!16469 = !DILocation(line: 3497, column: 7, scope: !16466)
!16470 = !DILocation(line: 3500, column: 6, scope: !16462)
!16471 = !DILocation(line: 3502, column: 5, scope: !16462)
!16472 = !DILocation(line: 3503, column: 4, scope: !16450)
!16473 = !DILocation(line: 3504, column: 3, scope: !16412)
!16474 = !DILocation(line: 3505, column: 8, scope: !16407)
!16475 = !DILocation(line: 3506, column: 27, scope: !16271)
!16476 = !DILocation(line: 3506, column: 31, scope: !16271)
!16477 = !DILocation(line: 3506, column: 37, scope: !16271)
!16478 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !16281)
!16479 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !16281)
!16480 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !16281)
!16481 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !16281)
!16482 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !16281)
!16483 = !DILocation(line: 3507, column: 8, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 3507, column: 7)
!16485 = !DILocation(line: 3507, column: 7, scope: !16271)
!16486 = !DILocation(line: 3508, column: 16, scope: !16484)
!16487 = !DILocation(line: 3508, column: 4, scope: !16484)
!16488 = !DILocation(line: 3510, column: 3, scope: !16271)
!16489 = !DILocation(line: 3512, column: 3, scope: !16271)
!16490 = !DILocation(line: 3512, column: 3, scope: !16279)
!16491 = !DILocalVariable(name: "__dummy", scope: !16492, file: !3, line: 3512, type: !317)
!16492 = distinct !DILexicalBlock(scope: !16278, file: !3, line: 3512, column: 3)
!16493 = !DILocation(line: 3512, column: 3, scope: !16492)
!16494 = !DILocalVariable(name: "__dummy2", scope: !16492, file: !3, line: 3512, type: !317)
!16495 = !DILocation(line: 3512, column: 3, scope: !16278)
!16496 = !DILocation(line: 3512, column: 3, scope: !16277)
!16497 = !DILocation(line: 3512, column: 3, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16277, file: !3, line: 3512, column: 3)
!16499 = !DILocalVariable(name: "__dummy", scope: !16500, file: !3, line: 3512, type: !317)
!16500 = distinct !DILexicalBlock(scope: !16501, file: !3, line: 3512, column: 3)
!16501 = distinct !DILexicalBlock(scope: !16498, file: !3, line: 3512, column: 3)
!16502 = !DILocation(line: 3512, column: 3, scope: !16500)
!16503 = !DILocalVariable(name: "__dummy2", scope: !16500, file: !3, line: 3512, type: !317)
!16504 = !DILocation(line: 3512, column: 3, scope: !16501)
!16505 = !DILocation(line: 3512, column: 3, scope: !16276)
!16506 = !{i32 -2138039041}
!16507 = !DILocation(line: 3512, column: 3, scope: !16275)
!16508 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !16274)
!16509 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !16274)
!16510 = !DILocation(line: 3513, column: 11, scope: !16271)
!16511 = !DILocation(line: 3513, column: 15, scope: !16271)
!16512 = !DILocation(line: 3513, column: 3, scope: !16271)
!16513 = !DILocation(line: 3515, column: 8, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16515, file: !3, line: 3515, column: 8)
!16515 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 3513, column: 19)
!16516 = !DILocation(line: 3515, column: 14, scope: !16514)
!16517 = !DILocation(line: 3515, column: 8, scope: !16515)
!16518 = !DILocation(line: 3518, column: 22, scope: !16514)
!16519 = !DILocation(line: 3518, column: 27, scope: !16514)
!16520 = !DILocation(line: 3516, column: 5, scope: !16514)
!16521 = !DILocation(line: 3519, column: 8, scope: !16515)
!16522 = !DILocation(line: 3520, column: 4, scope: !16515)
!16523 = !DILocation(line: 3522, column: 8, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16515, file: !3, line: 3522, column: 8)
!16525 = !DILocation(line: 3522, column: 14, scope: !16524)
!16526 = !DILocation(line: 3522, column: 8, scope: !16515)
!16527 = !DILocation(line: 3523, column: 5, scope: !16524)
!16528 = !DILocation(line: 3525, column: 8, scope: !16515)
!16529 = !DILocation(line: 3526, column: 4, scope: !16515)
!16530 = !DILocation(line: 3530, column: 21, scope: !16515)
!16531 = !DILocation(line: 3530, column: 25, scope: !16515)
!16532 = !DILocation(line: 3528, column: 4, scope: !16515)
!16533 = !DILocation(line: 3531, column: 8, scope: !16515)
!16534 = !DILocation(line: 3532, column: 3, scope: !16515)
!16535 = !DILocation(line: 3533, column: 27, scope: !16271)
!16536 = !DILocation(line: 3533, column: 31, scope: !16271)
!16537 = !DILocation(line: 3533, column: 37, scope: !16271)
!16538 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !16270)
!16539 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !16270)
!16540 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !16270)
!16541 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !16270)
!16542 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !16270)
!16543 = !DILocation(line: 3534, column: 3, scope: !16271)
!16544 = !DILocation(line: 3536, column: 23, scope: !16271)
!16545 = !DILocation(line: 3536, column: 3, scope: !16271)
!16546 = !DILocation(line: 3537, column: 15, scope: !16271)
!16547 = !DILocation(line: 3537, column: 3, scope: !16271)
!16548 = !DILocation(line: 3539, column: 7, scope: !16271)
!16549 = !DILocation(line: 3540, column: 3, scope: !16271)
!16550 = !DILocation(line: 3542, column: 7, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16268, file: !3, line: 3542, column: 6)
!16552 = !DILocation(line: 3542, column: 6, scope: !16268)
!16553 = !DILocation(line: 3543, column: 3, scope: !16551)
!16554 = !DILocation(line: 3544, column: 9, scope: !16268)
!16555 = !DILocation(line: 3544, column: 2, scope: !16268)
!16556 = !DILocation(line: 3545, column: 1, scope: !16268)
!16557 = distinct !DISubprogram(name: "hfcm_bctrl", scope: !3, file: !3, line: 3681, type: !9584, scopeLine: 3682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16558 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 3703, column: 3, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16557, file: !3, line: 3691, column: 15)
!16561 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !16559)
!16562 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 3701, column: 3, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !16565, file: !3, line: 3701, column: 3)
!16565 = distinct !DILexicalBlock(scope: !16566, file: !3, line: 3701, column: 3)
!16566 = distinct !DILexicalBlock(scope: !16567, file: !3, line: 3701, column: 3)
!16567 = distinct !DILexicalBlock(scope: !16568, file: !3, line: 3701, column: 3)
!16568 = distinct !DILexicalBlock(scope: !16560, file: !3, line: 3701, column: 3)
!16569 = !DILocalVariable(name: "ch", arg: 1, scope: !16557, file: !3, line: 3681, type: !9566)
!16570 = !DILocation(line: 3681, column: 33, scope: !16557)
!16571 = !DILocalVariable(name: "cmd", arg: 2, scope: !16557, file: !3, line: 3681, type: !9152)
!16572 = !DILocation(line: 3681, column: 43, scope: !16557)
!16573 = !DILocalVariable(name: "arg", arg: 3, scope: !16557, file: !3, line: 3681, type: !570)
!16574 = !DILocation(line: 3681, column: 54, scope: !16557)
!16575 = !DILocalVariable(name: "bch", scope: !16557, file: !3, line: 3683, type: !9617)
!16576 = !DILocation(line: 3683, column: 20, scope: !16557)
!16577 = !DILocalVariable(name: "__mptr", scope: !16578, file: !3, line: 3683, type: !570)
!16578 = distinct !DILexicalBlock(scope: !16557, file: !3, line: 3683, column: 26)
!16579 = !DILocation(line: 3683, column: 26, scope: !16578)
!16580 = !DILocation(line: 3683, column: 26, scope: !16581)
!16581 = distinct !DILexicalBlock(scope: !16578, file: !3, line: 3683, column: 26)
!16582 = !DILocalVariable(name: "hc", scope: !16557, file: !3, line: 3684, type: !9128)
!16583 = !DILocation(line: 3684, column: 20, scope: !16557)
!16584 = !DILocation(line: 3684, column: 25, scope: !16557)
!16585 = !DILocation(line: 3684, column: 30, scope: !16557)
!16586 = !DILocalVariable(name: "err", scope: !16557, file: !3, line: 3685, type: !37)
!16587 = !DILocation(line: 3685, column: 8, scope: !16557)
!16588 = !DILocalVariable(name: "flags", scope: !16557, file: !3, line: 3686, type: !9457)
!16589 = !DILocation(line: 3686, column: 9, scope: !16557)
!16590 = !DILocation(line: 3688, column: 6, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16557, file: !3, line: 3688, column: 6)
!16592 = !DILocation(line: 3688, column: 11, scope: !16591)
!16593 = !DILocation(line: 3688, column: 17, scope: !16591)
!16594 = !DILocation(line: 3688, column: 6, scope: !16557)
!16595 = !DILocation(line: 3690, column: 20, scope: !16591)
!16596 = !DILocation(line: 3690, column: 25, scope: !16591)
!16597 = !DILocation(line: 3689, column: 3, scope: !16591)
!16598 = !DILocation(line: 3691, column: 10, scope: !16557)
!16599 = !DILocation(line: 3691, column: 2, scope: !16557)
!16600 = !DILocation(line: 3693, column: 33, scope: !16560)
!16601 = !DILocation(line: 3693, column: 38, scope: !16560)
!16602 = !DILocation(line: 3693, column: 3, scope: !16560)
!16603 = !DILocation(line: 3694, column: 23, scope: !16560)
!16604 = !DILocation(line: 3694, column: 3, scope: !16560)
!16605 = !DILocation(line: 3695, column: 3, scope: !16560)
!16606 = !DILocation(line: 3695, column: 7, scope: !16560)
!16607 = !DILocation(line: 3695, column: 16, scope: !16560)
!16608 = !DILocation(line: 3696, column: 3, scope: !16560)
!16609 = !DILocation(line: 3696, column: 7, scope: !16560)
!16610 = !DILocation(line: 3696, column: 12, scope: !16560)
!16611 = !DILocation(line: 3697, column: 3, scope: !16560)
!16612 = !DILocation(line: 3698, column: 7, scope: !16560)
!16613 = !DILocation(line: 3699, column: 3, scope: !16560)
!16614 = !DILocation(line: 3701, column: 3, scope: !16560)
!16615 = !DILocation(line: 3701, column: 3, scope: !16568)
!16616 = !DILocalVariable(name: "__dummy", scope: !16617, file: !3, line: 3701, type: !317)
!16617 = distinct !DILexicalBlock(scope: !16567, file: !3, line: 3701, column: 3)
!16618 = !DILocation(line: 3701, column: 3, scope: !16617)
!16619 = !DILocalVariable(name: "__dummy2", scope: !16617, file: !3, line: 3701, type: !9457)
!16620 = !DILocation(line: 3701, column: 3, scope: !16567)
!16621 = !DILocation(line: 3701, column: 3, scope: !16566)
!16622 = !DILocation(line: 3701, column: 3, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16566, file: !3, line: 3701, column: 3)
!16624 = !DILocalVariable(name: "__dummy", scope: !16625, file: !3, line: 3701, type: !317)
!16625 = distinct !DILexicalBlock(scope: !16626, file: !3, line: 3701, column: 3)
!16626 = distinct !DILexicalBlock(scope: !16623, file: !3, line: 3701, column: 3)
!16627 = !DILocation(line: 3701, column: 3, scope: !16625)
!16628 = !DILocalVariable(name: "__dummy2", scope: !16625, file: !3, line: 3701, type: !9457)
!16629 = !DILocation(line: 3701, column: 3, scope: !16626)
!16630 = !DILocation(line: 3701, column: 3, scope: !16565)
!16631 = !{i32 -2138035626}
!16632 = !DILocation(line: 3701, column: 3, scope: !16564)
!16633 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !16563)
!16634 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !16563)
!16635 = !DILocation(line: 3702, column: 23, scope: !16560)
!16636 = !DILocation(line: 3702, column: 28, scope: !16560)
!16637 = !DILocation(line: 3702, column: 9, scope: !16560)
!16638 = !DILocation(line: 3702, column: 7, scope: !16560)
!16639 = !DILocation(line: 3703, column: 27, scope: !16560)
!16640 = !DILocation(line: 3703, column: 31, scope: !16560)
!16641 = !DILocation(line: 3703, column: 37, scope: !16560)
!16642 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !16559)
!16643 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !16559)
!16644 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !16559)
!16645 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !16559)
!16646 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !16559)
!16647 = !DILocation(line: 3704, column: 3, scope: !16560)
!16648 = !DILocation(line: 3707, column: 20, scope: !16560)
!16649 = !DILocation(line: 3706, column: 3, scope: !16560)
!16650 = !DILocation(line: 3708, column: 2, scope: !16560)
!16651 = !DILocation(line: 3709, column: 9, scope: !16557)
!16652 = !DILocation(line: 3709, column: 2, scope: !16557)
!16653 = distinct !DISubprogram(name: "list_add", scope: !11675, file: !11675, line: 84, type: !12511, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16654 = !DILocalVariable(name: "new", arg: 1, scope: !16653, file: !11675, line: 84, type: !292)
!16655 = !DILocation(line: 84, column: 47, scope: !16653)
!16656 = !DILocalVariable(name: "head", arg: 2, scope: !16653, file: !11675, line: 84, type: !292)
!16657 = !DILocation(line: 84, column: 70, scope: !16653)
!16658 = !DILocation(line: 86, column: 13, scope: !16653)
!16659 = !DILocation(line: 86, column: 18, scope: !16653)
!16660 = !DILocation(line: 86, column: 24, scope: !16653)
!16661 = !DILocation(line: 86, column: 30, scope: !16653)
!16662 = !DILocation(line: 86, column: 2, scope: !16653)
!16663 = !DILocation(line: 87, column: 1, scope: !16653)
!16664 = distinct !DISubprogram(name: "set_channelmap", scope: !9521, file: !9521, line: 352, type: !16665, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16665 = !DISubroutineType(types: !16666)
!16666 = !{null, !9152, !9454}
!16667 = !DILocalVariable(name: "nr", arg: 1, scope: !16664, file: !9521, line: 352, type: !9152)
!16668 = !DILocation(line: 352, column: 22, scope: !16664)
!16669 = !DILocalVariable(name: "map", arg: 2, scope: !16664, file: !9521, line: 352, type: !9454)
!16670 = !DILocation(line: 352, column: 34, scope: !16664)
!16671 = !DILocation(line: 354, column: 25, scope: !16664)
!16672 = !DILocation(line: 354, column: 28, scope: !16664)
!16673 = !DILocation(line: 354, column: 21, scope: !16664)
!16674 = !DILocation(line: 354, column: 2, scope: !16664)
!16675 = !DILocation(line: 354, column: 6, scope: !16664)
!16676 = !DILocation(line: 354, column: 9, scope: !16664)
!16677 = !DILocation(line: 354, column: 15, scope: !16664)
!16678 = !DILocation(line: 355, column: 1, scope: !16664)
!16679 = distinct !DISubprogram(name: "init_e1_port_hw", scope: !3, file: !3, line: 4687, type: !16680, scopeLine: 4688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16680 = !DISubroutineType(types: !16681)
!16681 = !{null, !9128, !9134}
!16682 = !DILocalVariable(name: "hc", arg: 1, scope: !16679, file: !3, line: 4687, type: !9128)
!16683 = !DILocation(line: 4687, column: 35, scope: !16679)
!16684 = !DILocalVariable(name: "m", arg: 2, scope: !16679, file: !3, line: 4687, type: !9134)
!16685 = !DILocation(line: 4687, column: 54, scope: !16679)
!16686 = !DILocation(line: 4690, column: 11, scope: !16687)
!16687 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 4690, column: 6)
!16688 = !DILocation(line: 4690, column: 6, scope: !16687)
!16689 = !DILocation(line: 4690, column: 21, scope: !16687)
!16690 = !DILocation(line: 4690, column: 6, scope: !16679)
!16691 = !DILocation(line: 4691, column: 8, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16693, file: !3, line: 4691, column: 7)
!16693 = distinct !DILexicalBlock(scope: !16687, file: !3, line: 4690, column: 30)
!16694 = !DILocation(line: 4691, column: 11, scope: !16692)
!16695 = !DILocation(line: 4691, column: 7, scope: !16693)
!16696 = !DILocation(line: 4692, column: 4, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16692, file: !3, line: 4691, column: 28)
!16698 = !DILocation(line: 4695, column: 3, scope: !16697)
!16699 = !DILocation(line: 4696, column: 8, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16701, file: !3, line: 4696, column: 8)
!16701 = distinct !DILexicalBlock(scope: !16692, file: !3, line: 4695, column: 10)
!16702 = !DILocation(line: 4696, column: 14, scope: !16700)
!16703 = !DILocation(line: 4696, column: 8, scope: !16701)
!16704 = !DILocation(line: 4702, column: 12, scope: !16700)
!16705 = !DILocation(line: 4702, column: 20, scope: !16700)
!16706 = !DILocation(line: 4697, column: 5, scope: !16700)
!16707 = !DILocation(line: 4704, column: 9, scope: !16701)
!16708 = !DILocation(line: 4704, column: 13, scope: !16701)
!16709 = !DILocation(line: 4704, column: 18, scope: !16701)
!16710 = !DILocation(line: 4704, column: 22, scope: !16701)
!16711 = !DILocation(line: 4704, column: 31, scope: !16701)
!16712 = !DILocation(line: 4703, column: 4, scope: !16701)
!16713 = !DILocation(line: 4706, column: 2, scope: !16693)
!16714 = !DILocation(line: 4708, column: 11, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 4708, column: 6)
!16716 = !DILocation(line: 4708, column: 6, scope: !16715)
!16717 = !DILocation(line: 4708, column: 21, scope: !16715)
!16718 = !DILocation(line: 4708, column: 6, scope: !16679)
!16719 = !DILocation(line: 4709, column: 7, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16721, file: !3, line: 4709, column: 7)
!16721 = distinct !DILexicalBlock(scope: !16715, file: !3, line: 4708, column: 30)
!16722 = !DILocation(line: 4709, column: 13, scope: !16720)
!16723 = !DILocation(line: 4709, column: 7, scope: !16721)
!16724 = !DILocation(line: 4712, column: 21, scope: !16720)
!16725 = !DILocation(line: 4712, column: 29, scope: !16720)
!16726 = !DILocation(line: 4710, column: 4, scope: !16720)
!16727 = !DILocation(line: 4714, column: 8, scope: !16721)
!16728 = !DILocation(line: 4714, column: 12, scope: !16721)
!16729 = !DILocation(line: 4714, column: 17, scope: !16721)
!16730 = !DILocation(line: 4714, column: 21, scope: !16721)
!16731 = !DILocation(line: 4714, column: 30, scope: !16721)
!16732 = !DILocation(line: 4713, column: 3, scope: !16721)
!16733 = !DILocation(line: 4715, column: 2, scope: !16721)
!16734 = !DILocation(line: 4717, column: 11, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 4717, column: 6)
!16736 = !DILocation(line: 4717, column: 6, scope: !16735)
!16737 = !DILocation(line: 4717, column: 21, scope: !16735)
!16738 = !DILocation(line: 4717, column: 6, scope: !16679)
!16739 = !DILocation(line: 4718, column: 7, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16741, file: !3, line: 4718, column: 7)
!16741 = distinct !DILexicalBlock(scope: !16735, file: !3, line: 4717, column: 30)
!16742 = !DILocation(line: 4718, column: 13, scope: !16740)
!16743 = !DILocation(line: 4718, column: 7, scope: !16741)
!16744 = !DILocation(line: 4721, column: 21, scope: !16740)
!16745 = !DILocation(line: 4721, column: 29, scope: !16740)
!16746 = !DILocation(line: 4719, column: 4, scope: !16740)
!16747 = !DILocation(line: 4723, column: 8, scope: !16741)
!16748 = !DILocation(line: 4723, column: 12, scope: !16741)
!16749 = !DILocation(line: 4723, column: 17, scope: !16741)
!16750 = !DILocation(line: 4723, column: 21, scope: !16741)
!16751 = !DILocation(line: 4723, column: 30, scope: !16741)
!16752 = !DILocation(line: 4722, column: 3, scope: !16741)
!16753 = !DILocation(line: 4724, column: 2, scope: !16741)
!16754 = !DILocation(line: 4726, column: 11, scope: !16755)
!16755 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 4726, column: 6)
!16756 = !DILocation(line: 4726, column: 6, scope: !16755)
!16757 = !DILocation(line: 4726, column: 21, scope: !16755)
!16758 = !DILocation(line: 4726, column: 6, scope: !16679)
!16759 = !DILocation(line: 4727, column: 7, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16761, file: !3, line: 4727, column: 7)
!16761 = distinct !DILexicalBlock(scope: !16755, file: !3, line: 4726, column: 30)
!16762 = !DILocation(line: 4727, column: 13, scope: !16760)
!16763 = !DILocation(line: 4727, column: 7, scope: !16761)
!16764 = !DILocation(line: 4731, column: 21, scope: !16760)
!16765 = !DILocation(line: 4731, column: 29, scope: !16760)
!16766 = !DILocation(line: 4728, column: 4, scope: !16760)
!16767 = !DILocation(line: 4733, column: 8, scope: !16761)
!16768 = !DILocation(line: 4733, column: 12, scope: !16761)
!16769 = !DILocation(line: 4733, column: 17, scope: !16761)
!16770 = !DILocation(line: 4733, column: 21, scope: !16761)
!16771 = !DILocation(line: 4733, column: 30, scope: !16761)
!16772 = !DILocation(line: 4732, column: 3, scope: !16761)
!16773 = !DILocation(line: 4734, column: 2, scope: !16761)
!16774 = !DILocation(line: 4736, column: 11, scope: !16775)
!16775 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 4736, column: 6)
!16776 = !DILocation(line: 4736, column: 6, scope: !16775)
!16777 = !DILocation(line: 4736, column: 21, scope: !16775)
!16778 = !DILocation(line: 4736, column: 6, scope: !16679)
!16779 = !DILocation(line: 4737, column: 7, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16781, file: !3, line: 4737, column: 7)
!16781 = distinct !DILexicalBlock(scope: !16775, file: !3, line: 4736, column: 30)
!16782 = !DILocation(line: 4737, column: 13, scope: !16780)
!16783 = !DILocation(line: 4737, column: 7, scope: !16781)
!16784 = !DILocation(line: 4741, column: 21, scope: !16780)
!16785 = !DILocation(line: 4741, column: 29, scope: !16780)
!16786 = !DILocation(line: 4738, column: 4, scope: !16780)
!16787 = !DILocation(line: 4743, column: 8, scope: !16781)
!16788 = !DILocation(line: 4743, column: 12, scope: !16781)
!16789 = !DILocation(line: 4743, column: 17, scope: !16781)
!16790 = !DILocation(line: 4743, column: 21, scope: !16781)
!16791 = !DILocation(line: 4743, column: 30, scope: !16781)
!16792 = !DILocation(line: 4742, column: 3, scope: !16781)
!16793 = !DILocation(line: 4744, column: 2, scope: !16781)
!16794 = !DILocation(line: 4746, column: 13, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 4746, column: 6)
!16796 = !DILocation(line: 4746, column: 8, scope: !16795)
!16797 = !DILocation(line: 4746, column: 23, scope: !16795)
!16798 = !DILocation(line: 4746, column: 6, scope: !16679)
!16799 = !DILocation(line: 4747, column: 7, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16801, file: !3, line: 4747, column: 7)
!16801 = distinct !DILexicalBlock(scope: !16795, file: !3, line: 4746, column: 33)
!16802 = !DILocation(line: 4747, column: 13, scope: !16800)
!16803 = !DILocation(line: 4747, column: 7, scope: !16801)
!16804 = !DILocation(line: 4750, column: 21, scope: !16800)
!16805 = !DILocation(line: 4750, column: 29, scope: !16800)
!16806 = !DILocation(line: 4748, column: 4, scope: !16800)
!16807 = !DILocation(line: 4752, column: 8, scope: !16801)
!16808 = !DILocation(line: 4752, column: 12, scope: !16801)
!16809 = !DILocation(line: 4752, column: 17, scope: !16801)
!16810 = !DILocation(line: 4752, column: 21, scope: !16801)
!16811 = !DILocation(line: 4752, column: 30, scope: !16801)
!16812 = !DILocation(line: 4751, column: 3, scope: !16801)
!16813 = !DILocation(line: 4753, column: 2, scope: !16801)
!16814 = !DILocation(line: 4754, column: 7, scope: !16815)
!16815 = distinct !DILexicalBlock(scope: !16816, file: !3, line: 4754, column: 7)
!16816 = distinct !DILexicalBlock(scope: !16795, file: !3, line: 4753, column: 9)
!16817 = !DILocation(line: 4754, column: 13, scope: !16815)
!16818 = !DILocation(line: 4754, column: 7, scope: !16816)
!16819 = !DILocation(line: 4757, column: 21, scope: !16815)
!16820 = !DILocation(line: 4757, column: 29, scope: !16815)
!16821 = !DILocation(line: 4755, column: 4, scope: !16815)
!16822 = !DILocation(line: 4760, column: 11, scope: !16823)
!16823 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 4760, column: 6)
!16824 = !DILocation(line: 4760, column: 6, scope: !16823)
!16825 = !DILocation(line: 4760, column: 21, scope: !16823)
!16826 = !DILocation(line: 4760, column: 6, scope: !16679)
!16827 = !DILocation(line: 4761, column: 7, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16829, file: !3, line: 4761, column: 7)
!16829 = distinct !DILexicalBlock(scope: !16823, file: !3, line: 4760, column: 31)
!16830 = !DILocation(line: 4761, column: 13, scope: !16828)
!16831 = !DILocation(line: 4761, column: 7, scope: !16829)
!16832 = !DILocation(line: 4764, column: 21, scope: !16828)
!16833 = !DILocation(line: 4764, column: 29, scope: !16828)
!16834 = !DILocation(line: 4762, column: 4, scope: !16828)
!16835 = !DILocation(line: 4765, column: 43, scope: !16829)
!16836 = !DILocation(line: 4765, column: 47, scope: !16829)
!16837 = !DILocation(line: 4765, column: 3, scope: !16829)
!16838 = !DILocation(line: 4766, column: 2, scope: !16829)
!16839 = !DILocation(line: 4767, column: 12, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16823, file: !3, line: 4767, column: 7)
!16841 = !DILocation(line: 4767, column: 7, scope: !16840)
!16842 = !DILocation(line: 4767, column: 22, scope: !16840)
!16843 = !DILocation(line: 4767, column: 7, scope: !16823)
!16844 = !DILocation(line: 4768, column: 8, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16846, file: !3, line: 4768, column: 8)
!16846 = distinct !DILexicalBlock(scope: !16840, file: !3, line: 4767, column: 32)
!16847 = !DILocation(line: 4768, column: 14, scope: !16845)
!16848 = !DILocation(line: 4768, column: 8, scope: !16846)
!16849 = !DILocation(line: 4771, column: 22, scope: !16845)
!16850 = !DILocation(line: 4771, column: 30, scope: !16845)
!16851 = !DILocation(line: 4769, column: 5, scope: !16845)
!16852 = !DILocation(line: 4772, column: 44, scope: !16846)
!16853 = !DILocation(line: 4772, column: 48, scope: !16846)
!16854 = !DILocation(line: 4772, column: 4, scope: !16846)
!16855 = !DILocation(line: 4773, column: 3, scope: !16846)
!16856 = !DILocation(line: 4775, column: 11, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 4775, column: 6)
!16858 = !DILocation(line: 4775, column: 6, scope: !16857)
!16859 = !DILocation(line: 4775, column: 21, scope: !16857)
!16860 = !DILocation(line: 4775, column: 6, scope: !16679)
!16861 = !DILocation(line: 4776, column: 7, scope: !16862)
!16862 = distinct !DILexicalBlock(scope: !16863, file: !3, line: 4776, column: 7)
!16863 = distinct !DILexicalBlock(scope: !16857, file: !3, line: 4775, column: 31)
!16864 = !DILocation(line: 4776, column: 13, scope: !16862)
!16865 = !DILocation(line: 4776, column: 7, scope: !16863)
!16866 = !DILocation(line: 4779, column: 21, scope: !16862)
!16867 = !DILocation(line: 4779, column: 29, scope: !16862)
!16868 = !DILocation(line: 4777, column: 4, scope: !16862)
!16869 = !DILocation(line: 4780, column: 39, scope: !16863)
!16870 = !DILocation(line: 4780, column: 43, scope: !16863)
!16871 = !DILocation(line: 4780, column: 3, scope: !16863)
!16872 = !DILocation(line: 4781, column: 2, scope: !16863)
!16873 = !DILocation(line: 4783, column: 11, scope: !16874)
!16874 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 4783, column: 6)
!16875 = !DILocation(line: 4783, column: 6, scope: !16874)
!16876 = !DILocation(line: 4783, column: 21, scope: !16874)
!16877 = !DILocation(line: 4783, column: 6, scope: !16679)
!16878 = !DILocation(line: 4784, column: 40, scope: !16879)
!16879 = distinct !DILexicalBlock(scope: !16874, file: !3, line: 4783, column: 31)
!16880 = !DILocation(line: 4784, column: 35, scope: !16879)
!16881 = !DILocation(line: 4784, column: 49, scope: !16879)
!16882 = !DILocation(line: 4784, column: 55, scope: !16879)
!16883 = !DILocation(line: 4784, column: 3, scope: !16879)
!16884 = !DILocation(line: 4784, column: 7, scope: !16879)
!16885 = !DILocation(line: 4784, column: 12, scope: !16879)
!16886 = !DILocation(line: 4784, column: 16, scope: !16879)
!16887 = !DILocation(line: 4784, column: 25, scope: !16879)
!16888 = !DILocation(line: 4784, column: 32, scope: !16879)
!16889 = !DILocation(line: 4785, column: 7, scope: !16890)
!16890 = distinct !DILexicalBlock(scope: !16879, file: !3, line: 4785, column: 7)
!16891 = !DILocation(line: 4785, column: 13, scope: !16890)
!16892 = !DILocation(line: 4785, column: 7, scope: !16879)
!16893 = !DILocation(line: 4789, column: 18, scope: !16890)
!16894 = !DILocation(line: 4789, column: 22, scope: !16890)
!16895 = !DILocation(line: 4789, column: 27, scope: !16890)
!16896 = !DILocation(line: 4789, column: 31, scope: !16890)
!16897 = !DILocation(line: 4789, column: 40, scope: !16890)
!16898 = !DILocation(line: 4790, column: 11, scope: !16890)
!16899 = !DILocation(line: 4790, column: 19, scope: !16890)
!16900 = !DILocation(line: 4786, column: 4, scope: !16890)
!16901 = !DILocation(line: 4791, column: 2, scope: !16879)
!16902 = !DILocation(line: 4792, column: 3, scope: !16874)
!16903 = !DILocation(line: 4792, column: 7, scope: !16874)
!16904 = !DILocation(line: 4792, column: 12, scope: !16874)
!16905 = !DILocation(line: 4792, column: 16, scope: !16874)
!16906 = !DILocation(line: 4792, column: 25, scope: !16874)
!16907 = !DILocation(line: 4792, column: 32, scope: !16874)
!16908 = !DILocation(line: 4793, column: 1, scope: !16679)
!16909 = distinct !DISubprogram(name: "_queue_data", scope: !9521, file: !9521, line: 565, type: !16910, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16910 = !DISubroutineType(types: !16911)
!16911 = !{null, !9566, !9152, !9152, !9152, !570, !1990}
!16912 = !DILocalVariable(name: "ch", arg: 1, scope: !16909, file: !9521, line: 565, type: !9566)
!16913 = !DILocation(line: 565, column: 34, scope: !16909)
!16914 = !DILocalVariable(name: "prim", arg: 2, scope: !16909, file: !9521, line: 565, type: !9152)
!16915 = !DILocation(line: 565, column: 44, scope: !16909)
!16916 = !DILocalVariable(name: "id", arg: 3, scope: !16909, file: !9521, line: 566, type: !9152)
!16917 = !DILocation(line: 566, column: 11, scope: !16909)
!16918 = !DILocalVariable(name: "len", arg: 4, scope: !16909, file: !9521, line: 566, type: !9152)
!16919 = !DILocation(line: 566, column: 21, scope: !16909)
!16920 = !DILocalVariable(name: "dp", arg: 5, scope: !16909, file: !9521, line: 566, type: !570)
!16921 = !DILocation(line: 566, column: 32, scope: !16909)
!16922 = !DILocalVariable(name: "gfp_mask", arg: 6, scope: !16909, file: !9521, line: 566, type: !1990)
!16923 = !DILocation(line: 566, column: 42, scope: !16909)
!16924 = !DILocalVariable(name: "skb", scope: !16909, file: !9521, line: 568, type: !420)
!16925 = !DILocation(line: 568, column: 19, scope: !16909)
!16926 = !DILocation(line: 570, column: 7, scope: !16927)
!16927 = distinct !DILexicalBlock(scope: !16909, file: !9521, line: 570, column: 6)
!16928 = !DILocation(line: 570, column: 11, scope: !16927)
!16929 = !DILocation(line: 570, column: 6, scope: !16909)
!16930 = !DILocation(line: 571, column: 3, scope: !16927)
!16931 = !DILocation(line: 572, column: 25, scope: !16909)
!16932 = !DILocation(line: 572, column: 31, scope: !16909)
!16933 = !DILocation(line: 572, column: 35, scope: !16909)
!16934 = !DILocation(line: 572, column: 40, scope: !16909)
!16935 = !DILocation(line: 572, column: 44, scope: !16909)
!16936 = !DILocation(line: 572, column: 8, scope: !16909)
!16937 = !DILocation(line: 572, column: 6, scope: !16909)
!16938 = !DILocation(line: 573, column: 7, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16909, file: !9521, line: 573, column: 6)
!16940 = !DILocation(line: 573, column: 6, scope: !16909)
!16941 = !DILocation(line: 574, column: 3, scope: !16939)
!16942 = !DILocation(line: 575, column: 6, scope: !16943)
!16943 = distinct !DILexicalBlock(scope: !16909, file: !9521, line: 575, column: 6)
!16944 = !DILocation(line: 575, column: 10, scope: !16943)
!16945 = !DILocation(line: 575, column: 15, scope: !16943)
!16946 = !DILocation(line: 575, column: 19, scope: !16943)
!16947 = !DILocation(line: 575, column: 25, scope: !16943)
!16948 = !DILocation(line: 575, column: 6, scope: !16909)
!16949 = !DILocation(line: 576, column: 3, scope: !16943)
!16950 = !DILocation(line: 577, column: 1, scope: !16909)
!16951 = distinct !DISubprogram(name: "_alloc_mISDN_skb", scope: !9521, file: !9521, line: 549, type: !16952, scopeLine: 550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16952 = !DISubroutineType(types: !16953)
!16953 = !{!420, !9152, !9152, !9152, !570, !1990}
!16954 = !DILocalVariable(name: "prim", arg: 1, scope: !16951, file: !9521, line: 549, type: !9152)
!16955 = !DILocation(line: 549, column: 24, scope: !16951)
!16956 = !DILocalVariable(name: "id", arg: 2, scope: !16951, file: !9521, line: 549, type: !9152)
!16957 = !DILocation(line: 549, column: 36, scope: !16951)
!16958 = !DILocalVariable(name: "len", arg: 3, scope: !16951, file: !9521, line: 549, type: !9152)
!16959 = !DILocation(line: 549, column: 46, scope: !16951)
!16960 = !DILocalVariable(name: "dp", arg: 4, scope: !16951, file: !9521, line: 549, type: !570)
!16961 = !DILocation(line: 549, column: 57, scope: !16951)
!16962 = !DILocalVariable(name: "gfp_mask", arg: 5, scope: !16951, file: !9521, line: 549, type: !1990)
!16963 = !DILocation(line: 549, column: 67, scope: !16951)
!16964 = !DILocalVariable(name: "skb", scope: !16951, file: !9521, line: 551, type: !420)
!16965 = !DILocation(line: 551, column: 18, scope: !16951)
!16966 = !DILocation(line: 551, column: 37, scope: !16951)
!16967 = !DILocation(line: 551, column: 42, scope: !16951)
!16968 = !DILocation(line: 551, column: 24, scope: !16951)
!16969 = !DILocalVariable(name: "hh", scope: !16951, file: !9521, line: 552, type: !9683)
!16970 = !DILocation(line: 552, column: 20, scope: !16951)
!16971 = !DILocation(line: 554, column: 7, scope: !16972)
!16972 = distinct !DILexicalBlock(scope: !16951, file: !9521, line: 554, column: 6)
!16973 = !DILocation(line: 554, column: 6, scope: !16951)
!16974 = !DILocation(line: 555, column: 3, scope: !16972)
!16975 = !DILocation(line: 556, column: 6, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16951, file: !9521, line: 556, column: 6)
!16977 = !DILocation(line: 556, column: 6, scope: !16951)
!16978 = !DILocation(line: 557, column: 16, scope: !16976)
!16979 = !DILocation(line: 557, column: 21, scope: !16976)
!16980 = !DILocation(line: 557, column: 25, scope: !16976)
!16981 = !DILocation(line: 557, column: 3, scope: !16976)
!16982 = !DILocation(line: 558, column: 7, scope: !16951)
!16983 = !DILocation(line: 558, column: 5, scope: !16951)
!16984 = !DILocation(line: 559, column: 13, scope: !16951)
!16985 = !DILocation(line: 559, column: 2, scope: !16951)
!16986 = !DILocation(line: 559, column: 6, scope: !16951)
!16987 = !DILocation(line: 559, column: 11, scope: !16951)
!16988 = !DILocation(line: 560, column: 11, scope: !16951)
!16989 = !DILocation(line: 560, column: 2, scope: !16951)
!16990 = !DILocation(line: 560, column: 6, scope: !16951)
!16991 = !DILocation(line: 560, column: 9, scope: !16951)
!16992 = !DILocation(line: 561, column: 9, scope: !16951)
!16993 = !DILocation(line: 561, column: 2, scope: !16951)
!16994 = !DILocation(line: 562, column: 1, scope: !16951)
!16995 = distinct !DISubprogram(name: "consume_skb", scope: !422, file: !422, line: 1063, type: !2650, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16996 = !DILocalVariable(name: "skb", arg: 1, scope: !16995, file: !422, line: 1063, type: !420)
!16997 = !DILocation(line: 1063, column: 48, scope: !16995)
!16998 = !DILocation(line: 1065, column: 19, scope: !16995)
!16999 = !DILocation(line: 1065, column: 9, scope: !16995)
!17000 = !DILocation(line: 1065, column: 2, scope: !16995)
!17001 = distinct !DISubprogram(name: "mI_alloc_skb", scope: !9521, file: !9521, line: 538, type: !17002, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17002 = !DISubroutineType(types: !17003)
!17003 = !{!420, !7, !1990}
!17004 = !DILocalVariable(name: "len", arg: 1, scope: !17001, file: !9521, line: 538, type: !7)
!17005 = !DILocation(line: 538, column: 27, scope: !17001)
!17006 = !DILocalVariable(name: "gfp_mask", arg: 2, scope: !17001, file: !9521, line: 538, type: !1990)
!17007 = !DILocation(line: 538, column: 38, scope: !17001)
!17008 = !DILocalVariable(name: "skb", scope: !17001, file: !9521, line: 540, type: !420)
!17009 = !DILocation(line: 540, column: 18, scope: !17001)
!17010 = !DILocation(line: 542, column: 18, scope: !17001)
!17011 = !DILocation(line: 542, column: 22, scope: !17001)
!17012 = !DILocation(line: 542, column: 42, scope: !17001)
!17013 = !DILocation(line: 542, column: 8, scope: !17001)
!17014 = !DILocation(line: 542, column: 6, scope: !17001)
!17015 = !DILocation(line: 543, column: 6, scope: !17016)
!17016 = distinct !DILexicalBlock(scope: !17001, file: !9521, line: 543, column: 6)
!17017 = !DILocation(line: 543, column: 6, scope: !17001)
!17018 = !DILocation(line: 544, column: 15, scope: !17016)
!17019 = !DILocation(line: 544, column: 3, scope: !17016)
!17020 = !DILocation(line: 545, column: 9, scope: !17001)
!17021 = !DILocation(line: 545, column: 2, scope: !17001)
!17022 = distinct !DISubprogram(name: "skb_put_data", scope: !422, file: !422, line: 2270, type: !17023, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17023 = !DISubroutineType(types: !17024)
!17024 = !{!570, !420, !2244, !7}
!17025 = !DILocalVariable(name: "skb", arg: 1, scope: !17022, file: !422, line: 2270, type: !420)
!17026 = !DILocation(line: 2270, column: 50, scope: !17022)
!17027 = !DILocalVariable(name: "data", arg: 2, scope: !17022, file: !422, line: 2270, type: !2244)
!17028 = !DILocation(line: 2270, column: 67, scope: !17022)
!17029 = !DILocalVariable(name: "len", arg: 3, scope: !17022, file: !422, line: 2271, type: !7)
!17030 = !DILocation(line: 2271, column: 19, scope: !17022)
!17031 = !DILocalVariable(name: "tmp", scope: !17022, file: !422, line: 2273, type: !570)
!17032 = !DILocation(line: 2273, column: 8, scope: !17022)
!17033 = !DILocation(line: 2273, column: 22, scope: !17022)
!17034 = !DILocation(line: 2273, column: 27, scope: !17022)
!17035 = !DILocation(line: 2273, column: 14, scope: !17022)
!17036 = !DILocation(line: 2275, column: 9, scope: !17022)
!17037 = !DILocation(line: 2275, column: 14, scope: !17022)
!17038 = !DILocation(line: 2275, column: 20, scope: !17022)
!17039 = !DILocation(line: 2275, column: 2, scope: !17022)
!17040 = !DILocation(line: 2277, column: 9, scope: !17022)
!17041 = !DILocation(line: 2277, column: 2, scope: !17022)
!17042 = distinct !DISubprogram(name: "alloc_skb", scope: !422, file: !422, line: 1091, type: !17002, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17043 = !DILocalVariable(name: "size", arg: 1, scope: !17042, file: !422, line: 1091, type: !7)
!17044 = !DILocation(line: 1091, column: 54, scope: !17042)
!17045 = !DILocalVariable(name: "priority", arg: 2, scope: !17042, file: !422, line: 1092, type: !1990)
!17046 = !DILocation(line: 1092, column: 12, scope: !17042)
!17047 = !DILocation(line: 1094, column: 21, scope: !17042)
!17048 = !DILocation(line: 1094, column: 27, scope: !17042)
!17049 = !DILocation(line: 1094, column: 9, scope: !17042)
!17050 = !DILocation(line: 1094, column: 2, scope: !17042)
!17051 = distinct !DISubprogram(name: "skb_reserve", scope: !422, file: !422, line: 2378, type: !17052, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17052 = !DISubroutineType(types: !17053)
!17053 = !{null, !420, !37}
!17054 = !DILocalVariable(name: "skb", arg: 1, scope: !17051, file: !422, line: 2378, type: !420)
!17055 = !DILocation(line: 2378, column: 48, scope: !17051)
!17056 = !DILocalVariable(name: "len", arg: 2, scope: !17051, file: !422, line: 2378, type: !37)
!17057 = !DILocation(line: 2378, column: 57, scope: !17051)
!17058 = !DILocation(line: 2380, column: 15, scope: !17051)
!17059 = !DILocation(line: 2380, column: 2, scope: !17051)
!17060 = !DILocation(line: 2380, column: 7, scope: !17051)
!17061 = !DILocation(line: 2380, column: 12, scope: !17051)
!17062 = !DILocation(line: 2381, column: 15, scope: !17051)
!17063 = !DILocation(line: 2381, column: 2, scope: !17051)
!17064 = !DILocation(line: 2381, column: 7, scope: !17051)
!17065 = !DILocation(line: 2381, column: 12, scope: !17051)
!17066 = !DILocation(line: 2382, column: 1, scope: !17051)
!17067 = distinct !DISubprogram(name: "hfcmulti_tx", scope: !3, file: !3, line: 1932, type: !11792, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17068 = !DILocalVariable(name: "hc", arg: 1, scope: !17067, file: !3, line: 1932, type: !9128)
!17069 = !DILocation(line: 1932, column: 31, scope: !17067)
!17070 = !DILocalVariable(name: "ch", arg: 2, scope: !17067, file: !3, line: 1932, type: !37)
!17071 = !DILocation(line: 1932, column: 39, scope: !17067)
!17072 = !DILocalVariable(name: "i", scope: !17067, file: !3, line: 1934, type: !37)
!17073 = !DILocation(line: 1934, column: 6, scope: !17067)
!17074 = !DILocalVariable(name: "ii", scope: !17067, file: !3, line: 1934, type: !37)
!17075 = !DILocation(line: 1934, column: 9, scope: !17067)
!17076 = !DILocalVariable(name: "temp", scope: !17067, file: !3, line: 1934, type: !37)
!17077 = !DILocation(line: 1934, column: 13, scope: !17067)
!17078 = !DILocalVariable(name: "len", scope: !17067, file: !3, line: 1934, type: !37)
!17079 = !DILocation(line: 1934, column: 19, scope: !17067)
!17080 = !DILocalVariable(name: "Zspace", scope: !17067, file: !3, line: 1935, type: !37)
!17081 = !DILocation(line: 1935, column: 6, scope: !17067)
!17082 = !DILocalVariable(name: "z1", scope: !17067, file: !3, line: 1935, type: !37)
!17083 = !DILocation(line: 1935, column: 14, scope: !17067)
!17084 = !DILocalVariable(name: "z2", scope: !17067, file: !3, line: 1935, type: !37)
!17085 = !DILocation(line: 1935, column: 18, scope: !17067)
!17086 = !DILocalVariable(name: "Fspace", scope: !17067, file: !3, line: 1936, type: !37)
!17087 = !DILocation(line: 1936, column: 6, scope: !17067)
!17088 = !DILocalVariable(name: "f1", scope: !17067, file: !3, line: 1936, type: !37)
!17089 = !DILocation(line: 1936, column: 14, scope: !17067)
!17090 = !DILocalVariable(name: "f2", scope: !17067, file: !3, line: 1936, type: !37)
!17091 = !DILocation(line: 1936, column: 18, scope: !17067)
!17092 = !DILocalVariable(name: "d", scope: !17067, file: !3, line: 1937, type: !9454)
!17093 = !DILocation(line: 1937, column: 10, scope: !17067)
!17094 = !DILocalVariable(name: "txpending", scope: !17067, file: !3, line: 1938, type: !539)
!17095 = !DILocation(line: 1938, column: 7, scope: !17067)
!17096 = !DILocalVariable(name: "slot_tx", scope: !17067, file: !3, line: 1938, type: !37)
!17097 = !DILocation(line: 1938, column: 18, scope: !17067)
!17098 = !DILocalVariable(name: "bch", scope: !17067, file: !3, line: 1939, type: !9617)
!17099 = !DILocation(line: 1939, column: 19, scope: !17067)
!17100 = !DILocalVariable(name: "dch", scope: !17067, file: !3, line: 1940, type: !9538)
!17101 = !DILocation(line: 1940, column: 20, scope: !17067)
!17102 = !DILocalVariable(name: "sp", scope: !17067, file: !3, line: 1941, type: !8485)
!17103 = !DILocation(line: 1941, column: 20, scope: !17067)
!17104 = !DILocalVariable(name: "idxp", scope: !17067, file: !3, line: 1942, type: !539)
!17105 = !DILocation(line: 1942, column: 7, scope: !17067)
!17106 = !DILocation(line: 1944, column: 8, scope: !17067)
!17107 = !DILocation(line: 1944, column: 12, scope: !17067)
!17108 = !DILocation(line: 1944, column: 17, scope: !17067)
!17109 = !DILocation(line: 1944, column: 21, scope: !17067)
!17110 = !DILocation(line: 1944, column: 6, scope: !17067)
!17111 = !DILocation(line: 1945, column: 8, scope: !17067)
!17112 = !DILocation(line: 1945, column: 12, scope: !17067)
!17113 = !DILocation(line: 1945, column: 17, scope: !17067)
!17114 = !DILocation(line: 1945, column: 21, scope: !17067)
!17115 = !DILocation(line: 1945, column: 6, scope: !17067)
!17116 = !DILocation(line: 1946, column: 8, scope: !17117)
!17117 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 1946, column: 6)
!17118 = !DILocation(line: 1946, column: 13, scope: !17117)
!17119 = !DILocation(line: 1946, column: 18, scope: !17117)
!17120 = !DILocation(line: 1946, column: 6, scope: !17067)
!17121 = !DILocation(line: 1947, column: 3, scope: !17117)
!17122 = !DILocation(line: 1949, column: 15, scope: !17067)
!17123 = !DILocation(line: 1949, column: 19, scope: !17067)
!17124 = !DILocation(line: 1949, column: 24, scope: !17067)
!17125 = !DILocation(line: 1949, column: 28, scope: !17067)
!17126 = !DILocation(line: 1949, column: 12, scope: !17067)
!17127 = !DILocation(line: 1950, column: 12, scope: !17067)
!17128 = !DILocation(line: 1950, column: 16, scope: !17067)
!17129 = !DILocation(line: 1950, column: 21, scope: !17067)
!17130 = !DILocation(line: 1950, column: 25, scope: !17067)
!17131 = !DILocation(line: 1950, column: 10, scope: !17067)
!17132 = !DILocation(line: 1951, column: 6, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 1951, column: 6)
!17134 = !DILocation(line: 1951, column: 6, scope: !17067)
!17135 = !DILocation(line: 1952, column: 30, scope: !17136)
!17136 = distinct !DILexicalBlock(scope: !17137, file: !3, line: 1952, column: 7)
!17137 = distinct !DILexicalBlock(scope: !17133, file: !3, line: 1951, column: 11)
!17138 = !DILocation(line: 1952, column: 35, scope: !17136)
!17139 = !DILocation(line: 1952, column: 8, scope: !17136)
!17140 = !DILocation(line: 1952, column: 7, scope: !17137)
!17141 = !DILocation(line: 1953, column: 4, scope: !17136)
!17142 = !DILocation(line: 1954, column: 9, scope: !17137)
!17143 = !DILocation(line: 1954, column: 14, scope: !17137)
!17144 = !DILocation(line: 1954, column: 6, scope: !17137)
!17145 = !DILocation(line: 1955, column: 11, scope: !17137)
!17146 = !DILocation(line: 1955, column: 16, scope: !17137)
!17147 = !DILocation(line: 1955, column: 8, scope: !17137)
!17148 = !DILocation(line: 1956, column: 2, scope: !17137)
!17149 = !DILocation(line: 1957, column: 30, scope: !17150)
!17150 = distinct !DILexicalBlock(scope: !17151, file: !3, line: 1957, column: 7)
!17151 = distinct !DILexicalBlock(scope: !17133, file: !3, line: 1956, column: 9)
!17152 = !DILocation(line: 1957, column: 35, scope: !17150)
!17153 = !DILocation(line: 1957, column: 8, scope: !17150)
!17154 = !DILocation(line: 1957, column: 7, scope: !17151)
!17155 = !DILocation(line: 1958, column: 4, scope: !17150)
!17156 = !DILocation(line: 1959, column: 9, scope: !17151)
!17157 = !DILocation(line: 1959, column: 14, scope: !17151)
!17158 = !DILocation(line: 1959, column: 6, scope: !17151)
!17159 = !DILocation(line: 1960, column: 11, scope: !17151)
!17160 = !DILocation(line: 1960, column: 16, scope: !17151)
!17161 = !DILocation(line: 1960, column: 8, scope: !17151)
!17162 = !DILocation(line: 1962, column: 7, scope: !17163)
!17163 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 1962, column: 6)
!17164 = !DILocation(line: 1962, column: 6, scope: !17163)
!17165 = !DILocation(line: 1962, column: 6, scope: !17067)
!17166 = !DILocation(line: 1963, column: 11, scope: !17163)
!17167 = !DILocation(line: 1963, column: 10, scope: !17163)
!17168 = !DILocation(line: 1963, column: 16, scope: !17163)
!17169 = !DILocation(line: 1963, column: 7, scope: !17163)
!17170 = !DILocation(line: 1963, column: 3, scope: !17163)
!17171 = !DILocation(line: 1965, column: 8, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 1965, column: 6)
!17173 = !DILocation(line: 1965, column: 13, scope: !17172)
!17174 = !DILocation(line: 1965, column: 17, scope: !17172)
!17175 = !DILocation(line: 1965, column: 16, scope: !17172)
!17176 = !DILocation(line: 1965, column: 27, scope: !17172)
!17177 = !DILocation(line: 1965, column: 6, scope: !17067)
!17178 = !DILocation(line: 1966, column: 3, scope: !17172)
!17179 = !DILocation(line: 1968, column: 32, scope: !17180)
!17180 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 1968, column: 6)
!17181 = !DILocation(line: 1968, column: 36, scope: !17180)
!17182 = !DILocation(line: 1968, column: 6, scope: !17180)
!17183 = !DILocation(line: 1968, column: 42, scope: !17180)
!17184 = !DILocation(line: 1969, column: 7, scope: !17180)
!17185 = !DILocation(line: 1969, column: 11, scope: !17180)
!17186 = !DILocation(line: 1969, column: 16, scope: !17180)
!17187 = !DILocation(line: 1969, column: 20, scope: !17180)
!17188 = !DILocation(line: 1969, column: 29, scope: !17180)
!17189 = !DILocation(line: 1969, column: 46, scope: !17180)
!17190 = !DILocation(line: 1970, column: 7, scope: !17180)
!17191 = !DILocation(line: 1970, column: 11, scope: !17180)
!17192 = !DILocation(line: 1970, column: 16, scope: !17180)
!17193 = !DILocation(line: 1970, column: 20, scope: !17180)
!17194 = !DILocation(line: 1970, column: 28, scope: !17180)
!17195 = !DILocation(line: 1970, column: 33, scope: !17180)
!17196 = !DILocation(line: 1971, column: 7, scope: !17180)
!17197 = !DILocation(line: 1971, column: 11, scope: !17180)
!17198 = !DILocation(line: 1971, column: 16, scope: !17180)
!17199 = !DILocation(line: 1971, column: 20, scope: !17180)
!17200 = !DILocation(line: 1971, column: 28, scope: !17180)
!17201 = !DILocation(line: 1968, column: 6, scope: !17067)
!17202 = !DILocation(line: 1972, column: 3, scope: !17180)
!17203 = !DILocation(line: 1974, column: 3, scope: !17180)
!17204 = !DILocation(line: 1975, column: 2, scope: !17067)
!17205 = !DILocation(line: 1977, column: 7, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 1977, column: 6)
!17207 = !DILocation(line: 1977, column: 6, scope: !17206)
!17208 = !DILocation(line: 1977, column: 17, scope: !17206)
!17209 = !DILocation(line: 1977, column: 6, scope: !17067)
!17210 = !DILocation(line: 1979, column: 3, scope: !17211)
!17211 = distinct !DILexicalBlock(scope: !17206, file: !3, line: 1977, column: 23)
!17212 = !DILocation(line: 1980, column: 3, scope: !17211)
!17213 = !DILocation(line: 1981, column: 3, scope: !17211)
!17214 = !DILocation(line: 1982, column: 4, scope: !17211)
!17215 = !DILocation(line: 1982, column: 14, scope: !17211)
!17216 = !DILocation(line: 1983, column: 2, scope: !17211)
!17217 = !DILocation(line: 1977, column: 20, scope: !17206)
!17218 = !DILabel(scope: !17067, name: "next_frame", file: !3, line: 1984)
!17219 = !DILocation(line: 1984, column: 1, scope: !17067)
!17220 = !DILocation(line: 1985, column: 6, scope: !17221)
!17221 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 1985, column: 6)
!17222 = !DILocation(line: 1985, column: 10, scope: !17221)
!17223 = !DILocation(line: 1985, column: 33, scope: !17221)
!17224 = !DILocation(line: 1985, column: 38, scope: !17221)
!17225 = !DILocation(line: 1985, column: 13, scope: !17221)
!17226 = !DILocation(line: 1985, column: 6, scope: !17067)
!17227 = !DILocation(line: 1986, column: 8, scope: !17228)
!17228 = distinct !DILexicalBlock(scope: !17221, file: !3, line: 1985, column: 46)
!17229 = !DILocation(line: 1986, column: 6, scope: !17228)
!17230 = !DILocation(line: 1987, column: 8, scope: !17228)
!17231 = !DILocation(line: 1987, column: 6, scope: !17228)
!17232 = !DILocation(line: 1988, column: 3, scope: !17228)
!17233 = !DILocation(line: 1988, column: 10, scope: !17228)
!17234 = !DILocation(line: 1988, column: 24, scope: !17228)
!17235 = !DILocation(line: 1988, column: 22, scope: !17228)
!17236 = !DILocation(line: 1988, column: 13, scope: !17228)
!17237 = !DILocation(line: 1989, column: 8, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17239, file: !3, line: 1989, column: 8)
!17239 = distinct !DILexicalBlock(scope: !17228, file: !3, line: 1988, column: 52)
!17240 = !DILocation(line: 1989, column: 14, scope: !17238)
!17241 = !DILocation(line: 1989, column: 8, scope: !17239)
!17242 = !DILocation(line: 1992, column: 22, scope: !17238)
!17243 = !DILocation(line: 1992, column: 26, scope: !17238)
!17244 = !DILocation(line: 1992, column: 29, scope: !17238)
!17245 = !DILocation(line: 1992, column: 34, scope: !17238)
!17246 = !DILocation(line: 1992, column: 40, scope: !17238)
!17247 = !DILocation(line: 1990, column: 5, scope: !17238)
!17248 = !DILocation(line: 1993, column: 9, scope: !17239)
!17249 = !DILocation(line: 1993, column: 7, scope: !17239)
!17250 = distinct !{!17250, !17232, !17251}
!17251 = !DILocation(line: 1994, column: 3, scope: !17228)
!17252 = !DILocation(line: 1995, column: 12, scope: !17228)
!17253 = !DILocation(line: 1995, column: 17, scope: !17228)
!17254 = !DILocation(line: 1995, column: 15, scope: !17228)
!17255 = !DILocation(line: 1995, column: 20, scope: !17228)
!17256 = !DILocation(line: 1995, column: 10, scope: !17228)
!17257 = !DILocation(line: 1996, column: 7, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17228, file: !3, line: 1996, column: 7)
!17259 = !DILocation(line: 1996, column: 14, scope: !17258)
!17260 = !DILocation(line: 1996, column: 7, scope: !17228)
!17261 = !DILocation(line: 1997, column: 14, scope: !17258)
!17262 = !DILocation(line: 1997, column: 18, scope: !17258)
!17263 = !DILocation(line: 1997, column: 11, scope: !17258)
!17264 = !DILocation(line: 1997, column: 4, scope: !17258)
!17265 = !DILocation(line: 2004, column: 37, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17228, file: !3, line: 2004, column: 7)
!17267 = !DILocation(line: 2004, column: 41, scope: !17266)
!17268 = !DILocation(line: 2004, column: 7, scope: !17266)
!17269 = !DILocation(line: 2004, column: 7, scope: !17228)
!17270 = !DILocation(line: 2005, column: 8, scope: !17271)
!17271 = distinct !DILexicalBlock(scope: !17272, file: !3, line: 2005, column: 8)
!17272 = distinct !DILexicalBlock(scope: !17266, file: !3, line: 2004, column: 48)
!17273 = !DILocation(line: 2005, column: 14, scope: !17271)
!17274 = !DILocation(line: 2005, column: 11, scope: !17271)
!17275 = !DILocation(line: 2005, column: 8, scope: !17272)
!17276 = !DILocation(line: 2006, column: 12, scope: !17271)
!17277 = !DILocation(line: 2006, column: 5, scope: !17271)
!17278 = !DILocation(line: 2008, column: 12, scope: !17271)
!17279 = !DILocation(line: 2009, column: 3, scope: !17272)
!17280 = !DILocation(line: 2011, column: 7, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17228, file: !3, line: 2011, column: 7)
!17282 = !DILocation(line: 2011, column: 11, scope: !17281)
!17283 = !DILocation(line: 2011, column: 17, scope: !17281)
!17284 = !DILocation(line: 2011, column: 32, scope: !17281)
!17285 = !DILocation(line: 2011, column: 35, scope: !17281)
!17286 = !DILocation(line: 2011, column: 7, scope: !17228)
!17287 = !DILocation(line: 2012, column: 8, scope: !17288)
!17288 = distinct !DILexicalBlock(scope: !17289, file: !3, line: 2012, column: 8)
!17289 = distinct !DILexicalBlock(scope: !17281, file: !3, line: 2011, column: 40)
!17290 = !DILocation(line: 2012, column: 14, scope: !17288)
!17291 = !DILocation(line: 2012, column: 11, scope: !17288)
!17292 = !DILocation(line: 2012, column: 8, scope: !17289)
!17293 = !DILocation(line: 2013, column: 12, scope: !17288)
!17294 = !DILocation(line: 2013, column: 5, scope: !17288)
!17295 = !DILocation(line: 2014, column: 3, scope: !17289)
!17296 = !DILocation(line: 2016, column: 7, scope: !17297)
!17297 = distinct !DILexicalBlock(scope: !17228, file: !3, line: 2016, column: 7)
!17298 = !DILocation(line: 2016, column: 14, scope: !17297)
!17299 = !DILocation(line: 2016, column: 7, scope: !17228)
!17300 = !DILocation(line: 2017, column: 4, scope: !17297)
!17301 = !DILocation(line: 2018, column: 2, scope: !17228)
!17302 = !DILocation(line: 2019, column: 7, scope: !17067)
!17303 = !DILocation(line: 2019, column: 35, scope: !17067)
!17304 = !DILocation(line: 2019, column: 39, scope: !17067)
!17305 = !DILocation(line: 2019, column: 33, scope: !17067)
!17306 = !DILocation(line: 2019, column: 5, scope: !17067)
!17307 = !DILocation(line: 2020, column: 7, scope: !17067)
!17308 = !DILocation(line: 2020, column: 35, scope: !17067)
!17309 = !DILocation(line: 2020, column: 39, scope: !17067)
!17310 = !DILocation(line: 2020, column: 33, scope: !17067)
!17311 = !DILocation(line: 2020, column: 5, scope: !17067)
!17312 = !DILocation(line: 2021, column: 2, scope: !17067)
!17313 = !DILocation(line: 2021, column: 9, scope: !17067)
!17314 = !DILocation(line: 2021, column: 24, scope: !17067)
!17315 = !DILocation(line: 2021, column: 52, scope: !17067)
!17316 = !DILocation(line: 2021, column: 56, scope: !17067)
!17317 = !DILocation(line: 2021, column: 50, scope: !17067)
!17318 = !DILocation(line: 2021, column: 21, scope: !17067)
!17319 = !DILocation(line: 2021, column: 12, scope: !17067)
!17320 = !DILocation(line: 2022, column: 7, scope: !17321)
!17321 = distinct !DILexicalBlock(scope: !17322, file: !3, line: 2022, column: 7)
!17322 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2021, column: 64)
!17323 = !DILocation(line: 2022, column: 13, scope: !17321)
!17324 = !DILocation(line: 2022, column: 7, scope: !17322)
!17325 = !DILocation(line: 2024, column: 33, scope: !17321)
!17326 = !DILocation(line: 2024, column: 37, scope: !17321)
!17327 = !DILocation(line: 2024, column: 40, scope: !17321)
!17328 = !DILocation(line: 2024, column: 45, scope: !17321)
!17329 = !DILocation(line: 2024, column: 51, scope: !17321)
!17330 = !DILocation(line: 2023, column: 4, scope: !17321)
!17331 = !DILocation(line: 2025, column: 8, scope: !17322)
!17332 = !DILocation(line: 2025, column: 6, scope: !17322)
!17333 = distinct !{!17333, !17312, !17334}
!17334 = !DILocation(line: 2026, column: 2, scope: !17067)
!17335 = !DILocation(line: 2027, column: 23, scope: !17067)
!17336 = !DILocation(line: 2027, column: 28, scope: !17067)
!17337 = !DILocation(line: 2027, column: 26, scope: !17067)
!17338 = !DILocation(line: 2027, column: 2, scope: !17067)
!17339 = !DILocation(line: 2027, column: 6, scope: !17067)
!17340 = !DILocation(line: 2027, column: 11, scope: !17067)
!17341 = !DILocation(line: 2027, column: 15, scope: !17067)
!17342 = !DILocation(line: 2027, column: 21, scope: !17067)
!17343 = !DILocation(line: 2028, column: 6, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2028, column: 6)
!17345 = !DILocation(line: 2028, column: 10, scope: !17344)
!17346 = !DILocation(line: 2028, column: 15, scope: !17344)
!17347 = !DILocation(line: 2028, column: 19, scope: !17344)
!17348 = !DILocation(line: 2028, column: 25, scope: !17344)
!17349 = !DILocation(line: 2028, column: 6, scope: !17067)
!17350 = !DILocation(line: 2029, column: 25, scope: !17344)
!17351 = !DILocation(line: 2029, column: 29, scope: !17344)
!17352 = !DILocation(line: 2029, column: 3, scope: !17344)
!17353 = !DILocation(line: 2029, column: 7, scope: !17344)
!17354 = !DILocation(line: 2029, column: 12, scope: !17344)
!17355 = !DILocation(line: 2029, column: 16, scope: !17344)
!17356 = !DILocation(line: 2029, column: 22, scope: !17344)
!17357 = !DILocation(line: 2030, column: 11, scope: !17067)
!17358 = !DILocation(line: 2030, column: 16, scope: !17067)
!17359 = !DILocation(line: 2030, column: 14, scope: !17067)
!17360 = !DILocation(line: 2030, column: 9, scope: !17067)
!17361 = !DILocation(line: 2031, column: 6, scope: !17362)
!17362 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2031, column: 6)
!17363 = !DILocation(line: 2031, column: 13, scope: !17362)
!17364 = !DILocation(line: 2031, column: 6, scope: !17067)
!17365 = !DILocation(line: 2032, column: 13, scope: !17362)
!17366 = !DILocation(line: 2032, column: 17, scope: !17362)
!17367 = !DILocation(line: 2032, column: 10, scope: !17362)
!17368 = !DILocation(line: 2032, column: 3, scope: !17362)
!17369 = !DILocation(line: 2033, column: 9, scope: !17067)
!17370 = !DILocation(line: 2035, column: 6, scope: !17371)
!17371 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2035, column: 6)
!17372 = !DILocation(line: 2035, column: 10, scope: !17371)
!17373 = !DILocation(line: 2035, column: 40, scope: !17371)
!17374 = !DILocation(line: 2035, column: 45, scope: !17371)
!17375 = !DILocation(line: 2035, column: 13, scope: !17371)
!17376 = !DILocation(line: 2035, column: 6, scope: !17067)
!17377 = !DILocation(line: 2036, column: 12, scope: !17371)
!17378 = !DILocation(line: 2036, column: 21, scope: !17371)
!17379 = !DILocation(line: 2036, column: 25, scope: !17371)
!17380 = !DILocation(line: 2036, column: 19, scope: !17371)
!17381 = !DILocation(line: 2036, column: 32, scope: !17371)
!17382 = !DILocation(line: 2036, column: 36, scope: !17371)
!17383 = !DILocation(line: 2036, column: 30, scope: !17371)
!17384 = !DILocation(line: 2036, column: 10, scope: !17371)
!17385 = !DILocation(line: 2036, column: 3, scope: !17371)
!17386 = !DILocation(line: 2037, column: 6, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2037, column: 6)
!17388 = !DILocation(line: 2037, column: 13, scope: !17387)
!17389 = !DILocation(line: 2037, column: 6, scope: !17067)
!17390 = !DILocation(line: 2038, column: 3, scope: !17387)
!17391 = !DILocation(line: 2041, column: 7, scope: !17392)
!17392 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2041, column: 6)
!17393 = !DILocation(line: 2041, column: 6, scope: !17067)
!17394 = !DILocation(line: 2042, column: 7, scope: !17395)
!17395 = distinct !DILexicalBlock(scope: !17396, file: !3, line: 2042, column: 7)
!17396 = distinct !DILexicalBlock(scope: !17392, file: !3, line: 2041, column: 12)
!17397 = !DILocation(line: 2042, column: 13, scope: !17395)
!17398 = !DILocation(line: 2042, column: 10, scope: !17395)
!17399 = !DILocation(line: 2042, column: 7, scope: !17396)
!17400 = !DILocation(line: 2044, column: 8, scope: !17401)
!17401 = distinct !DILexicalBlock(scope: !17402, file: !3, line: 2044, column: 8)
!17402 = distinct !DILexicalBlock(scope: !17395, file: !3, line: 2042, column: 17)
!17403 = !DILocation(line: 2044, column: 12, scope: !17401)
!17404 = !DILocation(line: 2044, column: 37, scope: !17401)
!17405 = !DILocation(line: 2044, column: 42, scope: !17401)
!17406 = !DILocation(line: 2044, column: 17, scope: !17401)
!17407 = !DILocation(line: 2044, column: 50, scope: !17401)
!17408 = !DILocation(line: 2045, column: 9, scope: !17401)
!17409 = !DILocation(line: 2045, column: 8, scope: !17401)
!17410 = !DILocation(line: 2045, column: 19, scope: !17401)
!17411 = !DILocation(line: 2045, column: 22, scope: !17401)
!17412 = !DILocation(line: 2045, column: 30, scope: !17401)
!17413 = !DILocation(line: 2044, column: 8, scope: !17402)
!17414 = !DILocation(line: 2046, column: 9, scope: !17415)
!17415 = distinct !DILexicalBlock(scope: !17416, file: !3, line: 2046, column: 9)
!17416 = distinct !DILexicalBlock(scope: !17401, file: !3, line: 2045, column: 36)
!17417 = !DILocation(line: 2046, column: 15, scope: !17415)
!17418 = !DILocation(line: 2046, column: 9, scope: !17416)
!17419 = !DILocation(line: 2051, column: 23, scope: !17415)
!17420 = !DILocation(line: 2051, column: 27, scope: !17415)
!17421 = !DILocation(line: 2047, column: 6, scope: !17415)
!17422 = !DILocation(line: 2053, column: 9, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17416, file: !3, line: 2053, column: 9)
!17424 = !DILocation(line: 2053, column: 13, scope: !17423)
!17425 = !DILocation(line: 2053, column: 19, scope: !17423)
!17426 = !DILocation(line: 2053, column: 9, scope: !17416)
!17427 = !DILocation(line: 2054, column: 6, scope: !17423)
!17428 = !DILocation(line: 2058, column: 6, scope: !17423)
!17429 = !DILocation(line: 2060, column: 5, scope: !17416)
!17430 = !DILocation(line: 2061, column: 5, scope: !17416)
!17431 = !DILocation(line: 2062, column: 9, scope: !17432)
!17432 = distinct !DILexicalBlock(scope: !17416, file: !3, line: 2062, column: 9)
!17433 = !DILocation(line: 2062, column: 13, scope: !17432)
!17434 = !DILocation(line: 2062, column: 19, scope: !17432)
!17435 = !DILocation(line: 2062, column: 9, scope: !17416)
!17436 = !DILocation(line: 2063, column: 6, scope: !17432)
!17437 = !DILocation(line: 2067, column: 6, scope: !17432)
!17438 = !DILocation(line: 2069, column: 5, scope: !17416)
!17439 = !DILocation(line: 2070, column: 5, scope: !17416)
!17440 = !DILocation(line: 2071, column: 4, scope: !17416)
!17441 = !DILocation(line: 2072, column: 5, scope: !17402)
!17442 = !DILocation(line: 2072, column: 15, scope: !17402)
!17443 = !DILocation(line: 2073, column: 3, scope: !17402)
!17444 = !DILocation(line: 2074, column: 3, scope: !17396)
!17445 = !DILocation(line: 2078, column: 6, scope: !17446)
!17446 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2078, column: 6)
!17447 = !DILocation(line: 2078, column: 10, scope: !17446)
!17448 = !DILocation(line: 2078, column: 38, scope: !17446)
!17449 = !DILocation(line: 2078, column: 43, scope: !17446)
!17450 = !DILocation(line: 2078, column: 13, scope: !17446)
!17451 = !DILocation(line: 2079, column: 6, scope: !17446)
!17452 = !DILocation(line: 2079, column: 30, scope: !17446)
!17453 = !DILocation(line: 2079, column: 35, scope: !17446)
!17454 = !DILocation(line: 2079, column: 10, scope: !17446)
!17455 = !DILocation(line: 2079, column: 42, scope: !17446)
!17456 = !DILocation(line: 2079, column: 45, scope: !17446)
!17457 = !DILocation(line: 2079, column: 51, scope: !17446)
!17458 = !DILocation(line: 2079, column: 48, scope: !17446)
!17459 = !DILocation(line: 2078, column: 6, scope: !17067)
!17460 = !DILocation(line: 2080, column: 7, scope: !17461)
!17461 = distinct !DILexicalBlock(scope: !17462, file: !3, line: 2080, column: 7)
!17462 = distinct !DILexicalBlock(scope: !17446, file: !3, line: 2079, column: 55)
!17463 = !DILocation(line: 2080, column: 13, scope: !17461)
!17464 = !DILocation(line: 2080, column: 7, scope: !17462)
!17465 = !DILocation(line: 2081, column: 4, scope: !17461)
!17466 = !DILocation(line: 2084, column: 3, scope: !17462)
!17467 = !DILocation(line: 2084, column: 7, scope: !17462)
!17468 = !DILocation(line: 2084, column: 18, scope: !17462)
!17469 = !DILocation(line: 2084, column: 22, scope: !17462)
!17470 = !DILocation(line: 2084, column: 26, scope: !17462)
!17471 = !DILocation(line: 2084, column: 40, scope: !17462)
!17472 = !DILocation(line: 2084, column: 45, scope: !17462)
!17473 = !DILocation(line: 2085, column: 14, scope: !17462)
!17474 = !DILocation(line: 2085, column: 19, scope: !17462)
!17475 = !DILocation(line: 2085, column: 10, scope: !17462)
!17476 = !DILocation(line: 2086, column: 2, scope: !17462)
!17477 = !DILocation(line: 2089, column: 6, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2089, column: 6)
!17479 = !DILocation(line: 2089, column: 10, scope: !17478)
!17480 = !DILocation(line: 2089, column: 35, scope: !17478)
!17481 = !DILocation(line: 2089, column: 40, scope: !17478)
!17482 = !DILocation(line: 2089, column: 15, scope: !17478)
!17483 = !DILocation(line: 2089, column: 48, scope: !17478)
!17484 = !DILocation(line: 2089, column: 54, scope: !17478)
!17485 = !DILocation(line: 2089, column: 53, scope: !17478)
!17486 = !DILocation(line: 2090, column: 6, scope: !17478)
!17487 = !DILocation(line: 2090, column: 9, scope: !17478)
!17488 = !DILocation(line: 2090, column: 17, scope: !17478)
!17489 = !DILocation(line: 2089, column: 6, scope: !17067)
!17490 = !DILocation(line: 2091, column: 7, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17492, file: !3, line: 2091, column: 7)
!17492 = distinct !DILexicalBlock(scope: !17478, file: !3, line: 2090, column: 23)
!17493 = !DILocation(line: 2091, column: 13, scope: !17491)
!17494 = !DILocation(line: 2091, column: 7, scope: !17492)
!17495 = !DILocation(line: 2094, column: 21, scope: !17491)
!17496 = !DILocation(line: 2094, column: 25, scope: !17491)
!17497 = !DILocation(line: 2092, column: 4, scope: !17491)
!17498 = !DILocation(line: 2096, column: 7, scope: !17499)
!17499 = distinct !DILexicalBlock(scope: !17492, file: !3, line: 2096, column: 7)
!17500 = !DILocation(line: 2096, column: 11, scope: !17499)
!17501 = !DILocation(line: 2096, column: 17, scope: !17499)
!17502 = !DILocation(line: 2096, column: 7, scope: !17492)
!17503 = !DILocation(line: 2097, column: 4, scope: !17499)
!17504 = !DILocation(line: 2101, column: 4, scope: !17499)
!17505 = !DILocation(line: 2103, column: 3, scope: !17492)
!17506 = !DILocation(line: 2104, column: 3, scope: !17492)
!17507 = !DILocation(line: 2105, column: 7, scope: !17508)
!17508 = distinct !DILexicalBlock(scope: !17492, file: !3, line: 2105, column: 7)
!17509 = !DILocation(line: 2105, column: 11, scope: !17508)
!17510 = !DILocation(line: 2105, column: 17, scope: !17508)
!17511 = !DILocation(line: 2105, column: 7, scope: !17492)
!17512 = !DILocation(line: 2106, column: 4, scope: !17508)
!17513 = !DILocation(line: 2110, column: 4, scope: !17508)
!17514 = !DILocation(line: 2112, column: 3, scope: !17492)
!17515 = !DILocation(line: 2113, column: 3, scope: !17492)
!17516 = !DILocation(line: 2114, column: 2, scope: !17492)
!17517 = !DILocation(line: 2115, column: 3, scope: !17067)
!17518 = !DILocation(line: 2115, column: 13, scope: !17067)
!17519 = !DILocation(line: 2118, column: 6, scope: !17520)
!17520 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2118, column: 6)
!17521 = !DILocation(line: 2118, column: 6, scope: !17067)
!17522 = !DILocation(line: 2119, column: 27, scope: !17520)
!17523 = !DILocation(line: 2119, column: 31, scope: !17520)
!17524 = !DILocation(line: 2119, column: 36, scope: !17520)
!17525 = !DILocation(line: 2119, column: 40, scope: !17520)
!17526 = !DILocation(line: 2119, column: 24, scope: !17520)
!17527 = !DILocation(line: 2119, column: 3, scope: !17520)
!17528 = !DILocation(line: 2119, column: 7, scope: !17520)
!17529 = !DILocation(line: 2119, column: 19, scope: !17520)
!17530 = !DILocation(line: 2122, column: 7, scope: !17067)
!17531 = !DILocation(line: 2122, column: 5, scope: !17067)
!17532 = !DILocation(line: 2123, column: 6, scope: !17533)
!17533 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2123, column: 6)
!17534 = !DILocation(line: 2123, column: 10, scope: !17533)
!17535 = !DILocation(line: 2123, column: 33, scope: !17533)
!17536 = !DILocation(line: 2123, column: 38, scope: !17533)
!17537 = !DILocation(line: 2123, column: 13, scope: !17533)
!17538 = !DILocation(line: 2123, column: 6, scope: !17067)
!17539 = !DILocation(line: 2124, column: 8, scope: !17533)
!17540 = !DILocation(line: 2124, column: 3, scope: !17533)
!17541 = !DILocation(line: 2126, column: 8, scope: !17533)
!17542 = !DILocation(line: 2127, column: 7, scope: !17067)
!17543 = !DILocation(line: 2127, column: 6, scope: !17067)
!17544 = !DILocation(line: 2127, column: 4, scope: !17067)
!17545 = !DILocation(line: 2128, column: 8, scope: !17067)
!17546 = !DILocation(line: 2128, column: 7, scope: !17067)
!17547 = !DILocation(line: 2128, column: 13, scope: !17067)
!17548 = !DILocation(line: 2128, column: 20, scope: !17067)
!17549 = !DILocation(line: 2128, column: 18, scope: !17067)
!17550 = !DILocation(line: 2128, column: 4, scope: !17067)
!17551 = !DILocation(line: 2129, column: 6, scope: !17552)
!17552 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2129, column: 6)
!17553 = !DILocation(line: 2129, column: 11, scope: !17552)
!17554 = !DILocation(line: 2129, column: 9, scope: !17552)
!17555 = !DILocation(line: 2129, column: 15, scope: !17552)
!17556 = !DILocation(line: 2129, column: 13, scope: !17552)
!17557 = !DILocation(line: 2129, column: 6, scope: !17067)
!17558 = !DILocation(line: 2130, column: 8, scope: !17552)
!17559 = !DILocation(line: 2130, column: 17, scope: !17552)
!17560 = !DILocation(line: 2130, column: 15, scope: !17552)
!17561 = !DILocation(line: 2130, column: 6, scope: !17552)
!17562 = !DILocation(line: 2130, column: 3, scope: !17552)
!17563 = !DILocation(line: 2131, column: 6, scope: !17564)
!17564 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2131, column: 6)
!17565 = !DILocation(line: 2131, column: 12, scope: !17564)
!17566 = !DILocation(line: 2131, column: 6, scope: !17067)
!17567 = !DILocation(line: 2134, column: 20, scope: !17564)
!17568 = !DILocation(line: 2134, column: 24, scope: !17564)
!17569 = !DILocation(line: 2134, column: 27, scope: !17564)
!17570 = !DILocation(line: 2134, column: 32, scope: !17564)
!17571 = !DILocation(line: 2134, column: 36, scope: !17564)
!17572 = !DILocation(line: 2134, column: 44, scope: !17564)
!17573 = !DILocation(line: 2134, column: 48, scope: !17564)
!17574 = !DILocation(line: 2134, column: 52, scope: !17564)
!17575 = !DILocation(line: 2134, column: 55, scope: !17564)
!17576 = !DILocation(line: 2134, column: 54, scope: !17564)
!17577 = !DILocation(line: 2134, column: 58, scope: !17564)
!17578 = !DILocation(line: 2134, column: 62, scope: !17564)
!17579 = !DILocation(line: 2134, column: 61, scope: !17564)
!17580 = !DILocation(line: 2135, column: 10, scope: !17564)
!17581 = !DILocation(line: 2132, column: 3, scope: !17564)
!17582 = !DILocation(line: 2138, column: 2, scope: !17067)
!17583 = !DILocation(line: 2138, column: 6, scope: !17067)
!17584 = !DILocation(line: 2138, column: 17, scope: !17067)
!17585 = !DILocation(line: 2138, column: 21, scope: !17067)
!17586 = !DILocation(line: 2138, column: 24, scope: !17067)
!17587 = !DILocation(line: 2138, column: 29, scope: !17067)
!17588 = !DILocation(line: 2138, column: 27, scope: !17067)
!17589 = !DILocation(line: 2139, column: 24, scope: !17067)
!17590 = !DILocation(line: 2139, column: 29, scope: !17067)
!17591 = !DILocation(line: 2139, column: 27, scope: !17067)
!17592 = !DILocation(line: 2139, column: 2, scope: !17067)
!17593 = !DILocation(line: 2139, column: 6, scope: !17067)
!17594 = !DILocation(line: 2139, column: 11, scope: !17067)
!17595 = !DILocation(line: 2139, column: 15, scope: !17067)
!17596 = !DILocation(line: 2139, column: 21, scope: !17067)
!17597 = !DILocation(line: 2140, column: 10, scope: !17067)
!17598 = !DILocation(line: 2140, column: 3, scope: !17067)
!17599 = !DILocation(line: 2140, column: 8, scope: !17067)
!17600 = !DILocation(line: 2143, column: 6, scope: !17601)
!17601 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2143, column: 6)
!17602 = !DILocation(line: 2143, column: 12, scope: !17601)
!17603 = !DILocation(line: 2143, column: 9, scope: !17601)
!17604 = !DILocation(line: 2143, column: 6, scope: !17067)
!17605 = !DILocation(line: 2145, column: 3, scope: !17606)
!17606 = distinct !DILexicalBlock(scope: !17601, file: !3, line: 2143, column: 17)
!17607 = !DILocation(line: 2149, column: 6, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2149, column: 6)
!17609 = !DILocation(line: 2149, column: 10, scope: !17608)
!17610 = !DILocation(line: 2149, column: 33, scope: !17608)
!17611 = !DILocation(line: 2149, column: 38, scope: !17608)
!17612 = !DILocation(line: 2149, column: 13, scope: !17608)
!17613 = !DILocation(line: 2149, column: 6, scope: !17067)
!17614 = !DILocation(line: 2151, column: 3, scope: !17615)
!17615 = distinct !DILexicalBlock(scope: !17608, file: !3, line: 2149, column: 46)
!17616 = !DILocation(line: 2152, column: 3, scope: !17615)
!17617 = !DILocation(line: 2153, column: 2, scope: !17615)
!17618 = !DILocation(line: 2155, column: 2, scope: !17067)
!17619 = !DILocation(line: 2157, column: 6, scope: !17620)
!17620 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2157, column: 6)
!17621 = !DILocation(line: 2157, column: 10, scope: !17620)
!17622 = !DILocation(line: 2157, column: 29, scope: !17620)
!17623 = !DILocation(line: 2157, column: 13, scope: !17620)
!17624 = !DILocation(line: 2157, column: 6, scope: !17067)
!17625 = !DILocation(line: 2158, column: 11, scope: !17626)
!17626 = distinct !DILexicalBlock(scope: !17620, file: !3, line: 2157, column: 35)
!17627 = !DILocation(line: 2158, column: 10, scope: !17626)
!17628 = !DILocation(line: 2158, column: 16, scope: !17626)
!17629 = !DILocation(line: 2158, column: 7, scope: !17626)
!17630 = !DILocation(line: 2159, column: 3, scope: !17626)
!17631 = !DILocation(line: 2161, column: 6, scope: !17632)
!17632 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2161, column: 6)
!17633 = !DILocation(line: 2161, column: 10, scope: !17632)
!17634 = !DILocation(line: 2161, column: 29, scope: !17632)
!17635 = !DILocation(line: 2161, column: 13, scope: !17632)
!17636 = !DILocation(line: 2161, column: 6, scope: !17067)
!17637 = !DILocation(line: 2162, column: 11, scope: !17638)
!17638 = distinct !DILexicalBlock(scope: !17632, file: !3, line: 2161, column: 35)
!17639 = !DILocation(line: 2162, column: 10, scope: !17638)
!17640 = !DILocation(line: 2162, column: 16, scope: !17638)
!17641 = !DILocation(line: 2162, column: 7, scope: !17638)
!17642 = !DILocation(line: 2163, column: 3, scope: !17638)
!17643 = !DILocation(line: 2171, column: 6, scope: !17644)
!17644 = distinct !DILexicalBlock(scope: !17067, file: !3, line: 2171, column: 6)
!17645 = !DILocation(line: 2171, column: 10, scope: !17644)
!17646 = !DILocation(line: 2171, column: 40, scope: !17644)
!17647 = !DILocation(line: 2171, column: 45, scope: !17644)
!17648 = !DILocation(line: 2171, column: 13, scope: !17644)
!17649 = !DILocation(line: 2171, column: 6, scope: !17067)
!17650 = !DILocation(line: 2172, column: 3, scope: !17644)
!17651 = !DILocation(line: 2173, column: 1, scope: !17067)
!17652 = distinct !DISubprogram(name: "open_dchannel", scope: !3, file: !3, line: 4041, type: !17653, scopeLine: 4043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17653 = !DISubroutineType(types: !17654)
!17654 = !{!37, !9128, !9538, !16115}
!17655 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !17656)
!17656 = distinct !DILocation(line: 4070, column: 3, scope: !17657)
!17657 = distinct !DILexicalBlock(scope: !17658, file: !3, line: 4061, column: 43)
!17658 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 4061, column: 6)
!17659 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !17656)
!17660 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !17661)
!17661 = distinct !DILocation(line: 4068, column: 3, scope: !17662)
!17662 = distinct !DILexicalBlock(scope: !17663, file: !3, line: 4068, column: 3)
!17663 = distinct !DILexicalBlock(scope: !17664, file: !3, line: 4068, column: 3)
!17664 = distinct !DILexicalBlock(scope: !17665, file: !3, line: 4068, column: 3)
!17665 = distinct !DILexicalBlock(scope: !17666, file: !3, line: 4068, column: 3)
!17666 = distinct !DILexicalBlock(scope: !17657, file: !3, line: 4068, column: 3)
!17667 = !DILocalVariable(name: "hc", arg: 1, scope: !17652, file: !3, line: 4041, type: !9128)
!17668 = !DILocation(line: 4041, column: 33, scope: !17652)
!17669 = !DILocalVariable(name: "dch", arg: 2, scope: !17652, file: !3, line: 4041, type: !9538)
!17670 = !DILocation(line: 4041, column: 54, scope: !17652)
!17671 = !DILocalVariable(name: "rq", arg: 3, scope: !17652, file: !3, line: 4042, type: !16115)
!17672 = !DILocation(line: 4042, column: 28, scope: !17652)
!17673 = !DILocalVariable(name: "err", scope: !17652, file: !3, line: 4044, type: !37)
!17674 = !DILocation(line: 4044, column: 6, scope: !17652)
!17675 = !DILocalVariable(name: "flags", scope: !17652, file: !3, line: 4045, type: !9457)
!17676 = !DILocation(line: 4045, column: 9, scope: !17652)
!17677 = !DILocation(line: 4047, column: 6, scope: !17678)
!17678 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 4047, column: 6)
!17679 = !DILocation(line: 4047, column: 12, scope: !17678)
!17680 = !DILocation(line: 4047, column: 6, scope: !17652)
!17681 = !DILocation(line: 4049, column: 10, scope: !17678)
!17682 = !DILocation(line: 4049, column: 15, scope: !17678)
!17683 = !DILocation(line: 4049, column: 19, scope: !17678)
!17684 = !DILocation(line: 4049, column: 23, scope: !17678)
!17685 = !DILocation(line: 4048, column: 3, scope: !17678)
!17686 = !DILocation(line: 4050, column: 6, scope: !17687)
!17687 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 4050, column: 6)
!17688 = !DILocation(line: 4050, column: 10, scope: !17687)
!17689 = !DILocation(line: 4050, column: 19, scope: !17687)
!17690 = !DILocation(line: 4050, column: 6, scope: !17652)
!17691 = !DILocation(line: 4051, column: 3, scope: !17687)
!17692 = !DILocation(line: 4052, column: 7, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 4052, column: 6)
!17694 = !DILocation(line: 4052, column: 12, scope: !17693)
!17695 = !DILocation(line: 4052, column: 16, scope: !17693)
!17696 = !DILocation(line: 4052, column: 18, scope: !17693)
!17697 = !DILocation(line: 4052, column: 27, scope: !17693)
!17698 = !DILocation(line: 4052, column: 43, scope: !17693)
!17699 = !DILocation(line: 4053, column: 7, scope: !17693)
!17700 = !DILocation(line: 4053, column: 12, scope: !17693)
!17701 = !DILocation(line: 4053, column: 16, scope: !17693)
!17702 = !DILocation(line: 4053, column: 18, scope: !17693)
!17703 = !DILocation(line: 4053, column: 30, scope: !17693)
!17704 = !DILocation(line: 4053, column: 34, scope: !17693)
!17705 = !DILocation(line: 4053, column: 27, scope: !17693)
!17706 = !DILocation(line: 4052, column: 6, scope: !17652)
!17707 = !DILocation(line: 4054, column: 7, scope: !17708)
!17708 = distinct !DILexicalBlock(scope: !17709, file: !3, line: 4054, column: 7)
!17709 = distinct !DILexicalBlock(scope: !17693, file: !3, line: 4053, column: 45)
!17710 = !DILocation(line: 4054, column: 13, scope: !17708)
!17711 = !DILocation(line: 4054, column: 7, scope: !17709)
!17712 = !DILocation(line: 4056, column: 21, scope: !17708)
!17713 = !DILocation(line: 4056, column: 26, scope: !17708)
!17714 = !DILocation(line: 4056, column: 30, scope: !17708)
!17715 = !DILocation(line: 4056, column: 32, scope: !17708)
!17716 = !DILocation(line: 4056, column: 42, scope: !17708)
!17717 = !DILocation(line: 4056, column: 46, scope: !17708)
!17718 = !DILocation(line: 4055, column: 4, scope: !17708)
!17719 = !DILocation(line: 4057, column: 2, scope: !17709)
!17720 = !DILocation(line: 4058, column: 7, scope: !17721)
!17721 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 4058, column: 6)
!17722 = !DILocation(line: 4058, column: 12, scope: !17721)
!17723 = !DILocation(line: 4058, column: 16, scope: !17721)
!17724 = !DILocation(line: 4058, column: 18, scope: !17721)
!17725 = !DILocation(line: 4058, column: 27, scope: !17721)
!17726 = !DILocation(line: 4058, column: 44, scope: !17721)
!17727 = !DILocation(line: 4059, column: 7, scope: !17721)
!17728 = !DILocation(line: 4059, column: 11, scope: !17721)
!17729 = !DILocation(line: 4059, column: 20, scope: !17721)
!17730 = !DILocation(line: 4058, column: 6, scope: !17652)
!17731 = !DILocation(line: 4060, column: 12, scope: !17721)
!17732 = !DILocation(line: 4060, column: 17, scope: !17721)
!17733 = !DILocation(line: 4060, column: 3, scope: !17721)
!17734 = !DILocation(line: 4061, column: 6, scope: !17658)
!17735 = !DILocation(line: 4061, column: 11, scope: !17658)
!17736 = !DILocation(line: 4061, column: 15, scope: !17658)
!17737 = !DILocation(line: 4061, column: 17, scope: !17658)
!17738 = !DILocation(line: 4061, column: 29, scope: !17658)
!17739 = !DILocation(line: 4061, column: 33, scope: !17658)
!17740 = !DILocation(line: 4061, column: 26, scope: !17658)
!17741 = !DILocation(line: 4061, column: 6, scope: !17652)
!17742 = !DILocation(line: 4062, column: 7, scope: !17743)
!17743 = distinct !DILexicalBlock(scope: !17657, file: !3, line: 4062, column: 7)
!17744 = !DILocation(line: 4062, column: 11, scope: !17743)
!17745 = !DILocation(line: 4062, column: 20, scope: !17743)
!17746 = !DILocation(line: 4062, column: 7, scope: !17657)
!17747 = !DILocation(line: 4063, column: 20, scope: !17748)
!17748 = distinct !DILexicalBlock(scope: !17743, file: !3, line: 4062, column: 37)
!17749 = !DILocation(line: 4063, column: 10, scope: !17748)
!17750 = !DILocation(line: 4063, column: 8, scope: !17748)
!17751 = !DILocation(line: 4064, column: 8, scope: !17752)
!17752 = distinct !DILexicalBlock(scope: !17748, file: !3, line: 4064, column: 8)
!17753 = !DILocation(line: 4064, column: 8, scope: !17748)
!17754 = !DILocation(line: 4065, column: 12, scope: !17752)
!17755 = !DILocation(line: 4065, column: 5, scope: !17752)
!17756 = !DILocation(line: 4066, column: 3, scope: !17748)
!17757 = !DILocation(line: 4067, column: 25, scope: !17657)
!17758 = !DILocation(line: 4067, column: 29, scope: !17657)
!17759 = !DILocation(line: 4067, column: 3, scope: !17657)
!17760 = !DILocation(line: 4067, column: 8, scope: !17657)
!17761 = !DILocation(line: 4067, column: 12, scope: !17657)
!17762 = !DILocation(line: 4067, column: 14, scope: !17657)
!17763 = !DILocation(line: 4067, column: 23, scope: !17657)
!17764 = !DILocation(line: 4068, column: 3, scope: !17657)
!17765 = !DILocation(line: 4068, column: 3, scope: !17666)
!17766 = !DILocalVariable(name: "__dummy", scope: !17767, file: !3, line: 4068, type: !317)
!17767 = distinct !DILexicalBlock(scope: !17665, file: !3, line: 4068, column: 3)
!17768 = !DILocation(line: 4068, column: 3, scope: !17767)
!17769 = !DILocalVariable(name: "__dummy2", scope: !17767, file: !3, line: 4068, type: !9457)
!17770 = !DILocation(line: 4068, column: 3, scope: !17665)
!17771 = !DILocation(line: 4068, column: 3, scope: !17664)
!17772 = !DILocation(line: 4068, column: 3, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17664, file: !3, line: 4068, column: 3)
!17774 = !DILocalVariable(name: "__dummy", scope: !17775, file: !3, line: 4068, type: !317)
!17775 = distinct !DILexicalBlock(scope: !17776, file: !3, line: 4068, column: 3)
!17776 = distinct !DILexicalBlock(scope: !17773, file: !3, line: 4068, column: 3)
!17777 = !DILocation(line: 4068, column: 3, scope: !17775)
!17778 = !DILocalVariable(name: "__dummy2", scope: !17775, file: !3, line: 4068, type: !9457)
!17779 = !DILocation(line: 4068, column: 3, scope: !17776)
!17780 = !DILocation(line: 4068, column: 3, scope: !17663)
!17781 = !{i32 -2138029015}
!17782 = !DILocation(line: 4068, column: 3, scope: !17662)
!17783 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !17661)
!17784 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !17661)
!17785 = !DILocation(line: 4069, column: 21, scope: !17657)
!17786 = !DILocation(line: 4069, column: 3, scope: !17657)
!17787 = !DILocation(line: 4070, column: 27, scope: !17657)
!17788 = !DILocation(line: 4070, column: 31, scope: !17657)
!17789 = !DILocation(line: 4070, column: 37, scope: !17657)
!17790 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !17656)
!17791 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !17656)
!17792 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !17656)
!17793 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !17656)
!17794 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !17656)
!17795 = !DILocation(line: 4071, column: 2, scope: !17657)
!17796 = !DILocation(line: 4072, column: 28, scope: !17797)
!17797 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 4072, column: 6)
!17798 = !DILocation(line: 4072, column: 33, scope: !17797)
!17799 = !DILocation(line: 4072, column: 6, scope: !17797)
!17800 = !DILocation(line: 4072, column: 6, scope: !17652)
!17801 = !DILocation(line: 4073, column: 16, scope: !17797)
!17802 = !DILocation(line: 4073, column: 21, scope: !17797)
!17803 = !DILocation(line: 4073, column: 25, scope: !17797)
!17804 = !DILocation(line: 4073, column: 3, scope: !17797)
!17805 = !DILocation(line: 4075, column: 12, scope: !17652)
!17806 = !DILocation(line: 4075, column: 17, scope: !17652)
!17807 = !DILocation(line: 4075, column: 21, scope: !17652)
!17808 = !DILocation(line: 4075, column: 2, scope: !17652)
!17809 = !DILocation(line: 4075, column: 6, scope: !17652)
!17810 = !DILocation(line: 4075, column: 9, scope: !17652)
!17811 = !DILocation(line: 4076, column: 7, scope: !17812)
!17812 = distinct !DILexicalBlock(scope: !17652, file: !3, line: 4076, column: 6)
!17813 = !DILocation(line: 4076, column: 6, scope: !17652)
!17814 = !DILocation(line: 4077, column: 3, scope: !17812)
!17815 = !DILocation(line: 4078, column: 2, scope: !17652)
!17816 = !DILocation(line: 4079, column: 1, scope: !17652)
!17817 = distinct !DISubprogram(name: "open_bchannel", scope: !3, file: !3, line: 4082, type: !17653, scopeLine: 4084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17818 = !DILocalVariable(name: "hc", arg: 1, scope: !17817, file: !3, line: 4082, type: !9128)
!17819 = !DILocation(line: 4082, column: 33, scope: !17817)
!17820 = !DILocalVariable(name: "dch", arg: 2, scope: !17817, file: !3, line: 4082, type: !9538)
!17821 = !DILocation(line: 4082, column: 54, scope: !17817)
!17822 = !DILocalVariable(name: "rq", arg: 3, scope: !17817, file: !3, line: 4083, type: !16115)
!17823 = !DILocation(line: 4083, column: 28, scope: !17817)
!17824 = !DILocalVariable(name: "bch", scope: !17817, file: !3, line: 4085, type: !9617)
!17825 = !DILocation(line: 4085, column: 19, scope: !17817)
!17826 = !DILocalVariable(name: "ch", scope: !17817, file: !3, line: 4086, type: !37)
!17827 = !DILocation(line: 4086, column: 7, scope: !17817)
!17828 = !DILocation(line: 4088, column: 23, scope: !17829)
!17829 = distinct !DILexicalBlock(scope: !17817, file: !3, line: 4088, column: 6)
!17830 = !DILocation(line: 4088, column: 27, scope: !17829)
!17831 = !DILocation(line: 4088, column: 31, scope: !17829)
!17832 = !DILocation(line: 4088, column: 40, scope: !17829)
!17833 = !DILocation(line: 4088, column: 45, scope: !17829)
!17834 = !DILocation(line: 4088, column: 49, scope: !17829)
!17835 = !DILocation(line: 4088, column: 7, scope: !17829)
!17836 = !DILocation(line: 4088, column: 6, scope: !17817)
!17837 = !DILocation(line: 4089, column: 3, scope: !17829)
!17838 = !DILocation(line: 4090, column: 6, scope: !17839)
!17839 = distinct !DILexicalBlock(scope: !17817, file: !3, line: 4090, column: 6)
!17840 = !DILocation(line: 4090, column: 10, scope: !17839)
!17841 = !DILocation(line: 4090, column: 19, scope: !17839)
!17842 = !DILocation(line: 4090, column: 6, scope: !17817)
!17843 = !DILocation(line: 4091, column: 3, scope: !17839)
!17844 = !DILocation(line: 4092, column: 6, scope: !17845)
!17845 = distinct !DILexicalBlock(scope: !17817, file: !3, line: 4092, column: 6)
!17846 = !DILocation(line: 4092, column: 10, scope: !17845)
!17847 = !DILocation(line: 4092, column: 16, scope: !17845)
!17848 = !DILocation(line: 4092, column: 6, scope: !17817)
!17849 = !DILocation(line: 4093, column: 8, scope: !17845)
!17850 = !DILocation(line: 4093, column: 12, scope: !17845)
!17851 = !DILocation(line: 4093, column: 16, scope: !17845)
!17852 = !DILocation(line: 4093, column: 6, scope: !17845)
!17853 = !DILocation(line: 4093, column: 3, scope: !17845)
!17854 = !DILocation(line: 4095, column: 9, scope: !17845)
!17855 = !DILocation(line: 4095, column: 13, scope: !17845)
!17856 = !DILocation(line: 4095, column: 17, scope: !17845)
!17857 = !DILocation(line: 4095, column: 25, scope: !17845)
!17858 = !DILocation(line: 4095, column: 33, scope: !17845)
!17859 = !DILocation(line: 4095, column: 38, scope: !17845)
!17860 = !DILocation(line: 4095, column: 43, scope: !17845)
!17861 = !DILocation(line: 4095, column: 30, scope: !17845)
!17862 = !DILocation(line: 4095, column: 6, scope: !17845)
!17863 = !DILocation(line: 4096, column: 8, scope: !17817)
!17864 = !DILocation(line: 4096, column: 12, scope: !17817)
!17865 = !DILocation(line: 4096, column: 17, scope: !17817)
!17866 = !DILocation(line: 4096, column: 21, scope: !17817)
!17867 = !DILocation(line: 4096, column: 6, scope: !17817)
!17868 = !DILocation(line: 4097, column: 7, scope: !17869)
!17869 = distinct !DILexicalBlock(scope: !17817, file: !3, line: 4097, column: 6)
!17870 = !DILocation(line: 4097, column: 6, scope: !17817)
!17871 = !DILocation(line: 4099, column: 20, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17869, file: !3, line: 4097, column: 12)
!17873 = !DILocation(line: 4098, column: 3, scope: !17872)
!17874 = !DILocation(line: 4100, column: 3, scope: !17872)
!17875 = !DILocation(line: 4102, column: 34, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17817, file: !3, line: 4102, column: 6)
!17877 = !DILocation(line: 4102, column: 39, scope: !17876)
!17878 = !DILocation(line: 4102, column: 6, scope: !17876)
!17879 = !DILocation(line: 4102, column: 6, scope: !17817)
!17880 = !DILocation(line: 4103, column: 3, scope: !17876)
!17881 = !DILocation(line: 4104, column: 21, scope: !17817)
!17882 = !DILocation(line: 4104, column: 25, scope: !17817)
!17883 = !DILocation(line: 4104, column: 2, scope: !17817)
!17884 = !DILocation(line: 4104, column: 7, scope: !17817)
!17885 = !DILocation(line: 4104, column: 10, scope: !17817)
!17886 = !DILocation(line: 4104, column: 19, scope: !17817)
!17887 = !DILocation(line: 4105, column: 2, scope: !17817)
!17888 = !DILocation(line: 4105, column: 6, scope: !17817)
!17889 = !DILocation(line: 4105, column: 11, scope: !17817)
!17890 = !DILocation(line: 4105, column: 15, scope: !17817)
!17891 = !DILocation(line: 4105, column: 22, scope: !17817)
!17892 = !DILocation(line: 4106, column: 12, scope: !17817)
!17893 = !DILocation(line: 4106, column: 17, scope: !17817)
!17894 = !DILocation(line: 4106, column: 2, scope: !17817)
!17895 = !DILocation(line: 4106, column: 6, scope: !17817)
!17896 = !DILocation(line: 4106, column: 9, scope: !17817)
!17897 = !DILocation(line: 4107, column: 7, scope: !17898)
!17898 = distinct !DILexicalBlock(scope: !17817, file: !3, line: 4107, column: 6)
!17899 = !DILocation(line: 4107, column: 6, scope: !17817)
!17900 = !DILocation(line: 4108, column: 3, scope: !17898)
!17901 = !DILocation(line: 4109, column: 2, scope: !17817)
!17902 = !DILocation(line: 4110, column: 1, scope: !17817)
!17903 = distinct !DISubprogram(name: "module_put", scope: !9724, file: !9724, line: 756, type: !9759, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17904 = !DILocalVariable(name: "module", arg: 1, scope: !17903, file: !9724, line: 756, type: !852)
!17905 = !DILocation(line: 756, column: 46, scope: !17903)
!17906 = !DILocation(line: 758, column: 1, scope: !17903)
!17907 = distinct !DISubprogram(name: "channel_dctrl", scope: !3, file: !3, line: 4116, type: !17908, scopeLine: 4117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17908 = !DISubroutineType(types: !17909)
!17909 = !{!37, !9538, !17910}
!17910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17911, size: 64)
!17911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mISDN_ctrl_req", file: !9521, line: 400, size: 128, elements: !17912)
!17912 = !{!17913, !17914, !17915, !17916}
!17913 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !17911, file: !9521, line: 401, baseType: !37, size: 32)
!17914 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !17911, file: !9521, line: 402, baseType: !37, size: 32, offset: 32)
!17915 = !DIDerivedType(tag: DW_TAG_member, name: "p1", scope: !17911, file: !9521, line: 403, baseType: !37, size: 32, offset: 64)
!17916 = !DIDerivedType(tag: DW_TAG_member, name: "p2", scope: !17911, file: !9521, line: 404, baseType: !37, size: 32, offset: 96)
!17917 = !DILocalVariable(name: "dch", arg: 1, scope: !17907, file: !3, line: 4116, type: !9538)
!17918 = !DILocation(line: 4116, column: 32, scope: !17907)
!17919 = !DILocalVariable(name: "cq", arg: 2, scope: !17907, file: !3, line: 4116, type: !17910)
!17920 = !DILocation(line: 4116, column: 60, scope: !17907)
!17921 = !DILocalVariable(name: "hc", scope: !17907, file: !3, line: 4118, type: !9128)
!17922 = !DILocation(line: 4118, column: 20, scope: !17907)
!17923 = !DILocation(line: 4118, column: 25, scope: !17907)
!17924 = !DILocation(line: 4118, column: 30, scope: !17907)
!17925 = !DILocalVariable(name: "ret", scope: !17907, file: !3, line: 4119, type: !37)
!17926 = !DILocation(line: 4119, column: 6, scope: !17907)
!17927 = !DILocalVariable(name: "wd_mode", scope: !17907, file: !3, line: 4120, type: !37)
!17928 = !DILocation(line: 4120, column: 6, scope: !17907)
!17929 = !DILocalVariable(name: "wd_cnt", scope: !17907, file: !3, line: 4120, type: !37)
!17930 = !DILocation(line: 4120, column: 15, scope: !17907)
!17931 = !DILocation(line: 4122, column: 10, scope: !17907)
!17932 = !DILocation(line: 4122, column: 14, scope: !17907)
!17933 = !DILocation(line: 4122, column: 2, scope: !17907)
!17934 = !DILocation(line: 4124, column: 3, scope: !17935)
!17935 = distinct !DILexicalBlock(scope: !17907, file: !3, line: 4122, column: 18)
!17936 = !DILocation(line: 4124, column: 7, scope: !17935)
!17937 = !DILocation(line: 4124, column: 10, scope: !17935)
!17938 = !DILocation(line: 4125, column: 3, scope: !17935)
!17939 = !DILocation(line: 4127, column: 12, scope: !17935)
!17940 = !DILocation(line: 4127, column: 16, scope: !17935)
!17941 = !DILocation(line: 4127, column: 19, scope: !17935)
!17942 = !DILocation(line: 4127, column: 10, scope: !17935)
!17943 = !DILocation(line: 4128, column: 16, scope: !17935)
!17944 = !DILocation(line: 4128, column: 20, scope: !17935)
!17945 = !DILocation(line: 4128, column: 23, scope: !17935)
!17946 = !DILocation(line: 4128, column: 14, scope: !17935)
!17947 = !DILocation(line: 4128, column: 13, scope: !17935)
!17948 = !DILocation(line: 4128, column: 11, scope: !17935)
!17949 = !DILocation(line: 4129, column: 7, scope: !17950)
!17950 = distinct !DILexicalBlock(scope: !17935, file: !3, line: 4129, column: 7)
!17951 = !DILocation(line: 4129, column: 13, scope: !17950)
!17952 = !DILocation(line: 4129, column: 7, scope: !17935)
!17953 = !DILocation(line: 4132, column: 11, scope: !17950)
!17954 = !DILocation(line: 4132, column: 40, scope: !17950)
!17955 = !DILocation(line: 4130, column: 4, scope: !17950)
!17956 = !DILocation(line: 4134, column: 3, scope: !17935)
!17957 = !DILocation(line: 4135, column: 26, scope: !17935)
!17958 = !DILocation(line: 4135, column: 25, scope: !17935)
!17959 = !DILocation(line: 4135, column: 3, scope: !17935)
!17960 = !DILocation(line: 4135, column: 7, scope: !17935)
!17961 = !DILocation(line: 4135, column: 10, scope: !17935)
!17962 = !DILocation(line: 4135, column: 23, scope: !17935)
!17963 = !DILocation(line: 4136, column: 7, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17935, file: !3, line: 4136, column: 7)
!17965 = !DILocation(line: 4136, column: 11, scope: !17964)
!17966 = !DILocation(line: 4136, column: 17, scope: !17964)
!17967 = !DILocation(line: 4136, column: 7, scope: !17935)
!17968 = !DILocation(line: 4137, column: 4, scope: !17964)
!17969 = !DILocation(line: 4137, column: 8, scope: !17964)
!17970 = !DILocation(line: 4137, column: 11, scope: !17964)
!17971 = !DILocation(line: 4137, column: 24, scope: !17964)
!17972 = !DILocation(line: 4139, column: 3, scope: !17935)
!17973 = !DILocation(line: 4140, column: 33, scope: !17974)
!17974 = distinct !DILexicalBlock(scope: !17935, file: !3, line: 4140, column: 7)
!17975 = !DILocation(line: 4140, column: 37, scope: !17974)
!17976 = !DILocation(line: 4140, column: 7, scope: !17974)
!17977 = !DILocation(line: 4140, column: 7, scope: !17935)
!17978 = !DILocation(line: 4142, column: 4, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !17974, file: !3, line: 4140, column: 44)
!17980 = !DILocation(line: 4143, column: 4, scope: !17979)
!17981 = !DILocation(line: 4144, column: 4, scope: !17979)
!17982 = !DILocation(line: 4145, column: 4, scope: !17979)
!17983 = !DILocation(line: 4146, column: 3, scope: !17979)
!17984 = !DILocation(line: 4147, column: 3, scope: !17935)
!17985 = !DILocation(line: 4149, column: 7, scope: !17986)
!17986 = distinct !DILexicalBlock(scope: !17935, file: !3, line: 4149, column: 7)
!17987 = !DILocation(line: 4149, column: 13, scope: !17986)
!17988 = !DILocation(line: 4149, column: 7, scope: !17935)
!17989 = !DILocation(line: 4150, column: 4, scope: !17986)
!17990 = !DILocation(line: 4152, column: 3, scope: !17935)
!17991 = !DILocation(line: 4153, column: 3, scope: !17935)
!17992 = !DILocation(line: 4155, column: 18, scope: !17935)
!17993 = !DILocation(line: 4155, column: 23, scope: !17935)
!17994 = !DILocation(line: 4155, column: 46, scope: !17935)
!17995 = !DILocation(line: 4155, column: 50, scope: !17935)
!17996 = !DILocation(line: 4155, column: 53, scope: !17935)
!17997 = !DILocation(line: 4155, column: 43, scope: !17935)
!17998 = !DILocation(line: 4155, column: 9, scope: !17935)
!17999 = !DILocation(line: 4155, column: 7, scope: !17935)
!18000 = !DILocation(line: 4156, column: 3, scope: !17935)
!18001 = !DILocation(line: 4159, column: 20, scope: !17935)
!18002 = !DILocation(line: 4159, column: 24, scope: !17935)
!18003 = !DILocation(line: 4158, column: 3, scope: !17935)
!18004 = !DILocation(line: 4160, column: 7, scope: !17935)
!18005 = !DILocation(line: 4161, column: 3, scope: !17935)
!18006 = !DILocation(line: 4163, column: 9, scope: !17907)
!18007 = !DILocation(line: 4163, column: 2, scope: !17907)
!18008 = distinct !DISubprogram(name: "hfcm_l1callback", scope: !3, file: !3, line: 3219, type: !18009, scopeLine: 3220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18009 = !DISubroutineType(types: !18010)
!18010 = !{!37, !9538, !9152}
!18011 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !18012)
!18012 = distinct !DILocation(line: 3299, column: 3, scope: !18013)
!18013 = distinct !DILexicalBlock(scope: !18008, file: !3, line: 3224, column: 15)
!18014 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !18012)
!18015 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !18016)
!18016 = distinct !DILocation(line: 3285, column: 3, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !18018, file: !3, line: 3285, column: 3)
!18018 = distinct !DILexicalBlock(scope: !18019, file: !3, line: 3285, column: 3)
!18019 = distinct !DILexicalBlock(scope: !18020, file: !3, line: 3285, column: 3)
!18020 = distinct !DILexicalBlock(scope: !18021, file: !3, line: 3285, column: 3)
!18021 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 3285, column: 3)
!18022 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !18023)
!18023 = distinct !DILocation(line: 3282, column: 3, scope: !18013)
!18024 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !18023)
!18025 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !18026)
!18026 = distinct !DILocation(line: 3251, column: 3, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !18028, file: !3, line: 3251, column: 3)
!18028 = distinct !DILexicalBlock(scope: !18029, file: !3, line: 3251, column: 3)
!18029 = distinct !DILexicalBlock(scope: !18030, file: !3, line: 3251, column: 3)
!18030 = distinct !DILexicalBlock(scope: !18031, file: !3, line: 3251, column: 3)
!18031 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 3251, column: 3)
!18032 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !18033)
!18033 = distinct !DILocation(line: 3246, column: 3, scope: !18013)
!18034 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !18033)
!18035 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !18036)
!18036 = distinct !DILocation(line: 3230, column: 3, scope: !18037)
!18037 = distinct !DILexicalBlock(scope: !18038, file: !3, line: 3230, column: 3)
!18038 = distinct !DILexicalBlock(scope: !18039, file: !3, line: 3230, column: 3)
!18039 = distinct !DILexicalBlock(scope: !18040, file: !3, line: 3230, column: 3)
!18040 = distinct !DILexicalBlock(scope: !18041, file: !3, line: 3230, column: 3)
!18041 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 3230, column: 3)
!18042 = !DILocalVariable(name: "dch", arg: 1, scope: !18008, file: !3, line: 3219, type: !9538)
!18043 = !DILocation(line: 3219, column: 34, scope: !18008)
!18044 = !DILocalVariable(name: "cmd", arg: 2, scope: !18008, file: !3, line: 3219, type: !9152)
!18045 = !DILocation(line: 3219, column: 45, scope: !18008)
!18046 = !DILocalVariable(name: "hc", scope: !18008, file: !3, line: 3221, type: !9128)
!18047 = !DILocation(line: 3221, column: 20, scope: !18008)
!18048 = !DILocation(line: 3221, column: 25, scope: !18008)
!18049 = !DILocation(line: 3221, column: 30, scope: !18008)
!18050 = !DILocalVariable(name: "flags", scope: !18008, file: !3, line: 3222, type: !9457)
!18051 = !DILocation(line: 3222, column: 9, scope: !18008)
!18052 = !DILocation(line: 3224, column: 10, scope: !18008)
!18053 = !DILocation(line: 3224, column: 2, scope: !18008)
!18054 = !DILocation(line: 3227, column: 3, scope: !18013)
!18055 = !DILocation(line: 3230, column: 3, scope: !18013)
!18056 = !DILocation(line: 3230, column: 3, scope: !18041)
!18057 = !DILocalVariable(name: "__dummy", scope: !18058, file: !3, line: 3230, type: !317)
!18058 = distinct !DILexicalBlock(scope: !18040, file: !3, line: 3230, column: 3)
!18059 = !DILocation(line: 3230, column: 3, scope: !18058)
!18060 = !DILocalVariable(name: "__dummy2", scope: !18058, file: !3, line: 3230, type: !9457)
!18061 = !DILocation(line: 3230, column: 3, scope: !18040)
!18062 = !DILocation(line: 3230, column: 3, scope: !18039)
!18063 = !DILocation(line: 3230, column: 3, scope: !18064)
!18064 = distinct !DILexicalBlock(scope: !18039, file: !3, line: 3230, column: 3)
!18065 = !DILocalVariable(name: "__dummy", scope: !18066, file: !3, line: 3230, type: !317)
!18066 = distinct !DILexicalBlock(scope: !18067, file: !3, line: 3230, column: 3)
!18067 = distinct !DILexicalBlock(scope: !18064, file: !3, line: 3230, column: 3)
!18068 = !DILocation(line: 3230, column: 3, scope: !18066)
!18069 = !DILocalVariable(name: "__dummy2", scope: !18066, file: !3, line: 3230, type: !9457)
!18070 = !DILocation(line: 3230, column: 3, scope: !18067)
!18071 = !DILocation(line: 3230, column: 3, scope: !18038)
!18072 = !{i32 -2138056521}
!18073 = !DILocation(line: 3230, column: 3, scope: !18037)
!18074 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !18036)
!18075 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !18036)
!18076 = !DILocation(line: 3231, column: 7, scope: !18077)
!18077 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 3231, column: 7)
!18078 = !DILocation(line: 3231, column: 11, scope: !18077)
!18079 = !DILocation(line: 3231, column: 17, scope: !18077)
!18080 = !DILocation(line: 3231, column: 7, scope: !18013)
!18081 = !DILocation(line: 3232, column: 8, scope: !18082)
!18082 = distinct !DILexicalBlock(scope: !18083, file: !3, line: 3232, column: 8)
!18083 = distinct !DILexicalBlock(scope: !18077, file: !3, line: 3231, column: 33)
!18084 = !DILocation(line: 3232, column: 14, scope: !18082)
!18085 = !DILocation(line: 3232, column: 8, scope: !18083)
!18086 = !DILocation(line: 3233, column: 5, scope: !18082)
!18087 = !DILocation(line: 3236, column: 3, scope: !18083)
!18088 = !DILocation(line: 3237, column: 4, scope: !18089)
!18089 = distinct !DILexicalBlock(scope: !18077, file: !3, line: 3236, column: 10)
!18090 = !DILocation(line: 3239, column: 4, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18092, file: !3, line: 3239, column: 4)
!18092 = distinct !DILexicalBlock(scope: !18093, file: !3, line: 3239, column: 4)
!18093 = distinct !DILexicalBlock(scope: !18094, file: !3, line: 3239, column: 4)
!18094 = distinct !DILexicalBlock(scope: !18089, file: !3, line: 3239, column: 4)
!18095 = !DILocation(line: 3240, column: 4, scope: !18089)
!18096 = !DILocation(line: 3241, column: 4, scope: !18097)
!18097 = distinct !DILexicalBlock(scope: !18098, file: !3, line: 3241, column: 4)
!18098 = distinct !DILexicalBlock(scope: !18099, file: !3, line: 3241, column: 4)
!18099 = distinct !DILexicalBlock(scope: !18100, file: !3, line: 3241, column: 4)
!18100 = distinct !DILexicalBlock(scope: !18089, file: !3, line: 3241, column: 4)
!18101 = !DILocation(line: 3242, column: 4, scope: !18089)
!18102 = !DILocation(line: 3243, column: 4, scope: !18089)
!18103 = !DILocation(line: 3246, column: 27, scope: !18013)
!18104 = !DILocation(line: 3246, column: 31, scope: !18013)
!18105 = !DILocation(line: 3246, column: 37, scope: !18013)
!18106 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !18033)
!18107 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !18033)
!18108 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !18033)
!18109 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !18033)
!18110 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !18033)
!18111 = !DILocation(line: 3247, column: 12, scope: !18013)
!18112 = !DILocation(line: 3247, column: 17, scope: !18013)
!18113 = !DILocation(line: 3247, column: 3, scope: !18013)
!18114 = !DILocation(line: 3248, column: 3, scope: !18013)
!18115 = !DILocation(line: 3251, column: 3, scope: !18013)
!18116 = !DILocation(line: 3251, column: 3, scope: !18031)
!18117 = !DILocalVariable(name: "__dummy", scope: !18118, file: !3, line: 3251, type: !317)
!18118 = distinct !DILexicalBlock(scope: !18030, file: !3, line: 3251, column: 3)
!18119 = !DILocation(line: 3251, column: 3, scope: !18118)
!18120 = !DILocalVariable(name: "__dummy2", scope: !18118, file: !3, line: 3251, type: !9457)
!18121 = !DILocation(line: 3251, column: 3, scope: !18030)
!18122 = !DILocation(line: 3251, column: 3, scope: !18029)
!18123 = !DILocation(line: 3251, column: 3, scope: !18124)
!18124 = distinct !DILexicalBlock(scope: !18029, file: !3, line: 3251, column: 3)
!18125 = !DILocalVariable(name: "__dummy", scope: !18126, file: !3, line: 3251, type: !317)
!18126 = distinct !DILexicalBlock(scope: !18127, file: !3, line: 3251, column: 3)
!18127 = distinct !DILexicalBlock(scope: !18124, file: !3, line: 3251, column: 3)
!18128 = !DILocation(line: 3251, column: 3, scope: !18126)
!18129 = !DILocalVariable(name: "__dummy2", scope: !18126, file: !3, line: 3251, type: !9457)
!18130 = !DILocation(line: 3251, column: 3, scope: !18127)
!18131 = !DILocation(line: 3251, column: 3, scope: !18028)
!18132 = !{i32 -2138054781}
!18133 = !DILocation(line: 3251, column: 3, scope: !18027)
!18134 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !18026)
!18135 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !18026)
!18136 = !DILocation(line: 3252, column: 7, scope: !18137)
!18137 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 3252, column: 7)
!18138 = !DILocation(line: 3252, column: 11, scope: !18137)
!18139 = !DILocation(line: 3252, column: 17, scope: !18137)
!18140 = !DILocation(line: 3252, column: 7, scope: !18013)
!18141 = !DILocation(line: 3253, column: 8, scope: !18142)
!18142 = distinct !DILexicalBlock(scope: !18143, file: !3, line: 3253, column: 8)
!18143 = distinct !DILexicalBlock(scope: !18137, file: !3, line: 3252, column: 33)
!18144 = !DILocation(line: 3253, column: 14, scope: !18142)
!18145 = !DILocation(line: 3253, column: 8, scope: !18143)
!18146 = !DILocation(line: 3254, column: 5, scope: !18142)
!18147 = !DILocation(line: 3257, column: 3, scope: !18143)
!18148 = !DILocation(line: 3258, column: 4, scope: !18149)
!18149 = distinct !DILexicalBlock(scope: !18137, file: !3, line: 3257, column: 10)
!18150 = !DILocation(line: 3260, column: 4, scope: !18151)
!18151 = distinct !DILexicalBlock(scope: !18152, file: !3, line: 3260, column: 4)
!18152 = distinct !DILexicalBlock(scope: !18153, file: !3, line: 3260, column: 4)
!18153 = distinct !DILexicalBlock(scope: !18154, file: !3, line: 3260, column: 4)
!18154 = distinct !DILexicalBlock(scope: !18149, file: !3, line: 3260, column: 4)
!18155 = !DILocation(line: 3261, column: 4, scope: !18149)
!18156 = !DILocation(line: 3263, column: 34, scope: !18157)
!18157 = distinct !DILexicalBlock(scope: !18149, file: !3, line: 3263, column: 8)
!18158 = !DILocation(line: 3263, column: 38, scope: !18157)
!18159 = !DILocation(line: 3263, column: 8, scope: !18157)
!18160 = !DILocation(line: 3263, column: 8, scope: !18149)
!18161 = !DILocation(line: 3265, column: 13, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18157, file: !3, line: 3263, column: 45)
!18163 = !DILocation(line: 3265, column: 17, scope: !18162)
!18164 = !DILocation(line: 3265, column: 22, scope: !18162)
!18165 = !DILocation(line: 3265, column: 27, scope: !18162)
!18166 = !DILocation(line: 3265, column: 33, scope: !18162)
!18167 = !DILocation(line: 3265, column: 10, scope: !18162)
!18168 = !DILocation(line: 3265, column: 6, scope: !18162)
!18169 = !DILocation(line: 3264, column: 5, scope: !18162)
!18170 = !DILocation(line: 3264, column: 9, scope: !18162)
!18171 = !DILocation(line: 3264, column: 21, scope: !18162)
!18172 = !DILocation(line: 3266, column: 21, scope: !18162)
!18173 = !DILocation(line: 3266, column: 5, scope: !18162)
!18174 = !DILocation(line: 3267, column: 4, scope: !18162)
!18175 = !DILocation(line: 3269, column: 20, scope: !18013)
!18176 = !DILocation(line: 3269, column: 25, scope: !18013)
!18177 = !DILocation(line: 3269, column: 3, scope: !18013)
!18178 = !DILocation(line: 3270, column: 7, scope: !18179)
!18179 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 3270, column: 7)
!18180 = !DILocation(line: 3270, column: 12, scope: !18179)
!18181 = !DILocation(line: 3270, column: 7, scope: !18013)
!18182 = !DILocation(line: 3271, column: 4, scope: !18183)
!18183 = distinct !DILexicalBlock(scope: !18179, file: !3, line: 3270, column: 20)
!18184 = !DILocation(line: 3272, column: 4, scope: !18183)
!18185 = !DILocation(line: 3272, column: 9, scope: !18183)
!18186 = !DILocation(line: 3272, column: 16, scope: !18183)
!18187 = !DILocation(line: 3273, column: 3, scope: !18183)
!18188 = !DILocation(line: 3274, column: 3, scope: !18013)
!18189 = !DILocation(line: 3274, column: 8, scope: !18013)
!18190 = !DILocation(line: 3274, column: 15, scope: !18013)
!18191 = !DILocation(line: 3275, column: 7, scope: !18192)
!18192 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 3275, column: 7)
!18193 = !DILocation(line: 3275, column: 12, scope: !18192)
!18194 = !DILocation(line: 3275, column: 7, scope: !18013)
!18195 = !DILocation(line: 3276, column: 4, scope: !18196)
!18196 = distinct !DILexicalBlock(scope: !18192, file: !3, line: 3275, column: 20)
!18197 = !DILocation(line: 3277, column: 4, scope: !18196)
!18198 = !DILocation(line: 3277, column: 9, scope: !18196)
!18199 = !DILocation(line: 3277, column: 16, scope: !18196)
!18200 = !DILocation(line: 3278, column: 3, scope: !18196)
!18201 = !DILocation(line: 3279, column: 36, scope: !18013)
!18202 = !DILocation(line: 3279, column: 41, scope: !18013)
!18203 = !DILocation(line: 3279, column: 3, scope: !18013)
!18204 = !DILocation(line: 3280, column: 43, scope: !18205)
!18205 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 3280, column: 7)
!18206 = !DILocation(line: 3280, column: 48, scope: !18205)
!18207 = !DILocation(line: 3280, column: 7, scope: !18205)
!18208 = !DILocation(line: 3280, column: 7, scope: !18013)
!18209 = !DILocation(line: 3281, column: 15, scope: !18205)
!18210 = !DILocation(line: 3281, column: 20, scope: !18205)
!18211 = !DILocation(line: 3281, column: 4, scope: !18205)
!18212 = !DILocation(line: 3282, column: 27, scope: !18013)
!18213 = !DILocation(line: 3282, column: 31, scope: !18013)
!18214 = !DILocation(line: 3282, column: 37, scope: !18013)
!18215 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !18023)
!18216 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !18023)
!18217 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !18023)
!18218 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !18023)
!18219 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !18023)
!18220 = !DILocation(line: 3283, column: 3, scope: !18013)
!18221 = !DILocation(line: 3285, column: 3, scope: !18013)
!18222 = !DILocation(line: 3285, column: 3, scope: !18021)
!18223 = !DILocalVariable(name: "__dummy", scope: !18224, file: !3, line: 3285, type: !317)
!18224 = distinct !DILexicalBlock(scope: !18020, file: !3, line: 3285, column: 3)
!18225 = !DILocation(line: 3285, column: 3, scope: !18224)
!18226 = !DILocalVariable(name: "__dummy2", scope: !18224, file: !3, line: 3285, type: !9457)
!18227 = !DILocation(line: 3285, column: 3, scope: !18020)
!18228 = !DILocation(line: 3285, column: 3, scope: !18019)
!18229 = !DILocation(line: 3285, column: 3, scope: !18230)
!18230 = distinct !DILexicalBlock(scope: !18019, file: !3, line: 3285, column: 3)
!18231 = !DILocalVariable(name: "__dummy", scope: !18232, file: !3, line: 3285, type: !317)
!18232 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 3285, column: 3)
!18233 = distinct !DILexicalBlock(scope: !18230, file: !3, line: 3285, column: 3)
!18234 = !DILocation(line: 3285, column: 3, scope: !18232)
!18235 = !DILocalVariable(name: "__dummy2", scope: !18232, file: !3, line: 3285, type: !9457)
!18236 = !DILocation(line: 3285, column: 3, scope: !18233)
!18237 = !DILocation(line: 3285, column: 3, scope: !18018)
!18238 = !{i32 -2138053299}
!18239 = !DILocation(line: 3285, column: 3, scope: !18017)
!18240 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !18016)
!18241 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !18016)
!18242 = !DILocation(line: 3286, column: 7, scope: !18243)
!18243 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 3286, column: 7)
!18244 = !DILocation(line: 3286, column: 11, scope: !18243)
!18245 = !DILocation(line: 3286, column: 17, scope: !18243)
!18246 = !DILocation(line: 3286, column: 7, scope: !18013)
!18247 = !DILocation(line: 3287, column: 8, scope: !18248)
!18248 = distinct !DILexicalBlock(scope: !18249, file: !3, line: 3287, column: 8)
!18249 = distinct !DILexicalBlock(scope: !18243, file: !3, line: 3286, column: 33)
!18250 = !DILocation(line: 3287, column: 14, scope: !18248)
!18251 = !DILocation(line: 3287, column: 8, scope: !18249)
!18252 = !DILocation(line: 3288, column: 5, scope: !18248)
!18253 = !DILocation(line: 3291, column: 3, scope: !18249)
!18254 = !DILocation(line: 3292, column: 4, scope: !18255)
!18255 = distinct !DILexicalBlock(scope: !18243, file: !3, line: 3291, column: 10)
!18256 = !DILocation(line: 3294, column: 4, scope: !18257)
!18257 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 3294, column: 4)
!18258 = distinct !DILexicalBlock(scope: !18259, file: !3, line: 3294, column: 4)
!18259 = distinct !DILexicalBlock(scope: !18260, file: !3, line: 3294, column: 4)
!18260 = distinct !DILexicalBlock(scope: !18255, file: !3, line: 3294, column: 4)
!18261 = !DILocation(line: 3295, column: 4, scope: !18255)
!18262 = !DILocation(line: 3296, column: 4, scope: !18263)
!18263 = distinct !DILexicalBlock(scope: !18264, file: !3, line: 3296, column: 4)
!18264 = distinct !DILexicalBlock(scope: !18265, file: !3, line: 3296, column: 4)
!18265 = distinct !DILexicalBlock(scope: !18266, file: !3, line: 3296, column: 4)
!18266 = distinct !DILexicalBlock(scope: !18255, file: !3, line: 3296, column: 4)
!18267 = !DILocation(line: 3297, column: 4, scope: !18255)
!18268 = !DILocation(line: 3299, column: 27, scope: !18013)
!18269 = !DILocation(line: 3299, column: 31, scope: !18013)
!18270 = !DILocation(line: 3299, column: 37, scope: !18013)
!18271 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !18012)
!18272 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !18012)
!18273 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !18012)
!18274 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !18012)
!18275 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !18012)
!18276 = !DILocation(line: 3300, column: 3, scope: !18013)
!18277 = !DILocation(line: 3302, column: 33, scope: !18013)
!18278 = !DILocation(line: 3302, column: 38, scope: !18013)
!18279 = !DILocation(line: 3302, column: 3, scope: !18013)
!18280 = !DILocation(line: 3303, column: 16, scope: !18013)
!18281 = !DILocation(line: 3303, column: 21, scope: !18013)
!18282 = !DILocation(line: 3303, column: 25, scope: !18013)
!18283 = !DILocation(line: 3303, column: 28, scope: !18013)
!18284 = !DILocation(line: 3303, column: 3, scope: !18013)
!18285 = !DILocation(line: 3305, column: 3, scope: !18013)
!18286 = !DILocation(line: 3307, column: 35, scope: !18013)
!18287 = !DILocation(line: 3307, column: 40, scope: !18013)
!18288 = !DILocation(line: 3307, column: 3, scope: !18013)
!18289 = !DILocation(line: 3308, column: 16, scope: !18013)
!18290 = !DILocation(line: 3308, column: 21, scope: !18013)
!18291 = !DILocation(line: 3308, column: 25, scope: !18013)
!18292 = !DILocation(line: 3308, column: 28, scope: !18013)
!18293 = !DILocation(line: 3308, column: 3, scope: !18013)
!18294 = !DILocation(line: 3310, column: 3, scope: !18013)
!18295 = !DILocation(line: 3312, column: 7, scope: !18296)
!18296 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 3312, column: 7)
!18297 = !DILocation(line: 3312, column: 12, scope: !18296)
!18298 = !DILocation(line: 3312, column: 18, scope: !18296)
!18299 = !DILocation(line: 3312, column: 7, scope: !18013)
!18300 = !DILocation(line: 3314, column: 21, scope: !18296)
!18301 = !DILocation(line: 3313, column: 4, scope: !18296)
!18302 = !DILocation(line: 3315, column: 3, scope: !18013)
!18303 = !DILocation(line: 3317, column: 2, scope: !18008)
!18304 = !DILocation(line: 3318, column: 1, scope: !18008)
!18305 = distinct !DISubprogram(name: "hfcmulti_initmode", scope: !3, file: !3, line: 3847, type: !9599, scopeLine: 3848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18306 = !DILocalVariable(name: "dch", arg: 1, scope: !18305, file: !3, line: 3847, type: !9538)
!18307 = !DILocation(line: 3847, column: 36, scope: !18305)
!18308 = !DILocalVariable(name: "hc", scope: !18305, file: !3, line: 3849, type: !9128)
!18309 = !DILocation(line: 3849, column: 20, scope: !18305)
!18310 = !DILocation(line: 3849, column: 25, scope: !18305)
!18311 = !DILocation(line: 3849, column: 30, scope: !18305)
!18312 = !DILocalVariable(name: "a_st_wr_state", scope: !18305, file: !3, line: 3850, type: !9432)
!18313 = !DILocation(line: 3850, column: 10, scope: !18305)
!18314 = !DILocalVariable(name: "r_e1_wr_sta", scope: !18305, file: !3, line: 3850, type: !9432)
!18315 = !DILocation(line: 3850, column: 25, scope: !18305)
!18316 = !DILocalVariable(name: "i", scope: !18305, file: !3, line: 3851, type: !37)
!18317 = !DILocation(line: 3851, column: 7, scope: !18305)
!18318 = !DILocalVariable(name: "pt", scope: !18305, file: !3, line: 3851, type: !37)
!18319 = !DILocation(line: 3851, column: 10, scope: !18305)
!18320 = !DILocation(line: 3853, column: 6, scope: !18321)
!18321 = distinct !DILexicalBlock(scope: !18305, file: !3, line: 3853, column: 6)
!18322 = !DILocation(line: 3853, column: 12, scope: !18321)
!18323 = !DILocation(line: 3853, column: 6, scope: !18305)
!18324 = !DILocation(line: 3854, column: 3, scope: !18321)
!18325 = !DILocation(line: 3856, column: 6, scope: !18305)
!18326 = !DILocation(line: 3856, column: 11, scope: !18305)
!18327 = !DILocation(line: 3856, column: 4, scope: !18305)
!18328 = !DILocation(line: 3857, column: 7, scope: !18305)
!18329 = !DILocation(line: 3857, column: 11, scope: !18305)
!18330 = !DILocation(line: 3857, column: 16, scope: !18305)
!18331 = !DILocation(line: 3857, column: 19, scope: !18305)
!18332 = !DILocation(line: 3857, column: 5, scope: !18305)
!18333 = !DILocation(line: 3858, column: 6, scope: !18334)
!18334 = distinct !DILexicalBlock(scope: !18305, file: !3, line: 3858, column: 6)
!18335 = !DILocation(line: 3858, column: 10, scope: !18334)
!18336 = !DILocation(line: 3858, column: 16, scope: !18334)
!18337 = !DILocation(line: 3858, column: 6, scope: !18305)
!18338 = !DILocation(line: 3860, column: 3, scope: !18339)
!18339 = distinct !DILexicalBlock(scope: !18334, file: !3, line: 3858, column: 32)
!18340 = !DILocation(line: 3860, column: 7, scope: !18339)
!18341 = !DILocation(line: 3860, column: 12, scope: !18339)
!18342 = !DILocation(line: 3860, column: 16, scope: !18339)
!18343 = !DILocation(line: 3860, column: 21, scope: !18339)
!18344 = !DILocation(line: 3860, column: 26, scope: !18339)
!18345 = !DILocation(line: 3860, column: 34, scope: !18339)
!18346 = !DILocation(line: 3861, column: 3, scope: !18339)
!18347 = !DILocation(line: 3861, column: 7, scope: !18339)
!18348 = !DILocation(line: 3861, column: 12, scope: !18339)
!18349 = !DILocation(line: 3861, column: 16, scope: !18339)
!18350 = !DILocation(line: 3861, column: 21, scope: !18339)
!18351 = !DILocation(line: 3861, column: 26, scope: !18339)
!18352 = !DILocation(line: 3861, column: 34, scope: !18339)
!18353 = !DILocation(line: 3862, column: 3, scope: !18339)
!18354 = !DILocation(line: 3862, column: 7, scope: !18339)
!18355 = !DILocation(line: 3862, column: 12, scope: !18339)
!18356 = !DILocation(line: 3862, column: 16, scope: !18339)
!18357 = !DILocation(line: 3862, column: 21, scope: !18339)
!18358 = !DILocation(line: 3862, column: 26, scope: !18339)
!18359 = !DILocation(line: 3862, column: 31, scope: !18339)
!18360 = !DILocation(line: 3863, column: 7, scope: !18361)
!18361 = distinct !DILexicalBlock(scope: !18339, file: !3, line: 3863, column: 7)
!18362 = !DILocation(line: 3863, column: 11, scope: !18361)
!18363 = !DILocation(line: 3863, column: 16, scope: !18361)
!18364 = !DILocation(line: 3863, column: 7, scope: !18339)
!18365 = !DILocation(line: 3864, column: 18, scope: !18366)
!18366 = distinct !DILexicalBlock(scope: !18361, file: !3, line: 3863, column: 21)
!18367 = !DILocation(line: 3864, column: 22, scope: !18366)
!18368 = !DILocation(line: 3864, column: 27, scope: !18366)
!18369 = !DILocation(line: 3864, column: 33, scope: !18366)
!18370 = !DILocation(line: 3864, column: 38, scope: !18366)
!18371 = !DILocation(line: 3864, column: 42, scope: !18366)
!18372 = !DILocation(line: 3864, column: 44, scope: !18366)
!18373 = !DILocation(line: 3864, column: 4, scope: !18366)
!18374 = !DILocation(line: 3866, column: 4, scope: !18366)
!18375 = !DILocation(line: 3867, column: 3, scope: !18366)
!18376 = !DILocation(line: 3868, column: 10, scope: !18377)
!18377 = distinct !DILexicalBlock(scope: !18339, file: !3, line: 3868, column: 3)
!18378 = !DILocation(line: 3868, column: 8, scope: !18377)
!18379 = !DILocation(line: 3868, column: 15, scope: !18380)
!18380 = distinct !DILexicalBlock(scope: !18377, file: !3, line: 3868, column: 3)
!18381 = !DILocation(line: 3868, column: 17, scope: !18380)
!18382 = !DILocation(line: 3868, column: 3, scope: !18377)
!18383 = !DILocation(line: 3869, column: 16, scope: !18384)
!18384 = distinct !DILexicalBlock(scope: !18385, file: !3, line: 3869, column: 8)
!18385 = distinct !DILexicalBlock(scope: !18380, file: !3, line: 3868, column: 29)
!18386 = !DILocation(line: 3869, column: 13, scope: !18384)
!18387 = !DILocation(line: 3869, column: 21, scope: !18384)
!18388 = !DILocation(line: 3869, column: 25, scope: !18384)
!18389 = !DILocation(line: 3869, column: 31, scope: !18384)
!18390 = !DILocation(line: 3869, column: 19, scope: !18384)
!18391 = !DILocation(line: 3869, column: 8, scope: !18385)
!18392 = !DILocation(line: 3870, column: 5, scope: !18384)
!18393 = !DILocation(line: 3871, column: 4, scope: !18385)
!18394 = !DILocation(line: 3871, column: 8, scope: !18385)
!18395 = !DILocation(line: 3871, column: 13, scope: !18385)
!18396 = !DILocation(line: 3871, column: 16, scope: !18385)
!18397 = !DILocation(line: 3871, column: 24, scope: !18385)
!18398 = !DILocation(line: 3872, column: 4, scope: !18385)
!18399 = !DILocation(line: 3872, column: 8, scope: !18385)
!18400 = !DILocation(line: 3872, column: 13, scope: !18385)
!18401 = !DILocation(line: 3872, column: 16, scope: !18385)
!18402 = !DILocation(line: 3872, column: 24, scope: !18385)
!18403 = !DILocation(line: 3873, column: 4, scope: !18385)
!18404 = !DILocation(line: 3873, column: 8, scope: !18385)
!18405 = !DILocation(line: 3873, column: 13, scope: !18385)
!18406 = !DILocation(line: 3873, column: 16, scope: !18385)
!18407 = !DILocation(line: 3873, column: 21, scope: !18385)
!18408 = !DILocation(line: 3874, column: 18, scope: !18385)
!18409 = !DILocation(line: 3874, column: 22, scope: !18385)
!18410 = !DILocation(line: 3874, column: 4, scope: !18385)
!18411 = !DILocation(line: 3875, column: 3, scope: !18385)
!18412 = !DILocation(line: 3868, column: 25, scope: !18380)
!18413 = !DILocation(line: 3868, column: 3, scope: !18380)
!18414 = distinct !{!18414, !18382, !18415}
!18415 = !DILocation(line: 3875, column: 3, scope: !18377)
!18416 = !DILocation(line: 3876, column: 2, scope: !18339)
!18417 = !DILocation(line: 3877, column: 6, scope: !18418)
!18418 = distinct !DILexicalBlock(scope: !18305, file: !3, line: 3877, column: 6)
!18419 = !DILocation(line: 3877, column: 10, scope: !18418)
!18420 = !DILocation(line: 3877, column: 16, scope: !18418)
!18421 = !DILocation(line: 3877, column: 31, scope: !18418)
!18422 = !DILocation(line: 3877, column: 34, scope: !18418)
!18423 = !DILocation(line: 3877, column: 37, scope: !18418)
!18424 = !DILocation(line: 3877, column: 6, scope: !18305)
!18425 = !DILocation(line: 3879, column: 9, scope: !18426)
!18426 = distinct !DILexicalBlock(scope: !18418, file: !3, line: 3877, column: 43)
!18427 = !DILocation(line: 3879, column: 13, scope: !18426)
!18428 = !DILocation(line: 3879, column: 18, scope: !18426)
!18429 = !DILocation(line: 3879, column: 22, scope: !18426)
!18430 = !DILocation(line: 3879, column: 31, scope: !18426)
!18431 = !DILocation(line: 3879, column: 7, scope: !18426)
!18432 = !DILocation(line: 3880, column: 37, scope: !18433)
!18433 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3880, column: 7)
!18434 = !DILocation(line: 3880, column: 41, scope: !18433)
!18435 = !DILocation(line: 3880, column: 46, scope: !18433)
!18436 = !DILocation(line: 3880, column: 50, scope: !18433)
!18437 = !DILocation(line: 3880, column: 59, scope: !18433)
!18438 = !DILocation(line: 3880, column: 7, scope: !18433)
!18439 = !DILocation(line: 3880, column: 7, scope: !18426)
!18440 = !DILocation(line: 3881, column: 4, scope: !18441)
!18441 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 3880, column: 65)
!18442 = !DILocation(line: 3882, column: 4, scope: !18441)
!18443 = !DILocation(line: 3883, column: 3, scope: !18441)
!18444 = !DILocation(line: 3884, column: 34, scope: !18445)
!18445 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3884, column: 7)
!18446 = !DILocation(line: 3884, column: 38, scope: !18445)
!18447 = !DILocation(line: 3884, column: 43, scope: !18445)
!18448 = !DILocation(line: 3884, column: 47, scope: !18445)
!18449 = !DILocation(line: 3884, column: 56, scope: !18445)
!18450 = !DILocation(line: 3884, column: 7, scope: !18445)
!18451 = !DILocation(line: 3884, column: 7, scope: !18426)
!18452 = !DILocation(line: 3885, column: 4, scope: !18453)
!18453 = distinct !DILexicalBlock(scope: !18445, file: !3, line: 3884, column: 62)
!18454 = !DILocation(line: 3886, column: 4, scope: !18453)
!18455 = !DILocation(line: 3886, column: 8, scope: !18453)
!18456 = !DILocation(line: 3886, column: 11, scope: !18453)
!18457 = !DILocation(line: 3886, column: 17, scope: !18453)
!18458 = !DILocation(line: 3887, column: 3, scope: !18453)
!18459 = !DILocation(line: 3888, column: 4, scope: !18460)
!18460 = distinct !DILexicalBlock(scope: !18445, file: !3, line: 3887, column: 10)
!18461 = !DILocation(line: 3889, column: 4, scope: !18460)
!18462 = !DILocation(line: 3889, column: 8, scope: !18460)
!18463 = !DILocation(line: 3889, column: 11, scope: !18460)
!18464 = !DILocation(line: 3889, column: 17, scope: !18460)
!18465 = !DILocation(line: 3891, column: 3, scope: !18426)
!18466 = !DILocation(line: 3891, column: 7, scope: !18426)
!18467 = !DILocation(line: 3891, column: 10, scope: !18426)
!18468 = !DILocation(line: 3891, column: 16, scope: !18426)
!18469 = !DILocation(line: 3892, column: 3, scope: !18426)
!18470 = !DILocation(line: 3893, column: 3, scope: !18426)
!18471 = !DILocation(line: 3894, column: 3, scope: !18426)
!18472 = !DILocation(line: 3895, column: 3, scope: !18426)
!18473 = !DILocation(line: 3897, column: 31, scope: !18474)
!18474 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3897, column: 7)
!18475 = !DILocation(line: 3897, column: 35, scope: !18474)
!18476 = !DILocation(line: 3897, column: 40, scope: !18474)
!18477 = !DILocation(line: 3897, column: 44, scope: !18474)
!18478 = !DILocation(line: 3897, column: 53, scope: !18474)
!18479 = !DILocation(line: 3897, column: 7, scope: !18474)
!18480 = !DILocation(line: 3897, column: 7, scope: !18426)
!18481 = !DILocation(line: 3898, column: 4, scope: !18474)
!18482 = !DILocation(line: 3900, column: 3, scope: !18426)
!18483 = !DILocation(line: 3902, column: 31, scope: !18484)
!18484 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3902, column: 7)
!18485 = !DILocation(line: 3902, column: 35, scope: !18484)
!18486 = !DILocation(line: 3902, column: 40, scope: !18484)
!18487 = !DILocation(line: 3902, column: 44, scope: !18484)
!18488 = !DILocation(line: 3902, column: 53, scope: !18484)
!18489 = !DILocation(line: 3902, column: 7, scope: !18484)
!18490 = !DILocation(line: 3902, column: 7, scope: !18426)
!18491 = !DILocation(line: 3903, column: 4, scope: !18484)
!18492 = !DILocation(line: 3905, column: 7, scope: !18493)
!18493 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3905, column: 7)
!18494 = !DILocation(line: 3905, column: 12, scope: !18493)
!18495 = !DILocation(line: 3905, column: 16, scope: !18493)
!18496 = !DILocation(line: 3905, column: 18, scope: !18493)
!18497 = !DILocation(line: 3905, column: 27, scope: !18493)
!18498 = !DILocation(line: 3905, column: 7, scope: !18426)
!18499 = !DILocation(line: 3906, column: 8, scope: !18500)
!18500 = distinct !DILexicalBlock(scope: !18501, file: !3, line: 3906, column: 8)
!18501 = distinct !DILexicalBlock(scope: !18493, file: !3, line: 3905, column: 44)
!18502 = !DILocation(line: 3906, column: 14, scope: !18500)
!18503 = !DILocation(line: 3906, column: 8, scope: !18501)
!18504 = !DILocation(line: 3907, column: 5, scope: !18500)
!18505 = !DILocation(line: 3909, column: 16, scope: !18501)
!18506 = !DILocation(line: 3910, column: 4, scope: !18501)
!18507 = !DILocation(line: 3910, column: 8, scope: !18501)
!18508 = !DILocation(line: 3910, column: 20, scope: !18501)
!18509 = !DILocation(line: 3911, column: 3, scope: !18501)
!18510 = !DILocation(line: 3912, column: 8, scope: !18511)
!18511 = distinct !DILexicalBlock(scope: !18512, file: !3, line: 3912, column: 8)
!18512 = distinct !DILexicalBlock(scope: !18493, file: !3, line: 3911, column: 10)
!18513 = !DILocation(line: 3912, column: 14, scope: !18511)
!18514 = !DILocation(line: 3912, column: 8, scope: !18512)
!18515 = !DILocation(line: 3913, column: 5, scope: !18511)
!18516 = !DILocation(line: 3915, column: 16, scope: !18512)
!18517 = !DILocation(line: 3916, column: 4, scope: !18512)
!18518 = !DILocation(line: 3916, column: 8, scope: !18512)
!18519 = !DILocation(line: 3916, column: 20, scope: !18512)
!18520 = !DILocation(line: 3918, column: 35, scope: !18521)
!18521 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3918, column: 7)
!18522 = !DILocation(line: 3918, column: 39, scope: !18521)
!18523 = !DILocation(line: 3918, column: 7, scope: !18521)
!18524 = !DILocation(line: 3918, column: 7, scope: !18426)
!18525 = !DILocation(line: 3919, column: 4, scope: !18521)
!18526 = !DILocation(line: 3921, column: 4, scope: !18521)
!18527 = !DILocation(line: 3922, column: 39, scope: !18528)
!18528 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3922, column: 7)
!18529 = !DILocation(line: 3922, column: 43, scope: !18528)
!18530 = !DILocation(line: 3922, column: 7, scope: !18528)
!18531 = !DILocation(line: 3922, column: 7, scope: !18426)
!18532 = !DILocation(line: 3923, column: 4, scope: !18528)
!18533 = !DILocation(line: 3923, column: 8, scope: !18528)
!18534 = !DILocation(line: 3923, column: 20, scope: !18528)
!18535 = !DILocation(line: 3924, column: 39, scope: !18536)
!18536 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3924, column: 7)
!18537 = !DILocation(line: 3924, column: 43, scope: !18536)
!18538 = !DILocation(line: 3924, column: 7, scope: !18536)
!18539 = !DILocation(line: 3924, column: 7, scope: !18426)
!18540 = !DILocation(line: 3925, column: 4, scope: !18536)
!18541 = !DILocation(line: 3925, column: 8, scope: !18536)
!18542 = !DILocation(line: 3925, column: 20, scope: !18536)
!18543 = !DILocation(line: 3926, column: 37, scope: !18544)
!18544 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3926, column: 7)
!18545 = !DILocation(line: 3926, column: 41, scope: !18544)
!18546 = !DILocation(line: 3926, column: 7, scope: !18544)
!18547 = !DILocation(line: 3926, column: 7, scope: !18426)
!18548 = !DILocation(line: 3928, column: 8, scope: !18549)
!18549 = distinct !DILexicalBlock(scope: !18550, file: !3, line: 3928, column: 8)
!18550 = distinct !DILexicalBlock(scope: !18544, file: !3, line: 3926, column: 48)
!18551 = !DILocation(line: 3928, column: 14, scope: !18549)
!18552 = !DILocation(line: 3928, column: 8, scope: !18550)
!18553 = !DILocation(line: 3929, column: 5, scope: !18549)
!18554 = !DILocation(line: 3932, column: 4, scope: !18550)
!18555 = !DILocation(line: 3933, column: 3, scope: !18550)
!18556 = !DILocation(line: 3934, column: 8, scope: !18557)
!18557 = distinct !DILexicalBlock(scope: !18558, file: !3, line: 3934, column: 8)
!18558 = distinct !DILexicalBlock(scope: !18544, file: !3, line: 3933, column: 10)
!18559 = !DILocation(line: 3934, column: 12, scope: !18557)
!18560 = !DILocation(line: 3934, column: 8, scope: !18558)
!18561 = !DILocation(line: 3936, column: 9, scope: !18562)
!18562 = distinct !DILexicalBlock(scope: !18563, file: !3, line: 3936, column: 9)
!18563 = distinct !DILexicalBlock(scope: !18557, file: !3, line: 3934, column: 25)
!18564 = !DILocation(line: 3936, column: 15, scope: !18562)
!18565 = !DILocation(line: 3936, column: 9, scope: !18563)
!18566 = !DILocation(line: 3937, column: 6, scope: !18562)
!18567 = !DILocation(line: 3940, column: 5, scope: !18563)
!18568 = !DILocation(line: 3941, column: 4, scope: !18563)
!18569 = !DILocation(line: 3943, column: 9, scope: !18570)
!18570 = distinct !DILexicalBlock(scope: !18571, file: !3, line: 3943, column: 9)
!18571 = distinct !DILexicalBlock(scope: !18557, file: !3, line: 3941, column: 11)
!18572 = !DILocation(line: 3943, column: 15, scope: !18570)
!18573 = !DILocation(line: 3943, column: 9, scope: !18571)
!18574 = !DILocation(line: 3944, column: 6, scope: !18570)
!18575 = !DILocation(line: 3948, column: 5, scope: !18571)
!18576 = !DILocation(line: 3950, column: 5, scope: !18571)
!18577 = !DILocation(line: 3953, column: 3, scope: !18426)
!18578 = !DILocation(line: 3954, column: 3, scope: !18426)
!18579 = !DILocation(line: 3955, column: 3, scope: !18426)
!18580 = !DILocation(line: 3956, column: 3, scope: !18426)
!18581 = !DILocation(line: 3958, column: 3, scope: !18426)
!18582 = !DILocation(line: 3959, column: 3, scope: !18583)
!18583 = distinct !DILexicalBlock(scope: !18584, file: !3, line: 3959, column: 3)
!18584 = distinct !DILexicalBlock(scope: !18585, file: !3, line: 3959, column: 3)
!18585 = distinct !DILexicalBlock(scope: !18586, file: !3, line: 3959, column: 3)
!18586 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3959, column: 3)
!18587 = !DILocation(line: 3960, column: 3, scope: !18426)
!18588 = !DILocation(line: 3961, column: 33, scope: !18589)
!18589 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3961, column: 7)
!18590 = !DILocation(line: 3961, column: 37, scope: !18589)
!18591 = !DILocation(line: 3961, column: 7, scope: !18589)
!18592 = !DILocation(line: 3961, column: 7, scope: !18426)
!18593 = !DILocation(line: 3962, column: 4, scope: !18594)
!18594 = distinct !DILexicalBlock(scope: !18589, file: !3, line: 3961, column: 44)
!18595 = !DILocation(line: 3962, column: 8, scope: !18594)
!18596 = !DILocation(line: 3962, column: 20, scope: !18594)
!18597 = !DILocation(line: 3963, column: 20, scope: !18594)
!18598 = !DILocation(line: 3963, column: 4, scope: !18594)
!18599 = !DILocation(line: 3964, column: 3, scope: !18594)
!18600 = !DILocation(line: 3965, column: 2, scope: !18426)
!18601 = !DILocation(line: 3966, column: 6, scope: !18602)
!18602 = distinct !DILexicalBlock(scope: !18305, file: !3, line: 3966, column: 6)
!18603 = !DILocation(line: 3966, column: 10, scope: !18602)
!18604 = !DILocation(line: 3966, column: 16, scope: !18602)
!18605 = !DILocation(line: 3966, column: 6, scope: !18305)
!18606 = !DILocation(line: 3968, column: 3, scope: !18607)
!18607 = distinct !DILexicalBlock(scope: !18602, file: !3, line: 3966, column: 32)
!18608 = !DILocation(line: 3968, column: 7, scope: !18607)
!18609 = !DILocation(line: 3968, column: 12, scope: !18607)
!18610 = !DILocation(line: 3968, column: 15, scope: !18607)
!18611 = !DILocation(line: 3968, column: 23, scope: !18607)
!18612 = !DILocation(line: 3969, column: 3, scope: !18607)
!18613 = !DILocation(line: 3969, column: 7, scope: !18607)
!18614 = !DILocation(line: 3969, column: 12, scope: !18607)
!18615 = !DILocation(line: 3969, column: 15, scope: !18607)
!18616 = !DILocation(line: 3969, column: 23, scope: !18607)
!18617 = !DILocation(line: 3970, column: 3, scope: !18607)
!18618 = !DILocation(line: 3970, column: 7, scope: !18607)
!18619 = !DILocation(line: 3970, column: 12, scope: !18607)
!18620 = !DILocation(line: 3970, column: 15, scope: !18607)
!18621 = !DILocation(line: 3970, column: 20, scope: !18607)
!18622 = !DILocation(line: 3971, column: 17, scope: !18607)
!18623 = !DILocation(line: 3971, column: 21, scope: !18607)
!18624 = !DILocation(line: 3971, column: 24, scope: !18607)
!18625 = !DILocation(line: 3971, column: 29, scope: !18607)
!18626 = !DILocation(line: 3971, column: 33, scope: !18607)
!18627 = !DILocation(line: 3971, column: 35, scope: !18607)
!18628 = !DILocation(line: 3971, column: 3, scope: !18607)
!18629 = !DILocation(line: 3972, column: 3, scope: !18607)
!18630 = !DILocation(line: 3973, column: 3, scope: !18607)
!18631 = !DILocation(line: 3973, column: 7, scope: !18607)
!18632 = !DILocation(line: 3973, column: 12, scope: !18607)
!18633 = !DILocation(line: 3973, column: 14, scope: !18607)
!18634 = !DILocation(line: 3973, column: 19, scope: !18607)
!18635 = !DILocation(line: 3973, column: 27, scope: !18607)
!18636 = !DILocation(line: 3974, column: 3, scope: !18607)
!18637 = !DILocation(line: 3974, column: 7, scope: !18607)
!18638 = !DILocation(line: 3974, column: 12, scope: !18607)
!18639 = !DILocation(line: 3974, column: 14, scope: !18607)
!18640 = !DILocation(line: 3974, column: 19, scope: !18607)
!18641 = !DILocation(line: 3974, column: 27, scope: !18607)
!18642 = !DILocation(line: 3975, column: 3, scope: !18607)
!18643 = !DILocation(line: 3975, column: 7, scope: !18607)
!18644 = !DILocation(line: 3975, column: 12, scope: !18607)
!18645 = !DILocation(line: 3975, column: 14, scope: !18607)
!18646 = !DILocation(line: 3975, column: 19, scope: !18607)
!18647 = !DILocation(line: 3975, column: 24, scope: !18607)
!18648 = !DILocation(line: 3976, column: 17, scope: !18607)
!18649 = !DILocation(line: 3976, column: 21, scope: !18607)
!18650 = !DILocation(line: 3976, column: 23, scope: !18607)
!18651 = !DILocation(line: 3976, column: 3, scope: !18607)
!18652 = !DILocation(line: 3977, column: 3, scope: !18607)
!18653 = !DILocation(line: 3977, column: 7, scope: !18607)
!18654 = !DILocation(line: 3977, column: 12, scope: !18607)
!18655 = !DILocation(line: 3977, column: 14, scope: !18607)
!18656 = !DILocation(line: 3977, column: 19, scope: !18607)
!18657 = !DILocation(line: 3977, column: 27, scope: !18607)
!18658 = !DILocation(line: 3978, column: 3, scope: !18607)
!18659 = !DILocation(line: 3978, column: 7, scope: !18607)
!18660 = !DILocation(line: 3978, column: 12, scope: !18607)
!18661 = !DILocation(line: 3978, column: 14, scope: !18607)
!18662 = !DILocation(line: 3978, column: 19, scope: !18607)
!18663 = !DILocation(line: 3978, column: 27, scope: !18607)
!18664 = !DILocation(line: 3979, column: 3, scope: !18607)
!18665 = !DILocation(line: 3979, column: 7, scope: !18607)
!18666 = !DILocation(line: 3979, column: 12, scope: !18607)
!18667 = !DILocation(line: 3979, column: 14, scope: !18607)
!18668 = !DILocation(line: 3979, column: 19, scope: !18607)
!18669 = !DILocation(line: 3979, column: 24, scope: !18607)
!18670 = !DILocation(line: 3980, column: 17, scope: !18607)
!18671 = !DILocation(line: 3980, column: 21, scope: !18607)
!18672 = !DILocation(line: 3980, column: 23, scope: !18607)
!18673 = !DILocation(line: 3980, column: 3, scope: !18607)
!18674 = !DILocation(line: 3982, column: 3, scope: !18607)
!18675 = !DILocation(line: 3984, column: 3, scope: !18676)
!18676 = distinct !DILexicalBlock(scope: !18677, file: !3, line: 3984, column: 3)
!18677 = distinct !DILexicalBlock(scope: !18678, file: !3, line: 3984, column: 3)
!18678 = distinct !DILexicalBlock(scope: !18679, file: !3, line: 3984, column: 3)
!18679 = distinct !DILexicalBlock(scope: !18607, file: !3, line: 3984, column: 3)
!18680 = !DILocation(line: 3985, column: 7, scope: !18681)
!18681 = distinct !DILexicalBlock(scope: !18607, file: !3, line: 3985, column: 7)
!18682 = !DILocation(line: 3985, column: 12, scope: !18681)
!18683 = !DILocation(line: 3985, column: 16, scope: !18681)
!18684 = !DILocation(line: 3985, column: 18, scope: !18681)
!18685 = !DILocation(line: 3985, column: 27, scope: !18681)
!18686 = !DILocation(line: 3985, column: 7, scope: !18607)
!18687 = !DILocation(line: 3986, column: 8, scope: !18688)
!18688 = distinct !DILexicalBlock(scope: !18689, file: !3, line: 3986, column: 8)
!18689 = distinct !DILexicalBlock(scope: !18681, file: !3, line: 3985, column: 44)
!18690 = !DILocation(line: 3986, column: 14, scope: !18688)
!18691 = !DILocation(line: 3986, column: 8, scope: !18689)
!18692 = !DILocation(line: 3989, column: 22, scope: !18688)
!18693 = !DILocation(line: 3987, column: 5, scope: !18688)
!18694 = !DILocation(line: 3991, column: 4, scope: !18689)
!18695 = !DILocation(line: 3992, column: 18, scope: !18689)
!18696 = !DILocation(line: 3993, column: 4, scope: !18689)
!18697 = !DILocation(line: 3993, column: 8, scope: !18689)
!18698 = !DILocation(line: 3993, column: 11, scope: !18689)
!18699 = !DILocation(line: 3993, column: 22, scope: !18689)
!18700 = !DILocation(line: 3993, column: 26, scope: !18689)
!18701 = !DILocation(line: 3994, column: 3, scope: !18689)
!18702 = !DILocation(line: 3995, column: 8, scope: !18703)
!18703 = distinct !DILexicalBlock(scope: !18704, file: !3, line: 3995, column: 8)
!18704 = distinct !DILexicalBlock(scope: !18681, file: !3, line: 3994, column: 10)
!18705 = !DILocation(line: 3995, column: 14, scope: !18703)
!18706 = !DILocation(line: 3995, column: 8, scope: !18704)
!18707 = !DILocation(line: 3998, column: 22, scope: !18703)
!18708 = !DILocation(line: 3996, column: 5, scope: !18703)
!18709 = !DILocation(line: 4000, column: 4, scope: !18704)
!18710 = !DILocation(line: 4001, column: 18, scope: !18704)
!18711 = !DILocation(line: 4002, column: 4, scope: !18704)
!18712 = !DILocation(line: 4002, column: 8, scope: !18704)
!18713 = !DILocation(line: 4002, column: 11, scope: !18704)
!18714 = !DILocation(line: 4002, column: 22, scope: !18704)
!18715 = !DILocation(line: 4002, column: 26, scope: !18704)
!18716 = !DILocation(line: 4004, column: 37, scope: !18717)
!18717 = distinct !DILexicalBlock(scope: !18607, file: !3, line: 4004, column: 7)
!18718 = !DILocation(line: 4004, column: 41, scope: !18717)
!18719 = !DILocation(line: 4004, column: 46, scope: !18717)
!18720 = !DILocation(line: 4004, column: 49, scope: !18717)
!18721 = !DILocation(line: 4004, column: 8, scope: !18717)
!18722 = !DILocation(line: 4004, column: 7, scope: !18607)
!18723 = !DILocation(line: 4005, column: 4, scope: !18717)
!18724 = !DILocation(line: 4005, column: 8, scope: !18717)
!18725 = !DILocation(line: 4005, column: 11, scope: !18717)
!18726 = !DILocation(line: 4005, column: 22, scope: !18717)
!18727 = !DILocation(line: 4005, column: 26, scope: !18717)
!18728 = !DILocation(line: 4006, column: 7, scope: !18729)
!18729 = distinct !DILexicalBlock(scope: !18607, file: !3, line: 4006, column: 7)
!18730 = !DILocation(line: 4006, column: 11, scope: !18729)
!18731 = !DILocation(line: 4006, column: 17, scope: !18729)
!18732 = !DILocation(line: 4006, column: 7, scope: !18607)
!18733 = !DILocation(line: 4007, column: 4, scope: !18734)
!18734 = distinct !DILexicalBlock(scope: !18729, file: !3, line: 4006, column: 35)
!18735 = !DILocation(line: 4007, column: 8, scope: !18734)
!18736 = !DILocation(line: 4007, column: 11, scope: !18734)
!18737 = !DILocation(line: 4007, column: 22, scope: !18734)
!18738 = !DILocation(line: 4007, column: 26, scope: !18734)
!18739 = !DILocation(line: 4008, column: 4, scope: !18734)
!18740 = !DILocation(line: 4010, column: 3, scope: !18734)
!18741 = !DILocation(line: 4012, column: 3, scope: !18607)
!18742 = !DILocation(line: 4014, column: 8, scope: !18743)
!18743 = distinct !DILexicalBlock(scope: !18607, file: !3, line: 4014, column: 7)
!18744 = !DILocation(line: 4014, column: 13, scope: !18743)
!18745 = !DILocation(line: 4014, column: 17, scope: !18743)
!18746 = !DILocation(line: 4014, column: 19, scope: !18743)
!18747 = !DILocation(line: 4014, column: 28, scope: !18743)
!18748 = !DILocation(line: 4014, column: 45, scope: !18743)
!18749 = !DILocation(line: 4015, column: 39, scope: !18743)
!18750 = !DILocation(line: 4015, column: 43, scope: !18743)
!18751 = !DILocation(line: 4015, column: 48, scope: !18743)
!18752 = !DILocation(line: 4015, column: 51, scope: !18743)
!18753 = !DILocation(line: 4015, column: 7, scope: !18743)
!18754 = !DILocation(line: 4014, column: 7, scope: !18607)
!18755 = !DILocation(line: 4016, column: 4, scope: !18743)
!18756 = !DILocation(line: 4018, column: 4, scope: !18743)
!18757 = !DILocation(line: 4020, column: 3, scope: !18607)
!18758 = !DILocation(line: 4022, column: 3, scope: !18607)
!18759 = !DILocation(line: 4023, column: 3, scope: !18760)
!18760 = distinct !DILexicalBlock(scope: !18761, file: !3, line: 4023, column: 3)
!18761 = distinct !DILexicalBlock(scope: !18762, file: !3, line: 4023, column: 3)
!18762 = distinct !DILexicalBlock(scope: !18763, file: !3, line: 4023, column: 3)
!18763 = distinct !DILexicalBlock(scope: !18607, file: !3, line: 4023, column: 3)
!18764 = !DILocation(line: 4024, column: 3, scope: !18607)
!18765 = !DILocation(line: 4025, column: 28, scope: !18607)
!18766 = !DILocation(line: 4025, column: 25, scope: !18607)
!18767 = !DILocation(line: 4025, column: 3, scope: !18607)
!18768 = !DILocation(line: 4025, column: 7, scope: !18607)
!18769 = !DILocation(line: 4025, column: 10, scope: !18607)
!18770 = !DILocation(line: 4025, column: 20, scope: !18607)
!18771 = !DILocation(line: 4027, column: 3, scope: !18607)
!18772 = !DILocation(line: 4029, column: 33, scope: !18773)
!18773 = distinct !DILexicalBlock(scope: !18607, file: !3, line: 4029, column: 7)
!18774 = !DILocation(line: 4029, column: 37, scope: !18773)
!18775 = !DILocation(line: 4029, column: 7, scope: !18773)
!18776 = !DILocation(line: 4029, column: 7, scope: !18607)
!18777 = !DILocation(line: 4031, column: 12, scope: !18778)
!18778 = distinct !DILexicalBlock(scope: !18773, file: !3, line: 4029, column: 44)
!18779 = !DILocation(line: 4031, column: 16, scope: !18778)
!18780 = !DILocation(line: 4031, column: 21, scope: !18778)
!18781 = !DILocation(line: 4031, column: 26, scope: !18778)
!18782 = !DILocation(line: 4031, column: 32, scope: !18778)
!18783 = !DILocation(line: 4031, column: 9, scope: !18778)
!18784 = !DILocation(line: 4031, column: 5, scope: !18778)
!18785 = !DILocation(line: 4030, column: 4, scope: !18778)
!18786 = !DILocation(line: 4030, column: 8, scope: !18778)
!18787 = !DILocation(line: 4030, column: 20, scope: !18778)
!18788 = !DILocation(line: 4032, column: 20, scope: !18778)
!18789 = !DILocation(line: 4032, column: 4, scope: !18778)
!18790 = !DILocation(line: 4033, column: 3, scope: !18778)
!18791 = !DILocation(line: 4034, column: 2, scope: !18607)
!18792 = !DILocation(line: 4035, column: 6, scope: !18793)
!18793 = distinct !DILexicalBlock(scope: !18305, file: !3, line: 4035, column: 6)
!18794 = !DILocation(line: 4035, column: 12, scope: !18793)
!18795 = !DILocation(line: 4035, column: 6, scope: !18305)
!18796 = !DILocation(line: 4036, column: 3, scope: !18793)
!18797 = !DILocation(line: 4037, column: 1, scope: !18305)
!18798 = distinct !DISubprogram(name: "try_module_get", scope: !9724, file: !9724, line: 751, type: !18799, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18799 = !DISubroutineType(types: !18800)
!18800 = !{!540, !852}
!18801 = !DILocalVariable(name: "module", arg: 1, scope: !18798, file: !9724, line: 751, type: !852)
!18802 = !DILocation(line: 751, column: 50, scope: !18798)
!18803 = !DILocation(line: 753, column: 2, scope: !18798)
!18804 = distinct !DISubprogram(name: "mode_hfcmulti", scope: !3, file: !3, line: 2859, type: !18805, scopeLine: 2861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18805 = !DISubroutineType(types: !18806)
!18806 = !{!37, !9128, !37, !37, !37, !37, !37, !37}
!18807 = !DILocalVariable(name: "hc", arg: 1, scope: !18804, file: !3, line: 2859, type: !9128)
!18808 = !DILocation(line: 2859, column: 33, scope: !18804)
!18809 = !DILocalVariable(name: "ch", arg: 2, scope: !18804, file: !3, line: 2859, type: !37)
!18810 = !DILocation(line: 2859, column: 41, scope: !18804)
!18811 = !DILocalVariable(name: "protocol", arg: 3, scope: !18804, file: !3, line: 2859, type: !37)
!18812 = !DILocation(line: 2859, column: 49, scope: !18804)
!18813 = !DILocalVariable(name: "slot_tx", arg: 4, scope: !18804, file: !3, line: 2859, type: !37)
!18814 = !DILocation(line: 2859, column: 63, scope: !18804)
!18815 = !DILocalVariable(name: "bank_tx", arg: 5, scope: !18804, file: !3, line: 2860, type: !37)
!18816 = !DILocation(line: 2860, column: 12, scope: !18804)
!18817 = !DILocalVariable(name: "slot_rx", arg: 6, scope: !18804, file: !3, line: 2860, type: !37)
!18818 = !DILocation(line: 2860, column: 25, scope: !18804)
!18819 = !DILocalVariable(name: "bank_rx", arg: 7, scope: !18804, file: !3, line: 2860, type: !37)
!18820 = !DILocation(line: 2860, column: 38, scope: !18804)
!18821 = !DILocalVariable(name: "flow_tx", scope: !18804, file: !3, line: 2862, type: !37)
!18822 = !DILocation(line: 2862, column: 6, scope: !18804)
!18823 = !DILocalVariable(name: "flow_rx", scope: !18804, file: !3, line: 2862, type: !37)
!18824 = !DILocation(line: 2862, column: 19, scope: !18804)
!18825 = !DILocalVariable(name: "routing", scope: !18804, file: !3, line: 2862, type: !37)
!18826 = !DILocation(line: 2862, column: 32, scope: !18804)
!18827 = !DILocalVariable(name: "oslot_tx", scope: !18804, file: !3, line: 2863, type: !37)
!18828 = !DILocation(line: 2863, column: 6, scope: !18804)
!18829 = !DILocalVariable(name: "oslot_rx", scope: !18804, file: !3, line: 2863, type: !37)
!18830 = !DILocation(line: 2863, column: 16, scope: !18804)
!18831 = !DILocalVariable(name: "conf", scope: !18804, file: !3, line: 2864, type: !37)
!18832 = !DILocation(line: 2864, column: 6, scope: !18804)
!18833 = !DILocation(line: 2866, column: 6, scope: !18834)
!18834 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 2866, column: 6)
!18835 = !DILocation(line: 2866, column: 9, scope: !18834)
!18836 = !DILocation(line: 2866, column: 13, scope: !18834)
!18837 = !DILocation(line: 2866, column: 16, scope: !18834)
!18838 = !DILocation(line: 2866, column: 19, scope: !18834)
!18839 = !DILocation(line: 2866, column: 6, scope: !18804)
!18840 = !DILocation(line: 2867, column: 3, scope: !18834)
!18841 = !DILocation(line: 2868, column: 13, scope: !18804)
!18842 = !DILocation(line: 2868, column: 17, scope: !18804)
!18843 = !DILocation(line: 2868, column: 22, scope: !18804)
!18844 = !DILocation(line: 2868, column: 26, scope: !18804)
!18845 = !DILocation(line: 2868, column: 11, scope: !18804)
!18846 = !DILocation(line: 2869, column: 13, scope: !18804)
!18847 = !DILocation(line: 2869, column: 17, scope: !18804)
!18848 = !DILocation(line: 2869, column: 22, scope: !18804)
!18849 = !DILocation(line: 2869, column: 26, scope: !18804)
!18850 = !DILocation(line: 2869, column: 11, scope: !18804)
!18851 = !DILocation(line: 2870, column: 9, scope: !18804)
!18852 = !DILocation(line: 2870, column: 13, scope: !18804)
!18853 = !DILocation(line: 2870, column: 18, scope: !18804)
!18854 = !DILocation(line: 2870, column: 22, scope: !18804)
!18855 = !DILocation(line: 2870, column: 7, scope: !18804)
!18856 = !DILocation(line: 2872, column: 6, scope: !18857)
!18857 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 2872, column: 6)
!18858 = !DILocation(line: 2872, column: 12, scope: !18857)
!18859 = !DILocation(line: 2872, column: 6, scope: !18804)
!18860 = !DILocation(line: 2876, column: 20, scope: !18857)
!18861 = !DILocation(line: 2876, column: 24, scope: !18857)
!18862 = !DILocation(line: 2876, column: 28, scope: !18857)
!18863 = !DILocation(line: 2876, column: 32, scope: !18857)
!18864 = !DILocation(line: 2876, column: 42, scope: !18857)
!18865 = !DILocation(line: 2876, column: 52, scope: !18857)
!18866 = !DILocation(line: 2877, column: 10, scope: !18857)
!18867 = !DILocation(line: 2877, column: 19, scope: !18857)
!18868 = !DILocation(line: 2877, column: 29, scope: !18857)
!18869 = !DILocation(line: 2877, column: 38, scope: !18857)
!18870 = !DILocation(line: 2873, column: 3, scope: !18857)
!18871 = !DILocation(line: 2879, column: 6, scope: !18872)
!18872 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 2879, column: 6)
!18873 = !DILocation(line: 2879, column: 15, scope: !18872)
!18874 = !DILocation(line: 2879, column: 20, scope: !18872)
!18875 = !DILocation(line: 2879, column: 23, scope: !18872)
!18876 = !DILocation(line: 2879, column: 34, scope: !18872)
!18877 = !DILocation(line: 2879, column: 31, scope: !18872)
!18878 = !DILocation(line: 2879, column: 6, scope: !18804)
!18879 = !DILocation(line: 2881, column: 7, scope: !18880)
!18880 = distinct !DILexicalBlock(scope: !18881, file: !3, line: 2881, column: 7)
!18881 = distinct !DILexicalBlock(scope: !18872, file: !3, line: 2879, column: 44)
!18882 = !DILocation(line: 2881, column: 13, scope: !18880)
!18883 = !DILocation(line: 2881, column: 7, scope: !18881)
!18884 = !DILocation(line: 2883, column: 21, scope: !18880)
!18885 = !DILocation(line: 2882, column: 4, scope: !18880)
!18886 = !DILocation(line: 2884, column: 7, scope: !18887)
!18887 = distinct !DILexicalBlock(scope: !18881, file: !3, line: 2884, column: 7)
!18888 = !DILocation(line: 2884, column: 11, scope: !18887)
!18889 = !DILocation(line: 2884, column: 22, scope: !18887)
!18890 = !DILocation(line: 2884, column: 31, scope: !18887)
!18891 = !DILocation(line: 2884, column: 40, scope: !18887)
!18892 = !DILocation(line: 2884, column: 37, scope: !18887)
!18893 = !DILocation(line: 2884, column: 7, scope: !18881)
!18894 = !DILocation(line: 2885, column: 4, scope: !18895)
!18895 = distinct !DILexicalBlock(scope: !18887, file: !3, line: 2884, column: 44)
!18896 = !DILocation(line: 2886, column: 4, scope: !18895)
!18897 = !DILocation(line: 2887, column: 8, scope: !18898)
!18898 = distinct !DILexicalBlock(scope: !18895, file: !3, line: 2887, column: 8)
!18899 = !DILocation(line: 2887, column: 12, scope: !18898)
!18900 = !DILocation(line: 2887, column: 18, scope: !18898)
!18901 = !DILocation(line: 2887, column: 8, scope: !18895)
!18902 = !DILocation(line: 2888, column: 5, scope: !18898)
!18903 = !DILocation(line: 2889, column: 4, scope: !18895)
!18904 = !DILocation(line: 2889, column: 8, scope: !18895)
!18905 = !DILocation(line: 2889, column: 19, scope: !18895)
!18906 = !DILocation(line: 2889, column: 28, scope: !18895)
!18907 = !DILocation(line: 2889, column: 34, scope: !18895)
!18908 = !DILocation(line: 2890, column: 3, scope: !18895)
!18909 = !DILocation(line: 2891, column: 8, scope: !18910)
!18910 = distinct !DILexicalBlock(scope: !18911, file: !3, line: 2891, column: 8)
!18911 = distinct !DILexicalBlock(scope: !18887, file: !3, line: 2890, column: 10)
!18912 = !DILocation(line: 2891, column: 14, scope: !18910)
!18913 = !DILocation(line: 2891, column: 8, scope: !18911)
!18914 = !DILocation(line: 2895, column: 22, scope: !18910)
!18915 = !DILocation(line: 2895, column: 26, scope: !18910)
!18916 = !DILocation(line: 2895, column: 37, scope: !18910)
!18917 = !DILocation(line: 2895, column: 46, scope: !18910)
!18918 = !DILocation(line: 2892, column: 5, scope: !18910)
!18919 = !DILocation(line: 2897, column: 2, scope: !18881)
!18920 = !DILocation(line: 2899, column: 6, scope: !18921)
!18921 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 2899, column: 6)
!18922 = !DILocation(line: 2899, column: 15, scope: !18921)
!18923 = !DILocation(line: 2899, column: 20, scope: !18921)
!18924 = !DILocation(line: 2899, column: 23, scope: !18921)
!18925 = !DILocation(line: 2899, column: 34, scope: !18921)
!18926 = !DILocation(line: 2899, column: 31, scope: !18921)
!18927 = !DILocation(line: 2899, column: 6, scope: !18804)
!18928 = !DILocation(line: 2901, column: 7, scope: !18929)
!18929 = distinct !DILexicalBlock(scope: !18930, file: !3, line: 2901, column: 7)
!18930 = distinct !DILexicalBlock(scope: !18921, file: !3, line: 2899, column: 44)
!18931 = !DILocation(line: 2901, column: 13, scope: !18929)
!18932 = !DILocation(line: 2901, column: 7, scope: !18930)
!18933 = !DILocation(line: 2904, column: 21, scope: !18929)
!18934 = !DILocation(line: 2902, column: 4, scope: !18929)
!18935 = !DILocation(line: 2905, column: 7, scope: !18936)
!18936 = distinct !DILexicalBlock(scope: !18930, file: !3, line: 2905, column: 7)
!18937 = !DILocation(line: 2905, column: 11, scope: !18936)
!18938 = !DILocation(line: 2905, column: 23, scope: !18936)
!18939 = !DILocation(line: 2905, column: 32, scope: !18936)
!18940 = !DILocation(line: 2905, column: 38, scope: !18936)
!18941 = !DILocation(line: 2905, column: 46, scope: !18936)
!18942 = !DILocation(line: 2905, column: 43, scope: !18936)
!18943 = !DILocation(line: 2905, column: 7, scope: !18930)
!18944 = !DILocation(line: 2906, column: 4, scope: !18945)
!18945 = distinct !DILexicalBlock(scope: !18936, file: !3, line: 2905, column: 50)
!18946 = !DILocation(line: 2907, column: 4, scope: !18945)
!18947 = !DILocation(line: 2908, column: 4, scope: !18945)
!18948 = !DILocation(line: 2908, column: 8, scope: !18945)
!18949 = !DILocation(line: 2908, column: 20, scope: !18945)
!18950 = !DILocation(line: 2908, column: 29, scope: !18945)
!18951 = !DILocation(line: 2908, column: 35, scope: !18945)
!18952 = !DILocation(line: 2908, column: 40, scope: !18945)
!18953 = !DILocation(line: 2909, column: 3, scope: !18945)
!18954 = !DILocation(line: 2910, column: 8, scope: !18955)
!18955 = distinct !DILexicalBlock(scope: !18956, file: !3, line: 2910, column: 8)
!18956 = distinct !DILexicalBlock(scope: !18936, file: !3, line: 2909, column: 10)
!18957 = !DILocation(line: 2910, column: 14, scope: !18955)
!18958 = !DILocation(line: 2910, column: 8, scope: !18956)
!18959 = !DILocation(line: 2915, column: 12, scope: !18955)
!18960 = !DILocation(line: 2915, column: 16, scope: !18955)
!18961 = !DILocation(line: 2915, column: 28, scope: !18955)
!18962 = !DILocation(line: 2915, column: 37, scope: !18955)
!18963 = !DILocation(line: 2915, column: 43, scope: !18955)
!18964 = !DILocation(line: 2911, column: 5, scope: !18955)
!18965 = !DILocation(line: 2917, column: 2, scope: !18930)
!18966 = !DILocation(line: 2919, column: 6, scope: !18967)
!18967 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 2919, column: 6)
!18968 = !DILocation(line: 2919, column: 14, scope: !18967)
!18969 = !DILocation(line: 2919, column: 6, scope: !18804)
!18970 = !DILocation(line: 2920, column: 11, scope: !18971)
!18971 = distinct !DILexicalBlock(scope: !18967, file: !3, line: 2919, column: 19)
!18972 = !DILocation(line: 2922, column: 3, scope: !18971)
!18973 = !DILocation(line: 2922, column: 7, scope: !18971)
!18974 = !DILocation(line: 2922, column: 12, scope: !18971)
!18975 = !DILocation(line: 2922, column: 16, scope: !18971)
!18976 = !DILocation(line: 2922, column: 24, scope: !18971)
!18977 = !DILocation(line: 2923, column: 3, scope: !18971)
!18978 = !DILocation(line: 2923, column: 7, scope: !18971)
!18979 = !DILocation(line: 2923, column: 12, scope: !18971)
!18980 = !DILocation(line: 2923, column: 16, scope: !18971)
!18981 = !DILocation(line: 2923, column: 24, scope: !18971)
!18982 = !DILocation(line: 2924, column: 2, scope: !18971)
!18983 = !DILocation(line: 2926, column: 7, scope: !18984)
!18984 = distinct !DILexicalBlock(scope: !18985, file: !3, line: 2926, column: 7)
!18985 = distinct !DILexicalBlock(scope: !18967, file: !3, line: 2924, column: 9)
!18986 = !DILocation(line: 2926, column: 11, scope: !18984)
!18987 = !DILocation(line: 2926, column: 16, scope: !18984)
!18988 = !DILocation(line: 2926, column: 20, scope: !18984)
!18989 = !DILocation(line: 2926, column: 7, scope: !18985)
!18990 = !DILocation(line: 2927, column: 12, scope: !18984)
!18991 = !DILocation(line: 2927, column: 4, scope: !18984)
!18992 = !DILocation(line: 2929, column: 12, scope: !18984)
!18993 = !DILocation(line: 2931, column: 13, scope: !18985)
!18994 = !DILocation(line: 2931, column: 11, scope: !18985)
!18995 = !DILocation(line: 2932, column: 7, scope: !18996)
!18996 = distinct !DILexicalBlock(scope: !18985, file: !3, line: 2932, column: 7)
!18997 = !DILocation(line: 2932, column: 12, scope: !18996)
!18998 = !DILocation(line: 2932, column: 17, scope: !18996)
!18999 = !DILocation(line: 2932, column: 20, scope: !18996)
!19000 = !DILocation(line: 2932, column: 28, scope: !18996)
!19001 = !DILocation(line: 2932, column: 7, scope: !18985)
!19002 = !DILocation(line: 2933, column: 12, scope: !18996)
!19003 = !DILocation(line: 2933, column: 4, scope: !18996)
!19004 = !DILocation(line: 2934, column: 7, scope: !19005)
!19005 = distinct !DILexicalBlock(scope: !18985, file: !3, line: 2934, column: 7)
!19006 = !DILocation(line: 2934, column: 13, scope: !19005)
!19007 = !DILocation(line: 2934, column: 7, scope: !18985)
!19008 = !DILocation(line: 2937, column: 21, scope: !19005)
!19009 = !DILocation(line: 2937, column: 25, scope: !19005)
!19010 = !DILocation(line: 2937, column: 34, scope: !19005)
!19011 = !DILocation(line: 2938, column: 11, scope: !19005)
!19012 = !DILocation(line: 2938, column: 20, scope: !19005)
!19013 = !DILocation(line: 2938, column: 29, scope: !19005)
!19014 = !DILocation(line: 2935, column: 4, scope: !19005)
!19015 = !DILocation(line: 2939, column: 3, scope: !18985)
!19016 = !DILocation(line: 2940, column: 3, scope: !18985)
!19017 = !DILocation(line: 2941, column: 7, scope: !19018)
!19018 = distinct !DILexicalBlock(scope: !18985, file: !3, line: 2941, column: 7)
!19019 = !DILocation(line: 2941, column: 11, scope: !19018)
!19020 = !DILocation(line: 2941, column: 17, scope: !19018)
!19021 = !DILocation(line: 2941, column: 7, scope: !18985)
!19022 = !DILocation(line: 2942, column: 4, scope: !19018)
!19023 = !DILocation(line: 2944, column: 34, scope: !18985)
!19024 = !DILocation(line: 2944, column: 3, scope: !18985)
!19025 = !DILocation(line: 2944, column: 7, scope: !18985)
!19026 = !DILocation(line: 2944, column: 18, scope: !18985)
!19027 = !DILocation(line: 2944, column: 26, scope: !18985)
!19028 = !DILocation(line: 2944, column: 32, scope: !18985)
!19029 = !DILocation(line: 2945, column: 26, scope: !18985)
!19030 = !DILocation(line: 2945, column: 3, scope: !18985)
!19031 = !DILocation(line: 2945, column: 7, scope: !18985)
!19032 = !DILocation(line: 2945, column: 12, scope: !18985)
!19033 = !DILocation(line: 2945, column: 16, scope: !18985)
!19034 = !DILocation(line: 2945, column: 24, scope: !18985)
!19035 = !DILocation(line: 2946, column: 26, scope: !18985)
!19036 = !DILocation(line: 2946, column: 3, scope: !18985)
!19037 = !DILocation(line: 2946, column: 7, scope: !18985)
!19038 = !DILocation(line: 2946, column: 12, scope: !18985)
!19039 = !DILocation(line: 2946, column: 16, scope: !18985)
!19040 = !DILocation(line: 2946, column: 24, scope: !18985)
!19041 = !DILocation(line: 2948, column: 6, scope: !19042)
!19042 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 2948, column: 6)
!19043 = !DILocation(line: 2948, column: 14, scope: !19042)
!19044 = !DILocation(line: 2948, column: 6, scope: !18804)
!19045 = !DILocation(line: 2950, column: 11, scope: !19046)
!19046 = distinct !DILexicalBlock(scope: !19042, file: !3, line: 2948, column: 19)
!19047 = !DILocation(line: 2951, column: 3, scope: !19046)
!19048 = !DILocation(line: 2951, column: 7, scope: !19046)
!19049 = !DILocation(line: 2951, column: 12, scope: !19046)
!19050 = !DILocation(line: 2951, column: 16, scope: !19046)
!19051 = !DILocation(line: 2951, column: 24, scope: !19046)
!19052 = !DILocation(line: 2952, column: 3, scope: !19046)
!19053 = !DILocation(line: 2952, column: 7, scope: !19046)
!19054 = !DILocation(line: 2952, column: 12, scope: !19046)
!19055 = !DILocation(line: 2952, column: 16, scope: !19046)
!19056 = !DILocation(line: 2952, column: 24, scope: !19046)
!19057 = !DILocation(line: 2953, column: 2, scope: !19046)
!19058 = !DILocation(line: 2955, column: 7, scope: !19059)
!19059 = distinct !DILexicalBlock(scope: !19060, file: !3, line: 2955, column: 7)
!19060 = distinct !DILexicalBlock(scope: !19042, file: !3, line: 2953, column: 9)
!19061 = !DILocation(line: 2955, column: 11, scope: !19059)
!19062 = !DILocation(line: 2955, column: 16, scope: !19059)
!19063 = !DILocation(line: 2955, column: 20, scope: !19059)
!19064 = !DILocation(line: 2955, column: 7, scope: !19060)
!19065 = !DILocation(line: 2956, column: 12, scope: !19059)
!19066 = !DILocation(line: 2956, column: 4, scope: !19059)
!19067 = !DILocation(line: 2958, column: 12, scope: !19059)
!19068 = !DILocation(line: 2960, column: 13, scope: !19060)
!19069 = !DILocation(line: 2960, column: 11, scope: !19060)
!19070 = !DILocation(line: 2961, column: 7, scope: !19071)
!19071 = distinct !DILexicalBlock(scope: !19060, file: !3, line: 2961, column: 7)
!19072 = !DILocation(line: 2961, column: 12, scope: !19071)
!19073 = !DILocation(line: 2961, column: 17, scope: !19071)
!19074 = !DILocation(line: 2961, column: 20, scope: !19071)
!19075 = !DILocation(line: 2961, column: 28, scope: !19071)
!19076 = !DILocation(line: 2961, column: 7, scope: !19060)
!19077 = !DILocation(line: 2962, column: 12, scope: !19071)
!19078 = !DILocation(line: 2962, column: 4, scope: !19071)
!19079 = !DILocation(line: 2963, column: 7, scope: !19080)
!19080 = distinct !DILexicalBlock(scope: !19060, file: !3, line: 2963, column: 7)
!19081 = !DILocation(line: 2963, column: 13, scope: !19080)
!19082 = !DILocation(line: 2963, column: 7, scope: !19060)
!19083 = !DILocation(line: 2966, column: 21, scope: !19080)
!19084 = !DILocation(line: 2966, column: 25, scope: !19080)
!19085 = !DILocation(line: 2966, column: 34, scope: !19080)
!19086 = !DILocation(line: 2967, column: 11, scope: !19080)
!19087 = !DILocation(line: 2967, column: 20, scope: !19080)
!19088 = !DILocation(line: 2967, column: 29, scope: !19080)
!19089 = !DILocation(line: 2964, column: 4, scope: !19080)
!19090 = !DILocation(line: 2968, column: 3, scope: !19060)
!19091 = !DILocation(line: 2969, column: 3, scope: !19060)
!19092 = !DILocation(line: 2970, column: 40, scope: !19060)
!19093 = !DILocation(line: 2970, column: 3, scope: !19060)
!19094 = !DILocation(line: 2970, column: 7, scope: !19060)
!19095 = !DILocation(line: 2970, column: 19, scope: !19060)
!19096 = !DILocation(line: 2970, column: 27, scope: !19060)
!19097 = !DILocation(line: 2970, column: 33, scope: !19060)
!19098 = !DILocation(line: 2970, column: 38, scope: !19060)
!19099 = !DILocation(line: 2971, column: 26, scope: !19060)
!19100 = !DILocation(line: 2971, column: 3, scope: !19060)
!19101 = !DILocation(line: 2971, column: 7, scope: !19060)
!19102 = !DILocation(line: 2971, column: 12, scope: !19060)
!19103 = !DILocation(line: 2971, column: 16, scope: !19060)
!19104 = !DILocation(line: 2971, column: 24, scope: !19060)
!19105 = !DILocation(line: 2972, column: 26, scope: !19060)
!19106 = !DILocation(line: 2972, column: 3, scope: !19060)
!19107 = !DILocation(line: 2972, column: 7, scope: !19060)
!19108 = !DILocation(line: 2972, column: 12, scope: !19060)
!19109 = !DILocation(line: 2972, column: 16, scope: !19060)
!19110 = !DILocation(line: 2972, column: 24, scope: !19060)
!19111 = !DILocation(line: 2975, column: 10, scope: !18804)
!19112 = !DILocation(line: 2975, column: 2, scope: !18804)
!19113 = !DILocation(line: 2978, column: 3, scope: !19114)
!19114 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 2975, column: 20)
!19115 = !DILocation(line: 2979, column: 3, scope: !19114)
!19116 = !DILocation(line: 2980, column: 3, scope: !19114)
!19117 = !DILocation(line: 2981, column: 3, scope: !19114)
!19118 = !DILocation(line: 2982, column: 3, scope: !19114)
!19119 = !DILocation(line: 2983, column: 3, scope: !19114)
!19120 = !DILocation(line: 2984, column: 3, scope: !19114)
!19121 = !DILocation(line: 2986, column: 3, scope: !19114)
!19122 = !DILocation(line: 2987, column: 3, scope: !19114)
!19123 = !DILocation(line: 2988, column: 3, scope: !19114)
!19124 = !DILocation(line: 2989, column: 3, scope: !19114)
!19125 = !DILocation(line: 2990, column: 3, scope: !19114)
!19126 = !DILocation(line: 2991, column: 3, scope: !19114)
!19127 = !DILocation(line: 2992, column: 3, scope: !19114)
!19128 = !DILocation(line: 2993, column: 7, scope: !19129)
!19129 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 2993, column: 7)
!19130 = !DILocation(line: 2993, column: 11, scope: !19129)
!19131 = !DILocation(line: 2993, column: 16, scope: !19129)
!19132 = !DILocation(line: 2993, column: 20, scope: !19129)
!19133 = !DILocation(line: 2993, column: 24, scope: !19129)
!19134 = !DILocation(line: 2993, column: 27, scope: !19129)
!19135 = !DILocation(line: 2993, column: 31, scope: !19129)
!19136 = !DILocation(line: 2993, column: 37, scope: !19129)
!19137 = !DILocation(line: 2993, column: 7, scope: !19114)
!19138 = !DILocation(line: 2995, column: 7, scope: !19139)
!19139 = distinct !DILexicalBlock(scope: !19129, file: !3, line: 2993, column: 53)
!19140 = !DILocation(line: 2995, column: 10, scope: !19139)
!19141 = !DILocation(line: 2995, column: 17, scope: !19139)
!19142 = !DILocation(line: 2995, column: 5, scope: !19139)
!19143 = !DILocation(line: 2994, column: 4, scope: !19139)
!19144 = !DILocation(line: 2994, column: 8, scope: !19139)
!19145 = !DILocation(line: 2994, column: 11, scope: !19139)
!19146 = !DILocation(line: 2994, column: 22, scope: !19139)
!19147 = !DILocation(line: 2994, column: 26, scope: !19139)
!19148 = !DILocation(line: 2994, column: 31, scope: !19139)
!19149 = !DILocation(line: 2994, column: 35, scope: !19139)
!19150 = !DILocation(line: 2994, column: 41, scope: !19139)
!19151 = !DILocation(line: 2996, column: 4, scope: !19139)
!19152 = !DILocation(line: 2998, column: 4, scope: !19153)
!19153 = distinct !DILexicalBlock(scope: !19154, file: !3, line: 2998, column: 4)
!19154 = distinct !DILexicalBlock(scope: !19155, file: !3, line: 2998, column: 4)
!19155 = distinct !DILexicalBlock(scope: !19156, file: !3, line: 2998, column: 4)
!19156 = distinct !DILexicalBlock(scope: !19139, file: !3, line: 2998, column: 4)
!19157 = !DILocation(line: 2999, column: 4, scope: !19139)
!19158 = !DILocation(line: 3001, column: 3, scope: !19139)
!19159 = !DILocation(line: 3002, column: 7, scope: !19160)
!19160 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 3002, column: 7)
!19161 = !DILocation(line: 3002, column: 11, scope: !19160)
!19162 = !DILocation(line: 3002, column: 16, scope: !19160)
!19163 = !DILocation(line: 3002, column: 20, scope: !19160)
!19164 = !DILocation(line: 3002, column: 7, scope: !19114)
!19165 = !DILocation(line: 3003, column: 34, scope: !19166)
!19166 = distinct !DILexicalBlock(scope: !19160, file: !3, line: 3002, column: 25)
!19167 = !DILocation(line: 3003, column: 38, scope: !19166)
!19168 = !DILocation(line: 3003, column: 43, scope: !19166)
!19169 = !DILocation(line: 3003, column: 47, scope: !19166)
!19170 = !DILocation(line: 3003, column: 52, scope: !19166)
!19171 = !DILocation(line: 3003, column: 4, scope: !19166)
!19172 = !DILocation(line: 3005, column: 10, scope: !19166)
!19173 = !DILocation(line: 3005, column: 14, scope: !19166)
!19174 = !DILocation(line: 3005, column: 19, scope: !19166)
!19175 = !DILocation(line: 3005, column: 23, scope: !19166)
!19176 = !DILocation(line: 3005, column: 28, scope: !19166)
!19177 = !DILocation(line: 3004, column: 4, scope: !19166)
!19178 = !DILocation(line: 3006, column: 3, scope: !19166)
!19179 = !DILocation(line: 3007, column: 3, scope: !19114)
!19180 = !DILocation(line: 3010, column: 33, scope: !19181)
!19181 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 3010, column: 7)
!19182 = !DILocation(line: 3010, column: 37, scope: !19181)
!19183 = !DILocation(line: 3010, column: 7, scope: !19181)
!19184 = !DILocation(line: 3010, column: 43, scope: !19181)
!19185 = !DILocation(line: 3011, column: 8, scope: !19181)
!19186 = !DILocation(line: 3011, column: 12, scope: !19181)
!19187 = !DILocation(line: 3011, column: 17, scope: !19181)
!19188 = !DILocation(line: 3011, column: 21, scope: !19181)
!19189 = !DILocation(line: 3011, column: 29, scope: !19181)
!19190 = !DILocation(line: 3011, column: 34, scope: !19181)
!19191 = !DILocation(line: 3012, column: 8, scope: !19181)
!19192 = !DILocation(line: 3012, column: 12, scope: !19181)
!19193 = !DILocation(line: 3012, column: 17, scope: !19181)
!19194 = !DILocation(line: 3012, column: 21, scope: !19181)
!19195 = !DILocation(line: 3012, column: 29, scope: !19181)
!19196 = !DILocation(line: 3010, column: 7, scope: !19114)
!19197 = !DILocation(line: 3016, column: 37, scope: !19198)
!19198 = distinct !DILexicalBlock(scope: !19181, file: !3, line: 3012, column: 35)
!19199 = !DILocation(line: 3017, column: 13, scope: !19198)
!19200 = !DILocation(line: 3017, column: 16, scope: !19198)
!19201 = !DILocation(line: 3017, column: 21, scope: !19198)
!19202 = !DILocation(line: 3017, column: 30, scope: !19198)
!19203 = !DILocation(line: 3017, column: 33, scope: !19198)
!19204 = !DILocation(line: 3017, column: 38, scope: !19198)
!19205 = !DILocation(line: 3017, column: 26, scope: !19198)
!19206 = !DILocation(line: 3017, column: 43, scope: !19198)
!19207 = !DILocation(line: 3014, column: 4, scope: !19198)
!19208 = !DILocation(line: 3018, column: 4, scope: !19198)
!19209 = !DILocation(line: 3020, column: 12, scope: !19198)
!19210 = !DILocation(line: 3020, column: 16, scope: !19198)
!19211 = !DILocation(line: 3020, column: 22, scope: !19198)
!19212 = !DILocation(line: 3020, column: 25, scope: !19198)
!19213 = !DILocation(line: 3020, column: 30, scope: !19198)
!19214 = !DILocation(line: 3021, column: 7, scope: !19198)
!19215 = !DILocation(line: 3021, column: 10, scope: !19198)
!19216 = !DILocation(line: 3021, column: 15, scope: !19198)
!19217 = !DILocation(line: 3020, column: 35, scope: !19198)
!19218 = !DILocation(line: 3021, column: 20, scope: !19198)
!19219 = !DILocation(line: 3020, column: 20, scope: !19198)
!19220 = !DILocation(line: 3020, column: 4, scope: !19198)
!19221 = !DILocation(line: 3024, column: 4, scope: !19198)
!19222 = !DILocation(line: 3025, column: 4, scope: !19198)
!19223 = !DILocation(line: 3026, column: 4, scope: !19198)
!19224 = !DILocation(line: 3027, column: 4, scope: !19198)
!19225 = !DILocation(line: 3029, column: 4, scope: !19198)
!19226 = !DILocation(line: 3032, column: 4, scope: !19198)
!19227 = !DILocation(line: 3033, column: 4, scope: !19198)
!19228 = !DILocation(line: 3034, column: 4, scope: !19198)
!19229 = !DILocation(line: 3035, column: 4, scope: !19198)
!19230 = !DILocation(line: 3036, column: 4, scope: !19198)
!19231 = !DILocation(line: 3037, column: 8, scope: !19232)
!19232 = distinct !DILexicalBlock(scope: !19198, file: !3, line: 3037, column: 8)
!19233 = !DILocation(line: 3037, column: 12, scope: !19232)
!19234 = !DILocation(line: 3037, column: 17, scope: !19232)
!19235 = !DILocation(line: 3037, column: 21, scope: !19232)
!19236 = !DILocation(line: 3037, column: 33, scope: !19232)
!19237 = !DILocation(line: 3037, column: 30, scope: !19232)
!19238 = !DILocation(line: 3037, column: 8, scope: !19198)
!19239 = !DILocation(line: 3038, column: 5, scope: !19240)
!19240 = distinct !DILexicalBlock(scope: !19232, file: !3, line: 3037, column: 43)
!19241 = !DILocation(line: 3039, column: 5, scope: !19240)
!19242 = !DILocation(line: 3040, column: 4, scope: !19240)
!19243 = !DILocation(line: 3041, column: 4, scope: !19198)
!19244 = !DILocation(line: 3043, column: 4, scope: !19198)
!19245 = !DILocation(line: 3047, column: 4, scope: !19198)
!19246 = !DILocation(line: 3048, column: 4, scope: !19198)
!19247 = !DILocation(line: 3049, column: 4, scope: !19198)
!19248 = !DILocation(line: 3050, column: 4, scope: !19198)
!19249 = !DILocation(line: 3052, column: 4, scope: !19198)
!19250 = !DILocation(line: 3055, column: 4, scope: !19198)
!19251 = !DILocation(line: 3056, column: 4, scope: !19198)
!19252 = !DILocation(line: 3057, column: 4, scope: !19198)
!19253 = !DILocation(line: 3058, column: 4, scope: !19198)
!19254 = !DILocation(line: 3059, column: 4, scope: !19198)
!19255 = !DILocation(line: 3060, column: 8, scope: !19256)
!19256 = distinct !DILexicalBlock(scope: !19198, file: !3, line: 3060, column: 8)
!19257 = !DILocation(line: 3060, column: 12, scope: !19256)
!19258 = !DILocation(line: 3060, column: 17, scope: !19256)
!19259 = !DILocation(line: 3060, column: 21, scope: !19256)
!19260 = !DILocation(line: 3060, column: 33, scope: !19256)
!19261 = !DILocation(line: 3060, column: 30, scope: !19256)
!19262 = !DILocation(line: 3060, column: 8, scope: !19198)
!19263 = !DILocation(line: 3061, column: 5, scope: !19264)
!19264 = distinct !DILexicalBlock(scope: !19256, file: !3, line: 3060, column: 43)
!19265 = !DILocation(line: 3062, column: 5, scope: !19264)
!19266 = !DILocation(line: 3063, column: 4, scope: !19264)
!19267 = !DILocation(line: 3065, column: 4, scope: !19198)
!19268 = !DILocation(line: 3066, column: 4, scope: !19198)
!19269 = !DILocation(line: 3068, column: 4, scope: !19198)
!19270 = !DILocation(line: 3069, column: 3, scope: !19198)
!19271 = !DILocation(line: 3071, column: 4, scope: !19272)
!19272 = distinct !DILexicalBlock(scope: !19181, file: !3, line: 3069, column: 10)
!19273 = !DILocation(line: 3072, column: 4, scope: !19272)
!19274 = !DILocation(line: 3073, column: 8, scope: !19275)
!19275 = distinct !DILexicalBlock(scope: !19272, file: !3, line: 3073, column: 8)
!19276 = !DILocation(line: 3073, column: 12, scope: !19275)
!19277 = !DILocation(line: 3073, column: 18, scope: !19275)
!19278 = !DILocation(line: 3073, column: 8, scope: !19272)
!19279 = !DILocation(line: 3074, column: 5, scope: !19275)
!19280 = !DILocation(line: 3078, column: 5, scope: !19275)
!19281 = !DILocation(line: 3080, column: 4, scope: !19272)
!19282 = !DILocation(line: 3081, column: 4, scope: !19272)
!19283 = !DILocation(line: 3082, column: 8, scope: !19284)
!19284 = distinct !DILexicalBlock(scope: !19272, file: !3, line: 3082, column: 8)
!19285 = !DILocation(line: 3082, column: 12, scope: !19284)
!19286 = !DILocation(line: 3082, column: 17, scope: !19284)
!19287 = !DILocation(line: 3082, column: 21, scope: !19284)
!19288 = !DILocation(line: 3082, column: 33, scope: !19284)
!19289 = !DILocation(line: 3082, column: 30, scope: !19284)
!19290 = !DILocation(line: 3082, column: 8, scope: !19272)
!19291 = !DILocation(line: 3083, column: 5, scope: !19292)
!19292 = distinct !DILexicalBlock(scope: !19284, file: !3, line: 3082, column: 43)
!19293 = !DILocation(line: 3084, column: 5, scope: !19292)
!19294 = !DILocation(line: 3085, column: 4, scope: !19292)
!19295 = !DILocation(line: 3087, column: 4, scope: !19272)
!19296 = !DILocation(line: 3089, column: 4, scope: !19272)
!19297 = !DILocation(line: 3090, column: 4, scope: !19272)
!19298 = !DILocation(line: 3091, column: 8, scope: !19299)
!19299 = distinct !DILexicalBlock(scope: !19272, file: !3, line: 3091, column: 8)
!19300 = !DILocation(line: 3091, column: 12, scope: !19299)
!19301 = !DILocation(line: 3091, column: 18, scope: !19299)
!19302 = !DILocation(line: 3091, column: 8, scope: !19272)
!19303 = !DILocation(line: 3092, column: 5, scope: !19299)
!19304 = !DILocation(line: 3096, column: 5, scope: !19299)
!19305 = !DILocation(line: 3098, column: 4, scope: !19272)
!19306 = !DILocation(line: 3099, column: 4, scope: !19272)
!19307 = !DILocation(line: 3100, column: 8, scope: !19308)
!19308 = distinct !DILexicalBlock(scope: !19272, file: !3, line: 3100, column: 8)
!19309 = !DILocation(line: 3100, column: 12, scope: !19308)
!19310 = !DILocation(line: 3100, column: 17, scope: !19308)
!19311 = !DILocation(line: 3100, column: 21, scope: !19308)
!19312 = !DILocation(line: 3100, column: 33, scope: !19308)
!19313 = !DILocation(line: 3100, column: 30, scope: !19308)
!19314 = !DILocation(line: 3100, column: 8, scope: !19272)
!19315 = !DILocation(line: 3101, column: 5, scope: !19316)
!19316 = distinct !DILexicalBlock(scope: !19308, file: !3, line: 3100, column: 43)
!19317 = !DILocation(line: 3102, column: 5, scope: !19316)
!19318 = !DILocation(line: 3103, column: 4, scope: !19316)
!19319 = !DILocation(line: 3105, column: 7, scope: !19320)
!19320 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 3105, column: 7)
!19321 = !DILocation(line: 3105, column: 11, scope: !19320)
!19322 = !DILocation(line: 3105, column: 17, scope: !19320)
!19323 = !DILocation(line: 3105, column: 7, scope: !19114)
!19324 = !DILocation(line: 3107, column: 7, scope: !19325)
!19325 = distinct !DILexicalBlock(scope: !19320, file: !3, line: 3105, column: 33)
!19326 = !DILocation(line: 3107, column: 10, scope: !19325)
!19327 = !DILocation(line: 3107, column: 17, scope: !19325)
!19328 = !DILocation(line: 3107, column: 5, scope: !19325)
!19329 = !DILocation(line: 3106, column: 4, scope: !19325)
!19330 = !DILocation(line: 3106, column: 8, scope: !19325)
!19331 = !DILocation(line: 3106, column: 11, scope: !19325)
!19332 = !DILocation(line: 3106, column: 22, scope: !19325)
!19333 = !DILocation(line: 3106, column: 26, scope: !19325)
!19334 = !DILocation(line: 3106, column: 31, scope: !19325)
!19335 = !DILocation(line: 3106, column: 35, scope: !19325)
!19336 = !DILocation(line: 3106, column: 41, scope: !19325)
!19337 = !DILocation(line: 3108, column: 4, scope: !19325)
!19338 = !DILocation(line: 3110, column: 4, scope: !19339)
!19339 = distinct !DILexicalBlock(scope: !19340, file: !3, line: 3110, column: 4)
!19340 = distinct !DILexicalBlock(scope: !19341, file: !3, line: 3110, column: 4)
!19341 = distinct !DILexicalBlock(scope: !19342, file: !3, line: 3110, column: 4)
!19342 = distinct !DILexicalBlock(scope: !19325, file: !3, line: 3110, column: 4)
!19343 = !DILocation(line: 3111, column: 4, scope: !19325)
!19344 = !DILocation(line: 3113, column: 3, scope: !19325)
!19345 = !DILocation(line: 3114, column: 7, scope: !19346)
!19346 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 3114, column: 7)
!19347 = !DILocation(line: 3114, column: 11, scope: !19346)
!19348 = !DILocation(line: 3114, column: 16, scope: !19346)
!19349 = !DILocation(line: 3114, column: 20, scope: !19346)
!19350 = !DILocation(line: 3114, column: 7, scope: !19114)
!19351 = !DILocation(line: 3116, column: 8, scope: !19346)
!19352 = !DILocation(line: 3116, column: 12, scope: !19346)
!19353 = !DILocation(line: 3116, column: 17, scope: !19346)
!19354 = !DILocation(line: 3116, column: 21, scope: !19346)
!19355 = !DILocation(line: 3116, column: 26, scope: !19346)
!19356 = !DILocation(line: 3115, column: 4, scope: !19346)
!19357 = !DILocation(line: 3117, column: 3, scope: !19114)
!19358 = !DILocation(line: 3124, column: 3, scope: !19114)
!19359 = !DILocation(line: 3125, column: 3, scope: !19114)
!19360 = !DILocation(line: 3126, column: 7, scope: !19361)
!19361 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 3126, column: 7)
!19362 = !DILocation(line: 3126, column: 11, scope: !19361)
!19363 = !DILocation(line: 3126, column: 17, scope: !19361)
!19364 = !DILocation(line: 3126, column: 32, scope: !19361)
!19365 = !DILocation(line: 3126, column: 35, scope: !19361)
!19366 = !DILocation(line: 3126, column: 39, scope: !19361)
!19367 = !DILocation(line: 3126, column: 44, scope: !19361)
!19368 = !DILocation(line: 3126, column: 48, scope: !19361)
!19369 = !DILocation(line: 3126, column: 7, scope: !19114)
!19370 = !DILocation(line: 3128, column: 4, scope: !19371)
!19371 = distinct !DILexicalBlock(scope: !19361, file: !3, line: 3126, column: 53)
!19372 = !DILocation(line: 3129, column: 4, scope: !19371)
!19373 = !DILocation(line: 3130, column: 3, scope: !19371)
!19374 = !DILocation(line: 3132, column: 4, scope: !19375)
!19375 = distinct !DILexicalBlock(scope: !19361, file: !3, line: 3130, column: 10)
!19376 = !DILocation(line: 3133, column: 4, scope: !19375)
!19377 = !DILocation(line: 3135, column: 3, scope: !19114)
!19378 = !DILocation(line: 3136, column: 3, scope: !19114)
!19379 = !DILocation(line: 3137, column: 3, scope: !19114)
!19380 = !DILocation(line: 3139, column: 3, scope: !19114)
!19381 = !DILocation(line: 3140, column: 3, scope: !19114)
!19382 = !DILocation(line: 3141, column: 3, scope: !19114)
!19383 = !DILocation(line: 3142, column: 7, scope: !19384)
!19384 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 3142, column: 7)
!19385 = !DILocation(line: 3142, column: 11, scope: !19384)
!19386 = !DILocation(line: 3142, column: 17, scope: !19384)
!19387 = !DILocation(line: 3142, column: 32, scope: !19384)
!19388 = !DILocation(line: 3142, column: 35, scope: !19384)
!19389 = !DILocation(line: 3142, column: 39, scope: !19384)
!19390 = !DILocation(line: 3142, column: 44, scope: !19384)
!19391 = !DILocation(line: 3142, column: 48, scope: !19384)
!19392 = !DILocation(line: 3142, column: 7, scope: !19114)
!19393 = !DILocation(line: 3143, column: 4, scope: !19384)
!19394 = !DILocation(line: 3145, column: 4, scope: !19384)
!19395 = !DILocation(line: 3146, column: 3, scope: !19114)
!19396 = !DILocation(line: 3147, column: 3, scope: !19114)
!19397 = !DILocation(line: 3148, column: 3, scope: !19114)
!19398 = !DILocation(line: 3149, column: 7, scope: !19399)
!19399 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 3149, column: 7)
!19400 = !DILocation(line: 3149, column: 11, scope: !19399)
!19401 = !DILocation(line: 3149, column: 16, scope: !19399)
!19402 = !DILocation(line: 3149, column: 20, scope: !19399)
!19403 = !DILocation(line: 3149, column: 7, scope: !19114)
!19404 = !DILocation(line: 3150, column: 32, scope: !19405)
!19405 = distinct !DILexicalBlock(scope: !19399, file: !3, line: 3149, column: 25)
!19406 = !DILocation(line: 3150, column: 36, scope: !19405)
!19407 = !DILocation(line: 3150, column: 41, scope: !19405)
!19408 = !DILocation(line: 3150, column: 45, scope: !19405)
!19409 = !DILocation(line: 3150, column: 50, scope: !19405)
!19410 = !DILocation(line: 3150, column: 4, scope: !19405)
!19411 = !DILocation(line: 3151, column: 8, scope: !19412)
!19412 = distinct !DILexicalBlock(scope: !19405, file: !3, line: 3151, column: 8)
!19413 = !DILocation(line: 3151, column: 12, scope: !19412)
!19414 = !DILocation(line: 3151, column: 18, scope: !19412)
!19415 = !DILocation(line: 3151, column: 8, scope: !19405)
!19416 = !DILocation(line: 3153, column: 8, scope: !19417)
!19417 = distinct !DILexicalBlock(scope: !19412, file: !3, line: 3151, column: 34)
!19418 = !DILocation(line: 3153, column: 11, scope: !19417)
!19419 = !DILocation(line: 3153, column: 18, scope: !19417)
!19420 = !DILocation(line: 3153, column: 6, scope: !19417)
!19421 = !DILocation(line: 3152, column: 5, scope: !19417)
!19422 = !DILocation(line: 3152, column: 9, scope: !19417)
!19423 = !DILocation(line: 3152, column: 12, scope: !19417)
!19424 = !DILocation(line: 3152, column: 23, scope: !19417)
!19425 = !DILocation(line: 3152, column: 27, scope: !19417)
!19426 = !DILocation(line: 3152, column: 32, scope: !19417)
!19427 = !DILocation(line: 3152, column: 36, scope: !19417)
!19428 = !DILocation(line: 3152, column: 42, scope: !19417)
!19429 = !DILocation(line: 3154, column: 5, scope: !19417)
!19430 = !DILocation(line: 3156, column: 5, scope: !19431)
!19431 = distinct !DILexicalBlock(scope: !19432, file: !3, line: 3156, column: 5)
!19432 = distinct !DILexicalBlock(scope: !19433, file: !3, line: 3156, column: 5)
!19433 = distinct !DILexicalBlock(scope: !19434, file: !3, line: 3156, column: 5)
!19434 = distinct !DILexicalBlock(scope: !19417, file: !3, line: 3156, column: 5)
!19435 = !DILocation(line: 3157, column: 5, scope: !19417)
!19436 = !DILocation(line: 3159, column: 4, scope: !19417)
!19437 = !DILocation(line: 3160, column: 3, scope: !19405)
!19438 = !DILocation(line: 3161, column: 3, scope: !19114)
!19439 = !DILocation(line: 3164, column: 20, scope: !19114)
!19440 = !DILocation(line: 3163, column: 3, scope: !19114)
!19441 = !DILocation(line: 3165, column: 3, scope: !19114)
!19442 = !DILocation(line: 3165, column: 7, scope: !19114)
!19443 = !DILocation(line: 3165, column: 12, scope: !19114)
!19444 = !DILocation(line: 3165, column: 16, scope: !19114)
!19445 = !DILocation(line: 3165, column: 25, scope: !19114)
!19446 = !DILocation(line: 3166, column: 3, scope: !19114)
!19447 = !DILocation(line: 3168, column: 26, scope: !18804)
!19448 = !DILocation(line: 3168, column: 2, scope: !18804)
!19449 = !DILocation(line: 3168, column: 6, scope: !18804)
!19450 = !DILocation(line: 3168, column: 11, scope: !18804)
!19451 = !DILocation(line: 3168, column: 15, scope: !18804)
!19452 = !DILocation(line: 3168, column: 24, scope: !18804)
!19453 = !DILocation(line: 3169, column: 2, scope: !18804)
!19454 = !DILocation(line: 3170, column: 1, scope: !18804)
!19455 = distinct !DISubprogram(name: "hfcmulti_dbusy_timer", scope: !3, file: !3, line: 2844, type: !2228, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19456 = !DILocalVariable(name: "t", arg: 1, scope: !19455, file: !3, line: 2844, type: !2230)
!19457 = !DILocation(line: 2844, column: 41, scope: !19455)
!19458 = !DILocation(line: 2846, column: 1, scope: !19455)
!19459 = distinct !DISubprogram(name: "test_channelmap", scope: !9521, file: !9521, line: 343, type: !19460, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19460 = !DISubroutineType(types: !19461)
!19461 = !{!37, !9152, !9454}
!19462 = !DILocalVariable(name: "nr", arg: 1, scope: !19459, file: !9521, line: 343, type: !9152)
!19463 = !DILocation(line: 343, column: 23, scope: !19459)
!19464 = !DILocalVariable(name: "map", arg: 2, scope: !19459, file: !9521, line: 343, type: !9454)
!19465 = !DILocation(line: 343, column: 35, scope: !19459)
!19466 = !DILocation(line: 345, column: 6, scope: !19467)
!19467 = distinct !DILexicalBlock(scope: !19459, file: !9521, line: 345, column: 6)
!19468 = !DILocation(line: 345, column: 9, scope: !19467)
!19469 = !DILocation(line: 345, column: 6, scope: !19459)
!19470 = !DILocation(line: 346, column: 10, scope: !19467)
!19471 = !DILocation(line: 346, column: 14, scope: !19467)
!19472 = !DILocation(line: 346, column: 17, scope: !19467)
!19473 = !DILocation(line: 346, column: 32, scope: !19467)
!19474 = !DILocation(line: 346, column: 35, scope: !19467)
!19475 = !DILocation(line: 346, column: 28, scope: !19467)
!19476 = !DILocation(line: 346, column: 23, scope: !19467)
!19477 = !DILocation(line: 346, column: 3, scope: !19467)
!19478 = !DILocation(line: 348, column: 3, scope: !19467)
!19479 = !DILocation(line: 349, column: 1, scope: !19459)
!19480 = distinct !DISubprogram(name: "deactivate_bchannel", scope: !3, file: !3, line: 3439, type: !19481, scopeLine: 3440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19481 = !DISubroutineType(types: !19482)
!19482 = !{null, !9617}
!19483 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !19484)
!19484 = distinct !DILocation(line: 3450, column: 2, scope: !19480)
!19485 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !19484)
!19486 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !19487)
!19487 = distinct !DILocation(line: 3444, column: 2, scope: !19488)
!19488 = distinct !DILexicalBlock(scope: !19489, file: !3, line: 3444, column: 2)
!19489 = distinct !DILexicalBlock(scope: !19490, file: !3, line: 3444, column: 2)
!19490 = distinct !DILexicalBlock(scope: !19491, file: !3, line: 3444, column: 2)
!19491 = distinct !DILexicalBlock(scope: !19492, file: !3, line: 3444, column: 2)
!19492 = distinct !DILexicalBlock(scope: !19480, file: !3, line: 3444, column: 2)
!19493 = !DILocalVariable(name: "bch", arg: 1, scope: !19480, file: !3, line: 3439, type: !9617)
!19494 = !DILocation(line: 3439, column: 38, scope: !19480)
!19495 = !DILocalVariable(name: "hc", scope: !19480, file: !3, line: 3441, type: !9128)
!19496 = !DILocation(line: 3441, column: 20, scope: !19480)
!19497 = !DILocation(line: 3441, column: 25, scope: !19480)
!19498 = !DILocation(line: 3441, column: 30, scope: !19480)
!19499 = !DILocalVariable(name: "flags", scope: !19480, file: !3, line: 3442, type: !9457)
!19500 = !DILocation(line: 3442, column: 11, scope: !19480)
!19501 = !DILocation(line: 3444, column: 2, scope: !19480)
!19502 = !DILocation(line: 3444, column: 2, scope: !19492)
!19503 = !DILocalVariable(name: "__dummy", scope: !19504, file: !3, line: 3444, type: !317)
!19504 = distinct !DILexicalBlock(scope: !19491, file: !3, line: 3444, column: 2)
!19505 = !DILocation(line: 3444, column: 2, scope: !19504)
!19506 = !DILocalVariable(name: "__dummy2", scope: !19504, file: !3, line: 3444, type: !9457)
!19507 = !DILocation(line: 3444, column: 2, scope: !19491)
!19508 = !DILocation(line: 3444, column: 2, scope: !19490)
!19509 = !DILocation(line: 3444, column: 2, scope: !19510)
!19510 = distinct !DILexicalBlock(scope: !19490, file: !3, line: 3444, column: 2)
!19511 = !DILocalVariable(name: "__dummy", scope: !19512, file: !3, line: 3444, type: !317)
!19512 = distinct !DILexicalBlock(scope: !19513, file: !3, line: 3444, column: 2)
!19513 = distinct !DILexicalBlock(scope: !19510, file: !3, line: 3444, column: 2)
!19514 = !DILocation(line: 3444, column: 2, scope: !19512)
!19515 = !DILocalVariable(name: "__dummy2", scope: !19512, file: !3, line: 3444, type: !9457)
!19516 = !DILocation(line: 3444, column: 2, scope: !19513)
!19517 = !DILocation(line: 3444, column: 2, scope: !19489)
!19518 = !{i32 -2138043948}
!19519 = !DILocation(line: 3444, column: 2, scope: !19488)
!19520 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !19487)
!19521 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !19487)
!19522 = !DILocation(line: 3445, column: 23, scope: !19480)
!19523 = !DILocation(line: 3445, column: 2, scope: !19480)
!19524 = !DILocation(line: 3446, column: 2, scope: !19480)
!19525 = !DILocation(line: 3446, column: 6, scope: !19480)
!19526 = !DILocation(line: 3446, column: 11, scope: !19480)
!19527 = !DILocation(line: 3446, column: 16, scope: !19480)
!19528 = !DILocation(line: 3446, column: 22, scope: !19480)
!19529 = !DILocation(line: 3446, column: 34, scope: !19480)
!19530 = !DILocation(line: 3447, column: 2, scope: !19480)
!19531 = !DILocation(line: 3447, column: 6, scope: !19480)
!19532 = !DILocation(line: 3447, column: 11, scope: !19480)
!19533 = !DILocation(line: 3447, column: 16, scope: !19480)
!19534 = !DILocation(line: 3447, column: 22, scope: !19480)
!19535 = !DILocation(line: 3447, column: 29, scope: !19480)
!19536 = !DILocation(line: 3448, column: 2, scope: !19480)
!19537 = !DILocation(line: 3448, column: 6, scope: !19480)
!19538 = !DILocation(line: 3448, column: 11, scope: !19480)
!19539 = !DILocation(line: 3448, column: 16, scope: !19480)
!19540 = !DILocation(line: 3448, column: 22, scope: !19480)
!19541 = !DILocation(line: 3448, column: 27, scope: !19480)
!19542 = !DILocation(line: 3449, column: 16, scope: !19480)
!19543 = !DILocation(line: 3449, column: 20, scope: !19480)
!19544 = !DILocation(line: 3449, column: 25, scope: !19480)
!19545 = !DILocation(line: 3449, column: 2, scope: !19480)
!19546 = !DILocation(line: 3450, column: 26, scope: !19480)
!19547 = !DILocation(line: 3450, column: 30, scope: !19480)
!19548 = !DILocation(line: 3450, column: 36, scope: !19480)
!19549 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !19484)
!19550 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !19484)
!19551 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !19484)
!19552 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !19484)
!19553 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !19484)
!19554 = !DILocation(line: 3451, column: 1, scope: !19480)
!19555 = distinct !DISubprogram(name: "channel_bctrl", scope: !3, file: !3, line: 3551, type: !19556, scopeLine: 3552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19556 = !DISubroutineType(types: !19557)
!19557 = !{!37, !9617, !17910}
!19558 = !DILocalVariable(name: "bch", arg: 1, scope: !19555, file: !3, line: 3551, type: !9617)
!19559 = !DILocation(line: 3551, column: 32, scope: !19555)
!19560 = !DILocalVariable(name: "cq", arg: 2, scope: !19555, file: !3, line: 3551, type: !17910)
!19561 = !DILocation(line: 3551, column: 60, scope: !19555)
!19562 = !DILocalVariable(name: "ret", scope: !19555, file: !3, line: 3553, type: !37)
!19563 = !DILocation(line: 3553, column: 8, scope: !19555)
!19564 = !DILocalVariable(name: "features", scope: !19555, file: !3, line: 3554, type: !9688)
!19565 = !DILocation(line: 3554, column: 23, scope: !19555)
!19566 = !DILocation(line: 3555, column: 40, scope: !19555)
!19567 = !DILocation(line: 3555, column: 44, scope: !19555)
!19568 = !DILocation(line: 3555, column: 27, scope: !19555)
!19569 = !DILocation(line: 3555, column: 3, scope: !19555)
!19570 = !DILocalVariable(name: "hc", scope: !19555, file: !3, line: 3556, type: !9128)
!19571 = !DILocation(line: 3556, column: 20, scope: !19555)
!19572 = !DILocation(line: 3556, column: 25, scope: !19555)
!19573 = !DILocation(line: 3556, column: 30, scope: !19555)
!19574 = !DILocalVariable(name: "slot_tx", scope: !19555, file: !3, line: 3557, type: !37)
!19575 = !DILocation(line: 3557, column: 8, scope: !19555)
!19576 = !DILocalVariable(name: "bank_tx", scope: !19555, file: !3, line: 3558, type: !37)
!19577 = !DILocation(line: 3558, column: 8, scope: !19555)
!19578 = !DILocalVariable(name: "slot_rx", scope: !19555, file: !3, line: 3559, type: !37)
!19579 = !DILocation(line: 3559, column: 8, scope: !19555)
!19580 = !DILocalVariable(name: "bank_rx", scope: !19555, file: !3, line: 3560, type: !37)
!19581 = !DILocation(line: 3560, column: 8, scope: !19555)
!19582 = !DILocalVariable(name: "num", scope: !19555, file: !3, line: 3561, type: !37)
!19583 = !DILocation(line: 3561, column: 8, scope: !19555)
!19584 = !DILocation(line: 3563, column: 10, scope: !19555)
!19585 = !DILocation(line: 3563, column: 14, scope: !19555)
!19586 = !DILocation(line: 3563, column: 2, scope: !19555)
!19587 = !DILocation(line: 3565, column: 29, scope: !19588)
!19588 = distinct !DILexicalBlock(scope: !19555, file: !3, line: 3563, column: 18)
!19589 = !DILocation(line: 3565, column: 34, scope: !19588)
!19590 = !DILocation(line: 3565, column: 9, scope: !19588)
!19591 = !DILocation(line: 3565, column: 7, scope: !19588)
!19592 = !DILocation(line: 3566, column: 3, scope: !19588)
!19593 = !DILocation(line: 3566, column: 7, scope: !19588)
!19594 = !DILocation(line: 3566, column: 10, scope: !19588)
!19595 = !DILocation(line: 3567, column: 3, scope: !19588)
!19596 = !DILocation(line: 3569, column: 29, scope: !19588)
!19597 = !DILocation(line: 3569, column: 34, scope: !19588)
!19598 = !DILocation(line: 3569, column: 9, scope: !19588)
!19599 = !DILocation(line: 3569, column: 7, scope: !19588)
!19600 = !DILocation(line: 3570, column: 34, scope: !19588)
!19601 = !DILocation(line: 3570, column: 38, scope: !19588)
!19602 = !DILocation(line: 3570, column: 33, scope: !19588)
!19603 = !DILocation(line: 3570, column: 32, scope: !19588)
!19604 = !DILocation(line: 3570, column: 3, scope: !19588)
!19605 = !DILocation(line: 3570, column: 7, scope: !19588)
!19606 = !DILocation(line: 3570, column: 12, scope: !19588)
!19607 = !DILocation(line: 3570, column: 17, scope: !19588)
!19608 = !DILocation(line: 3570, column: 23, scope: !19588)
!19609 = !DILocation(line: 3570, column: 30, scope: !19588)
!19610 = !DILocation(line: 3571, column: 8, scope: !19611)
!19611 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3571, column: 7)
!19612 = !DILocation(line: 3571, column: 12, scope: !19611)
!19613 = !DILocation(line: 3571, column: 17, scope: !19611)
!19614 = !DILocation(line: 3571, column: 22, scope: !19611)
!19615 = !DILocation(line: 3571, column: 28, scope: !19611)
!19616 = !DILocation(line: 3571, column: 7, scope: !19588)
!19617 = !DILocation(line: 3573, column: 4, scope: !19618)
!19618 = distinct !DILexicalBlock(scope: !19611, file: !3, line: 3571, column: 36)
!19619 = !DILocation(line: 3574, column: 4, scope: !19618)
!19620 = !DILocation(line: 3575, column: 4, scope: !19618)
!19621 = !DILocation(line: 3576, column: 4, scope: !19618)
!19622 = !DILocation(line: 3577, column: 3, scope: !19618)
!19623 = !DILocation(line: 3578, column: 7, scope: !19624)
!19624 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3578, column: 7)
!19625 = !DILocation(line: 3578, column: 13, scope: !19624)
!19626 = !DILocation(line: 3578, column: 7, scope: !19588)
!19627 = !DILocation(line: 3580, column: 21, scope: !19624)
!19628 = !DILocation(line: 3580, column: 26, scope: !19624)
!19629 = !DILocation(line: 3580, column: 30, scope: !19624)
!19630 = !DILocation(line: 3580, column: 34, scope: !19624)
!19631 = !DILocation(line: 3580, column: 39, scope: !19624)
!19632 = !DILocation(line: 3580, column: 44, scope: !19624)
!19633 = !DILocation(line: 3580, column: 50, scope: !19624)
!19634 = !DILocation(line: 3579, column: 4, scope: !19624)
!19635 = !DILocation(line: 3581, column: 3, scope: !19588)
!19636 = !DILocation(line: 3583, column: 29, scope: !19588)
!19637 = !DILocation(line: 3583, column: 34, scope: !19588)
!19638 = !DILocation(line: 3583, column: 9, scope: !19588)
!19639 = !DILocation(line: 3583, column: 7, scope: !19588)
!19640 = !DILocation(line: 3584, column: 17, scope: !19588)
!19641 = !DILocation(line: 3584, column: 22, scope: !19588)
!19642 = !DILocation(line: 3584, column: 3, scope: !19588)
!19643 = !DILocation(line: 3584, column: 7, scope: !19588)
!19644 = !DILocation(line: 3584, column: 15, scope: !19588)
!19645 = !DILocation(line: 3585, column: 10, scope: !19588)
!19646 = !DILocation(line: 3585, column: 14, scope: !19588)
!19647 = !DILocation(line: 3585, column: 3, scope: !19588)
!19648 = !DILocation(line: 3585, column: 28, scope: !19588)
!19649 = !DILocation(line: 3585, column: 32, scope: !19588)
!19650 = !DILocation(line: 3586, column: 3, scope: !19588)
!19651 = !DILocation(line: 3588, column: 7, scope: !19652)
!19652 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3588, column: 7)
!19653 = !DILocation(line: 3588, column: 13, scope: !19652)
!19654 = !DILocation(line: 3588, column: 7, scope: !19588)
!19655 = !DILocation(line: 3589, column: 4, scope: !19652)
!19656 = !DILocation(line: 3592, column: 22, scope: !19588)
!19657 = !DILocation(line: 3592, column: 26, scope: !19588)
!19658 = !DILocation(line: 3592, column: 3, scope: !19588)
!19659 = !DILocation(line: 3592, column: 13, scope: !19588)
!19660 = !DILocation(line: 3592, column: 20, scope: !19588)
!19661 = !DILocation(line: 3593, column: 32, scope: !19662)
!19662 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3593, column: 7)
!19663 = !DILocation(line: 3593, column: 36, scope: !19662)
!19664 = !DILocation(line: 3593, column: 7, scope: !19662)
!19665 = !DILocation(line: 3593, column: 7, scope: !19588)
!19666 = !DILocation(line: 3594, column: 4, scope: !19662)
!19667 = !DILocation(line: 3594, column: 14, scope: !19662)
!19668 = !DILocation(line: 3594, column: 23, scope: !19662)
!19669 = !DILocation(line: 3595, column: 32, scope: !19670)
!19670 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3595, column: 7)
!19671 = !DILocation(line: 3595, column: 36, scope: !19670)
!19672 = !DILocation(line: 3595, column: 7, scope: !19670)
!19673 = !DILocation(line: 3595, column: 7, scope: !19588)
!19674 = !DILocation(line: 3596, column: 4, scope: !19670)
!19675 = !DILocation(line: 3596, column: 14, scope: !19670)
!19676 = !DILocation(line: 3596, column: 23, scope: !19670)
!19677 = !DILocation(line: 3597, column: 3, scope: !19588)
!19678 = !DILocation(line: 3597, column: 13, scope: !19588)
!19679 = !DILocation(line: 3597, column: 23, scope: !19588)
!19680 = !DILocation(line: 3598, column: 33, scope: !19681)
!19681 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3598, column: 7)
!19682 = !DILocation(line: 3598, column: 37, scope: !19681)
!19683 = !DILocation(line: 3598, column: 7, scope: !19681)
!19684 = !DILocation(line: 3598, column: 7, scope: !19588)
!19685 = !DILocation(line: 3599, column: 4, scope: !19686)
!19686 = distinct !DILexicalBlock(scope: !19681, file: !3, line: 3598, column: 44)
!19687 = !DILocation(line: 3599, column: 14, scope: !19686)
!19688 = !DILocation(line: 3599, column: 28, scope: !19686)
!19689 = !DILocation(line: 3600, column: 3, scope: !19686)
!19690 = !DILocation(line: 3601, column: 23, scope: !19691)
!19691 = distinct !DILexicalBlock(scope: !19681, file: !3, line: 3600, column: 10)
!19692 = !DILocation(line: 3601, column: 27, scope: !19691)
!19693 = !DILocation(line: 3601, column: 4, scope: !19691)
!19694 = !DILocation(line: 3601, column: 14, scope: !19691)
!19695 = !DILocation(line: 3601, column: 21, scope: !19691)
!19696 = !DILocation(line: 3602, column: 26, scope: !19691)
!19697 = !DILocation(line: 3602, column: 30, scope: !19691)
!19698 = !DILocation(line: 3602, column: 4, scope: !19691)
!19699 = !DILocation(line: 3602, column: 14, scope: !19691)
!19700 = !DILocation(line: 3602, column: 24, scope: !19691)
!19701 = !DILocation(line: 3603, column: 4, scope: !19691)
!19702 = !DILocation(line: 3603, column: 14, scope: !19691)
!19703 = !DILocation(line: 3603, column: 24, scope: !19691)
!19704 = !DILocation(line: 3605, column: 3, scope: !19588)
!19705 = !DILocation(line: 3607, column: 13, scope: !19588)
!19706 = !DILocation(line: 3607, column: 17, scope: !19588)
!19707 = !DILocation(line: 3607, column: 20, scope: !19588)
!19708 = !DILocation(line: 3607, column: 11, scope: !19588)
!19709 = !DILocation(line: 3608, column: 13, scope: !19588)
!19710 = !DILocation(line: 3608, column: 17, scope: !19588)
!19711 = !DILocation(line: 3608, column: 20, scope: !19588)
!19712 = !DILocation(line: 3608, column: 11, scope: !19588)
!19713 = !DILocation(line: 3609, column: 13, scope: !19588)
!19714 = !DILocation(line: 3609, column: 17, scope: !19588)
!19715 = !DILocation(line: 3609, column: 20, scope: !19588)
!19716 = !DILocation(line: 3609, column: 11, scope: !19588)
!19717 = !DILocation(line: 3610, column: 13, scope: !19588)
!19718 = !DILocation(line: 3610, column: 17, scope: !19588)
!19719 = !DILocation(line: 3610, column: 20, scope: !19588)
!19720 = !DILocation(line: 3610, column: 11, scope: !19588)
!19721 = !DILocation(line: 3611, column: 7, scope: !19722)
!19722 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3611, column: 7)
!19723 = !DILocation(line: 3611, column: 13, scope: !19722)
!19724 = !DILocation(line: 3611, column: 7, scope: !19588)
!19725 = !DILocation(line: 3615, column: 21, scope: !19722)
!19726 = !DILocation(line: 3615, column: 30, scope: !19722)
!19727 = !DILocation(line: 3616, column: 11, scope: !19722)
!19728 = !DILocation(line: 3616, column: 20, scope: !19722)
!19729 = !DILocation(line: 3612, column: 4, scope: !19722)
!19730 = !DILocation(line: 3617, column: 7, scope: !19731)
!19731 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3617, column: 7)
!19732 = !DILocation(line: 3617, column: 17, scope: !19731)
!19733 = !DILocation(line: 3617, column: 21, scope: !19731)
!19734 = !DILocation(line: 3617, column: 15, scope: !19731)
!19735 = !DILocation(line: 3617, column: 27, scope: !19731)
!19736 = !DILocation(line: 3617, column: 30, scope: !19731)
!19737 = !DILocation(line: 3617, column: 38, scope: !19731)
!19738 = !DILocation(line: 3617, column: 43, scope: !19731)
!19739 = !DILocation(line: 3618, column: 7, scope: !19731)
!19740 = !DILocation(line: 3618, column: 17, scope: !19731)
!19741 = !DILocation(line: 3618, column: 21, scope: !19731)
!19742 = !DILocation(line: 3618, column: 15, scope: !19731)
!19743 = !DILocation(line: 3618, column: 27, scope: !19731)
!19744 = !DILocation(line: 3618, column: 30, scope: !19731)
!19745 = !DILocation(line: 3618, column: 38, scope: !19731)
!19746 = !DILocation(line: 3617, column: 7, scope: !19588)
!19747 = !DILocation(line: 3619, column: 17, scope: !19731)
!19748 = !DILocation(line: 3619, column: 21, scope: !19731)
!19749 = !DILocation(line: 3619, column: 26, scope: !19731)
!19750 = !DILocation(line: 3620, column: 10, scope: !19731)
!19751 = !DILocation(line: 3620, column: 19, scope: !19731)
!19752 = !DILocation(line: 3620, column: 28, scope: !19731)
!19753 = !DILocation(line: 3620, column: 37, scope: !19731)
!19754 = !DILocation(line: 3619, column: 4, scope: !19731)
!19755 = !DILocation(line: 3625, column: 21, scope: !19756)
!19756 = distinct !DILexicalBlock(scope: !19731, file: !3, line: 3621, column: 8)
!19757 = !DILocation(line: 3625, column: 30, scope: !19756)
!19758 = !DILocation(line: 3626, column: 11, scope: !19756)
!19759 = !DILocation(line: 3626, column: 20, scope: !19756)
!19760 = !DILocation(line: 3622, column: 4, scope: !19756)
!19761 = !DILocation(line: 3627, column: 8, scope: !19756)
!19762 = !DILocation(line: 3629, column: 3, scope: !19588)
!19763 = !DILocation(line: 3631, column: 7, scope: !19764)
!19764 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3631, column: 7)
!19765 = !DILocation(line: 3631, column: 13, scope: !19764)
!19766 = !DILocation(line: 3631, column: 7, scope: !19588)
!19767 = !DILocation(line: 3632, column: 4, scope: !19764)
!19768 = !DILocation(line: 3634, column: 16, scope: !19588)
!19769 = !DILocation(line: 3634, column: 20, scope: !19588)
!19770 = !DILocation(line: 3634, column: 25, scope: !19588)
!19771 = !DILocation(line: 3634, column: 3, scope: !19588)
!19772 = !DILocation(line: 3635, column: 3, scope: !19588)
!19773 = !DILocation(line: 3637, column: 9, scope: !19588)
!19774 = !DILocation(line: 3637, column: 13, scope: !19588)
!19775 = !DILocation(line: 3637, column: 16, scope: !19588)
!19776 = !DILocation(line: 3637, column: 7, scope: !19588)
!19777 = !DILocation(line: 3638, column: 7, scope: !19778)
!19778 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3638, column: 7)
!19779 = !DILocation(line: 3638, column: 13, scope: !19778)
!19780 = !DILocation(line: 3638, column: 7, scope: !19588)
!19781 = !DILocation(line: 3640, column: 21, scope: !19778)
!19782 = !DILocation(line: 3639, column: 4, scope: !19778)
!19783 = !DILocation(line: 3641, column: 7, scope: !19784)
!19784 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3641, column: 7)
!19785 = !DILocation(line: 3641, column: 11, scope: !19784)
!19786 = !DILocation(line: 3641, column: 7, scope: !19588)
!19787 = !DILocation(line: 3642, column: 18, scope: !19784)
!19788 = !DILocation(line: 3642, column: 22, scope: !19784)
!19789 = !DILocation(line: 3642, column: 27, scope: !19784)
!19790 = !DILocation(line: 3642, column: 33, scope: !19784)
!19791 = !DILocation(line: 3642, column: 4, scope: !19784)
!19792 = !DILocation(line: 3646, column: 21, scope: !19793)
!19793 = distinct !DILexicalBlock(scope: !19784, file: !3, line: 3643, column: 8)
!19794 = !DILocation(line: 3644, column: 4, scope: !19793)
!19795 = !DILocation(line: 3647, column: 8, scope: !19793)
!19796 = !DILocation(line: 3649, column: 3, scope: !19588)
!19797 = !DILocation(line: 3651, column: 7, scope: !19798)
!19798 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3651, column: 7)
!19799 = !DILocation(line: 3651, column: 13, scope: !19798)
!19800 = !DILocation(line: 3651, column: 7, scope: !19588)
!19801 = !DILocation(line: 3652, column: 4, scope: !19798)
!19802 = !DILocation(line: 3653, column: 17, scope: !19588)
!19803 = !DILocation(line: 3653, column: 21, scope: !19588)
!19804 = !DILocation(line: 3653, column: 26, scope: !19588)
!19805 = !DILocation(line: 3653, column: 3, scope: !19588)
!19806 = !DILocation(line: 3654, column: 3, scope: !19588)
!19807 = !DILocation(line: 3656, column: 7, scope: !19808)
!19808 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3656, column: 7)
!19809 = !DILocation(line: 3656, column: 13, scope: !19808)
!19810 = !DILocation(line: 3656, column: 7, scope: !19588)
!19811 = !DILocation(line: 3657, column: 4, scope: !19808)
!19812 = !DILocation(line: 3658, column: 33, scope: !19813)
!19813 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3658, column: 7)
!19814 = !DILocation(line: 3658, column: 37, scope: !19813)
!19815 = !DILocation(line: 3658, column: 7, scope: !19813)
!19816 = !DILocation(line: 3658, column: 7, scope: !19588)
!19817 = !DILocation(line: 3659, column: 19, scope: !19813)
!19818 = !DILocation(line: 3659, column: 23, scope: !19813)
!19819 = !DILocation(line: 3659, column: 28, scope: !19813)
!19820 = !DILocation(line: 3659, column: 34, scope: !19813)
!19821 = !DILocation(line: 3659, column: 38, scope: !19813)
!19822 = !DILocation(line: 3659, column: 4, scope: !19813)
!19823 = !DILocation(line: 3661, column: 8, scope: !19813)
!19824 = !DILocation(line: 3662, column: 3, scope: !19588)
!19825 = !DILocation(line: 3665, column: 7, scope: !19826)
!19826 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3665, column: 7)
!19827 = !DILocation(line: 3665, column: 13, scope: !19826)
!19828 = !DILocation(line: 3665, column: 7, scope: !19588)
!19829 = !DILocation(line: 3666, column: 4, scope: !19826)
!19830 = !DILocation(line: 3668, column: 33, scope: !19831)
!19831 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 3668, column: 7)
!19832 = !DILocation(line: 3668, column: 37, scope: !19831)
!19833 = !DILocation(line: 3668, column: 7, scope: !19831)
!19834 = !DILocation(line: 3668, column: 7, scope: !19588)
!19835 = !DILocation(line: 3669, column: 20, scope: !19831)
!19836 = !DILocation(line: 3669, column: 24, scope: !19831)
!19837 = !DILocation(line: 3669, column: 29, scope: !19831)
!19838 = !DILocation(line: 3669, column: 4, scope: !19831)
!19839 = !DILocation(line: 3671, column: 8, scope: !19831)
!19840 = !DILocation(line: 3672, column: 3, scope: !19588)
!19841 = !DILocation(line: 3674, column: 29, scope: !19588)
!19842 = !DILocation(line: 3674, column: 34, scope: !19588)
!19843 = !DILocation(line: 3674, column: 9, scope: !19588)
!19844 = !DILocation(line: 3674, column: 7, scope: !19588)
!19845 = !DILocation(line: 3675, column: 3, scope: !19588)
!19846 = !DILocation(line: 3677, column: 9, scope: !19555)
!19847 = !DILocation(line: 3677, column: 2, scope: !19555)
!19848 = distinct !DISubprogram(name: "hfcmulti_pcm", scope: !3, file: !3, line: 3178, type: !19849, scopeLine: 3180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19849 = !DISubroutineType(types: !19850)
!19850 = !{null, !9128, !37, !37, !37, !37, !37}
!19851 = !DILocalVariable(name: "hc", arg: 1, scope: !19848, file: !3, line: 3178, type: !9128)
!19852 = !DILocation(line: 3178, column: 32, scope: !19848)
!19853 = !DILocalVariable(name: "ch", arg: 2, scope: !19848, file: !3, line: 3178, type: !37)
!19854 = !DILocation(line: 3178, column: 40, scope: !19848)
!19855 = !DILocalVariable(name: "slot_tx", arg: 3, scope: !19848, file: !3, line: 3178, type: !37)
!19856 = !DILocation(line: 3178, column: 48, scope: !19848)
!19857 = !DILocalVariable(name: "bank_tx", arg: 4, scope: !19848, file: !3, line: 3178, type: !37)
!19858 = !DILocation(line: 3178, column: 61, scope: !19848)
!19859 = !DILocalVariable(name: "slot_rx", arg: 5, scope: !19848, file: !3, line: 3179, type: !37)
!19860 = !DILocation(line: 3179, column: 11, scope: !19848)
!19861 = !DILocalVariable(name: "bank_rx", arg: 6, scope: !19848, file: !3, line: 3179, type: !37)
!19862 = !DILocation(line: 3179, column: 24, scope: !19848)
!19863 = !DILocation(line: 3181, column: 6, scope: !19864)
!19864 = distinct !DILexicalBlock(scope: !19848, file: !3, line: 3181, column: 6)
!19865 = !DILocation(line: 3181, column: 14, scope: !19864)
!19866 = !DILocation(line: 3181, column: 18, scope: !19864)
!19867 = !DILocation(line: 3181, column: 21, scope: !19864)
!19868 = !DILocation(line: 3181, column: 29, scope: !19864)
!19869 = !DILocation(line: 3181, column: 33, scope: !19864)
!19870 = !DILocation(line: 3181, column: 36, scope: !19864)
!19871 = !DILocation(line: 3181, column: 44, scope: !19864)
!19872 = !DILocation(line: 3181, column: 48, scope: !19864)
!19873 = !DILocation(line: 3181, column: 51, scope: !19864)
!19874 = !DILocation(line: 3181, column: 59, scope: !19864)
!19875 = !DILocation(line: 3181, column: 6, scope: !19848)
!19876 = !DILocation(line: 3183, column: 17, scope: !19877)
!19877 = distinct !DILexicalBlock(scope: !19864, file: !3, line: 3181, column: 64)
!19878 = !DILocation(line: 3183, column: 21, scope: !19877)
!19879 = !DILocation(line: 3183, column: 25, scope: !19877)
!19880 = !DILocation(line: 3183, column: 29, scope: !19877)
!19881 = !DILocation(line: 3183, column: 34, scope: !19877)
!19882 = !DILocation(line: 3183, column: 38, scope: !19877)
!19883 = !DILocation(line: 3183, column: 3, scope: !19877)
!19884 = !DILocation(line: 3184, column: 3, scope: !19877)
!19885 = !DILocation(line: 3188, column: 16, scope: !19848)
!19886 = !DILocation(line: 3188, column: 20, scope: !19848)
!19887 = !DILocation(line: 3188, column: 24, scope: !19848)
!19888 = !DILocation(line: 3188, column: 28, scope: !19848)
!19889 = !DILocation(line: 3188, column: 33, scope: !19848)
!19890 = !DILocation(line: 3188, column: 37, scope: !19848)
!19891 = !DILocation(line: 3188, column: 47, scope: !19848)
!19892 = !DILocation(line: 3188, column: 56, scope: !19848)
!19893 = !DILocation(line: 3189, column: 9, scope: !19848)
!19894 = !DILocation(line: 3189, column: 18, scope: !19848)
!19895 = !DILocation(line: 3188, column: 2, scope: !19848)
!19896 = !DILocation(line: 3190, column: 1, scope: !19848)
!19897 = distinct !DISubprogram(name: "hfcmulti_conf", scope: !3, file: !3, line: 3197, type: !19898, scopeLine: 3198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19898 = !DISubroutineType(types: !19899)
!19899 = !{null, !9128, !37, !37}
!19900 = !DILocalVariable(name: "hc", arg: 1, scope: !19897, file: !3, line: 3197, type: !9128)
!19901 = !DILocation(line: 3197, column: 33, scope: !19897)
!19902 = !DILocalVariable(name: "ch", arg: 2, scope: !19897, file: !3, line: 3197, type: !37)
!19903 = !DILocation(line: 3197, column: 41, scope: !19897)
!19904 = !DILocalVariable(name: "num", arg: 3, scope: !19897, file: !3, line: 3197, type: !37)
!19905 = !DILocation(line: 3197, column: 49, scope: !19897)
!19906 = !DILocation(line: 3199, column: 6, scope: !19907)
!19907 = distinct !DILexicalBlock(scope: !19897, file: !3, line: 3199, column: 6)
!19908 = !DILocation(line: 3199, column: 10, scope: !19907)
!19909 = !DILocation(line: 3199, column: 15, scope: !19907)
!19910 = !DILocation(line: 3199, column: 18, scope: !19907)
!19911 = !DILocation(line: 3199, column: 22, scope: !19907)
!19912 = !DILocation(line: 3199, column: 6, scope: !19897)
!19913 = !DILocation(line: 3200, column: 23, scope: !19907)
!19914 = !DILocation(line: 3200, column: 3, scope: !19907)
!19915 = !DILocation(line: 3200, column: 7, scope: !19907)
!19916 = !DILocation(line: 3200, column: 12, scope: !19907)
!19917 = !DILocation(line: 3200, column: 16, scope: !19907)
!19918 = !DILocation(line: 3200, column: 21, scope: !19907)
!19919 = !DILocation(line: 3202, column: 3, scope: !19907)
!19920 = !DILocation(line: 3202, column: 7, scope: !19907)
!19921 = !DILocation(line: 3202, column: 12, scope: !19907)
!19922 = !DILocation(line: 3202, column: 16, scope: !19907)
!19923 = !DILocation(line: 3202, column: 21, scope: !19907)
!19924 = !DILocation(line: 3203, column: 16, scope: !19897)
!19925 = !DILocation(line: 3203, column: 20, scope: !19897)
!19926 = !DILocation(line: 3203, column: 24, scope: !19897)
!19927 = !DILocation(line: 3203, column: 28, scope: !19897)
!19928 = !DILocation(line: 3203, column: 33, scope: !19897)
!19929 = !DILocation(line: 3203, column: 37, scope: !19897)
!19930 = !DILocation(line: 3203, column: 47, scope: !19897)
!19931 = !DILocation(line: 3203, column: 51, scope: !19897)
!19932 = !DILocation(line: 3203, column: 56, scope: !19897)
!19933 = !DILocation(line: 3203, column: 60, scope: !19897)
!19934 = !DILocation(line: 3204, column: 9, scope: !19897)
!19935 = !DILocation(line: 3204, column: 13, scope: !19897)
!19936 = !DILocation(line: 3204, column: 18, scope: !19897)
!19937 = !DILocation(line: 3204, column: 22, scope: !19897)
!19938 = !DILocation(line: 3204, column: 31, scope: !19897)
!19939 = !DILocation(line: 3204, column: 35, scope: !19897)
!19940 = !DILocation(line: 3204, column: 40, scope: !19897)
!19941 = !DILocation(line: 3204, column: 44, scope: !19897)
!19942 = !DILocation(line: 3205, column: 9, scope: !19897)
!19943 = !DILocation(line: 3205, column: 13, scope: !19897)
!19944 = !DILocation(line: 3205, column: 18, scope: !19897)
!19945 = !DILocation(line: 3205, column: 22, scope: !19897)
!19946 = !DILocation(line: 3203, column: 2, scope: !19897)
!19947 = !DILocation(line: 3206, column: 1, scope: !19897)
!19948 = distinct !DISubprogram(name: "vpm_echocan_on", scope: !3, file: !3, line: 840, type: !19898, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19949 = !DILocalVariable(name: "hc", arg: 1, scope: !19948, file: !3, line: 840, type: !9128)
!19950 = !DILocation(line: 840, column: 34, scope: !19948)
!19951 = !DILocalVariable(name: "ch", arg: 2, scope: !19948, file: !3, line: 840, type: !37)
!19952 = !DILocation(line: 840, column: 42, scope: !19948)
!19953 = !DILocalVariable(name: "taps", arg: 3, scope: !19948, file: !3, line: 840, type: !37)
!19954 = !DILocation(line: 840, column: 50, scope: !19948)
!19955 = !DILocalVariable(name: "timeslot", scope: !19948, file: !3, line: 842, type: !7)
!19956 = !DILocation(line: 842, column: 15, scope: !19948)
!19957 = !DILocalVariable(name: "unit", scope: !19948, file: !3, line: 843, type: !7)
!19958 = !DILocation(line: 843, column: 15, scope: !19948)
!19959 = !DILocalVariable(name: "bch", scope: !19948, file: !3, line: 844, type: !9617)
!19960 = !DILocation(line: 844, column: 19, scope: !19948)
!19961 = !DILocation(line: 844, column: 25, scope: !19948)
!19962 = !DILocation(line: 844, column: 29, scope: !19948)
!19963 = !DILocation(line: 844, column: 34, scope: !19948)
!19964 = !DILocation(line: 844, column: 38, scope: !19948)
!19965 = !DILocation(line: 849, column: 6, scope: !19966)
!19966 = distinct !DILexicalBlock(scope: !19948, file: !3, line: 849, column: 6)
!19967 = !DILocation(line: 849, column: 10, scope: !19966)
!19968 = !DILocation(line: 849, column: 15, scope: !19966)
!19969 = !DILocation(line: 849, column: 19, scope: !19966)
!19970 = !DILocation(line: 849, column: 28, scope: !19966)
!19971 = !DILocation(line: 849, column: 6, scope: !19948)
!19972 = !DILocation(line: 850, column: 3, scope: !19966)
!19973 = !DILocation(line: 852, column: 7, scope: !19974)
!19974 = distinct !DILexicalBlock(scope: !19948, file: !3, line: 852, column: 6)
!19975 = !DILocation(line: 852, column: 6, scope: !19948)
!19976 = !DILocation(line: 853, column: 3, scope: !19974)
!19977 = !DILocation(line: 862, column: 15, scope: !19948)
!19978 = !DILocation(line: 862, column: 18, scope: !19948)
!19979 = !DILocation(line: 862, column: 23, scope: !19948)
!19980 = !DILocation(line: 862, column: 32, scope: !19948)
!19981 = !DILocation(line: 862, column: 35, scope: !19948)
!19982 = !DILocation(line: 862, column: 40, scope: !19948)
!19983 = !DILocation(line: 862, column: 28, scope: !19948)
!19984 = !DILocation(line: 862, column: 45, scope: !19948)
!19985 = !DILocation(line: 862, column: 11, scope: !19948)
!19986 = !DILocation(line: 863, column: 9, scope: !19948)
!19987 = !DILocation(line: 863, column: 12, scope: !19948)
!19988 = !DILocation(line: 863, column: 7, scope: !19948)
!19989 = !DILocation(line: 866, column: 9, scope: !19948)
!19990 = !DILocation(line: 866, column: 15, scope: !19948)
!19991 = !DILocation(line: 865, column: 2, scope: !19948)
!19992 = !DILocation(line: 868, column: 10, scope: !19948)
!19993 = !DILocation(line: 868, column: 14, scope: !19948)
!19994 = !DILocation(line: 868, column: 20, scope: !19948)
!19995 = !DILocation(line: 868, column: 2, scope: !19948)
!19996 = !DILocation(line: 869, column: 1, scope: !19948)
!19997 = distinct !DISubprogram(name: "vpm_echocan_off", scope: !3, file: !3, line: 872, type: !11792, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19998 = !DILocalVariable(name: "hc", arg: 1, scope: !19997, file: !3, line: 872, type: !9128)
!19999 = !DILocation(line: 872, column: 35, scope: !19997)
!20000 = !DILocalVariable(name: "ch", arg: 2, scope: !19997, file: !3, line: 872, type: !37)
!20001 = !DILocation(line: 872, column: 43, scope: !19997)
!20002 = !DILocalVariable(name: "timeslot", scope: !19997, file: !3, line: 874, type: !7)
!20003 = !DILocation(line: 874, column: 15, scope: !19997)
!20004 = !DILocalVariable(name: "unit", scope: !19997, file: !3, line: 875, type: !7)
!20005 = !DILocation(line: 875, column: 15, scope: !19997)
!20006 = !DILocalVariable(name: "bch", scope: !19997, file: !3, line: 876, type: !9617)
!20007 = !DILocation(line: 876, column: 19, scope: !19997)
!20008 = !DILocation(line: 876, column: 25, scope: !19997)
!20009 = !DILocation(line: 876, column: 29, scope: !19997)
!20010 = !DILocation(line: 876, column: 34, scope: !19997)
!20011 = !DILocation(line: 876, column: 38, scope: !19997)
!20012 = !DILocation(line: 882, column: 6, scope: !20013)
!20013 = distinct !DILexicalBlock(scope: !19997, file: !3, line: 882, column: 6)
!20014 = !DILocation(line: 882, column: 10, scope: !20013)
!20015 = !DILocation(line: 882, column: 15, scope: !20013)
!20016 = !DILocation(line: 882, column: 19, scope: !20013)
!20017 = !DILocation(line: 882, column: 28, scope: !20013)
!20018 = !DILocation(line: 882, column: 6, scope: !19997)
!20019 = !DILocation(line: 883, column: 3, scope: !20013)
!20020 = !DILocation(line: 885, column: 7, scope: !20021)
!20021 = distinct !DILexicalBlock(scope: !19997, file: !3, line: 885, column: 6)
!20022 = !DILocation(line: 885, column: 6, scope: !19997)
!20023 = !DILocation(line: 886, column: 3, scope: !20021)
!20024 = !DILocation(line: 895, column: 15, scope: !19997)
!20025 = !DILocation(line: 895, column: 18, scope: !19997)
!20026 = !DILocation(line: 895, column: 23, scope: !19997)
!20027 = !DILocation(line: 895, column: 32, scope: !19997)
!20028 = !DILocation(line: 895, column: 35, scope: !19997)
!20029 = !DILocation(line: 895, column: 40, scope: !19997)
!20030 = !DILocation(line: 895, column: 28, scope: !19997)
!20031 = !DILocation(line: 895, column: 45, scope: !19997)
!20032 = !DILocation(line: 895, column: 11, scope: !19997)
!20033 = !DILocation(line: 896, column: 9, scope: !19997)
!20034 = !DILocation(line: 896, column: 12, scope: !19997)
!20035 = !DILocation(line: 896, column: 7, scope: !19997)
!20036 = !DILocation(line: 899, column: 9, scope: !19997)
!20037 = !DILocation(line: 898, column: 2, scope: !19997)
!20038 = !DILocation(line: 901, column: 10, scope: !19997)
!20039 = !DILocation(line: 901, column: 14, scope: !19997)
!20040 = !DILocation(line: 901, column: 20, scope: !19997)
!20041 = !DILocation(line: 901, column: 2, scope: !19997)
!20042 = !DILocation(line: 902, column: 1, scope: !19997)
!20043 = distinct !DISubprogram(name: "__list_add", scope: !11675, file: !11675, line: 63, type: !20044, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20044 = !DISubroutineType(types: !20045)
!20045 = !{null, !292, !292, !292}
!20046 = !DILocalVariable(name: "new", arg: 1, scope: !20043, file: !11675, line: 63, type: !292)
!20047 = !DILocation(line: 63, column: 49, scope: !20043)
!20048 = !DILocalVariable(name: "prev", arg: 2, scope: !20043, file: !11675, line: 64, type: !292)
!20049 = !DILocation(line: 64, column: 28, scope: !20043)
!20050 = !DILocalVariable(name: "next", arg: 3, scope: !20043, file: !11675, line: 65, type: !292)
!20051 = !DILocation(line: 65, column: 28, scope: !20043)
!20052 = !DILocation(line: 67, column: 24, scope: !20053)
!20053 = distinct !DILexicalBlock(scope: !20043, file: !11675, line: 67, column: 6)
!20054 = !DILocation(line: 67, column: 29, scope: !20053)
!20055 = !DILocation(line: 67, column: 35, scope: !20053)
!20056 = !DILocation(line: 67, column: 7, scope: !20053)
!20057 = !DILocation(line: 67, column: 6, scope: !20043)
!20058 = !DILocation(line: 68, column: 3, scope: !20053)
!20059 = !DILocation(line: 70, column: 15, scope: !20043)
!20060 = !DILocation(line: 70, column: 2, scope: !20043)
!20061 = !DILocation(line: 70, column: 8, scope: !20043)
!20062 = !DILocation(line: 70, column: 13, scope: !20043)
!20063 = !DILocation(line: 71, column: 14, scope: !20043)
!20064 = !DILocation(line: 71, column: 2, scope: !20043)
!20065 = !DILocation(line: 71, column: 7, scope: !20043)
!20066 = !DILocation(line: 71, column: 12, scope: !20043)
!20067 = !DILocation(line: 72, column: 14, scope: !20043)
!20068 = !DILocation(line: 72, column: 2, scope: !20043)
!20069 = !DILocation(line: 72, column: 7, scope: !20043)
!20070 = !DILocation(line: 72, column: 12, scope: !20043)
!20071 = !DILocation(line: 73, column: 2, scope: !20043)
!20072 = !DILocation(line: 73, column: 2, scope: !20073)
!20073 = distinct !DILexicalBlock(scope: !20043, file: !11675, line: 73, column: 2)
!20074 = !DILocation(line: 73, column: 2, scope: !20075)
!20075 = distinct !DILexicalBlock(scope: !20073, file: !11675, line: 73, column: 2)
!20076 = !DILocation(line: 73, column: 2, scope: !20077)
!20077 = distinct !DILexicalBlock(scope: !20073, file: !11675, line: 73, column: 2)
!20078 = !DILocation(line: 74, column: 1, scope: !20043)
!20079 = distinct !DISubprogram(name: "__list_add_valid", scope: !11675, file: !11675, line: 45, type: !20080, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20080 = !DISubroutineType(types: !20081)
!20081 = !{!540, !292, !292, !292}
!20082 = !DILocalVariable(name: "new", arg: 1, scope: !20079, file: !11675, line: 45, type: !292)
!20083 = !DILocation(line: 45, column: 55, scope: !20079)
!20084 = !DILocalVariable(name: "prev", arg: 2, scope: !20079, file: !11675, line: 46, type: !292)
!20085 = !DILocation(line: 46, column: 23, scope: !20079)
!20086 = !DILocalVariable(name: "next", arg: 3, scope: !20079, file: !11675, line: 47, type: !292)
!20087 = !DILocation(line: 47, column: 23, scope: !20079)
!20088 = !DILocation(line: 49, column: 2, scope: !20079)
!20089 = distinct !DISubprogram(name: "request_irq", scope: !1999, file: !1999, line: 157, type: !20090, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20090 = !DISubroutineType(types: !20091)
!20091 = !{!37, !7, !20092, !317, !297, !570}
!20092 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !1999, line: 92, baseType: !20093)
!20093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9994, size: 64)
!20094 = !DILocalVariable(name: "irq", arg: 1, scope: !20089, file: !1999, line: 157, type: !7)
!20095 = !DILocation(line: 157, column: 26, scope: !20089)
!20096 = !DILocalVariable(name: "handler", arg: 2, scope: !20089, file: !1999, line: 157, type: !20092)
!20097 = !DILocation(line: 157, column: 45, scope: !20089)
!20098 = !DILocalVariable(name: "flags", arg: 3, scope: !20089, file: !1999, line: 157, type: !317)
!20099 = !DILocation(line: 157, column: 68, scope: !20089)
!20100 = !DILocalVariable(name: "name", arg: 4, scope: !20089, file: !1999, line: 158, type: !297)
!20101 = !DILocation(line: 158, column: 18, scope: !20089)
!20102 = !DILocalVariable(name: "dev", arg: 5, scope: !20089, file: !1999, line: 158, type: !570)
!20103 = !DILocation(line: 158, column: 30, scope: !20089)
!20104 = !DILocation(line: 160, column: 30, scope: !20089)
!20105 = !DILocation(line: 160, column: 35, scope: !20089)
!20106 = !DILocation(line: 160, column: 50, scope: !20089)
!20107 = !DILocation(line: 160, column: 57, scope: !20089)
!20108 = !DILocation(line: 160, column: 63, scope: !20089)
!20109 = !DILocation(line: 160, column: 9, scope: !20089)
!20110 = !DILocation(line: 160, column: 2, scope: !20089)
!20111 = !DILocation(line: 392, column: 53, scope: !11870, inlinedAt: !20112)
!20112 = distinct !DILocation(line: 2827, column: 2, scope: !9993)
!20113 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !20114)
!20114 = distinct !DILocation(line: 2713, column: 3, scope: !20115)
!20115 = distinct !DILexicalBlock(scope: !20116, file: !3, line: 2709, column: 43)
!20116 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 2709, column: 6)
!20117 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !20114)
!20118 = !DILocation(line: 392, column: 53, scope: !11870, inlinedAt: !20119)
!20119 = distinct !DILocation(line: 2834, column: 2, scope: !9993)
!20120 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !20121)
!20121 = distinct !DILocation(line: 2710, column: 3, scope: !20122)
!20122 = distinct !DILexicalBlock(scope: !20123, file: !3, line: 2710, column: 3)
!20123 = distinct !DILexicalBlock(scope: !20124, file: !3, line: 2710, column: 3)
!20124 = distinct !DILexicalBlock(scope: !20125, file: !3, line: 2710, column: 3)
!20125 = distinct !DILexicalBlock(scope: !20126, file: !3, line: 2710, column: 3)
!20126 = distinct !DILexicalBlock(scope: !20115, file: !3, line: 2710, column: 3)
!20127 = !DILocation(line: 352, column: 51, scope: !11876, inlinedAt: !20128)
!20128 = distinct !DILocation(line: 2697, column: 2, scope: !9993)
!20129 = !DILocalVariable(name: "intno", arg: 1, scope: !9993, file: !3, line: 2677, type: !37)
!20130 = !DILocation(line: 2677, column: 24, scope: !9993)
!20131 = !DILocalVariable(name: "dev_id", arg: 2, scope: !9993, file: !3, line: 2677, type: !570)
!20132 = !DILocation(line: 2677, column: 37, scope: !9993)
!20133 = !DILocalVariable(name: "hc", scope: !9993, file: !3, line: 2683, type: !9128)
!20134 = !DILocation(line: 2683, column: 20, scope: !9993)
!20135 = !DILocation(line: 2683, column: 25, scope: !9993)
!20136 = !DILocalVariable(name: "dch", scope: !9993, file: !3, line: 2684, type: !9538)
!20137 = !DILocation(line: 2684, column: 20, scope: !9993)
!20138 = !DILocalVariable(name: "r_irq_statech", scope: !9993, file: !3, line: 2685, type: !9432)
!20139 = !DILocation(line: 2685, column: 11, scope: !9993)
!20140 = !DILocalVariable(name: "status", scope: !9993, file: !3, line: 2685, type: !9432)
!20141 = !DILocation(line: 2685, column: 26, scope: !9993)
!20142 = !DILocalVariable(name: "r_irq_misc", scope: !9993, file: !3, line: 2685, type: !9432)
!20143 = !DILocation(line: 2685, column: 34, scope: !9993)
!20144 = !DILocalVariable(name: "r_irq_oview", scope: !9993, file: !3, line: 2685, type: !9432)
!20145 = !DILocation(line: 2685, column: 46, scope: !9993)
!20146 = !DILocalVariable(name: "i", scope: !9993, file: !3, line: 2686, type: !37)
!20147 = !DILocation(line: 2686, column: 8, scope: !9993)
!20148 = !DILocalVariable(name: "plx_acc", scope: !9993, file: !3, line: 2687, type: !570)
!20149 = !DILocation(line: 2687, column: 17, scope: !9993)
!20150 = !DILocalVariable(name: "wval", scope: !9993, file: !3, line: 2688, type: !9443)
!20151 = !DILocation(line: 2688, column: 12, scope: !9993)
!20152 = !DILocalVariable(name: "e1_syncsta", scope: !9993, file: !3, line: 2689, type: !9432)
!20153 = !DILocation(line: 2689, column: 11, scope: !9993)
!20154 = !DILocalVariable(name: "temp", scope: !9993, file: !3, line: 2689, type: !9432)
!20155 = !DILocation(line: 2689, column: 23, scope: !9993)
!20156 = !DILocalVariable(name: "temp2", scope: !9993, file: !3, line: 2689, type: !9432)
!20157 = !DILocation(line: 2689, column: 29, scope: !9993)
!20158 = !DILocalVariable(name: "flags", scope: !9993, file: !3, line: 2690, type: !9457)
!20159 = !DILocation(line: 2690, column: 11, scope: !9993)
!20160 = !DILocation(line: 2692, column: 7, scope: !20161)
!20161 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 2692, column: 6)
!20162 = !DILocation(line: 2692, column: 6, scope: !9993)
!20163 = !DILocation(line: 2693, column: 3, scope: !20164)
!20164 = distinct !DILexicalBlock(scope: !20161, file: !3, line: 2692, column: 11)
!20165 = !DILocation(line: 2694, column: 3, scope: !20164)
!20166 = !DILocation(line: 2697, column: 13, scope: !9993)
!20167 = !DILocation(line: 2697, column: 17, scope: !9993)
!20168 = !DILocation(line: 354, column: 2, scope: !11929, inlinedAt: !20128)
!20169 = !DILocation(line: 354, column: 2, scope: !11932, inlinedAt: !20128)
!20170 = !DILocation(line: 2709, column: 32, scope: !20116)
!20171 = !DILocation(line: 2709, column: 36, scope: !20116)
!20172 = !DILocation(line: 2709, column: 6, scope: !20116)
!20173 = !DILocation(line: 2709, column: 6, scope: !9993)
!20174 = !DILocation(line: 2710, column: 3, scope: !20115)
!20175 = !DILocation(line: 2710, column: 3, scope: !20126)
!20176 = !DILocalVariable(name: "__dummy", scope: !20177, file: !3, line: 2710, type: !317)
!20177 = distinct !DILexicalBlock(scope: !20125, file: !3, line: 2710, column: 3)
!20178 = !DILocation(line: 2710, column: 3, scope: !20177)
!20179 = !DILocalVariable(name: "__dummy2", scope: !20177, file: !3, line: 2710, type: !9457)
!20180 = !DILocation(line: 2710, column: 3, scope: !20125)
!20181 = !DILocation(line: 2710, column: 3, scope: !20124)
!20182 = !DILocation(line: 2710, column: 3, scope: !20183)
!20183 = distinct !DILexicalBlock(scope: !20124, file: !3, line: 2710, column: 3)
!20184 = !DILocalVariable(name: "__dummy", scope: !20185, file: !3, line: 2710, type: !317)
!20185 = distinct !DILexicalBlock(scope: !20186, file: !3, line: 2710, column: 3)
!20186 = distinct !DILexicalBlock(scope: !20183, file: !3, line: 2710, column: 3)
!20187 = !DILocation(line: 2710, column: 3, scope: !20185)
!20188 = !DILocalVariable(name: "__dummy2", scope: !20185, file: !3, line: 2710, type: !9457)
!20189 = !DILocation(line: 2710, column: 3, scope: !20186)
!20190 = !DILocation(line: 2710, column: 3, scope: !20123)
!20191 = !{i32 -2138064431}
!20192 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !20121)
!20193 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !20121)
!20194 = !DILocation(line: 2710, column: 3, scope: !20122)
!20195 = !DILocation(line: 2711, column: 13, scope: !20115)
!20196 = !DILocation(line: 2711, column: 17, scope: !20115)
!20197 = !DILocation(line: 2711, column: 29, scope: !20115)
!20198 = !DILocation(line: 2711, column: 11, scope: !20115)
!20199 = !DILocation(line: 2712, column: 16, scope: !20115)
!20200 = !DILocation(line: 2712, column: 10, scope: !20115)
!20201 = !DILocation(line: 2712, column: 8, scope: !20115)
!20202 = !DILocation(line: 2713, column: 37, scope: !20115)
!20203 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !20114)
!20204 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !20114)
!20205 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !20114)
!20206 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !20114)
!20207 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !20114)
!20208 = !DILocation(line: 2714, column: 9, scope: !20209)
!20209 = distinct !DILexicalBlock(scope: !20115, file: !3, line: 2714, column: 7)
!20210 = !DILocation(line: 2714, column: 14, scope: !20209)
!20211 = !DILocation(line: 2714, column: 7, scope: !20115)
!20212 = !DILocation(line: 2715, column: 4, scope: !20209)
!20213 = !DILocation(line: 2716, column: 2, scope: !20115)
!20214 = !DILocation(line: 2718, column: 11, scope: !9993)
!20215 = !DILocation(line: 2718, column: 9, scope: !9993)
!20216 = !DILocation(line: 2719, column: 18, scope: !9993)
!20217 = !DILocation(line: 2719, column: 16, scope: !9993)
!20218 = !DILocation(line: 2740, column: 7, scope: !20219)
!20219 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 2740, column: 6)
!20220 = !DILocation(line: 2740, column: 21, scope: !20219)
!20221 = !DILocation(line: 2741, column: 8, scope: !20219)
!20222 = !DILocation(line: 2741, column: 15, scope: !20219)
!20223 = !DILocation(line: 2740, column: 6, scope: !9993)
!20224 = !DILocation(line: 2744, column: 3, scope: !20225)
!20225 = distinct !DILexicalBlock(scope: !20219, file: !3, line: 2742, column: 35)
!20226 = !DILocation(line: 2746, column: 2, scope: !9993)
!20227 = !DILocation(line: 2746, column: 6, scope: !9993)
!20228 = !DILocation(line: 2746, column: 12, scope: !9993)
!20229 = !DILocation(line: 2747, column: 6, scope: !20230)
!20230 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 2747, column: 6)
!20231 = !DILocation(line: 2747, column: 6, scope: !9993)
!20232 = !DILocation(line: 2748, column: 7, scope: !20233)
!20233 = distinct !DILexicalBlock(scope: !20234, file: !3, line: 2748, column: 7)
!20234 = distinct !DILexicalBlock(scope: !20230, file: !3, line: 2747, column: 21)
!20235 = !DILocation(line: 2748, column: 11, scope: !20233)
!20236 = !DILocation(line: 2748, column: 17, scope: !20233)
!20237 = !DILocation(line: 2748, column: 7, scope: !20234)
!20238 = !DILocation(line: 2749, column: 17, scope: !20233)
!20239 = !DILocation(line: 2749, column: 21, scope: !20233)
!20240 = !DILocation(line: 2749, column: 4, scope: !20233)
!20241 = !DILocation(line: 2750, column: 2, scope: !20234)
!20242 = !DILocation(line: 2751, column: 6, scope: !20243)
!20243 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 2751, column: 6)
!20244 = !DILocation(line: 2751, column: 13, scope: !20243)
!20245 = !DILocation(line: 2751, column: 6, scope: !9993)
!20246 = !DILocation(line: 2753, column: 6, scope: !20247)
!20247 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 2753, column: 6)
!20248 = !DILocation(line: 2753, column: 13, scope: !20247)
!20249 = !DILocation(line: 2753, column: 6, scope: !9993)
!20250 = !DILocation(line: 2755, column: 3, scope: !20251)
!20251 = distinct !DILexicalBlock(scope: !20247, file: !3, line: 2753, column: 27)
!20252 = !DILocation(line: 2756, column: 2, scope: !20251)
!20253 = !DILocation(line: 2757, column: 6, scope: !20254)
!20254 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 2757, column: 6)
!20255 = !DILocation(line: 2757, column: 13, scope: !20254)
!20256 = !DILocation(line: 2757, column: 6, scope: !9993)
!20257 = !DILocation(line: 2759, column: 16, scope: !20258)
!20258 = distinct !DILexicalBlock(scope: !20254, file: !3, line: 2757, column: 30)
!20259 = !DILocation(line: 2759, column: 14, scope: !20258)
!20260 = !DILocation(line: 2760, column: 17, scope: !20258)
!20261 = !DILocation(line: 2760, column: 21, scope: !20258)
!20262 = !DILocation(line: 2760, column: 24, scope: !20258)
!20263 = !DILocation(line: 2760, column: 14, scope: !20258)
!20264 = !DILocation(line: 2761, column: 7, scope: !20265)
!20265 = distinct !DILexicalBlock(scope: !20258, file: !3, line: 2761, column: 7)
!20266 = !DILocation(line: 2761, column: 18, scope: !20265)
!20267 = !DILocation(line: 2761, column: 7, scope: !20258)
!20268 = !DILocation(line: 2762, column: 8, scope: !20269)
!20269 = distinct !DILexicalBlock(scope: !20270, file: !3, line: 2762, column: 8)
!20270 = distinct !DILexicalBlock(scope: !20265, file: !3, line: 2761, column: 31)
!20271 = !DILocation(line: 2762, column: 12, scope: !20269)
!20272 = !DILocation(line: 2762, column: 18, scope: !20269)
!20273 = !DILocation(line: 2762, column: 8, scope: !20270)
!20274 = !DILocation(line: 2764, column: 11, scope: !20275)
!20275 = distinct !DILexicalBlock(scope: !20269, file: !3, line: 2762, column: 34)
!20276 = !DILocation(line: 2764, column: 15, scope: !20275)
!20277 = !DILocation(line: 2764, column: 20, scope: !20275)
!20278 = !DILocation(line: 2764, column: 24, scope: !20275)
!20279 = !DILocation(line: 2764, column: 33, scope: !20275)
!20280 = !DILocation(line: 2764, column: 9, scope: !20275)
!20281 = !DILocation(line: 2765, column: 18, scope: !20275)
!20282 = !DILocation(line: 2765, column: 16, scope: !20275)
!20283 = !DILocation(line: 2766, column: 35, scope: !20284)
!20284 = distinct !DILexicalBlock(scope: !20275, file: !3, line: 2766, column: 9)
!20285 = !DILocation(line: 2766, column: 39, scope: !20284)
!20286 = !DILocation(line: 2766, column: 9, scope: !20284)
!20287 = !DILocation(line: 2767, column: 9, scope: !20284)
!20288 = !DILocation(line: 2767, column: 12, scope: !20284)
!20289 = !DILocation(line: 2767, column: 16, scope: !20284)
!20290 = !DILocation(line: 2766, column: 9, scope: !20275)
!20291 = !DILocation(line: 2768, column: 10, scope: !20292)
!20292 = distinct !DILexicalBlock(scope: !20293, file: !3, line: 2768, column: 10)
!20293 = distinct !DILexicalBlock(scope: !20284, file: !3, line: 2767, column: 29)
!20294 = !DILocation(line: 2768, column: 21, scope: !20292)
!20295 = !DILocation(line: 2768, column: 10, scope: !20293)
!20296 = !DILocation(line: 2769, column: 7, scope: !20292)
!20297 = !DILocation(line: 2769, column: 11, scope: !20292)
!20298 = !DILocation(line: 2769, column: 23, scope: !20292)
!20299 = !DILocation(line: 2771, column: 7, scope: !20292)
!20300 = !DILocation(line: 2771, column: 11, scope: !20292)
!20301 = !DILocation(line: 2771, column: 23, scope: !20292)
!20302 = !DILocation(line: 2772, column: 5, scope: !20293)
!20303 = !DILocation(line: 2774, column: 12, scope: !20275)
!20304 = !DILocation(line: 2774, column: 10, scope: !20275)
!20305 = !DILocation(line: 2775, column: 5, scope: !20275)
!20306 = !DILocation(line: 2775, column: 12, scope: !20275)
!20307 = !DILocation(line: 2776, column: 13, scope: !20275)
!20308 = !DILocation(line: 2775, column: 27, scope: !20275)
!20309 = !DILocation(line: 2775, column: 20, scope: !20275)
!20310 = !DILocation(line: 2775, column: 17, scope: !20275)
!20311 = !DILocation(line: 2777, column: 10, scope: !20312)
!20312 = distinct !DILexicalBlock(scope: !20313, file: !3, line: 2777, column: 10)
!20313 = distinct !DILexicalBlock(scope: !20275, file: !3, line: 2776, column: 48)
!20314 = !DILocation(line: 2777, column: 16, scope: !20312)
!20315 = !DILocation(line: 2777, column: 10, scope: !20313)
!20316 = !DILocation(line: 2780, column: 21, scope: !20312)
!20317 = !DILocation(line: 2780, column: 27, scope: !20312)
!20318 = !DILocation(line: 2778, column: 7, scope: !20312)
!20319 = !DILocation(line: 2781, column: 13, scope: !20313)
!20320 = !DILocation(line: 2781, column: 11, scope: !20313)
!20321 = distinct !{!20321, !20305, !20322}
!20322 = !DILocation(line: 2782, column: 5, scope: !20275)
!20323 = !DILocation(line: 2784, column: 9, scope: !20324)
!20324 = distinct !DILexicalBlock(scope: !20275, file: !3, line: 2784, column: 9)
!20325 = !DILocation(line: 2784, column: 15, scope: !20324)
!20326 = !DILocation(line: 2784, column: 9, scope: !20275)
!20327 = !DILocation(line: 2787, column: 20, scope: !20324)
!20328 = !DILocation(line: 2787, column: 24, scope: !20324)
!20329 = !DILocation(line: 2787, column: 28, scope: !20324)
!20330 = !DILocation(line: 2787, column: 33, scope: !20324)
!20331 = !DILocation(line: 2785, column: 6, scope: !20324)
!20332 = !DILocation(line: 2788, column: 12, scope: !20333)
!20333 = distinct !DILexicalBlock(scope: !20275, file: !3, line: 2788, column: 5)
!20334 = !DILocation(line: 2788, column: 10, scope: !20333)
!20335 = !DILocation(line: 2788, column: 17, scope: !20336)
!20336 = distinct !DILexicalBlock(scope: !20333, file: !3, line: 2788, column: 5)
!20337 = !DILocation(line: 2788, column: 21, scope: !20336)
!20338 = !DILocation(line: 2788, column: 25, scope: !20336)
!20339 = !DILocation(line: 2788, column: 19, scope: !20336)
!20340 = !DILocation(line: 2788, column: 5, scope: !20333)
!20341 = !DILocation(line: 2789, column: 12, scope: !20342)
!20342 = distinct !DILexicalBlock(scope: !20336, file: !3, line: 2788, column: 37)
!20343 = !DILocation(line: 2789, column: 16, scope: !20342)
!20344 = !DILocation(line: 2789, column: 21, scope: !20342)
!20345 = !DILocation(line: 2789, column: 25, scope: !20342)
!20346 = !DILocation(line: 2789, column: 30, scope: !20342)
!20347 = !DILocation(line: 2789, column: 34, scope: !20342)
!20348 = !DILocation(line: 2789, column: 10, scope: !20342)
!20349 = !DILocation(line: 2790, column: 19, scope: !20342)
!20350 = !DILocation(line: 2790, column: 24, scope: !20342)
!20351 = !DILocation(line: 2790, column: 6, scope: !20342)
!20352 = !DILocation(line: 2790, column: 11, scope: !20342)
!20353 = !DILocation(line: 2790, column: 17, scope: !20342)
!20354 = !DILocation(line: 2791, column: 6, scope: !20342)
!20355 = !DILocation(line: 2791, column: 6, scope: !20356)
!20356 = distinct !DILexicalBlock(scope: !20342, file: !3, line: 2791, column: 6)
!20357 = !DILocation(line: 2792, column: 5, scope: !20342)
!20358 = !DILocation(line: 2788, column: 33, scope: !20336)
!20359 = !DILocation(line: 2788, column: 5, scope: !20336)
!20360 = distinct !{!20360, !20340, !20361}
!20361 = !DILocation(line: 2792, column: 5, scope: !20333)
!20362 = !DILocation(line: 2794, column: 35, scope: !20363)
!20363 = distinct !DILexicalBlock(scope: !20275, file: !3, line: 2794, column: 9)
!20364 = !DILocation(line: 2794, column: 39, scope: !20363)
!20365 = !DILocation(line: 2794, column: 9, scope: !20363)
!20366 = !DILocation(line: 2794, column: 9, scope: !20275)
!20367 = !DILocation(line: 2795, column: 22, scope: !20363)
!20368 = !DILocation(line: 2795, column: 6, scope: !20363)
!20369 = !DILocation(line: 2796, column: 4, scope: !20275)
!20370 = !DILocation(line: 2797, column: 3, scope: !20270)
!20371 = !DILocation(line: 2798, column: 7, scope: !20372)
!20372 = distinct !DILexicalBlock(scope: !20258, file: !3, line: 2798, column: 7)
!20373 = !DILocation(line: 2798, column: 18, scope: !20372)
!20374 = !DILocation(line: 2798, column: 7, scope: !20258)
!20375 = !DILocation(line: 2799, column: 8, scope: !20376)
!20376 = distinct !DILexicalBlock(scope: !20377, file: !3, line: 2799, column: 8)
!20377 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 2798, column: 30)
!20378 = !DILocation(line: 2799, column: 12, scope: !20376)
!20379 = !DILocation(line: 2799, column: 8, scope: !20377)
!20380 = !DILocation(line: 2800, column: 24, scope: !20376)
!20381 = !DILocation(line: 2800, column: 28, scope: !20376)
!20382 = !DILocation(line: 2800, column: 36, scope: !20376)
!20383 = !DILocation(line: 2800, column: 5, scope: !20376)
!20384 = !DILocation(line: 2801, column: 21, scope: !20377)
!20385 = !DILocation(line: 2801, column: 4, scope: !20377)
!20386 = !DILocation(line: 2802, column: 3, scope: !20377)
!20387 = !DILocation(line: 2804, column: 7, scope: !20388)
!20388 = distinct !DILexicalBlock(scope: !20258, file: !3, line: 2804, column: 7)
!20389 = !DILocation(line: 2804, column: 18, scope: !20388)
!20390 = !DILocation(line: 2804, column: 7, scope: !20258)
!20391 = !DILocation(line: 2805, column: 18, scope: !20388)
!20392 = !DILocation(line: 2805, column: 4, scope: !20388)
!20393 = !DILocation(line: 2807, column: 7, scope: !20394)
!20394 = distinct !DILexicalBlock(scope: !20258, file: !3, line: 2807, column: 7)
!20395 = !DILocation(line: 2807, column: 18, scope: !20394)
!20396 = !DILocation(line: 2807, column: 7, scope: !20258)
!20397 = !DILocation(line: 2809, column: 21, scope: !20398)
!20398 = distinct !DILexicalBlock(scope: !20399, file: !3, line: 2809, column: 8)
!20399 = distinct !DILexicalBlock(scope: !20394, file: !3, line: 2807, column: 32)
!20400 = !DILocation(line: 2809, column: 8, scope: !20399)
!20401 = !DILocation(line: 2810, column: 5, scope: !20398)
!20402 = !DILocation(line: 2812, column: 3, scope: !20399)
!20403 = !DILocation(line: 2814, column: 2, scope: !20258)
!20404 = !DILocation(line: 2815, column: 6, scope: !20405)
!20405 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 2815, column: 6)
!20406 = !DILocation(line: 2815, column: 13, scope: !20405)
!20407 = !DILocation(line: 2815, column: 6, scope: !9993)
!20408 = !DILocation(line: 2817, column: 17, scope: !20409)
!20409 = distinct !DILexicalBlock(scope: !20405, file: !3, line: 2815, column: 28)
!20410 = !DILocation(line: 2817, column: 15, scope: !20409)
!20411 = !DILocation(line: 2818, column: 10, scope: !20412)
!20412 = distinct !DILexicalBlock(scope: !20409, file: !3, line: 2818, column: 3)
!20413 = !DILocation(line: 2818, column: 8, scope: !20412)
!20414 = !DILocation(line: 2818, column: 15, scope: !20415)
!20415 = distinct !DILexicalBlock(scope: !20412, file: !3, line: 2818, column: 3)
!20416 = !DILocation(line: 2818, column: 17, scope: !20415)
!20417 = !DILocation(line: 2818, column: 3, scope: !20412)
!20418 = !DILocation(line: 2819, column: 8, scope: !20419)
!20419 = distinct !DILexicalBlock(scope: !20420, file: !3, line: 2819, column: 8)
!20420 = distinct !DILexicalBlock(scope: !20415, file: !3, line: 2818, column: 27)
!20421 = !DILocation(line: 2819, column: 28, scope: !20419)
!20422 = !DILocation(line: 2819, column: 25, scope: !20419)
!20423 = !DILocation(line: 2819, column: 20, scope: !20419)
!20424 = !DILocation(line: 2819, column: 8, scope: !20420)
!20425 = !DILocation(line: 2820, column: 14, scope: !20419)
!20426 = !DILocation(line: 2820, column: 18, scope: !20419)
!20427 = !DILocation(line: 2820, column: 5, scope: !20419)
!20428 = !DILocation(line: 2821, column: 3, scope: !20420)
!20429 = !DILocation(line: 2818, column: 23, scope: !20415)
!20430 = !DILocation(line: 2818, column: 3, scope: !20415)
!20431 = distinct !{!20431, !20417, !20432}
!20432 = !DILocation(line: 2821, column: 3, scope: !20412)
!20433 = !DILocation(line: 2822, column: 2, scope: !20409)
!20434 = !DILocation(line: 2827, column: 15, scope: !9993)
!20435 = !DILocation(line: 2827, column: 19, scope: !9993)
!20436 = !DILocation(line: 394, column: 2, scope: !12155, inlinedAt: !20112)
!20437 = !DILocation(line: 394, column: 2, scope: !12158, inlinedAt: !20112)
!20438 = !DILocation(line: 2828, column: 2, scope: !9993)
!20439 = !DILabel(scope: !9993, name: "irq_notforus", file: !3, line: 2830)
!20440 = !DILocation(line: 2830, column: 1, scope: !9993)
!20441 = !DILocation(line: 2834, column: 15, scope: !9993)
!20442 = !DILocation(line: 2834, column: 19, scope: !9993)
!20443 = !DILocation(line: 394, column: 2, scope: !12155, inlinedAt: !20119)
!20444 = !DILocation(line: 394, column: 2, scope: !12158, inlinedAt: !20119)
!20445 = !DILocation(line: 2835, column: 2, scope: !9993)
!20446 = !DILocation(line: 2836, column: 1, scope: !9993)
!20447 = distinct !DISubprogram(name: "init_chip", scope: !3, file: !3, line: 1108, type: !14662, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20448 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !20449)
!20449 = distinct !DILocation(line: 1452, column: 3, scope: !20450)
!20450 = distinct !DILexicalBlock(scope: !20451, file: !3, line: 1444, column: 43)
!20451 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1444, column: 6)
!20452 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !20449)
!20453 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !20454)
!20454 = distinct !DILocation(line: 1447, column: 3, scope: !20455)
!20455 = distinct !DILexicalBlock(scope: !20456, file: !3, line: 1447, column: 3)
!20456 = distinct !DILexicalBlock(scope: !20457, file: !3, line: 1447, column: 3)
!20457 = distinct !DILexicalBlock(scope: !20458, file: !3, line: 1447, column: 3)
!20458 = distinct !DILexicalBlock(scope: !20459, file: !3, line: 1447, column: 3)
!20459 = distinct !DILexicalBlock(scope: !20450, file: !3, line: 1447, column: 3)
!20460 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !20461)
!20461 = distinct !DILocation(line: 1427, column: 4, scope: !20462)
!20462 = distinct !DILexicalBlock(scope: !20463, file: !3, line: 1427, column: 4)
!20463 = distinct !DILexicalBlock(scope: !20464, file: !3, line: 1427, column: 4)
!20464 = distinct !DILexicalBlock(scope: !20465, file: !3, line: 1427, column: 4)
!20465 = distinct !DILexicalBlock(scope: !20466, file: !3, line: 1427, column: 4)
!20466 = distinct !DILexicalBlock(scope: !20467, file: !3, line: 1427, column: 4)
!20467 = distinct !DILexicalBlock(scope: !20468, file: !3, line: 1399, column: 10)
!20468 = distinct !DILexicalBlock(scope: !20469, file: !3, line: 1396, column: 7)
!20469 = distinct !DILexicalBlock(scope: !20470, file: !3, line: 1387, column: 9)
!20470 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1375, column: 6)
!20471 = !DILocation(line: 15, column: 9, scope: !14684, inlinedAt: !20472)
!20472 = distinct !DILocation(line: 1425, column: 4, scope: !20473)
!20473 = distinct !DILexicalBlock(scope: !20474, file: !3, line: 1425, column: 4)
!20474 = distinct !DILexicalBlock(scope: !20475, file: !3, line: 1425, column: 4)
!20475 = distinct !DILexicalBlock(scope: !20467, file: !3, line: 1425, column: 4)
!20476 = !DILocation(line: 15, column: 9, scope: !14695, inlinedAt: !20472)
!20477 = !DILocation(line: 15, column: 9, scope: !14698, inlinedAt: !20472)
!20478 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !20479)
!20479 = distinct !DILocation(line: 1424, column: 4, scope: !20467)
!20480 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !20479)
!20481 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !20482)
!20482 = distinct !DILocation(line: 1417, column: 5, scope: !20483)
!20483 = distinct !DILexicalBlock(scope: !20484, file: !3, line: 1410, column: 45)
!20484 = distinct !DILexicalBlock(scope: !20467, file: !3, line: 1410, column: 8)
!20485 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !20482)
!20486 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !20487)
!20487 = distinct !DILocation(line: 1411, column: 5, scope: !20488)
!20488 = distinct !DILexicalBlock(scope: !20489, file: !3, line: 1411, column: 5)
!20489 = distinct !DILexicalBlock(scope: !20490, file: !3, line: 1411, column: 5)
!20490 = distinct !DILexicalBlock(scope: !20491, file: !3, line: 1411, column: 5)
!20491 = distinct !DILexicalBlock(scope: !20492, file: !3, line: 1411, column: 5)
!20492 = distinct !DILexicalBlock(scope: !20483, file: !3, line: 1411, column: 5)
!20493 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !20494)
!20494 = distinct !DILocation(line: 1368, column: 2, scope: !20495)
!20495 = distinct !DILexicalBlock(scope: !20496, file: !3, line: 1368, column: 2)
!20496 = distinct !DILexicalBlock(scope: !20497, file: !3, line: 1368, column: 2)
!20497 = distinct !DILexicalBlock(scope: !20498, file: !3, line: 1368, column: 2)
!20498 = distinct !DILexicalBlock(scope: !20499, file: !3, line: 1368, column: 2)
!20499 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1368, column: 2)
!20500 = !DILocation(line: 15, column: 9, scope: !14684, inlinedAt: !20501)
!20501 = distinct !DILocation(line: 1366, column: 2, scope: !20502)
!20502 = distinct !DILexicalBlock(scope: !20503, file: !3, line: 1366, column: 2)
!20503 = distinct !DILexicalBlock(scope: !20504, file: !3, line: 1366, column: 2)
!20504 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1366, column: 2)
!20505 = !DILocation(line: 15, column: 9, scope: !14695, inlinedAt: !20501)
!20506 = !DILocation(line: 15, column: 9, scope: !14698, inlinedAt: !20501)
!20507 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !20508)
!20508 = distinct !DILocation(line: 1365, column: 2, scope: !20447)
!20509 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !20508)
!20510 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !20511)
!20511 = distinct !DILocation(line: 1311, column: 3, scope: !20512)
!20512 = distinct !DILexicalBlock(scope: !20513, file: !3, line: 1292, column: 43)
!20513 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1292, column: 6)
!20514 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !20511)
!20515 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !20516)
!20516 = distinct !DILocation(line: 1293, column: 3, scope: !20517)
!20517 = distinct !DILexicalBlock(scope: !20518, file: !3, line: 1293, column: 3)
!20518 = distinct !DILexicalBlock(scope: !20519, file: !3, line: 1293, column: 3)
!20519 = distinct !DILexicalBlock(scope: !20520, file: !3, line: 1293, column: 3)
!20520 = distinct !DILexicalBlock(scope: !20521, file: !3, line: 1293, column: 3)
!20521 = distinct !DILexicalBlock(scope: !20512, file: !3, line: 1293, column: 3)
!20522 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !20523)
!20523 = distinct !DILocation(line: 1242, column: 3, scope: !20524)
!20524 = distinct !DILexicalBlock(scope: !20525, file: !3, line: 1191, column: 43)
!20525 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1191, column: 6)
!20526 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !20523)
!20527 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !20528)
!20528 = distinct !DILocation(line: 1236, column: 4, scope: !20529)
!20529 = distinct !DILexicalBlock(scope: !20530, file: !3, line: 1226, column: 23)
!20530 = distinct !DILexicalBlock(scope: !20524, file: !3, line: 1226, column: 7)
!20531 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !20528)
!20532 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !20533)
!20533 = distinct !DILocation(line: 1231, column: 4, scope: !20534)
!20534 = distinct !DILexicalBlock(scope: !20535, file: !3, line: 1231, column: 4)
!20535 = distinct !DILexicalBlock(scope: !20536, file: !3, line: 1231, column: 4)
!20536 = distinct !DILexicalBlock(scope: !20537, file: !3, line: 1231, column: 4)
!20537 = distinct !DILexicalBlock(scope: !20538, file: !3, line: 1231, column: 4)
!20538 = distinct !DILexicalBlock(scope: !20529, file: !3, line: 1231, column: 4)
!20539 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !20540)
!20540 = distinct !DILocation(line: 1216, column: 3, scope: !20541)
!20541 = distinct !DILexicalBlock(scope: !20542, file: !3, line: 1216, column: 3)
!20542 = distinct !DILexicalBlock(scope: !20543, file: !3, line: 1216, column: 3)
!20543 = distinct !DILexicalBlock(scope: !20544, file: !3, line: 1216, column: 3)
!20544 = distinct !DILexicalBlock(scope: !20545, file: !3, line: 1216, column: 3)
!20545 = distinct !DILexicalBlock(scope: !20524, file: !3, line: 1216, column: 3)
!20546 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !20547)
!20547 = distinct !DILocation(line: 1208, column: 3, scope: !20524)
!20548 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !20547)
!20549 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !20550)
!20550 = distinct !DILocation(line: 1195, column: 3, scope: !20551)
!20551 = distinct !DILexicalBlock(scope: !20552, file: !3, line: 1195, column: 3)
!20552 = distinct !DILexicalBlock(scope: !20553, file: !3, line: 1195, column: 3)
!20553 = distinct !DILexicalBlock(scope: !20554, file: !3, line: 1195, column: 3)
!20554 = distinct !DILexicalBlock(scope: !20555, file: !3, line: 1195, column: 3)
!20555 = distinct !DILexicalBlock(scope: !20524, file: !3, line: 1195, column: 3)
!20556 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !20557)
!20557 = distinct !DILocation(line: 1573, column: 2, scope: !20447)
!20558 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !20557)
!20559 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !20560)
!20560 = distinct !DILocation(line: 1119, column: 2, scope: !20561)
!20561 = distinct !DILexicalBlock(scope: !20562, file: !3, line: 1119, column: 2)
!20562 = distinct !DILexicalBlock(scope: !20563, file: !3, line: 1119, column: 2)
!20563 = distinct !DILexicalBlock(scope: !20564, file: !3, line: 1119, column: 2)
!20564 = distinct !DILexicalBlock(scope: !20565, file: !3, line: 1119, column: 2)
!20565 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1119, column: 2)
!20566 = !DILocalVariable(name: "hc", arg: 1, scope: !20447, file: !3, line: 1108, type: !9128)
!20567 = !DILocation(line: 1108, column: 29, scope: !20447)
!20568 = !DILocalVariable(name: "flags", scope: !20447, file: !3, line: 1110, type: !9457)
!20569 = !DILocation(line: 1110, column: 11, scope: !20447)
!20570 = !DILocalVariable(name: "val", scope: !20447, file: !3, line: 1110, type: !9457)
!20571 = !DILocation(line: 1110, column: 18, scope: !20447)
!20572 = !DILocalVariable(name: "val2", scope: !20447, file: !3, line: 1110, type: !9457)
!20573 = !DILocation(line: 1110, column: 23, scope: !20447)
!20574 = !DILocalVariable(name: "rev", scope: !20447, file: !3, line: 1110, type: !9457)
!20575 = !DILocation(line: 1110, column: 33, scope: !20447)
!20576 = !DILocalVariable(name: "i", scope: !20447, file: !3, line: 1111, type: !37)
!20577 = !DILocation(line: 1111, column: 8, scope: !20447)
!20578 = !DILocalVariable(name: "err", scope: !20447, file: !3, line: 1111, type: !37)
!20579 = !DILocation(line: 1111, column: 11, scope: !20447)
!20580 = !DILocalVariable(name: "r_conf_en", scope: !20447, file: !3, line: 1112, type: !9432)
!20581 = !DILocation(line: 1112, column: 11, scope: !20447)
!20582 = !DILocalVariable(name: "rval", scope: !20447, file: !3, line: 1112, type: !9432)
!20583 = !DILocation(line: 1112, column: 22, scope: !20447)
!20584 = !DILocalVariable(name: "plx_acc_32", scope: !20447, file: !3, line: 1113, type: !570)
!20585 = !DILocation(line: 1113, column: 17, scope: !20447)
!20586 = !DILocalVariable(name: "pv", scope: !20447, file: !3, line: 1114, type: !9152)
!20587 = !DILocation(line: 1114, column: 10, scope: !20447)
!20588 = !DILocalVariable(name: "plx_flags", scope: !20447, file: !3, line: 1115, type: !9457)
!20589 = !DILocation(line: 1115, column: 11, scope: !20447)
!20590 = !DILocalVariable(name: "hfc_flags", scope: !20447, file: !3, line: 1115, type: !9457)
!20591 = !DILocation(line: 1115, column: 22, scope: !20447)
!20592 = !DILocalVariable(name: "plx_count", scope: !20447, file: !3, line: 1116, type: !37)
!20593 = !DILocation(line: 1116, column: 8, scope: !20447)
!20594 = !DILocalVariable(name: "pos", scope: !20447, file: !3, line: 1117, type: !9128)
!20595 = !DILocation(line: 1117, column: 20, scope: !20447)
!20596 = !DILocalVariable(name: "next", scope: !20447, file: !3, line: 1117, type: !9128)
!20597 = !DILocation(line: 1117, column: 26, scope: !20447)
!20598 = !DILocalVariable(name: "plx_last_hc", scope: !20447, file: !3, line: 1117, type: !9128)
!20599 = !DILocation(line: 1117, column: 33, scope: !20447)
!20600 = !DILocation(line: 1119, column: 2, scope: !20447)
!20601 = !DILocation(line: 1119, column: 2, scope: !20565)
!20602 = !DILocalVariable(name: "__dummy", scope: !20603, file: !3, line: 1119, type: !317)
!20603 = distinct !DILexicalBlock(scope: !20564, file: !3, line: 1119, column: 2)
!20604 = !DILocation(line: 1119, column: 2, scope: !20603)
!20605 = !DILocalVariable(name: "__dummy2", scope: !20603, file: !3, line: 1119, type: !9457)
!20606 = !DILocation(line: 1119, column: 2, scope: !20564)
!20607 = !DILocation(line: 1119, column: 2, scope: !20563)
!20608 = !DILocation(line: 1119, column: 2, scope: !20609)
!20609 = distinct !DILexicalBlock(scope: !20563, file: !3, line: 1119, column: 2)
!20610 = !DILocalVariable(name: "__dummy", scope: !20611, file: !3, line: 1119, type: !317)
!20611 = distinct !DILexicalBlock(scope: !20612, file: !3, line: 1119, column: 2)
!20612 = distinct !DILexicalBlock(scope: !20609, file: !3, line: 1119, column: 2)
!20613 = !DILocation(line: 1119, column: 2, scope: !20611)
!20614 = !DILocalVariable(name: "__dummy2", scope: !20611, file: !3, line: 1119, type: !9457)
!20615 = !DILocation(line: 1119, column: 2, scope: !20612)
!20616 = !DILocation(line: 1119, column: 2, scope: !20562)
!20617 = !{i32 -2138097370}
!20618 = !DILocation(line: 1119, column: 2, scope: !20561)
!20619 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !20560)
!20620 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !20560)
!20621 = !DILocation(line: 1121, column: 10, scope: !20447)
!20622 = !DILocation(line: 1121, column: 14, scope: !20447)
!20623 = !DILocation(line: 1121, column: 2, scope: !20447)
!20624 = !DILocation(line: 1124, column: 6, scope: !20625)
!20625 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1124, column: 6)
!20626 = !DILocation(line: 1124, column: 12, scope: !20625)
!20627 = !DILocation(line: 1124, column: 6, scope: !20447)
!20628 = !DILocation(line: 1125, column: 3, scope: !20625)
!20629 = !DILocation(line: 1126, column: 8, scope: !20447)
!20630 = !DILocation(line: 1126, column: 6, scope: !20447)
!20631 = !DILocation(line: 1127, column: 7, scope: !20632)
!20632 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1127, column: 6)
!20633 = !DILocation(line: 1127, column: 11, scope: !20632)
!20634 = !DILocation(line: 1127, column: 17, scope: !20632)
!20635 = !DILocation(line: 1127, column: 24, scope: !20632)
!20636 = !DILocation(line: 1127, column: 28, scope: !20632)
!20637 = !DILocation(line: 1127, column: 32, scope: !20632)
!20638 = !DILocation(line: 1127, column: 38, scope: !20632)
!20639 = !DILocation(line: 1127, column: 45, scope: !20632)
!20640 = !DILocation(line: 1127, column: 49, scope: !20632)
!20641 = !DILocation(line: 1127, column: 53, scope: !20632)
!20642 = !DILocation(line: 1127, column: 59, scope: !20632)
!20643 = !DILocation(line: 1127, column: 66, scope: !20632)
!20644 = !DILocation(line: 1128, column: 7, scope: !20632)
!20645 = !DILocation(line: 1128, column: 11, scope: !20632)
!20646 = !DILocation(line: 1128, column: 17, scope: !20632)
!20647 = !DILocation(line: 1127, column: 6, scope: !20447)
!20648 = !DILocation(line: 1129, column: 62, scope: !20649)
!20649 = distinct !DILexicalBlock(scope: !20632, file: !3, line: 1128, column: 26)
!20650 = !DILocation(line: 1129, column: 55, scope: !20649)
!20651 = !DILocation(line: 1129, column: 3, scope: !20649)
!20652 = !DILocation(line: 1130, column: 7, scope: !20649)
!20653 = !DILocation(line: 1131, column: 3, scope: !20649)
!20654 = !DILocation(line: 1133, column: 8, scope: !20447)
!20655 = !DILocation(line: 1133, column: 6, scope: !20447)
!20656 = !DILocation(line: 1136, column: 9, scope: !20447)
!20657 = !DILocation(line: 1136, column: 14, scope: !20447)
!20658 = !DILocation(line: 1136, column: 20, scope: !20447)
!20659 = !DILocation(line: 1136, column: 24, scope: !20447)
!20660 = !DILocation(line: 1136, column: 29, scope: !20447)
!20661 = !DILocation(line: 1136, column: 33, scope: !20447)
!20662 = !DILocation(line: 1136, column: 37, scope: !20447)
!20663 = !DILocation(line: 1136, column: 43, scope: !20447)
!20664 = !DILocation(line: 0, scope: !20447)
!20665 = !DILocation(line: 1136, column: 19, scope: !20447)
!20666 = !DILocation(line: 1134, column: 2, scope: !20447)
!20667 = !DILocation(line: 1138, column: 6, scope: !20668)
!20668 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1138, column: 6)
!20669 = !DILocation(line: 1138, column: 10, scope: !20668)
!20670 = !DILocation(line: 1138, column: 16, scope: !20668)
!20671 = !DILocation(line: 1138, column: 33, scope: !20668)
!20672 = !DILocation(line: 1138, column: 36, scope: !20668)
!20673 = !DILocation(line: 1138, column: 40, scope: !20668)
!20674 = !DILocation(line: 1138, column: 6, scope: !20447)
!20675 = !DILocation(line: 1139, column: 41, scope: !20676)
!20676 = distinct !DILexicalBlock(scope: !20668, file: !3, line: 1138, column: 46)
!20677 = !DILocation(line: 1139, column: 45, scope: !20676)
!20678 = !DILocation(line: 1139, column: 3, scope: !20676)
!20679 = !DILocation(line: 1140, column: 3, scope: !20676)
!20680 = !DILocation(line: 1146, column: 2, scope: !20676)
!20681 = !DILocation(line: 1147, column: 6, scope: !20682)
!20682 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1147, column: 6)
!20683 = !DILocation(line: 1147, column: 10, scope: !20682)
!20684 = !DILocation(line: 1147, column: 6, scope: !20447)
!20685 = !DILocation(line: 1150, column: 36, scope: !20686)
!20686 = distinct !DILexicalBlock(scope: !20682, file: !3, line: 1147, column: 15)
!20687 = !DILocation(line: 1148, column: 3, scope: !20686)
!20688 = !DILocation(line: 1151, column: 2, scope: !20686)
!20689 = !DILocation(line: 1154, column: 2, scope: !20447)
!20690 = !DILocation(line: 1154, column: 6, scope: !20447)
!20691 = !DILocation(line: 1154, column: 11, scope: !20447)
!20692 = !DILocation(line: 1155, column: 2, scope: !20447)
!20693 = !DILocation(line: 1155, column: 6, scope: !20447)
!20694 = !DILocation(line: 1155, column: 11, scope: !20447)
!20695 = !DILocation(line: 1156, column: 2, scope: !20447)
!20696 = !DILocation(line: 1156, column: 6, scope: !20447)
!20697 = !DILocation(line: 1156, column: 11, scope: !20447)
!20698 = !DILocation(line: 1157, column: 2, scope: !20447)
!20699 = !DILocation(line: 1157, column: 6, scope: !20447)
!20700 = !DILocation(line: 1157, column: 15, scope: !20447)
!20701 = !DILocation(line: 1158, column: 36, scope: !20702)
!20702 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1158, column: 6)
!20703 = !DILocation(line: 1158, column: 40, scope: !20702)
!20704 = !DILocation(line: 1158, column: 6, scope: !20702)
!20705 = !DILocation(line: 1158, column: 6, scope: !20447)
!20706 = !DILocation(line: 1159, column: 7, scope: !20707)
!20707 = distinct !DILexicalBlock(scope: !20708, file: !3, line: 1159, column: 7)
!20708 = distinct !DILexicalBlock(scope: !20702, file: !3, line: 1158, column: 47)
!20709 = !DILocation(line: 1159, column: 13, scope: !20707)
!20710 = !DILocation(line: 1159, column: 7, scope: !20708)
!20711 = !DILocation(line: 1160, column: 4, scope: !20707)
!20712 = !DILocation(line: 1162, column: 3, scope: !20708)
!20713 = !DILocation(line: 1162, column: 7, scope: !20708)
!20714 = !DILocation(line: 1162, column: 10, scope: !20708)
!20715 = !DILocation(line: 1162, column: 17, scope: !20708)
!20716 = !DILocation(line: 1163, column: 3, scope: !20708)
!20717 = !DILocation(line: 1163, column: 7, scope: !20708)
!20718 = !DILocation(line: 1163, column: 10, scope: !20708)
!20719 = !DILocation(line: 1163, column: 19, scope: !20708)
!20720 = !DILocation(line: 1164, column: 3, scope: !20708)
!20721 = !DILocation(line: 1164, column: 7, scope: !20708)
!20722 = !DILocation(line: 1164, column: 12, scope: !20708)
!20723 = !DILocation(line: 1165, column: 3, scope: !20708)
!20724 = !DILocation(line: 1165, column: 7, scope: !20708)
!20725 = !DILocation(line: 1165, column: 12, scope: !20708)
!20726 = !DILocation(line: 1166, column: 3, scope: !20708)
!20727 = !DILocation(line: 1166, column: 7, scope: !20708)
!20728 = !DILocation(line: 1166, column: 12, scope: !20708)
!20729 = !DILocation(line: 1167, column: 3, scope: !20708)
!20730 = !DILocation(line: 1167, column: 7, scope: !20708)
!20731 = !DILocation(line: 1167, column: 16, scope: !20708)
!20732 = !DILocation(line: 1168, column: 2, scope: !20708)
!20733 = !DILocation(line: 1169, column: 36, scope: !20734)
!20734 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1169, column: 6)
!20735 = !DILocation(line: 1169, column: 40, scope: !20734)
!20736 = !DILocation(line: 1169, column: 6, scope: !20734)
!20737 = !DILocation(line: 1169, column: 6, scope: !20447)
!20738 = !DILocation(line: 1170, column: 7, scope: !20739)
!20739 = distinct !DILexicalBlock(scope: !20740, file: !3, line: 1170, column: 7)
!20740 = distinct !DILexicalBlock(scope: !20734, file: !3, line: 1169, column: 47)
!20741 = !DILocation(line: 1170, column: 13, scope: !20739)
!20742 = !DILocation(line: 1170, column: 7, scope: !20740)
!20743 = !DILocation(line: 1171, column: 4, scope: !20739)
!20744 = !DILocation(line: 1173, column: 3, scope: !20740)
!20745 = !DILocation(line: 1173, column: 7, scope: !20740)
!20746 = !DILocation(line: 1173, column: 10, scope: !20740)
!20747 = !DILocation(line: 1173, column: 17, scope: !20740)
!20748 = !DILocation(line: 1174, column: 3, scope: !20740)
!20749 = !DILocation(line: 1174, column: 7, scope: !20740)
!20750 = !DILocation(line: 1174, column: 10, scope: !20740)
!20751 = !DILocation(line: 1174, column: 19, scope: !20740)
!20752 = !DILocation(line: 1175, column: 3, scope: !20740)
!20753 = !DILocation(line: 1175, column: 7, scope: !20740)
!20754 = !DILocation(line: 1175, column: 12, scope: !20740)
!20755 = !DILocation(line: 1176, column: 3, scope: !20740)
!20756 = !DILocation(line: 1176, column: 7, scope: !20740)
!20757 = !DILocation(line: 1176, column: 12, scope: !20740)
!20758 = !DILocation(line: 1177, column: 3, scope: !20740)
!20759 = !DILocation(line: 1177, column: 7, scope: !20740)
!20760 = !DILocation(line: 1177, column: 12, scope: !20740)
!20761 = !DILocation(line: 1178, column: 3, scope: !20740)
!20762 = !DILocation(line: 1178, column: 7, scope: !20740)
!20763 = !DILocation(line: 1178, column: 16, scope: !20740)
!20764 = !DILocation(line: 1179, column: 2, scope: !20740)
!20765 = !DILocation(line: 1180, column: 6, scope: !20766)
!20766 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1180, column: 6)
!20767 = !DILocation(line: 1180, column: 10, scope: !20766)
!20768 = !DILocation(line: 1180, column: 16, scope: !20766)
!20769 = !DILocation(line: 1180, column: 6, scope: !20447)
!20770 = !DILocation(line: 1181, column: 3, scope: !20771)
!20771 = distinct !DILexicalBlock(scope: !20766, file: !3, line: 1180, column: 34)
!20772 = !DILocation(line: 1181, column: 7, scope: !20771)
!20773 = !DILocation(line: 1181, column: 12, scope: !20771)
!20774 = !DILocation(line: 1182, column: 3, scope: !20771)
!20775 = !DILocation(line: 1182, column: 7, scope: !20771)
!20776 = !DILocation(line: 1182, column: 12, scope: !20771)
!20777 = !DILocation(line: 1183, column: 3, scope: !20771)
!20778 = !DILocation(line: 1183, column: 7, scope: !20771)
!20779 = !DILocation(line: 1183, column: 12, scope: !20771)
!20780 = !DILocation(line: 1184, column: 3, scope: !20771)
!20781 = !DILocation(line: 1184, column: 7, scope: !20771)
!20782 = !DILocation(line: 1184, column: 16, scope: !20771)
!20783 = !DILocation(line: 1185, column: 2, scope: !20771)
!20784 = !DILocation(line: 1186, column: 18, scope: !20447)
!20785 = !DILocation(line: 1186, column: 23, scope: !20447)
!20786 = !DILocation(line: 1186, column: 2, scope: !20447)
!20787 = !DILocation(line: 1186, column: 6, scope: !20447)
!20788 = !DILocation(line: 1186, column: 16, scope: !20447)
!20789 = !DILocation(line: 1187, column: 6, scope: !20790)
!20790 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1187, column: 6)
!20791 = !DILocation(line: 1187, column: 10, scope: !20790)
!20792 = !DILocation(line: 1187, column: 22, scope: !20790)
!20793 = !DILocation(line: 1187, column: 26, scope: !20790)
!20794 = !DILocation(line: 1187, column: 20, scope: !20790)
!20795 = !DILocation(line: 1187, column: 6, scope: !20447)
!20796 = !DILocation(line: 1188, column: 19, scope: !20790)
!20797 = !DILocation(line: 1188, column: 23, scope: !20790)
!20798 = !DILocation(line: 1188, column: 3, scope: !20790)
!20799 = !DILocation(line: 1188, column: 7, scope: !20790)
!20800 = !DILocation(line: 1188, column: 17, scope: !20790)
!20801 = !DILocation(line: 1191, column: 32, scope: !20525)
!20802 = !DILocation(line: 1191, column: 36, scope: !20525)
!20803 = !DILocation(line: 1191, column: 6, scope: !20525)
!20804 = !DILocation(line: 1191, column: 6, scope: !20447)
!20805 = !DILocation(line: 1192, column: 7, scope: !20806)
!20806 = distinct !DILexicalBlock(scope: !20524, file: !3, line: 1192, column: 7)
!20807 = !DILocation(line: 1192, column: 13, scope: !20806)
!20808 = !DILocation(line: 1192, column: 7, scope: !20524)
!20809 = !DILocation(line: 1194, column: 21, scope: !20806)
!20810 = !DILocation(line: 1194, column: 25, scope: !20806)
!20811 = !DILocation(line: 1194, column: 28, scope: !20806)
!20812 = !DILocation(line: 1193, column: 4, scope: !20806)
!20813 = !DILocation(line: 1195, column: 3, scope: !20524)
!20814 = !DILocation(line: 1195, column: 3, scope: !20555)
!20815 = !DILocalVariable(name: "__dummy", scope: !20816, file: !3, line: 1195, type: !317)
!20816 = distinct !DILexicalBlock(scope: !20554, file: !3, line: 1195, column: 3)
!20817 = !DILocation(line: 1195, column: 3, scope: !20816)
!20818 = !DILocalVariable(name: "__dummy2", scope: !20816, file: !3, line: 1195, type: !9457)
!20819 = !DILocation(line: 1195, column: 3, scope: !20554)
!20820 = !DILocation(line: 1195, column: 3, scope: !20553)
!20821 = !DILocation(line: 1195, column: 3, scope: !20822)
!20822 = distinct !DILexicalBlock(scope: !20553, file: !3, line: 1195, column: 3)
!20823 = !DILocalVariable(name: "__dummy", scope: !20824, file: !3, line: 1195, type: !317)
!20824 = distinct !DILexicalBlock(scope: !20825, file: !3, line: 1195, column: 3)
!20825 = distinct !DILexicalBlock(scope: !20822, file: !3, line: 1195, column: 3)
!20826 = !DILocation(line: 1195, column: 3, scope: !20824)
!20827 = !DILocalVariable(name: "__dummy2", scope: !20824, file: !3, line: 1195, type: !9457)
!20828 = !DILocation(line: 1195, column: 3, scope: !20825)
!20829 = !DILocation(line: 1195, column: 3, scope: !20552)
!20830 = !{i32 -2138096016}
!20831 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !20550)
!20832 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !20550)
!20833 = !DILocation(line: 1195, column: 3, scope: !20551)
!20834 = !DILocation(line: 1196, column: 16, scope: !20524)
!20835 = !DILocation(line: 1196, column: 20, scope: !20524)
!20836 = !DILocation(line: 1196, column: 32, scope: !20524)
!20837 = !DILocation(line: 1196, column: 14, scope: !20524)
!20838 = !DILocation(line: 1197, column: 26, scope: !20524)
!20839 = !DILocation(line: 1197, column: 3, scope: !20524)
!20840 = !DILocation(line: 1198, column: 14, scope: !20524)
!20841 = !DILocation(line: 1198, column: 8, scope: !20524)
!20842 = !DILocation(line: 1198, column: 6, scope: !20524)
!20843 = !DILocation(line: 1200, column: 6, scope: !20524)
!20844 = !DILocation(line: 1202, column: 6, scope: !20524)
!20845 = !DILocation(line: 1203, column: 6, scope: !20524)
!20846 = !DILocation(line: 1204, column: 6, scope: !20524)
!20847 = !DILocation(line: 1206, column: 6, scope: !20524)
!20848 = !DILocation(line: 1207, column: 10, scope: !20524)
!20849 = !DILocation(line: 1207, column: 14, scope: !20524)
!20850 = !DILocation(line: 1207, column: 3, scope: !20524)
!20851 = !DILocation(line: 1208, column: 37, scope: !20524)
!20852 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !20547)
!20853 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !20547)
!20854 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !20547)
!20855 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !20547)
!20856 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !20547)
!20857 = !DILocation(line: 1209, column: 7, scope: !20858)
!20858 = distinct !DILexicalBlock(scope: !20524, file: !3, line: 1209, column: 7)
!20859 = !DILocation(line: 1209, column: 13, scope: !20858)
!20860 = !DILocation(line: 1209, column: 7, scope: !20524)
!20861 = !DILocation(line: 1211, column: 21, scope: !20858)
!20862 = !DILocation(line: 1210, column: 4, scope: !20858)
!20863 = !DILocation(line: 1216, column: 3, scope: !20524)
!20864 = !DILocation(line: 1216, column: 3, scope: !20545)
!20865 = !DILocalVariable(name: "__dummy", scope: !20866, file: !3, line: 1216, type: !317)
!20866 = distinct !DILexicalBlock(scope: !20544, file: !3, line: 1216, column: 3)
!20867 = !DILocation(line: 1216, column: 3, scope: !20866)
!20868 = !DILocalVariable(name: "__dummy2", scope: !20866, file: !3, line: 1216, type: !9457)
!20869 = !DILocation(line: 1216, column: 3, scope: !20544)
!20870 = !DILocation(line: 1216, column: 3, scope: !20543)
!20871 = !DILocation(line: 1216, column: 3, scope: !20872)
!20872 = distinct !DILexicalBlock(scope: !20543, file: !3, line: 1216, column: 3)
!20873 = !DILocalVariable(name: "__dummy", scope: !20874, file: !3, line: 1216, type: !317)
!20874 = distinct !DILexicalBlock(scope: !20875, file: !3, line: 1216, column: 3)
!20875 = distinct !DILexicalBlock(scope: !20872, file: !3, line: 1216, column: 3)
!20876 = !DILocation(line: 1216, column: 3, scope: !20874)
!20877 = !DILocalVariable(name: "__dummy2", scope: !20874, file: !3, line: 1216, type: !9457)
!20878 = !DILocation(line: 1216, column: 3, scope: !20875)
!20879 = !DILocation(line: 1216, column: 3, scope: !20542)
!20880 = !{i32 -2138094472}
!20881 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !20540)
!20882 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !20540)
!20883 = !DILocation(line: 1216, column: 3, scope: !20541)
!20884 = !DILocation(line: 1217, column: 13, scope: !20524)
!20885 = !DILocation(line: 1218, column: 15, scope: !20524)
!20886 = !DILocalVariable(name: "__mptr", scope: !20887, file: !3, line: 1219, type: !570)
!20887 = distinct !DILexicalBlock(scope: !20888, file: !3, line: 1219, column: 3)
!20888 = distinct !DILexicalBlock(scope: !20524, file: !3, line: 1219, column: 3)
!20889 = !DILocation(line: 1219, column: 3, scope: !20887)
!20890 = !DILocation(line: 1219, column: 3, scope: !20891)
!20891 = distinct !DILexicalBlock(scope: !20887, file: !3, line: 1219, column: 3)
!20892 = !DILocation(line: 1219, column: 3, scope: !20888)
!20893 = !DILocalVariable(name: "__mptr", scope: !20894, file: !3, line: 1219, type: !570)
!20894 = distinct !DILexicalBlock(scope: !20888, file: !3, line: 1219, column: 3)
!20895 = !DILocation(line: 1219, column: 3, scope: !20894)
!20896 = !DILocation(line: 1219, column: 3, scope: !20897)
!20897 = distinct !DILexicalBlock(scope: !20894, file: !3, line: 1219, column: 3)
!20898 = !DILocation(line: 1219, column: 3, scope: !20899)
!20899 = distinct !DILexicalBlock(scope: !20888, file: !3, line: 1219, column: 3)
!20900 = !DILocation(line: 1220, column: 34, scope: !20901)
!20901 = distinct !DILexicalBlock(scope: !20902, file: !3, line: 1220, column: 8)
!20902 = distinct !DILexicalBlock(scope: !20899, file: !3, line: 1219, column: 55)
!20903 = !DILocation(line: 1220, column: 39, scope: !20901)
!20904 = !DILocation(line: 1220, column: 8, scope: !20901)
!20905 = !DILocation(line: 1220, column: 8, scope: !20902)
!20906 = !DILocation(line: 1221, column: 14, scope: !20907)
!20907 = distinct !DILexicalBlock(scope: !20901, file: !3, line: 1220, column: 46)
!20908 = !DILocation(line: 1222, column: 9, scope: !20909)
!20909 = distinct !DILexicalBlock(scope: !20907, file: !3, line: 1222, column: 9)
!20910 = !DILocation(line: 1222, column: 16, scope: !20909)
!20911 = !DILocation(line: 1222, column: 13, scope: !20909)
!20912 = !DILocation(line: 1222, column: 9, scope: !20907)
!20913 = !DILocation(line: 1223, column: 20, scope: !20909)
!20914 = !DILocation(line: 1223, column: 18, scope: !20909)
!20915 = !DILocation(line: 1223, column: 6, scope: !20909)
!20916 = !DILocation(line: 1224, column: 4, scope: !20907)
!20917 = !DILocation(line: 1225, column: 3, scope: !20902)
!20918 = !DILocalVariable(name: "__mptr", scope: !20919, file: !3, line: 1219, type: !570)
!20919 = distinct !DILexicalBlock(scope: !20899, file: !3, line: 1219, column: 3)
!20920 = !DILocation(line: 1219, column: 3, scope: !20919)
!20921 = !DILocation(line: 1219, column: 3, scope: !20922)
!20922 = distinct !DILexicalBlock(scope: !20919, file: !3, line: 1219, column: 3)
!20923 = distinct !{!20923, !20892, !20924}
!20924 = !DILocation(line: 1225, column: 3, scope: !20888)
!20925 = !DILocation(line: 1226, column: 7, scope: !20530)
!20926 = !DILocation(line: 1226, column: 17, scope: !20530)
!20927 = !DILocation(line: 1226, column: 7, scope: !20524)
!20928 = !DILocation(line: 1227, column: 8, scope: !20929)
!20929 = distinct !DILexicalBlock(scope: !20529, file: !3, line: 1227, column: 8)
!20930 = !DILocation(line: 1227, column: 14, scope: !20929)
!20931 = !DILocation(line: 1227, column: 8, scope: !20529)
!20932 = !DILocation(line: 1230, column: 22, scope: !20929)
!20933 = !DILocation(line: 1230, column: 35, scope: !20929)
!20934 = !DILocation(line: 1230, column: 38, scope: !20929)
!20935 = !DILocation(line: 1228, column: 5, scope: !20929)
!20936 = !DILocation(line: 1231, column: 4, scope: !20529)
!20937 = !DILocation(line: 1231, column: 4, scope: !20538)
!20938 = !DILocalVariable(name: "__dummy", scope: !20939, file: !3, line: 1231, type: !317)
!20939 = distinct !DILexicalBlock(scope: !20537, file: !3, line: 1231, column: 4)
!20940 = !DILocation(line: 1231, column: 4, scope: !20939)
!20941 = !DILocalVariable(name: "__dummy2", scope: !20939, file: !3, line: 1231, type: !9457)
!20942 = !DILocation(line: 1231, column: 4, scope: !20537)
!20943 = !DILocation(line: 1231, column: 4, scope: !20536)
!20944 = !DILocation(line: 1231, column: 4, scope: !20945)
!20945 = distinct !DILexicalBlock(scope: !20536, file: !3, line: 1231, column: 4)
!20946 = !DILocalVariable(name: "__dummy", scope: !20947, file: !3, line: 1231, type: !317)
!20947 = distinct !DILexicalBlock(scope: !20948, file: !3, line: 1231, column: 4)
!20948 = distinct !DILexicalBlock(scope: !20945, file: !3, line: 1231, column: 4)
!20949 = !DILocation(line: 1231, column: 4, scope: !20947)
!20950 = !DILocalVariable(name: "__dummy2", scope: !20947, file: !3, line: 1231, type: !9457)
!20951 = !DILocation(line: 1231, column: 4, scope: !20948)
!20952 = !DILocation(line: 1231, column: 4, scope: !20535)
!20953 = !{i32 -2138087799}
!20954 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !20533)
!20955 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !20533)
!20956 = !DILocation(line: 1231, column: 4, scope: !20534)
!20957 = !DILocation(line: 1232, column: 17, scope: !20529)
!20958 = !DILocation(line: 1232, column: 30, scope: !20529)
!20959 = !DILocation(line: 1232, column: 42, scope: !20529)
!20960 = !DILocation(line: 1232, column: 15, scope: !20529)
!20961 = !DILocation(line: 1233, column: 15, scope: !20529)
!20962 = !DILocation(line: 1233, column: 9, scope: !20529)
!20963 = !DILocation(line: 1233, column: 7, scope: !20529)
!20964 = !DILocation(line: 1234, column: 7, scope: !20529)
!20965 = !DILocation(line: 1235, column: 11, scope: !20529)
!20966 = !DILocation(line: 1235, column: 15, scope: !20529)
!20967 = !DILocation(line: 1235, column: 4, scope: !20529)
!20968 = !DILocation(line: 1236, column: 38, scope: !20529)
!20969 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !20528)
!20970 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !20528)
!20971 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !20528)
!20972 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !20528)
!20973 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !20528)
!20974 = !DILocation(line: 1237, column: 8, scope: !20975)
!20975 = distinct !DILexicalBlock(scope: !20529, file: !3, line: 1237, column: 8)
!20976 = !DILocation(line: 1237, column: 14, scope: !20975)
!20977 = !DILocation(line: 1237, column: 8, scope: !20529)
!20978 = !DILocation(line: 1240, column: 22, scope: !20975)
!20979 = !DILocation(line: 1238, column: 5, scope: !20975)
!20980 = !DILocation(line: 1241, column: 3, scope: !20529)
!20981 = !DILocation(line: 1242, column: 36, scope: !20524)
!20982 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !20523)
!20983 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !20523)
!20984 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !20523)
!20985 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !20523)
!20986 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !20523)
!20987 = !DILocation(line: 1243, column: 3, scope: !20524)
!20988 = !DILocation(line: 1243, column: 7, scope: !20524)
!20989 = !DILocation(line: 1243, column: 10, scope: !20524)
!20990 = !DILocation(line: 1243, column: 20, scope: !20524)
!20991 = !DILocation(line: 1244, column: 2, scope: !20524)
!20992 = !DILocation(line: 1246, column: 32, scope: !20993)
!20993 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1246, column: 6)
!20994 = !DILocation(line: 1246, column: 36, scope: !20993)
!20995 = !DILocation(line: 1246, column: 6, scope: !20993)
!20996 = !DILocation(line: 1246, column: 6, scope: !20447)
!20997 = !DILocation(line: 1247, column: 3, scope: !20993)
!20998 = !DILocation(line: 1247, column: 7, scope: !20993)
!20999 = !DILocation(line: 1247, column: 10, scope: !20993)
!21000 = !DILocation(line: 1247, column: 20, scope: !20993)
!21001 = !DILocation(line: 1250, column: 37, scope: !21002)
!21002 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1250, column: 6)
!21003 = !DILocation(line: 1250, column: 41, scope: !21002)
!21004 = !DILocation(line: 1250, column: 7, scope: !21002)
!21005 = !DILocation(line: 1250, column: 6, scope: !20447)
!21006 = !DILocation(line: 1251, column: 3, scope: !21002)
!21007 = !DILocation(line: 1251, column: 7, scope: !21002)
!21008 = !DILocation(line: 1251, column: 10, scope: !21002)
!21009 = !DILocation(line: 1251, column: 19, scope: !21002)
!21010 = !DILocation(line: 1254, column: 36, scope: !21011)
!21011 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1254, column: 6)
!21012 = !DILocation(line: 1254, column: 40, scope: !21011)
!21013 = !DILocation(line: 1254, column: 6, scope: !21011)
!21014 = !DILocation(line: 1254, column: 6, scope: !20447)
!21015 = !DILocation(line: 1255, column: 7, scope: !21016)
!21016 = distinct !DILexicalBlock(scope: !21017, file: !3, line: 1255, column: 7)
!21017 = distinct !DILexicalBlock(scope: !21011, file: !3, line: 1254, column: 47)
!21018 = !DILocation(line: 1255, column: 13, scope: !21016)
!21019 = !DILocation(line: 1255, column: 7, scope: !21017)
!21020 = !DILocation(line: 1256, column: 4, scope: !21016)
!21021 = !DILocation(line: 1258, column: 2, scope: !21017)
!21022 = !DILocation(line: 1259, column: 38, scope: !21023)
!21023 = distinct !DILexicalBlock(scope: !21011, file: !3, line: 1259, column: 7)
!21024 = !DILocation(line: 1259, column: 42, scope: !21023)
!21025 = !DILocation(line: 1259, column: 7, scope: !21023)
!21026 = !DILocation(line: 1259, column: 48, scope: !21023)
!21027 = !DILocation(line: 1259, column: 52, scope: !21023)
!21028 = !DILocation(line: 1259, column: 7, scope: !21011)
!21029 = !DILocation(line: 1260, column: 8, scope: !21030)
!21030 = distinct !DILexicalBlock(scope: !21031, file: !3, line: 1260, column: 8)
!21031 = distinct !DILexicalBlock(scope: !21023, file: !3, line: 1259, column: 66)
!21032 = !DILocation(line: 1260, column: 14, scope: !21030)
!21033 = !DILocation(line: 1260, column: 8, scope: !21031)
!21034 = !DILocation(line: 1261, column: 5, scope: !21030)
!21035 = !DILocation(line: 1263, column: 4, scope: !21031)
!21036 = !DILocation(line: 1263, column: 8, scope: !21031)
!21037 = !DILocation(line: 1263, column: 11, scope: !21031)
!21038 = !DILocation(line: 1263, column: 21, scope: !21031)
!21039 = !DILocation(line: 1264, column: 3, scope: !21031)
!21040 = !DILocation(line: 1265, column: 8, scope: !21041)
!21041 = distinct !DILexicalBlock(scope: !21042, file: !3, line: 1265, column: 8)
!21042 = distinct !DILexicalBlock(scope: !21023, file: !3, line: 1264, column: 10)
!21043 = !DILocation(line: 1265, column: 14, scope: !21041)
!21044 = !DILocation(line: 1265, column: 8, scope: !21042)
!21045 = !DILocation(line: 1266, column: 5, scope: !21041)
!21046 = !DILocation(line: 1271, column: 2, scope: !20447)
!21047 = !DILocation(line: 1272, column: 6, scope: !21048)
!21048 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1272, column: 6)
!21049 = !DILocation(line: 1272, column: 10, scope: !21048)
!21050 = !DILocation(line: 1272, column: 16, scope: !21048)
!21051 = !DILocation(line: 1272, column: 6, scope: !20447)
!21052 = !DILocation(line: 1273, column: 3, scope: !21048)
!21053 = !DILocation(line: 1276, column: 3, scope: !21048)
!21054 = !DILocation(line: 1277, column: 2, scope: !20447)
!21055 = !DILocation(line: 1278, column: 6, scope: !21056)
!21056 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1278, column: 6)
!21057 = !DILocation(line: 1278, column: 10, scope: !21056)
!21058 = !DILocation(line: 1278, column: 16, scope: !21056)
!21059 = !DILocation(line: 1278, column: 6, scope: !20447)
!21060 = !DILocation(line: 1279, column: 3, scope: !21056)
!21061 = !DILocation(line: 1279, column: 7, scope: !21056)
!21062 = !DILocation(line: 1279, column: 10, scope: !21056)
!21063 = !DILocation(line: 1279, column: 17, scope: !21056)
!21064 = !DILocation(line: 1281, column: 3, scope: !21056)
!21065 = !DILocation(line: 1281, column: 7, scope: !21056)
!21066 = !DILocation(line: 1281, column: 10, scope: !21056)
!21067 = !DILocation(line: 1281, column: 17, scope: !21056)
!21068 = !DILocation(line: 1283, column: 2, scope: !20447)
!21069 = !DILocation(line: 1284, column: 2, scope: !21070)
!21070 = distinct !DILexicalBlock(scope: !21071, file: !3, line: 1284, column: 2)
!21071 = distinct !DILexicalBlock(scope: !21072, file: !3, line: 1284, column: 2)
!21072 = distinct !DILexicalBlock(scope: !21073, file: !3, line: 1284, column: 2)
!21073 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1284, column: 2)
!21074 = !DILocation(line: 1285, column: 2, scope: !20447)
!21075 = !DILocation(line: 1285, column: 6, scope: !20447)
!21076 = !DILocation(line: 1285, column: 9, scope: !20447)
!21077 = !DILocation(line: 1285, column: 16, scope: !20447)
!21078 = !DILocation(line: 1286, column: 2, scope: !20447)
!21079 = !DILocation(line: 1287, column: 2, scope: !21080)
!21080 = distinct !DILexicalBlock(scope: !21081, file: !3, line: 1287, column: 2)
!21081 = distinct !DILexicalBlock(scope: !21082, file: !3, line: 1287, column: 2)
!21082 = distinct !DILexicalBlock(scope: !21083, file: !3, line: 1287, column: 2)
!21083 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1287, column: 2)
!21084 = !DILocation(line: 1288, column: 6, scope: !21085)
!21085 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1288, column: 6)
!21086 = !DILocation(line: 1288, column: 10, scope: !21085)
!21087 = !DILocation(line: 1288, column: 16, scope: !21085)
!21088 = !DILocation(line: 1288, column: 6, scope: !20447)
!21089 = !DILocation(line: 1289, column: 3, scope: !21085)
!21090 = !DILocation(line: 1292, column: 32, scope: !20513)
!21091 = !DILocation(line: 1292, column: 36, scope: !20513)
!21092 = !DILocation(line: 1292, column: 6, scope: !20513)
!21093 = !DILocation(line: 1292, column: 6, scope: !20447)
!21094 = !DILocation(line: 1293, column: 3, scope: !20512)
!21095 = !DILocation(line: 1293, column: 3, scope: !20521)
!21096 = !DILocalVariable(name: "__dummy", scope: !21097, file: !3, line: 1293, type: !317)
!21097 = distinct !DILexicalBlock(scope: !20520, file: !3, line: 1293, column: 3)
!21098 = !DILocation(line: 1293, column: 3, scope: !21097)
!21099 = !DILocalVariable(name: "__dummy2", scope: !21097, file: !3, line: 1293, type: !9457)
!21100 = !DILocation(line: 1293, column: 3, scope: !20520)
!21101 = !DILocation(line: 1293, column: 3, scope: !20519)
!21102 = !DILocation(line: 1293, column: 3, scope: !21103)
!21103 = distinct !DILexicalBlock(scope: !20519, file: !3, line: 1293, column: 3)
!21104 = !DILocalVariable(name: "__dummy", scope: !21105, file: !3, line: 1293, type: !317)
!21105 = distinct !DILexicalBlock(scope: !21106, file: !3, line: 1293, column: 3)
!21106 = distinct !DILexicalBlock(scope: !21103, file: !3, line: 1293, column: 3)
!21107 = !DILocation(line: 1293, column: 3, scope: !21105)
!21108 = !DILocalVariable(name: "__dummy2", scope: !21105, file: !3, line: 1293, type: !9457)
!21109 = !DILocation(line: 1293, column: 3, scope: !21106)
!21110 = !DILocation(line: 1293, column: 3, scope: !20518)
!21111 = !{i32 -2138085642}
!21112 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !20516)
!21113 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !20516)
!21114 = !DILocation(line: 1293, column: 3, scope: !20517)
!21115 = !DILocation(line: 1294, column: 16, scope: !20512)
!21116 = !DILocation(line: 1294, column: 20, scope: !20512)
!21117 = !DILocation(line: 1294, column: 32, scope: !20512)
!21118 = !DILocation(line: 1294, column: 14, scope: !20512)
!21119 = !DILocation(line: 1295, column: 14, scope: !20512)
!21120 = !DILocation(line: 1295, column: 8, scope: !20512)
!21121 = !DILocation(line: 1295, column: 6, scope: !20512)
!21122 = !DILocation(line: 1297, column: 7, scope: !21123)
!21123 = distinct !DILexicalBlock(scope: !20512, file: !3, line: 1297, column: 7)
!21124 = !DILocation(line: 1297, column: 11, scope: !21123)
!21125 = !DILocation(line: 1297, column: 14, scope: !21123)
!21126 = !DILocation(line: 1297, column: 24, scope: !21123)
!21127 = !DILocation(line: 1297, column: 7, scope: !20512)
!21128 = !DILocation(line: 1298, column: 7, scope: !21129)
!21129 = distinct !DILexicalBlock(scope: !21123, file: !3, line: 1297, column: 36)
!21130 = !DILocation(line: 1299, column: 7, scope: !21129)
!21131 = !DILocation(line: 1300, column: 8, scope: !21132)
!21132 = distinct !DILexicalBlock(scope: !21129, file: !3, line: 1300, column: 8)
!21133 = !DILocation(line: 1300, column: 14, scope: !21132)
!21134 = !DILocation(line: 1300, column: 8, scope: !21129)
!21135 = !DILocation(line: 1302, column: 22, scope: !21132)
!21136 = !DILocation(line: 1301, column: 5, scope: !21132)
!21137 = !DILocation(line: 1303, column: 3, scope: !21129)
!21138 = !DILocation(line: 1304, column: 7, scope: !21139)
!21139 = distinct !DILexicalBlock(scope: !21123, file: !3, line: 1303, column: 10)
!21140 = !DILocation(line: 1305, column: 7, scope: !21139)
!21141 = !DILocation(line: 1306, column: 8, scope: !21142)
!21142 = distinct !DILexicalBlock(scope: !21139, file: !3, line: 1306, column: 8)
!21143 = !DILocation(line: 1306, column: 14, scope: !21142)
!21144 = !DILocation(line: 1306, column: 8, scope: !21139)
!21145 = !DILocation(line: 1308, column: 22, scope: !21142)
!21146 = !DILocation(line: 1307, column: 5, scope: !21142)
!21147 = !DILocation(line: 1310, column: 10, scope: !20512)
!21148 = !DILocation(line: 1310, column: 14, scope: !20512)
!21149 = !DILocation(line: 1310, column: 3, scope: !20512)
!21150 = !DILocation(line: 1311, column: 37, scope: !20512)
!21151 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !20511)
!21152 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !20511)
!21153 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !20511)
!21154 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !20511)
!21155 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !20511)
!21156 = !DILocation(line: 1312, column: 2, scope: !20512)
!21157 = !DILocation(line: 1315, column: 2, scope: !20447)
!21158 = !DILocation(line: 1316, column: 6, scope: !21159)
!21159 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1316, column: 6)
!21160 = !DILocation(line: 1316, column: 10, scope: !21159)
!21161 = !DILocation(line: 1316, column: 16, scope: !21159)
!21162 = !DILocation(line: 1316, column: 6, scope: !20447)
!21163 = !DILocation(line: 1317, column: 3, scope: !21159)
!21164 = !DILocation(line: 1318, column: 6, scope: !21165)
!21165 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1318, column: 6)
!21166 = !DILocation(line: 1318, column: 10, scope: !21165)
!21167 = !DILocation(line: 1318, column: 16, scope: !21165)
!21168 = !DILocation(line: 1318, column: 6, scope: !20447)
!21169 = !DILocation(line: 1319, column: 3, scope: !21165)
!21170 = !DILocation(line: 1320, column: 6, scope: !21171)
!21171 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1320, column: 6)
!21172 = !DILocation(line: 1320, column: 10, scope: !21171)
!21173 = !DILocation(line: 1320, column: 16, scope: !21171)
!21174 = !DILocation(line: 1320, column: 6, scope: !20447)
!21175 = !DILocation(line: 1321, column: 3, scope: !21171)
!21176 = !DILocation(line: 1322, column: 2, scope: !20447)
!21177 = !DILocation(line: 1323, column: 32, scope: !21178)
!21178 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1323, column: 6)
!21179 = !DILocation(line: 1323, column: 36, scope: !21178)
!21180 = !DILocation(line: 1323, column: 6, scope: !21178)
!21181 = !DILocation(line: 1323, column: 6, scope: !20447)
!21182 = !DILocation(line: 1324, column: 3, scope: !21178)
!21183 = !DILocation(line: 1325, column: 37, scope: !21184)
!21184 = distinct !DILexicalBlock(scope: !21178, file: !3, line: 1325, column: 11)
!21185 = !DILocation(line: 1325, column: 41, scope: !21184)
!21186 = !DILocation(line: 1325, column: 11, scope: !21184)
!21187 = !DILocation(line: 1325, column: 11, scope: !21178)
!21188 = !DILocation(line: 1326, column: 3, scope: !21184)
!21189 = !DILocation(line: 1328, column: 3, scope: !21184)
!21190 = !DILocation(line: 1329, column: 2, scope: !20447)
!21191 = !DILocation(line: 1330, column: 9, scope: !21192)
!21192 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1330, column: 2)
!21193 = !DILocation(line: 1330, column: 7, scope: !21192)
!21194 = !DILocation(line: 1330, column: 14, scope: !21195)
!21195 = distinct !DILexicalBlock(scope: !21192, file: !3, line: 1330, column: 2)
!21196 = !DILocation(line: 1330, column: 16, scope: !21195)
!21197 = !DILocation(line: 1330, column: 2, scope: !21192)
!21198 = !DILocation(line: 1331, column: 3, scope: !21199)
!21199 = distinct !DILexicalBlock(scope: !21195, file: !3, line: 1330, column: 28)
!21200 = !DILocation(line: 1332, column: 3, scope: !21199)
!21201 = !DILocation(line: 1333, column: 7, scope: !21202)
!21202 = distinct !DILexicalBlock(scope: !21199, file: !3, line: 1333, column: 7)
!21203 = !DILocation(line: 1333, column: 11, scope: !21202)
!21204 = !DILocation(line: 1333, column: 17, scope: !21202)
!21205 = !DILocation(line: 1333, column: 7, scope: !21199)
!21206 = !DILocation(line: 1334, column: 4, scope: !21202)
!21207 = !DILocation(line: 1335, column: 3, scope: !21199)
!21208 = !DILocation(line: 1335, column: 7, scope: !21199)
!21209 = !DILocation(line: 1335, column: 18, scope: !21199)
!21210 = !DILocation(line: 1335, column: 21, scope: !21199)
!21211 = !DILocation(line: 1336, column: 2, scope: !21199)
!21212 = !DILocation(line: 1330, column: 24, scope: !21195)
!21213 = !DILocation(line: 1330, column: 2, scope: !21195)
!21214 = distinct !{!21214, !21197, !21215}
!21215 = !DILocation(line: 1336, column: 2, scope: !21192)
!21216 = !DILocation(line: 1339, column: 33, scope: !21217)
!21217 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1339, column: 6)
!21218 = !DILocation(line: 1339, column: 37, scope: !21217)
!21219 = !DILocation(line: 1339, column: 6, scope: !21217)
!21220 = !DILocation(line: 1339, column: 6, scope: !20447)
!21221 = !DILocation(line: 1340, column: 7, scope: !21222)
!21222 = distinct !DILexicalBlock(scope: !21223, file: !3, line: 1340, column: 7)
!21223 = distinct !DILexicalBlock(scope: !21217, file: !3, line: 1339, column: 44)
!21224 = !DILocation(line: 1340, column: 13, scope: !21222)
!21225 = !DILocation(line: 1340, column: 7, scope: !21223)
!21226 = !DILocation(line: 1341, column: 4, scope: !21222)
!21227 = !DILocation(line: 1343, column: 3, scope: !21223)
!21228 = !DILocation(line: 1344, column: 2, scope: !21223)
!21229 = !DILocation(line: 1346, column: 32, scope: !21230)
!21230 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1346, column: 6)
!21231 = !DILocation(line: 1346, column: 36, scope: !21230)
!21232 = !DILocation(line: 1346, column: 6, scope: !21230)
!21233 = !DILocation(line: 1346, column: 6, scope: !20447)
!21234 = !DILocation(line: 1347, column: 3, scope: !21230)
!21235 = !DILocation(line: 1350, column: 32, scope: !21236)
!21236 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1350, column: 6)
!21237 = !DILocation(line: 1350, column: 36, scope: !21236)
!21238 = !DILocation(line: 1350, column: 6, scope: !21236)
!21239 = !DILocation(line: 1350, column: 6, scope: !20447)
!21240 = !DILocation(line: 1351, column: 3, scope: !21241)
!21241 = distinct !DILexicalBlock(scope: !21236, file: !3, line: 1350, column: 43)
!21242 = !DILocation(line: 1352, column: 3, scope: !21241)
!21243 = !DILocation(line: 1353, column: 3, scope: !21241)
!21244 = !DILocation(line: 1354, column: 3, scope: !21245)
!21245 = distinct !DILexicalBlock(scope: !21246, file: !3, line: 1354, column: 3)
!21246 = distinct !DILexicalBlock(scope: !21247, file: !3, line: 1354, column: 3)
!21247 = distinct !DILexicalBlock(scope: !21248, file: !3, line: 1354, column: 3)
!21248 = distinct !DILexicalBlock(scope: !21241, file: !3, line: 1354, column: 3)
!21249 = !DILocation(line: 1355, column: 3, scope: !21241)
!21250 = !DILocation(line: 1356, column: 12, scope: !21241)
!21251 = !DILocation(line: 1356, column: 3, scope: !21241)
!21252 = !DILocation(line: 1357, column: 2, scope: !21241)
!21253 = !DILocation(line: 1360, column: 8, scope: !20447)
!21254 = !DILocation(line: 1360, column: 6, scope: !20447)
!21255 = !DILocation(line: 1361, column: 9, scope: !20447)
!21256 = !DILocation(line: 1361, column: 32, scope: !20447)
!21257 = !DILocation(line: 1361, column: 6, scope: !20447)
!21258 = !DILocation(line: 1362, column: 6, scope: !21259)
!21259 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1362, column: 6)
!21260 = !DILocation(line: 1362, column: 12, scope: !21259)
!21261 = !DILocation(line: 1362, column: 6, scope: !20447)
!21262 = !DILocation(line: 1364, column: 48, scope: !21259)
!21263 = !DILocation(line: 1363, column: 3, scope: !21259)
!21264 = !DILocation(line: 1365, column: 26, scope: !20447)
!21265 = !DILocation(line: 1365, column: 30, scope: !20447)
!21266 = !DILocation(line: 1365, column: 36, scope: !20447)
!21267 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !20508)
!21268 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !20508)
!21269 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !20508)
!21270 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !20508)
!21271 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !20508)
!21272 = !DILocation(line: 1366, column: 2, scope: !20447)
!21273 = !DILocation(line: 1366, column: 2, scope: !20504)
!21274 = !DILocation(line: 1366, column: 2, scope: !20503)
!21275 = !DILocation(line: 1366, column: 2, scope: !21276)
!21276 = distinct !DILexicalBlock(scope: !20503, file: !3, line: 1366, column: 2)
!21277 = !DILocation(line: 1366, column: 2, scope: !20502)
!21278 = !{i32 -2138082279}
!21279 = !DILocation(line: 1367, column: 2, scope: !20447)
!21280 = !DILocation(line: 1368, column: 2, scope: !20447)
!21281 = !DILocation(line: 1368, column: 2, scope: !20499)
!21282 = !DILocalVariable(name: "__dummy", scope: !21283, file: !3, line: 1368, type: !317)
!21283 = distinct !DILexicalBlock(scope: !20498, file: !3, line: 1368, column: 2)
!21284 = !DILocation(line: 1368, column: 2, scope: !21283)
!21285 = !DILocalVariable(name: "__dummy2", scope: !21283, file: !3, line: 1368, type: !9457)
!21286 = !DILocation(line: 1368, column: 2, scope: !20498)
!21287 = !DILocation(line: 1368, column: 2, scope: !20497)
!21288 = !DILocation(line: 1368, column: 2, scope: !21289)
!21289 = distinct !DILexicalBlock(scope: !20497, file: !3, line: 1368, column: 2)
!21290 = !DILocalVariable(name: "__dummy", scope: !21291, file: !3, line: 1368, type: !317)
!21291 = distinct !DILexicalBlock(scope: !21292, file: !3, line: 1368, column: 2)
!21292 = distinct !DILexicalBlock(scope: !21289, file: !3, line: 1368, column: 2)
!21293 = !DILocation(line: 1368, column: 2, scope: !21291)
!21294 = !DILocalVariable(name: "__dummy2", scope: !21291, file: !3, line: 1368, type: !9457)
!21295 = !DILocation(line: 1368, column: 2, scope: !21292)
!21296 = !DILocation(line: 1368, column: 2, scope: !20496)
!21297 = !{i32 -2138081372}
!21298 = !DILocation(line: 1368, column: 2, scope: !20495)
!21299 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !20494)
!21300 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !20494)
!21301 = !DILocation(line: 1369, column: 9, scope: !20447)
!21302 = !DILocation(line: 1369, column: 7, scope: !20447)
!21303 = !DILocation(line: 1370, column: 10, scope: !20447)
!21304 = !DILocation(line: 1370, column: 33, scope: !20447)
!21305 = !DILocation(line: 1370, column: 7, scope: !20447)
!21306 = !DILocation(line: 1371, column: 6, scope: !21307)
!21307 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1371, column: 6)
!21308 = !DILocation(line: 1371, column: 12, scope: !21307)
!21309 = !DILocation(line: 1371, column: 6, scope: !20447)
!21310 = !DILocation(line: 1374, column: 10, scope: !21307)
!21311 = !DILocation(line: 1372, column: 3, scope: !21307)
!21312 = !DILocation(line: 1375, column: 6, scope: !20470)
!21313 = !DILocation(line: 1375, column: 14, scope: !20470)
!21314 = !DILocation(line: 1375, column: 18, scope: !20470)
!21315 = !DILocation(line: 1375, column: 11, scope: !20470)
!21316 = !DILocation(line: 1375, column: 6, scope: !20447)
!21317 = !DILocation(line: 1377, column: 38, scope: !21318)
!21318 = distinct !DILexicalBlock(scope: !21319, file: !3, line: 1377, column: 7)
!21319 = distinct !DILexicalBlock(scope: !20470, file: !3, line: 1375, column: 23)
!21320 = !DILocation(line: 1377, column: 42, scope: !21318)
!21321 = !DILocation(line: 1377, column: 7, scope: !21318)
!21322 = !DILocation(line: 1377, column: 7, scope: !21319)
!21323 = !DILocation(line: 1378, column: 4, scope: !21318)
!21324 = !DILocation(line: 1380, column: 38, scope: !21325)
!21325 = distinct !DILexicalBlock(scope: !21318, file: !3, line: 1380, column: 8)
!21326 = !DILocation(line: 1380, column: 42, scope: !21325)
!21327 = !DILocation(line: 1380, column: 8, scope: !21325)
!21328 = !DILocation(line: 1380, column: 8, scope: !21318)
!21329 = !DILocation(line: 1381, column: 5, scope: !21325)
!21330 = !DILocation(line: 1383, column: 43, scope: !21331)
!21331 = distinct !DILexicalBlock(scope: !21325, file: !3, line: 1382, column: 9)
!21332 = !DILocation(line: 1383, column: 47, scope: !21331)
!21333 = !DILocation(line: 1383, column: 5, scope: !21331)
!21334 = !DILocation(line: 1384, column: 5, scope: !21331)
!21335 = !DILocation(line: 1387, column: 2, scope: !21319)
!21336 = !DILocation(line: 1389, column: 38, scope: !21337)
!21337 = distinct !DILexicalBlock(scope: !20469, file: !3, line: 1389, column: 7)
!21338 = !DILocation(line: 1389, column: 42, scope: !21337)
!21339 = !DILocation(line: 1389, column: 7, scope: !21337)
!21340 = !DILocation(line: 1389, column: 7, scope: !20469)
!21341 = !DILocation(line: 1389, column: 49, scope: !21337)
!21342 = !DILabel(scope: !21343, name: "controller_fail", file: !3, line: 1390)
!21343 = distinct !DILexicalBlock(scope: !21337, file: !3, line: 1389, column: 49)
!21344 = !DILocation(line: 1390, column: 3, scope: !21343)
!21345 = !DILocation(line: 1391, column: 4, scope: !21343)
!21346 = !DILocation(line: 1393, column: 8, scope: !21343)
!21347 = !DILocation(line: 1394, column: 4, scope: !21343)
!21348 = !DILocation(line: 1396, column: 37, scope: !20468)
!21349 = !DILocation(line: 1396, column: 41, scope: !20468)
!21350 = !DILocation(line: 1396, column: 7, scope: !20468)
!21351 = !DILocation(line: 1396, column: 7, scope: !20469)
!21352 = !DILocation(line: 1397, column: 4, scope: !21353)
!21353 = distinct !DILexicalBlock(scope: !20468, file: !3, line: 1396, column: 48)
!21354 = !DILocation(line: 1399, column: 3, scope: !21353)
!21355 = !DILocation(line: 1401, column: 34, scope: !21356)
!21356 = distinct !DILexicalBlock(scope: !20467, file: !3, line: 1401, column: 8)
!21357 = !DILocation(line: 1401, column: 38, scope: !21356)
!21358 = !DILocation(line: 1401, column: 8, scope: !21356)
!21359 = !DILocation(line: 1402, column: 8, scope: !21356)
!21360 = !DILocation(line: 1402, column: 11, scope: !21356)
!21361 = !DILocation(line: 1401, column: 8, scope: !20467)
!21362 = !DILocation(line: 1403, column: 5, scope: !21363)
!21363 = distinct !DILexicalBlock(scope: !21356, file: !3, line: 1402, column: 25)
!21364 = !DILocation(line: 1406, column: 9, scope: !21363)
!21365 = !DILocation(line: 1407, column: 5, scope: !21363)
!21366 = !DILocation(line: 1410, column: 34, scope: !20484)
!21367 = !DILocation(line: 1410, column: 38, scope: !20484)
!21368 = !DILocation(line: 1410, column: 8, scope: !20484)
!21369 = !DILocation(line: 1410, column: 8, scope: !20467)
!21370 = !DILocation(line: 1411, column: 5, scope: !20483)
!21371 = !DILocation(line: 1411, column: 5, scope: !20492)
!21372 = !DILocalVariable(name: "__dummy", scope: !21373, file: !3, line: 1411, type: !317)
!21373 = distinct !DILexicalBlock(scope: !20491, file: !3, line: 1411, column: 5)
!21374 = !DILocation(line: 1411, column: 5, scope: !21373)
!21375 = !DILocalVariable(name: "__dummy2", scope: !21373, file: !3, line: 1411, type: !9457)
!21376 = !DILocation(line: 1411, column: 5, scope: !20491)
!21377 = !DILocation(line: 1411, column: 5, scope: !20490)
!21378 = !DILocation(line: 1411, column: 5, scope: !21379)
!21379 = distinct !DILexicalBlock(scope: !20490, file: !3, line: 1411, column: 5)
!21380 = !DILocalVariable(name: "__dummy", scope: !21381, file: !3, line: 1411, type: !317)
!21381 = distinct !DILexicalBlock(scope: !21382, file: !3, line: 1411, column: 5)
!21382 = distinct !DILexicalBlock(scope: !21379, file: !3, line: 1411, column: 5)
!21383 = !DILocation(line: 1411, column: 5, scope: !21381)
!21384 = !DILocalVariable(name: "__dummy2", scope: !21381, file: !3, line: 1411, type: !9457)
!21385 = !DILocation(line: 1411, column: 5, scope: !21382)
!21386 = !DILocation(line: 1411, column: 5, scope: !20489)
!21387 = !{i32 -2138080078}
!21388 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !20487)
!21389 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !20487)
!21390 = !DILocation(line: 1411, column: 5, scope: !20488)
!21391 = !DILocation(line: 1412, column: 18, scope: !20483)
!21392 = !DILocation(line: 1412, column: 22, scope: !20483)
!21393 = !DILocation(line: 1412, column: 34, scope: !20483)
!21394 = !DILocation(line: 1412, column: 16, scope: !20483)
!21395 = !DILocation(line: 1413, column: 16, scope: !20483)
!21396 = !DILocation(line: 1413, column: 10, scope: !20483)
!21397 = !DILocation(line: 1413, column: 8, scope: !20483)
!21398 = !DILocation(line: 1414, column: 8, scope: !20483)
!21399 = !DILocation(line: 1415, column: 8, scope: !20483)
!21400 = !DILocation(line: 1416, column: 12, scope: !20483)
!21401 = !DILocation(line: 1416, column: 16, scope: !20483)
!21402 = !DILocation(line: 1416, column: 5, scope: !20483)
!21403 = !DILocation(line: 1417, column: 39, scope: !20483)
!21404 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !20482)
!21405 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !20482)
!21406 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !20482)
!21407 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !20482)
!21408 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !20482)
!21409 = !DILocation(line: 1418, column: 9, scope: !21410)
!21410 = distinct !DILexicalBlock(scope: !20483, file: !3, line: 1418, column: 9)
!21411 = !DILocation(line: 1418, column: 15, scope: !21410)
!21412 = !DILocation(line: 1418, column: 9, scope: !20483)
!21413 = !DILocation(line: 1420, column: 40, scope: !21410)
!21414 = !DILocation(line: 1419, column: 6, scope: !21410)
!21415 = !DILocation(line: 1421, column: 4, scope: !20483)
!21416 = !DILocation(line: 1422, column: 4, scope: !20467)
!21417 = !DILocation(line: 1422, column: 8, scope: !20467)
!21418 = !DILocation(line: 1422, column: 11, scope: !20467)
!21419 = !DILocation(line: 1422, column: 21, scope: !20467)
!21420 = !DILocation(line: 1423, column: 4, scope: !20467)
!21421 = !DILocation(line: 1424, column: 28, scope: !20467)
!21422 = !DILocation(line: 1424, column: 32, scope: !20467)
!21423 = !DILocation(line: 1424, column: 38, scope: !20467)
!21424 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !20479)
!21425 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !20479)
!21426 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !20479)
!21427 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !20479)
!21428 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !20479)
!21429 = !DILocation(line: 1425, column: 4, scope: !20467)
!21430 = !DILocation(line: 1425, column: 4, scope: !20475)
!21431 = !DILocation(line: 1425, column: 4, scope: !20474)
!21432 = !DILocation(line: 1425, column: 4, scope: !21433)
!21433 = distinct !DILexicalBlock(scope: !20474, file: !3, line: 1425, column: 4)
!21434 = !DILocation(line: 1425, column: 4, scope: !20473)
!21435 = !{i32 -2138078086}
!21436 = !DILocation(line: 1426, column: 4, scope: !20467)
!21437 = !DILocation(line: 1427, column: 4, scope: !20467)
!21438 = !DILocation(line: 1427, column: 4, scope: !20466)
!21439 = !DILocalVariable(name: "__dummy", scope: !21440, file: !3, line: 1427, type: !317)
!21440 = distinct !DILexicalBlock(scope: !20465, file: !3, line: 1427, column: 4)
!21441 = !DILocation(line: 1427, column: 4, scope: !21440)
!21442 = !DILocalVariable(name: "__dummy2", scope: !21440, file: !3, line: 1427, type: !9457)
!21443 = !DILocation(line: 1427, column: 4, scope: !20465)
!21444 = !DILocation(line: 1427, column: 4, scope: !20464)
!21445 = !DILocation(line: 1427, column: 4, scope: !21446)
!21446 = distinct !DILexicalBlock(scope: !20464, file: !3, line: 1427, column: 4)
!21447 = !DILocalVariable(name: "__dummy", scope: !21448, file: !3, line: 1427, type: !317)
!21448 = distinct !DILexicalBlock(scope: !21449, file: !3, line: 1427, column: 4)
!21449 = distinct !DILexicalBlock(scope: !21446, file: !3, line: 1427, column: 4)
!21450 = !DILocation(line: 1427, column: 4, scope: !21448)
!21451 = !DILocalVariable(name: "__dummy2", scope: !21448, file: !3, line: 1427, type: !9457)
!21452 = !DILocation(line: 1427, column: 4, scope: !21449)
!21453 = !DILocation(line: 1427, column: 4, scope: !20463)
!21454 = !{i32 -2138077179}
!21455 = !DILocation(line: 1427, column: 4, scope: !20462)
!21456 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !20461)
!21457 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !20461)
!21458 = !DILocation(line: 1428, column: 11, scope: !20467)
!21459 = !DILocation(line: 1428, column: 9, scope: !20467)
!21460 = !DILocation(line: 1429, column: 12, scope: !20467)
!21461 = !DILocation(line: 1429, column: 35, scope: !20467)
!21462 = !DILocation(line: 1429, column: 9, scope: !20467)
!21463 = !DILocation(line: 1430, column: 8, scope: !21464)
!21464 = distinct !DILexicalBlock(scope: !20467, file: !3, line: 1430, column: 8)
!21465 = !DILocation(line: 1430, column: 14, scope: !21464)
!21466 = !DILocation(line: 1430, column: 8, scope: !20467)
!21467 = !DILocation(line: 1432, column: 33, scope: !21464)
!21468 = !DILocation(line: 1431, column: 5, scope: !21464)
!21469 = !DILocation(line: 1433, column: 8, scope: !21470)
!21470 = distinct !DILexicalBlock(scope: !20467, file: !3, line: 1433, column: 8)
!21471 = !DILocation(line: 1433, column: 16, scope: !21470)
!21472 = !DILocation(line: 1433, column: 20, scope: !21470)
!21473 = !DILocation(line: 1433, column: 13, scope: !21470)
!21474 = !DILocation(line: 1433, column: 8, scope: !20467)
!21475 = !DILocation(line: 1435, column: 9, scope: !21476)
!21476 = distinct !DILexicalBlock(scope: !21470, file: !3, line: 1433, column: 25)
!21477 = !DILocation(line: 1435, column: 13, scope: !21476)
!21478 = !DILocation(line: 1434, column: 5, scope: !21476)
!21479 = !DILocation(line: 1436, column: 5, scope: !21476)
!21480 = !DILocation(line: 1438, column: 4, scope: !21476)
!21481 = !DILocation(line: 1439, column: 5, scope: !21470)
!21482 = !DILocation(line: 1444, column: 32, scope: !20451)
!21483 = !DILocation(line: 1444, column: 36, scope: !20451)
!21484 = !DILocation(line: 1444, column: 6, scope: !20451)
!21485 = !DILocation(line: 1444, column: 6, scope: !20447)
!21486 = !DILocation(line: 1445, column: 38, scope: !21487)
!21487 = distinct !DILexicalBlock(scope: !20450, file: !3, line: 1445, column: 7)
!21488 = !DILocation(line: 1445, column: 42, scope: !21487)
!21489 = !DILocation(line: 1445, column: 7, scope: !21487)
!21490 = !DILocation(line: 1445, column: 7, scope: !20450)
!21491 = !DILocation(line: 1446, column: 17, scope: !21487)
!21492 = !DILocation(line: 1446, column: 4, scope: !21487)
!21493 = !DILocation(line: 1447, column: 3, scope: !20450)
!21494 = !DILocation(line: 1447, column: 3, scope: !20459)
!21495 = !DILocalVariable(name: "__dummy", scope: !21496, file: !3, line: 1447, type: !317)
!21496 = distinct !DILexicalBlock(scope: !20458, file: !3, line: 1447, column: 3)
!21497 = !DILocation(line: 1447, column: 3, scope: !21496)
!21498 = !DILocalVariable(name: "__dummy2", scope: !21496, file: !3, line: 1447, type: !9457)
!21499 = !DILocation(line: 1447, column: 3, scope: !20458)
!21500 = !DILocation(line: 1447, column: 3, scope: !20457)
!21501 = !DILocation(line: 1447, column: 3, scope: !21502)
!21502 = distinct !DILexicalBlock(scope: !20457, file: !3, line: 1447, column: 3)
!21503 = !DILocalVariable(name: "__dummy", scope: !21504, file: !3, line: 1447, type: !317)
!21504 = distinct !DILexicalBlock(scope: !21505, file: !3, line: 1447, column: 3)
!21505 = distinct !DILexicalBlock(scope: !21502, file: !3, line: 1447, column: 3)
!21506 = !DILocation(line: 1447, column: 3, scope: !21504)
!21507 = !DILocalVariable(name: "__dummy2", scope: !21504, file: !3, line: 1447, type: !9457)
!21508 = !DILocation(line: 1447, column: 3, scope: !21505)
!21509 = !DILocation(line: 1447, column: 3, scope: !20456)
!21510 = !{i32 -2138075998}
!21511 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !20454)
!21512 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !20454)
!21513 = !DILocation(line: 1447, column: 3, scope: !20455)
!21514 = !DILocation(line: 1448, column: 16, scope: !20450)
!21515 = !DILocation(line: 1448, column: 20, scope: !20450)
!21516 = !DILocation(line: 1448, column: 32, scope: !20450)
!21517 = !DILocation(line: 1448, column: 14, scope: !20450)
!21518 = !DILocation(line: 1449, column: 14, scope: !20450)
!21519 = !DILocation(line: 1449, column: 8, scope: !20450)
!21520 = !DILocation(line: 1449, column: 6, scope: !20450)
!21521 = !DILocation(line: 1450, column: 6, scope: !20450)
!21522 = !DILocation(line: 1451, column: 10, scope: !20450)
!21523 = !DILocation(line: 1451, column: 14, scope: !20450)
!21524 = !DILocation(line: 1451, column: 3, scope: !20450)
!21525 = !DILocation(line: 1452, column: 37, scope: !20450)
!21526 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !20449)
!21527 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !20449)
!21528 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !20449)
!21529 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !20449)
!21530 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !20449)
!21531 = !DILocation(line: 1453, column: 7, scope: !21532)
!21532 = distinct !DILexicalBlock(scope: !20450, file: !3, line: 1453, column: 7)
!21533 = !DILocation(line: 1453, column: 13, scope: !21532)
!21534 = !DILocation(line: 1453, column: 7, scope: !20450)
!21535 = !DILocation(line: 1455, column: 21, scope: !21532)
!21536 = !DILocation(line: 1454, column: 4, scope: !21532)
!21537 = !DILocation(line: 1456, column: 2, scope: !20450)
!21538 = !DILocation(line: 1459, column: 6, scope: !21539)
!21539 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1459, column: 6)
!21540 = !DILocation(line: 1459, column: 10, scope: !21539)
!21541 = !DILocation(line: 1459, column: 6, scope: !20447)
!21542 = !DILocation(line: 1461, column: 10, scope: !21539)
!21543 = !DILocation(line: 1461, column: 14, scope: !21539)
!21544 = !DILocation(line: 1460, column: 3, scope: !21539)
!21545 = !DILocation(line: 1463, column: 38, scope: !21546)
!21546 = distinct !DILexicalBlock(scope: !21547, file: !3, line: 1463, column: 7)
!21547 = distinct !DILexicalBlock(scope: !21539, file: !3, line: 1462, column: 7)
!21548 = !DILocation(line: 1463, column: 42, scope: !21546)
!21549 = !DILocation(line: 1463, column: 7, scope: !21546)
!21550 = !DILocation(line: 1464, column: 7, scope: !21546)
!21551 = !DILocation(line: 1464, column: 36, scope: !21546)
!21552 = !DILocation(line: 1464, column: 40, scope: !21546)
!21553 = !DILocation(line: 1464, column: 10, scope: !21546)
!21554 = !DILocation(line: 1463, column: 7, scope: !21547)
!21555 = !DILocation(line: 1465, column: 11, scope: !21556)
!21556 = distinct !DILexicalBlock(scope: !21546, file: !3, line: 1464, column: 47)
!21557 = !DILocation(line: 1466, column: 3, scope: !21556)
!21558 = !DILocation(line: 1467, column: 13, scope: !21547)
!21559 = !DILocation(line: 1467, column: 3, scope: !21547)
!21560 = !DILocation(line: 1467, column: 7, scope: !21547)
!21561 = !DILocation(line: 1467, column: 11, scope: !21547)
!21562 = !DILocation(line: 1469, column: 31, scope: !21547)
!21563 = !DILocation(line: 1469, column: 35, scope: !21547)
!21564 = !DILocation(line: 1468, column: 3, scope: !21547)
!21565 = !DILocation(line: 1473, column: 2, scope: !20447)
!21566 = !DILocation(line: 1474, column: 2, scope: !20447)
!21567 = !DILocation(line: 1474, column: 6, scope: !20447)
!21568 = !DILocation(line: 1474, column: 9, scope: !20447)
!21569 = !DILocation(line: 1474, column: 23, scope: !20447)
!21570 = !DILocation(line: 1477, column: 6, scope: !21571)
!21571 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1477, column: 6)
!21572 = !DILocation(line: 1477, column: 10, scope: !21571)
!21573 = !DILocation(line: 1477, column: 16, scope: !21571)
!21574 = !DILocation(line: 1477, column: 6, scope: !20447)
!21575 = !DILocation(line: 1478, column: 3, scope: !21571)
!21576 = !DILocation(line: 1478, column: 7, scope: !21571)
!21577 = !DILocation(line: 1478, column: 10, scope: !21571)
!21578 = !DILocation(line: 1478, column: 24, scope: !21571)
!21579 = !DILocation(line: 1481, column: 31, scope: !21580)
!21580 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1481, column: 6)
!21581 = !DILocation(line: 1481, column: 35, scope: !21580)
!21582 = !DILocation(line: 1481, column: 6, scope: !21580)
!21583 = !DILocation(line: 1481, column: 6, scope: !20447)
!21584 = !DILocation(line: 1482, column: 7, scope: !21585)
!21585 = distinct !DILexicalBlock(scope: !21586, file: !3, line: 1482, column: 7)
!21586 = distinct !DILexicalBlock(scope: !21580, file: !3, line: 1481, column: 42)
!21587 = !DILocation(line: 1482, column: 13, scope: !21585)
!21588 = !DILocation(line: 1482, column: 7, scope: !21586)
!21589 = !DILocation(line: 1483, column: 4, scope: !21585)
!21590 = !DILocation(line: 1485, column: 3, scope: !21586)
!21591 = !DILocation(line: 1485, column: 7, scope: !21586)
!21592 = !DILocation(line: 1485, column: 10, scope: !21586)
!21593 = !DILocation(line: 1485, column: 17, scope: !21586)
!21594 = !DILocation(line: 1486, column: 32, scope: !21595)
!21595 = distinct !DILexicalBlock(scope: !21586, file: !3, line: 1486, column: 7)
!21596 = !DILocation(line: 1486, column: 36, scope: !21595)
!21597 = !DILocation(line: 1486, column: 7, scope: !21595)
!21598 = !DILocation(line: 1486, column: 7, scope: !21586)
!21599 = !DILocation(line: 1487, column: 4, scope: !21595)
!21600 = !DILocation(line: 1487, column: 8, scope: !21595)
!21601 = !DILocation(line: 1487, column: 11, scope: !21595)
!21602 = !DILocation(line: 1487, column: 18, scope: !21595)
!21603 = !DILocation(line: 1488, column: 3, scope: !21586)
!21604 = !DILocation(line: 1489, column: 3, scope: !21586)
!21605 = !DILocation(line: 1489, column: 7, scope: !21586)
!21606 = !DILocation(line: 1489, column: 10, scope: !21586)
!21607 = !DILocation(line: 1489, column: 24, scope: !21586)
!21608 = !DILocation(line: 1490, column: 2, scope: !21586)
!21609 = !DILocation(line: 1493, column: 31, scope: !21610)
!21610 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1493, column: 6)
!21611 = !DILocation(line: 1493, column: 35, scope: !21610)
!21612 = !DILocation(line: 1493, column: 6, scope: !21610)
!21613 = !DILocation(line: 1493, column: 6, scope: !20447)
!21614 = !DILocation(line: 1494, column: 13, scope: !21610)
!21615 = !DILocation(line: 1494, column: 3, scope: !21610)
!21616 = !DILocation(line: 1496, column: 13, scope: !21610)
!21617 = !DILocation(line: 1497, column: 6, scope: !21618)
!21618 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1497, column: 6)
!21619 = !DILocation(line: 1497, column: 10, scope: !21618)
!21620 = !DILocation(line: 1497, column: 16, scope: !21618)
!21621 = !DILocation(line: 1497, column: 6, scope: !20447)
!21622 = !DILocation(line: 1498, column: 3, scope: !21618)
!21623 = !DILocation(line: 1501, column: 10, scope: !20447)
!21624 = !DILocation(line: 1501, column: 14, scope: !20447)
!21625 = !DILocation(line: 1501, column: 2, scope: !20447)
!21626 = !DILocation(line: 1503, column: 36, scope: !21627)
!21627 = distinct !DILexicalBlock(scope: !21628, file: !3, line: 1503, column: 7)
!21628 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1501, column: 20)
!21629 = !DILocation(line: 1503, column: 40, scope: !21627)
!21630 = !DILocation(line: 1503, column: 7, scope: !21627)
!21631 = !DILocation(line: 1503, column: 7, scope: !21628)
!21632 = !DILocation(line: 1504, column: 4, scope: !21627)
!21633 = !DILocation(line: 1506, column: 4, scope: !21627)
!21634 = !DILocation(line: 1508, column: 3, scope: !21628)
!21635 = !DILocation(line: 1509, column: 3, scope: !21628)
!21636 = !DILocation(line: 1511, column: 3, scope: !21628)
!21637 = !DILocation(line: 1512, column: 3, scope: !21628)
!21638 = !DILocation(line: 1516, column: 3, scope: !21628)
!21639 = !DILocation(line: 1517, column: 3, scope: !21628)
!21640 = !DILocation(line: 1518, column: 3, scope: !21628)
!21641 = !DILocation(line: 1519, column: 3, scope: !21628)
!21642 = !DILocation(line: 1522, column: 32, scope: !21643)
!21643 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1522, column: 6)
!21644 = !DILocation(line: 1522, column: 36, scope: !21643)
!21645 = !DILocation(line: 1522, column: 6, scope: !21643)
!21646 = !DILocation(line: 1522, column: 6, scope: !20447)
!21647 = !DILocation(line: 1523, column: 3, scope: !21648)
!21648 = distinct !DILexicalBlock(scope: !21643, file: !3, line: 1522, column: 43)
!21649 = !DILocation(line: 1523, column: 7, scope: !21648)
!21650 = !DILocation(line: 1523, column: 10, scope: !21648)
!21651 = !DILocation(line: 1523, column: 20, scope: !21648)
!21652 = !DILocation(line: 1524, column: 3, scope: !21648)
!21653 = !DILocation(line: 1525, column: 2, scope: !21648)
!21654 = !DILocation(line: 1528, column: 6, scope: !21655)
!21655 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1528, column: 6)
!21656 = !DILocation(line: 1528, column: 10, scope: !21655)
!21657 = !DILocation(line: 1528, column: 20, scope: !21655)
!21658 = !DILocation(line: 1528, column: 6, scope: !20447)
!21659 = !DILocation(line: 1529, column: 7, scope: !21660)
!21660 = distinct !DILexicalBlock(scope: !21661, file: !3, line: 1529, column: 7)
!21661 = distinct !DILexicalBlock(scope: !21655, file: !3, line: 1528, column: 26)
!21662 = !DILocation(line: 1529, column: 13, scope: !21660)
!21663 = !DILocation(line: 1529, column: 7, scope: !21661)
!21664 = !DILocation(line: 1532, column: 21, scope: !21660)
!21665 = !DILocation(line: 1532, column: 25, scope: !21660)
!21666 = !DILocation(line: 1532, column: 36, scope: !21660)
!21667 = !DILocation(line: 1532, column: 40, scope: !21660)
!21668 = !DILocation(line: 1532, column: 46, scope: !21660)
!21669 = !DILocation(line: 1530, column: 4, scope: !21660)
!21670 = !DILocation(line: 1533, column: 24, scope: !21661)
!21671 = !DILocation(line: 1533, column: 28, scope: !21661)
!21672 = !DILocation(line: 1533, column: 38, scope: !21661)
!21673 = !DILocation(line: 1533, column: 3, scope: !21661)
!21674 = !DILocation(line: 1533, column: 7, scope: !21661)
!21675 = !DILocation(line: 1533, column: 10, scope: !21661)
!21676 = !DILocation(line: 1533, column: 20, scope: !21661)
!21677 = !DILocation(line: 1534, column: 3, scope: !21661)
!21678 = !DILocation(line: 1535, column: 2, scope: !21661)
!21679 = !DILocation(line: 1540, column: 2, scope: !20447)
!21680 = !DILocation(line: 1541, column: 6, scope: !21681)
!21681 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1541, column: 6)
!21682 = !DILocation(line: 1541, column: 12, scope: !21681)
!21683 = !DILocation(line: 1541, column: 6, scope: !20447)
!21684 = !DILocation(line: 1543, column: 10, scope: !21681)
!21685 = !DILocation(line: 1543, column: 14, scope: !21681)
!21686 = !DILocation(line: 1543, column: 17, scope: !21681)
!21687 = !DILocation(line: 1542, column: 3, scope: !21681)
!21688 = !DILocation(line: 1546, column: 2, scope: !20447)
!21689 = !DILocation(line: 1547, column: 2, scope: !20447)
!21690 = !DILocation(line: 1548, column: 2, scope: !20447)
!21691 = !DILocation(line: 1549, column: 9, scope: !21692)
!21692 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1549, column: 2)
!21693 = !DILocation(line: 1549, column: 7, scope: !21692)
!21694 = !DILocation(line: 1549, column: 14, scope: !21695)
!21695 = distinct !DILexicalBlock(scope: !21692, file: !3, line: 1549, column: 2)
!21696 = !DILocation(line: 1549, column: 16, scope: !21695)
!21697 = !DILocation(line: 1549, column: 2, scope: !21692)
!21698 = !DILocation(line: 1550, column: 3, scope: !21699)
!21699 = distinct !DILexicalBlock(scope: !21695, file: !3, line: 1549, column: 28)
!21700 = !DILocation(line: 1551, column: 3, scope: !21699)
!21701 = !DILocation(line: 1552, column: 2, scope: !21699)
!21702 = !DILocation(line: 1549, column: 24, scope: !21695)
!21703 = !DILocation(line: 1549, column: 2, scope: !21695)
!21704 = distinct !{!21704, !21697, !21705}
!21705 = !DILocation(line: 1552, column: 2, scope: !21692)
!21706 = !DILocation(line: 1553, column: 9, scope: !21707)
!21707 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1553, column: 2)
!21708 = !DILocation(line: 1553, column: 7, scope: !21707)
!21709 = !DILocation(line: 1553, column: 14, scope: !21710)
!21710 = distinct !DILexicalBlock(scope: !21707, file: !3, line: 1553, column: 2)
!21711 = !DILocation(line: 1553, column: 16, scope: !21710)
!21712 = !DILocation(line: 1553, column: 2, scope: !21707)
!21713 = !DILocation(line: 1554, column: 3, scope: !21714)
!21714 = distinct !DILexicalBlock(scope: !21710, file: !3, line: 1553, column: 28)
!21715 = !DILocation(line: 1555, column: 3, scope: !21714)
!21716 = !DILocation(line: 1556, column: 10, scope: !21714)
!21717 = !DILocation(line: 1556, column: 8, scope: !21714)
!21718 = !DILocation(line: 1557, column: 7, scope: !21719)
!21719 = distinct !DILexicalBlock(scope: !21714, file: !3, line: 1557, column: 7)
!21720 = !DILocation(line: 1557, column: 17, scope: !21719)
!21721 = !DILocation(line: 1557, column: 19, scope: !21719)
!21722 = !DILocation(line: 1557, column: 24, scope: !21719)
!21723 = !DILocation(line: 1557, column: 12, scope: !21719)
!21724 = !DILocation(line: 1557, column: 7, scope: !21714)
!21725 = !DILocation(line: 1559, column: 41, scope: !21726)
!21726 = distinct !DILexicalBlock(scope: !21719, file: !3, line: 1557, column: 33)
!21727 = !DILocation(line: 1559, column: 44, scope: !21726)
!21728 = !DILocation(line: 1560, column: 12, scope: !21726)
!21729 = !DILocation(line: 1560, column: 14, scope: !21726)
!21730 = !DILocation(line: 1560, column: 19, scope: !21726)
!21731 = !DILocation(line: 1558, column: 4, scope: !21726)
!21732 = !DILocation(line: 1561, column: 7, scope: !21726)
!21733 = !DILocation(line: 1562, column: 3, scope: !21726)
!21734 = !DILocation(line: 1563, column: 2, scope: !21714)
!21735 = !DILocation(line: 1553, column: 24, scope: !21710)
!21736 = !DILocation(line: 1553, column: 2, scope: !21710)
!21737 = distinct !{!21737, !21712, !21738}
!21738 = !DILocation(line: 1563, column: 2, scope: !21707)
!21739 = !DILocation(line: 1564, column: 6, scope: !21740)
!21740 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1564, column: 6)
!21741 = !DILocation(line: 1564, column: 6, scope: !20447)
!21742 = !DILocation(line: 1565, column: 58, scope: !21743)
!21743 = distinct !DILexicalBlock(scope: !21740, file: !3, line: 1564, column: 11)
!21744 = !DILocation(line: 1565, column: 3, scope: !21743)
!21745 = !DILocation(line: 1566, column: 7, scope: !21743)
!21746 = !DILocation(line: 1567, column: 3, scope: !21743)
!21747 = !DILocation(line: 1570, column: 6, scope: !21748)
!21748 = distinct !DILexicalBlock(scope: !20447, file: !3, line: 1570, column: 6)
!21749 = !DILocation(line: 1570, column: 12, scope: !21748)
!21750 = !DILocation(line: 1570, column: 6, scope: !20447)
!21751 = !DILocation(line: 1571, column: 3, scope: !21748)
!21752 = !DILocation(line: 1570, column: 14, scope: !21748)
!21753 = !DILabel(scope: !20447, name: "out", file: !3, line: 1572)
!21754 = !DILocation(line: 1572, column: 1, scope: !20447)
!21755 = !DILocation(line: 1573, column: 26, scope: !20447)
!21756 = !DILocation(line: 1573, column: 30, scope: !20447)
!21757 = !DILocation(line: 1573, column: 36, scope: !20447)
!21758 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !20557)
!21759 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !20557)
!21760 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !20557)
!21761 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !20557)
!21762 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !20557)
!21763 = !DILocation(line: 1574, column: 9, scope: !20447)
!21764 = !DILocation(line: 1574, column: 2, scope: !20447)
!21765 = distinct !DISubprogram(name: "ph_state_irq", scope: !3, file: !3, line: 2562, type: !21766, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21766 = !DISubroutineType(types: !21767)
!21767 = !{null, !9128, !9432}
!21768 = !DILocalVariable(name: "hc", arg: 1, scope: !21765, file: !3, line: 2562, type: !9128)
!21769 = !DILocation(line: 2562, column: 32, scope: !21765)
!21770 = !DILocalVariable(name: "r_irq_statech", arg: 2, scope: !21765, file: !3, line: 2562, type: !9432)
!21771 = !DILocation(line: 2562, column: 43, scope: !21765)
!21772 = !DILocalVariable(name: "dch", scope: !21765, file: !3, line: 2564, type: !9538)
!21773 = !DILocation(line: 2564, column: 19, scope: !21765)
!21774 = !DILocalVariable(name: "ch", scope: !21765, file: !3, line: 2565, type: !37)
!21775 = !DILocation(line: 2565, column: 7, scope: !21765)
!21776 = !DILocalVariable(name: "active", scope: !21765, file: !3, line: 2566, type: !37)
!21777 = !DILocation(line: 2566, column: 7, scope: !21765)
!21778 = !DILocalVariable(name: "st_status", scope: !21765, file: !3, line: 2567, type: !9432)
!21779 = !DILocation(line: 2567, column: 10, scope: !21765)
!21780 = !DILocalVariable(name: "temp", scope: !21765, file: !3, line: 2567, type: !9432)
!21781 = !DILocation(line: 2567, column: 21, scope: !21765)
!21782 = !DILocation(line: 2570, column: 10, scope: !21783)
!21783 = distinct !DILexicalBlock(scope: !21765, file: !3, line: 2570, column: 2)
!21784 = !DILocation(line: 2570, column: 7, scope: !21783)
!21785 = !DILocation(line: 2570, column: 15, scope: !21786)
!21786 = distinct !DILexicalBlock(scope: !21783, file: !3, line: 2570, column: 2)
!21787 = !DILocation(line: 2570, column: 18, scope: !21786)
!21788 = !DILocation(line: 2570, column: 2, scope: !21783)
!21789 = !DILocation(line: 2571, column: 7, scope: !21790)
!21790 = distinct !DILexicalBlock(scope: !21791, file: !3, line: 2571, column: 7)
!21791 = distinct !DILexicalBlock(scope: !21786, file: !3, line: 2570, column: 31)
!21792 = !DILocation(line: 2571, column: 11, scope: !21790)
!21793 = !DILocation(line: 2571, column: 16, scope: !21790)
!21794 = !DILocation(line: 2571, column: 20, scope: !21790)
!21795 = !DILocation(line: 2571, column: 7, scope: !21791)
!21796 = !DILocation(line: 2572, column: 10, scope: !21797)
!21797 = distinct !DILexicalBlock(scope: !21790, file: !3, line: 2571, column: 25)
!21798 = !DILocation(line: 2572, column: 14, scope: !21797)
!21799 = !DILocation(line: 2572, column: 19, scope: !21797)
!21800 = !DILocation(line: 2572, column: 23, scope: !21797)
!21801 = !DILocation(line: 2572, column: 8, scope: !21797)
!21802 = !DILocation(line: 2573, column: 8, scope: !21803)
!21803 = distinct !DILexicalBlock(scope: !21797, file: !3, line: 2573, column: 8)
!21804 = !DILocation(line: 2573, column: 22, scope: !21803)
!21805 = !DILocation(line: 2573, column: 8, scope: !21797)
!21806 = !DILocation(line: 2574, column: 5, scope: !21807)
!21807 = distinct !DILexicalBlock(scope: !21803, file: !3, line: 2573, column: 27)
!21808 = !DILocation(line: 2577, column: 5, scope: !21809)
!21809 = distinct !DILexicalBlock(scope: !21810, file: !3, line: 2577, column: 5)
!21810 = distinct !DILexicalBlock(scope: !21811, file: !3, line: 2577, column: 5)
!21811 = distinct !DILexicalBlock(scope: !21812, file: !3, line: 2577, column: 5)
!21812 = distinct !DILexicalBlock(scope: !21807, file: !3, line: 2577, column: 5)
!21813 = !DILocation(line: 2579, column: 17, scope: !21807)
!21814 = !DILocation(line: 2579, column: 15, scope: !21807)
!21815 = !DILocation(line: 2580, column: 5, scope: !21807)
!21816 = !DILocation(line: 2580, column: 12, scope: !21807)
!21817 = !DILocation(line: 2581, column: 12, scope: !21807)
!21818 = !DILocation(line: 2580, column: 31, scope: !21807)
!21819 = !DILocation(line: 2580, column: 25, scope: !21807)
!21820 = !DILocation(line: 2580, column: 22, scope: !21807)
!21821 = !DILocation(line: 2582, column: 10, scope: !21822)
!21822 = distinct !DILexicalBlock(scope: !21823, file: !3, line: 2582, column: 10)
!21823 = distinct !DILexicalBlock(scope: !21807, file: !3, line: 2581, column: 49)
!21824 = !DILocation(line: 2582, column: 16, scope: !21822)
!21825 = !DILocation(line: 2582, column: 10, scope: !21823)
!21826 = !DILocation(line: 2585, column: 24, scope: !21822)
!21827 = !DILocation(line: 2586, column: 14, scope: !21822)
!21828 = !DILocation(line: 2583, column: 7, scope: !21822)
!21829 = !DILocation(line: 2587, column: 18, scope: !21823)
!21830 = !DILocation(line: 2587, column: 16, scope: !21823)
!21831 = distinct !{!21831, !21815, !21832}
!21832 = !DILocation(line: 2588, column: 5, scope: !21807)
!21833 = !DILocation(line: 2591, column: 35, scope: !21834)
!21834 = distinct !DILexicalBlock(scope: !21807, file: !3, line: 2591, column: 9)
!21835 = !DILocation(line: 2591, column: 39, scope: !21834)
!21836 = !DILocation(line: 2591, column: 9, scope: !21834)
!21837 = !DILocation(line: 2591, column: 45, scope: !21834)
!21838 = !DILocation(line: 2592, column: 9, scope: !21834)
!21839 = !DILocation(line: 2592, column: 14, scope: !21834)
!21840 = !DILocation(line: 2592, column: 18, scope: !21834)
!21841 = !DILocation(line: 2592, column: 20, scope: !21834)
!21842 = !DILocation(line: 2592, column: 29, scope: !21834)
!21843 = !DILocation(line: 2591, column: 9, scope: !21807)
!21844 = !DILocation(line: 2593, column: 10, scope: !21845)
!21845 = distinct !DILexicalBlock(scope: !21846, file: !3, line: 2593, column: 10)
!21846 = distinct !DILexicalBlock(scope: !21834, file: !3, line: 2592, column: 46)
!21847 = !DILocation(line: 2593, column: 20, scope: !21845)
!21848 = !DILocation(line: 2593, column: 10, scope: !21846)
!21849 = !DILocation(line: 2595, column: 14, scope: !21845)
!21850 = !DILocation(line: 2595, column: 18, scope: !21845)
!21851 = !DILocation(line: 2595, column: 23, scope: !21845)
!21852 = !DILocation(line: 2595, column: 27, scope: !21845)
!21853 = !DILocation(line: 2595, column: 11, scope: !21845)
!21854 = !DILocation(line: 2594, column: 7, scope: !21845)
!21855 = !DILocation(line: 2594, column: 11, scope: !21845)
!21856 = !DILocation(line: 2594, column: 23, scope: !21845)
!21857 = !DILocation(line: 2598, column: 15, scope: !21845)
!21858 = !DILocation(line: 2598, column: 19, scope: !21845)
!21859 = !DILocation(line: 2598, column: 24, scope: !21845)
!21860 = !DILocation(line: 2598, column: 28, scope: !21845)
!21861 = !DILocation(line: 2598, column: 12, scope: !21845)
!21862 = !DILocation(line: 2598, column: 8, scope: !21845)
!21863 = !DILocation(line: 2597, column: 7, scope: !21845)
!21864 = !DILocation(line: 2597, column: 11, scope: !21845)
!21865 = !DILocation(line: 2597, column: 23, scope: !21845)
!21866 = !DILocation(line: 2599, column: 5, scope: !21846)
!21867 = !DILocation(line: 2600, column: 18, scope: !21807)
!21868 = !DILocation(line: 2600, column: 28, scope: !21807)
!21869 = !DILocation(line: 2600, column: 5, scope: !21807)
!21870 = !DILocation(line: 2600, column: 10, scope: !21807)
!21871 = !DILocation(line: 2600, column: 16, scope: !21807)
!21872 = !DILocation(line: 2601, column: 9, scope: !21873)
!21873 = distinct !DILexicalBlock(scope: !21807, file: !3, line: 2601, column: 9)
!21874 = !DILocation(line: 2601, column: 14, scope: !21873)
!21875 = !DILocation(line: 2601, column: 18, scope: !21873)
!21876 = !DILocation(line: 2601, column: 20, scope: !21873)
!21877 = !DILocation(line: 2601, column: 29, scope: !21873)
!21878 = !DILocation(line: 2601, column: 9, scope: !21807)
!21879 = !DILocation(line: 2602, column: 13, scope: !21873)
!21880 = !DILocation(line: 2602, column: 6, scope: !21873)
!21881 = !DILocation(line: 2604, column: 13, scope: !21873)
!21882 = !DILocation(line: 2605, column: 9, scope: !21883)
!21883 = distinct !DILexicalBlock(scope: !21807, file: !3, line: 2605, column: 9)
!21884 = !DILocation(line: 2605, column: 14, scope: !21883)
!21885 = !DILocation(line: 2605, column: 23, scope: !21883)
!21886 = !DILocation(line: 2605, column: 20, scope: !21883)
!21887 = !DILocation(line: 2605, column: 9, scope: !21807)
!21888 = !DILocation(line: 2606, column: 6, scope: !21889)
!21889 = distinct !DILexicalBlock(scope: !21883, file: !3, line: 2605, column: 31)
!21890 = !DILocation(line: 2608, column: 6, scope: !21889)
!21891 = !DILocation(line: 2609, column: 6, scope: !21889)
!21892 = !DILocation(line: 2611, column: 6, scope: !21889)
!21893 = !DILocation(line: 2612, column: 6, scope: !21889)
!21894 = !DILocation(line: 2612, column: 11, scope: !21889)
!21895 = !DILocation(line: 2612, column: 18, scope: !21889)
!21896 = !DILocation(line: 2613, column: 5, scope: !21889)
!21897 = !DILocation(line: 2614, column: 5, scope: !21807)
!21898 = !DILocation(line: 2614, column: 5, scope: !21899)
!21899 = distinct !DILexicalBlock(scope: !21807, file: !3, line: 2614, column: 5)
!21900 = !DILocation(line: 2615, column: 9, scope: !21901)
!21901 = distinct !DILexicalBlock(scope: !21807, file: !3, line: 2615, column: 9)
!21902 = !DILocation(line: 2615, column: 15, scope: !21901)
!21903 = !DILocation(line: 2615, column: 9, scope: !21807)
!21904 = !DILocation(line: 2618, column: 23, scope: !21901)
!21905 = !DILocation(line: 2618, column: 28, scope: !21901)
!21906 = !DILocation(line: 2619, column: 13, scope: !21901)
!21907 = !DILocation(line: 2619, column: 17, scope: !21901)
!21908 = !DILocation(line: 2619, column: 22, scope: !21901)
!21909 = !DILocation(line: 2619, column: 26, scope: !21901)
!21910 = !DILocation(line: 2616, column: 6, scope: !21901)
!21911 = !DILocation(line: 2620, column: 4, scope: !21807)
!21912 = !DILocation(line: 2621, column: 18, scope: !21797)
!21913 = !DILocation(line: 2622, column: 3, scope: !21797)
!21914 = !DILocation(line: 2623, column: 2, scope: !21791)
!21915 = !DILocation(line: 2570, column: 27, scope: !21786)
!21916 = !DILocation(line: 2570, column: 2, scope: !21786)
!21917 = distinct !{!21917, !21788, !21918}
!21918 = !DILocation(line: 2623, column: 2, scope: !21783)
!21919 = !DILocation(line: 2624, column: 32, scope: !21920)
!21920 = distinct !DILexicalBlock(scope: !21765, file: !3, line: 2624, column: 6)
!21921 = !DILocation(line: 2624, column: 36, scope: !21920)
!21922 = !DILocation(line: 2624, column: 6, scope: !21920)
!21923 = !DILocation(line: 2624, column: 6, scope: !21765)
!21924 = !DILocation(line: 2625, column: 19, scope: !21920)
!21925 = !DILocation(line: 2625, column: 3, scope: !21920)
!21926 = !DILocation(line: 2626, column: 1, scope: !21765)
!21927 = distinct !DISubprogram(name: "schedule_work", scope: !1808, file: !1808, line: 566, type: !21928, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21928 = !DISubroutineType(types: !21929)
!21929 = !{!540, !1817}
!21930 = !DILocalVariable(name: "work", arg: 1, scope: !21927, file: !1808, line: 566, type: !1817)
!21931 = !DILocation(line: 566, column: 54, scope: !21927)
!21932 = !DILocation(line: 568, column: 20, scope: !21927)
!21933 = !DILocation(line: 568, column: 31, scope: !21927)
!21934 = !DILocation(line: 568, column: 9, scope: !21927)
!21935 = !DILocation(line: 568, column: 2, scope: !21927)
!21936 = distinct !DISubprogram(name: "handle_timer_irq", scope: !3, file: !3, line: 2385, type: !9447, scopeLine: 2386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21937 = !DILocation(line: 407, column: 64, scope: !10044, inlinedAt: !21938)
!21938 = distinct !DILocation(line: 2419, column: 3, scope: !21939)
!21939 = distinct !DILexicalBlock(scope: !21940, file: !3, line: 2392, column: 21)
!21940 = distinct !DILexicalBlock(scope: !21936, file: !3, line: 2392, column: 6)
!21941 = !DILocation(line: 407, column: 84, scope: !10044, inlinedAt: !21938)
!21942 = !DILocation(line: 327, column: 67, scope: !10053, inlinedAt: !21943)
!21943 = distinct !DILocation(line: 2394, column: 3, scope: !21944)
!21944 = distinct !DILexicalBlock(scope: !21945, file: !3, line: 2394, column: 3)
!21945 = distinct !DILexicalBlock(scope: !21946, file: !3, line: 2394, column: 3)
!21946 = distinct !DILexicalBlock(scope: !21947, file: !3, line: 2394, column: 3)
!21947 = distinct !DILexicalBlock(scope: !21948, file: !3, line: 2394, column: 3)
!21948 = distinct !DILexicalBlock(scope: !21939, file: !3, line: 2394, column: 3)
!21949 = !DILocalVariable(name: "hc", arg: 1, scope: !21936, file: !3, line: 2385, type: !9128)
!21950 = !DILocation(line: 2385, column: 36, scope: !21936)
!21951 = !DILocalVariable(name: "ch", scope: !21936, file: !3, line: 2387, type: !37)
!21952 = !DILocation(line: 2387, column: 7, scope: !21936)
!21953 = !DILocalVariable(name: "temp", scope: !21936, file: !3, line: 2387, type: !37)
!21954 = !DILocation(line: 2387, column: 11, scope: !21936)
!21955 = !DILocalVariable(name: "dch", scope: !21936, file: !3, line: 2388, type: !9538)
!21956 = !DILocation(line: 2388, column: 19, scope: !21936)
!21957 = !DILocalVariable(name: "flags", scope: !21936, file: !3, line: 2389, type: !9457)
!21958 = !DILocation(line: 2389, column: 10, scope: !21936)
!21959 = !DILocation(line: 2392, column: 6, scope: !21940)
!21960 = !DILocation(line: 2392, column: 10, scope: !21940)
!21961 = !DILocation(line: 2392, column: 6, scope: !21936)
!21962 = !DILocation(line: 2394, column: 3, scope: !21939)
!21963 = !DILocation(line: 2394, column: 3, scope: !21948)
!21964 = !DILocalVariable(name: "__dummy", scope: !21965, file: !3, line: 2394, type: !317)
!21965 = distinct !DILexicalBlock(scope: !21947, file: !3, line: 2394, column: 3)
!21966 = !DILocation(line: 2394, column: 3, scope: !21965)
!21967 = !DILocalVariable(name: "__dummy2", scope: !21965, file: !3, line: 2394, type: !9457)
!21968 = !DILocation(line: 2394, column: 3, scope: !21947)
!21969 = !DILocation(line: 2394, column: 3, scope: !21946)
!21970 = !DILocation(line: 2394, column: 3, scope: !21971)
!21971 = distinct !DILexicalBlock(scope: !21946, file: !3, line: 2394, column: 3)
!21972 = !DILocalVariable(name: "__dummy", scope: !21973, file: !3, line: 2394, type: !317)
!21973 = distinct !DILexicalBlock(scope: !21974, file: !3, line: 2394, column: 3)
!21974 = distinct !DILexicalBlock(scope: !21971, file: !3, line: 2394, column: 3)
!21975 = !DILocation(line: 2394, column: 3, scope: !21973)
!21976 = !DILocalVariable(name: "__dummy2", scope: !21973, file: !3, line: 2394, type: !9457)
!21977 = !DILocation(line: 2394, column: 3, scope: !21974)
!21978 = !DILocation(line: 2394, column: 3, scope: !21945)
!21979 = !{i32 -2138067803}
!21980 = !DILocation(line: 329, column: 10, scope: !10053, inlinedAt: !21943)
!21981 = !DILocation(line: 329, column: 16, scope: !10053, inlinedAt: !21943)
!21982 = !DILocation(line: 2394, column: 3, scope: !21944)
!21983 = !DILocation(line: 2395, column: 7, scope: !21984)
!21984 = distinct !DILexicalBlock(scope: !21939, file: !3, line: 2395, column: 7)
!21985 = !DILocation(line: 2395, column: 11, scope: !21984)
!21986 = !DILocation(line: 2395, column: 21, scope: !21984)
!21987 = !DILocation(line: 2395, column: 7, scope: !21939)
!21988 = !DILocation(line: 2396, column: 8, scope: !21989)
!21989 = distinct !DILexicalBlock(scope: !21990, file: !3, line: 2396, column: 8)
!21990 = distinct !DILexicalBlock(scope: !21984, file: !3, line: 2395, column: 26)
!21991 = !DILocation(line: 2396, column: 14, scope: !21989)
!21992 = !DILocation(line: 2396, column: 8, scope: !21990)
!21993 = !DILocation(line: 2397, column: 5, scope: !21989)
!21994 = !DILocation(line: 2398, column: 4, scope: !21990)
!21995 = !DILocation(line: 2400, column: 36, scope: !21996)
!21996 = distinct !DILexicalBlock(scope: !21990, file: !3, line: 2400, column: 8)
!21997 = !DILocation(line: 2400, column: 40, scope: !21996)
!21998 = !DILocation(line: 2400, column: 8, scope: !21996)
!21999 = !DILocation(line: 2400, column: 8, scope: !21990)
!22000 = !DILocation(line: 2401, column: 5, scope: !21996)
!22001 = !DILocation(line: 2402, column: 3, scope: !21990)
!22002 = !DILocation(line: 2403, column: 7, scope: !22003)
!22003 = distinct !DILexicalBlock(scope: !21939, file: !3, line: 2403, column: 7)
!22004 = !DILocation(line: 2403, column: 11, scope: !22003)
!22005 = !DILocation(line: 2403, column: 21, scope: !22003)
!22006 = !DILocation(line: 2403, column: 7, scope: !21939)
!22007 = !DILocation(line: 2404, column: 8, scope: !22008)
!22008 = distinct !DILexicalBlock(scope: !22009, file: !3, line: 2404, column: 8)
!22009 = distinct !DILexicalBlock(scope: !22003, file: !3, line: 2403, column: 26)
!22010 = !DILocation(line: 2404, column: 14, scope: !22008)
!22011 = !DILocation(line: 2404, column: 8, scope: !22009)
!22012 = !DILocation(line: 2405, column: 5, scope: !22008)
!22013 = !DILocation(line: 2406, column: 4, scope: !22009)
!22014 = !DILocation(line: 2407, column: 3, scope: !22009)
!22015 = !DILocation(line: 2408, column: 7, scope: !22016)
!22016 = distinct !DILexicalBlock(scope: !21939, file: !3, line: 2408, column: 7)
!22017 = !DILocation(line: 2408, column: 11, scope: !22016)
!22018 = !DILocation(line: 2408, column: 21, scope: !22016)
!22019 = !DILocation(line: 2408, column: 7, scope: !21939)
!22020 = !DILocation(line: 2409, column: 8, scope: !22021)
!22021 = distinct !DILexicalBlock(scope: !22022, file: !3, line: 2409, column: 8)
!22022 = distinct !DILexicalBlock(scope: !22016, file: !3, line: 2408, column: 26)
!22023 = !DILocation(line: 2409, column: 14, scope: !22021)
!22024 = !DILocation(line: 2409, column: 8, scope: !22022)
!22025 = !DILocation(line: 2410, column: 5, scope: !22021)
!22026 = !DILocation(line: 2413, column: 4, scope: !22022)
!22027 = !DILocation(line: 2416, column: 4, scope: !22022)
!22028 = !DILocation(line: 2417, column: 3, scope: !22022)
!22029 = !DILocation(line: 2418, column: 3, scope: !21939)
!22030 = !DILocation(line: 2418, column: 7, scope: !21939)
!22031 = !DILocation(line: 2418, column: 17, scope: !21939)
!22032 = !DILocation(line: 2419, column: 36, scope: !21939)
!22033 = !DILocation(line: 409, column: 2, scope: !10111, inlinedAt: !21938)
!22034 = !DILocation(line: 409, column: 2, scope: !10116, inlinedAt: !21938)
!22035 = !DILocation(line: 409, column: 2, scope: !10117, inlinedAt: !21938)
!22036 = !DILocation(line: 409, column: 2, scope: !10124, inlinedAt: !21938)
!22037 = !DILocation(line: 409, column: 2, scope: !10127, inlinedAt: !21938)
!22038 = !DILocation(line: 2420, column: 2, scope: !21939)
!22039 = !DILocation(line: 2422, column: 6, scope: !22040)
!22040 = distinct !DILexicalBlock(scope: !21936, file: !3, line: 2422, column: 6)
!22041 = !DILocation(line: 2422, column: 10, scope: !22040)
!22042 = !DILocation(line: 2422, column: 16, scope: !22040)
!22043 = !DILocation(line: 2422, column: 31, scope: !22040)
!22044 = !DILocation(line: 2422, column: 34, scope: !22040)
!22045 = !DILocation(line: 2422, column: 38, scope: !22040)
!22046 = !DILocation(line: 2422, column: 47, scope: !22040)
!22047 = !DILocation(line: 2422, column: 6, scope: !21936)
!22048 = !DILocation(line: 2423, column: 11, scope: !22049)
!22049 = distinct !DILexicalBlock(scope: !22040, file: !3, line: 2423, column: 3)
!22050 = !DILocation(line: 2423, column: 8, scope: !22049)
!22051 = !DILocation(line: 2423, column: 16, scope: !22052)
!22052 = distinct !DILexicalBlock(scope: !22049, file: !3, line: 2423, column: 3)
!22053 = !DILocation(line: 2423, column: 19, scope: !22052)
!22054 = !DILocation(line: 2423, column: 3, scope: !22049)
!22055 = !DILocation(line: 2424, column: 8, scope: !22056)
!22056 = distinct !DILexicalBlock(scope: !22057, file: !3, line: 2424, column: 8)
!22057 = distinct !DILexicalBlock(scope: !22052, file: !3, line: 2423, column: 32)
!22058 = !DILocation(line: 2424, column: 12, scope: !22056)
!22059 = !DILocation(line: 2424, column: 20, scope: !22056)
!22060 = !DILocation(line: 2424, column: 24, scope: !22056)
!22061 = !DILocation(line: 2424, column: 29, scope: !22056)
!22062 = !DILocation(line: 2424, column: 33, scope: !22056)
!22063 = !DILocation(line: 2424, column: 8, scope: !22057)
!22064 = !DILocation(line: 2425, column: 17, scope: !22065)
!22065 = distinct !DILexicalBlock(scope: !22056, file: !3, line: 2424, column: 40)
!22066 = !DILocation(line: 2425, column: 21, scope: !22065)
!22067 = !DILocation(line: 2425, column: 5, scope: !22065)
!22068 = !DILocation(line: 2427, column: 17, scope: !22065)
!22069 = !DILocation(line: 2427, column: 21, scope: !22065)
!22070 = !DILocation(line: 2427, column: 5, scope: !22065)
!22071 = !DILocation(line: 2428, column: 9, scope: !22072)
!22072 = distinct !DILexicalBlock(scope: !22065, file: !3, line: 2428, column: 9)
!22073 = !DILocation(line: 2428, column: 13, scope: !22072)
!22074 = !DILocation(line: 2428, column: 18, scope: !22072)
!22075 = !DILocation(line: 2428, column: 22, scope: !22072)
!22076 = !DILocation(line: 2428, column: 26, scope: !22072)
!22077 = !DILocation(line: 2429, column: 9, scope: !22072)
!22078 = !DILocation(line: 2429, column: 13, scope: !22072)
!22079 = !DILocation(line: 2429, column: 18, scope: !22072)
!22080 = !DILocation(line: 2429, column: 22, scope: !22072)
!22081 = !DILocation(line: 2429, column: 31, scope: !22072)
!22082 = !DILocation(line: 2428, column: 9, scope: !22065)
!22083 = !DILocation(line: 2430, column: 12, scope: !22084)
!22084 = distinct !DILexicalBlock(scope: !22072, file: !3, line: 2429, column: 37)
!22085 = !DILocation(line: 2430, column: 16, scope: !22084)
!22086 = !DILocation(line: 2430, column: 21, scope: !22084)
!22087 = !DILocation(line: 2430, column: 25, scope: !22084)
!22088 = !DILocation(line: 2430, column: 10, scope: !22084)
!22089 = !DILocation(line: 2431, column: 14, scope: !22090)
!22090 = distinct !DILexicalBlock(scope: !22084, file: !3, line: 2431, column: 10)
!22091 = !DILocation(line: 2431, column: 18, scope: !22090)
!22092 = !DILocation(line: 2431, column: 23, scope: !22090)
!22093 = !DILocation(line: 2431, column: 27, scope: !22090)
!22094 = !DILocation(line: 2431, column: 12, scope: !22090)
!22095 = !DILocation(line: 2431, column: 10, scope: !22084)
!22096 = !DILocation(line: 2432, column: 7, scope: !22097)
!22097 = distinct !DILexicalBlock(scope: !22090, file: !3, line: 2431, column: 38)
!22098 = !DILocation(line: 2432, column: 7, scope: !22099)
!22099 = distinct !DILexicalBlock(scope: !22097, file: !3, line: 2432, column: 7)
!22100 = !DILocation(line: 2434, column: 11, scope: !22101)
!22101 = distinct !DILexicalBlock(scope: !22097, file: !3, line: 2434, column: 11)
!22102 = !DILocation(line: 2434, column: 17, scope: !22101)
!22103 = !DILocation(line: 2434, column: 11, scope: !22097)
!22104 = !DILocation(line: 2440, column: 15, scope: !22101)
!22105 = !DILocation(line: 2440, column: 20, scope: !22101)
!22106 = !DILocation(line: 2436, column: 8, scope: !22101)
!22107 = !DILocation(line: 2441, column: 6, scope: !22097)
!22108 = !DILocation(line: 2442, column: 5, scope: !22084)
!22109 = !DILocation(line: 2443, column: 4, scope: !22065)
!22110 = !DILocation(line: 2444, column: 3, scope: !22057)
!22111 = !DILocation(line: 2423, column: 28, scope: !22052)
!22112 = !DILocation(line: 2423, column: 3, scope: !22052)
!22113 = distinct !{!22113, !22054, !22114}
!22114 = !DILocation(line: 2444, column: 3, scope: !22049)
!22115 = !DILocation(line: 2445, column: 6, scope: !22116)
!22116 = distinct !DILexicalBlock(scope: !21936, file: !3, line: 2445, column: 6)
!22117 = !DILocation(line: 2445, column: 10, scope: !22116)
!22118 = !DILocation(line: 2445, column: 16, scope: !22116)
!22119 = !DILocation(line: 2445, column: 31, scope: !22116)
!22120 = !DILocation(line: 2445, column: 34, scope: !22116)
!22121 = !DILocation(line: 2445, column: 38, scope: !22116)
!22122 = !DILocation(line: 2445, column: 6, scope: !21936)
!22123 = !DILocation(line: 2446, column: 9, scope: !22124)
!22124 = distinct !DILexicalBlock(scope: !22116, file: !3, line: 2445, column: 50)
!22125 = !DILocation(line: 2446, column: 13, scope: !22124)
!22126 = !DILocation(line: 2446, column: 18, scope: !22124)
!22127 = !DILocation(line: 2446, column: 22, scope: !22124)
!22128 = !DILocation(line: 2446, column: 31, scope: !22124)
!22129 = !DILocation(line: 2446, column: 7, scope: !22124)
!22130 = !DILocation(line: 2448, column: 10, scope: !22124)
!22131 = !DILocation(line: 2448, column: 42, scope: !22124)
!22132 = !DILocation(line: 2448, column: 8, scope: !22124)
!22133 = !DILocation(line: 2449, column: 31, scope: !22124)
!22134 = !DILocation(line: 2449, column: 3, scope: !22124)
!22135 = !DILocation(line: 2449, column: 7, scope: !22124)
!22136 = !DILocation(line: 2449, column: 12, scope: !22124)
!22137 = !DILocation(line: 2449, column: 16, scope: !22124)
!22138 = !DILocation(line: 2449, column: 25, scope: !22124)
!22139 = !DILocation(line: 2449, column: 29, scope: !22124)
!22140 = !DILocation(line: 2450, column: 37, scope: !22141)
!22141 = distinct !DILexicalBlock(scope: !22124, file: !3, line: 2450, column: 7)
!22142 = !DILocation(line: 2450, column: 41, scope: !22141)
!22143 = !DILocation(line: 2450, column: 46, scope: !22141)
!22144 = !DILocation(line: 2450, column: 50, scope: !22141)
!22145 = !DILocation(line: 2450, column: 59, scope: !22141)
!22146 = !DILocation(line: 2450, column: 7, scope: !22141)
!22147 = !DILocation(line: 2450, column: 7, scope: !22124)
!22148 = !DILocation(line: 2451, column: 9, scope: !22149)
!22149 = distinct !DILexicalBlock(scope: !22150, file: !3, line: 2451, column: 8)
!22150 = distinct !DILexicalBlock(scope: !22141, file: !3, line: 2450, column: 65)
!22151 = !DILocation(line: 2451, column: 14, scope: !22149)
!22152 = !DILocation(line: 2451, column: 17, scope: !22149)
!22153 = !DILocation(line: 2451, column: 21, scope: !22149)
!22154 = !DILocation(line: 2451, column: 26, scope: !22149)
!22155 = !DILocation(line: 2451, column: 30, scope: !22149)
!22156 = !DILocation(line: 2451, column: 39, scope: !22149)
!22157 = !DILocation(line: 2451, column: 8, scope: !22150)
!22158 = !DILocation(line: 2452, column: 21, scope: !22149)
!22159 = !DILocation(line: 2452, column: 5, scope: !22149)
!22160 = !DILocation(line: 2454, column: 8, scope: !22161)
!22161 = distinct !DILexicalBlock(scope: !22150, file: !3, line: 2454, column: 8)
!22162 = !DILocation(line: 2454, column: 13, scope: !22161)
!22163 = !DILocation(line: 2454, column: 17, scope: !22161)
!22164 = !DILocation(line: 2454, column: 21, scope: !22161)
!22165 = !DILocation(line: 2454, column: 26, scope: !22161)
!22166 = !DILocation(line: 2454, column: 30, scope: !22161)
!22167 = !DILocation(line: 2454, column: 39, scope: !22161)
!22168 = !DILocation(line: 2454, column: 8, scope: !22150)
!22169 = !DILocation(line: 2455, column: 21, scope: !22161)
!22170 = !DILocation(line: 2455, column: 5, scope: !22161)
!22171 = !DILocation(line: 2457, column: 3, scope: !22150)
!22172 = !DILocation(line: 2458, column: 37, scope: !22173)
!22173 = distinct !DILexicalBlock(scope: !22124, file: !3, line: 2458, column: 7)
!22174 = !DILocation(line: 2458, column: 41, scope: !22173)
!22175 = !DILocation(line: 2458, column: 46, scope: !22173)
!22176 = !DILocation(line: 2458, column: 50, scope: !22173)
!22177 = !DILocation(line: 2458, column: 59, scope: !22173)
!22178 = !DILocation(line: 2458, column: 7, scope: !22173)
!22179 = !DILocation(line: 2458, column: 7, scope: !22124)
!22180 = !DILocation(line: 2460, column: 11, scope: !22181)
!22181 = distinct !DILexicalBlock(scope: !22173, file: !3, line: 2458, column: 65)
!22182 = !DILocation(line: 2460, column: 43, scope: !22181)
!22183 = !DILocation(line: 2460, column: 9, scope: !22181)
!22184 = !DILocation(line: 2461, column: 9, scope: !22185)
!22185 = distinct !DILexicalBlock(scope: !22181, file: !3, line: 2461, column: 8)
!22186 = !DILocation(line: 2461, column: 14, scope: !22185)
!22187 = !DILocation(line: 2461, column: 17, scope: !22185)
!22188 = !DILocation(line: 2461, column: 21, scope: !22185)
!22189 = !DILocation(line: 2461, column: 26, scope: !22185)
!22190 = !DILocation(line: 2461, column: 30, scope: !22185)
!22191 = !DILocation(line: 2461, column: 39, scope: !22185)
!22192 = !DILocation(line: 2461, column: 8, scope: !22181)
!22193 = !DILocation(line: 2462, column: 21, scope: !22185)
!22194 = !DILocation(line: 2462, column: 5, scope: !22185)
!22195 = !DILocation(line: 2464, column: 8, scope: !22196)
!22196 = distinct !DILexicalBlock(scope: !22181, file: !3, line: 2464, column: 8)
!22197 = !DILocation(line: 2464, column: 13, scope: !22196)
!22198 = !DILocation(line: 2464, column: 17, scope: !22196)
!22199 = !DILocation(line: 2464, column: 21, scope: !22196)
!22200 = !DILocation(line: 2464, column: 26, scope: !22196)
!22201 = !DILocation(line: 2464, column: 30, scope: !22196)
!22202 = !DILocation(line: 2464, column: 39, scope: !22196)
!22203 = !DILocation(line: 2464, column: 8, scope: !22181)
!22204 = !DILocation(line: 2465, column: 21, scope: !22196)
!22205 = !DILocation(line: 2465, column: 5, scope: !22196)
!22206 = !DILocation(line: 2467, column: 32, scope: !22181)
!22207 = !DILocation(line: 2467, column: 4, scope: !22181)
!22208 = !DILocation(line: 2467, column: 8, scope: !22181)
!22209 = !DILocation(line: 2467, column: 13, scope: !22181)
!22210 = !DILocation(line: 2467, column: 17, scope: !22181)
!22211 = !DILocation(line: 2467, column: 26, scope: !22181)
!22212 = !DILocation(line: 2467, column: 30, scope: !22181)
!22213 = !DILocation(line: 2468, column: 3, scope: !22181)
!22214 = !DILocation(line: 2469, column: 38, scope: !22215)
!22215 = distinct !DILexicalBlock(scope: !22124, file: !3, line: 2469, column: 7)
!22216 = !DILocation(line: 2469, column: 42, scope: !22215)
!22217 = !DILocation(line: 2469, column: 47, scope: !22215)
!22218 = !DILocation(line: 2469, column: 51, scope: !22215)
!22219 = !DILocation(line: 2469, column: 60, scope: !22215)
!22220 = !DILocation(line: 2469, column: 7, scope: !22215)
!22221 = !DILocation(line: 2469, column: 7, scope: !22124)
!22222 = !DILocation(line: 2471, column: 11, scope: !22223)
!22223 = distinct !DILexicalBlock(scope: !22215, file: !3, line: 2469, column: 66)
!22224 = !DILocation(line: 2471, column: 39, scope: !22223)
!22225 = !DILocation(line: 2471, column: 9, scope: !22223)
!22226 = !DILocation(line: 2472, column: 9, scope: !22227)
!22227 = distinct !DILexicalBlock(scope: !22223, file: !3, line: 2472, column: 8)
!22228 = !DILocation(line: 2472, column: 14, scope: !22227)
!22229 = !DILocation(line: 2472, column: 17, scope: !22227)
!22230 = !DILocation(line: 2472, column: 21, scope: !22227)
!22231 = !DILocation(line: 2472, column: 26, scope: !22227)
!22232 = !DILocation(line: 2472, column: 30, scope: !22227)
!22233 = !DILocation(line: 2472, column: 39, scope: !22227)
!22234 = !DILocation(line: 2472, column: 8, scope: !22223)
!22235 = !DILocation(line: 2473, column: 21, scope: !22227)
!22236 = !DILocation(line: 2473, column: 5, scope: !22227)
!22237 = !DILocation(line: 2475, column: 36, scope: !22223)
!22238 = !DILocation(line: 2475, column: 4, scope: !22223)
!22239 = !DILocation(line: 2475, column: 8, scope: !22223)
!22240 = !DILocation(line: 2475, column: 13, scope: !22223)
!22241 = !DILocation(line: 2475, column: 17, scope: !22223)
!22242 = !DILocation(line: 2475, column: 26, scope: !22223)
!22243 = !DILocation(line: 2475, column: 34, scope: !22223)
!22244 = !DILocation(line: 2476, column: 11, scope: !22223)
!22245 = !DILocation(line: 2476, column: 39, scope: !22223)
!22246 = !DILocation(line: 2476, column: 9, scope: !22223)
!22247 = !DILocation(line: 2477, column: 9, scope: !22248)
!22248 = distinct !DILexicalBlock(scope: !22223, file: !3, line: 2477, column: 8)
!22249 = !DILocation(line: 2477, column: 14, scope: !22248)
!22250 = !DILocation(line: 2477, column: 17, scope: !22248)
!22251 = !DILocation(line: 2477, column: 21, scope: !22248)
!22252 = !DILocation(line: 2477, column: 26, scope: !22248)
!22253 = !DILocation(line: 2477, column: 30, scope: !22248)
!22254 = !DILocation(line: 2477, column: 39, scope: !22248)
!22255 = !DILocation(line: 2477, column: 8, scope: !22223)
!22256 = !DILocation(line: 2478, column: 21, scope: !22248)
!22257 = !DILocation(line: 2478, column: 5, scope: !22248)
!22258 = !DILocation(line: 2480, column: 36, scope: !22223)
!22259 = !DILocation(line: 2480, column: 4, scope: !22223)
!22260 = !DILocation(line: 2480, column: 8, scope: !22223)
!22261 = !DILocation(line: 2480, column: 13, scope: !22223)
!22262 = !DILocation(line: 2480, column: 17, scope: !22223)
!22263 = !DILocation(line: 2480, column: 26, scope: !22223)
!22264 = !DILocation(line: 2480, column: 34, scope: !22223)
!22265 = !DILocation(line: 2481, column: 3, scope: !22223)
!22266 = !DILocation(line: 2482, column: 37, scope: !22267)
!22267 = distinct !DILexicalBlock(scope: !22124, file: !3, line: 2482, column: 7)
!22268 = !DILocation(line: 2482, column: 41, scope: !22267)
!22269 = !DILocation(line: 2482, column: 46, scope: !22267)
!22270 = !DILocation(line: 2482, column: 50, scope: !22267)
!22271 = !DILocation(line: 2482, column: 59, scope: !22267)
!22272 = !DILocation(line: 2482, column: 7, scope: !22267)
!22273 = !DILocation(line: 2482, column: 7, scope: !22124)
!22274 = !DILocation(line: 2484, column: 11, scope: !22275)
!22275 = distinct !DILexicalBlock(scope: !22267, file: !3, line: 2482, column: 65)
!22276 = !DILocation(line: 2484, column: 43, scope: !22275)
!22277 = !DILocation(line: 2484, column: 9, scope: !22275)
!22278 = !DILocation(line: 2485, column: 9, scope: !22279)
!22279 = distinct !DILexicalBlock(scope: !22275, file: !3, line: 2485, column: 8)
!22280 = !DILocation(line: 2485, column: 14, scope: !22279)
!22281 = !DILocation(line: 2485, column: 17, scope: !22279)
!22282 = !DILocation(line: 2485, column: 21, scope: !22279)
!22283 = !DILocation(line: 2485, column: 26, scope: !22279)
!22284 = !DILocation(line: 2485, column: 30, scope: !22279)
!22285 = !DILocation(line: 2485, column: 39, scope: !22279)
!22286 = !DILocation(line: 2485, column: 8, scope: !22275)
!22287 = !DILocation(line: 2486, column: 21, scope: !22279)
!22288 = !DILocation(line: 2486, column: 5, scope: !22279)
!22289 = !DILocation(line: 2488, column: 8, scope: !22290)
!22290 = distinct !DILexicalBlock(scope: !22275, file: !3, line: 2488, column: 8)
!22291 = !DILocation(line: 2488, column: 13, scope: !22290)
!22292 = !DILocation(line: 2488, column: 17, scope: !22290)
!22293 = !DILocation(line: 2488, column: 21, scope: !22290)
!22294 = !DILocation(line: 2488, column: 26, scope: !22290)
!22295 = !DILocation(line: 2488, column: 30, scope: !22290)
!22296 = !DILocation(line: 2488, column: 39, scope: !22290)
!22297 = !DILocation(line: 2488, column: 8, scope: !22275)
!22298 = !DILocation(line: 2489, column: 21, scope: !22290)
!22299 = !DILocation(line: 2489, column: 5, scope: !22290)
!22300 = !DILocation(line: 2491, column: 32, scope: !22275)
!22301 = !DILocation(line: 2491, column: 4, scope: !22275)
!22302 = !DILocation(line: 2491, column: 8, scope: !22275)
!22303 = !DILocation(line: 2491, column: 13, scope: !22275)
!22304 = !DILocation(line: 2491, column: 17, scope: !22275)
!22305 = !DILocation(line: 2491, column: 26, scope: !22275)
!22306 = !DILocation(line: 2491, column: 30, scope: !22275)
!22307 = !DILocation(line: 2492, column: 3, scope: !22275)
!22308 = !DILocation(line: 2493, column: 10, scope: !22124)
!22309 = !DILocation(line: 2493, column: 8, scope: !22124)
!22310 = !DILocation(line: 2494, column: 11, scope: !22124)
!22311 = !DILocation(line: 2494, column: 15, scope: !22124)
!22312 = !DILocation(line: 2494, column: 20, scope: !22124)
!22313 = !DILocation(line: 2494, column: 24, scope: !22124)
!22314 = !DILocation(line: 2494, column: 33, scope: !22124)
!22315 = !DILocation(line: 2494, column: 3, scope: !22124)
!22316 = !DILocation(line: 2496, column: 9, scope: !22317)
!22317 = distinct !DILexicalBlock(scope: !22318, file: !3, line: 2496, column: 8)
!22318 = distinct !DILexicalBlock(scope: !22124, file: !3, line: 2494, column: 39)
!22319 = !DILocation(line: 2496, column: 14, scope: !22317)
!22320 = !DILocation(line: 2496, column: 22, scope: !22317)
!22321 = !DILocation(line: 2496, column: 8, scope: !22318)
!22322 = !DILocation(line: 2497, column: 9, scope: !22323)
!22323 = distinct !DILexicalBlock(scope: !22324, file: !3, line: 2497, column: 9)
!22324 = distinct !DILexicalBlock(scope: !22317, file: !3, line: 2496, column: 31)
!22325 = !DILocation(line: 2497, column: 15, scope: !22323)
!22326 = !DILocation(line: 2497, column: 9, scope: !22324)
!22327 = !DILocation(line: 2501, column: 23, scope: !22323)
!22328 = !DILocation(line: 2501, column: 27, scope: !22323)
!22329 = !DILocation(line: 2498, column: 6, scope: !22323)
!22330 = !DILocation(line: 2502, column: 5, scope: !22324)
!22331 = !DILocation(line: 2504, column: 5, scope: !22324)
!22332 = !DILocation(line: 2506, column: 5, scope: !22324)
!22333 = !DILocation(line: 2506, column: 9, scope: !22324)
!22334 = !DILocation(line: 2506, column: 14, scope: !22324)
!22335 = !DILocation(line: 2506, column: 18, scope: !22324)
!22336 = !DILocation(line: 2506, column: 27, scope: !22324)
!22337 = !DILocation(line: 2506, column: 32, scope: !22324)
!22338 = !DILocation(line: 2507, column: 5, scope: !22324)
!22339 = !DILocation(line: 2509, column: 4, scope: !22318)
!22340 = !DILocation(line: 2511, column: 9, scope: !22341)
!22341 = distinct !DILexicalBlock(scope: !22318, file: !3, line: 2511, column: 8)
!22342 = !DILocation(line: 2511, column: 14, scope: !22341)
!22343 = !DILocation(line: 2511, column: 22, scope: !22341)
!22344 = !DILocation(line: 2511, column: 8, scope: !22318)
!22345 = !DILocation(line: 2512, column: 9, scope: !22346)
!22346 = distinct !DILexicalBlock(scope: !22347, file: !3, line: 2512, column: 9)
!22347 = distinct !DILexicalBlock(scope: !22341, file: !3, line: 2511, column: 31)
!22348 = !DILocation(line: 2512, column: 15, scope: !22346)
!22349 = !DILocation(line: 2512, column: 9, scope: !22347)
!22350 = !DILocation(line: 2516, column: 23, scope: !22346)
!22351 = !DILocation(line: 2516, column: 27, scope: !22346)
!22352 = !DILocation(line: 2513, column: 6, scope: !22346)
!22353 = !DILocation(line: 2517, column: 5, scope: !22347)
!22354 = !DILocation(line: 2517, column: 9, scope: !22347)
!22355 = !DILocation(line: 2517, column: 14, scope: !22347)
!22356 = !DILocation(line: 2517, column: 18, scope: !22347)
!22357 = !DILocation(line: 2517, column: 27, scope: !22347)
!22358 = !DILocation(line: 2517, column: 32, scope: !22347)
!22359 = !DILocation(line: 2518, column: 5, scope: !22347)
!22360 = !DILocation(line: 2511, column: 25, scope: !22341)
!22361 = !DILabel(scope: !22318, name: "check_framesync", file: !3, line: 2520)
!22362 = !DILocation(line: 2520, column: 3, scope: !22318)
!22363 = !DILocation(line: 2521, column: 11, scope: !22318)
!22364 = !DILocation(line: 2521, column: 9, scope: !22318)
!22365 = !DILocation(line: 2522, column: 8, scope: !22366)
!22366 = distinct !DILexicalBlock(scope: !22318, file: !3, line: 2522, column: 8)
!22367 = !DILocation(line: 2522, column: 13, scope: !22366)
!22368 = !DILocation(line: 2522, column: 8, scope: !22318)
!22369 = !DILocation(line: 2523, column: 9, scope: !22370)
!22370 = distinct !DILexicalBlock(scope: !22371, file: !3, line: 2523, column: 9)
!22371 = distinct !DILexicalBlock(scope: !22366, file: !3, line: 2522, column: 22)
!22372 = !DILocation(line: 2523, column: 15, scope: !22370)
!22373 = !DILocation(line: 2523, column: 9, scope: !22371)
!22374 = !DILocation(line: 2527, column: 23, scope: !22370)
!22375 = !DILocation(line: 2527, column: 27, scope: !22370)
!22376 = !DILocation(line: 2524, column: 6, scope: !22370)
!22377 = !DILocation(line: 2528, column: 5, scope: !22371)
!22378 = !DILocation(line: 2528, column: 9, scope: !22371)
!22379 = !DILocation(line: 2528, column: 14, scope: !22371)
!22380 = !DILocation(line: 2528, column: 18, scope: !22371)
!22381 = !DILocation(line: 2528, column: 27, scope: !22371)
!22382 = !DILocation(line: 2528, column: 32, scope: !22371)
!22383 = !DILocation(line: 2529, column: 4, scope: !22371)
!22384 = !DILocation(line: 2530, column: 4, scope: !22318)
!22385 = !DILocation(line: 2532, column: 9, scope: !22386)
!22386 = distinct !DILexicalBlock(scope: !22318, file: !3, line: 2532, column: 8)
!22387 = !DILocation(line: 2532, column: 14, scope: !22386)
!22388 = !DILocation(line: 2532, column: 22, scope: !22386)
!22389 = !DILocation(line: 2532, column: 8, scope: !22318)
!22390 = !DILocation(line: 2533, column: 9, scope: !22391)
!22391 = distinct !DILexicalBlock(scope: !22392, file: !3, line: 2533, column: 9)
!22392 = distinct !DILexicalBlock(scope: !22386, file: !3, line: 2532, column: 31)
!22393 = !DILocation(line: 2533, column: 15, scope: !22391)
!22394 = !DILocation(line: 2533, column: 9, scope: !22392)
!22395 = !DILocation(line: 2537, column: 23, scope: !22391)
!22396 = !DILocation(line: 2537, column: 27, scope: !22391)
!22397 = !DILocation(line: 2534, column: 6, scope: !22391)
!22398 = !DILocation(line: 2538, column: 5, scope: !22392)
!22399 = !DILocation(line: 2538, column: 9, scope: !22392)
!22400 = !DILocation(line: 2538, column: 14, scope: !22392)
!22401 = !DILocation(line: 2538, column: 18, scope: !22392)
!22402 = !DILocation(line: 2538, column: 27, scope: !22392)
!22403 = !DILocation(line: 2538, column: 32, scope: !22392)
!22404 = !DILocation(line: 2539, column: 5, scope: !22392)
!22405 = !DILocation(line: 2541, column: 11, scope: !22318)
!22406 = !DILocation(line: 2541, column: 9, scope: !22318)
!22407 = !DILocation(line: 2542, column: 8, scope: !22408)
!22408 = distinct !DILexicalBlock(scope: !22318, file: !3, line: 2542, column: 8)
!22409 = !DILocation(line: 2542, column: 13, scope: !22408)
!22410 = !DILocation(line: 2542, column: 8, scope: !22318)
!22411 = !DILocation(line: 2543, column: 9, scope: !22412)
!22412 = distinct !DILexicalBlock(scope: !22413, file: !3, line: 2543, column: 9)
!22413 = distinct !DILexicalBlock(scope: !22408, file: !3, line: 2542, column: 22)
!22414 = !DILocation(line: 2543, column: 15, scope: !22412)
!22415 = !DILocation(line: 2543, column: 9, scope: !22413)
!22416 = !DILocation(line: 2547, column: 23, scope: !22412)
!22417 = !DILocation(line: 2547, column: 27, scope: !22412)
!22418 = !DILocation(line: 2544, column: 6, scope: !22412)
!22419 = !DILocation(line: 2548, column: 5, scope: !22413)
!22420 = !DILocation(line: 2548, column: 9, scope: !22413)
!22421 = !DILocation(line: 2548, column: 14, scope: !22413)
!22422 = !DILocation(line: 2548, column: 18, scope: !22413)
!22423 = !DILocation(line: 2548, column: 27, scope: !22413)
!22424 = !DILocation(line: 2548, column: 32, scope: !22413)
!22425 = !DILocation(line: 2549, column: 4, scope: !22413)
!22426 = !DILocation(line: 2550, column: 4, scope: !22318)
!22427 = !DILocation(line: 2552, column: 2, scope: !22124)
!22428 = !DILocation(line: 2554, column: 35, scope: !22429)
!22429 = distinct !DILexicalBlock(scope: !21936, file: !3, line: 2554, column: 6)
!22430 = !DILocation(line: 2554, column: 39, scope: !22429)
!22431 = !DILocation(line: 2554, column: 6, scope: !22429)
!22432 = !DILocation(line: 2554, column: 6, scope: !21936)
!22433 = !DILocation(line: 2555, column: 21, scope: !22429)
!22434 = !DILocation(line: 2555, column: 3, scope: !22429)
!22435 = !DILocation(line: 2557, column: 6, scope: !22436)
!22436 = distinct !DILexicalBlock(scope: !21936, file: !3, line: 2557, column: 6)
!22437 = !DILocation(line: 2557, column: 10, scope: !22436)
!22438 = !DILocation(line: 2557, column: 6, scope: !21936)
!22439 = !DILocation(line: 2558, column: 17, scope: !22436)
!22440 = !DILocation(line: 2558, column: 3, scope: !22436)
!22441 = !DILocation(line: 2559, column: 1, scope: !21936)
!22442 = distinct !DISubprogram(name: "hfcmulti_dtmf", scope: !3, file: !3, line: 1825, type: !9447, scopeLine: 1826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22443 = !DILocalVariable(name: "hc", arg: 1, scope: !22442, file: !3, line: 1825, type: !9128)
!22444 = !DILocation(line: 1825, column: 33, scope: !22442)
!22445 = !DILocalVariable(name: "coeff", scope: !22442, file: !3, line: 1827, type: !9668)
!22446 = !DILocation(line: 1827, column: 8, scope: !22442)
!22447 = !DILocalVariable(name: "mantissa", scope: !22442, file: !3, line: 1828, type: !9152)
!22448 = !DILocation(line: 1828, column: 9, scope: !22442)
!22449 = !DILocalVariable(name: "co", scope: !22442, file: !3, line: 1829, type: !37)
!22450 = !DILocation(line: 1829, column: 7, scope: !22442)
!22451 = !DILocalVariable(name: "ch", scope: !22442, file: !3, line: 1829, type: !37)
!22452 = !DILocation(line: 1829, column: 11, scope: !22442)
!22453 = !DILocalVariable(name: "bch", scope: !22442, file: !3, line: 1830, type: !9617)
!22454 = !DILocation(line: 1830, column: 19, scope: !22442)
!22455 = !DILocalVariable(name: "exponent", scope: !22442, file: !3, line: 1831, type: !1397)
!22456 = !DILocation(line: 1831, column: 6, scope: !22442)
!22457 = !DILocalVariable(name: "dtmf", scope: !22442, file: !3, line: 1832, type: !37)
!22458 = !DILocation(line: 1832, column: 7, scope: !22442)
!22459 = !DILocalVariable(name: "addr", scope: !22442, file: !3, line: 1833, type: !37)
!22460 = !DILocation(line: 1833, column: 7, scope: !22442)
!22461 = !DILocalVariable(name: "w_float", scope: !22442, file: !3, line: 1834, type: !1038)
!22462 = !DILocation(line: 1834, column: 7, scope: !22442)
!22463 = !DILocalVariable(name: "skb", scope: !22442, file: !3, line: 1835, type: !420)
!22464 = !DILocation(line: 1835, column: 18, scope: !22442)
!22465 = !DILocalVariable(name: "hh", scope: !22442, file: !3, line: 1836, type: !9683)
!22466 = !DILocation(line: 1836, column: 20, scope: !22442)
!22467 = !DILocation(line: 1838, column: 6, scope: !22468)
!22468 = distinct !DILexicalBlock(scope: !22442, file: !3, line: 1838, column: 6)
!22469 = !DILocation(line: 1838, column: 12, scope: !22468)
!22470 = !DILocation(line: 1838, column: 6, scope: !22442)
!22471 = !DILocation(line: 1839, column: 3, scope: !22468)
!22472 = !DILocation(line: 1840, column: 10, scope: !22473)
!22473 = distinct !DILexicalBlock(scope: !22442, file: !3, line: 1840, column: 2)
!22474 = !DILocation(line: 1840, column: 7, scope: !22473)
!22475 = !DILocation(line: 1840, column: 15, scope: !22476)
!22476 = distinct !DILexicalBlock(scope: !22473, file: !3, line: 1840, column: 2)
!22477 = !DILocation(line: 1840, column: 18, scope: !22476)
!22478 = !DILocation(line: 1840, column: 2, scope: !22473)
!22479 = !DILocation(line: 1842, column: 9, scope: !22480)
!22480 = distinct !DILexicalBlock(scope: !22476, file: !3, line: 1840, column: 31)
!22481 = !DILocation(line: 1842, column: 13, scope: !22480)
!22482 = !DILocation(line: 1842, column: 18, scope: !22480)
!22483 = !DILocation(line: 1842, column: 22, scope: !22480)
!22484 = !DILocation(line: 1842, column: 7, scope: !22480)
!22485 = !DILocation(line: 1843, column: 8, scope: !22486)
!22486 = distinct !DILexicalBlock(scope: !22480, file: !3, line: 1843, column: 7)
!22487 = !DILocation(line: 1843, column: 7, scope: !22480)
!22488 = !DILocation(line: 1844, column: 4, scope: !22486)
!22489 = !DILocation(line: 1845, column: 8, scope: !22490)
!22490 = distinct !DILexicalBlock(scope: !22480, file: !3, line: 1845, column: 7)
!22491 = !DILocation(line: 1845, column: 12, scope: !22490)
!22492 = !DILocation(line: 1845, column: 20, scope: !22490)
!22493 = !DILocation(line: 1845, column: 24, scope: !22490)
!22494 = !DILocation(line: 1845, column: 29, scope: !22490)
!22495 = !DILocation(line: 1845, column: 33, scope: !22490)
!22496 = !DILocation(line: 1845, column: 7, scope: !22480)
!22497 = !DILocation(line: 1846, column: 4, scope: !22490)
!22498 = !DILocation(line: 1847, column: 35, scope: !22499)
!22499 = distinct !DILexicalBlock(scope: !22480, file: !3, line: 1847, column: 7)
!22500 = !DILocation(line: 1847, column: 40, scope: !22499)
!22501 = !DILocation(line: 1847, column: 8, scope: !22499)
!22502 = !DILocation(line: 1847, column: 7, scope: !22480)
!22503 = !DILocation(line: 1848, column: 4, scope: !22499)
!22504 = !DILocation(line: 1849, column: 7, scope: !22505)
!22505 = distinct !DILexicalBlock(scope: !22480, file: !3, line: 1849, column: 7)
!22506 = !DILocation(line: 1849, column: 13, scope: !22505)
!22507 = !DILocation(line: 1849, column: 7, scope: !22480)
!22508 = !DILocation(line: 1851, column: 21, scope: !22505)
!22509 = !DILocation(line: 1850, column: 4, scope: !22505)
!22510 = !DILocation(line: 1852, column: 13, scope: !22480)
!22511 = !DILocation(line: 1852, column: 17, scope: !22480)
!22512 = !DILocation(line: 1852, column: 22, scope: !22480)
!22513 = !DILocation(line: 1852, column: 26, scope: !22480)
!22514 = !DILocation(line: 1852, column: 32, scope: !22480)
!22515 = !DILocation(line: 1852, column: 36, scope: !22480)
!22516 = !DILocation(line: 1852, column: 41, scope: !22480)
!22517 = !DILocation(line: 1852, column: 45, scope: !22480)
!22518 = !DILocation(line: 1852, column: 57, scope: !22480)
!22519 = !DILocation(line: 1852, column: 9, scope: !22480)
!22520 = !DILocation(line: 1853, column: 8, scope: !22480)
!22521 = !DILocation(line: 1854, column: 11, scope: !22522)
!22522 = distinct !DILexicalBlock(scope: !22480, file: !3, line: 1854, column: 3)
!22523 = !DILocation(line: 1854, column: 8, scope: !22522)
!22524 = !DILocation(line: 1854, column: 16, scope: !22525)
!22525 = distinct !DILexicalBlock(scope: !22522, file: !3, line: 1854, column: 3)
!22526 = !DILocation(line: 1854, column: 19, scope: !22525)
!22527 = !DILocation(line: 1854, column: 3, scope: !22522)
!22528 = !DILocation(line: 1856, column: 11, scope: !22529)
!22529 = distinct !DILexicalBlock(scope: !22525, file: !3, line: 1854, column: 30)
!22530 = !DILocation(line: 1856, column: 15, scope: !22529)
!22531 = !DILocation(line: 1856, column: 28, scope: !22529)
!22532 = !DILocation(line: 1856, column: 31, scope: !22529)
!22533 = !DILocation(line: 1856, column: 40, scope: !22529)
!22534 = !DILocation(line: 1856, column: 43, scope: !22529)
!22535 = !DILocation(line: 1856, column: 37, scope: !22529)
!22536 = !DILocation(line: 1856, column: 24, scope: !22529)
!22537 = !DILocation(line: 1856, column: 9, scope: !22529)
!22538 = !DILocation(line: 1857, column: 4, scope: !22529)
!22539 = !DILocation(line: 1858, column: 4, scope: !22529)
!22540 = !DILocation(line: 1859, column: 4, scope: !22529)
!22541 = !DILocation(line: 1861, column: 14, scope: !22529)
!22542 = !DILocation(line: 1861, column: 12, scope: !22529)
!22543 = !DILocation(line: 1862, column: 16, scope: !22529)
!22544 = !DILocation(line: 1862, column: 48, scope: !22529)
!22545 = !DILocation(line: 1862, column: 12, scope: !22529)
!22546 = !DILocation(line: 1863, column: 8, scope: !22547)
!22547 = distinct !DILexicalBlock(scope: !22529, file: !3, line: 1863, column: 8)
!22548 = !DILocation(line: 1863, column: 14, scope: !22547)
!22549 = !DILocation(line: 1863, column: 8, scope: !22529)
!22550 = !DILocation(line: 1864, column: 21, scope: !22547)
!22551 = !DILocation(line: 1864, column: 5, scope: !22547)
!22552 = !DILocation(line: 1867, column: 15, scope: !22529)
!22553 = !DILocation(line: 1867, column: 23, scope: !22529)
!22554 = !DILocation(line: 1867, column: 13, scope: !22529)
!22555 = !DILocation(line: 1868, column: 8, scope: !22556)
!22556 = distinct !DILexicalBlock(scope: !22529, file: !3, line: 1868, column: 8)
!22557 = !DILocation(line: 1868, column: 16, scope: !22556)
!22558 = !DILocation(line: 1868, column: 8, scope: !22529)
!22559 = !DILocation(line: 1869, column: 14, scope: !22556)
!22560 = !DILocation(line: 1869, column: 5, scope: !22556)
!22561 = !DILocation(line: 1870, column: 16, scope: !22529)
!22562 = !DILocation(line: 1870, column: 24, scope: !22529)
!22563 = !DILocation(line: 1870, column: 31, scope: !22529)
!22564 = !DILocation(line: 1870, column: 15, scope: !22529)
!22565 = !DILocation(line: 1870, column: 13, scope: !22529)
!22566 = !DILocation(line: 1871, column: 8, scope: !22567)
!22567 = distinct !DILexicalBlock(scope: !22529, file: !3, line: 1871, column: 8)
!22568 = !DILocation(line: 1871, column: 8, scope: !22529)
!22569 = !DILocation(line: 1872, column: 14, scope: !22570)
!22570 = distinct !DILexicalBlock(scope: !22567, file: !3, line: 1871, column: 18)
!22571 = !DILocation(line: 1873, column: 19, scope: !22570)
!22572 = !DILocation(line: 1873, column: 28, scope: !22570)
!22573 = !DILocation(line: 1873, column: 14, scope: !22570)
!22574 = !DILocation(line: 1874, column: 4, scope: !22570)
!22575 = !DILocation(line: 1877, column: 21, scope: !22529)
!22576 = !DILocation(line: 1877, column: 4, scope: !22529)
!22577 = !DILocation(line: 1877, column: 10, scope: !22529)
!22578 = !DILocation(line: 1877, column: 13, scope: !22529)
!22579 = !DILocation(line: 1877, column: 19, scope: !22529)
!22580 = !DILocation(line: 1880, column: 14, scope: !22529)
!22581 = !DILocation(line: 1880, column: 12, scope: !22529)
!22582 = !DILocation(line: 1881, column: 16, scope: !22529)
!22583 = !DILocation(line: 1881, column: 48, scope: !22529)
!22584 = !DILocation(line: 1881, column: 12, scope: !22529)
!22585 = !DILocation(line: 1882, column: 8, scope: !22586)
!22586 = distinct !DILexicalBlock(scope: !22529, file: !3, line: 1882, column: 8)
!22587 = !DILocation(line: 1882, column: 14, scope: !22586)
!22588 = !DILocation(line: 1882, column: 8, scope: !22529)
!22589 = !DILocation(line: 1883, column: 21, scope: !22586)
!22590 = !DILocation(line: 1883, column: 5, scope: !22586)
!22591 = !DILocation(line: 1886, column: 15, scope: !22529)
!22592 = !DILocation(line: 1886, column: 23, scope: !22529)
!22593 = !DILocation(line: 1886, column: 13, scope: !22529)
!22594 = !DILocation(line: 1887, column: 8, scope: !22595)
!22595 = distinct !DILexicalBlock(scope: !22529, file: !3, line: 1887, column: 8)
!22596 = !DILocation(line: 1887, column: 16, scope: !22595)
!22597 = !DILocation(line: 1887, column: 8, scope: !22529)
!22598 = !DILocation(line: 1888, column: 14, scope: !22595)
!22599 = !DILocation(line: 1888, column: 5, scope: !22595)
!22600 = !DILocation(line: 1889, column: 16, scope: !22529)
!22601 = !DILocation(line: 1889, column: 24, scope: !22529)
!22602 = !DILocation(line: 1889, column: 31, scope: !22529)
!22603 = !DILocation(line: 1889, column: 15, scope: !22529)
!22604 = !DILocation(line: 1889, column: 13, scope: !22529)
!22605 = !DILocation(line: 1890, column: 8, scope: !22606)
!22606 = distinct !DILexicalBlock(scope: !22529, file: !3, line: 1890, column: 8)
!22607 = !DILocation(line: 1890, column: 8, scope: !22529)
!22608 = !DILocation(line: 1891, column: 14, scope: !22609)
!22609 = distinct !DILexicalBlock(scope: !22606, file: !3, line: 1890, column: 18)
!22610 = !DILocation(line: 1892, column: 19, scope: !22609)
!22611 = !DILocation(line: 1892, column: 28, scope: !22609)
!22612 = !DILocation(line: 1892, column: 14, scope: !22609)
!22613 = !DILocation(line: 1893, column: 4, scope: !22609)
!22614 = !DILocation(line: 1896, column: 27, scope: !22529)
!22615 = !DILocation(line: 1896, column: 4, scope: !22529)
!22616 = !DILocation(line: 1896, column: 11, scope: !22529)
!22617 = !DILocation(line: 1896, column: 14, scope: !22529)
!22618 = !DILocation(line: 1896, column: 20, scope: !22529)
!22619 = !DILocation(line: 1896, column: 25, scope: !22529)
!22620 = !DILocation(line: 1897, column: 3, scope: !22529)
!22621 = !DILocation(line: 1854, column: 26, scope: !22525)
!22622 = !DILocation(line: 1854, column: 3, scope: !22525)
!22623 = distinct !{!22623, !22527, !22624}
!22624 = !DILocation(line: 1897, column: 3, scope: !22522)
!22625 = !DILocation(line: 1898, column: 7, scope: !22626)
!22626 = distinct !DILexicalBlock(scope: !22480, file: !3, line: 1898, column: 7)
!22627 = !DILocation(line: 1898, column: 13, scope: !22626)
!22628 = !DILocation(line: 1898, column: 7, scope: !22480)
!22629 = !DILocation(line: 1901, column: 11, scope: !22626)
!22630 = !DILocation(line: 1901, column: 21, scope: !22626)
!22631 = !DILocation(line: 1901, column: 31, scope: !22626)
!22632 = !DILocation(line: 1901, column: 41, scope: !22626)
!22633 = !DILocation(line: 1902, column: 11, scope: !22626)
!22634 = !DILocation(line: 1902, column: 21, scope: !22626)
!22635 = !DILocation(line: 1902, column: 31, scope: !22626)
!22636 = !DILocation(line: 1902, column: 41, scope: !22626)
!22637 = !DILocation(line: 1899, column: 4, scope: !22626)
!22638 = !DILocation(line: 1903, column: 3, scope: !22480)
!22639 = !DILocation(line: 1903, column: 7, scope: !22480)
!22640 = !DILocation(line: 1903, column: 12, scope: !22480)
!22641 = !DILocation(line: 1903, column: 16, scope: !22480)
!22642 = !DILocation(line: 1903, column: 27, scope: !22480)
!22643 = !DILocation(line: 1904, column: 7, scope: !22644)
!22644 = distinct !DILexicalBlock(scope: !22480, file: !3, line: 1904, column: 7)
!22645 = !DILocation(line: 1904, column: 11, scope: !22644)
!22646 = !DILocation(line: 1904, column: 16, scope: !22644)
!22647 = !DILocation(line: 1904, column: 20, scope: !22644)
!22648 = !DILocation(line: 1904, column: 32, scope: !22644)
!22649 = !DILocation(line: 1904, column: 7, scope: !22480)
!22650 = !DILocation(line: 1905, column: 4, scope: !22651)
!22651 = distinct !DILexicalBlock(scope: !22644, file: !3, line: 1904, column: 38)
!22652 = !DILocation(line: 1905, column: 8, scope: !22651)
!22653 = !DILocation(line: 1905, column: 13, scope: !22651)
!22654 = !DILocation(line: 1905, column: 17, scope: !22651)
!22655 = !DILocation(line: 1905, column: 29, scope: !22651)
!22656 = !DILocation(line: 1906, column: 10, scope: !22651)
!22657 = !DILocation(line: 1906, column: 8, scope: !22651)
!22658 = !DILocation(line: 1907, column: 9, scope: !22659)
!22659 = distinct !DILexicalBlock(scope: !22651, file: !3, line: 1907, column: 8)
!22660 = !DILocation(line: 1907, column: 8, scope: !22651)
!22661 = !DILocation(line: 1908, column: 5, scope: !22662)
!22662 = distinct !DILexicalBlock(scope: !22659, file: !3, line: 1907, column: 14)
!22663 = !DILocation(line: 1910, column: 5, scope: !22662)
!22664 = !DILocation(line: 1912, column: 9, scope: !22651)
!22665 = !DILocation(line: 1912, column: 7, scope: !22651)
!22666 = !DILocation(line: 1913, column: 4, scope: !22651)
!22667 = !DILocation(line: 1913, column: 8, scope: !22651)
!22668 = !DILocation(line: 1913, column: 13, scope: !22651)
!22669 = !DILocation(line: 1914, column: 4, scope: !22651)
!22670 = !DILocation(line: 1914, column: 8, scope: !22651)
!22671 = !DILocation(line: 1914, column: 11, scope: !22651)
!22672 = !DILocation(line: 1915, column: 17, scope: !22651)
!22673 = !DILocation(line: 1915, column: 22, scope: !22651)
!22674 = !DILocation(line: 1915, column: 26, scope: !22651)
!22675 = !DILocation(line: 1915, column: 31, scope: !22651)
!22676 = !DILocation(line: 1915, column: 35, scope: !22651)
!22677 = !DILocation(line: 1915, column: 4, scope: !22651)
!22678 = !DILocation(line: 1916, column: 22, scope: !22651)
!22679 = !DILocation(line: 1916, column: 27, scope: !22651)
!22680 = !DILocation(line: 1916, column: 4, scope: !22651)
!22681 = !DILocation(line: 1917, column: 3, scope: !22651)
!22682 = !DILocation(line: 1918, column: 2, scope: !22480)
!22683 = !DILocation(line: 1840, column: 27, scope: !22476)
!22684 = !DILocation(line: 1840, column: 2, scope: !22476)
!22685 = distinct !{!22685, !22478, !22686}
!22686 = !DILocation(line: 1918, column: 2, scope: !22473)
!22687 = !DILocation(line: 1921, column: 13, scope: !22442)
!22688 = !DILocation(line: 1921, column: 2, scope: !22442)
!22689 = !DILocation(line: 1921, column: 6, scope: !22442)
!22690 = !DILocation(line: 1921, column: 11, scope: !22442)
!22691 = !DILocation(line: 1922, column: 6, scope: !22692)
!22692 = distinct !DILexicalBlock(scope: !22442, file: !3, line: 1922, column: 6)
!22693 = !DILocation(line: 1922, column: 6, scope: !22442)
!22694 = !DILocation(line: 1923, column: 3, scope: !22692)
!22695 = !DILocation(line: 1924, column: 1, scope: !22442)
!22696 = distinct !DISubprogram(name: "fifo_irq", scope: !3, file: !3, line: 2629, type: !11792, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22697 = !DILocalVariable(name: "hc", arg: 1, scope: !22696, file: !3, line: 2629, type: !9128)
!22698 = !DILocation(line: 2629, column: 28, scope: !22696)
!22699 = !DILocalVariable(name: "block", arg: 2, scope: !22696, file: !3, line: 2629, type: !37)
!22700 = !DILocation(line: 2629, column: 36, scope: !22696)
!22701 = !DILocalVariable(name: "ch", scope: !22696, file: !3, line: 2631, type: !37)
!22702 = !DILocation(line: 2631, column: 6, scope: !22696)
!22703 = !DILocalVariable(name: "j", scope: !22696, file: !3, line: 2631, type: !37)
!22704 = !DILocation(line: 2631, column: 10, scope: !22696)
!22705 = !DILocalVariable(name: "dch", scope: !22696, file: !3, line: 2632, type: !9538)
!22706 = !DILocation(line: 2632, column: 19, scope: !22696)
!22707 = !DILocalVariable(name: "bch", scope: !22696, file: !3, line: 2633, type: !9617)
!22708 = !DILocation(line: 2633, column: 19, scope: !22696)
!22709 = !DILocalVariable(name: "r_irq_fifo_bl", scope: !22696, file: !3, line: 2634, type: !9432)
!22710 = !DILocation(line: 2634, column: 9, scope: !22696)
!22711 = !DILocation(line: 2636, column: 18, scope: !22696)
!22712 = !DILocation(line: 2636, column: 16, scope: !22696)
!22713 = !DILocation(line: 2637, column: 4, scope: !22696)
!22714 = !DILocation(line: 2638, column: 2, scope: !22696)
!22715 = !DILocation(line: 2638, column: 9, scope: !22696)
!22716 = !DILocation(line: 2638, column: 11, scope: !22696)
!22717 = !DILocation(line: 2639, column: 9, scope: !22718)
!22718 = distinct !DILexicalBlock(scope: !22696, file: !3, line: 2638, column: 16)
!22719 = !DILocation(line: 2639, column: 15, scope: !22718)
!22720 = !DILocation(line: 2639, column: 24, scope: !22718)
!22721 = !DILocation(line: 2639, column: 26, scope: !22718)
!22722 = !DILocation(line: 2639, column: 21, scope: !22718)
!22723 = !DILocation(line: 2639, column: 6, scope: !22718)
!22724 = !DILocation(line: 2640, column: 9, scope: !22718)
!22725 = !DILocation(line: 2640, column: 13, scope: !22718)
!22726 = !DILocation(line: 2640, column: 18, scope: !22718)
!22727 = !DILocation(line: 2640, column: 22, scope: !22718)
!22728 = !DILocation(line: 2640, column: 7, scope: !22718)
!22729 = !DILocation(line: 2641, column: 9, scope: !22718)
!22730 = !DILocation(line: 2641, column: 13, scope: !22718)
!22731 = !DILocation(line: 2641, column: 18, scope: !22718)
!22732 = !DILocation(line: 2641, column: 22, scope: !22718)
!22733 = !DILocation(line: 2641, column: 7, scope: !22718)
!22734 = !DILocation(line: 2642, column: 10, scope: !22735)
!22735 = distinct !DILexicalBlock(scope: !22718, file: !3, line: 2642, column: 7)
!22736 = !DILocation(line: 2642, column: 15, scope: !22735)
!22737 = !DILocation(line: 2642, column: 20, scope: !22735)
!22738 = !DILocation(line: 2642, column: 26, scope: !22735)
!22739 = !DILocation(line: 2642, column: 31, scope: !22735)
!22740 = !DILocation(line: 2642, column: 35, scope: !22735)
!22741 = !DILocation(line: 2642, column: 43, scope: !22735)
!22742 = !DILocation(line: 2642, column: 47, scope: !22735)
!22743 = !DILocation(line: 2642, column: 52, scope: !22735)
!22744 = !DILocation(line: 2642, column: 56, scope: !22735)
!22745 = !DILocation(line: 2642, column: 7, scope: !22718)
!22746 = !DILocation(line: 2643, column: 6, scope: !22747)
!22747 = distinct !DILexicalBlock(scope: !22735, file: !3, line: 2642, column: 64)
!22748 = !DILocation(line: 2644, column: 4, scope: !22747)
!22749 = distinct !{!22749, !22714, !22750}
!22750 = !DILocation(line: 2670, column: 2, scope: !22696)
!22751 = !DILocation(line: 2646, column: 7, scope: !22752)
!22752 = distinct !DILexicalBlock(scope: !22718, file: !3, line: 2646, column: 7)
!22753 = !DILocation(line: 2646, column: 11, scope: !22752)
!22754 = !DILocation(line: 2646, column: 15, scope: !22752)
!22755 = !DILocation(line: 2646, column: 37, scope: !22752)
!22756 = !DILocation(line: 2646, column: 34, scope: !22752)
!22757 = !DILocation(line: 2646, column: 29, scope: !22752)
!22758 = !DILocation(line: 2646, column: 41, scope: !22752)
!22759 = !DILocation(line: 2647, column: 29, scope: !22752)
!22760 = !DILocation(line: 2647, column: 34, scope: !22752)
!22761 = !DILocation(line: 2647, column: 7, scope: !22752)
!22762 = !DILocation(line: 2646, column: 7, scope: !22718)
!22763 = !DILocation(line: 2648, column: 16, scope: !22764)
!22764 = distinct !DILexicalBlock(scope: !22752, file: !3, line: 2647, column: 42)
!22765 = !DILocation(line: 2648, column: 20, scope: !22764)
!22766 = !DILocation(line: 2648, column: 4, scope: !22764)
!22767 = !DILocation(line: 2650, column: 4, scope: !22764)
!22768 = !DILocation(line: 2651, column: 4, scope: !22764)
!22769 = !DILocation(line: 2652, column: 3, scope: !22764)
!22770 = !DILocation(line: 2653, column: 7, scope: !22771)
!22771 = distinct !DILexicalBlock(scope: !22718, file: !3, line: 2653, column: 7)
!22772 = !DILocation(line: 2653, column: 11, scope: !22771)
!22773 = !DILocation(line: 2653, column: 15, scope: !22771)
!22774 = !DILocation(line: 2653, column: 37, scope: !22771)
!22775 = !DILocation(line: 2653, column: 34, scope: !22771)
!22776 = !DILocation(line: 2653, column: 29, scope: !22771)
!22777 = !DILocation(line: 2653, column: 41, scope: !22771)
!22778 = !DILocation(line: 2654, column: 29, scope: !22771)
!22779 = !DILocation(line: 2654, column: 34, scope: !22771)
!22780 = !DILocation(line: 2654, column: 7, scope: !22771)
!22781 = !DILocation(line: 2653, column: 7, scope: !22718)
!22782 = !DILocation(line: 2655, column: 16, scope: !22783)
!22783 = distinct !DILexicalBlock(scope: !22771, file: !3, line: 2654, column: 42)
!22784 = !DILocation(line: 2655, column: 20, scope: !22783)
!22785 = !DILocation(line: 2655, column: 4, scope: !22783)
!22786 = !DILocation(line: 2657, column: 4, scope: !22783)
!22787 = !DILocation(line: 2658, column: 4, scope: !22783)
!22788 = !DILocation(line: 2659, column: 3, scope: !22783)
!22789 = !DILocation(line: 2660, column: 4, scope: !22718)
!22790 = !DILocation(line: 2661, column: 7, scope: !22791)
!22791 = distinct !DILexicalBlock(scope: !22718, file: !3, line: 2661, column: 7)
!22792 = !DILocation(line: 2661, column: 11, scope: !22791)
!22793 = !DILocation(line: 2661, column: 15, scope: !22791)
!22794 = !DILocation(line: 2661, column: 37, scope: !22791)
!22795 = !DILocation(line: 2661, column: 34, scope: !22791)
!22796 = !DILocation(line: 2661, column: 29, scope: !22791)
!22797 = !DILocation(line: 2661, column: 41, scope: !22791)
!22798 = !DILocation(line: 2662, column: 29, scope: !22791)
!22799 = !DILocation(line: 2662, column: 34, scope: !22791)
!22800 = !DILocation(line: 2662, column: 7, scope: !22791)
!22801 = !DILocation(line: 2661, column: 7, scope: !22718)
!22802 = !DILocation(line: 2663, column: 16, scope: !22803)
!22803 = distinct !DILexicalBlock(scope: !22791, file: !3, line: 2662, column: 42)
!22804 = !DILocation(line: 2663, column: 20, scope: !22803)
!22805 = !DILocation(line: 2663, column: 4, scope: !22803)
!22806 = !DILocation(line: 2664, column: 3, scope: !22803)
!22807 = !DILocation(line: 2665, column: 7, scope: !22808)
!22808 = distinct !DILexicalBlock(scope: !22718, file: !3, line: 2665, column: 7)
!22809 = !DILocation(line: 2665, column: 11, scope: !22808)
!22810 = !DILocation(line: 2665, column: 15, scope: !22808)
!22811 = !DILocation(line: 2665, column: 37, scope: !22808)
!22812 = !DILocation(line: 2665, column: 34, scope: !22808)
!22813 = !DILocation(line: 2665, column: 29, scope: !22808)
!22814 = !DILocation(line: 2665, column: 41, scope: !22808)
!22815 = !DILocation(line: 2666, column: 29, scope: !22808)
!22816 = !DILocation(line: 2666, column: 34, scope: !22808)
!22817 = !DILocation(line: 2666, column: 7, scope: !22808)
!22818 = !DILocation(line: 2665, column: 7, scope: !22718)
!22819 = !DILocation(line: 2667, column: 16, scope: !22820)
!22820 = distinct !DILexicalBlock(scope: !22808, file: !3, line: 2666, column: 42)
!22821 = !DILocation(line: 2667, column: 20, scope: !22820)
!22822 = !DILocation(line: 2667, column: 4, scope: !22820)
!22823 = !DILocation(line: 2668, column: 3, scope: !22820)
!22824 = !DILocation(line: 2669, column: 4, scope: !22718)
!22825 = !DILocation(line: 2671, column: 1, scope: !22696)
!22826 = distinct !DISubprogram(name: "queue_work", scope: !1808, file: !1808, line: 504, type: !22827, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22827 = !DISubroutineType(types: !22828)
!22828 = !{!540, !2757, !1817}
!22829 = !DILocalVariable(name: "wq", arg: 1, scope: !22826, file: !1808, line: 504, type: !2757)
!22830 = !DILocation(line: 504, column: 56, scope: !22826)
!22831 = !DILocalVariable(name: "work", arg: 2, scope: !22826, file: !1808, line: 505, type: !1817)
!22832 = !DILocation(line: 505, column: 30, scope: !22826)
!22833 = !DILocation(line: 507, column: 41, scope: !22826)
!22834 = !DILocation(line: 507, column: 45, scope: !22826)
!22835 = !DILocation(line: 507, column: 9, scope: !22826)
!22836 = !DILocation(line: 507, column: 2, scope: !22826)
!22837 = distinct !DISubprogram(name: "hfcmulti_rx", scope: !3, file: !3, line: 2178, type: !11792, scopeLine: 2179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22838 = !DILocalVariable(name: "hc", arg: 1, scope: !22837, file: !3, line: 2178, type: !9128)
!22839 = !DILocation(line: 2178, column: 31, scope: !22837)
!22840 = !DILocalVariable(name: "ch", arg: 2, scope: !22837, file: !3, line: 2178, type: !37)
!22841 = !DILocation(line: 2178, column: 39, scope: !22837)
!22842 = !DILocalVariable(name: "temp", scope: !22837, file: !3, line: 2180, type: !37)
!22843 = !DILocation(line: 2180, column: 6, scope: !22837)
!22844 = !DILocalVariable(name: "Zsize", scope: !22837, file: !3, line: 2181, type: !37)
!22845 = !DILocation(line: 2181, column: 6, scope: !22837)
!22846 = !DILocalVariable(name: "z1", scope: !22837, file: !3, line: 2181, type: !37)
!22847 = !DILocation(line: 2181, column: 13, scope: !22837)
!22848 = !DILocalVariable(name: "z2", scope: !22837, file: !3, line: 2181, type: !37)
!22849 = !DILocation(line: 2181, column: 17, scope: !22837)
!22850 = !DILocalVariable(name: "f1", scope: !22837, file: !3, line: 2182, type: !37)
!22851 = !DILocation(line: 2182, column: 6, scope: !22837)
!22852 = !DILocalVariable(name: "f2", scope: !22837, file: !3, line: 2182, type: !37)
!22853 = !DILocation(line: 2182, column: 14, scope: !22837)
!22854 = !DILocalVariable(name: "again", scope: !22837, file: !3, line: 2183, type: !37)
!22855 = !DILocation(line: 2183, column: 6, scope: !22837)
!22856 = !DILocalVariable(name: "bch", scope: !22837, file: !3, line: 2184, type: !9617)
!22857 = !DILocation(line: 2184, column: 19, scope: !22837)
!22858 = !DILocalVariable(name: "dch", scope: !22837, file: !3, line: 2185, type: !9538)
!22859 = !DILocation(line: 2185, column: 20, scope: !22837)
!22860 = !DILocalVariable(name: "skb", scope: !22837, file: !3, line: 2186, type: !420)
!22861 = !DILocation(line: 2186, column: 18, scope: !22837)
!22862 = !DILocalVariable(name: "sp", scope: !22837, file: !3, line: 2186, type: !8485)
!22863 = !DILocation(line: 2186, column: 25, scope: !22837)
!22864 = !DILocalVariable(name: "maxlen", scope: !22837, file: !3, line: 2187, type: !37)
!22865 = !DILocation(line: 2187, column: 6, scope: !22837)
!22866 = !DILocation(line: 2189, column: 8, scope: !22837)
!22867 = !DILocation(line: 2189, column: 12, scope: !22837)
!22868 = !DILocation(line: 2189, column: 17, scope: !22837)
!22869 = !DILocation(line: 2189, column: 21, scope: !22837)
!22870 = !DILocation(line: 2189, column: 6, scope: !22837)
!22871 = !DILocation(line: 2190, column: 6, scope: !22872)
!22872 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2190, column: 6)
!22873 = !DILocation(line: 2190, column: 6, scope: !22837)
!22874 = !DILocation(line: 2191, column: 30, scope: !22875)
!22875 = distinct !DILexicalBlock(scope: !22876, file: !3, line: 2191, column: 7)
!22876 = distinct !DILexicalBlock(scope: !22872, file: !3, line: 2190, column: 11)
!22877 = !DILocation(line: 2191, column: 35, scope: !22875)
!22878 = !DILocation(line: 2191, column: 8, scope: !22875)
!22879 = !DILocation(line: 2191, column: 7, scope: !22876)
!22880 = !DILocation(line: 2192, column: 4, scope: !22875)
!22881 = !DILocation(line: 2193, column: 2, scope: !22876)
!22882 = !DILocation(line: 2193, column: 13, scope: !22883)
!22883 = distinct !DILexicalBlock(scope: !22872, file: !3, line: 2193, column: 13)
!22884 = !DILocation(line: 2193, column: 17, scope: !22883)
!22885 = !DILocation(line: 2193, column: 22, scope: !22883)
!22886 = !DILocation(line: 2193, column: 26, scope: !22883)
!22887 = !DILocation(line: 2193, column: 13, scope: !22872)
!22888 = !DILocation(line: 2194, column: 9, scope: !22889)
!22889 = distinct !DILexicalBlock(scope: !22883, file: !3, line: 2193, column: 31)
!22890 = !DILocation(line: 2194, column: 13, scope: !22889)
!22891 = !DILocation(line: 2194, column: 18, scope: !22889)
!22892 = !DILocation(line: 2194, column: 22, scope: !22889)
!22893 = !DILocation(line: 2194, column: 7, scope: !22889)
!22894 = !DILocation(line: 2195, column: 30, scope: !22895)
!22895 = distinct !DILexicalBlock(scope: !22889, file: !3, line: 2195, column: 7)
!22896 = !DILocation(line: 2195, column: 35, scope: !22895)
!22897 = !DILocation(line: 2195, column: 8, scope: !22895)
!22898 = !DILocation(line: 2195, column: 7, scope: !22889)
!22899 = !DILocation(line: 2196, column: 4, scope: !22895)
!22900 = !DILocation(line: 2197, column: 2, scope: !22889)
!22901 = !DILocation(line: 2198, column: 3, scope: !22902)
!22902 = distinct !DILexicalBlock(scope: !22883, file: !3, line: 2197, column: 9)
!22903 = !DILabel(scope: !22837, name: "next_frame", file: !3, line: 2200)
!22904 = !DILocation(line: 2200, column: 1, scope: !22837)
!22905 = !DILocation(line: 2203, column: 32, scope: !22906)
!22906 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2203, column: 6)
!22907 = !DILocation(line: 2203, column: 36, scope: !22906)
!22908 = !DILocation(line: 2203, column: 6, scope: !22906)
!22909 = !DILocation(line: 2203, column: 42, scope: !22906)
!22910 = !DILocation(line: 2204, column: 7, scope: !22906)
!22911 = !DILocation(line: 2204, column: 11, scope: !22906)
!22912 = !DILocation(line: 2204, column: 16, scope: !22906)
!22913 = !DILocation(line: 2204, column: 20, scope: !22906)
!22914 = !DILocation(line: 2204, column: 29, scope: !22906)
!22915 = !DILocation(line: 2204, column: 46, scope: !22906)
!22916 = !DILocation(line: 2205, column: 7, scope: !22906)
!22917 = !DILocation(line: 2205, column: 11, scope: !22906)
!22918 = !DILocation(line: 2205, column: 16, scope: !22906)
!22919 = !DILocation(line: 2205, column: 20, scope: !22906)
!22920 = !DILocation(line: 2205, column: 28, scope: !22906)
!22921 = !DILocation(line: 2205, column: 33, scope: !22906)
!22922 = !DILocation(line: 2206, column: 7, scope: !22906)
!22923 = !DILocation(line: 2206, column: 11, scope: !22906)
!22924 = !DILocation(line: 2206, column: 16, scope: !22906)
!22925 = !DILocation(line: 2206, column: 20, scope: !22906)
!22926 = !DILocation(line: 2206, column: 28, scope: !22906)
!22927 = !DILocation(line: 2203, column: 6, scope: !22837)
!22928 = !DILocation(line: 2207, column: 3, scope: !22906)
!22929 = !DILocation(line: 2209, column: 3, scope: !22906)
!22930 = !DILocation(line: 2210, column: 2, scope: !22837)
!22931 = !DILocation(line: 2213, column: 6, scope: !22932)
!22932 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2213, column: 6)
!22933 = !DILocation(line: 2213, column: 10, scope: !22932)
!22934 = !DILocation(line: 2213, column: 15, scope: !22932)
!22935 = !DILocation(line: 2213, column: 19, scope: !22932)
!22936 = !DILocation(line: 2213, column: 6, scope: !22837)
!22937 = !DILocation(line: 2214, column: 7, scope: !22938)
!22938 = distinct !DILexicalBlock(scope: !22939, file: !3, line: 2214, column: 7)
!22939 = distinct !DILexicalBlock(scope: !22932, file: !3, line: 2213, column: 27)
!22940 = !DILocation(line: 2214, column: 7, scope: !22939)
!22941 = !DILocation(line: 2215, column: 20, scope: !22938)
!22942 = !DILocation(line: 2215, column: 4, scope: !22938)
!22943 = !DILocation(line: 2215, column: 9, scope: !22938)
!22944 = !DILocation(line: 2215, column: 17, scope: !22938)
!22945 = !DILocation(line: 2216, column: 3, scope: !22939)
!22946 = !DILocation(line: 2219, column: 6, scope: !22947)
!22947 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2219, column: 6)
!22948 = !DILocation(line: 2219, column: 10, scope: !22947)
!22949 = !DILocation(line: 2219, column: 33, scope: !22947)
!22950 = !DILocation(line: 2219, column: 38, scope: !22947)
!22951 = !DILocation(line: 2219, column: 13, scope: !22947)
!22952 = !DILocation(line: 2219, column: 6, scope: !22837)
!22953 = !DILocation(line: 2220, column: 8, scope: !22954)
!22954 = distinct !DILexicalBlock(scope: !22947, file: !3, line: 2219, column: 46)
!22955 = !DILocation(line: 2220, column: 6, scope: !22954)
!22956 = !DILocation(line: 2221, column: 3, scope: !22954)
!22957 = !DILocation(line: 2221, column: 10, scope: !22954)
!22958 = !DILocation(line: 2221, column: 24, scope: !22954)
!22959 = !DILocation(line: 2221, column: 22, scope: !22954)
!22960 = !DILocation(line: 2221, column: 13, scope: !22954)
!22961 = !DILocation(line: 2222, column: 8, scope: !22962)
!22962 = distinct !DILexicalBlock(scope: !22963, file: !3, line: 2222, column: 8)
!22963 = distinct !DILexicalBlock(scope: !22954, file: !3, line: 2221, column: 52)
!22964 = !DILocation(line: 2222, column: 14, scope: !22962)
!22965 = !DILocation(line: 2222, column: 8, scope: !22963)
!22966 = !DILocation(line: 2225, column: 22, scope: !22962)
!22967 = !DILocation(line: 2225, column: 26, scope: !22962)
!22968 = !DILocation(line: 2225, column: 29, scope: !22962)
!22969 = !DILocation(line: 2225, column: 34, scope: !22962)
!22970 = !DILocation(line: 2225, column: 40, scope: !22962)
!22971 = !DILocation(line: 2223, column: 5, scope: !22962)
!22972 = !DILocation(line: 2226, column: 9, scope: !22963)
!22973 = !DILocation(line: 2226, column: 7, scope: !22963)
!22974 = distinct !{!22974, !22956, !22975}
!22975 = !DILocation(line: 2227, column: 3, scope: !22954)
!22976 = !DILocation(line: 2228, column: 8, scope: !22954)
!22977 = !DILocation(line: 2228, column: 6, scope: !22954)
!22978 = !DILocation(line: 2229, column: 2, scope: !22954)
!22979 = !DILocation(line: 2230, column: 7, scope: !22837)
!22980 = !DILocation(line: 2230, column: 35, scope: !22837)
!22981 = !DILocation(line: 2230, column: 39, scope: !22837)
!22982 = !DILocation(line: 2230, column: 33, scope: !22837)
!22983 = !DILocation(line: 2230, column: 5, scope: !22837)
!22984 = !DILocation(line: 2231, column: 2, scope: !22837)
!22985 = !DILocation(line: 2231, column: 9, scope: !22837)
!22986 = !DILocation(line: 2231, column: 24, scope: !22837)
!22987 = !DILocation(line: 2231, column: 52, scope: !22837)
!22988 = !DILocation(line: 2231, column: 56, scope: !22837)
!22989 = !DILocation(line: 2231, column: 50, scope: !22837)
!22990 = !DILocation(line: 2231, column: 21, scope: !22837)
!22991 = !DILocation(line: 2231, column: 12, scope: !22837)
!22992 = !DILocation(line: 2232, column: 7, scope: !22993)
!22993 = distinct !DILexicalBlock(scope: !22994, file: !3, line: 2232, column: 7)
!22994 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2231, column: 64)
!22995 = !DILocation(line: 2232, column: 13, scope: !22993)
!22996 = !DILocation(line: 2232, column: 7, scope: !22994)
!22997 = !DILocation(line: 2234, column: 33, scope: !22993)
!22998 = !DILocation(line: 2234, column: 37, scope: !22993)
!22999 = !DILocation(line: 2234, column: 40, scope: !22993)
!23000 = !DILocation(line: 2234, column: 45, scope: !22993)
!23001 = !DILocation(line: 2234, column: 51, scope: !22993)
!23002 = !DILocation(line: 2233, column: 4, scope: !22993)
!23003 = !DILocation(line: 2235, column: 8, scope: !22994)
!23004 = !DILocation(line: 2235, column: 6, scope: !22994)
!23005 = distinct !{!23005, !22984, !23006}
!23006 = !DILocation(line: 2236, column: 2, scope: !22837)
!23007 = !DILocation(line: 2237, column: 7, scope: !22837)
!23008 = !DILocation(line: 2237, column: 35, scope: !22837)
!23009 = !DILocation(line: 2237, column: 39, scope: !22837)
!23010 = !DILocation(line: 2237, column: 33, scope: !22837)
!23011 = !DILocation(line: 2237, column: 5, scope: !22837)
!23012 = !DILocation(line: 2238, column: 10, scope: !22837)
!23013 = !DILocation(line: 2238, column: 15, scope: !22837)
!23014 = !DILocation(line: 2238, column: 13, scope: !22837)
!23015 = !DILocation(line: 2238, column: 8, scope: !22837)
!23016 = !DILocation(line: 2239, column: 7, scope: !23017)
!23017 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2239, column: 6)
!23018 = !DILocation(line: 2239, column: 11, scope: !23017)
!23019 = !DILocation(line: 2239, column: 34, scope: !23017)
!23020 = !DILocation(line: 2239, column: 39, scope: !23017)
!23021 = !DILocation(line: 2239, column: 14, scope: !23017)
!23022 = !DILocation(line: 2239, column: 47, scope: !23017)
!23023 = !DILocation(line: 2239, column: 50, scope: !23017)
!23024 = !DILocation(line: 2239, column: 56, scope: !23017)
!23025 = !DILocation(line: 2239, column: 53, scope: !23017)
!23026 = !DILocation(line: 2239, column: 6, scope: !22837)
!23027 = !DILocation(line: 2241, column: 8, scope: !23017)
!23028 = !DILocation(line: 2241, column: 3, scope: !23017)
!23029 = !DILocation(line: 2242, column: 6, scope: !23030)
!23030 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2242, column: 6)
!23031 = !DILocation(line: 2242, column: 12, scope: !23030)
!23032 = !DILocation(line: 2242, column: 6, scope: !22837)
!23033 = !DILocation(line: 2243, column: 12, scope: !23030)
!23034 = !DILocation(line: 2243, column: 16, scope: !23030)
!23035 = !DILocation(line: 2243, column: 9, scope: !23030)
!23036 = !DILocation(line: 2243, column: 3, scope: !23030)
!23037 = !DILocation(line: 2245, column: 6, scope: !23038)
!23038 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2245, column: 6)
!23039 = !DILocation(line: 2245, column: 12, scope: !23038)
!23040 = !DILocation(line: 2245, column: 6, scope: !22837)
!23041 = !DILocation(line: 2246, column: 3, scope: !23038)
!23042 = !DILocation(line: 2248, column: 6, scope: !23043)
!23043 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2248, column: 6)
!23044 = !DILocation(line: 2248, column: 6, scope: !22837)
!23045 = !DILocation(line: 2249, column: 31, scope: !23046)
!23046 = distinct !DILexicalBlock(scope: !23043, file: !3, line: 2248, column: 11)
!23047 = !DILocation(line: 2249, column: 36, scope: !23046)
!23048 = !DILocation(line: 2249, column: 12, scope: !23046)
!23049 = !DILocation(line: 2249, column: 10, scope: !23046)
!23050 = !DILocation(line: 2250, column: 7, scope: !23051)
!23051 = distinct !DILexicalBlock(scope: !23046, file: !3, line: 2250, column: 7)
!23052 = !DILocation(line: 2250, column: 14, scope: !23051)
!23053 = !DILocation(line: 2250, column: 7, scope: !23046)
!23054 = !DILocation(line: 2251, column: 4, scope: !23055)
!23055 = distinct !DILexicalBlock(scope: !23051, file: !3, line: 2250, column: 19)
!23056 = !DILocation(line: 2253, column: 4, scope: !23055)
!23057 = !DILocation(line: 2255, column: 9, scope: !23046)
!23058 = !DILocation(line: 2255, column: 14, scope: !23046)
!23059 = !DILocation(line: 2255, column: 6, scope: !23046)
!23060 = !DILocation(line: 2256, column: 12, scope: !23046)
!23061 = !DILocation(line: 2256, column: 17, scope: !23046)
!23062 = !DILocation(line: 2256, column: 10, scope: !23046)
!23063 = !DILocation(line: 2257, column: 2, scope: !23046)
!23064 = !DILocation(line: 2258, column: 9, scope: !23065)
!23065 = distinct !DILexicalBlock(scope: !23043, file: !3, line: 2257, column: 9)
!23066 = !DILocation(line: 2258, column: 14, scope: !23065)
!23067 = !DILocation(line: 2258, column: 6, scope: !23065)
!23068 = !DILocation(line: 2259, column: 12, scope: !23065)
!23069 = !DILocation(line: 2259, column: 17, scope: !23065)
!23070 = !DILocation(line: 2259, column: 24, scope: !23065)
!23071 = !DILocation(line: 2259, column: 10, scope: !23065)
!23072 = !DILocation(line: 2260, column: 8, scope: !23073)
!23073 = distinct !DILexicalBlock(scope: !23065, file: !3, line: 2260, column: 7)
!23074 = !DILocation(line: 2260, column: 7, scope: !23073)
!23075 = !DILocation(line: 2260, column: 11, scope: !23073)
!23076 = !DILocation(line: 2260, column: 7, scope: !23065)
!23077 = !DILocation(line: 2261, column: 23, scope: !23078)
!23078 = distinct !DILexicalBlock(scope: !23073, file: !3, line: 2260, column: 20)
!23079 = !DILocation(line: 2261, column: 10, scope: !23078)
!23080 = !DILocation(line: 2261, column: 5, scope: !23078)
!23081 = !DILocation(line: 2261, column: 8, scope: !23078)
!23082 = !DILocation(line: 2262, column: 9, scope: !23083)
!23083 = distinct !DILexicalBlock(scope: !23078, file: !3, line: 2262, column: 8)
!23084 = !DILocation(line: 2262, column: 8, scope: !23083)
!23085 = !DILocation(line: 2262, column: 12, scope: !23083)
!23086 = !DILocation(line: 2262, column: 8, scope: !23078)
!23087 = !DILocation(line: 2263, column: 5, scope: !23088)
!23088 = distinct !DILexicalBlock(scope: !23083, file: !3, line: 2262, column: 21)
!23089 = !DILocation(line: 2265, column: 5, scope: !23088)
!23090 = !DILocation(line: 2267, column: 3, scope: !23078)
!23091 = !DILocation(line: 2270, column: 6, scope: !23092)
!23092 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2270, column: 6)
!23093 = !DILocation(line: 2270, column: 6, scope: !22837)
!23094 = !DILocation(line: 2271, column: 27, scope: !23092)
!23095 = !DILocation(line: 2271, column: 31, scope: !23092)
!23096 = !DILocation(line: 2271, column: 36, scope: !23092)
!23097 = !DILocation(line: 2271, column: 40, scope: !23092)
!23098 = !DILocation(line: 2271, column: 24, scope: !23092)
!23099 = !DILocation(line: 2271, column: 3, scope: !23092)
!23100 = !DILocation(line: 2271, column: 7, scope: !23092)
!23101 = !DILocation(line: 2271, column: 19, scope: !23092)
!23102 = !DILocation(line: 2274, column: 6, scope: !23103)
!23103 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 2274, column: 6)
!23104 = !DILocation(line: 2274, column: 10, scope: !23103)
!23105 = !DILocation(line: 2274, column: 33, scope: !23103)
!23106 = !DILocation(line: 2274, column: 38, scope: !23103)
!23107 = !DILocation(line: 2274, column: 13, scope: !23103)
!23108 = !DILocation(line: 2274, column: 6, scope: !22837)
!23109 = !DILocation(line: 2275, column: 7, scope: !23110)
!23110 = distinct !DILexicalBlock(scope: !23111, file: !3, line: 2275, column: 7)
!23111 = distinct !DILexicalBlock(scope: !23103, file: !3, line: 2274, column: 46)
!23112 = !DILocation(line: 2275, column: 13, scope: !23110)
!23113 = !DILocation(line: 2275, column: 7, scope: !23111)
!23114 = !DILocation(line: 2278, column: 44, scope: !23110)
!23115 = !DILocation(line: 2278, column: 48, scope: !23110)
!23116 = !DILocation(line: 2278, column: 51, scope: !23110)
!23117 = !DILocation(line: 2278, column: 56, scope: !23110)
!23118 = !DILocation(line: 2279, column: 11, scope: !23110)
!23119 = !DILocation(line: 2279, column: 18, scope: !23110)
!23120 = !DILocation(line: 2279, column: 22, scope: !23110)
!23121 = !DILocation(line: 2279, column: 27, scope: !23110)
!23122 = !DILocation(line: 2279, column: 33, scope: !23110)
!23123 = !DILocation(line: 2279, column: 30, scope: !23110)
!23124 = !DILocation(line: 2279, column: 26, scope: !23110)
!23125 = !DILocation(line: 2280, column: 11, scope: !23110)
!23126 = !DILocation(line: 2280, column: 15, scope: !23110)
!23127 = !DILocation(line: 2280, column: 19, scope: !23110)
!23128 = !DILocation(line: 2280, column: 29, scope: !23110)
!23129 = !DILocation(line: 2280, column: 28, scope: !23110)
!23130 = !DILocation(line: 2280, column: 34, scope: !23110)
!23131 = !DILocation(line: 2280, column: 25, scope: !23110)
!23132 = !DILocation(line: 2280, column: 39, scope: !23110)
!23133 = !DILocation(line: 2276, column: 4, scope: !23110)
!23134 = !DILocation(line: 2282, column: 8, scope: !23135)
!23135 = distinct !DILexicalBlock(scope: !23111, file: !3, line: 2282, column: 7)
!23136 = !DILocation(line: 2282, column: 18, scope: !23135)
!23137 = !DILocation(line: 2282, column: 17, scope: !23135)
!23138 = !DILocation(line: 2282, column: 23, scope: !23135)
!23139 = !DILocation(line: 2282, column: 14, scope: !23135)
!23140 = !DILocation(line: 2282, column: 30, scope: !23135)
!23141 = !DILocation(line: 2282, column: 28, scope: !23135)
!23142 = !DILocation(line: 2282, column: 7, scope: !23111)
!23143 = !DILocation(line: 2283, column: 8, scope: !23144)
!23144 = distinct !DILexicalBlock(scope: !23145, file: !3, line: 2283, column: 8)
!23145 = distinct !DILexicalBlock(scope: !23135, file: !3, line: 2282, column: 38)
!23146 = !DILocation(line: 2283, column: 14, scope: !23144)
!23147 = !DILocation(line: 2283, column: 8, scope: !23145)
!23148 = !DILocation(line: 2286, column: 22, scope: !23144)
!23149 = !DILocation(line: 2286, column: 26, scope: !23144)
!23150 = !DILocation(line: 2286, column: 29, scope: !23144)
!23151 = !DILocation(line: 2284, column: 5, scope: !23144)
!23152 = !DILocation(line: 2287, column: 14, scope: !23145)
!23153 = !DILocation(line: 2287, column: 13, scope: !23145)
!23154 = !DILocation(line: 2287, column: 4, scope: !23145)
!23155 = !DILocation(line: 2288, column: 4, scope: !23145)
!23156 = !DILocation(line: 2289, column: 4, scope: !23145)
!23157 = !DILocation(line: 2290, column: 4, scope: !23145)
!23158 = !DILocation(line: 2293, column: 3, scope: !23111)
!23159 = !DILocation(line: 2293, column: 7, scope: !23111)
!23160 = !DILocation(line: 2293, column: 17, scope: !23111)
!23161 = !DILocation(line: 2293, column: 30, scope: !23111)
!23162 = !DILocation(line: 2293, column: 29, scope: !23111)
!23163 = !DILocation(line: 2293, column: 34, scope: !23111)
!23164 = !DILocation(line: 2293, column: 21, scope: !23111)
!23165 = !DILocation(line: 2293, column: 42, scope: !23111)
!23166 = !DILocation(line: 2295, column: 7, scope: !23167)
!23167 = distinct !DILexicalBlock(scope: !23111, file: !3, line: 2295, column: 7)
!23168 = !DILocation(line: 2295, column: 13, scope: !23167)
!23169 = !DILocation(line: 2295, column: 10, scope: !23167)
!23170 = !DILocation(line: 2295, column: 7, scope: !23111)
!23171 = !DILocation(line: 2297, column: 4, scope: !23172)
!23172 = distinct !DILexicalBlock(scope: !23167, file: !3, line: 2295, column: 17)
!23173 = !DILocation(line: 2298, column: 4, scope: !23172)
!23174 = !DILocation(line: 2300, column: 10, scope: !23175)
!23175 = distinct !DILexicalBlock(scope: !23172, file: !3, line: 2300, column: 8)
!23176 = !DILocation(line: 2300, column: 9, scope: !23175)
!23177 = !DILocation(line: 2300, column: 15, scope: !23175)
!23178 = !DILocation(line: 2300, column: 19, scope: !23175)
!23179 = !DILocation(line: 2300, column: 8, scope: !23172)
!23180 = !DILocation(line: 2301, column: 9, scope: !23181)
!23181 = distinct !DILexicalBlock(scope: !23182, file: !3, line: 2301, column: 9)
!23182 = distinct !DILexicalBlock(scope: !23175, file: !3, line: 2300, column: 24)
!23183 = !DILocation(line: 2301, column: 15, scope: !23181)
!23184 = !DILocation(line: 2301, column: 9, scope: !23182)
!23185 = !DILocation(line: 2304, column: 33, scope: !23181)
!23186 = !DILocation(line: 2304, column: 37, scope: !23181)
!23187 = !DILocation(line: 2304, column: 40, scope: !23181)
!23188 = !DILocation(line: 2302, column: 6, scope: !23181)
!23189 = !DILocation(line: 2305, column: 15, scope: !23182)
!23190 = !DILocation(line: 2305, column: 14, scope: !23182)
!23191 = !DILocation(line: 2305, column: 5, scope: !23182)
!23192 = !DILocation(line: 2306, column: 5, scope: !23182)
!23193 = !DILocation(line: 2309, column: 10, scope: !23194)
!23194 = distinct !DILexicalBlock(scope: !23172, file: !3, line: 2309, column: 8)
!23195 = !DILocation(line: 2309, column: 9, scope: !23194)
!23196 = !DILocation(line: 2309, column: 15, scope: !23194)
!23197 = !DILocation(line: 2309, column: 22, scope: !23194)
!23198 = !DILocation(line: 2309, column: 21, scope: !23194)
!23199 = !DILocation(line: 2309, column: 27, scope: !23194)
!23200 = !DILocation(line: 2309, column: 31, scope: !23194)
!23201 = !DILocation(line: 2309, column: 8, scope: !23194)
!23202 = !DILocation(line: 2309, column: 8, scope: !23172)
!23203 = !DILocation(line: 2310, column: 9, scope: !23204)
!23204 = distinct !DILexicalBlock(scope: !23205, file: !3, line: 2310, column: 9)
!23205 = distinct !DILexicalBlock(scope: !23194, file: !3, line: 2309, column: 37)
!23206 = !DILocation(line: 2310, column: 15, scope: !23204)
!23207 = !DILocation(line: 2310, column: 9, scope: !23205)
!23208 = !DILocation(line: 2311, column: 6, scope: !23204)
!23209 = !DILocation(line: 2313, column: 15, scope: !23205)
!23210 = !DILocation(line: 2313, column: 14, scope: !23205)
!23211 = !DILocation(line: 2313, column: 5, scope: !23205)
!23212 = !DILocation(line: 2314, column: 5, scope: !23205)
!23213 = !DILocation(line: 2316, column: 14, scope: !23172)
!23214 = !DILocation(line: 2316, column: 13, scope: !23172)
!23215 = !DILocation(line: 2316, column: 20, scope: !23172)
!23216 = !DILocation(line: 2316, column: 19, scope: !23172)
!23217 = !DILocation(line: 2316, column: 25, scope: !23172)
!23218 = !DILocation(line: 2316, column: 29, scope: !23172)
!23219 = !DILocation(line: 2316, column: 4, scope: !23172)
!23220 = !DILocation(line: 2317, column: 10, scope: !23221)
!23221 = distinct !DILexicalBlock(scope: !23172, file: !3, line: 2317, column: 8)
!23222 = !DILocation(line: 2317, column: 9, scope: !23221)
!23223 = !DILocation(line: 2317, column: 15, scope: !23221)
!23224 = !DILocation(line: 2317, column: 19, scope: !23221)
!23225 = !DILocation(line: 2317, column: 8, scope: !23172)
!23226 = !DILocation(line: 2318, column: 12, scope: !23227)
!23227 = distinct !DILexicalBlock(scope: !23221, file: !3, line: 2317, column: 38)
!23228 = !DILocation(line: 2318, column: 11, scope: !23227)
!23229 = !DILocation(line: 2318, column: 9, scope: !23227)
!23230 = !DILocation(line: 2319, column: 24, scope: !23227)
!23231 = !DILocation(line: 2319, column: 29, scope: !23227)
!23232 = !DILocation(line: 2319, column: 11, scope: !23227)
!23233 = !DILocation(line: 2319, column: 6, scope: !23227)
!23234 = !DILocation(line: 2319, column: 9, scope: !23227)
!23235 = !DILocation(line: 2320, column: 10, scope: !23236)
!23236 = distinct !DILexicalBlock(scope: !23227, file: !3, line: 2320, column: 9)
!23237 = !DILocation(line: 2320, column: 9, scope: !23236)
!23238 = !DILocation(line: 2320, column: 9, scope: !23227)
!23239 = !DILocation(line: 2321, column: 20, scope: !23240)
!23240 = distinct !DILexicalBlock(scope: !23236, file: !3, line: 2320, column: 14)
!23241 = !DILocation(line: 2321, column: 19, scope: !23240)
!23242 = !DILocation(line: 2321, column: 24, scope: !23240)
!23243 = !DILocation(line: 2321, column: 29, scope: !23240)
!23244 = !DILocation(line: 2321, column: 35, scope: !23240)
!23245 = !DILocation(line: 2321, column: 40, scope: !23240)
!23246 = !DILocation(line: 2321, column: 6, scope: !23240)
!23247 = !DILocation(line: 2322, column: 15, scope: !23240)
!23248 = !DILocation(line: 2322, column: 6, scope: !23240)
!23249 = !DILocation(line: 2323, column: 5, scope: !23240)
!23250 = !DILocation(line: 2324, column: 6, scope: !23251)
!23251 = distinct !DILexicalBlock(scope: !23236, file: !3, line: 2323, column: 12)
!23252 = !DILocation(line: 2326, column: 12, scope: !23251)
!23253 = !DILocation(line: 2326, column: 7, scope: !23251)
!23254 = !DILocation(line: 2326, column: 10, scope: !23251)
!23255 = !DILocation(line: 2327, column: 10, scope: !23251)
!23256 = !DILocation(line: 2329, column: 4, scope: !23227)
!23257 = !DILocation(line: 2330, column: 9, scope: !23258)
!23258 = distinct !DILexicalBlock(scope: !23221, file: !3, line: 2329, column: 11)
!23259 = !DILocation(line: 2332, column: 8, scope: !23260)
!23260 = distinct !DILexicalBlock(scope: !23172, file: !3, line: 2332, column: 8)
!23261 = !DILocation(line: 2332, column: 14, scope: !23260)
!23262 = !DILocation(line: 2332, column: 8, scope: !23172)
!23263 = !DILocation(line: 2334, column: 22, scope: !23264)
!23264 = distinct !DILexicalBlock(scope: !23260, file: !3, line: 2332, column: 37)
!23265 = !DILocation(line: 2334, column: 26, scope: !23264)
!23266 = !DILocation(line: 2334, column: 29, scope: !23264)
!23267 = !DILocation(line: 2333, column: 5, scope: !23264)
!23268 = !DILocation(line: 2335, column: 10, scope: !23264)
!23269 = !DILocation(line: 2336, column: 5, scope: !23264)
!23270 = !DILocation(line: 2336, column: 12, scope: !23264)
!23271 = !DILocation(line: 2336, column: 21, scope: !23264)
!23272 = !DILocation(line: 2336, column: 20, scope: !23264)
!23273 = !DILocation(line: 2336, column: 26, scope: !23264)
!23274 = !DILocation(line: 2336, column: 17, scope: !23264)
!23275 = !DILocation(line: 2337, column: 24, scope: !23264)
!23276 = !DILocation(line: 2337, column: 23, scope: !23264)
!23277 = !DILocation(line: 2337, column: 29, scope: !23264)
!23278 = !DILocation(line: 2337, column: 38, scope: !23264)
!23279 = !DILocation(line: 2337, column: 22, scope: !23264)
!23280 = !DILocation(line: 2337, column: 6, scope: !23264)
!23281 = distinct !{!23281, !23269, !23282}
!23282 = !DILocation(line: 2337, column: 41, scope: !23264)
!23283 = !DILocation(line: 2338, column: 5, scope: !23264)
!23284 = !DILocation(line: 2339, column: 4, scope: !23264)
!23285 = !DILocation(line: 2340, column: 8, scope: !23286)
!23286 = distinct !DILexicalBlock(scope: !23172, file: !3, line: 2340, column: 8)
!23287 = !DILocation(line: 2340, column: 8, scope: !23172)
!23288 = !DILocation(line: 2341, column: 19, scope: !23286)
!23289 = !DILocation(line: 2341, column: 5, scope: !23286)
!23290 = !DILocation(line: 2343, column: 19, scope: !23286)
!23291 = !DILocation(line: 2343, column: 5, scope: !23286)
!23292 = !DILocation(line: 2344, column: 10, scope: !23172)
!23293 = !DILocation(line: 2344, column: 5, scope: !23172)
!23294 = !DILocation(line: 2344, column: 8, scope: !23172)
!23295 = !DILocation(line: 2345, column: 9, scope: !23172)
!23296 = !DILocation(line: 2346, column: 4, scope: !23172)
!23297 = !DILocation(line: 2349, column: 2, scope: !23111)
!23298 = !DILocation(line: 2351, column: 3, scope: !23299)
!23299 = distinct !DILexicalBlock(scope: !23103, file: !3, line: 2349, column: 9)
!23300 = !DILocation(line: 2351, column: 7, scope: !23299)
!23301 = !DILocation(line: 2351, column: 17, scope: !23299)
!23302 = !DILocation(line: 2351, column: 30, scope: !23299)
!23303 = !DILocation(line: 2351, column: 29, scope: !23299)
!23304 = !DILocation(line: 2351, column: 34, scope: !23299)
!23305 = !DILocation(line: 2351, column: 21, scope: !23299)
!23306 = !DILocation(line: 2351, column: 42, scope: !23299)
!23307 = !DILocation(line: 2352, column: 7, scope: !23308)
!23308 = distinct !DILexicalBlock(scope: !23299, file: !3, line: 2352, column: 7)
!23309 = !DILocation(line: 2352, column: 13, scope: !23308)
!23310 = !DILocation(line: 2352, column: 7, scope: !23299)
!23311 = !DILocation(line: 2356, column: 21, scope: !23308)
!23312 = !DILocation(line: 2356, column: 25, scope: !23308)
!23313 = !DILocation(line: 2356, column: 28, scope: !23308)
!23314 = !DILocation(line: 2356, column: 33, scope: !23308)
!23315 = !DILocation(line: 2356, column: 37, scope: !23308)
!23316 = !DILocation(line: 2356, column: 44, scope: !23308)
!23317 = !DILocation(line: 2356, column: 48, scope: !23308)
!23318 = !DILocation(line: 2353, column: 4, scope: !23308)
!23319 = !DILocation(line: 2358, column: 17, scope: !23299)
!23320 = !DILocation(line: 2358, column: 22, scope: !23299)
!23321 = !DILocation(line: 2358, column: 26, scope: !23299)
!23322 = !DILocation(line: 2358, column: 31, scope: !23299)
!23323 = !DILocation(line: 2358, column: 35, scope: !23299)
!23324 = !DILocation(line: 2358, column: 3, scope: !23299)
!23325 = !DILocation(line: 2360, column: 1, scope: !22837)
!23326 = distinct !DISubprogram(name: "signal_state_up", scope: !3, file: !3, line: 2367, type: !23327, scopeLine: 2368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23327 = !DISubroutineType(types: !23328)
!23328 = !{null, !9538, !37, !577}
!23329 = !DILocalVariable(name: "dch", arg: 1, scope: !23326, file: !3, line: 2367, type: !9538)
!23330 = !DILocation(line: 2367, column: 34, scope: !23326)
!23331 = !DILocalVariable(name: "info", arg: 2, scope: !23326, file: !3, line: 2367, type: !37)
!23332 = !DILocation(line: 2367, column: 43, scope: !23326)
!23333 = !DILocalVariable(name: "msg", arg: 3, scope: !23326, file: !3, line: 2367, type: !577)
!23334 = !DILocation(line: 2367, column: 55, scope: !23326)
!23335 = !DILocalVariable(name: "skb", scope: !23326, file: !3, line: 2369, type: !420)
!23336 = !DILocation(line: 2369, column: 18, scope: !23326)
!23337 = !DILocalVariable(name: "id", scope: !23326, file: !3, line: 2370, type: !37)
!23338 = !DILocation(line: 2370, column: 7, scope: !23326)
!23339 = !DILocalVariable(name: "data", scope: !23326, file: !3, line: 2370, type: !37)
!23340 = !DILocation(line: 2370, column: 11, scope: !23326)
!23341 = !DILocation(line: 2370, column: 18, scope: !23326)
!23342 = !DILocation(line: 2372, column: 6, scope: !23343)
!23343 = distinct !DILexicalBlock(scope: !23326, file: !3, line: 2372, column: 6)
!23344 = !DILocation(line: 2372, column: 12, scope: !23343)
!23345 = !DILocation(line: 2372, column: 6, scope: !23326)
!23346 = !DILocation(line: 2373, column: 43, scope: !23343)
!23347 = !DILocation(line: 2373, column: 3, scope: !23343)
!23348 = !DILocation(line: 2375, column: 5, scope: !23326)
!23349 = !DILocation(line: 2377, column: 46, scope: !23326)
!23350 = !DILocation(line: 2377, column: 64, scope: !23326)
!23351 = !DILocation(line: 2377, column: 8, scope: !23326)
!23352 = !DILocation(line: 2377, column: 6, scope: !23326)
!23353 = !DILocation(line: 2379, column: 7, scope: !23354)
!23354 = distinct !DILexicalBlock(scope: !23326, file: !3, line: 2379, column: 6)
!23355 = !DILocation(line: 2379, column: 6, scope: !23326)
!23356 = !DILocation(line: 2380, column: 3, scope: !23354)
!23357 = !DILocation(line: 2381, column: 20, scope: !23326)
!23358 = !DILocation(line: 2381, column: 25, scope: !23326)
!23359 = !DILocation(line: 2381, column: 2, scope: !23326)
!23360 = !DILocation(line: 2382, column: 1, scope: !23326)
!23361 = distinct !DISubprogram(name: "hfcmulti_watchdog", scope: !3, file: !3, line: 1582, type: !9447, scopeLine: 1583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23362 = !DILocalVariable(name: "hc", arg: 1, scope: !23361, file: !3, line: 1582, type: !9128)
!23363 = !DILocation(line: 1582, column: 37, scope: !23361)
!23364 = !DILocation(line: 1584, column: 2, scope: !23361)
!23365 = !DILocation(line: 1584, column: 6, scope: !23361)
!23366 = !DILocation(line: 1584, column: 13, scope: !23361)
!23367 = !DILocation(line: 1586, column: 6, scope: !23368)
!23368 = distinct !DILexicalBlock(scope: !23361, file: !3, line: 1586, column: 6)
!23369 = !DILocation(line: 1586, column: 10, scope: !23368)
!23370 = !DILocation(line: 1586, column: 18, scope: !23368)
!23371 = !DILocation(line: 1586, column: 6, scope: !23361)
!23372 = !DILocation(line: 1587, column: 3, scope: !23373)
!23373 = distinct !DILexicalBlock(scope: !23368, file: !3, line: 1586, column: 24)
!23374 = !DILocation(line: 1587, column: 7, scope: !23373)
!23375 = !DILocation(line: 1587, column: 15, scope: !23373)
!23376 = !DILocation(line: 1588, column: 16, scope: !23373)
!23377 = !DILocation(line: 1588, column: 20, scope: !23373)
!23378 = !DILocation(line: 1588, column: 27, scope: !23373)
!23379 = !DILocation(line: 1588, column: 3, scope: !23373)
!23380 = !DILocation(line: 1588, column: 7, scope: !23373)
!23381 = !DILocation(line: 1588, column: 14, scope: !23373)
!23382 = !DILocation(line: 1592, column: 3, scope: !23373)
!23383 = !DILocation(line: 1593, column: 3, scope: !23373)
!23384 = !DILocation(line: 1594, column: 2, scope: !23373)
!23385 = !DILocation(line: 1595, column: 1, scope: !23361)
!23386 = distinct !DISubprogram(name: "vpm_init", scope: !3, file: !3, line: 732, type: !9447, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23387 = !DILocalVariable(name: "wc", arg: 1, scope: !23386, file: !3, line: 732, type: !9128)
!23388 = !DILocation(line: 732, column: 28, scope: !23386)
!23389 = !DILocalVariable(name: "reg", scope: !23386, file: !3, line: 734, type: !494)
!23390 = !DILocation(line: 734, column: 16, scope: !23386)
!23391 = !DILocalVariable(name: "mask", scope: !23386, file: !3, line: 735, type: !7)
!23392 = !DILocation(line: 735, column: 15, scope: !23386)
!23393 = !DILocalVariable(name: "i", scope: !23386, file: !3, line: 736, type: !7)
!23394 = !DILocation(line: 736, column: 15, scope: !23386)
!23395 = !DILocalVariable(name: "x", scope: !23386, file: !3, line: 736, type: !7)
!23396 = !DILocation(line: 736, column: 18, scope: !23386)
!23397 = !DILocalVariable(name: "y", scope: !23386, file: !3, line: 736, type: !7)
!23398 = !DILocation(line: 736, column: 21, scope: !23386)
!23399 = !DILocalVariable(name: "ver", scope: !23386, file: !3, line: 737, type: !7)
!23400 = !DILocation(line: 737, column: 15, scope: !23386)
!23401 = !DILocation(line: 739, column: 9, scope: !23402)
!23402 = distinct !DILexicalBlock(scope: !23386, file: !3, line: 739, column: 2)
!23403 = !DILocation(line: 739, column: 7, scope: !23402)
!23404 = !DILocation(line: 739, column: 14, scope: !23405)
!23405 = distinct !DILexicalBlock(scope: !23402, file: !3, line: 739, column: 2)
!23406 = !DILocation(line: 739, column: 16, scope: !23405)
!23407 = !DILocation(line: 739, column: 2, scope: !23402)
!23408 = !DILocation(line: 741, column: 8, scope: !23409)
!23409 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 741, column: 7)
!23410 = distinct !DILexicalBlock(scope: !23405, file: !3, line: 739, column: 31)
!23411 = !DILocation(line: 741, column: 7, scope: !23410)
!23412 = !DILocation(line: 742, column: 17, scope: !23413)
!23413 = distinct !DILexicalBlock(scope: !23409, file: !3, line: 741, column: 11)
!23414 = !DILocation(line: 742, column: 21, scope: !23413)
!23415 = !DILocation(line: 742, column: 10, scope: !23413)
!23416 = !DILocation(line: 742, column: 8, scope: !23413)
!23417 = !DILocation(line: 743, column: 50, scope: !23413)
!23418 = !DILocation(line: 743, column: 53, scope: !23413)
!23419 = !DILocation(line: 743, column: 4, scope: !23413)
!23420 = !DILocation(line: 744, column: 3, scope: !23413)
!23421 = !DILocation(line: 746, column: 10, scope: !23422)
!23422 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 746, column: 3)
!23423 = !DILocation(line: 746, column: 8, scope: !23422)
!23424 = !DILocation(line: 746, column: 15, scope: !23425)
!23425 = distinct !DILexicalBlock(scope: !23422, file: !3, line: 746, column: 3)
!23426 = !DILocation(line: 746, column: 17, scope: !23425)
!23427 = !DILocation(line: 746, column: 3, scope: !23422)
!23428 = !DILocation(line: 747, column: 12, scope: !23429)
!23429 = distinct !DILexicalBlock(scope: !23425, file: !3, line: 746, column: 27)
!23430 = !DILocation(line: 747, column: 16, scope: !23429)
!23431 = !DILocation(line: 747, column: 27, scope: !23429)
!23432 = !DILocation(line: 747, column: 25, scope: !23429)
!23433 = !DILocation(line: 747, column: 19, scope: !23429)
!23434 = !DILocation(line: 747, column: 4, scope: !23429)
!23435 = !DILocation(line: 748, column: 12, scope: !23429)
!23436 = !DILocation(line: 748, column: 16, scope: !23429)
!23437 = !DILocation(line: 748, column: 27, scope: !23429)
!23438 = !DILocation(line: 748, column: 25, scope: !23429)
!23439 = !DILocation(line: 748, column: 19, scope: !23429)
!23440 = !DILocation(line: 748, column: 4, scope: !23429)
!23441 = !DILocation(line: 749, column: 12, scope: !23429)
!23442 = !DILocation(line: 749, column: 16, scope: !23429)
!23443 = !DILocation(line: 749, column: 27, scope: !23429)
!23444 = !DILocation(line: 749, column: 25, scope: !23429)
!23445 = !DILocation(line: 749, column: 19, scope: !23429)
!23446 = !DILocation(line: 749, column: 4, scope: !23429)
!23447 = !DILocation(line: 750, column: 3, scope: !23429)
!23448 = !DILocation(line: 746, column: 23, scope: !23425)
!23449 = !DILocation(line: 746, column: 3, scope: !23425)
!23450 = distinct !{!23450, !23427, !23451}
!23451 = !DILocation(line: 750, column: 3, scope: !23422)
!23452 = !DILocation(line: 753, column: 16, scope: !23410)
!23453 = !DILocation(line: 753, column: 20, scope: !23410)
!23454 = !DILocation(line: 753, column: 9, scope: !23410)
!23455 = !DILocation(line: 753, column: 7, scope: !23410)
!23456 = !DILocation(line: 754, column: 11, scope: !23410)
!23457 = !DILocation(line: 754, column: 15, scope: !23410)
!23458 = !DILocation(line: 754, column: 25, scope: !23410)
!23459 = !DILocation(line: 754, column: 29, scope: !23410)
!23460 = !DILocation(line: 754, column: 3, scope: !23410)
!23461 = !DILocation(line: 757, column: 11, scope: !23410)
!23462 = !DILocation(line: 757, column: 15, scope: !23410)
!23463 = !DILocation(line: 757, column: 3, scope: !23410)
!23464 = !DILocation(line: 758, column: 11, scope: !23410)
!23465 = !DILocation(line: 758, column: 15, scope: !23410)
!23466 = !DILocation(line: 758, column: 3, scope: !23410)
!23467 = !DILocation(line: 761, column: 11, scope: !23410)
!23468 = !DILocation(line: 761, column: 15, scope: !23410)
!23469 = !DILocation(line: 761, column: 3, scope: !23410)
!23470 = !DILocation(line: 762, column: 25, scope: !23410)
!23471 = !DILocation(line: 762, column: 27, scope: !23410)
!23472 = !DILocation(line: 762, column: 21, scope: !23410)
!23473 = !DILocation(line: 762, column: 8, scope: !23410)
!23474 = !DILocation(line: 765, column: 10, scope: !23475)
!23475 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 765, column: 3)
!23476 = !DILocation(line: 765, column: 8, scope: !23475)
!23477 = !DILocation(line: 765, column: 15, scope: !23478)
!23478 = distinct !DILexicalBlock(scope: !23475, file: !3, line: 765, column: 3)
!23479 = !DILocation(line: 765, column: 17, scope: !23478)
!23480 = !DILocation(line: 765, column: 3, scope: !23475)
!23481 = !DILocation(line: 766, column: 12, scope: !23478)
!23482 = !DILocation(line: 766, column: 16, scope: !23478)
!23483 = !DILocation(line: 766, column: 26, scope: !23478)
!23484 = !DILocation(line: 766, column: 24, scope: !23478)
!23485 = !DILocation(line: 766, column: 19, scope: !23478)
!23486 = !DILocation(line: 766, column: 30, scope: !23478)
!23487 = !DILocation(line: 766, column: 39, scope: !23478)
!23488 = !DILocation(line: 766, column: 41, scope: !23478)
!23489 = !DILocation(line: 766, column: 35, scope: !23478)
!23490 = !DILocation(line: 766, column: 48, scope: !23478)
!23491 = !DILocation(line: 766, column: 29, scope: !23478)
!23492 = !DILocation(line: 766, column: 4, scope: !23478)
!23493 = !DILocation(line: 765, column: 23, scope: !23478)
!23494 = !DILocation(line: 765, column: 3, scope: !23478)
!23495 = distinct !{!23495, !23480, !23496}
!23496 = !DILocation(line: 766, column: 54, scope: !23475)
!23497 = !DILocation(line: 769, column: 3, scope: !23410)
!23498 = !DILocation(line: 770, column: 7, scope: !23410)
!23499 = !DILocation(line: 771, column: 11, scope: !23410)
!23500 = !DILocation(line: 771, column: 15, scope: !23410)
!23501 = !DILocation(line: 771, column: 24, scope: !23410)
!23502 = !DILocation(line: 771, column: 3, scope: !23410)
!23503 = !DILocation(line: 772, column: 45, scope: !23410)
!23504 = !DILocation(line: 772, column: 3, scope: !23410)
!23505 = !DILocation(line: 775, column: 11, scope: !23410)
!23506 = !DILocation(line: 775, column: 15, scope: !23410)
!23507 = !DILocation(line: 775, column: 3, scope: !23410)
!23508 = !DILocation(line: 776, column: 16, scope: !23410)
!23509 = !DILocation(line: 776, column: 20, scope: !23410)
!23510 = !DILocation(line: 776, column: 9, scope: !23410)
!23511 = !DILocation(line: 776, column: 7, scope: !23410)
!23512 = !DILocation(line: 777, column: 57, scope: !23410)
!23513 = !DILocation(line: 777, column: 62, scope: !23410)
!23514 = !DILocation(line: 777, column: 3, scope: !23410)
!23515 = !DILocation(line: 780, column: 10, scope: !23516)
!23516 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 780, column: 3)
!23517 = !DILocation(line: 780, column: 8, scope: !23516)
!23518 = !DILocation(line: 780, column: 15, scope: !23519)
!23519 = distinct !DILexicalBlock(scope: !23516, file: !3, line: 780, column: 3)
!23520 = !DILocation(line: 780, column: 17, scope: !23519)
!23521 = !DILocation(line: 780, column: 3, scope: !23516)
!23522 = !DILocation(line: 781, column: 8, scope: !23523)
!23523 = distinct !DILexicalBlock(scope: !23524, file: !3, line: 781, column: 8)
!23524 = distinct !DILexicalBlock(scope: !23519, file: !3, line: 780, column: 38)
!23525 = !DILocation(line: 781, column: 30, scope: !23523)
!23526 = !DILocation(line: 781, column: 27, scope: !23523)
!23527 = !DILocation(line: 781, column: 13, scope: !23523)
!23528 = !DILocation(line: 781, column: 8, scope: !23524)
!23529 = !DILocation(line: 782, column: 13, scope: !23523)
!23530 = !DILocation(line: 782, column: 17, scope: !23523)
!23531 = !DILocation(line: 782, column: 20, scope: !23523)
!23532 = !DILocation(line: 782, column: 5, scope: !23523)
!23533 = !DILocation(line: 783, column: 3, scope: !23524)
!23534 = !DILocation(line: 780, column: 34, scope: !23519)
!23535 = !DILocation(line: 780, column: 3, scope: !23519)
!23536 = distinct !{!23536, !23521, !23537}
!23537 = !DILocation(line: 783, column: 3, scope: !23516)
!23538 = !DILocation(line: 793, column: 3, scope: !23539)
!23539 = distinct !DILexicalBlock(scope: !23540, file: !3, line: 793, column: 3)
!23540 = distinct !DILexicalBlock(scope: !23541, file: !3, line: 793, column: 3)
!23541 = distinct !DILexicalBlock(scope: !23542, file: !3, line: 793, column: 3)
!23542 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 793, column: 3)
!23543 = !DILocation(line: 794, column: 3, scope: !23544)
!23544 = distinct !DILexicalBlock(scope: !23545, file: !3, line: 794, column: 3)
!23545 = distinct !DILexicalBlock(scope: !23546, file: !3, line: 794, column: 3)
!23546 = distinct !DILexicalBlock(scope: !23547, file: !3, line: 794, column: 3)
!23547 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 794, column: 3)
!23548 = !DILocation(line: 795, column: 3, scope: !23549)
!23549 = distinct !DILexicalBlock(scope: !23550, file: !3, line: 795, column: 3)
!23550 = distinct !DILexicalBlock(scope: !23551, file: !3, line: 795, column: 3)
!23551 = distinct !DILexicalBlock(scope: !23552, file: !3, line: 795, column: 3)
!23552 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 795, column: 3)
!23553 = !DILocation(line: 796, column: 3, scope: !23554)
!23554 = distinct !DILexicalBlock(scope: !23555, file: !3, line: 796, column: 3)
!23555 = distinct !DILexicalBlock(scope: !23556, file: !3, line: 796, column: 3)
!23556 = distinct !DILexicalBlock(scope: !23557, file: !3, line: 796, column: 3)
!23557 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 796, column: 3)
!23558 = !DILocation(line: 797, column: 3, scope: !23559)
!23559 = distinct !DILexicalBlock(scope: !23560, file: !3, line: 797, column: 3)
!23560 = distinct !DILexicalBlock(scope: !23561, file: !3, line: 797, column: 3)
!23561 = distinct !DILexicalBlock(scope: !23562, file: !3, line: 797, column: 3)
!23562 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 797, column: 3)
!23563 = !DILocation(line: 800, column: 10, scope: !23564)
!23564 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 800, column: 3)
!23565 = !DILocation(line: 800, column: 8, scope: !23564)
!23566 = !DILocation(line: 800, column: 15, scope: !23567)
!23567 = distinct !DILexicalBlock(scope: !23564, file: !3, line: 800, column: 3)
!23568 = !DILocation(line: 800, column: 17, scope: !23567)
!23569 = !DILocation(line: 800, column: 3, scope: !23564)
!23570 = !DILocation(line: 801, column: 8, scope: !23571)
!23571 = distinct !DILexicalBlock(scope: !23572, file: !3, line: 801, column: 8)
!23572 = distinct !DILexicalBlock(scope: !23567, file: !3, line: 800, column: 38)
!23573 = !DILocation(line: 801, column: 30, scope: !23571)
!23574 = !DILocation(line: 801, column: 27, scope: !23571)
!23575 = !DILocation(line: 801, column: 13, scope: !23571)
!23576 = !DILocation(line: 801, column: 8, scope: !23572)
!23577 = !DILocation(line: 802, column: 13, scope: !23571)
!23578 = !DILocation(line: 802, column: 17, scope: !23571)
!23579 = !DILocation(line: 802, column: 20, scope: !23571)
!23580 = !DILocation(line: 802, column: 5, scope: !23571)
!23581 = !DILocation(line: 803, column: 3, scope: !23572)
!23582 = !DILocation(line: 800, column: 34, scope: !23567)
!23583 = !DILocation(line: 800, column: 3, scope: !23567)
!23584 = distinct !{!23584, !23569, !23585}
!23585 = !DILocation(line: 803, column: 3, scope: !23564)
!23586 = !DILocation(line: 806, column: 10, scope: !23587)
!23587 = distinct !DILexicalBlock(scope: !23410, file: !3, line: 806, column: 3)
!23588 = !DILocation(line: 806, column: 8, scope: !23587)
!23589 = !DILocation(line: 806, column: 15, scope: !23590)
!23590 = distinct !DILexicalBlock(scope: !23587, file: !3, line: 806, column: 3)
!23591 = !DILocation(line: 806, column: 17, scope: !23590)
!23592 = !DILocation(line: 806, column: 3, scope: !23587)
!23593 = !DILocation(line: 807, column: 8, scope: !23594)
!23594 = distinct !DILexicalBlock(scope: !23595, file: !3, line: 807, column: 8)
!23595 = distinct !DILexicalBlock(scope: !23590, file: !3, line: 806, column: 38)
!23596 = !DILocation(line: 807, column: 30, scope: !23594)
!23597 = !DILocation(line: 807, column: 27, scope: !23594)
!23598 = !DILocation(line: 807, column: 13, scope: !23594)
!23599 = !DILocation(line: 807, column: 8, scope: !23595)
!23600 = !DILocation(line: 808, column: 13, scope: !23594)
!23601 = !DILocation(line: 808, column: 17, scope: !23594)
!23602 = !DILocation(line: 808, column: 27, scope: !23594)
!23603 = !DILocation(line: 808, column: 25, scope: !23594)
!23604 = !DILocation(line: 808, column: 20, scope: !23594)
!23605 = !DILocation(line: 808, column: 5, scope: !23594)
!23606 = !DILocation(line: 809, column: 3, scope: !23595)
!23607 = !DILocation(line: 806, column: 34, scope: !23590)
!23608 = !DILocation(line: 806, column: 3, scope: !23590)
!23609 = distinct !{!23609, !23592, !23610}
!23610 = !DILocation(line: 809, column: 3, scope: !23587)
!23611 = !DILocation(line: 811, column: 2, scope: !23410)
!23612 = !DILocation(line: 739, column: 27, scope: !23405)
!23613 = !DILocation(line: 739, column: 2, scope: !23405)
!23614 = distinct !{!23614, !23407, !23615}
!23615 = !DILocation(line: 811, column: 2, scope: !23402)
!23616 = !DILocation(line: 812, column: 1, scope: !23386)
!23617 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !9157, file: !9157, line: 1865, type: !23618, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23618 = !DISubroutineType(types: !23619)
!23619 = !{!570, !9155}
!23620 = !DILocalVariable(name: "pdev", arg: 1, scope: !23617, file: !9157, line: 1865, type: !9155)
!23621 = !DILocation(line: 1865, column: 53, scope: !23617)
!23622 = !DILocation(line: 1867, column: 26, scope: !23617)
!23623 = !DILocation(line: 1867, column: 32, scope: !23617)
!23624 = !DILocation(line: 1867, column: 9, scope: !23617)
!23625 = !DILocation(line: 1867, column: 2, scope: !23617)
!23626 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !3804, file: !3804, line: 655, type: !23627, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23627 = !DISubroutineType(types: !23628)
!23628 = !{!570, !4518}
!23629 = !DILocalVariable(name: "dev", arg: 1, scope: !23626, file: !3804, line: 655, type: !4518)
!23630 = !DILocation(line: 655, column: 58, scope: !23626)
!23631 = !DILocation(line: 657, column: 9, scope: !23626)
!23632 = !DILocation(line: 657, column: 14, scope: !23626)
!23633 = !DILocation(line: 657, column: 2, scope: !23626)
