; ModuleID = '../bcout/drivers/xen/events/events_base.llvm.bc'
source_filename = "drivers/xen/events/events_base.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.94, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.94 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.2, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.2 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.92, %struct.list_head, %struct.list_head, %union.anon.93 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.3, i8* }
%union.anon.3 = type { i64 }
%struct.lockref = type { %union.anon.90 }
%union.anon.90 = type { %struct.anon.91 }
%struct.anon.91 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.5, %union.anon.82, %struct.atomic_t, [8 x i8] }
%union.anon.5 = type { %struct.anon.6 }
%struct.anon.6 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.82 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.83, i32 }
%union.anon.83 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.38, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.38 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.99, %union.anon.100, %union.anon.101, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.104, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.99 = type { %struct.hlist_node }
%union.anon.100 = type { %struct.rb_node }
%union.anon.101 = type { %struct.anon.103 }
%struct.anon.103 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.104 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.105, void (i8*)*, i8* }
%union.anon.105 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.67, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.67 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.39, %union.anon.40, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.39 = type { %struct.list_head }
%union.anon.40 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.75, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.27, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.28, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.29, %union.anon.33, %struct.key_restriction* }
%union.anon.27 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.28 = type { i64 }
%union.anon.29 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.30, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.30 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.33 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.41 }
%struct.anon.41 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.45 }
%struct.anon.45 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type { %struct.pmu*, %struct.raw_spinlock, %struct.mutex, %struct.list_head, %struct.perf_event_groups, %struct.perf_event_groups, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32, i32, %struct.refcount_struct, %struct.task_struct*, i64, i64, %struct.perf_event_context*, i64, i64, i32, i8*, %struct.callback_head }
%struct.pmu = type { %struct.list_head, %struct.module*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, i8*, i32, i32, i32*, %struct.perf_cpu_context*, %struct.atomic_t, i32, i32, i32, void (%struct.pmu*)*, void (%struct.pmu*)*, i32 (%struct.perf_event*)*, void (%struct.perf_event*, %struct.mm_struct*)*, void (%struct.perf_event*, %struct.mm_struct*)*, i32 (%struct.perf_event*, i32)*, void (%struct.perf_event*, i32)*, void (%struct.perf_event*, i32)*, void (%struct.perf_event*, i32)*, void (%struct.perf_event*)*, void (%struct.pmu*, i32)*, i32 (%struct.pmu*)*, void (%struct.pmu*)*, i32 (%struct.perf_event*)*, void (%struct.perf_event_context*, i1)*, %struct.kmem_cache*, void (%struct.perf_event_context*, %struct.perf_event_context*)*, i8* (%struct.perf_event*, i8**, i32, i1)*, void (i8*)*, i64 (%struct.perf_event*, %struct.perf_output_handle*, i64)*, i32 (%struct.list_head*)*, void (%struct.perf_event*)*, i32 (%struct.perf_event*)*, i32 (%struct.perf_event*)*, i32 (%struct.perf_event*, i64)* }
%struct.perf_cpu_context = type { %struct.perf_event_context, %struct.perf_event_context*, i32, i32, %struct.raw_spinlock, %struct.hrtimer, i64, i32, i32, i32, i32, %struct.perf_event**, [2 x %struct.perf_event*] }
%struct.perf_event = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.rb_node, i64, %struct.list_head, %struct.hlist_node, %struct.list_head, i32, i32, i32, %struct.perf_event*, %struct.pmu*, i8*, i32, i32, %struct.local64_t, %struct.atomic64_t, i64, i64, i64, i64, %struct.perf_event_attr, i16, i16, i16, %struct.hw_perf_event, %struct.perf_event_context*, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.mutex, %struct.list_head, %struct.perf_event*, i32, i32, %struct.list_head, %struct.task_struct*, %struct.mutex, %struct.atomic_t, %struct.perf_buffer*, %struct.list_head, i64, i32, %struct.wait_queue_head, %struct.fasync_struct*, i32, i32, i32, %struct.irq_work, %struct.atomic_t, %struct.perf_addr_filters_head, %struct.perf_addr_filter_range*, i64, %struct.perf_event*, void (%struct.perf_event*)*, %struct.callback_head, %struct.pid_namespace*, i64, i64 ()*, void (%struct.perf_event*, %struct.perf_sample_data*, %struct.pt_regs*)*, i8*, %struct.list_head }
%struct.local64_t = type { %struct.local_t }
%struct.local_t = type { %struct.atomic64_t }
%struct.perf_event_attr = type { i32, i32, i64, %union.anon.52, i64, i64, i64, %union.anon.53, i32, %union.anon.54, %union.anon.55, i64, i64, i32, i32, i64, i32, i16, i16, i32, i32 }
%union.anon.52 = type { i64 }
%union.anon.53 = type { i32 }
%union.anon.54 = type { i64 }
%union.anon.55 = type { i64 }
%struct.hw_perf_event = type { %union.anon.56, %struct.task_struct*, i8*, i64, i32, %struct.local64_t, i64, %union.anon.63, i64, i64, i64, i64 }
%union.anon.56 = type { %struct.anon.57 }
%struct.anon.57 = type { i64, i64, i64, i64, i32, i32, i32, i32, %struct.hw_perf_event_extra, %struct.hw_perf_event_extra }
%struct.hw_perf_event_extra = type { i64, i32, i32, i32 }
%union.anon.63 = type { %struct.anon.64 }
%struct.anon.64 = type { i64, %struct.local64_t }
%struct.perf_buffer = type opaque
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.irq_work = type { %union.anon.66, void (%struct.irq_work*)* }
%union.anon.66 = type { %struct.__call_single_node }
%struct.perf_addr_filters_head = type { %struct.list_head, %struct.raw_spinlock, i32 }
%struct.perf_addr_filter_range = type { i64, i64 }
%struct.perf_sample_data = type { i64, %struct.perf_raw_record*, %struct.perf_branch_stack*, i64, i64, i64, %union.perf_mem_data_src, i64, i64, %struct.anon.71, i64, i64, i64, %struct.anon.72, %struct.perf_callchain_entry*, i64, %struct.perf_regs, %struct.perf_regs, i64, i64, i64, [8 x i8] }
%struct.perf_raw_record = type { %struct.perf_raw_frag, i32 }
%struct.perf_raw_frag = type <{ %union.anon.69, i64 (i8*, i8*, i64, i64)*, i8*, i32 }>
%union.anon.69 = type { %struct.perf_raw_frag* }
%struct.perf_branch_stack = type { i64, i64, [0 x %struct.perf_branch_entry] }
%struct.perf_branch_entry = type { i64, i64, i64 }
%union.perf_mem_data_src = type { i64 }
%struct.anon.71 = type { i32, i32 }
%struct.anon.72 = type { i32, i32 }
%struct.perf_callchain_entry = type { i64, [0 x i64] }
%struct.perf_regs = type { i64, %struct.pt_regs* }
%struct.pt_regs = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.perf_output_handle = type { %struct.perf_event*, %struct.perf_buffer*, i64, i64, i64, %union.anon.73, i32 }
%union.anon.73 = type { i8* }
%struct.perf_event_groups = type { %struct.rb_root, i64 }
%struct.rseq = type { i32, i32, %union.anon.74, i32, [12 x i8] }
%union.anon.74 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.75 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.io_bitmap = type { i64, %struct.refcount_struct, i32, [1024 x i64] }
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.76, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.79 }
%union.anon.76 = type { %struct.anon.77 }
%struct.anon.77 = type { i64, i64 }
%union.anon.79 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.25 }
%union.anon.25 = type { %struct.anon.26, [48 x i8] }
%struct.anon.26 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.92 = type { %struct.list_head }
%union.anon.93 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.84, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.85, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.86, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.89, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.84 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.85 = type { %struct.callback_head }
%union.anon.86 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.7 }
%union.anon.7 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.89 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.87 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.87 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type { %struct.list_head, i32, i32, %struct.device*, %struct.msi_msg, %struct.irq_affinity_desc*, void (%struct.msi_desc*, i8*)*, i8*, %union.anon.95 }
%struct.msi_msg = type { i32, i32, i32 }
%struct.irq_affinity_desc = type { %struct.cpumask, i8 }
%union.anon.95 = type { %struct.anon.96 }
%struct.anon.96 = type { i32, %struct.anon.97, %union.anon.98 }
%struct.anon.97 = type { i16, i16, i32 }
%union.anon.98 = type { i8* }
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.proc_dir_entry = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.evtchn_ops = type { i32 ()*, i32 ()*, i32 (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, i1 (i32)*, i1 (i32)*, void (i32)*, void (i32)*, void (i32, %struct.evtchn_loop_ctrl*)*, void ()*, i32 (i32)*, i32 (i32)* }
%struct.evtchn_loop_ctrl = type { i64, i32, i8 }
%struct.irq_info = type { %struct.list_head, %struct.list_head, i16, i16, i32, i32, i32, i16, i16, i32, i64, %union.anon.0 }
%union.anon.0 = type { i32, [4 x i8] }
%struct.legacy_pic = type { i32, %struct.irq_chip*, void (i32)*, void (i32)*, void ()*, void ()*, void (i32)*, i32 ()*, i32 (i32)*, void (i32)* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.lateeoi_work = type { %struct.delayed_work, %struct.spinlock, %struct.list_head }
%struct.vcpu_info = type { i8, i8, i64, %struct.arch_vcpu_info, %struct.pvclock_vcpu_time_info }
%struct.arch_vcpu_info = type { i64, i64 }
%struct.pvclock_vcpu_time_info = type { i32, i32, i64, i64, i32, i8, i8, [2 x i8] }
%struct.evtchn_send = type { i32 }
%struct.anon = type { i16, i16, i8, i8, i16 }
%struct.physdev_irq = type { i32, i32 }
%struct.physdev_irq_status_query = type { i32, i32 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.107, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type { %struct.module*, %struct.device*, %struct.device_node*, %struct.list_head, i32 (%struct.msi_controller*, %struct.pci_dev*, %struct.msi_desc*)*, i32 (%struct.msi_controller*, %struct.pci_dev*, i32, i32)*, void (%struct.msi_controller*, i32)* }
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.107 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.physdev_get_free_pirq = type { i32, i32 }
%struct.physdev_unmap_pirq = type { i16, i32 }
%struct.evtchn_bind_interdomain = type { i16, i32, i32 }
%struct.evtchn_bind_virq = type { i32, i32, i32 }
%struct.evtchn_status = type { i16, i32, i32, i32, %union.anon.108 }
%union.anon.108 = type { %struct.anon.110 }
%struct.anon.110 = type { i16, i32 }
%struct.evtchn_bind_ipi = type { i32, i32 }
%struct.evtchn_set_priority = type { i32, i32 }
%struct.sched_poll = type { i32*, i32, i64 }
%struct.physdev_map_pirq = type { i16, i32, i32, i32, i32, i32, i32, i64 }
%struct.xen_hvm_param = type { i16, i32, i64 }
%struct.physdev_pirq_eoi_gmfn = type { i64 }
%struct.evtchn_close = type { i32 }
%struct.evtchn_bind_vcpu = type { i32, i32 }
%struct.evtchn_bind_pirq = type { i32, i32, i32 }
%struct.physdev_eoi = type { i32 }

@__param_str_event_loop_timeout = internal constant [23 x i8] c"xen.event_loop_timeout\00", align 16, !dbg !0
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@event_loop_timeout = internal global i32 2, section ".data..read_mostly", align 4, !dbg !6528
@__param_event_loop_timeout = internal constant %struct.kernel_param { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__param_str_event_loop_timeout, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @event_loop_timeout to i8*) } }, section "__param", align 8, !dbg !682
@__UNIQUE_ID_event_loop_timeouttype321 = internal constant [40 x i8] c"events.parmtype=event_loop_timeout:uint\00", section ".modinfo", align 1, !dbg !738
@__param_str_event_eoi_delay = internal constant [20 x i8] c"xen.event_eoi_delay\00", align 16, !dbg !6531
@event_eoi_delay = internal global i32 10, section ".data..read_mostly", align 4, !dbg !6534
@__param_event_eoi_delay = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_event_eoi_delay, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @event_eoi_delay to i8*) } }, section "__param", align 8, !dbg !743
@__UNIQUE_ID_event_eoi_delaytype322 = internal constant [37 x i8] c"events.parmtype=event_eoi_delay:uint\00", section ".modinfo", align 1, !dbg !745
@evtchn_to_irq = internal global i32** null, align 8, !dbg !6516
@nr_irqs = external dso_local global i32, align 4
@virq_to_irq = internal global [24 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], section ".data", align 16, !dbg !6539
@evtchn_rwlock = internal global %struct.rwlock_t undef, align 1, !dbg !6541
@xen_irq_list_head = internal global %struct.list_head { %struct.list_head* @xen_irq_list_head, %struct.list_head* @xen_irq_list_head }, align 8, !dbg !6545
@irq_mapping_update_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @irq_mapping_update_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @irq_mapping_update_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !6547
@.str = private unnamed_addr constant [47 x i8] c"\016xen:events: %s: returning irq %d for gsi %u\0A\00", align 1
@__func__.xen_bind_pirq_gsi_to_irq = private unnamed_addr constant [25 x i8] c"xen_bind_pirq_gsi_to_irq\00", align 1
@xen_domain_type = external dso_local global i32, align 4
@xen_start_flags = external dso_local global i32, align 4
@xen_pirq_chip = internal global %struct.irq_chip { %struct.device* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i32 (%struct.irq_data*)* @startup_pirq, void (%struct.irq_data*)* @shutdown_pirq, void (%struct.irq_data*)* @enable_pirq, void (%struct.irq_data*)* @disable_pirq, void (%struct.irq_data*)* @eoi_pirq, void (%struct.irq_data*)* @disable_dynirq, void (%struct.irq_data*)* @mask_ack_pirq, void (%struct.irq_data*)* @enable_dynirq, void (%struct.irq_data*)* @eoi_pirq, i32 (%struct.irq_data*, %struct.cpumask*, i1)* @set_affinity_irq, i32 (%struct.irq_data*)* @retrigger_dynirq, i32 (%struct.irq_data*, i32)* null, i32 (%struct.irq_data*, i32)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*, %struct.seq_file*)* null, i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*, %struct.msi_msg*)* null, void (%struct.irq_data*, %struct.msi_msg*)* null, i32 (%struct.irq_data*, i32, i8*)* null, i32 (%struct.irq_data*, i32, i1)* null, i32 (%struct.irq_data*, i8*)* null, void (%struct.irq_data*, i32)* null, void (%struct.irq_data*, %struct.cpumask*)* null, i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, i64 0 }, section ".data..read_mostly", align 8, !dbg !6555
@xen_allocate_pirq_msi.__warned = internal global i8 0, section ".data.once", align 1, !dbg !750
@.str.1 = private unnamed_addr constant [67 x i8] c"hypervisor does not support the PHYSDEVOP_get_free_pirq interface\0A\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"drivers/xen/events/events_base.c\00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c"\016xen:events: domain %d does not have %d anymore\0A\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"\014xen:events: unmap irq failed %d\0A\00", align 1
@xen_dynamic_chip = internal global %struct.irq_chip { %struct.device* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* @disable_dynirq, void (%struct.irq_data*)* @ack_dynirq, void (%struct.irq_data*)* @disable_dynirq, void (%struct.irq_data*)* @mask_ack_dynirq, void (%struct.irq_data*)* @enable_dynirq, void (%struct.irq_data*)* null, i32 (%struct.irq_data*, %struct.cpumask*, i1)* @set_affinity_irq, i32 (%struct.irq_data*)* @retrigger_dynirq, i32 (%struct.irq_data*, i32)* null, i32 (%struct.irq_data*, i32)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*, %struct.seq_file*)* null, i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*, %struct.msi_msg*)* null, void (%struct.irq_data*, %struct.msi_msg*)* null, i32 (%struct.irq_data*, i32, i8*)* null, i32 (%struct.irq_data*, i32, i1)* null, i32 (%struct.irq_data*, i8*)* null, void (%struct.irq_data*, i32)* null, void (%struct.irq_data*, %struct.cpumask*)* null, i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, i64 0 }, section ".data..read_mostly", align 8, !dbg !6551
@xen_lateeoi_chip = internal global %struct.irq_chip { %struct.device* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i32 0, i32 0), i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* @disable_dynirq, void (%struct.irq_data*)* @mask_ack_dynirq, void (%struct.irq_data*)* @disable_dynirq, void (%struct.irq_data*)* @mask_ack_dynirq, void (%struct.irq_data*)* @enable_dynirq, void (%struct.irq_data*)* null, i32 (%struct.irq_data*, %struct.cpumask*, i1)* @set_affinity_irq, i32 (%struct.irq_data*)* @retrigger_dynirq, i32 (%struct.irq_data*, i32)* null, i32 (%struct.irq_data*, i32)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*, %struct.seq_file*)* null, i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*, %struct.msi_msg*)* null, void (%struct.irq_data*, %struct.msi_msg*)* null, i32 (%struct.irq_data*, i32, i8*)* null, i32 (%struct.irq_data*, i32, i1)* null, i32 (%struct.irq_data*, i8*)* null, void (%struct.irq_data*, i32)* null, void (%struct.irq_data*, %struct.cpumask*)* null, i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, i64 0 }, section ".data..read_mostly", align 8, !dbg !6553
@evtchn_ops = dso_local global %struct.evtchn_ops* null, align 8, !dbg !6467
@xen_percpu_chip = internal global %struct.irq_chip { %struct.device* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* @disable_dynirq, void (%struct.irq_data*)* @ack_dynirq, void (%struct.irq_data*)* @disable_dynirq, void (%struct.irq_data*)* null, void (%struct.irq_data*)* @enable_dynirq, void (%struct.irq_data*)* null, i32 (%struct.irq_data*, %struct.cpumask*, i1)* null, i32 (%struct.irq_data*)* null, i32 (%struct.irq_data*, i32)* null, i32 (%struct.irq_data*, i32)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*, %struct.seq_file*)* null, i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, void (%struct.irq_data*, %struct.msi_msg*)* null, void (%struct.irq_data*, %struct.msi_msg*)* null, i32 (%struct.irq_data*, i32, i8*)* null, i32 (%struct.irq_data*, i32, i1)* null, i32 (%struct.irq_data*, i8*)* null, void (%struct.irq_data*, i32)* null, void (%struct.irq_data*, %struct.cpumask*)* null, i32 (%struct.irq_data*)* null, void (%struct.irq_data*)* null, i64 0 }, section ".data..read_mostly", align 8, !dbg !6557
@.str.5 = private unnamed_addr constant [5 x i8] c"virq\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"\014Sending nmi to CPU%d failed (rc:%d)\0A\00", align 1
@ipi_to_irq = internal global [6 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], section ".data", align 16, !dbg !6549
@.str.7 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@irq_epoch = internal global i32 0, section ".data", align 4, !dbg !6526
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 8
@xen_have_vector_callback = external dso_local global i32, align 4
@.str.8 = private unnamed_addr constant [58 x i8] c"\013xen:events: Request for Xen HVM callback vector failed\0A\00", align 1
@xen_fifo_events = dso_local global i8 1, align 1, !dbg !6458
@__param_str_fifo_events = internal constant [16 x i8] c"xen.fifo_events\00", align 16, !dbg !6559
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@__param_fifo_events = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_fifo_events, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @xen_fifo_events } }, section "__param", align 8, !dbg !6460
@__UNIQUE_ID_fifo_eventstype375 = internal constant [33 x i8] c"events.parmtype=fifo_events:bool\00", section ".modinfo", align 1, !dbg !6462
@.str.9 = private unnamed_addr constant [19 x i8] c"xen/evtchn:prepare\00", align 1
@pirq_needs_eoi = internal global i1 (i32)* null, align 8, !dbg !6521
@pirq_eoi_map = internal global i64* null, align 8, !dbg !6519
@legacy_info_ptrs = internal global [16 x %struct.irq_info*] zeroinitializer, align 16, !dbg !6536
@legacy_pic = external dso_local global %struct.legacy_pic*, align 8
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@lateeoi = internal global %struct.lateeoi_work zeroinitializer, section ".data", align 8, !dbg !6543
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.10 = private unnamed_addr constant [39 x i8] c"Unable to allocate metadata for IRQ%d\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.11 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@xen_vcpu_id = external dso_local global i32, section ".data", align 4
@.str.13 = private unnamed_addr constant [4 x i8] c"ipi\00", align 1
@jiffies = external dso_local global i64, align 8
@__irq_regs = external dso_local global %struct.pt_regs*, section ".data", align 8
@.str.14 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@xen_vcpu = external dso_local global %struct.vcpu_info*, section ".data", align 8
@.str.15 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@cpu_bit_bitmap = external dso_local constant [65 x [1 x i64]], align 16
@__cpu_online_mask = external dso_local global %struct.cpumask, align 8
@.str.16 = private unnamed_addr constant [62 x i8] c"\014xen:events: xen map irq failed gsi=%d irq=%d pirq=%d rc=%d\0A\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"\017xen: --> irq=%d, pirq=%d\0A\00", align 1
@.str.18 = private unnamed_addr constant [48 x i8] c"\014xen:events: Failed to obtain physical IRQ %d\0A\00", align 1
@.str.19 = private unnamed_addr constant [61 x i8] c"\013xen:events: irq%d: Failed to set port to irq mapping (%d)\0A\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"xen-dyn\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"xen-dyn-lateeoi\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"xen-pirq\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"xen-percpu\00", align 1
@xen_features = external dso_local global [32 x i8], align 16
@.str.24 = private unnamed_addr constant [69 x i8] c"\016xen:events: Xen HVM callback vector for event delivery is enabled\0A\00", align 1
@xen_p2m_size = external dso_local global i64, align 8
@xen_p2m_addr = external dso_local global i64*, align 8
@xen_max_p2m_pfn = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@llvm.used = appending global [6 x i8*] [i8* bitcast (%struct.kernel_param* @__param_event_loop_timeout to i8*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_event_loop_timeouttype321, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_event_eoi_delay to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_event_eoi_delaytype322, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_fifo_events to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_fifo_eventstype375, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @get_evtchn_to_irq(i32 %evtchn) #0 !dbg !6571 {
entry:
  %retval = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !6572, metadata !DIExpression()), !dbg !6573
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !6574
  %call = call i32 @xen_evtchn_max_channels() #12, !dbg !6576
  %cmp = icmp uge i32 %0, %call, !dbg !6577
  br i1 %cmp, label %if.then, label %if.end, !dbg !6578

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6579
  br label %return, !dbg !6579

if.end:                                           ; preds = %entry
  %1 = load i32**, i32*** @evtchn_to_irq, align 8, !dbg !6580
  %2 = load i32, i32* %evtchn.addr, align 4, !dbg !6582
  %conv = zext i32 %2 to i64, !dbg !6582
  %div = udiv i64 %conv, 1024, !dbg !6582
  %arrayidx = getelementptr i32*, i32** %1, i64 %div, !dbg !6580
  %3 = load i32*, i32** %arrayidx, align 8, !dbg !6580
  %cmp1 = icmp eq i32* %3, null, !dbg !6583
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !6584

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !6585
  br label %return, !dbg !6585

if.end4:                                          ; preds = %if.end
  br label %do.body, !dbg !6586

do.body:                                          ; preds = %if.end4
  br label %do.end, !dbg !6588

do.end:                                           ; preds = %do.body
  %4 = load i32**, i32*** @evtchn_to_irq, align 8, !dbg !6586
  %5 = load i32, i32* %evtchn.addr, align 4, !dbg !6586
  %conv5 = zext i32 %5 to i64, !dbg !6586
  %div6 = udiv i64 %conv5, 1024, !dbg !6586
  %arrayidx7 = getelementptr i32*, i32** %4, i64 %div6, !dbg !6586
  %6 = load i32*, i32** %arrayidx7, align 8, !dbg !6586
  %7 = load i32, i32* %evtchn.addr, align 4, !dbg !6586
  %conv8 = zext i32 %7 to i64, !dbg !6586
  %rem = urem i64 %conv8, 1024, !dbg !6586
  %arrayidx9 = getelementptr i32, i32* %6, i64 %rem, !dbg !6586
  %8 = load volatile i32, i32* %arrayidx9, align 4, !dbg !6586
  store i32 %8, i32* %tmp, align 4, !dbg !6588
  %9 = load i32, i32* %tmp, align 4, !dbg !6586
  store i32 %9, i32* %retval, align 4, !dbg !6590
  br label %return, !dbg !6590

return:                                           ; preds = %do.end, %if.then3, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6591
  ret i32 %10, !dbg !6591
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_evtchn_max_channels() #0 !dbg !6592 {
entry:
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !6593
  %max_channels = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 0, !dbg !6594
  %1 = load i32 ()*, i32 ()** %max_channels, align 8, !dbg !6594
  %call = call i32 %1() #12, !dbg !6593
  ret i32 %call, !dbg !6595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @evtchn_from_irq(i32 %irq) #0 !dbg !6596 {
entry:
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6599, metadata !DIExpression()), !dbg !6600
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !6601, metadata !DIExpression()), !dbg !6604
  store %struct.irq_info* null, %struct.irq_info** %info, align 8, !dbg !6604
  %0 = load i32, i32* %irq.addr, align 4, !dbg !6605
  %1 = load i32, i32* @nr_irqs, align 4, !dbg !6605
  %cmp = icmp ult i32 %0, %1, !dbg !6605
  %lnot = xor i1 %cmp, true, !dbg !6605
  %lnot1 = xor i1 %lnot, true, !dbg !6605
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6605
  %conv = sext i32 %lnot.ext to i64, !dbg !6605
  %tobool = icmp ne i64 %conv, 0, !dbg !6605
  br i1 %tobool, label %if.then, label %if.end, !dbg !6607

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %irq.addr, align 4, !dbg !6608
  %call = call %struct.irq_info* @info_for_irq(i32 %2) #12, !dbg !6609
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !6610
  br label %if.end, !dbg !6611

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !6612
  %tobool2 = icmp ne %struct.irq_info* %3, null, !dbg !6612
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6614

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6615
  br label %return, !dbg !6615

if.end4:                                          ; preds = %if.end
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !6616
  %evtchn = getelementptr inbounds %struct.irq_info, %struct.irq_info* %4, i32 0, i32 6, !dbg !6617
  %5 = load i32, i32* %evtchn, align 4, !dbg !6617
  store i32 %5, i32* %retval, align 4, !dbg !6618
  br label %return, !dbg !6618

return:                                           ; preds = %if.end4, %if.then3
  %6 = load i32, i32* %retval, align 4, !dbg !6619
  ret i32 %6, !dbg !6619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.irq_info* @info_for_irq(i32 %irq) #0 !dbg !6620 {
entry:
  %retval = alloca %struct.irq_info*, align 8
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6623, metadata !DIExpression()), !dbg !6624
  %0 = load i32, i32* %irq.addr, align 4, !dbg !6625
  %call = call i32 @nr_legacy_irqs() #12, !dbg !6627
  %cmp = icmp ult i32 %0, %call, !dbg !6628
  br i1 %cmp, label %if.then, label %if.else, !dbg !6629

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %irq.addr, align 4, !dbg !6630
  %idxprom = zext i32 %1 to i64, !dbg !6631
  %arrayidx = getelementptr [16 x %struct.irq_info*], [16 x %struct.irq_info*]* @legacy_info_ptrs, i64 0, i64 %idxprom, !dbg !6631
  %2 = load %struct.irq_info*, %struct.irq_info** %arrayidx, align 8, !dbg !6631
  store %struct.irq_info* %2, %struct.irq_info** %retval, align 8, !dbg !6632
  br label %return, !dbg !6632

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %irq.addr, align 4, !dbg !6633
  %call1 = call i8* @irq_get_chip_data(i32 %3) #12, !dbg !6634
  %4 = bitcast i8* %call1 to %struct.irq_info*, !dbg !6634
  store %struct.irq_info* %4, %struct.irq_info** %retval, align 8, !dbg !6635
  br label %return, !dbg !6635

return:                                           ; preds = %if.else, %if.then
  %5 = load %struct.irq_info*, %struct.irq_info** %retval, align 8, !dbg !6636
  ret %struct.irq_info* %5, !dbg !6636
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @irq_from_evtchn(i32 %evtchn) #0 !dbg !6637 {
entry:
  %evtchn.addr = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !6640, metadata !DIExpression()), !dbg !6641
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !6642
  %call = call i32 @get_evtchn_to_irq(i32 %0) #12, !dbg !6643
  ret i32 %call, !dbg !6644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @irq_from_virq(i32 %cpu, i32 %virq) #0 !dbg !6645 {
entry:
  %cpu.addr = alloca i32, align 4
  %virq.addr = alloca i32, align 4
  %tmp = alloca [24 x i32]*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca [24 x i32]*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !6648, metadata !DIExpression()), !dbg !6649
  store i32 %virq, i32* %virq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %virq.addr, metadata !6650, metadata !DIExpression()), !dbg !6651
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !6652
  br label %do.body, !dbg !6654

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !6656, metadata !DIExpression()), !dbg !6658
  store i8* null, i8** %__vpp_verify, align 8, !dbg !6658
  %1 = load i8*, i8** %__vpp_verify, align 8, !dbg !6658
  br label %do.end, !dbg !6658

do.end:                                           ; preds = %do.body
  store [24 x i32]* @virq_to_irq, [24 x i32]** %tmp1, align 8, !dbg !6658
  %2 = load [24 x i32]*, [24 x i32]** %tmp1, align 8, !dbg !6654
  store [24 x i32]* %2, [24 x i32]** %tmp, align 8, !dbg !6652
  %3 = load [24 x i32]*, [24 x i32]** %tmp, align 8, !dbg !6652
  %4 = load i32, i32* %virq.addr, align 4, !dbg !6659
  %idxprom = zext i32 %4 to i64, !dbg !6660
  %arrayidx = getelementptr [24 x i32], [24 x i32]* %3, i64 0, i64 %idxprom, !dbg !6660
  %5 = load i32, i32* %arrayidx, align 4, !dbg !6660
  ret i32 %5, !dbg !6661
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @cpu_from_evtchn(i32 %evtchn) #0 !dbg !6662 {
entry:
  %evtchn.addr = alloca i32, align 4
  %irq = alloca i32, align 4
  %ret = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !6663, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !6665, metadata !DIExpression()), !dbg !6666
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !6667
  %call = call i32 @get_evtchn_to_irq(i32 %0) #12, !dbg !6668
  store i32 %call, i32* %irq, align 4, !dbg !6666
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6669, metadata !DIExpression()), !dbg !6670
  store i32 0, i32* %ret, align 4, !dbg !6670
  %1 = load i32, i32* %irq, align 4, !dbg !6671
  %cmp = icmp ne i32 %1, -1, !dbg !6673
  br i1 %cmp, label %if.then, label %if.end, !dbg !6674

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %irq, align 4, !dbg !6675
  %call1 = call i32 @cpu_from_irq(i32 %2) #12, !dbg !6676
  store i32 %call1, i32* %ret, align 4, !dbg !6677
  br label %if.end, !dbg !6678

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %ret, align 4, !dbg !6679
  ret i32 %3, !dbg !6680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpu_from_irq(i32 %irq) #0 !dbg !6681 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6684, metadata !DIExpression()), !dbg !6685
  %0 = load i32, i32* %irq.addr, align 4, !dbg !6686
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !6687
  %cpu = getelementptr inbounds %struct.irq_info, %struct.irq_info* %call, i32 0, i32 7, !dbg !6688
  %1 = load i16, i16* %cpu, align 8, !dbg !6688
  %conv = zext i16 %1 to i32, !dbg !6687
  ret i32 %conv, !dbg !6689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @notify_remote_via_irq(i32 %irq) #0 !dbg !6690 {
entry:
  %irq.addr = alloca i32, align 4
  %evtchn = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6691, metadata !DIExpression()), !dbg !6692
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !6693, metadata !DIExpression()), !dbg !6694
  %0 = load i32, i32* %irq.addr, align 4, !dbg !6695
  %call = call i32 @evtchn_from_irq(i32 %0) #12, !dbg !6696
  store i32 %call, i32* %evtchn, align 4, !dbg !6694
  %1 = load i32, i32* %evtchn, align 4, !dbg !6697
  %cmp = icmp ne i32 %1, 0, !dbg !6697
  br i1 %cmp, label %if.then, label %if.end, !dbg !6699

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %evtchn, align 4, !dbg !6700
  call void @notify_remote_via_evtchn(i32 %2) #12, !dbg !6701
  br label %if.end, !dbg !6701

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @notify_remote_via_evtchn(i32 %port) #0 !dbg !6703 {
entry:
  %port.addr = alloca i32, align 4
  %send = alloca %struct.evtchn_send, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !6705, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.declare(metadata %struct.evtchn_send* %send, metadata !6707, metadata !DIExpression()), !dbg !6711
  %port1 = getelementptr inbounds %struct.evtchn_send, %struct.evtchn_send* %send, i32 0, i32 0, !dbg !6712
  %0 = load i32, i32* %port.addr, align 4, !dbg !6713
  store i32 %0, i32* %port1, align 4, !dbg !6712
  %1 = bitcast %struct.evtchn_send* %send to i8*, !dbg !6714
  %call = call i32 @HYPERVISOR_event_channel_op(i32 4, i8* %1) #12, !dbg !6715
  ret void, !dbg !6716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_irq_lateeoi(i32 %irq, i32 %eoi_flags) #0 !dbg !6717 {
entry:
  %irq.addr = alloca i32, align 4
  %eoi_flags.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy19 = alloca i64, align 8
  %__dummy220 = alloca i64, align 8
  %tmp23 = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6720, metadata !DIExpression()), !dbg !6721
  store i32 %eoi_flags, i32* %eoi_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eoi_flags.addr, metadata !6722, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !6724, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6726, metadata !DIExpression()), !dbg !6727
  br label %do.body, !dbg !6728

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6729, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6733, metadata !DIExpression()), !dbg !6732
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6732
  %conv = zext i1 %cmp to i32, !dbg !6732
  store i32 1, i32* %tmp, align 4, !dbg !6732
  %0 = load i32, i32* %tmp, align 4, !dbg !6732
  br label %do.body1, !dbg !6734

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !6735

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6737

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !6739, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !6743, metadata !DIExpression()), !dbg !6742
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !6742
  %conv7 = zext i1 %cmp6 to i32, !dbg !6742
  store i32 1, i32* %tmp8, align 4, !dbg !6742
  %1 = load i32, i32* %tmp8, align 4, !dbg !6742
  %call = call i64 @arch_local_irq_save() #12, !dbg !6744
  store i64 %call, i64* %flags, align 8, !dbg !6744
  br label %do.end, !dbg !6744

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !6737

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !6735

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6745, !srcloc !6747
  br label %do.body11, !dbg !6745

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !6748

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !6745

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !6735

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !6734

do.end15:                                         ; preds = %do.end14
  %2 = load i32, i32* %irq.addr, align 4, !dbg !6750
  %call16 = call %struct.irq_info* @info_for_irq(i32 %2) #12, !dbg !6751
  store %struct.irq_info* %call16, %struct.irq_info** %info, align 8, !dbg !6752
  %3 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !6753
  %tobool = icmp ne %struct.irq_info* %3, null, !dbg !6753
  br i1 %tobool, label %if.then, label %if.end, !dbg !6755

if.then:                                          ; preds = %do.end15
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !6756
  %5 = load i32, i32* %eoi_flags.addr, align 4, !dbg !6757
  %and = and i32 %5, 1, !dbg !6758
  %tobool17 = icmp ne i32 %and, 0, !dbg !6757
  call void @xen_irq_lateeoi_locked(%struct.irq_info* %4, i1 zeroext %tobool17) #12, !dbg !6759
  br label %if.end, !dbg !6759

if.end:                                           ; preds = %if.then, %do.end15
  br label %do.body18, !dbg !6760

do.body18:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__dummy19, metadata !6761, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.declare(metadata i64* %__dummy220, metadata !6765, metadata !DIExpression()), !dbg !6764
  %cmp21 = icmp eq i64* %__dummy19, %__dummy220, !dbg !6764
  %conv22 = zext i1 %cmp21 to i32, !dbg !6764
  store i32 1, i32* %tmp23, align 4, !dbg !6764
  %6 = load i32, i32* %tmp23, align 4, !dbg !6764
  br label %do.body24, !dbg !6766

do.body24:                                        ; preds = %do.body18
  br label %do.body25, !dbg !6767

do.body25:                                        ; preds = %do.body24
  br label %do.body26, !dbg !6769

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !6771, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !6775, metadata !DIExpression()), !dbg !6774
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !6774
  %conv30 = zext i1 %cmp29 to i32, !dbg !6774
  store i32 1, i32* %tmp31, align 4, !dbg !6774
  %7 = load i32, i32* %tmp31, align 4, !dbg !6774
  %8 = load i64, i64* %flags, align 8, !dbg !6776
  call void @arch_local_irq_restore(i64 %8) #12, !dbg !6776
  br label %do.end32, !dbg !6776

do.end32:                                         ; preds = %do.body26
  br label %do.end33, !dbg !6769

do.end33:                                         ; preds = %do.end32
  br label %do.body34, !dbg !6767

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6777, !srcloc !6779
  br label %do.body35, !dbg !6777

do.body35:                                        ; preds = %do.body34
  br label %do.end36, !dbg !6780

do.end36:                                         ; preds = %do.body35
  br label %do.end37, !dbg !6777

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !6767

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !6766

do.end39:                                         ; preds = %do.end38
  ret void, !dbg !6782
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !6783 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6787, metadata !DIExpression()), !dbg !6788
  %call = call i64 @arch_local_save_flags() #12, !dbg !6789
  store i64 %call, i64* %f, align 8, !dbg !6790
  call void @arch_local_irq_disable() #12, !dbg !6791
  %0 = load i64, i64* %f, align 8, !dbg !6792
  ret i64 %0, !dbg !6793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xen_irq_lateeoi_locked(%struct.irq_info* %info, i1 zeroext %spurious) #0 !dbg !6794 {
entry:
  %info.addr = alloca %struct.irq_info*, align 8
  %spurious.addr = alloca i8, align 1
  %evtchn = alloca i32, align 4
  %cpu = alloca i32, align 4
  %delay = alloca i32, align 4
  %tmp = alloca i32*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp34 = alloca i32*, align 8
  store %struct.irq_info* %info, %struct.irq_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info.addr, metadata !6797, metadata !DIExpression()), !dbg !6798
  %frombool = zext i1 %spurious to i8
  store i8 %frombool, i8* %spurious.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %spurious.addr, metadata !6799, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !6801, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !6803, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !6805, metadata !DIExpression()), !dbg !6806
  store i32 0, i32* %delay, align 4, !dbg !6806
  %0 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6807
  %evtchn1 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %0, i32 0, i32 6, !dbg !6808
  %1 = load i32, i32* %evtchn1, align 4, !dbg !6808
  store i32 %1, i32* %evtchn, align 4, !dbg !6809
  %2 = load i32, i32* %evtchn, align 4, !dbg !6810
  %cmp = icmp ne i32 %2, 0, !dbg !6810
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !6812

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6813
  %eoi_list = getelementptr inbounds %struct.irq_info, %struct.irq_info* %3, i32 0, i32 1, !dbg !6814
  %call = call i32 @list_empty(%struct.list_head* %eoi_list) #12, !dbg !6815
  %tobool = icmp ne i32 %call, 0, !dbg !6815
  br i1 %tobool, label %if.end, label %if.then, !dbg !6816

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6817

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8, i8* %spurious.addr, align 1, !dbg !6818
  %tobool2 = trunc i8 %4 to i1, !dbg !6818
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !6820

if.then3:                                         ; preds = %if.end
  %5 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6821
  %spurious_cnt = getelementptr inbounds %struct.irq_info, %struct.irq_info* %5, i32 0, i32 3, !dbg !6824
  %6 = load i16, i16* %spurious_cnt, align 2, !dbg !6824
  %conv = sext i16 %6 to i32, !dbg !6821
  %shl = shl i32 1, %conv, !dbg !6825
  %cmp4 = icmp slt i32 %shl, 1000, !dbg !6826
  br i1 %cmp4, label %if.then6, label %if.end8, !dbg !6827

if.then6:                                         ; preds = %if.then3
  %7 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6828
  %spurious_cnt7 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %7, i32 0, i32 3, !dbg !6829
  %8 = load i16, i16* %spurious_cnt7, align 2, !dbg !6830
  %inc = add i16 %8, 1, !dbg !6830
  store i16 %inc, i16* %spurious_cnt7, align 2, !dbg !6830
  br label %if.end8, !dbg !6828

if.end8:                                          ; preds = %if.then6, %if.then3
  %9 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6831
  %spurious_cnt9 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %9, i32 0, i32 3, !dbg !6833
  %10 = load i16, i16* %spurious_cnt9, align 2, !dbg !6833
  %conv10 = sext i16 %10 to i32, !dbg !6831
  %cmp11 = icmp sgt i32 %conv10, 1, !dbg !6834
  br i1 %cmp11, label %if.then13, label %if.end27, !dbg !6835

if.then13:                                        ; preds = %if.end8
  %11 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6836
  %spurious_cnt14 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %11, i32 0, i32 3, !dbg !6838
  %12 = load i16, i16* %spurious_cnt14, align 2, !dbg !6838
  %conv15 = sext i16 %12 to i32, !dbg !6836
  %sub = sub i32 %conv15, 2, !dbg !6839
  %shl16 = shl i32 1, %sub, !dbg !6840
  store i32 %shl16, i32* %delay, align 4, !dbg !6841
  %13 = load i32, i32* %delay, align 4, !dbg !6842
  %cmp17 = icmp ugt i32 %13, 250, !dbg !6844
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !6845

if.then19:                                        ; preds = %if.then13
  store i32 250, i32* %delay, align 4, !dbg !6846
  br label %if.end20, !dbg !6847

if.end20:                                         ; preds = %if.then19, %if.then13
  %14 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6848
  %eoi_time = getelementptr inbounds %struct.irq_info, %struct.irq_info* %14, i32 0, i32 10, !dbg !6850
  %15 = load i64, i64* %eoi_time, align 8, !dbg !6850
  %tobool21 = icmp ne i64 %15, 0, !dbg !6848
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !6851

if.then22:                                        ; preds = %if.end20
  %16 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6852
  %eoi_cpu = getelementptr inbounds %struct.irq_info, %struct.irq_info* %16, i32 0, i32 8, !dbg !6853
  store i16 0, i16* %eoi_cpu, align 2, !dbg !6854
  br label %if.end23, !dbg !6852

if.end23:                                         ; preds = %if.then22, %if.end20
  %call24 = call i64 @get_jiffies_64() #12, !dbg !6855
  %17 = load i32, i32* %delay, align 4, !dbg !6856
  %conv25 = zext i32 %17 to i64, !dbg !6856
  %add = add i64 %call24, %conv25, !dbg !6857
  %18 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6858
  %eoi_time26 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %18, i32 0, i32 10, !dbg !6859
  store i64 %add, i64* %eoi_time26, align 8, !dbg !6860
  br label %if.end27, !dbg !6861

if.end27:                                         ; preds = %if.end23, %if.end8
  br label %if.end29, !dbg !6862

if.else:                                          ; preds = %if.end
  %19 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6863
  %spurious_cnt28 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %19, i32 0, i32 3, !dbg !6865
  store i16 0, i16* %spurious_cnt28, align 2, !dbg !6866
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.end27
  %20 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6867
  %eoi_cpu30 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %20, i32 0, i32 8, !dbg !6868
  %21 = load i16, i16* %eoi_cpu30, align 2, !dbg !6868
  %conv31 = zext i16 %21 to i32, !dbg !6867
  store i32 %conv31, i32* %cpu, align 4, !dbg !6869
  %22 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6870
  %eoi_time32 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %22, i32 0, i32 10, !dbg !6872
  %23 = load i64, i64* %eoi_time32, align 8, !dbg !6872
  %tobool33 = icmp ne i64 %23, 0, !dbg !6870
  br i1 %tobool33, label %land.lhs.true, label %if.end40, !dbg !6873

land.lhs.true:                                    ; preds = %if.end29
  %24 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6874
  %irq_epoch = getelementptr inbounds %struct.irq_info, %struct.irq_info* %24, i32 0, i32 9, !dbg !6875
  %25 = load i32, i32* %irq_epoch, align 4, !dbg !6875
  %26 = load i32, i32* %cpu, align 4, !dbg !6876
  br label %do.body, !dbg !6878

do.body:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !6880, metadata !DIExpression()), !dbg !6882
  store i8* null, i8** %__vpp_verify, align 8, !dbg !6882
  %27 = load i8*, i8** %__vpp_verify, align 8, !dbg !6882
  br label %do.end, !dbg !6882

do.end:                                           ; preds = %do.body
  store i32* @irq_epoch, i32** %tmp34, align 8, !dbg !6882
  %28 = load i32*, i32** %tmp34, align 8, !dbg !6878
  store i32* %28, i32** %tmp, align 8, !dbg !6876
  %29 = load i32*, i32** %tmp, align 8, !dbg !6876
  %30 = load i32, i32* %29, align 4, !dbg !6883
  %cmp35 = icmp eq i32 %25, %30, !dbg !6884
  br i1 %cmp35, label %if.then39, label %lor.lhs.false37, !dbg !6885

lor.lhs.false37:                                  ; preds = %do.end
  %31 = load i32, i32* %delay, align 4, !dbg !6886
  %tobool38 = icmp ne i32 %31, 0, !dbg !6886
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6887

if.then39:                                        ; preds = %lor.lhs.false37, %do.end
  %32 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6888
  call void @lateeoi_list_add(%struct.irq_info* %32) #12, !dbg !6890
  br label %return, !dbg !6891

if.end40:                                         ; preds = %lor.lhs.false37, %if.end29
  %33 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !6892
  %eoi_time41 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %33, i32 0, i32 10, !dbg !6893
  store i64 0, i64* %eoi_time41, align 8, !dbg !6894
  %34 = load i32, i32* %evtchn, align 4, !dbg !6895
  call void @unmask_evtchn(i32 %34) #12, !dbg !6896
  br label %return, !dbg !6897

return:                                           ; preds = %if.end40, %if.then39, %if.then
  ret void, !dbg !6897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !6898 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !6901, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6903, metadata !DIExpression()), !dbg !6905
  %0 = load i64, i64* %__edi, align 8, !dbg !6905
  store i64 %0, i64* %__edi, align 8, !dbg !6905
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6906, metadata !DIExpression()), !dbg !6905
  %1 = load i64, i64* %__esi, align 8, !dbg !6905
  store i64 %1, i64* %__esi, align 8, !dbg !6905
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6907, metadata !DIExpression()), !dbg !6905
  %2 = load i64, i64* %__edx, align 8, !dbg !6905
  store i64 %2, i64* %__edx, align 8, !dbg !6905
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6908, metadata !DIExpression()), !dbg !6905
  %3 = load i64, i64* %__ecx, align 8, !dbg !6905
  store i64 %3, i64* %__ecx, align 8, !dbg !6905
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6909, metadata !DIExpression()), !dbg !6905
  %4 = load i64, i64* %__eax, align 8, !dbg !6905
  store i64 %4, i64* %__eax, align 8, !dbg !6905
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !6905
  %6 = call i64 @llvm.read_register.i64(metadata !6565), !dbg !6905
  %7 = load i64, i64* %f.addr, align 8, !dbg !6905
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !6905, !srcloc !6910
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !6905
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !6905
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6905
  call void @llvm.write_register.i64(metadata !6565, i64 %asmresult1), !dbg !6905
  ret void, !dbg !6911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_irq_from_gsi(i32 %gsi) #0 !dbg !6912 {
entry:
  %retval = alloca i32, align 4
  %gsi.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.irq_info*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp11 = alloca %struct.irq_info*, align 8
  store i32 %gsi, i32* %gsi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gsi.addr, metadata !6913, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !6915, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6917, metadata !DIExpression()), !dbg !6920
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @xen_irq_list_head, i32 0, i32 0), align 8, !dbg !6920
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !6920
  store i8* %1, i8** %__mptr, align 8, !dbg !6920
  br label %do.body, !dbg !6920

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6921

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6920
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6920
  %3 = bitcast i8* %add.ptr to %struct.irq_info*, !dbg !6920
  store %struct.irq_info* %3, %struct.irq_info** %tmp, align 8, !dbg !6921
  %4 = load %struct.irq_info*, %struct.irq_info** %tmp, align 8, !dbg !6920
  store %struct.irq_info* %4, %struct.irq_info** %info, align 8, !dbg !6923
  br label %for.cond, !dbg !6923

for.cond:                                         ; preds = %do.end10, %do.end
  %5 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !6924
  %list = getelementptr inbounds %struct.irq_info, %struct.irq_info* %5, i32 0, i32 0, !dbg !6924
  %cmp = icmp eq %struct.list_head* %list, @xen_irq_list_head, !dbg !6924
  %lnot = xor i1 %cmp, true, !dbg !6924
  br i1 %lnot, label %for.body, label %for.end, !dbg !6923

for.body:                                         ; preds = %for.cond
  %6 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !6926
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %6, i32 0, i32 4, !dbg !6929
  %7 = load i32, i32* %type, align 4, !dbg !6929
  %cmp1 = icmp ne i32 %7, 1, !dbg !6930
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6931

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !6932

if.end:                                           ; preds = %for.body
  %8 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !6933
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %8, i32 0, i32 11, !dbg !6935
  %pirq = bitcast %union.anon.0* %u to %struct.anon*, !dbg !6936
  %gsi2 = getelementptr inbounds %struct.anon, %struct.anon* %pirq, i32 0, i32 1, !dbg !6937
  %9 = load i16, i16* %gsi2, align 2, !dbg !6937
  %conv = zext i16 %9 to i32, !dbg !6933
  %10 = load i32, i32* %gsi.addr, align 4, !dbg !6938
  %cmp3 = icmp eq i32 %conv, %10, !dbg !6939
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !6940

if.then5:                                         ; preds = %if.end
  %11 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !6941
  %irq = getelementptr inbounds %struct.irq_info, %struct.irq_info* %11, i32 0, i32 5, !dbg !6942
  %12 = load i32, i32* %irq, align 8, !dbg !6942
  store i32 %12, i32* %retval, align 4, !dbg !6943
  br label %return, !dbg !6943

if.end6:                                          ; preds = %if.end
  br label %for.inc, !dbg !6944

for.inc:                                          ; preds = %if.end6, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !6945, metadata !DIExpression()), !dbg !6947
  %13 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !6947
  %list8 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %13, i32 0, i32 0, !dbg !6947
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list8, i32 0, i32 0, !dbg !6947
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6947
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !6947
  store i8* %15, i8** %__mptr7, align 8, !dbg !6947
  br label %do.body9, !dbg !6947

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !6948

do.end10:                                         ; preds = %do.body9
  %16 = load i8*, i8** %__mptr7, align 8, !dbg !6947
  %add.ptr12 = getelementptr i8, i8* %16, i64 0, !dbg !6947
  %17 = bitcast i8* %add.ptr12 to %struct.irq_info*, !dbg !6947
  store %struct.irq_info* %17, %struct.irq_info** %tmp11, align 8, !dbg !6948
  %18 = load %struct.irq_info*, %struct.irq_info** %tmp11, align 8, !dbg !6947
  store %struct.irq_info* %18, %struct.irq_info** %info, align 8, !dbg !6924
  br label %for.cond, !dbg !6924, !llvm.loop !6950

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !6952
  br label %return, !dbg !6952

return:                                           ; preds = %for.end, %if.then5
  %19 = load i32, i32* %retval, align 4, !dbg !6953
  ret i32 %19, !dbg !6953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_bind_pirq_gsi_to_irq(i32 %gsi, i32 %pirq, i32 %shareable, i8* %name) #0 !dbg !6954 {
entry:
  %gsi.addr = alloca i32, align 4
  %pirq.addr = alloca i32, align 4
  %shareable.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %irq = alloca i32, align 4
  %irq_op = alloca %struct.physdev_irq, align 4
  %ret = alloca i32, align 4
  store i32 %gsi, i32* %gsi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gsi.addr, metadata !6957, metadata !DIExpression()), !dbg !6958
  store i32 %pirq, i32* %pirq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pirq.addr, metadata !6959, metadata !DIExpression()), !dbg !6960
  store i32 %shareable, i32* %shareable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shareable.addr, metadata !6961, metadata !DIExpression()), !dbg !6962
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6963, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !6965, metadata !DIExpression()), !dbg !6966
  store i32 -1, i32* %irq, align 4, !dbg !6966
  call void @llvm.dbg.declare(metadata %struct.physdev_irq* %irq_op, metadata !6967, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6974, metadata !DIExpression()), !dbg !6975
  call void @mutex_lock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !6976
  %0 = load i32, i32* %gsi.addr, align 4, !dbg !6977
  %call = call i32 @xen_irq_from_gsi(i32 %0) #12, !dbg !6978
  store i32 %call, i32* %irq, align 4, !dbg !6979
  %1 = load i32, i32* %irq, align 4, !dbg !6980
  %cmp = icmp ne i32 %1, -1, !dbg !6982
  br i1 %cmp, label %if.then, label %if.end, !dbg !6983

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %irq, align 4, !dbg !6984
  %3 = load i32, i32* %gsi.addr, align 4, !dbg !6984
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.xen_bind_pirq_gsi_to_irq, i64 0, i64 0), i32 %2, i32 %3) #13, !dbg !6984
  br label %out, !dbg !6986

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %gsi.addr, align 4, !dbg !6987
  %call2 = call i32 @xen_allocate_irq_gsi(i32 %4) #12, !dbg !6988
  store i32 %call2, i32* %irq, align 4, !dbg !6989
  %5 = load i32, i32* %irq, align 4, !dbg !6990
  %cmp3 = icmp slt i32 %5, 0, !dbg !6992
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6993

if.then4:                                         ; preds = %if.end
  br label %out, !dbg !6994

if.end5:                                          ; preds = %if.end
  %6 = load i32, i32* %irq, align 4, !dbg !6995
  %irq6 = getelementptr inbounds %struct.physdev_irq, %struct.physdev_irq* %irq_op, i32 0, i32 0, !dbg !6996
  store i32 %6, i32* %irq6, align 4, !dbg !6997
  %vector = getelementptr inbounds %struct.physdev_irq, %struct.physdev_irq* %irq_op, i32 0, i32 1, !dbg !6998
  store i32 0, i32* %vector, align 4, !dbg !6999
  %7 = load i32, i32* @xen_domain_type, align 4, !dbg !7000
  %cmp7 = icmp ne i32 %7, 0, !dbg !7000
  br i1 %cmp7, label %land.lhs.true, label %if.end12, !dbg !7000

land.lhs.true:                                    ; preds = %if.end5
  %8 = load i32, i32* @xen_start_flags, align 4, !dbg !7000
  %and = and i32 %8, 2, !dbg !7000
  %tobool = icmp ne i32 %and, 0, !dbg !7000
  br i1 %tobool, label %land.lhs.true8, label %if.end12, !dbg !7002

land.lhs.true8:                                   ; preds = %land.lhs.true
  %9 = bitcast %struct.physdev_irq* %irq_op to i8*, !dbg !7003
  %call9 = call i32 @HYPERVISOR_physdev_op(i32 10, i8* %9) #12, !dbg !7004
  %tobool10 = icmp ne i32 %call9, 0, !dbg !7004
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !7005

if.then11:                                        ; preds = %land.lhs.true8
  %10 = load i32, i32* %irq, align 4, !dbg !7006
  call void @xen_free_irq(i32 %10) #12, !dbg !7008
  store i32 -28, i32* %irq, align 4, !dbg !7009
  br label %out, !dbg !7010

if.end12:                                         ; preds = %land.lhs.true8, %land.lhs.true, %if.end5
  %11 = load i32, i32* %irq, align 4, !dbg !7011
  %12 = load i32, i32* %pirq.addr, align 4, !dbg !7012
  %13 = load i32, i32* %gsi.addr, align 4, !dbg !7013
  %14 = load i32, i32* %shareable.addr, align 4, !dbg !7014
  %tobool13 = icmp ne i32 %14, 0, !dbg !7014
  %15 = zext i1 %tobool13 to i64, !dbg !7014
  %cond = select i1 %tobool13, i32 2, i32 0, !dbg !7014
  %conv = trunc i32 %cond to i8, !dbg !7014
  %call14 = call i32 @xen_irq_info_pirq_setup(i32 %11, i32 0, i32 %12, i32 %13, i16 zeroext 32752, i8 zeroext %conv) #12, !dbg !7015
  store i32 %call14, i32* %ret, align 4, !dbg !7016
  %16 = load i32, i32* %ret, align 4, !dbg !7017
  %cmp15 = icmp slt i32 %16, 0, !dbg !7019
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !7020

if.then17:                                        ; preds = %if.end12
  %17 = load i32, i32* %irq, align 4, !dbg !7021
  call void @__unbind_from_irq(i32 %17) #12, !dbg !7023
  %18 = load i32, i32* %ret, align 4, !dbg !7024
  store i32 %18, i32* %irq, align 4, !dbg !7025
  br label %out, !dbg !7026

if.end18:                                         ; preds = %if.end12
  %19 = load i32, i32* %irq, align 4, !dbg !7027
  call void @pirq_query_unmask(i32 %19) #12, !dbg !7028
  %20 = load i32, i32* %shareable.addr, align 4, !dbg !7029
  %tobool19 = icmp ne i32 %20, 0, !dbg !7029
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !7031

if.then20:                                        ; preds = %if.end18
  %21 = load i32, i32* %irq, align 4, !dbg !7032
  %22 = load i8*, i8** %name.addr, align 8, !dbg !7033
  call void @irq_set_chip_and_handler_name(i32 %21, %struct.irq_chip* @xen_pirq_chip, void (%struct.irq_desc*)* @handle_fasteoi_irq, i8* %22) #12, !dbg !7034
  br label %if.end21, !dbg !7034

if.else:                                          ; preds = %if.end18
  %23 = load i32, i32* %irq, align 4, !dbg !7035
  %24 = load i8*, i8** %name.addr, align 8, !dbg !7036
  call void @irq_set_chip_and_handler_name(i32 %23, %struct.irq_chip* @xen_pirq_chip, void (%struct.irq_desc*)* @handle_edge_irq, i8* %24) #12, !dbg !7037
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then20
  br label %out, !dbg !7029

out:                                              ; preds = %if.end21, %if.then17, %if.then11, %if.then4, %if.then
  call void @llvm.dbg.label(metadata !7038), !dbg !7039
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7040
  %25 = load i32, i32* %irq, align 4, !dbg !7041
  ret i32 %25, !dbg !7042
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_allocate_irq_gsi(i32 %gsi) #0 !dbg !7043 {
entry:
  %retval = alloca i32, align 4
  %gsi.addr = alloca i32, align 4
  %irq = alloca i32, align 4
  store i32 %gsi, i32* %gsi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gsi.addr, metadata !7044, metadata !DIExpression()), !dbg !7045
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !7046, metadata !DIExpression()), !dbg !7047
  %0 = load i32, i32* @xen_domain_type, align 4, !dbg !7048
  %cmp = icmp eq i32 %0, 1, !dbg !7048
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7050

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @xen_domain_type, align 4, !dbg !7051
  %cmp1 = icmp ne i32 %1, 0, !dbg !7051
  br i1 %cmp1, label %land.lhs.true2, label %if.then, !dbg !7051

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, i32* @xen_start_flags, align 4, !dbg !7051
  %and = and i32 %2, 2, !dbg !7051
  %tobool = icmp ne i32 %and, 0, !dbg !7051
  br i1 %tobool, label %if.end, label %if.then, !dbg !7052

if.then:                                          ; preds = %land.lhs.true2, %land.lhs.true
  %call = call i32 @xen_allocate_irq_dynamic() #12, !dbg !7053
  store i32 %call, i32* %retval, align 4, !dbg !7054
  br label %return, !dbg !7054

if.end:                                           ; preds = %land.lhs.true2, %entry
  %3 = load i32, i32* %gsi.addr, align 4, !dbg !7055
  %call3 = call i32 @nr_legacy_irqs() #12, !dbg !7057
  %cmp4 = icmp ult i32 %3, %call3, !dbg !7058
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !7059

if.then5:                                         ; preds = %if.end
  %4 = load i32, i32* %gsi.addr, align 4, !dbg !7060
  store i32 %4, i32* %irq, align 4, !dbg !7061
  br label %if.end7, !dbg !7062

if.else:                                          ; preds = %if.end
  %5 = load i32, i32* %gsi.addr, align 4, !dbg !7063
  %6 = load i32, i32* %gsi.addr, align 4, !dbg !7063
  %call6 = call i32 @__irq_alloc_descs(i32 %5, i32 %6, i32 1, i32 -1, %struct.module* null, %struct.irq_affinity_desc* null) #12, !dbg !7063
  store i32 %call6, i32* %irq, align 4, !dbg !7064
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %7 = load i32, i32* %irq, align 4, !dbg !7065
  call void @xen_irq_init(i32 %7) #12, !dbg !7066
  %8 = load i32, i32* %irq, align 4, !dbg !7067
  store i32 %8, i32* %retval, align 4, !dbg !7068
  br label %return, !dbg !7068

return:                                           ; preds = %if.end7, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7069
  ret i32 %9, !dbg !7069
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @HYPERVISOR_physdev_op(i32 %cmd, i8* %arg) #0 !dbg !7070 {
entry:
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %__res = alloca i64, align 8
  %__arg1 = alloca i64, align 8
  %__arg2 = alloca i64, align 8
  %__arg3 = alloca i64, align 8
  %__arg4 = alloca i64, align 8
  %__arg5 = alloca i64, align 8
  %tmp = alloca i32, align 4
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7076, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.declare(metadata i64* %__res, metadata !7078, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata i64* %__arg1, metadata !7081, metadata !DIExpression()), !dbg !7080
  %0 = load i64, i64* %__arg1, align 8, !dbg !7080
  store i64 %0, i64* %__arg1, align 8, !dbg !7080
  call void @llvm.dbg.declare(metadata i64* %__arg2, metadata !7082, metadata !DIExpression()), !dbg !7080
  %1 = load i64, i64* %__arg2, align 8, !dbg !7080
  store i64 %1, i64* %__arg2, align 8, !dbg !7080
  call void @llvm.dbg.declare(metadata i64* %__arg3, metadata !7083, metadata !DIExpression()), !dbg !7080
  %2 = load i64, i64* %__arg3, align 8, !dbg !7080
  store i64 %2, i64* %__arg3, align 8, !dbg !7080
  call void @llvm.dbg.declare(metadata i64* %__arg4, metadata !7084, metadata !DIExpression()), !dbg !7080
  %3 = load i64, i64* %__arg4, align 8, !dbg !7080
  store i64 %3, i64* %__arg4, align 8, !dbg !7080
  call void @llvm.dbg.declare(metadata i64* %__arg5, metadata !7085, metadata !DIExpression()), !dbg !7080
  %4 = load i64, i64* %__arg5, align 8, !dbg !7080
  store i64 %4, i64* %__arg5, align 8, !dbg !7080
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !7080
  %conv = sext i32 %5 to i64, !dbg !7080
  store i64 %conv, i64* %__arg1, align 8, !dbg !7080
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !7080
  %7 = ptrtoint i8* %6 to i64, !dbg !7080
  store i64 %7, i64* %__arg2, align 8, !dbg !7080
  %8 = call i64 @llvm.read_register.i64(metadata !6565), !dbg !7080
  %9 = load i64, i64* %__arg1, align 8, !dbg !7080
  %10 = load i64, i64* %__arg2, align 8, !dbg !7080
  %11 = call { i64, i64, i64, i64 } asm sideeffect "call hypercall_page+${4:c}", "={rax},={rsp},={rdi},={rsi},i,1,2,3,~{memory},~{r8},~{r10},~{rdx},~{dirflag},~{fpsr},~{flags}"(i64 1056, i64 %8, i64 %9, i64 %10) #6, !dbg !7080, !srcloc !7086
  %asmresult = extractvalue { i64, i64, i64, i64 } %11, 0, !dbg !7080
  %asmresult1 = extractvalue { i64, i64, i64, i64 } %11, 1, !dbg !7080
  %asmresult2 = extractvalue { i64, i64, i64, i64 } %11, 2, !dbg !7080
  %asmresult3 = extractvalue { i64, i64, i64, i64 } %11, 3, !dbg !7080
  store i64 %asmresult, i64* %__res, align 8, !dbg !7080
  call void @llvm.write_register.i64(metadata !6565, i64 %asmresult1), !dbg !7080
  store i64 %asmresult2, i64* %__arg1, align 8, !dbg !7080
  store i64 %asmresult3, i64* %__arg2, align 8, !dbg !7080
  %12 = load i64, i64* %__res, align 8, !dbg !7080
  %conv4 = trunc i64 %12 to i32, !dbg !7080
  store i32 %conv4, i32* %tmp, align 4, !dbg !7080
  %13 = load i32, i32* %tmp, align 4, !dbg !7080
  ret i32 %13, !dbg !7087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xen_free_irq(i32 %irq) #0 !dbg !7088 {
entry:
  %irq.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %flags = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  %__dummy30 = alloca i64, align 8
  %__dummy231 = alloca i64, align 8
  %tmp34 = alloca i32, align 4
  %__ret_warn_on48 = alloca i32, align 4
  %tmp73 = alloca i64, align 8
  %__dummy81 = alloca i64, align 8
  %__dummy282 = alloca i64, align 8
  %tmp85 = alloca i32, align 4
  %__dummy89 = alloca i64, align 8
  %__dummy290 = alloca i64, align 8
  %tmp93 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7091, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !7093, metadata !DIExpression()), !dbg !7094
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7095
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !7096
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !7094
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7097, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7099, metadata !DIExpression()), !dbg !7102
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7102
  %tobool = icmp ne %struct.irq_info* %1, null, !dbg !7102
  %lnot = xor i1 %tobool, true, !dbg !7102
  %lnot1 = xor i1 %lnot, true, !dbg !7102
  %lnot2 = xor i1 %lnot1, true, !dbg !7102
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7102
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7102
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !7103
  %tobool3 = icmp ne i32 %2, 0, !dbg !7103
  %lnot4 = xor i1 %tobool3, true, !dbg !7103
  %lnot6 = xor i1 %lnot4, true, !dbg !7103
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !7103
  %conv = sext i32 %lnot.ext7 to i64, !dbg !7103
  %tobool8 = icmp ne i64 %conv, 0, !dbg !7103
  br i1 %tobool8, label %if.then, label %if.end, !dbg !7102

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7103

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !7105

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !7107

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !7105

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 683, i32 2305, i64 12) #6, !dbg !7109, !srcloc !7111
  br label %do.end11, !dbg !7109

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 340) #6, !dbg !7112, !srcloc !7114
  br label %do.body12, !dbg !7105

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !7115

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !7105

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !7105

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !7102
  %tobool15 = icmp ne i32 %3, 0, !dbg !7102
  %lnot16 = xor i1 %tobool15, true, !dbg !7102
  %lnot18 = xor i1 %lnot16, true, !dbg !7102
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7102
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !7102
  store i64 %conv20, i64* %tmp, align 8, !dbg !7103
  %4 = load i64, i64* %tmp, align 8, !dbg !7102
  %tobool21 = icmp ne i64 %4, 0, !dbg !7117
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !7118

if.then22:                                        ; preds = %if.end
  br label %return, !dbg !7119

if.end23:                                         ; preds = %if.end
  br label %do.body24, !dbg !7120

do.body24:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7121, metadata !DIExpression()), !dbg !7124
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7125, metadata !DIExpression()), !dbg !7124
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7124
  %conv25 = zext i1 %cmp to i32, !dbg !7124
  store i32 1, i32* %tmp26, align 4, !dbg !7124
  %5 = load i32, i32* %tmp26, align 4, !dbg !7124
  br label %do.body27, !dbg !7126

do.body27:                                        ; preds = %do.body24
  br label %do.body28, !dbg !7127

do.body28:                                        ; preds = %do.body27
  br label %do.body29, !dbg !7129

do.body29:                                        ; preds = %do.body28
  call void @llvm.dbg.declare(metadata i64* %__dummy30, metadata !7131, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.declare(metadata i64* %__dummy231, metadata !7135, metadata !DIExpression()), !dbg !7134
  %cmp32 = icmp eq i64* %__dummy30, %__dummy231, !dbg !7134
  %conv33 = zext i1 %cmp32 to i32, !dbg !7134
  store i32 1, i32* %tmp34, align 4, !dbg !7134
  %6 = load i32, i32* %tmp34, align 4, !dbg !7134
  %call35 = call i64 @arch_local_irq_save() #12, !dbg !7136
  store i64 %call35, i64* %flags, align 8, !dbg !7136
  br label %do.end36, !dbg !7136

do.end36:                                         ; preds = %do.body29
  br label %do.end37, !dbg !7129

do.end37:                                         ; preds = %do.end36
  br label %do.body38, !dbg !7127

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7137, !srcloc !7139
  br label %do.body39, !dbg !7137

do.body39:                                        ; preds = %do.body38
  br label %do.end40, !dbg !7140

do.end40:                                         ; preds = %do.body39
  br label %do.end41, !dbg !7137

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !7127

do.end42:                                         ; preds = %do.end41
  br label %do.end43, !dbg !7126

do.end43:                                         ; preds = %do.end42
  %7 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7142
  %eoi_list = getelementptr inbounds %struct.irq_info, %struct.irq_info* %7, i32 0, i32 1, !dbg !7144
  %call44 = call i32 @list_empty(%struct.list_head* %eoi_list) #12, !dbg !7145
  %tobool45 = icmp ne i32 %call44, 0, !dbg !7145
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !7146

if.then46:                                        ; preds = %do.end43
  %8 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7147
  call void @lateeoi_list_del(%struct.irq_info* %8) #12, !dbg !7148
  br label %if.end47, !dbg !7148

if.end47:                                         ; preds = %if.then46, %do.end43
  %9 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7149
  %list = getelementptr inbounds %struct.irq_info, %struct.irq_info* %9, i32 0, i32 0, !dbg !7150
  call void @list_del(%struct.list_head* %list) #12, !dbg !7151
  %10 = load i32, i32* %irq.addr, align 4, !dbg !7152
  call void @set_info_for_irq(i32 %10, %struct.irq_info* null) #12, !dbg !7153
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on48, metadata !7154, metadata !DIExpression()), !dbg !7156
  %11 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7156
  %refcnt = getelementptr inbounds %struct.irq_info, %struct.irq_info* %11, i32 0, i32 2, !dbg !7156
  %12 = load i16, i16* %refcnt, align 8, !dbg !7156
  %conv49 = sext i16 %12 to i32, !dbg !7156
  %cmp50 = icmp sgt i32 %conv49, 0, !dbg !7156
  %lnot52 = xor i1 %cmp50, true, !dbg !7156
  %lnot54 = xor i1 %lnot52, true, !dbg !7156
  %lnot.ext55 = zext i1 %lnot54 to i32, !dbg !7156
  store i32 %lnot.ext55, i32* %__ret_warn_on48, align 4, !dbg !7156
  %13 = load i32, i32* %__ret_warn_on48, align 4, !dbg !7157
  %tobool56 = icmp ne i32 %13, 0, !dbg !7157
  %lnot57 = xor i1 %tobool56, true, !dbg !7157
  %lnot59 = xor i1 %lnot57, true, !dbg !7157
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !7157
  %conv61 = sext i32 %lnot.ext60 to i64, !dbg !7157
  %tobool62 = icmp ne i64 %conv61, 0, !dbg !7157
  br i1 %tobool62, label %if.then63, label %if.end72, !dbg !7156

if.then63:                                        ; preds = %if.end47
  br label %do.body64, !dbg !7157

do.body64:                                        ; preds = %if.then63
  br label %do.body65, !dbg !7159

do.body65:                                        ; preds = %do.body64
  br label %do.end66, !dbg !7161

do.end66:                                         ; preds = %do.body65
  br label %do.body67, !dbg !7159

do.body67:                                        ; preds = %do.end66
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 695, i32 2305, i64 12) #6, !dbg !7163, !srcloc !7165
  br label %do.end68, !dbg !7163

do.end68:                                         ; preds = %do.body67
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 341) #6, !dbg !7166, !srcloc !7168
  br label %do.body69, !dbg !7159

do.body69:                                        ; preds = %do.end68
  br label %do.end70, !dbg !7169

do.end70:                                         ; preds = %do.body69
  br label %do.end71, !dbg !7159

do.end71:                                         ; preds = %do.end70
  br label %if.end72, !dbg !7159

if.end72:                                         ; preds = %do.end71, %if.end47
  %14 = load i32, i32* %__ret_warn_on48, align 4, !dbg !7156
  %tobool74 = icmp ne i32 %14, 0, !dbg !7156
  %lnot75 = xor i1 %tobool74, true, !dbg !7156
  %lnot77 = xor i1 %lnot75, true, !dbg !7156
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !7156
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !7156
  store i64 %conv79, i64* %tmp73, align 8, !dbg !7157
  %15 = load i64, i64* %tmp73, align 8, !dbg !7156
  br label %do.body80, !dbg !7171

do.body80:                                        ; preds = %if.end72
  call void @llvm.dbg.declare(metadata i64* %__dummy81, metadata !7172, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.declare(metadata i64* %__dummy282, metadata !7176, metadata !DIExpression()), !dbg !7175
  %cmp83 = icmp eq i64* %__dummy81, %__dummy282, !dbg !7175
  %conv84 = zext i1 %cmp83 to i32, !dbg !7175
  store i32 1, i32* %tmp85, align 4, !dbg !7175
  %16 = load i32, i32* %tmp85, align 4, !dbg !7175
  br label %do.body86, !dbg !7177

do.body86:                                        ; preds = %do.body80
  br label %do.body87, !dbg !7178

do.body87:                                        ; preds = %do.body86
  br label %do.body88, !dbg !7180

do.body88:                                        ; preds = %do.body87
  call void @llvm.dbg.declare(metadata i64* %__dummy89, metadata !7182, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.declare(metadata i64* %__dummy290, metadata !7186, metadata !DIExpression()), !dbg !7185
  %cmp91 = icmp eq i64* %__dummy89, %__dummy290, !dbg !7185
  %conv92 = zext i1 %cmp91 to i32, !dbg !7185
  store i32 1, i32* %tmp93, align 4, !dbg !7185
  %17 = load i32, i32* %tmp93, align 4, !dbg !7185
  %18 = load i64, i64* %flags, align 8, !dbg !7187
  call void @arch_local_irq_restore(i64 %18) #12, !dbg !7187
  br label %do.end94, !dbg !7187

do.end94:                                         ; preds = %do.body88
  br label %do.end95, !dbg !7180

do.end95:                                         ; preds = %do.end94
  br label %do.body96, !dbg !7178

do.body96:                                        ; preds = %do.end95
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7188, !srcloc !7190
  br label %do.body97, !dbg !7188

do.body97:                                        ; preds = %do.body96
  br label %do.end98, !dbg !7191

do.end98:                                         ; preds = %do.body97
  br label %do.end99, !dbg !7188

do.end99:                                         ; preds = %do.end98
  br label %do.end100, !dbg !7178

do.end100:                                        ; preds = %do.end99
  br label %do.end101, !dbg !7177

do.end101:                                        ; preds = %do.end100
  %19 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7193
  %20 = bitcast %struct.irq_info* %19 to i8*, !dbg !7193
  call void @kfree(i8* %20) #12, !dbg !7194
  %21 = load i32, i32* %irq.addr, align 4, !dbg !7195
  %call102 = call i32 @nr_legacy_irqs() #12, !dbg !7197
  %cmp103 = icmp ult i32 %21, %call102, !dbg !7198
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !7199

if.then105:                                       ; preds = %do.end101
  br label %return, !dbg !7200

if.end106:                                        ; preds = %do.end101
  %22 = load i32, i32* %irq.addr, align 4, !dbg !7201
  call void @irq_free_desc(i32 %22) #12, !dbg !7202
  br label %return, !dbg !7203

return:                                           ; preds = %if.end106, %if.then105, %if.then22
  ret void, !dbg !7203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_irq_info_pirq_setup(i32 %irq, i32 %evtchn, i32 %pirq, i32 %gsi, i16 zeroext %domid, i8 zeroext %flags) #0 !dbg !7204 {
entry:
  %irq.addr = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %pirq.addr = alloca i32, align 4
  %gsi.addr = alloca i32, align 4
  %domid.addr = alloca i16, align 2
  %flags.addr = alloca i8, align 1
  %info = alloca %struct.irq_info*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7207, metadata !DIExpression()), !dbg !7208
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !7209, metadata !DIExpression()), !dbg !7210
  store i32 %pirq, i32* %pirq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pirq.addr, metadata !7211, metadata !DIExpression()), !dbg !7212
  store i32 %gsi, i32* %gsi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gsi.addr, metadata !7213, metadata !DIExpression()), !dbg !7214
  store i16 %domid, i16* %domid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %domid.addr, metadata !7215, metadata !DIExpression()), !dbg !7216
  store i8 %flags, i8* %flags.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flags.addr, metadata !7217, metadata !DIExpression()), !dbg !7218
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !7219, metadata !DIExpression()), !dbg !7220
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7221
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !7222
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !7220
  %1 = load i32, i32* %pirq.addr, align 4, !dbg !7223
  %conv = trunc i32 %1 to i16, !dbg !7223
  %2 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7224
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %2, i32 0, i32 11, !dbg !7225
  %pirq1 = bitcast %union.anon.0* %u to %struct.anon*, !dbg !7226
  %pirq2 = getelementptr inbounds %struct.anon, %struct.anon* %pirq1, i32 0, i32 0, !dbg !7227
  store i16 %conv, i16* %pirq2, align 8, !dbg !7228
  %3 = load i32, i32* %gsi.addr, align 4, !dbg !7229
  %conv3 = trunc i32 %3 to i16, !dbg !7229
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7230
  %u4 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %4, i32 0, i32 11, !dbg !7231
  %pirq5 = bitcast %union.anon.0* %u4 to %struct.anon*, !dbg !7232
  %gsi6 = getelementptr inbounds %struct.anon, %struct.anon* %pirq5, i32 0, i32 1, !dbg !7233
  store i16 %conv3, i16* %gsi6, align 2, !dbg !7234
  %5 = load i16, i16* %domid.addr, align 2, !dbg !7235
  %6 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7236
  %u7 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %6, i32 0, i32 11, !dbg !7237
  %pirq8 = bitcast %union.anon.0* %u7 to %struct.anon*, !dbg !7238
  %domid9 = getelementptr inbounds %struct.anon, %struct.anon* %pirq8, i32 0, i32 4, !dbg !7239
  store i16 %5, i16* %domid9, align 2, !dbg !7240
  %7 = load i8, i8* %flags.addr, align 1, !dbg !7241
  %8 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7242
  %u10 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %8, i32 0, i32 11, !dbg !7243
  %pirq11 = bitcast %union.anon.0* %u10 to %struct.anon*, !dbg !7244
  %flags12 = getelementptr inbounds %struct.anon, %struct.anon* %pirq11, i32 0, i32 3, !dbg !7245
  store i8 %7, i8* %flags12, align 1, !dbg !7246
  %9 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7247
  %10 = load i32, i32* %irq.addr, align 4, !dbg !7248
  %11 = load i32, i32* %evtchn.addr, align 4, !dbg !7249
  %call13 = call i32 @xen_irq_info_common_setup(%struct.irq_info* %9, i32 %10, i32 1, i32 %11, i16 zeroext 0) #12, !dbg !7250
  ret i32 %call13, !dbg !7251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__unbind_from_irq(i32 %irq) #0 !dbg !7252 {
entry:
  %irq.addr = alloca i32, align 4
  %evtchn = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %cpu = alloca i32, align 4
  %tmp = alloca [24 x i32]*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp15 = alloca [24 x i32]*, align 8
  %tmp18 = alloca [6 x i32]*, align 8
  %__vpp_verify20 = alloca i8*, align 8
  %tmp22 = alloca [6 x i32]*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7253, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !7255, metadata !DIExpression()), !dbg !7256
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7257
  %call = call i32 @evtchn_from_irq(i32 %0) #12, !dbg !7258
  store i32 %call, i32* %evtchn, align 4, !dbg !7256
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !7259, metadata !DIExpression()), !dbg !7260
  %1 = load i32, i32* %irq.addr, align 4, !dbg !7261
  %call1 = call %struct.irq_info* @info_for_irq(i32 %1) #12, !dbg !7262
  store %struct.irq_info* %call1, %struct.irq_info** %info, align 8, !dbg !7260
  %2 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7263
  %refcnt = getelementptr inbounds %struct.irq_info, %struct.irq_info* %2, i32 0, i32 2, !dbg !7265
  %3 = load i16, i16* %refcnt, align 8, !dbg !7265
  %conv = sext i16 %3 to i32, !dbg !7263
  %cmp = icmp sgt i32 %conv, 0, !dbg !7266
  br i1 %cmp, label %if.then, label %if.end9, !dbg !7267

if.then:                                          ; preds = %entry
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7268
  %refcnt3 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %4, i32 0, i32 2, !dbg !7270
  %5 = load i16, i16* %refcnt3, align 8, !dbg !7271
  %dec = add i16 %5, -1, !dbg !7271
  store i16 %dec, i16* %refcnt3, align 8, !dbg !7271
  %6 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7272
  %refcnt4 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %6, i32 0, i32 2, !dbg !7274
  %7 = load i16, i16* %refcnt4, align 8, !dbg !7274
  %conv5 = sext i16 %7 to i32, !dbg !7272
  %cmp6 = icmp ne i32 %conv5, 0, !dbg !7275
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !7276

if.then8:                                         ; preds = %if.then
  br label %return, !dbg !7277

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !7278

if.end9:                                          ; preds = %if.end, %entry
  %8 = load i32, i32* %evtchn, align 4, !dbg !7279
  %cmp10 = icmp ne i32 %8, 0, !dbg !7279
  br i1 %cmp10, label %if.then12, label %if.end26, !dbg !7281

if.then12:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !7282, metadata !DIExpression()), !dbg !7284
  %9 = load i32, i32* %irq.addr, align 4, !dbg !7285
  %call13 = call i32 @cpu_from_irq(i32 %9) #12, !dbg !7286
  store i32 %call13, i32* %cpu, align 4, !dbg !7284
  %10 = load i32, i32* %evtchn, align 4, !dbg !7287
  call void @xen_evtchn_close(i32 %10) #12, !dbg !7288
  %11 = load i32, i32* %irq.addr, align 4, !dbg !7289
  %call14 = call i32 @type_from_irq(i32 %11) #12, !dbg !7290
  switch i32 %call14, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb17
  ], !dbg !7291

sw.bb:                                            ; preds = %if.then12
  %12 = load i32, i32* %cpu, align 4, !dbg !7292
  br label %do.body, !dbg !7295

do.body:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !7297, metadata !DIExpression()), !dbg !7299
  store i8* null, i8** %__vpp_verify, align 8, !dbg !7299
  %13 = load i8*, i8** %__vpp_verify, align 8, !dbg !7299
  br label %do.end, !dbg !7299

do.end:                                           ; preds = %do.body
  store [24 x i32]* @virq_to_irq, [24 x i32]** %tmp15, align 8, !dbg !7299
  %14 = load [24 x i32]*, [24 x i32]** %tmp15, align 8, !dbg !7295
  store [24 x i32]* %14, [24 x i32]** %tmp, align 8, !dbg !7292
  %15 = load [24 x i32]*, [24 x i32]** %tmp, align 8, !dbg !7292
  %16 = load i32, i32* %irq.addr, align 4, !dbg !7300
  %call16 = call i32 @virq_from_irq(i32 %16) #12, !dbg !7301
  %idxprom = zext i32 %call16 to i64, !dbg !7302
  %arrayidx = getelementptr [24 x i32], [24 x i32]* %15, i64 0, i64 %idxprom, !dbg !7302
  store i32 -1, i32* %arrayidx, align 4, !dbg !7303
  br label %sw.epilog, !dbg !7304

sw.bb17:                                          ; preds = %if.then12
  %17 = load i32, i32* %cpu, align 4, !dbg !7305
  br label %do.body19, !dbg !7307

do.body19:                                        ; preds = %sw.bb17
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify20, metadata !7309, metadata !DIExpression()), !dbg !7311
  store i8* null, i8** %__vpp_verify20, align 8, !dbg !7311
  %18 = load i8*, i8** %__vpp_verify20, align 8, !dbg !7311
  br label %do.end21, !dbg !7311

do.end21:                                         ; preds = %do.body19
  store [6 x i32]* @ipi_to_irq, [6 x i32]** %tmp22, align 8, !dbg !7311
  %19 = load [6 x i32]*, [6 x i32]** %tmp22, align 8, !dbg !7307
  store [6 x i32]* %19, [6 x i32]** %tmp18, align 8, !dbg !7305
  %20 = load [6 x i32]*, [6 x i32]** %tmp18, align 8, !dbg !7305
  %21 = load i32, i32* %irq.addr, align 4, !dbg !7312
  %call23 = call i32 @ipi_from_irq(i32 %21) #12, !dbg !7313
  %idxprom24 = zext i32 %call23 to i64, !dbg !7314
  %arrayidx25 = getelementptr [6 x i32], [6 x i32]* %20, i64 0, i64 %idxprom24, !dbg !7314
  store i32 -1, i32* %arrayidx25, align 4, !dbg !7315
  br label %sw.epilog, !dbg !7316

sw.default:                                       ; preds = %if.then12
  br label %sw.epilog, !dbg !7317

sw.epilog:                                        ; preds = %sw.default, %do.end21, %do.end
  %22 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7318
  call void @xen_irq_info_cleanup(%struct.irq_info* %22) #12, !dbg !7319
  br label %if.end26, !dbg !7320

if.end26:                                         ; preds = %sw.epilog, %if.end9
  %23 = load i32, i32* %irq.addr, align 4, !dbg !7321
  call void @xen_free_irq(i32 %23) #12, !dbg !7322
  br label %return, !dbg !7323

return:                                           ; preds = %if.end26, %if.then8
  ret void, !dbg !7323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pirq_query_unmask(i32 %irq) #0 !dbg !7324 {
entry:
  %irq.addr = alloca i32, align 4
  %irq_status = alloca %struct.physdev_irq_status_query, align 4
  %info = alloca %struct.irq_info*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7325, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.declare(metadata %struct.physdev_irq_status_query* %irq_status, metadata !7327, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !7333, metadata !DIExpression()), !dbg !7334
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7335
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !7336
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !7334
  br label %do.body, !dbg !7337

do.body:                                          ; preds = %entry
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7338
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %1, i32 0, i32 4, !dbg !7338
  %2 = load i32, i32* %type, align 4, !dbg !7338
  %cmp = icmp ne i32 %2, 1, !dbg !7338
  %lnot = xor i1 %cmp, true, !dbg !7338
  %lnot1 = xor i1 %lnot, true, !dbg !7338
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7338
  %conv = sext i32 %lnot.ext to i64, !dbg !7338
  %tobool = icmp ne i64 %conv, 0, !dbg !7338
  br i1 %tobool, label %if.then, label %if.end, !dbg !7341

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !7338

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !7342

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !7344

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !7342

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 722, i32 0, i64 12) #6, !dbg !7346, !srcloc !7348
  br label %do.end5, !dbg !7346

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !7342

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 343) #6, !dbg !7349, !srcloc !7352
  unreachable, !dbg !7353

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !7342

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !7342

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !7341

do.end9:                                          ; preds = %if.end
  %3 = load i32, i32* %irq.addr, align 4, !dbg !7354
  %call10 = call i32 @pirq_from_irq(i32 %3) #12, !dbg !7355
  %irq11 = getelementptr inbounds %struct.physdev_irq_status_query, %struct.physdev_irq_status_query* %irq_status, i32 0, i32 0, !dbg !7356
  store i32 %call10, i32* %irq11, align 4, !dbg !7357
  %4 = bitcast %struct.physdev_irq_status_query* %irq_status to i8*, !dbg !7358
  %call12 = call i32 @HYPERVISOR_physdev_op(i32 5, i8* %4) #12, !dbg !7360
  %tobool13 = icmp ne i32 %call12, 0, !dbg !7360
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7361

if.then14:                                        ; preds = %do.end9
  %flags = getelementptr inbounds %struct.physdev_irq_status_query, %struct.physdev_irq_status_query* %irq_status, i32 0, i32 1, !dbg !7362
  store i32 0, i32* %flags, align 4, !dbg !7363
  br label %if.end15, !dbg !7364

if.end15:                                         ; preds = %if.then14, %do.end9
  %5 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7365
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %5, i32 0, i32 11, !dbg !7366
  %pirq = bitcast %union.anon.0* %u to %struct.anon*, !dbg !7367
  %flags16 = getelementptr inbounds %struct.anon, %struct.anon* %pirq, i32 0, i32 3, !dbg !7368
  %6 = load i8, i8* %flags16, align 1, !dbg !7369
  %conv17 = zext i8 %6 to i32, !dbg !7369
  %and = and i32 %conv17, -2, !dbg !7369
  %conv18 = trunc i32 %and to i8, !dbg !7369
  store i8 %conv18, i8* %flags16, align 1, !dbg !7369
  %flags19 = getelementptr inbounds %struct.physdev_irq_status_query, %struct.physdev_irq_status_query* %irq_status, i32 0, i32 1, !dbg !7370
  %7 = load i32, i32* %flags19, align 4, !dbg !7370
  %and20 = and i32 %7, 1, !dbg !7372
  %tobool21 = icmp ne i32 %and20, 0, !dbg !7372
  br i1 %tobool21, label %if.then22, label %if.end28, !dbg !7373

if.then22:                                        ; preds = %if.end15
  %8 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7374
  %u23 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %8, i32 0, i32 11, !dbg !7375
  %pirq24 = bitcast %union.anon.0* %u23 to %struct.anon*, !dbg !7376
  %flags25 = getelementptr inbounds %struct.anon, %struct.anon* %pirq24, i32 0, i32 3, !dbg !7377
  %9 = load i8, i8* %flags25, align 1, !dbg !7378
  %conv26 = zext i8 %9 to i32, !dbg !7378
  %or = or i32 %conv26, 1, !dbg !7378
  %conv27 = trunc i32 %or to i8, !dbg !7378
  store i8 %conv27, i8* %flags25, align 1, !dbg !7378
  br label %if.end28, !dbg !7374

if.end28:                                         ; preds = %if.then22, %if.end15
  ret void, !dbg !7379
}

; Function Attrs: noredzone
declare dso_local void @irq_set_chip_and_handler_name(i32, %struct.irq_chip*, void (%struct.irq_desc*)*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @handle_fasteoi_irq(%struct.irq_desc*) #2

; Function Attrs: noredzone
declare dso_local void @handle_edge_irq(%struct.irq_desc*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_allocate_pirq_msi(%struct.pci_dev* %dev, %struct.msi_desc* %msidesc) #0 !dbg !752 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %msidesc.addr = alloca %struct.msi_desc*, align 8
  %rc = alloca i32, align 4
  %op_get_free_pirq = alloca %struct.physdev_get_free_pirq, align 4
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp37 = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7380, metadata !DIExpression()), !dbg !7381
  store %struct.msi_desc* %msidesc, %struct.msi_desc** %msidesc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %msidesc.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7384, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.declare(metadata %struct.physdev_get_free_pirq* %op_get_free_pirq, metadata !7386, metadata !DIExpression()), !dbg !7391
  %type = getelementptr inbounds %struct.physdev_get_free_pirq, %struct.physdev_get_free_pirq* %op_get_free_pirq, i32 0, i32 0, !dbg !7392
  store i32 0, i32* %type, align 4, !dbg !7393
  %0 = bitcast %struct.physdev_get_free_pirq* %op_get_free_pirq to i8*, !dbg !7394
  %call = call i32 @HYPERVISOR_physdev_op(i32 23, i8* %0) #12, !dbg !7395
  store i32 %call, i32* %rc, align 4, !dbg !7396
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !7397, metadata !DIExpression()), !dbg !7399
  %1 = load i32, i32* %rc, align 4, !dbg !7399
  %cmp = icmp eq i32 %1, -38, !dbg !7399
  %lnot = xor i1 %cmp, true, !dbg !7399
  %lnot1 = xor i1 %lnot, true, !dbg !7399
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7399
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !7399
  %2 = load i32, i32* %__ret_warn_once, align 4, !dbg !7400
  %tobool = icmp ne i32 %2, 0, !dbg !7400
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7400

land.rhs:                                         ; preds = %entry
  %3 = load i8, i8* @xen_allocate_pirq_msi.__warned, align 1, !dbg !7400
  %tobool2 = trunc i8 %3 to i1, !dbg !7400
  %lnot3 = xor i1 %tobool2, true, !dbg !7400
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !7402
  %lnot5 = xor i1 %4, true, !dbg !7400
  %lnot7 = xor i1 %lnot5, true, !dbg !7400
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7400
  %conv = sext i32 %lnot.ext8 to i64, !dbg !7400
  %tobool9 = icmp ne i64 %conv, 0, !dbg !7400
  br i1 %tobool9, label %if.then, label %if.end36, !dbg !7399

if.then:                                          ; preds = %land.end
  store i8 1, i8* @xen_allocate_pirq_msi.__warned, align 1, !dbg !7403
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7405, metadata !DIExpression()), !dbg !7407
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7407
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !7408
  %tobool10 = icmp ne i32 %5, 0, !dbg !7408
  %lnot11 = xor i1 %tobool10, true, !dbg !7408
  %lnot13 = xor i1 %lnot11, true, !dbg !7408
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !7408
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !7408
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !7408
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !7407

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !7408

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !7410

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !7412

do.end:                                           ; preds = %do.body18
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !7410
  br label %do.body19, !dbg !7410

do.body19:                                        ; preds = %do.end
  br label %do.body20, !dbg !7414

do.body20:                                        ; preds = %do.body19
  br label %do.end21, !dbg !7416

do.end21:                                         ; preds = %do.body20
  br label %do.body22, !dbg !7414

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 985, i32 2313, i64 12) #6, !dbg !7418, !srcloc !7420
  br label %do.end23, !dbg !7418

do.end23:                                         ; preds = %do.body22
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 349) #6, !dbg !7421, !srcloc !7423
  br label %do.body24, !dbg !7414

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !7424

do.end25:                                         ; preds = %do.body24
  br label %do.end26, !dbg !7414

do.end26:                                         ; preds = %do.end25
  br label %do.body27, !dbg !7410

do.body27:                                        ; preds = %do.end26
  br label %do.end28, !dbg !7426

do.end28:                                         ; preds = %do.body27
  br label %do.end29, !dbg !7410

do.end29:                                         ; preds = %do.end28
  br label %if.end, !dbg !7410

if.end:                                           ; preds = %do.end29, %if.then
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7407
  %tobool30 = icmp ne i32 %6, 0, !dbg !7407
  %lnot31 = xor i1 %tobool30, true, !dbg !7407
  %lnot33 = xor i1 %lnot31, true, !dbg !7407
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !7407
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !7407
  store i64 %conv35, i64* %tmp, align 8, !dbg !7408
  %7 = load i64, i64* %tmp, align 8, !dbg !7407
  br label %if.end36, !dbg !7403

if.end36:                                         ; preds = %if.end, %land.end
  %8 = load i32, i32* %__ret_warn_once, align 4, !dbg !7399
  %tobool38 = icmp ne i32 %8, 0, !dbg !7399
  %lnot39 = xor i1 %tobool38, true, !dbg !7399
  %lnot41 = xor i1 %lnot39, true, !dbg !7399
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !7399
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !7399
  store i64 %conv43, i64* %tmp37, align 8, !dbg !7400
  %9 = load i64, i64* %tmp37, align 8, !dbg !7399
  %10 = load i32, i32* %rc, align 4, !dbg !7428
  %tobool44 = icmp ne i32 %10, 0, !dbg !7428
  br i1 %tobool44, label %cond.true, label %cond.false, !dbg !7428

cond.true:                                        ; preds = %if.end36
  br label %cond.end, !dbg !7428

cond.false:                                       ; preds = %if.end36
  %pirq = getelementptr inbounds %struct.physdev_get_free_pirq, %struct.physdev_get_free_pirq* %op_get_free_pirq, i32 0, i32 1, !dbg !7429
  %11 = load i32, i32* %pirq, align 4, !dbg !7429
  br label %cond.end, !dbg !7428

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %11, %cond.false ], !dbg !7428
  ret i32 %cond, !dbg !7430
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_bind_pirq_msi_to_irq(%struct.pci_dev* %dev, %struct.msi_desc* %msidesc, i32 %pirq, i32 %nvec, i8* %name, i16 zeroext %domid) #0 !dbg !7431 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %msidesc.addr = alloca %struct.msi_desc*, align 8
  %pirq.addr = alloca i32, align 4
  %nvec.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %domid.addr = alloca i16, align 2
  %i = alloca i32, align 4
  %irq = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !7435, metadata !DIExpression()), !dbg !7436
  store %struct.msi_desc* %msidesc, %struct.msi_desc** %msidesc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.msi_desc** %msidesc.addr, metadata !7437, metadata !DIExpression()), !dbg !7438
  store i32 %pirq, i32* %pirq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pirq.addr, metadata !7439, metadata !DIExpression()), !dbg !7440
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !7441, metadata !DIExpression()), !dbg !7442
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7443, metadata !DIExpression()), !dbg !7444
  store i16 %domid, i16* %domid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %domid.addr, metadata !7445, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7447, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !7449, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7451, metadata !DIExpression()), !dbg !7452
  call void @mutex_lock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7453
  %0 = load i32, i32* %nvec.addr, align 4, !dbg !7454
  %call = call i32 @xen_allocate_irqs_dynamic(i32 %0) #12, !dbg !7455
  store i32 %call, i32* %irq, align 4, !dbg !7456
  %1 = load i32, i32* %irq, align 4, !dbg !7457
  %cmp = icmp slt i32 %1, 0, !dbg !7459
  br i1 %cmp, label %if.then, label %if.end, !dbg !7460

if.then:                                          ; preds = %entry
  br label %out, !dbg !7461

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !7462
  br label %for.cond, !dbg !7464

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !7465
  %3 = load i32, i32* %nvec.addr, align 4, !dbg !7467
  %cmp1 = icmp slt i32 %2, %3, !dbg !7468
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7469

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %irq, align 4, !dbg !7470
  %5 = load i32, i32* %i, align 4, !dbg !7472
  %add = add i32 %4, %5, !dbg !7473
  %6 = load i8*, i8** %name.addr, align 8, !dbg !7474
  call void @irq_set_chip_and_handler_name(i32 %add, %struct.irq_chip* @xen_pirq_chip, void (%struct.irq_desc*)* @handle_edge_irq, i8* %6) #12, !dbg !7475
  %7 = load i32, i32* %irq, align 4, !dbg !7476
  %8 = load i32, i32* %i, align 4, !dbg !7477
  %add2 = add i32 %7, %8, !dbg !7478
  %9 = load i32, i32* %pirq.addr, align 4, !dbg !7479
  %10 = load i32, i32* %i, align 4, !dbg !7480
  %add3 = add i32 %9, %10, !dbg !7481
  %11 = load i16, i16* %domid.addr, align 2, !dbg !7482
  %12 = load i32, i32* %i, align 4, !dbg !7483
  %cmp4 = icmp eq i32 %12, 0, !dbg !7484
  %13 = zext i1 %cmp4 to i64, !dbg !7483
  %cond = select i1 %cmp4, i32 0, i32 4, !dbg !7483
  %conv = trunc i32 %cond to i8, !dbg !7483
  %call5 = call i32 @xen_irq_info_pirq_setup(i32 %add2, i32 0, i32 %add3, i32 0, i16 zeroext %11, i8 zeroext %conv) #12, !dbg !7485
  store i32 %call5, i32* %ret, align 4, !dbg !7486
  %14 = load i32, i32* %ret, align 4, !dbg !7487
  %cmp6 = icmp slt i32 %14, 0, !dbg !7489
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !7490

if.then8:                                         ; preds = %for.body
  br label %error_irq, !dbg !7491

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !7492

for.inc:                                          ; preds = %if.end9
  %15 = load i32, i32* %i, align 4, !dbg !7493
  %inc = add i32 %15, 1, !dbg !7493
  store i32 %inc, i32* %i, align 4, !dbg !7493
  br label %for.cond, !dbg !7494, !llvm.loop !7495

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %irq, align 4, !dbg !7497
  %17 = load %struct.msi_desc*, %struct.msi_desc** %msidesc.addr, align 8, !dbg !7498
  %call10 = call i32 @irq_set_msi_desc(i32 %16, %struct.msi_desc* %17) #12, !dbg !7499
  store i32 %call10, i32* %ret, align 4, !dbg !7500
  %18 = load i32, i32* %ret, align 4, !dbg !7501
  %cmp11 = icmp slt i32 %18, 0, !dbg !7503
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !7504

if.then13:                                        ; preds = %for.end
  br label %error_irq, !dbg !7505

if.end14:                                         ; preds = %for.end
  br label %out, !dbg !7506

out:                                              ; preds = %if.end14, %if.then
  call void @llvm.dbg.label(metadata !7507), !dbg !7508
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7509
  %19 = load i32, i32* %irq, align 4, !dbg !7510
  store i32 %19, i32* %retval, align 4, !dbg !7511
  br label %return, !dbg !7511

error_irq:                                        ; preds = %if.then13, %if.then8
  call void @llvm.dbg.label(metadata !7512), !dbg !7513
  br label %while.cond, !dbg !7514

while.cond:                                       ; preds = %while.body, %error_irq
  %20 = load i32, i32* %nvec.addr, align 4, !dbg !7515
  %dec = add i32 %20, -1, !dbg !7515
  store i32 %dec, i32* %nvec.addr, align 4, !dbg !7515
  %tobool = icmp ne i32 %20, 0, !dbg !7514
  br i1 %tobool, label %while.body, label %while.end, !dbg !7514

while.body:                                       ; preds = %while.cond
  %21 = load i32, i32* %irq, align 4, !dbg !7516
  %22 = load i32, i32* %nvec.addr, align 4, !dbg !7517
  %add15 = add i32 %21, %22, !dbg !7518
  call void @__unbind_from_irq(i32 %add15) #12, !dbg !7519
  br label %while.cond, !dbg !7514, !llvm.loop !7520

while.end:                                        ; preds = %while.cond
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7522
  %23 = load i32, i32* %ret, align 4, !dbg !7523
  store i32 %23, i32* %retval, align 4, !dbg !7524
  br label %return, !dbg !7524

return:                                           ; preds = %while.end, %out
  %24 = load i32, i32* %retval, align 4, !dbg !7525
  ret i32 %24, !dbg !7525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_allocate_irqs_dynamic(i32 %nvec) #0 !dbg !7526 {
entry:
  %nvec.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %irq = alloca i32, align 4
  store i32 %nvec, i32* %nvec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nvec.addr, metadata !7527, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7529, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !7531, metadata !DIExpression()), !dbg !7532
  %0 = load i32, i32* %nvec.addr, align 4, !dbg !7533
  %call = call i32 @__irq_alloc_descs(i32 -1, i32 0, i32 %0, i32 -1, %struct.module* null, %struct.irq_affinity_desc* null) #12, !dbg !7533
  store i32 %call, i32* %irq, align 4, !dbg !7532
  %1 = load i32, i32* %irq, align 4, !dbg !7534
  %cmp = icmp sge i32 %1, 0, !dbg !7536
  br i1 %cmp, label %if.then, label %if.end, !dbg !7537

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !7538
  br label %for.cond, !dbg !7541

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !7542
  %3 = load i32, i32* %nvec.addr, align 4, !dbg !7544
  %cmp1 = icmp slt i32 %2, %3, !dbg !7545
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7546

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %irq, align 4, !dbg !7547
  %5 = load i32, i32* %i, align 4, !dbg !7548
  %add = add i32 %4, %5, !dbg !7549
  call void @xen_irq_init(i32 %add) #12, !dbg !7550
  br label %for.inc, !dbg !7550

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !7551
  %inc = add i32 %6, 1, !dbg !7551
  store i32 %inc, i32* %i, align 4, !dbg !7551
  br label %for.cond, !dbg !7552, !llvm.loop !7553

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !7555

if.end:                                           ; preds = %for.end, %entry
  %7 = load i32, i32* %irq, align 4, !dbg !7556
  ret i32 %7, !dbg !7557
}

; Function Attrs: noredzone
declare dso_local i32 @irq_set_msi_desc(i32, %struct.msi_desc*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_destroy_irq(i32 %irq) #0 !dbg !7558 {
entry:
  %irq.addr = alloca i32, align 4
  %unmap_irq = alloca %struct.physdev_unmap_pirq, align 4
  %info = alloca %struct.irq_info*, align 8
  %rc = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7559, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.declare(metadata %struct.physdev_unmap_pirq* %unmap_irq, metadata !7561, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !7567, metadata !DIExpression()), !dbg !7568
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7569
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !7570
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !7568
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7571, metadata !DIExpression()), !dbg !7572
  store i32 -2, i32* %rc, align 4, !dbg !7572
  call void @mutex_lock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7573
  %1 = load i32, i32* @xen_domain_type, align 4, !dbg !7574
  %cmp = icmp ne i32 %1, 0, !dbg !7574
  br i1 %cmp, label %land.lhs.true, label %if.end36, !dbg !7574

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @xen_start_flags, align 4, !dbg !7574
  %and = and i32 %2, 2, !dbg !7574
  %tobool = icmp ne i32 %and, 0, !dbg !7574
  br i1 %tobool, label %land.lhs.true1, label %if.end36, !dbg !7576

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7577
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %3, i32 0, i32 11, !dbg !7578
  %pirq = bitcast %union.anon.0* %u to %struct.anon*, !dbg !7579
  %flags = getelementptr inbounds %struct.anon, %struct.anon* %pirq, i32 0, i32 3, !dbg !7580
  %4 = load i8, i8* %flags, align 1, !dbg !7580
  %conv = zext i8 %4 to i32, !dbg !7577
  %and2 = and i32 %conv, 4, !dbg !7581
  %tobool3 = icmp ne i32 %and2, 0, !dbg !7581
  br i1 %tobool3, label %if.end36, label %if.then, !dbg !7582

if.then:                                          ; preds = %land.lhs.true1
  %5 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7583
  %u4 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %5, i32 0, i32 11, !dbg !7585
  %pirq5 = bitcast %union.anon.0* %u4 to %struct.anon*, !dbg !7586
  %pirq6 = getelementptr inbounds %struct.anon, %struct.anon* %pirq5, i32 0, i32 0, !dbg !7587
  %6 = load i16, i16* %pirq6, align 8, !dbg !7587
  %conv7 = zext i16 %6 to i32, !dbg !7583
  %pirq8 = getelementptr inbounds %struct.physdev_unmap_pirq, %struct.physdev_unmap_pirq* %unmap_irq, i32 0, i32 1, !dbg !7588
  store i32 %conv7, i32* %pirq8, align 4, !dbg !7589
  %7 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7590
  %u9 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %7, i32 0, i32 11, !dbg !7591
  %pirq10 = bitcast %union.anon.0* %u9 to %struct.anon*, !dbg !7592
  %domid = getelementptr inbounds %struct.anon, %struct.anon* %pirq10, i32 0, i32 4, !dbg !7593
  %8 = load i16, i16* %domid, align 2, !dbg !7593
  %domid11 = getelementptr inbounds %struct.physdev_unmap_pirq, %struct.physdev_unmap_pirq* %unmap_irq, i32 0, i32 0, !dbg !7594
  store i16 %8, i16* %domid11, align 4, !dbg !7595
  %9 = bitcast %struct.physdev_unmap_pirq* %unmap_irq to i8*, !dbg !7596
  %call12 = call i32 @HYPERVISOR_physdev_op(i32 14, i8* %9) #12, !dbg !7597
  store i32 %call12, i32* %rc, align 4, !dbg !7598
  %10 = load i32, i32* %rc, align 4, !dbg !7599
  %cmp13 = icmp eq i32 %10, -3, !dbg !7601
  br i1 %cmp13, label %land.lhs.true15, label %if.else, !dbg !7602

land.lhs.true15:                                  ; preds = %if.then
  %11 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7603
  %u16 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %11, i32 0, i32 11, !dbg !7604
  %pirq17 = bitcast %union.anon.0* %u16 to %struct.anon*, !dbg !7605
  %domid18 = getelementptr inbounds %struct.anon, %struct.anon* %pirq17, i32 0, i32 4, !dbg !7606
  %12 = load i16, i16* %domid18, align 2, !dbg !7606
  %conv19 = zext i16 %12 to i32, !dbg !7603
  %cmp20 = icmp ne i32 %conv19, 32752, !dbg !7607
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !7608

if.then22:                                        ; preds = %land.lhs.true15
  %13 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7609
  %u23 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %13, i32 0, i32 11, !dbg !7609
  %pirq24 = bitcast %union.anon.0* %u23 to %struct.anon*, !dbg !7609
  %domid25 = getelementptr inbounds %struct.anon, %struct.anon* %pirq24, i32 0, i32 4, !dbg !7609
  %14 = load i16, i16* %domid25, align 2, !dbg !7609
  %conv26 = zext i16 %14 to i32, !dbg !7609
  %15 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7609
  %u27 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %15, i32 0, i32 11, !dbg !7609
  %pirq28 = bitcast %union.anon.0* %u27 to %struct.anon*, !dbg !7609
  %pirq29 = getelementptr inbounds %struct.anon, %struct.anon* %pirq28, i32 0, i32 0, !dbg !7609
  %16 = load i16, i16* %pirq29, align 8, !dbg !7609
  %conv30 = zext i16 %16 to i32, !dbg !7609
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i32 %conv26, i32 %conv30) #13, !dbg !7609
  br label %if.end35, !dbg !7609

if.else:                                          ; preds = %land.lhs.true15, %if.then
  %17 = load i32, i32* %rc, align 4, !dbg !7610
  %tobool32 = icmp ne i32 %17, 0, !dbg !7610
  br i1 %tobool32, label %if.then33, label %if.end, !dbg !7612

if.then33:                                        ; preds = %if.else
  %18 = load i32, i32* %rc, align 4, !dbg !7613
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0), i32 %18) #13, !dbg !7613
  br label %out, !dbg !7615

if.end:                                           ; preds = %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then22
  br label %if.end36, !dbg !7616

if.end36:                                         ; preds = %if.end35, %land.lhs.true1, %land.lhs.true, %entry
  %19 = load i32, i32* %irq.addr, align 4, !dbg !7617
  call void @xen_free_irq(i32 %19) #12, !dbg !7618
  br label %out, !dbg !7618

out:                                              ; preds = %if.end36, %if.then33
  call void @llvm.dbg.label(metadata !7619), !dbg !7620
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7621
  %20 = load i32, i32* %rc, align 4, !dbg !7622
  ret i32 %20, !dbg !7623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_irq_from_pirq(i32 %pirq) #0 !dbg !7624 {
entry:
  %pirq.addr = alloca i32, align 4
  %irq = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.irq_info*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp13 = alloca %struct.irq_info*, align 8
  store i32 %pirq, i32* %pirq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pirq.addr, metadata !7625, metadata !DIExpression()), !dbg !7626
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !7627, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !7629, metadata !DIExpression()), !dbg !7630
  call void @mutex_lock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7631
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7632, metadata !DIExpression()), !dbg !7635
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @xen_irq_list_head, i32 0, i32 0), align 8, !dbg !7635
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !7635
  store i8* %1, i8** %__mptr, align 8, !dbg !7635
  br label %do.body, !dbg !7635

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7636

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7635
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7635
  %3 = bitcast i8* %add.ptr to %struct.irq_info*, !dbg !7635
  store %struct.irq_info* %3, %struct.irq_info** %tmp, align 8, !dbg !7636
  %4 = load %struct.irq_info*, %struct.irq_info** %tmp, align 8, !dbg !7635
  store %struct.irq_info* %4, %struct.irq_info** %info, align 8, !dbg !7638
  br label %for.cond, !dbg !7638

for.cond:                                         ; preds = %do.end12, %do.end
  %5 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7639
  %list = getelementptr inbounds %struct.irq_info, %struct.irq_info* %5, i32 0, i32 0, !dbg !7639
  %cmp = icmp eq %struct.list_head* %list, @xen_irq_list_head, !dbg !7639
  %lnot = xor i1 %cmp, true, !dbg !7639
  br i1 %lnot, label %for.body, label %for.end, !dbg !7638

for.body:                                         ; preds = %for.cond
  %6 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7641
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %6, i32 0, i32 4, !dbg !7644
  %7 = load i32, i32* %type, align 4, !dbg !7644
  %cmp1 = icmp ne i32 %7, 1, !dbg !7645
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7646

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !7647

if.end:                                           ; preds = %for.body
  %8 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7648
  %irq2 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %8, i32 0, i32 5, !dbg !7649
  %9 = load i32, i32* %irq2, align 8, !dbg !7649
  store i32 %9, i32* %irq, align 4, !dbg !7650
  %10 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7651
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %10, i32 0, i32 11, !dbg !7653
  %pirq3 = bitcast %union.anon.0* %u to %struct.anon*, !dbg !7654
  %pirq4 = getelementptr inbounds %struct.anon, %struct.anon* %pirq3, i32 0, i32 0, !dbg !7655
  %11 = load i16, i16* %pirq4, align 8, !dbg !7655
  %conv = zext i16 %11 to i32, !dbg !7651
  %12 = load i32, i32* %pirq.addr, align 4, !dbg !7656
  %cmp5 = icmp eq i32 %conv, %12, !dbg !7657
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !7658

if.then7:                                         ; preds = %if.end
  br label %out, !dbg !7659

if.end8:                                          ; preds = %if.end
  br label %for.inc, !dbg !7660

for.inc:                                          ; preds = %if.end8, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !7661, metadata !DIExpression()), !dbg !7663
  %13 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7663
  %list10 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %13, i32 0, i32 0, !dbg !7663
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list10, i32 0, i32 0, !dbg !7663
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7663
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !7663
  store i8* %15, i8** %__mptr9, align 8, !dbg !7663
  br label %do.body11, !dbg !7663

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !7664

do.end12:                                         ; preds = %do.body11
  %16 = load i8*, i8** %__mptr9, align 8, !dbg !7663
  %add.ptr14 = getelementptr i8, i8* %16, i64 0, !dbg !7663
  %17 = bitcast i8* %add.ptr14 to %struct.irq_info*, !dbg !7663
  store %struct.irq_info* %17, %struct.irq_info** %tmp13, align 8, !dbg !7664
  %18 = load %struct.irq_info*, %struct.irq_info** %tmp13, align 8, !dbg !7663
  store %struct.irq_info* %18, %struct.irq_info** %info, align 8, !dbg !7639
  br label %for.cond, !dbg !7639, !llvm.loop !7666

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %irq, align 4, !dbg !7668
  br label %out, !dbg !7669

out:                                              ; preds = %for.end, %if.then7
  call void @llvm.dbg.label(metadata !7670), !dbg !7671
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7672
  %19 = load i32, i32* %irq, align 4, !dbg !7673
  ret i32 %19, !dbg !7674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_pirq_from_irq(i32 %irq) #0 !dbg !7675 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7678
  %call = call i32 @pirq_from_irq(i32 %0) #12, !dbg !7679
  ret i32 %call, !dbg !7680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pirq_from_irq(i32 %irq) #0 !dbg !7681 {
entry:
  %irq.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !7682, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !7684, metadata !DIExpression()), !dbg !7685
  %0 = load i32, i32* %irq.addr, align 4, !dbg !7686
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !7687
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !7685
  br label %do.body, !dbg !7688

do.body:                                          ; preds = %entry
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7689
  %cmp = icmp eq %struct.irq_info* %1, null, !dbg !7689
  %lnot = xor i1 %cmp, true, !dbg !7689
  %lnot1 = xor i1 %lnot, true, !dbg !7689
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7689
  %conv = sext i32 %lnot.ext to i64, !dbg !7689
  %tobool = icmp ne i64 %conv, 0, !dbg !7689
  br i1 %tobool, label %if.then, label %if.end, !dbg !7692

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !7689

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !7693

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !7695

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !7693

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 394, i32 0, i64 12) #6, !dbg !7697, !srcloc !7699
  br label %do.end5, !dbg !7697

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !7693

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 331) #6, !dbg !7700, !srcloc !7703
  unreachable, !dbg !7704

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !7693

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !7693

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !7692

do.end9:                                          ; preds = %if.end
  br label %do.body10, !dbg !7705

do.body10:                                        ; preds = %do.end9
  %2 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7706
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %2, i32 0, i32 4, !dbg !7706
  %3 = load i32, i32* %type, align 4, !dbg !7706
  %cmp11 = icmp ne i32 %3, 1, !dbg !7706
  %lnot13 = xor i1 %cmp11, true, !dbg !7706
  %lnot15 = xor i1 %lnot13, true, !dbg !7706
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !7706
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !7706
  %tobool18 = icmp ne i64 %conv17, 0, !dbg !7706
  br i1 %tobool18, label %if.then19, label %if.end28, !dbg !7709

if.then19:                                        ; preds = %do.body10
  br label %do.body20, !dbg !7706

do.body20:                                        ; preds = %if.then19
  br label %do.body21, !dbg !7710

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !7712

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !7710

do.body23:                                        ; preds = %do.end22
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 395, i32 0, i64 12) #6, !dbg !7714, !srcloc !7716
  br label %do.end24, !dbg !7714

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !7710

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 332) #6, !dbg !7717, !srcloc !7720
  unreachable, !dbg !7721

do.end26:                                         ; No predecessors!
  br label %do.end27, !dbg !7710

do.end27:                                         ; preds = %do.end26
  br label %if.end28, !dbg !7710

if.end28:                                         ; preds = %do.end27, %do.body10
  br label %do.end29, !dbg !7709

do.end29:                                         ; preds = %if.end28
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7722
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %4, i32 0, i32 11, !dbg !7723
  %pirq = bitcast %union.anon.0* %u to %struct.anon*, !dbg !7724
  %pirq30 = getelementptr inbounds %struct.anon, %struct.anon* %pirq, i32 0, i32 0, !dbg !7725
  %5 = load i16, i16* %pirq30, align 8, !dbg !7725
  %conv31 = zext i16 %5 to i32, !dbg !7722
  ret i32 %conv31, !dbg !7726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bind_evtchn_to_irq(i32 %evtchn) #0 !dbg !7727 {
entry:
  %evtchn.addr = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !7730
  %call = call i32 @bind_evtchn_to_irq_chip(i32 %0, %struct.irq_chip* @xen_dynamic_chip) #12, !dbg !7731
  ret i32 %call, !dbg !7732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bind_evtchn_to_irq_chip(i32 %evtchn, %struct.irq_chip* %chip) #0 !dbg !7733 {
entry:
  %retval = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %chip.addr = alloca %struct.irq_chip*, align 8
  %irq = alloca i32, align 4
  %ret = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !7736, metadata !DIExpression()), !dbg !7737
  store %struct.irq_chip* %chip, %struct.irq_chip** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %chip.addr, metadata !7738, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !7740, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7742, metadata !DIExpression()), !dbg !7743
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !7744
  %call = call i32 @xen_evtchn_max_channels() #12, !dbg !7746
  %cmp = icmp uge i32 %0, %call, !dbg !7747
  br i1 %cmp, label %if.then, label %if.end, !dbg !7748

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7749
  br label %return, !dbg !7749

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7750
  %1 = load i32, i32* %evtchn.addr, align 4, !dbg !7751
  %call1 = call i32 @get_evtchn_to_irq(i32 %1) #12, !dbg !7752
  store i32 %call1, i32* %irq, align 4, !dbg !7753
  %2 = load i32, i32* %irq, align 4, !dbg !7754
  %cmp2 = icmp eq i32 %2, -1, !dbg !7756
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !7757

if.then3:                                         ; preds = %if.end
  %call4 = call i32 @xen_allocate_irq_dynamic() #12, !dbg !7758
  store i32 %call4, i32* %irq, align 4, !dbg !7760
  %3 = load i32, i32* %irq, align 4, !dbg !7761
  %cmp5 = icmp slt i32 %3, 0, !dbg !7763
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7764

if.then6:                                         ; preds = %if.then3
  br label %out, !dbg !7765

if.end7:                                          ; preds = %if.then3
  %4 = load i32, i32* %irq, align 4, !dbg !7766
  %5 = load %struct.irq_chip*, %struct.irq_chip** %chip.addr, align 8, !dbg !7767
  call void @irq_set_chip_and_handler_name(i32 %4, %struct.irq_chip* %5, void (%struct.irq_desc*)* @handle_edge_irq, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #12, !dbg !7768
  %6 = load i32, i32* %irq, align 4, !dbg !7769
  %7 = load i32, i32* %evtchn.addr, align 4, !dbg !7770
  %call8 = call i32 @xen_irq_info_evtchn_setup(i32 %6, i32 %7) #12, !dbg !7771
  store i32 %call8, i32* %ret, align 4, !dbg !7772
  %8 = load i32, i32* %ret, align 4, !dbg !7773
  %cmp9 = icmp slt i32 %8, 0, !dbg !7775
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7776

if.then10:                                        ; preds = %if.end7
  %9 = load i32, i32* %irq, align 4, !dbg !7777
  call void @__unbind_from_irq(i32 %9) #12, !dbg !7779
  %10 = load i32, i32* %ret, align 4, !dbg !7780
  store i32 %10, i32* %irq, align 4, !dbg !7781
  br label %out, !dbg !7782

if.end11:                                         ; preds = %if.end7
  %11 = load i32, i32* %evtchn.addr, align 4, !dbg !7783
  call void @bind_evtchn_to_cpu(i32 %11, i32 0) #12, !dbg !7784
  br label %if.end35, !dbg !7785

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !7786, metadata !DIExpression()), !dbg !7788
  %12 = load i32, i32* %irq, align 4, !dbg !7789
  %call12 = call %struct.irq_info* @info_for_irq(i32 %12) #12, !dbg !7790
  store %struct.irq_info* %call12, %struct.irq_info** %info, align 8, !dbg !7788
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7791, metadata !DIExpression()), !dbg !7793
  %13 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7793
  %cmp13 = icmp eq %struct.irq_info* %13, null, !dbg !7793
  br i1 %cmp13, label %lor.end, label %lor.rhs, !dbg !7793

lor.rhs:                                          ; preds = %if.else
  %14 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7793
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %14, i32 0, i32 4, !dbg !7793
  %15 = load i32, i32* %type, align 4, !dbg !7793
  %cmp14 = icmp ne i32 %15, 4, !dbg !7793
  br label %lor.end, !dbg !7793

lor.end:                                          ; preds = %lor.rhs, %if.else
  %16 = phi i1 [ true, %if.else ], [ %cmp14, %lor.rhs ]
  %lnot = xor i1 %16, true, !dbg !7793
  %lnot15 = xor i1 %lnot, true, !dbg !7793
  %lnot.ext = zext i1 %lnot15 to i32, !dbg !7793
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7793
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !7794
  %tobool = icmp ne i32 %17, 0, !dbg !7794
  %lnot16 = xor i1 %tobool, true, !dbg !7794
  %lnot18 = xor i1 %lnot16, true, !dbg !7794
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7794
  %conv = sext i32 %lnot.ext19 to i64, !dbg !7794
  %tobool20 = icmp ne i64 %conv, 0, !dbg !7794
  br i1 %tobool20, label %if.then21, label %if.end28, !dbg !7793

if.then21:                                        ; preds = %lor.end
  br label %do.body, !dbg !7794

do.body:                                          ; preds = %if.then21
  br label %do.body22, !dbg !7796

do.body22:                                        ; preds = %do.body
  br label %do.end, !dbg !7798

do.end:                                           ; preds = %do.body22
  br label %do.body23, !dbg !7796

do.body23:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1120, i32 2305, i64 12) #6, !dbg !7800, !srcloc !7802
  br label %do.end24, !dbg !7800

do.end24:                                         ; preds = %do.body23
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 352) #6, !dbg !7803, !srcloc !7805
  br label %do.body25, !dbg !7796

do.body25:                                        ; preds = %do.end24
  br label %do.end26, !dbg !7806

do.end26:                                         ; preds = %do.body25
  br label %do.end27, !dbg !7796

do.end27:                                         ; preds = %do.end26
  br label %if.end28, !dbg !7796

if.end28:                                         ; preds = %do.end27, %lor.end
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !7793
  %tobool29 = icmp ne i32 %18, 0, !dbg !7793
  %lnot30 = xor i1 %tobool29, true, !dbg !7793
  %lnot32 = xor i1 %lnot30, true, !dbg !7793
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !7793
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !7793
  store i64 %conv34, i64* %tmp, align 8, !dbg !7794
  %19 = load i64, i64* %tmp, align 8, !dbg !7793
  br label %if.end35

if.end35:                                         ; preds = %if.end28, %if.end11
  br label %out, !dbg !7808

out:                                              ; preds = %if.end35, %if.then10, %if.then6
  call void @llvm.dbg.label(metadata !7809), !dbg !7810
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7811
  %20 = load i32, i32* %irq, align 4, !dbg !7812
  store i32 %20, i32* %retval, align 4, !dbg !7813
  br label %return, !dbg !7813

return:                                           ; preds = %out, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !7814
  ret i32 %21, !dbg !7814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bind_evtchn_to_irq_lateeoi(i32 %evtchn) #0 !dbg !7815 {
entry:
  %evtchn.addr = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !7816, metadata !DIExpression()), !dbg !7817
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !7818
  %call = call i32 @bind_evtchn_to_irq_chip(i32 %0, %struct.irq_chip* @xen_lateeoi_chip) #12, !dbg !7819
  ret i32 %call, !dbg !7820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bind_interdomain_evtchn_to_irq_lateeoi(i32 %remote_domain, i32 %remote_port) #0 !dbg !7821 {
entry:
  %remote_domain.addr = alloca i32, align 4
  %remote_port.addr = alloca i32, align 4
  store i32 %remote_domain, i32* %remote_domain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %remote_domain.addr, metadata !7824, metadata !DIExpression()), !dbg !7825
  store i32 %remote_port, i32* %remote_port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %remote_port.addr, metadata !7826, metadata !DIExpression()), !dbg !7827
  %0 = load i32, i32* %remote_domain.addr, align 4, !dbg !7828
  %1 = load i32, i32* %remote_port.addr, align 4, !dbg !7829
  %call = call i32 @bind_interdomain_evtchn_to_irq_chip(i32 %0, i32 %1, %struct.irq_chip* @xen_lateeoi_chip) #12, !dbg !7830
  ret i32 %call, !dbg !7831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bind_interdomain_evtchn_to_irq_chip(i32 %remote_domain, i32 %remote_port, %struct.irq_chip* %chip) #0 !dbg !7832 {
entry:
  %remote_domain.addr = alloca i32, align 4
  %remote_port.addr = alloca i32, align 4
  %chip.addr = alloca %struct.irq_chip*, align 8
  %bind_interdomain = alloca %struct.evtchn_bind_interdomain, align 4
  %err = alloca i32, align 4
  store i32 %remote_domain, i32* %remote_domain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %remote_domain.addr, metadata !7835, metadata !DIExpression()), !dbg !7836
  store i32 %remote_port, i32* %remote_port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %remote_port.addr, metadata !7837, metadata !DIExpression()), !dbg !7838
  store %struct.irq_chip* %chip, %struct.irq_chip** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %chip.addr, metadata !7839, metadata !DIExpression()), !dbg !7840
  call void @llvm.dbg.declare(metadata %struct.evtchn_bind_interdomain* %bind_interdomain, metadata !7841, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7848, metadata !DIExpression()), !dbg !7849
  %0 = load i32, i32* %remote_domain.addr, align 4, !dbg !7850
  %conv = trunc i32 %0 to i16, !dbg !7850
  %remote_dom = getelementptr inbounds %struct.evtchn_bind_interdomain, %struct.evtchn_bind_interdomain* %bind_interdomain, i32 0, i32 0, !dbg !7851
  store i16 %conv, i16* %remote_dom, align 4, !dbg !7852
  %1 = load i32, i32* %remote_port.addr, align 4, !dbg !7853
  %remote_port1 = getelementptr inbounds %struct.evtchn_bind_interdomain, %struct.evtchn_bind_interdomain* %bind_interdomain, i32 0, i32 1, !dbg !7854
  store i32 %1, i32* %remote_port1, align 4, !dbg !7855
  %2 = bitcast %struct.evtchn_bind_interdomain* %bind_interdomain to i8*, !dbg !7856
  %call = call i32 @HYPERVISOR_event_channel_op(i32 0, i8* %2) #12, !dbg !7857
  store i32 %call, i32* %err, align 4, !dbg !7858
  %3 = load i32, i32* %err, align 4, !dbg !7859
  %tobool = icmp ne i32 %3, 0, !dbg !7859
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7859

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7859

cond.false:                                       ; preds = %entry
  %local_port = getelementptr inbounds %struct.evtchn_bind_interdomain, %struct.evtchn_bind_interdomain* %bind_interdomain, i32 0, i32 2, !dbg !7860
  %4 = load i32, i32* %local_port, align 4, !dbg !7860
  %5 = load %struct.irq_chip*, %struct.irq_chip** %chip.addr, align 8, !dbg !7861
  %call2 = call i32 @bind_evtchn_to_irq_chip(i32 %4, %struct.irq_chip* %5) #12, !dbg !7862
  br label %cond.end, !dbg !7859

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %call2, %cond.false ], !dbg !7859
  ret i32 %cond, !dbg !7863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_evtchn_nr_channels() #0 !dbg !7864 {
entry:
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !7865
  %nr_channels = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 1, !dbg !7866
  %1 = load i32 ()*, i32 ()** %nr_channels, align 8, !dbg !7866
  %call = call i32 %1() #12, !dbg !7865
  ret i32 %call, !dbg !7867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bind_virq_to_irq(i32 %virq, i32 %cpu, i1 zeroext %percpu) #0 !dbg !7868 {
entry:
  %virq.addr = alloca i32, align 4
  %cpu.addr = alloca i32, align 4
  %percpu.addr = alloca i8, align 1
  %bind_virq = alloca %struct.evtchn_bind_virq, align 4
  %evtchn = alloca i32, align 4
  %irq = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca [24 x i32]*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca [24 x i32]*, align 8
  %info = alloca %struct.irq_info*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp64 = alloca i64, align 8
  store i32 %virq, i32* %virq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %virq.addr, metadata !7871, metadata !DIExpression()), !dbg !7872
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !7873, metadata !DIExpression()), !dbg !7874
  %frombool = zext i1 %percpu to i8
  store i8 %frombool, i8* %percpu.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %percpu.addr, metadata !7875, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.declare(metadata %struct.evtchn_bind_virq* %bind_virq, metadata !7877, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !7884, metadata !DIExpression()), !dbg !7885
  store i32 0, i32* %evtchn, align 4, !dbg !7885
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7888, metadata !DIExpression()), !dbg !7889
  call void @mutex_lock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !7890
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !7891
  br label %do.body, !dbg !7893

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !7895, metadata !DIExpression()), !dbg !7897
  store i8* null, i8** %__vpp_verify, align 8, !dbg !7897
  %1 = load i8*, i8** %__vpp_verify, align 8, !dbg !7897
  br label %do.end, !dbg !7897

do.end:                                           ; preds = %do.body
  store [24 x i32]* @virq_to_irq, [24 x i32]** %tmp1, align 8, !dbg !7897
  %2 = load [24 x i32]*, [24 x i32]** %tmp1, align 8, !dbg !7893
  store [24 x i32]* %2, [24 x i32]** %tmp, align 8, !dbg !7891
  %3 = load [24 x i32]*, [24 x i32]** %tmp, align 8, !dbg !7891
  %4 = load i32, i32* %virq.addr, align 4, !dbg !7898
  %idxprom = zext i32 %4 to i64, !dbg !7899
  %arrayidx = getelementptr [24 x i32], [24 x i32]* %3, i64 0, i64 %idxprom, !dbg !7899
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7899
  store i32 %5, i32* %irq, align 4, !dbg !7900
  %6 = load i32, i32* %irq, align 4, !dbg !7901
  %cmp = icmp eq i32 %6, -1, !dbg !7903
  br i1 %cmp, label %if.then, label %if.else37, !dbg !7904

if.then:                                          ; preds = %do.end
  %call = call i32 @xen_allocate_irq_dynamic() #12, !dbg !7905
  store i32 %call, i32* %irq, align 4, !dbg !7907
  %7 = load i32, i32* %irq, align 4, !dbg !7908
  %cmp2 = icmp slt i32 %7, 0, !dbg !7910
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7911

if.then3:                                         ; preds = %if.then
  br label %out, !dbg !7912

if.end:                                           ; preds = %if.then
  %8 = load i8, i8* %percpu.addr, align 1, !dbg !7913
  %tobool = trunc i8 %8 to i1, !dbg !7913
  br i1 %tobool, label %if.then4, label %if.else, !dbg !7915

if.then4:                                         ; preds = %if.end
  %9 = load i32, i32* %irq, align 4, !dbg !7916
  call void @irq_set_chip_and_handler_name(i32 %9, %struct.irq_chip* @xen_percpu_chip, void (%struct.irq_desc*)* @handle_percpu_irq, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !7917
  br label %if.end5, !dbg !7917

if.else:                                          ; preds = %if.end
  %10 = load i32, i32* %irq, align 4, !dbg !7918
  call void @irq_set_chip_and_handler_name(i32 %10, %struct.irq_chip* @xen_dynamic_chip, void (%struct.irq_desc*)* @handle_edge_irq, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !7919
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %11 = load i32, i32* %virq.addr, align 4, !dbg !7920
  %virq6 = getelementptr inbounds %struct.evtchn_bind_virq, %struct.evtchn_bind_virq* %bind_virq, i32 0, i32 0, !dbg !7921
  store i32 %11, i32* %virq6, align 4, !dbg !7922
  %12 = load i32, i32* %cpu.addr, align 4, !dbg !7923
  %call7 = call i32 @xen_vcpu_nr(i32 %12) #12, !dbg !7924
  %vcpu = getelementptr inbounds %struct.evtchn_bind_virq, %struct.evtchn_bind_virq* %bind_virq, i32 0, i32 1, !dbg !7925
  store i32 %call7, i32* %vcpu, align 4, !dbg !7926
  %13 = bitcast %struct.evtchn_bind_virq* %bind_virq to i8*, !dbg !7927
  %call8 = call i32 @HYPERVISOR_event_channel_op(i32 1, i8* %13) #12, !dbg !7928
  store i32 %call8, i32* %ret, align 4, !dbg !7929
  %14 = load i32, i32* %ret, align 4, !dbg !7930
  %cmp9 = icmp eq i32 %14, 0, !dbg !7932
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !7933

if.then10:                                        ; preds = %if.end5
  %port = getelementptr inbounds %struct.evtchn_bind_virq, %struct.evtchn_bind_virq* %bind_virq, i32 0, i32 2, !dbg !7934
  %15 = load i32, i32* %port, align 4, !dbg !7934
  store i32 %15, i32* %evtchn, align 4, !dbg !7935
  br label %if.end31, !dbg !7936

if.else11:                                        ; preds = %if.end5
  %16 = load i32, i32* %ret, align 4, !dbg !7937
  %cmp12 = icmp eq i32 %16, -17, !dbg !7940
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !7941

if.then13:                                        ; preds = %if.else11
  %17 = load i32, i32* %virq.addr, align 4, !dbg !7942
  %18 = load i32, i32* %cpu.addr, align 4, !dbg !7943
  %call14 = call i32 @find_virq(i32 %17, i32 %18, i32* %evtchn) #12, !dbg !7944
  store i32 %call14, i32* %ret, align 4, !dbg !7945
  br label %if.end15, !dbg !7946

if.end15:                                         ; preds = %if.then13, %if.else11
  br label %do.body16, !dbg !7947

do.body16:                                        ; preds = %if.end15
  %19 = load i32, i32* %ret, align 4, !dbg !7948
  %cmp17 = icmp slt i32 %19, 0, !dbg !7948
  %lnot = xor i1 %cmp17, true, !dbg !7948
  %lnot18 = xor i1 %lnot, true, !dbg !7948
  %lnot.ext = zext i1 %lnot18 to i32, !dbg !7948
  %conv = sext i32 %lnot.ext to i64, !dbg !7948
  %tobool19 = icmp ne i64 %conv, 0, !dbg !7948
  br i1 %tobool19, label %if.then20, label %if.end29, !dbg !7951

if.then20:                                        ; preds = %do.body16
  br label %do.body21, !dbg !7948

do.body21:                                        ; preds = %if.then20
  br label %do.body22, !dbg !7952

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !7954

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !7952

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1274, i32 0, i64 12) #6, !dbg !7956, !srcloc !7958
  br label %do.end25, !dbg !7956

do.end25:                                         ; preds = %do.body24
  br label %do.body26, !dbg !7952

do.body26:                                        ; preds = %do.end25
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 355) #6, !dbg !7959, !srcloc !7962
  unreachable, !dbg !7963

do.end27:                                         ; No predecessors!
  br label %do.end28, !dbg !7952

do.end28:                                         ; preds = %do.end27
  br label %if.end29, !dbg !7952

if.end29:                                         ; preds = %do.end28, %do.body16
  br label %do.end30, !dbg !7951

do.end30:                                         ; preds = %if.end29
  br label %if.end31

if.end31:                                         ; preds = %do.end30, %if.then10
  %20 = load i32, i32* %cpu.addr, align 4, !dbg !7964
  %21 = load i32, i32* %irq, align 4, !dbg !7965
  %22 = load i32, i32* %evtchn, align 4, !dbg !7966
  %23 = load i32, i32* %virq.addr, align 4, !dbg !7967
  %call32 = call i32 @xen_irq_info_virq_setup(i32 %20, i32 %21, i32 %22, i32 %23) #12, !dbg !7968
  store i32 %call32, i32* %ret, align 4, !dbg !7969
  %24 = load i32, i32* %ret, align 4, !dbg !7970
  %cmp33 = icmp slt i32 %24, 0, !dbg !7972
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !7973

if.then35:                                        ; preds = %if.end31
  %25 = load i32, i32* %irq, align 4, !dbg !7974
  call void @__unbind_from_irq(i32 %25) #12, !dbg !7976
  %26 = load i32, i32* %ret, align 4, !dbg !7977
  store i32 %26, i32* %irq, align 4, !dbg !7978
  br label %out, !dbg !7979

if.end36:                                         ; preds = %if.end31
  %27 = load i32, i32* %evtchn, align 4, !dbg !7980
  %28 = load i32, i32* %cpu.addr, align 4, !dbg !7981
  call void @bind_evtchn_to_cpu(i32 %27, i32 %28) #12, !dbg !7982
  br label %if.end71, !dbg !7983

if.else37:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !7984, metadata !DIExpression()), !dbg !7986
  %29 = load i32, i32* %irq, align 4, !dbg !7987
  %call38 = call %struct.irq_info* @info_for_irq(i32 %29) #12, !dbg !7988
  store %struct.irq_info* %call38, %struct.irq_info** %info, align 8, !dbg !7986
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7989, metadata !DIExpression()), !dbg !7991
  %30 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7991
  %cmp39 = icmp eq %struct.irq_info* %30, null, !dbg !7991
  br i1 %cmp39, label %lor.end, label %lor.rhs, !dbg !7991

lor.rhs:                                          ; preds = %if.else37
  %31 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !7991
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %31, i32 0, i32 4, !dbg !7991
  %32 = load i32, i32* %type, align 4, !dbg !7991
  %cmp41 = icmp ne i32 %32, 2, !dbg !7991
  br label %lor.end, !dbg !7991

lor.end:                                          ; preds = %lor.rhs, %if.else37
  %33 = phi i1 [ true, %if.else37 ], [ %cmp41, %lor.rhs ]
  %lnot43 = xor i1 %33, true, !dbg !7991
  %lnot45 = xor i1 %lnot43, true, !dbg !7991
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !7991
  store i32 %lnot.ext46, i32* %__ret_warn_on, align 4, !dbg !7991
  %34 = load i32, i32* %__ret_warn_on, align 4, !dbg !7992
  %tobool47 = icmp ne i32 %34, 0, !dbg !7992
  %lnot48 = xor i1 %tobool47, true, !dbg !7992
  %lnot50 = xor i1 %lnot48, true, !dbg !7992
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !7992
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !7992
  %tobool53 = icmp ne i64 %conv52, 0, !dbg !7992
  br i1 %tobool53, label %if.then54, label %if.end63, !dbg !7991

if.then54:                                        ; preds = %lor.end
  br label %do.body55, !dbg !7992

do.body55:                                        ; preds = %if.then54
  br label %do.body56, !dbg !7994

do.body56:                                        ; preds = %do.body55
  br label %do.end57, !dbg !7996

do.end57:                                         ; preds = %do.body56
  br label %do.body58, !dbg !7994

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1287, i32 2305, i64 12) #6, !dbg !7998, !srcloc !8000
  br label %do.end59, !dbg !7998

do.end59:                                         ; preds = %do.body58
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 356) #6, !dbg !8001, !srcloc !8003
  br label %do.body60, !dbg !7994

do.body60:                                        ; preds = %do.end59
  br label %do.end61, !dbg !8004

do.end61:                                         ; preds = %do.body60
  br label %do.end62, !dbg !7994

do.end62:                                         ; preds = %do.end61
  br label %if.end63, !dbg !7994

if.end63:                                         ; preds = %do.end62, %lor.end
  %35 = load i32, i32* %__ret_warn_on, align 4, !dbg !7991
  %tobool65 = icmp ne i32 %35, 0, !dbg !7991
  %lnot66 = xor i1 %tobool65, true, !dbg !7991
  %lnot68 = xor i1 %lnot66, true, !dbg !7991
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !7991
  %conv70 = sext i32 %lnot.ext69 to i64, !dbg !7991
  store i64 %conv70, i64* %tmp64, align 8, !dbg !7992
  %36 = load i64, i64* %tmp64, align 8, !dbg !7991
  br label %if.end71

if.end71:                                         ; preds = %if.end63, %if.end36
  br label %out, !dbg !8006

out:                                              ; preds = %if.end71, %if.then35, %if.then3
  call void @llvm.dbg.label(metadata !8007), !dbg !8008
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !8009
  %37 = load i32, i32* %irq, align 4, !dbg !8010
  ret i32 %37, !dbg !8011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_allocate_irq_dynamic() #0 !dbg !8012 {
entry:
  %call = call i32 @xen_allocate_irqs_dynamic(i32 1) #12, !dbg !8015
  ret i32 %call, !dbg !8016
}

; Function Attrs: noredzone
declare dso_local void @handle_percpu_irq(%struct.irq_desc*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_vcpu_nr(i32 %cpu) #0 !dbg !8017 {
entry:
  %cpu.addr = alloca i32, align 4
  %tmp = alloca i32*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca i32*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !8021, metadata !DIExpression()), !dbg !8022
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !8023
  br label %do.body, !dbg !8025

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !8027, metadata !DIExpression()), !dbg !8029
  store i8* null, i8** %__vpp_verify, align 8, !dbg !8029
  %1 = load i8*, i8** %__vpp_verify, align 8, !dbg !8029
  br label %do.end, !dbg !8029

do.end:                                           ; preds = %do.body
  store i32* @xen_vcpu_id, i32** %tmp1, align 8, !dbg !8029
  %2 = load i32*, i32** %tmp1, align 8, !dbg !8025
  store i32* %2, i32** %tmp, align 8, !dbg !8023
  %3 = load i32*, i32** %tmp, align 8, !dbg !8023
  %4 = load i32, i32* %3, align 4, !dbg !8030
  ret i32 %4, !dbg !8031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @HYPERVISOR_event_channel_op(i32 %cmd, i8* %arg) #0 !dbg !8032 {
entry:
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %__res = alloca i64, align 8
  %__arg1 = alloca i64, align 8
  %__arg2 = alloca i64, align 8
  %__arg3 = alloca i64, align 8
  %__arg4 = alloca i64, align 8
  %__arg5 = alloca i64, align 8
  %tmp = alloca i32, align 4
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !8033, metadata !DIExpression()), !dbg !8034
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8035, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.declare(metadata i64* %__res, metadata !8037, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.declare(metadata i64* %__arg1, metadata !8040, metadata !DIExpression()), !dbg !8039
  %0 = load i64, i64* %__arg1, align 8, !dbg !8039
  store i64 %0, i64* %__arg1, align 8, !dbg !8039
  call void @llvm.dbg.declare(metadata i64* %__arg2, metadata !8041, metadata !DIExpression()), !dbg !8039
  %1 = load i64, i64* %__arg2, align 8, !dbg !8039
  store i64 %1, i64* %__arg2, align 8, !dbg !8039
  call void @llvm.dbg.declare(metadata i64* %__arg3, metadata !8042, metadata !DIExpression()), !dbg !8039
  %2 = load i64, i64* %__arg3, align 8, !dbg !8039
  store i64 %2, i64* %__arg3, align 8, !dbg !8039
  call void @llvm.dbg.declare(metadata i64* %__arg4, metadata !8043, metadata !DIExpression()), !dbg !8039
  %3 = load i64, i64* %__arg4, align 8, !dbg !8039
  store i64 %3, i64* %__arg4, align 8, !dbg !8039
  call void @llvm.dbg.declare(metadata i64* %__arg5, metadata !8044, metadata !DIExpression()), !dbg !8039
  %4 = load i64, i64* %__arg5, align 8, !dbg !8039
  store i64 %4, i64* %__arg5, align 8, !dbg !8039
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !8039
  %conv = sext i32 %5 to i64, !dbg !8039
  store i64 %conv, i64* %__arg1, align 8, !dbg !8039
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !8039
  %7 = ptrtoint i8* %6 to i64, !dbg !8039
  store i64 %7, i64* %__arg2, align 8, !dbg !8039
  %8 = call i64 @llvm.read_register.i64(metadata !6565), !dbg !8039
  %9 = load i64, i64* %__arg1, align 8, !dbg !8039
  %10 = load i64, i64* %__arg2, align 8, !dbg !8039
  %11 = call { i64, i64, i64, i64 } asm sideeffect "call hypercall_page+${4:c}", "={rax},={rsp},={rdi},={rsi},i,1,2,3,~{memory},~{r8},~{r10},~{rdx},~{dirflag},~{fpsr},~{flags}"(i64 1024, i64 %8, i64 %9, i64 %10) #6, !dbg !8039, !srcloc !8045
  %asmresult = extractvalue { i64, i64, i64, i64 } %11, 0, !dbg !8039
  %asmresult1 = extractvalue { i64, i64, i64, i64 } %11, 1, !dbg !8039
  %asmresult2 = extractvalue { i64, i64, i64, i64 } %11, 2, !dbg !8039
  %asmresult3 = extractvalue { i64, i64, i64, i64 } %11, 3, !dbg !8039
  store i64 %asmresult, i64* %__res, align 8, !dbg !8039
  call void @llvm.write_register.i64(metadata !6565, i64 %asmresult1), !dbg !8039
  store i64 %asmresult2, i64* %__arg1, align 8, !dbg !8039
  store i64 %asmresult3, i64* %__arg2, align 8, !dbg !8039
  %12 = load i64, i64* %__res, align 8, !dbg !8039
  %conv4 = trunc i64 %12 to i32, !dbg !8039
  store i32 %conv4, i32* %tmp, align 4, !dbg !8039
  %13 = load i32, i32* %tmp, align 4, !dbg !8039
  ret i32 %13, !dbg !8046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @find_virq(i32 %virq, i32 %cpu, i32* %evtchn) #0 !dbg !8047 {
entry:
  %virq.addr = alloca i32, align 4
  %cpu.addr = alloca i32, align 4
  %evtchn.addr = alloca i32*, align 8
  %status = alloca %struct.evtchn_status, align 4
  %port = alloca i32, align 4
  %rc = alloca i32, align 4
  store i32 %virq, i32* %virq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %virq.addr, metadata !8051, metadata !DIExpression()), !dbg !8052
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !8053, metadata !DIExpression()), !dbg !8054
  store i32* %evtchn, i32** %evtchn.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %evtchn.addr, metadata !8055, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.declare(metadata %struct.evtchn_status* %status, metadata !8057, metadata !DIExpression()), !dbg !8078
  call void @llvm.dbg.declare(metadata i32* %port, metadata !8079, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8081, metadata !DIExpression()), !dbg !8082
  store i32 -2, i32* %rc, align 4, !dbg !8082
  %0 = bitcast %struct.evtchn_status* %status to i8*, !dbg !8083
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 24, i1 false), !dbg !8083
  store i32 0, i32* %port, align 4, !dbg !8084
  br label %for.cond, !dbg !8086

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %port, align 4, !dbg !8087
  %call = call i32 @xen_evtchn_max_channels() #12, !dbg !8089
  %cmp = icmp ult i32 %1, %call, !dbg !8090
  br i1 %cmp, label %for.body, label %for.end, !dbg !8091

for.body:                                         ; preds = %for.cond
  %dom = getelementptr inbounds %struct.evtchn_status, %struct.evtchn_status* %status, i32 0, i32 0, !dbg !8092
  store i16 32752, i16* %dom, align 4, !dbg !8094
  %2 = load i32, i32* %port, align 4, !dbg !8095
  %port1 = getelementptr inbounds %struct.evtchn_status, %struct.evtchn_status* %status, i32 0, i32 1, !dbg !8096
  store i32 %2, i32* %port1, align 4, !dbg !8097
  %3 = bitcast %struct.evtchn_status* %status to i8*, !dbg !8098
  %call2 = call i32 @HYPERVISOR_event_channel_op(i32 5, i8* %3) #12, !dbg !8099
  store i32 %call2, i32* %rc, align 4, !dbg !8100
  %4 = load i32, i32* %rc, align 4, !dbg !8101
  %cmp3 = icmp slt i32 %4, 0, !dbg !8103
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8104

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !8105

if.end:                                           ; preds = %for.body
  %status4 = getelementptr inbounds %struct.evtchn_status, %struct.evtchn_status* %status, i32 0, i32 2, !dbg !8106
  %5 = load i32, i32* %status4, align 4, !dbg !8106
  %cmp5 = icmp ne i32 %5, 4, !dbg !8108
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !8109

if.then6:                                         ; preds = %if.end
  br label %for.inc, !dbg !8110

if.end7:                                          ; preds = %if.end
  %u = getelementptr inbounds %struct.evtchn_status, %struct.evtchn_status* %status, i32 0, i32 4, !dbg !8111
  %virq8 = bitcast %union.anon.108* %u to i32*, !dbg !8113
  %6 = load i32, i32* %virq8, align 4, !dbg !8113
  %7 = load i32, i32* %virq.addr, align 4, !dbg !8114
  %cmp9 = icmp eq i32 %6, %7, !dbg !8115
  br i1 %cmp9, label %land.lhs.true, label %if.end13, !dbg !8116

land.lhs.true:                                    ; preds = %if.end7
  %vcpu = getelementptr inbounds %struct.evtchn_status, %struct.evtchn_status* %status, i32 0, i32 3, !dbg !8117
  %8 = load i32, i32* %vcpu, align 4, !dbg !8117
  %9 = load i32, i32* %cpu.addr, align 4, !dbg !8118
  %call10 = call i32 @xen_vcpu_nr(i32 %9) #12, !dbg !8119
  %cmp11 = icmp eq i32 %8, %call10, !dbg !8120
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8121

if.then12:                                        ; preds = %land.lhs.true
  %10 = load i32, i32* %port, align 4, !dbg !8122
  %11 = load i32*, i32** %evtchn.addr, align 8, !dbg !8124
  store i32 %10, i32* %11, align 4, !dbg !8125
  br label %for.end, !dbg !8126

if.end13:                                         ; preds = %land.lhs.true, %if.end7
  br label %for.inc, !dbg !8127

for.inc:                                          ; preds = %if.end13, %if.then6, %if.then
  %12 = load i32, i32* %port, align 4, !dbg !8128
  %inc = add i32 %12, 1, !dbg !8128
  store i32 %inc, i32* %port, align 4, !dbg !8128
  br label %for.cond, !dbg !8129, !llvm.loop !8130

for.end:                                          ; preds = %if.then12, %for.cond
  %13 = load i32, i32* %rc, align 4, !dbg !8132
  ret i32 %13, !dbg !8133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_irq_info_virq_setup(i32 %cpu, i32 %irq, i32 %evtchn, i32 %virq) #0 !dbg !8134 {
entry:
  %cpu.addr = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %virq.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %tmp = alloca [24 x i32]*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp2 = alloca [24 x i32]*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !8137, metadata !DIExpression()), !dbg !8138
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8139, metadata !DIExpression()), !dbg !8140
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !8141, metadata !DIExpression()), !dbg !8142
  store i32 %virq, i32* %virq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %virq.addr, metadata !8143, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !8145, metadata !DIExpression()), !dbg !8146
  %0 = load i32, i32* %irq.addr, align 4, !dbg !8147
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !8148
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !8146
  %1 = load i32, i32* %virq.addr, align 4, !dbg !8149
  %conv = trunc i32 %1 to i16, !dbg !8149
  %2 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8150
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %2, i32 0, i32 11, !dbg !8151
  %virq1 = bitcast %union.anon.0* %u to i16*, !dbg !8152
  store i16 %conv, i16* %virq1, align 8, !dbg !8153
  %3 = load i32, i32* %irq.addr, align 4, !dbg !8154
  %4 = load i32, i32* %cpu.addr, align 4, !dbg !8155
  br label %do.body, !dbg !8157

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !8159, metadata !DIExpression()), !dbg !8161
  store i8* null, i8** %__vpp_verify, align 8, !dbg !8161
  %5 = load i8*, i8** %__vpp_verify, align 8, !dbg !8161
  br label %do.end, !dbg !8161

do.end:                                           ; preds = %do.body
  store [24 x i32]* @virq_to_irq, [24 x i32]** %tmp2, align 8, !dbg !8161
  %6 = load [24 x i32]*, [24 x i32]** %tmp2, align 8, !dbg !8157
  store [24 x i32]* %6, [24 x i32]** %tmp, align 8, !dbg !8155
  %7 = load [24 x i32]*, [24 x i32]** %tmp, align 8, !dbg !8155
  %8 = load i32, i32* %virq.addr, align 4, !dbg !8162
  %idxprom = zext i32 %8 to i64, !dbg !8163
  %arrayidx = getelementptr [24 x i32], [24 x i32]* %7, i64 0, i64 %idxprom, !dbg !8163
  store i32 %3, i32* %arrayidx, align 4, !dbg !8164
  %9 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8165
  %10 = load i32, i32* %irq.addr, align 4, !dbg !8166
  %11 = load i32, i32* %evtchn.addr, align 4, !dbg !8167
  %call3 = call i32 @xen_irq_info_common_setup(%struct.irq_info* %9, i32 %10, i32 2, i32 %11, i16 zeroext 0) #12, !dbg !8168
  ret i32 %call3, !dbg !8169
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bind_evtchn_to_cpu(i32 %evtchn, i32 %cpu) #0 !dbg !8170 {
entry:
  %evtchn.addr = alloca i32, align 4
  %cpu.addr = alloca i32, align 4
  %irq = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !8173, metadata !DIExpression()), !dbg !8174
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !8175, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8177, metadata !DIExpression()), !dbg !8178
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !8179
  %call = call i32 @get_evtchn_to_irq(i32 %0) #12, !dbg !8180
  store i32 %call, i32* %irq, align 4, !dbg !8178
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !8181, metadata !DIExpression()), !dbg !8182
  %1 = load i32, i32* %irq, align 4, !dbg !8183
  %call1 = call %struct.irq_info* @info_for_irq(i32 %1) #12, !dbg !8184
  store %struct.irq_info* %call1, %struct.irq_info** %info, align 8, !dbg !8182
  br label %do.body, !dbg !8185

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %irq, align 4, !dbg !8186
  %cmp = icmp eq i32 %2, -1, !dbg !8186
  %lnot = xor i1 %cmp, true, !dbg !8186
  %lnot2 = xor i1 %lnot, true, !dbg !8186
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8186
  %conv = sext i32 %lnot.ext to i64, !dbg !8186
  %tobool = icmp ne i64 %conv, 0, !dbg !8186
  br i1 %tobool, label %if.then, label %if.end, !dbg !8189

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !8186

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !8190

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !8192

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !8190

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 441, i32 0, i64 12) #6, !dbg !8194, !srcloc !8196
  br label %do.end6, !dbg !8194

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !8190

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 334) #6, !dbg !8197, !srcloc !8200
  unreachable, !dbg !8201

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !8190

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !8190

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !8189

do.end10:                                         ; preds = %if.end
  %3 = load i32, i32* %evtchn.addr, align 4, !dbg !8202
  %4 = load i32, i32* %cpu.addr, align 4, !dbg !8203
  %5 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8204
  %cpu11 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %5, i32 0, i32 7, !dbg !8205
  %6 = load i16, i16* %cpu11, align 8, !dbg !8205
  %conv12 = zext i16 %6 to i32, !dbg !8204
  call void @xen_evtchn_port_bind_to_cpu(i32 %3, i32 %4, i32 %conv12) #12, !dbg !8206
  %7 = load i32, i32* %cpu.addr, align 4, !dbg !8207
  %conv13 = trunc i32 %7 to i16, !dbg !8207
  %8 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8208
  %cpu14 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %8, i32 0, i32 7, !dbg !8209
  store i16 %conv13, i16* %cpu14, align 8, !dbg !8210
  ret void, !dbg !8211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bind_evtchn_to_irqhandler(i32 %evtchn, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #0 !dbg !8212 {
entry:
  %evtchn.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !8215, metadata !DIExpression()), !dbg !8216
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !8217, metadata !DIExpression()), !dbg !8218
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !8219, metadata !DIExpression()), !dbg !8220
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !8221, metadata !DIExpression()), !dbg !8222
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8223, metadata !DIExpression()), !dbg !8224
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !8225
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !8226
  %2 = load i64, i64* %irqflags.addr, align 8, !dbg !8227
  %3 = load i8*, i8** %devname.addr, align 8, !dbg !8228
  %4 = load i8*, i8** %dev_id.addr, align 8, !dbg !8229
  %call = call i32 @bind_evtchn_to_irqhandler_chip(i32 %0, i32 (i32, i8*)* %1, i64 %2, i8* %3, i8* %4, %struct.irq_chip* @xen_dynamic_chip) #12, !dbg !8230
  ret i32 %call, !dbg !8231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bind_evtchn_to_irqhandler_chip(i32 %evtchn, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id, %struct.irq_chip* %chip) #0 !dbg !8232 {
entry:
  %retval = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  %chip.addr = alloca %struct.irq_chip*, align 8
  %irq = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !8235, metadata !DIExpression()), !dbg !8236
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !8237, metadata !DIExpression()), !dbg !8238
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !8239, metadata !DIExpression()), !dbg !8240
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !8241, metadata !DIExpression()), !dbg !8242
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8243, metadata !DIExpression()), !dbg !8244
  store %struct.irq_chip* %chip, %struct.irq_chip** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %chip.addr, metadata !8245, metadata !DIExpression()), !dbg !8246
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8247, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8249, metadata !DIExpression()), !dbg !8250
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !8251
  %1 = load %struct.irq_chip*, %struct.irq_chip** %chip.addr, align 8, !dbg !8252
  %call = call i32 @bind_evtchn_to_irq_chip(i32 %0, %struct.irq_chip* %1) #12, !dbg !8253
  store i32 %call, i32* %irq, align 4, !dbg !8254
  %2 = load i32, i32* %irq, align 4, !dbg !8255
  %cmp = icmp slt i32 %2, 0, !dbg !8257
  br i1 %cmp, label %if.then, label %if.end, !dbg !8258

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %irq, align 4, !dbg !8259
  store i32 %3, i32* %retval, align 4, !dbg !8260
  br label %return, !dbg !8260

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %irq, align 4, !dbg !8261
  %5 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !8262
  %6 = load i64, i64* %irqflags.addr, align 8, !dbg !8263
  %7 = load i8*, i8** %devname.addr, align 8, !dbg !8264
  %8 = load i8*, i8** %dev_id.addr, align 8, !dbg !8265
  %call2 = call i32 @request_irq(i32 %4, i32 (i32, i8*)* %5, i64 %6, i8* %7, i8* %8) #12, !dbg !8266
  store i32 %call2, i32* %retval1, align 4, !dbg !8267
  %9 = load i32, i32* %retval1, align 4, !dbg !8268
  %cmp3 = icmp ne i32 %9, 0, !dbg !8270
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8271

if.then4:                                         ; preds = %if.end
  %10 = load i32, i32* %irq, align 4, !dbg !8272
  call void @unbind_from_irq(i32 %10) #12, !dbg !8274
  %11 = load i32, i32* %retval1, align 4, !dbg !8275
  store i32 %11, i32* %retval, align 4, !dbg !8276
  br label %return, !dbg !8276

if.end5:                                          ; preds = %if.end
  %12 = load i32, i32* %irq, align 4, !dbg !8277
  store i32 %12, i32* %retval, align 4, !dbg !8278
  br label %return, !dbg !8278

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8279
  ret i32 %13, !dbg !8279
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bind_evtchn_to_irqhandler_lateeoi(i32 %evtchn, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #0 !dbg !8280 {
entry:
  %evtchn.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8289, metadata !DIExpression()), !dbg !8290
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !8291
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !8292
  %2 = load i64, i64* %irqflags.addr, align 8, !dbg !8293
  %3 = load i8*, i8** %devname.addr, align 8, !dbg !8294
  %4 = load i8*, i8** %dev_id.addr, align 8, !dbg !8295
  %call = call i32 @bind_evtchn_to_irqhandler_chip(i32 %0, i32 (i32, i8*)* %1, i64 %2, i8* %3, i8* %4, %struct.irq_chip* @xen_lateeoi_chip) #12, !dbg !8296
  ret i32 %call, !dbg !8297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bind_interdomain_evtchn_to_irqhandler_lateeoi(i32 %remote_domain, i32 %remote_port, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #0 !dbg !8298 {
entry:
  %remote_domain.addr = alloca i32, align 4
  %remote_port.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  store i32 %remote_domain, i32* %remote_domain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %remote_domain.addr, metadata !8301, metadata !DIExpression()), !dbg !8302
  store i32 %remote_port, i32* %remote_port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %remote_port.addr, metadata !8303, metadata !DIExpression()), !dbg !8304
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !8305, metadata !DIExpression()), !dbg !8306
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !8307, metadata !DIExpression()), !dbg !8308
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !8309, metadata !DIExpression()), !dbg !8310
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8311, metadata !DIExpression()), !dbg !8312
  %0 = load i32, i32* %remote_domain.addr, align 4, !dbg !8313
  %1 = load i32, i32* %remote_port.addr, align 4, !dbg !8314
  %2 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !8315
  %3 = load i64, i64* %irqflags.addr, align 8, !dbg !8316
  %4 = load i8*, i8** %devname.addr, align 8, !dbg !8317
  %5 = load i8*, i8** %dev_id.addr, align 8, !dbg !8318
  %call = call i32 @bind_interdomain_evtchn_to_irqhandler_chip(i32 %0, i32 %1, i32 (i32, i8*)* %2, i64 %3, i8* %4, i8* %5, %struct.irq_chip* @xen_lateeoi_chip) #12, !dbg !8319
  ret i32 %call, !dbg !8320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bind_interdomain_evtchn_to_irqhandler_chip(i32 %remote_domain, i32 %remote_port, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id, %struct.irq_chip* %chip) #0 !dbg !8321 {
entry:
  %retval = alloca i32, align 4
  %remote_domain.addr = alloca i32, align 4
  %remote_port.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  %chip.addr = alloca %struct.irq_chip*, align 8
  %irq = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store i32 %remote_domain, i32* %remote_domain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %remote_domain.addr, metadata !8324, metadata !DIExpression()), !dbg !8325
  store i32 %remote_port, i32* %remote_port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %remote_port.addr, metadata !8326, metadata !DIExpression()), !dbg !8327
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !8328, metadata !DIExpression()), !dbg !8329
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !8330, metadata !DIExpression()), !dbg !8331
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !8332, metadata !DIExpression()), !dbg !8333
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8334, metadata !DIExpression()), !dbg !8335
  store %struct.irq_chip* %chip, %struct.irq_chip** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_chip** %chip.addr, metadata !8336, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8338, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8340, metadata !DIExpression()), !dbg !8341
  %0 = load i32, i32* %remote_domain.addr, align 4, !dbg !8342
  %1 = load i32, i32* %remote_port.addr, align 4, !dbg !8343
  %2 = load %struct.irq_chip*, %struct.irq_chip** %chip.addr, align 8, !dbg !8344
  %call = call i32 @bind_interdomain_evtchn_to_irq_chip(i32 %0, i32 %1, %struct.irq_chip* %2) #12, !dbg !8345
  store i32 %call, i32* %irq, align 4, !dbg !8346
  %3 = load i32, i32* %irq, align 4, !dbg !8347
  %cmp = icmp slt i32 %3, 0, !dbg !8349
  br i1 %cmp, label %if.then, label %if.end, !dbg !8350

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %irq, align 4, !dbg !8351
  store i32 %4, i32* %retval, align 4, !dbg !8352
  br label %return, !dbg !8352

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %irq, align 4, !dbg !8353
  %6 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !8354
  %7 = load i64, i64* %irqflags.addr, align 8, !dbg !8355
  %8 = load i8*, i8** %devname.addr, align 8, !dbg !8356
  %9 = load i8*, i8** %dev_id.addr, align 8, !dbg !8357
  %call2 = call i32 @request_irq(i32 %5, i32 (i32, i8*)* %6, i64 %7, i8* %8, i8* %9) #12, !dbg !8358
  store i32 %call2, i32* %retval1, align 4, !dbg !8359
  %10 = load i32, i32* %retval1, align 4, !dbg !8360
  %cmp3 = icmp ne i32 %10, 0, !dbg !8362
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8363

if.then4:                                         ; preds = %if.end
  %11 = load i32, i32* %irq, align 4, !dbg !8364
  call void @unbind_from_irq(i32 %11) #12, !dbg !8366
  %12 = load i32, i32* %retval1, align 4, !dbg !8367
  store i32 %12, i32* %retval, align 4, !dbg !8368
  br label %return, !dbg !8368

if.end5:                                          ; preds = %if.end
  %13 = load i32, i32* %irq, align 4, !dbg !8369
  store i32 %13, i32* %retval, align 4, !dbg !8370
  br label %return, !dbg !8370

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8371
  ret i32 %14, !dbg !8371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bind_virq_to_irqhandler(i32 %virq, i32 %cpu, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #0 !dbg !8372 {
entry:
  %retval = alloca i32, align 4
  %virq.addr = alloca i32, align 4
  %cpu.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  %irq = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store i32 %virq, i32* %virq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %virq.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !8377, metadata !DIExpression()), !dbg !8378
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !8379, metadata !DIExpression()), !dbg !8380
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !8381, metadata !DIExpression()), !dbg !8382
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !8383, metadata !DIExpression()), !dbg !8384
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8385, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8387, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8389, metadata !DIExpression()), !dbg !8390
  %0 = load i32, i32* %virq.addr, align 4, !dbg !8391
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !8392
  %2 = load i64, i64* %irqflags.addr, align 8, !dbg !8393
  %and = and i64 %2, 1024, !dbg !8394
  %tobool = icmp ne i64 %and, 0, !dbg !8393
  %call = call i32 @bind_virq_to_irq(i32 %0, i32 %1, i1 zeroext %tobool) #12, !dbg !8395
  store i32 %call, i32* %irq, align 4, !dbg !8396
  %3 = load i32, i32* %irq, align 4, !dbg !8397
  %cmp = icmp slt i32 %3, 0, !dbg !8399
  br i1 %cmp, label %if.then, label %if.end, !dbg !8400

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %irq, align 4, !dbg !8401
  store i32 %4, i32* %retval, align 4, !dbg !8402
  br label %return, !dbg !8402

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %irq, align 4, !dbg !8403
  %6 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !8404
  %7 = load i64, i64* %irqflags.addr, align 8, !dbg !8405
  %8 = load i8*, i8** %devname.addr, align 8, !dbg !8406
  %9 = load i8*, i8** %dev_id.addr, align 8, !dbg !8407
  %call2 = call i32 @request_irq(i32 %5, i32 (i32, i8*)* %6, i64 %7, i8* %8, i8* %9) #12, !dbg !8408
  store i32 %call2, i32* %retval1, align 4, !dbg !8409
  %10 = load i32, i32* %retval1, align 4, !dbg !8410
  %cmp3 = icmp ne i32 %10, 0, !dbg !8412
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8413

if.then4:                                         ; preds = %if.end
  %11 = load i32, i32* %irq, align 4, !dbg !8414
  call void @unbind_from_irq(i32 %11) #12, !dbg !8416
  %12 = load i32, i32* %retval1, align 4, !dbg !8417
  store i32 %12, i32* %retval, align 4, !dbg !8418
  br label %return, !dbg !8418

if.end5:                                          ; preds = %if.end
  %13 = load i32, i32* %irq, align 4, !dbg !8419
  store i32 %13, i32* %retval, align 4, !dbg !8420
  br label %return, !dbg !8420

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8421
  ret i32 %14, !dbg !8421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !8422 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8425, metadata !DIExpression()), !dbg !8426
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !8427, metadata !DIExpression()), !dbg !8428
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !8429, metadata !DIExpression()), !dbg !8430
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8431, metadata !DIExpression()), !dbg !8432
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !8433, metadata !DIExpression()), !dbg !8434
  %0 = load i32, i32* %irq.addr, align 4, !dbg !8435
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !8436
  %2 = load i64, i64* %flags.addr, align 8, !dbg !8437
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8438
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !8439
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #12, !dbg !8440
  ret i32 %call, !dbg !8441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @unbind_from_irq(i32 %irq) #0 !dbg !8442 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8443, metadata !DIExpression()), !dbg !8444
  call void @mutex_lock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !8445
  %0 = load i32, i32* %irq.addr, align 4, !dbg !8446
  call void @__unbind_from_irq(i32 %0) #12, !dbg !8447
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !8448
  ret void, !dbg !8449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bind_ipi_to_irqhandler(i32 %ipi, i32 %cpu, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #0 !dbg !8450 {
entry:
  %retval = alloca i32, align 4
  %ipi.addr = alloca i32, align 4
  %cpu.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  %irq = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store i32 %ipi, i32* %ipi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ipi.addr, metadata !8453, metadata !DIExpression()), !dbg !8454
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !8455, metadata !DIExpression()), !dbg !8456
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !8457, metadata !DIExpression()), !dbg !8458
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !8459, metadata !DIExpression()), !dbg !8460
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !8461, metadata !DIExpression()), !dbg !8462
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8463, metadata !DIExpression()), !dbg !8464
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8465, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8467, metadata !DIExpression()), !dbg !8468
  %0 = load i32, i32* %ipi.addr, align 4, !dbg !8469
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !8470
  %call = call i32 @bind_ipi_to_irq(i32 %0, i32 %1) #12, !dbg !8471
  store i32 %call, i32* %irq, align 4, !dbg !8472
  %2 = load i32, i32* %irq, align 4, !dbg !8473
  %cmp = icmp slt i32 %2, 0, !dbg !8475
  br i1 %cmp, label %if.then, label %if.end, !dbg !8476

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %irq, align 4, !dbg !8477
  store i32 %3, i32* %retval, align 4, !dbg !8478
  br label %return, !dbg !8478

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %irqflags.addr, align 8, !dbg !8479
  %or = or i64 %4, 180224, !dbg !8479
  store i64 %or, i64* %irqflags.addr, align 8, !dbg !8479
  %5 = load i32, i32* %irq, align 4, !dbg !8480
  %6 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !8481
  %7 = load i64, i64* %irqflags.addr, align 8, !dbg !8482
  %8 = load i8*, i8** %devname.addr, align 8, !dbg !8483
  %9 = load i8*, i8** %dev_id.addr, align 8, !dbg !8484
  %call2 = call i32 @request_irq(i32 %5, i32 (i32, i8*)* %6, i64 %7, i8* %8, i8* %9) #12, !dbg !8485
  store i32 %call2, i32* %retval1, align 4, !dbg !8486
  %10 = load i32, i32* %retval1, align 4, !dbg !8487
  %cmp3 = icmp ne i32 %10, 0, !dbg !8489
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8490

if.then4:                                         ; preds = %if.end
  %11 = load i32, i32* %irq, align 4, !dbg !8491
  call void @unbind_from_irq(i32 %11) #12, !dbg !8493
  %12 = load i32, i32* %retval1, align 4, !dbg !8494
  store i32 %12, i32* %retval, align 4, !dbg !8495
  br label %return, !dbg !8495

if.end5:                                          ; preds = %if.end
  %13 = load i32, i32* %irq, align 4, !dbg !8496
  store i32 %13, i32* %retval, align 4, !dbg !8497
  br label %return, !dbg !8497

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8498
  ret i32 %14, !dbg !8498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bind_ipi_to_irq(i32 %ipi, i32 %cpu) #0 !dbg !8499 {
entry:
  %ipi.addr = alloca i32, align 4
  %cpu.addr = alloca i32, align 4
  %bind_ipi = alloca %struct.evtchn_bind_ipi, align 4
  %evtchn = alloca i32, align 4
  %ret = alloca i32, align 4
  %irq = alloca i32, align 4
  %tmp = alloca [6 x i32]*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca [6 x i32]*, align 8
  %info = alloca %struct.irq_info*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp40 = alloca i64, align 8
  store i32 %ipi, i32* %ipi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ipi.addr, metadata !8500, metadata !DIExpression()), !dbg !8501
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !8502, metadata !DIExpression()), !dbg !8503
  call void @llvm.dbg.declare(metadata %struct.evtchn_bind_ipi* %bind_ipi, metadata !8504, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !8510, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8512, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8514, metadata !DIExpression()), !dbg !8515
  call void @mutex_lock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !8516
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !8517
  br label %do.body, !dbg !8519

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !8521, metadata !DIExpression()), !dbg !8523
  store i8* null, i8** %__vpp_verify, align 8, !dbg !8523
  %1 = load i8*, i8** %__vpp_verify, align 8, !dbg !8523
  br label %do.end, !dbg !8523

do.end:                                           ; preds = %do.body
  store [6 x i32]* @ipi_to_irq, [6 x i32]** %tmp1, align 8, !dbg !8523
  %2 = load [6 x i32]*, [6 x i32]** %tmp1, align 8, !dbg !8519
  store [6 x i32]* %2, [6 x i32]** %tmp, align 8, !dbg !8517
  %3 = load [6 x i32]*, [6 x i32]** %tmp, align 8, !dbg !8517
  %4 = load i32, i32* %ipi.addr, align 4, !dbg !8524
  %idxprom = zext i32 %4 to i64, !dbg !8525
  %arrayidx = getelementptr [6 x i32], [6 x i32]* %3, i64 0, i64 %idxprom, !dbg !8525
  %5 = load i32, i32* %arrayidx, align 4, !dbg !8525
  store i32 %5, i32* %irq, align 4, !dbg !8526
  %6 = load i32, i32* %irq, align 4, !dbg !8527
  %cmp = icmp eq i32 %6, -1, !dbg !8529
  br i1 %cmp, label %if.then, label %if.else, !dbg !8530

if.then:                                          ; preds = %do.end
  %call = call i32 @xen_allocate_irq_dynamic() #12, !dbg !8531
  store i32 %call, i32* %irq, align 4, !dbg !8533
  %7 = load i32, i32* %irq, align 4, !dbg !8534
  %cmp2 = icmp slt i32 %7, 0, !dbg !8536
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !8537

if.then3:                                         ; preds = %if.then
  br label %out, !dbg !8538

if.end:                                           ; preds = %if.then
  %8 = load i32, i32* %irq, align 4, !dbg !8539
  call void @irq_set_chip_and_handler_name(i32 %8, %struct.irq_chip* @xen_percpu_chip, void (%struct.irq_desc*)* @handle_percpu_irq, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !8540
  %9 = load i32, i32* %cpu.addr, align 4, !dbg !8541
  %call4 = call i32 @xen_vcpu_nr(i32 %9) #12, !dbg !8542
  %vcpu = getelementptr inbounds %struct.evtchn_bind_ipi, %struct.evtchn_bind_ipi* %bind_ipi, i32 0, i32 0, !dbg !8543
  store i32 %call4, i32* %vcpu, align 4, !dbg !8544
  %10 = bitcast %struct.evtchn_bind_ipi* %bind_ipi to i8*, !dbg !8545
  %call5 = call i32 @HYPERVISOR_event_channel_op(i32 7, i8* %10) #12, !dbg !8547
  %cmp6 = icmp ne i32 %call5, 0, !dbg !8548
  br i1 %cmp6, label %if.then7, label %if.end16, !dbg !8549

if.then7:                                         ; preds = %if.end
  br label %do.body8, !dbg !8550

do.body8:                                         ; preds = %if.then7
  br label %do.body9, !dbg !8551

do.body9:                                         ; preds = %do.body8
  br label %do.end10, !dbg !8553

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !8551

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1162, i32 0, i64 12) #6, !dbg !8555, !srcloc !8557
  br label %do.end12, !dbg !8555

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !8551

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 353) #6, !dbg !8558, !srcloc !8561
  unreachable, !dbg !8562

do.end14:                                         ; No predecessors!
  br label %do.end15, !dbg !8551

do.end15:                                         ; preds = %do.end14
  br label %if.end16, !dbg !8551

if.end16:                                         ; preds = %do.end15, %if.end
  %port = getelementptr inbounds %struct.evtchn_bind_ipi, %struct.evtchn_bind_ipi* %bind_ipi, i32 0, i32 1, !dbg !8563
  %11 = load i32, i32* %port, align 4, !dbg !8563
  store i32 %11, i32* %evtchn, align 4, !dbg !8564
  %12 = load i32, i32* %cpu.addr, align 4, !dbg !8565
  %13 = load i32, i32* %irq, align 4, !dbg !8566
  %14 = load i32, i32* %evtchn, align 4, !dbg !8567
  %15 = load i32, i32* %ipi.addr, align 4, !dbg !8568
  %call17 = call i32 @xen_irq_info_ipi_setup(i32 %12, i32 %13, i32 %14, i32 %15) #12, !dbg !8569
  store i32 %call17, i32* %ret, align 4, !dbg !8570
  %16 = load i32, i32* %ret, align 4, !dbg !8571
  %cmp18 = icmp slt i32 %16, 0, !dbg !8573
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !8574

if.then19:                                        ; preds = %if.end16
  %17 = load i32, i32* %irq, align 4, !dbg !8575
  call void @__unbind_from_irq(i32 %17) #12, !dbg !8577
  %18 = load i32, i32* %ret, align 4, !dbg !8578
  store i32 %18, i32* %irq, align 4, !dbg !8579
  br label %out, !dbg !8580

if.end20:                                         ; preds = %if.end16
  %19 = load i32, i32* %evtchn, align 4, !dbg !8581
  %20 = load i32, i32* %cpu.addr, align 4, !dbg !8582
  call void @bind_evtchn_to_cpu(i32 %19, i32 %20) #12, !dbg !8583
  br label %if.end47, !dbg !8584

if.else:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !8585, metadata !DIExpression()), !dbg !8587
  %21 = load i32, i32* %irq, align 4, !dbg !8588
  %call21 = call %struct.irq_info* @info_for_irq(i32 %21) #12, !dbg !8589
  store %struct.irq_info* %call21, %struct.irq_info** %info, align 8, !dbg !8587
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8590, metadata !DIExpression()), !dbg !8592
  %22 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8592
  %cmp22 = icmp eq %struct.irq_info* %22, null, !dbg !8592
  br i1 %cmp22, label %lor.end, label %lor.rhs, !dbg !8592

lor.rhs:                                          ; preds = %if.else
  %23 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8592
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %23, i32 0, i32 4, !dbg !8592
  %24 = load i32, i32* %type, align 4, !dbg !8592
  %cmp23 = icmp ne i32 %24, 3, !dbg !8592
  br label %lor.end, !dbg !8592

lor.end:                                          ; preds = %lor.rhs, %if.else
  %25 = phi i1 [ true, %if.else ], [ %cmp23, %lor.rhs ]
  %lnot = xor i1 %25, true, !dbg !8592
  %lnot24 = xor i1 %lnot, true, !dbg !8592
  %lnot.ext = zext i1 %lnot24 to i32, !dbg !8592
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8592
  %26 = load i32, i32* %__ret_warn_on, align 4, !dbg !8593
  %tobool = icmp ne i32 %26, 0, !dbg !8593
  %lnot25 = xor i1 %tobool, true, !dbg !8593
  %lnot27 = xor i1 %lnot25, true, !dbg !8593
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !8593
  %conv = sext i32 %lnot.ext28 to i64, !dbg !8593
  %tobool29 = icmp ne i64 %conv, 0, !dbg !8593
  br i1 %tobool29, label %if.then30, label %if.end39, !dbg !8592

if.then30:                                        ; preds = %lor.end
  br label %do.body31, !dbg !8593

do.body31:                                        ; preds = %if.then30
  br label %do.body32, !dbg !8595

do.body32:                                        ; preds = %do.body31
  br label %do.end33, !dbg !8597

do.end33:                                         ; preds = %do.body32
  br label %do.body34, !dbg !8595

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1174, i32 2305, i64 12) #6, !dbg !8599, !srcloc !8601
  br label %do.end35, !dbg !8599

do.end35:                                         ; preds = %do.body34
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 354) #6, !dbg !8602, !srcloc !8604
  br label %do.body36, !dbg !8595

do.body36:                                        ; preds = %do.end35
  br label %do.end37, !dbg !8605

do.end37:                                         ; preds = %do.body36
  br label %do.end38, !dbg !8595

do.end38:                                         ; preds = %do.end37
  br label %if.end39, !dbg !8595

if.end39:                                         ; preds = %do.end38, %lor.end
  %27 = load i32, i32* %__ret_warn_on, align 4, !dbg !8592
  %tobool41 = icmp ne i32 %27, 0, !dbg !8592
  %lnot42 = xor i1 %tobool41, true, !dbg !8592
  %lnot44 = xor i1 %lnot42, true, !dbg !8592
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !8592
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !8592
  store i64 %conv46, i64* %tmp40, align 8, !dbg !8593
  %28 = load i64, i64* %tmp40, align 8, !dbg !8592
  br label %if.end47

if.end47:                                         ; preds = %if.end39, %if.end20
  br label %out, !dbg !8607

out:                                              ; preds = %if.end47, %if.then19, %if.then3
  call void @llvm.dbg.label(metadata !8608), !dbg !8609
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !8610
  %29 = load i32, i32* %irq, align 4, !dbg !8611
  ret i32 %29, !dbg !8612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @unbind_from_irqhandler(i32 %irq, i8* %dev_id) #0 !dbg !8613 {
entry:
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %info = alloca %struct.irq_info*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8616, metadata !DIExpression()), !dbg !8617
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8618, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !8620, metadata !DIExpression()), !dbg !8621
  %0 = load i32, i32* %irq.addr, align 4, !dbg !8622
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !8623
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !8621
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8624, metadata !DIExpression()), !dbg !8627
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8627
  %tobool = icmp ne %struct.irq_info* %1, null, !dbg !8627
  %lnot = xor i1 %tobool, true, !dbg !8627
  %lnot1 = xor i1 %lnot, true, !dbg !8627
  %lnot2 = xor i1 %lnot1, true, !dbg !8627
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8627
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8627
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !8628
  %tobool3 = icmp ne i32 %2, 0, !dbg !8628
  %lnot4 = xor i1 %tobool3, true, !dbg !8628
  %lnot6 = xor i1 %lnot4, true, !dbg !8628
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8628
  %conv = sext i32 %lnot.ext7 to i64, !dbg !8628
  %tobool8 = icmp ne i64 %conv, 0, !dbg !8628
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8627

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8628

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !8630

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8632

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8630

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1425, i32 2305, i64 12) #6, !dbg !8634, !srcloc !8636
  br label %do.end11, !dbg !8634

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 357) #6, !dbg !8637, !srcloc !8639
  br label %do.body12, !dbg !8630

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8640

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8630

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8630

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8627
  %tobool15 = icmp ne i32 %3, 0, !dbg !8627
  %lnot16 = xor i1 %tobool15, true, !dbg !8627
  %lnot18 = xor i1 %lnot16, true, !dbg !8627
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8627
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8627
  store i64 %conv20, i64* %tmp, align 8, !dbg !8628
  %4 = load i64, i64* %tmp, align 8, !dbg !8627
  %tobool21 = icmp ne i64 %4, 0, !dbg !8642
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !8643

if.then22:                                        ; preds = %if.end
  br label %return, !dbg !8644

if.end23:                                         ; preds = %if.end
  %5 = load i32, i32* %irq.addr, align 4, !dbg !8645
  %6 = load i8*, i8** %dev_id.addr, align 8, !dbg !8646
  %call24 = call i8* @free_irq(i32 %5, i8* %6) #12, !dbg !8647
  %7 = load i32, i32* %irq.addr, align 4, !dbg !8648
  call void @unbind_from_irq(i32 %7) #12, !dbg !8649
  br label %return, !dbg !8650

return:                                           ; preds = %if.end23, %if.then22
  ret void, !dbg !8650
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_set_irq_priority(i32 %irq, i32 %priority) #0 !dbg !8651 {
entry:
  %irq.addr = alloca i32, align 4
  %priority.addr = alloca i32, align 4
  %set_priority = alloca %struct.evtchn_set_priority, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8652, metadata !DIExpression()), !dbg !8653
  store i32 %priority, i32* %priority.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %priority.addr, metadata !8654, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.declare(metadata %struct.evtchn_set_priority* %set_priority, metadata !8656, metadata !DIExpression()), !dbg !8661
  %0 = load i32, i32* %irq.addr, align 4, !dbg !8662
  %call = call i32 @evtchn_from_irq(i32 %0) #12, !dbg !8663
  %port = getelementptr inbounds %struct.evtchn_set_priority, %struct.evtchn_set_priority* %set_priority, i32 0, i32 0, !dbg !8664
  store i32 %call, i32* %port, align 4, !dbg !8665
  %1 = load i32, i32* %priority.addr, align 4, !dbg !8666
  %priority1 = getelementptr inbounds %struct.evtchn_set_priority, %struct.evtchn_set_priority* %set_priority, i32 0, i32 1, !dbg !8667
  store i32 %1, i32* %priority1, align 4, !dbg !8668
  %2 = bitcast %struct.evtchn_set_priority* %set_priority to i8*, !dbg !8669
  %call2 = call i32 @HYPERVISOR_event_channel_op(i32 13, i8* %2) #12, !dbg !8670
  ret i32 %call2, !dbg !8671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @evtchn_make_refcounted(i32 %evtchn) #0 !dbg !8672 {
entry:
  %retval = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %irq = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !8673, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8675, metadata !DIExpression()), !dbg !8676
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !8677
  %call = call i32 @get_evtchn_to_irq(i32 %0) #12, !dbg !8678
  store i32 %call, i32* %irq, align 4, !dbg !8676
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !8679, metadata !DIExpression()), !dbg !8680
  %1 = load i32, i32* %irq, align 4, !dbg !8681
  %cmp = icmp eq i32 %1, -1, !dbg !8683
  br i1 %cmp, label %if.then, label %if.end, !dbg !8684

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !8685
  br label %return, !dbg !8685

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %irq, align 4, !dbg !8686
  %call1 = call %struct.irq_info* @info_for_irq(i32 %2) #12, !dbg !8687
  store %struct.irq_info* %call1, %struct.irq_info** %info, align 8, !dbg !8688
  %3 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8689
  %tobool = icmp ne %struct.irq_info* %3, null, !dbg !8689
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !8691

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4, !dbg !8692
  br label %return, !dbg !8692

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8693, metadata !DIExpression()), !dbg !8695
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8695
  %refcnt = getelementptr inbounds %struct.irq_info, %struct.irq_info* %4, i32 0, i32 2, !dbg !8695
  %5 = load i16, i16* %refcnt, align 8, !dbg !8695
  %conv = sext i16 %5 to i32, !dbg !8695
  %cmp4 = icmp ne i32 %conv, -1, !dbg !8695
  %lnot = xor i1 %cmp4, true, !dbg !8695
  %lnot6 = xor i1 %lnot, true, !dbg !8695
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !8695
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8695
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !8696
  %tobool7 = icmp ne i32 %6, 0, !dbg !8696
  %lnot8 = xor i1 %tobool7, true, !dbg !8696
  %lnot10 = xor i1 %lnot8, true, !dbg !8696
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !8696
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !8696
  %tobool13 = icmp ne i64 %conv12, 0, !dbg !8696
  br i1 %tobool13, label %if.then14, label %if.end21, !dbg !8695

if.then14:                                        ; preds = %if.end3
  br label %do.body, !dbg !8696

do.body:                                          ; preds = %if.then14
  br label %do.body15, !dbg !8698

do.body15:                                        ; preds = %do.body
  br label %do.end, !dbg !8700

do.end:                                           ; preds = %do.body15
  br label %do.body16, !dbg !8698

do.body16:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1462, i32 2305, i64 12) #6, !dbg !8702, !srcloc !8704
  br label %do.end17, !dbg !8702

do.end17:                                         ; preds = %do.body16
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 358) #6, !dbg !8705, !srcloc !8707
  br label %do.body18, !dbg !8698

do.body18:                                        ; preds = %do.end17
  br label %do.end19, !dbg !8708

do.end19:                                         ; preds = %do.body18
  br label %do.end20, !dbg !8698

do.end20:                                         ; preds = %do.end19
  br label %if.end21, !dbg !8698

if.end21:                                         ; preds = %do.end20, %if.end3
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !8695
  %tobool22 = icmp ne i32 %7, 0, !dbg !8695
  %lnot23 = xor i1 %tobool22, true, !dbg !8695
  %lnot25 = xor i1 %lnot23, true, !dbg !8695
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !8695
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !8695
  store i64 %conv27, i64* %tmp, align 8, !dbg !8696
  %8 = load i64, i64* %tmp, align 8, !dbg !8695
  %9 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8710
  %refcnt28 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %9, i32 0, i32 2, !dbg !8711
  store i16 1, i16* %refcnt28, align 8, !dbg !8712
  store i32 0, i32* %retval, align 4, !dbg !8713
  br label %return, !dbg !8713

return:                                           ; preds = %if.end21, %if.then2, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8714
  ret i32 %10, !dbg !8714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @evtchn_get(i32 %evtchn) #0 !dbg !8715 {
entry:
  %retval = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %irq = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %err = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !8716, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8718, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !8720, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8722, metadata !DIExpression()), !dbg !8723
  store i32 -2, i32* %err, align 4, !dbg !8723
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !8724
  %call = call i32 @xen_evtchn_max_channels() #12, !dbg !8726
  %cmp = icmp uge i32 %0, %call, !dbg !8727
  br i1 %cmp, label %if.then, label %if.end, !dbg !8728

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8729
  br label %return, !dbg !8729

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !8730
  %1 = load i32, i32* %evtchn.addr, align 4, !dbg !8731
  %call1 = call i32 @get_evtchn_to_irq(i32 %1) #12, !dbg !8732
  store i32 %call1, i32* %irq, align 4, !dbg !8733
  %2 = load i32, i32* %irq, align 4, !dbg !8734
  %cmp2 = icmp eq i32 %2, -1, !dbg !8736
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8737

if.then3:                                         ; preds = %if.end
  br label %done, !dbg !8738

if.end4:                                          ; preds = %if.end
  %3 = load i32, i32* %irq, align 4, !dbg !8739
  %call5 = call %struct.irq_info* @info_for_irq(i32 %3) #12, !dbg !8740
  store %struct.irq_info* %call5, %struct.irq_info** %info, align 8, !dbg !8741
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8742
  %tobool = icmp ne %struct.irq_info* %4, null, !dbg !8742
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !8744

if.then6:                                         ; preds = %if.end4
  br label %done, !dbg !8745

if.end7:                                          ; preds = %if.end4
  store i32 -22, i32* %err, align 4, !dbg !8746
  %5 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8747
  %refcnt = getelementptr inbounds %struct.irq_info, %struct.irq_info* %5, i32 0, i32 2, !dbg !8749
  %6 = load i16, i16* %refcnt, align 8, !dbg !8749
  %conv = sext i16 %6 to i32, !dbg !8747
  %cmp8 = icmp sle i32 %conv, 0, !dbg !8750
  br i1 %cmp8, label %if.then14, label %lor.lhs.false, !dbg !8751

lor.lhs.false:                                    ; preds = %if.end7
  %7 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8752
  %refcnt10 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %7, i32 0, i32 2, !dbg !8753
  %8 = load i16, i16* %refcnt10, align 8, !dbg !8753
  %conv11 = sext i16 %8 to i32, !dbg !8752
  %cmp12 = icmp eq i32 %conv11, 32767, !dbg !8754
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !8755

if.then14:                                        ; preds = %lor.lhs.false, %if.end7
  br label %done, !dbg !8756

if.end15:                                         ; preds = %lor.lhs.false
  %9 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8757
  %refcnt16 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %9, i32 0, i32 2, !dbg !8758
  %10 = load i16, i16* %refcnt16, align 8, !dbg !8759
  %inc = add i16 %10, 1, !dbg !8759
  store i16 %inc, i16* %refcnt16, align 8, !dbg !8759
  store i32 0, i32* %err, align 4, !dbg !8760
  br label %done, !dbg !8761

done:                                             ; preds = %if.end15, %if.then14, %if.then6, %if.then3
  call void @llvm.dbg.label(metadata !8762), !dbg !8763
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !8764
  %11 = load i32, i32* %err, align 4, !dbg !8765
  store i32 %11, i32* %retval, align 4, !dbg !8766
  br label %return, !dbg !8766

return:                                           ; preds = %done, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8767
  ret i32 %12, !dbg !8767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @evtchn_put(i32 %evtchn) #0 !dbg !8768 {
entry:
  %evtchn.addr = alloca i32, align 4
  %irq = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !8769, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8771, metadata !DIExpression()), !dbg !8772
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !8773
  %call = call i32 @get_evtchn_to_irq(i32 %0) #12, !dbg !8774
  store i32 %call, i32* %irq, align 4, !dbg !8772
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8775, metadata !DIExpression()), !dbg !8778
  %1 = load i32, i32* %irq, align 4, !dbg !8778
  %cmp = icmp eq i32 %1, -1, !dbg !8778
  %lnot = xor i1 %cmp, true, !dbg !8778
  %lnot1 = xor i1 %lnot, true, !dbg !8778
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8778
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8778
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !8779
  %tobool = icmp ne i32 %2, 0, !dbg !8779
  %lnot2 = xor i1 %tobool, true, !dbg !8779
  %lnot4 = xor i1 %lnot2, true, !dbg !8779
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !8779
  %conv = sext i32 %lnot.ext5 to i64, !dbg !8779
  %tobool6 = icmp ne i64 %conv, 0, !dbg !8779
  br i1 %tobool6, label %if.then, label %if.end, !dbg !8778

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8779

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !8781

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !8783

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !8781

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1506, i32 2305, i64 12) #6, !dbg !8785, !srcloc !8787
  br label %do.end9, !dbg !8785

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 359) #6, !dbg !8788, !srcloc !8790
  br label %do.body10, !dbg !8781

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !8791

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !8781

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !8781

if.end:                                           ; preds = %do.end12, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8778
  %tobool13 = icmp ne i32 %3, 0, !dbg !8778
  %lnot14 = xor i1 %tobool13, true, !dbg !8778
  %lnot16 = xor i1 %lnot14, true, !dbg !8778
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !8778
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !8778
  store i64 %conv18, i64* %tmp, align 8, !dbg !8779
  %4 = load i64, i64* %tmp, align 8, !dbg !8778
  %tobool19 = icmp ne i64 %4, 0, !dbg !8793
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !8794

if.then20:                                        ; preds = %if.end
  br label %return, !dbg !8795

if.end21:                                         ; preds = %if.end
  %5 = load i32, i32* %irq, align 4, !dbg !8796
  call void @unbind_from_irq(i32 %5) #12, !dbg !8797
  br label %return, !dbg !8798

return:                                           ; preds = %if.end21, %if.then20
  ret void, !dbg !8798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_send_IPI_one(i32 %cpu, i32 %vector) #0 !dbg !8799 {
entry:
  %cpu.addr = alloca i32, align 4
  %vector.addr = alloca i32, align 4
  %irq = alloca i32, align 4
  %rc = alloca i32, align 4
  %tmp = alloca [6 x i32]*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp8 = alloca [6 x i32]*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !8802, metadata !DIExpression()), !dbg !8803
  store i32 %vector, i32* %vector.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vector.addr, metadata !8804, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8806, metadata !DIExpression()), !dbg !8807
  %0 = load i32, i32* %vector.addr, align 4, !dbg !8808
  %cmp = icmp eq i32 %0, 5, !dbg !8808
  %lnot = xor i1 %cmp, true, !dbg !8808
  %lnot1 = xor i1 %lnot, true, !dbg !8808
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8808
  %conv = sext i32 %lnot.ext to i64, !dbg !8808
  %tobool = icmp ne i64 %conv, 0, !dbg !8808
  br i1 %tobool, label %if.then, label %if.end7, !dbg !8810

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8811, metadata !DIExpression()), !dbg !8813
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !8814
  %call = call i32 @xen_vcpu_nr(i32 %1) #12, !dbg !8815
  %call2 = call i32 @HYPERVISOR_vcpu_op(i32 11, i32 %call, i8* null) #12, !dbg !8816
  store i32 %call2, i32* %rc, align 4, !dbg !8813
  %2 = load i32, i32* %rc, align 4, !dbg !8817
  %cmp3 = icmp slt i32 %2, 0, !dbg !8819
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !8820

if.then5:                                         ; preds = %if.then
  %3 = load i32, i32* %cpu.addr, align 4, !dbg !8821
  %4 = load i32, i32* %rc, align 4, !dbg !8822
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i32 %3, i32 %4) #13, !dbg !8823
  br label %if.end, !dbg !8823

if.end:                                           ; preds = %if.then5, %if.then
  br label %return, !dbg !8824

if.end7:                                          ; preds = %entry
  %5 = load i32, i32* %cpu.addr, align 4, !dbg !8825
  br label %do.body, !dbg !8827

do.body:                                          ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !8829, metadata !DIExpression()), !dbg !8831
  store i8* null, i8** %__vpp_verify, align 8, !dbg !8831
  %6 = load i8*, i8** %__vpp_verify, align 8, !dbg !8831
  br label %do.end, !dbg !8831

do.end:                                           ; preds = %do.body
  store [6 x i32]* @ipi_to_irq, [6 x i32]** %tmp8, align 8, !dbg !8831
  %7 = load [6 x i32]*, [6 x i32]** %tmp8, align 8, !dbg !8827
  store [6 x i32]* %7, [6 x i32]** %tmp, align 8, !dbg !8825
  %8 = load [6 x i32]*, [6 x i32]** %tmp, align 8, !dbg !8825
  %9 = load i32, i32* %vector.addr, align 4, !dbg !8832
  %idxprom = zext i32 %9 to i64, !dbg !8833
  %arrayidx = getelementptr [6 x i32], [6 x i32]* %8, i64 0, i64 %idxprom, !dbg !8833
  %10 = load i32, i32* %arrayidx, align 4, !dbg !8833
  store i32 %10, i32* %irq, align 4, !dbg !8834
  br label %do.body9, !dbg !8835

do.body9:                                         ; preds = %do.end
  %11 = load i32, i32* %irq, align 4, !dbg !8836
  %cmp10 = icmp slt i32 %11, 0, !dbg !8836
  %lnot12 = xor i1 %cmp10, true, !dbg !8836
  %lnot14 = xor i1 %lnot12, true, !dbg !8836
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !8836
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !8836
  %tobool17 = icmp ne i64 %conv16, 0, !dbg !8836
  br i1 %tobool17, label %if.then18, label %if.end27, !dbg !8839

if.then18:                                        ; preds = %do.body9
  br label %do.body19, !dbg !8836

do.body19:                                        ; preds = %if.then18
  br label %do.body20, !dbg !8840

do.body20:                                        ; preds = %do.body19
  br label %do.end21, !dbg !8842

do.end21:                                         ; preds = %do.body20
  br label %do.body22, !dbg !8840

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1526, i32 0, i64 12) #6, !dbg !8844, !srcloc !8846
  br label %do.end23, !dbg !8844

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !8840

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 360) #6, !dbg !8847, !srcloc !8850
  unreachable, !dbg !8851

do.end25:                                         ; No predecessors!
  br label %do.end26, !dbg !8840

do.end26:                                         ; preds = %do.end25
  br label %if.end27, !dbg !8840

if.end27:                                         ; preds = %do.end26, %do.body9
  br label %do.end28, !dbg !8839

do.end28:                                         ; preds = %if.end27
  %12 = load i32, i32* %irq, align 4, !dbg !8852
  call void @notify_remote_via_irq(i32 %12) #12, !dbg !8853
  br label %return, !dbg !8854

return:                                           ; preds = %do.end28, %if.end
  ret void, !dbg !8854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @HYPERVISOR_vcpu_op(i32 %cmd, i32 %vcpuid, i8* %extra_args) #0 !dbg !8855 {
entry:
  %cmd.addr = alloca i32, align 4
  %vcpuid.addr = alloca i32, align 4
  %extra_args.addr = alloca i8*, align 8
  %__res = alloca i64, align 8
  %__arg1 = alloca i64, align 8
  %__arg2 = alloca i64, align 8
  %__arg3 = alloca i64, align 8
  %__arg4 = alloca i64, align 8
  %__arg5 = alloca i64, align 8
  %tmp = alloca i32, align 4
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !8858, metadata !DIExpression()), !dbg !8859
  store i32 %vcpuid, i32* %vcpuid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vcpuid.addr, metadata !8860, metadata !DIExpression()), !dbg !8861
  store i8* %extra_args, i8** %extra_args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extra_args.addr, metadata !8862, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.declare(metadata i64* %__res, metadata !8864, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.declare(metadata i64* %__arg1, metadata !8867, metadata !DIExpression()), !dbg !8866
  %0 = load i64, i64* %__arg1, align 8, !dbg !8866
  store i64 %0, i64* %__arg1, align 8, !dbg !8866
  call void @llvm.dbg.declare(metadata i64* %__arg2, metadata !8868, metadata !DIExpression()), !dbg !8866
  %1 = load i64, i64* %__arg2, align 8, !dbg !8866
  store i64 %1, i64* %__arg2, align 8, !dbg !8866
  call void @llvm.dbg.declare(metadata i64* %__arg3, metadata !8869, metadata !DIExpression()), !dbg !8866
  %2 = load i64, i64* %__arg3, align 8, !dbg !8866
  store i64 %2, i64* %__arg3, align 8, !dbg !8866
  call void @llvm.dbg.declare(metadata i64* %__arg4, metadata !8870, metadata !DIExpression()), !dbg !8866
  %3 = load i64, i64* %__arg4, align 8, !dbg !8866
  store i64 %3, i64* %__arg4, align 8, !dbg !8866
  call void @llvm.dbg.declare(metadata i64* %__arg5, metadata !8871, metadata !DIExpression()), !dbg !8866
  %4 = load i64, i64* %__arg5, align 8, !dbg !8866
  store i64 %4, i64* %__arg5, align 8, !dbg !8866
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !8866
  %conv = sext i32 %5 to i64, !dbg !8866
  store i64 %conv, i64* %__arg1, align 8, !dbg !8866
  %6 = load i32, i32* %vcpuid.addr, align 4, !dbg !8866
  %conv1 = sext i32 %6 to i64, !dbg !8866
  store i64 %conv1, i64* %__arg2, align 8, !dbg !8866
  %7 = load i8*, i8** %extra_args.addr, align 8, !dbg !8866
  %8 = ptrtoint i8* %7 to i64, !dbg !8866
  store i64 %8, i64* %__arg3, align 8, !dbg !8866
  %9 = call i64 @llvm.read_register.i64(metadata !6565), !dbg !8866
  %10 = load i64, i64* %__arg1, align 8, !dbg !8866
  %11 = load i64, i64* %__arg2, align 8, !dbg !8866
  %12 = load i64, i64* %__arg3, align 8, !dbg !8866
  %13 = call { i64, i64, i64, i64, i64 } asm sideeffect "call hypercall_page+${5:c}", "={rax},={rsp},={rdi},={rsi},={rdx},i,1,2,3,4,~{memory},~{r8},~{r10},~{dirflag},~{fpsr},~{flags}"(i64 768, i64 %9, i64 %10, i64 %11, i64 %12) #6, !dbg !8866, !srcloc !8872
  %asmresult = extractvalue { i64, i64, i64, i64, i64 } %13, 0, !dbg !8866
  %asmresult2 = extractvalue { i64, i64, i64, i64, i64 } %13, 1, !dbg !8866
  %asmresult3 = extractvalue { i64, i64, i64, i64, i64 } %13, 2, !dbg !8866
  %asmresult4 = extractvalue { i64, i64, i64, i64, i64 } %13, 3, !dbg !8866
  %asmresult5 = extractvalue { i64, i64, i64, i64, i64 } %13, 4, !dbg !8866
  store i64 %asmresult, i64* %__res, align 8, !dbg !8866
  call void @llvm.write_register.i64(metadata !6565, i64 %asmresult2), !dbg !8866
  store i64 %asmresult3, i64* %__arg1, align 8, !dbg !8866
  store i64 %asmresult4, i64* %__arg2, align 8, !dbg !8866
  store i64 %asmresult5, i64* %__arg3, align 8, !dbg !8866
  %14 = load i64, i64* %__res, align 8, !dbg !8866
  %conv6 = trunc i64 %14 to i32, !dbg !8866
  store i32 %conv6, i32* %tmp, align 4, !dbg !8866
  %15 = load i32, i32* %tmp, align 4, !dbg !8866
  ret i32 %15, !dbg !8873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @handle_irq_for_port(i32 %port, %struct.evtchn_loop_ctrl* %ctrl) #0 !dbg !8874 {
entry:
  %port.addr = alloca i32, align 4
  %ctrl.addr = alloca %struct.evtchn_loop_ctrl*, align 8
  %irq = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %kt = alloca i64, align 8
  %tmp = alloca i32, align 4
  %pscr_ret__ = alloca i32, align 4
  %__vpp_verify = alloca i8*, align 8
  %pfo_val__ = alloca i32, align 4
  %tmp22 = alloca i32, align 4
  %tmp25 = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !8877, metadata !DIExpression()), !dbg !8878
  store %struct.evtchn_loop_ctrl* %ctrl, %struct.evtchn_loop_ctrl** %ctrl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.evtchn_loop_ctrl** %ctrl.addr, metadata !8879, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !8881, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !8883, metadata !DIExpression()), !dbg !8884
  %0 = load i32, i32* %port.addr, align 4, !dbg !8885
  %call = call i32 @get_evtchn_to_irq(i32 %0) #12, !dbg !8886
  store i32 %call, i32* %irq, align 4, !dbg !8887
  %1 = load i32, i32* %irq, align 4, !dbg !8888
  %cmp = icmp eq i32 %1, -1, !dbg !8890
  br i1 %cmp, label %if.then, label %if.end, !dbg !8891

if.then:                                          ; preds = %entry
  br label %return, !dbg !8892

if.end:                                           ; preds = %entry
  %2 = load %struct.evtchn_loop_ctrl*, %struct.evtchn_loop_ctrl** %ctrl.addr, align 8, !dbg !8893
  %defer_eoi = getelementptr inbounds %struct.evtchn_loop_ctrl, %struct.evtchn_loop_ctrl* %2, i32 0, i32 2, !dbg !8895
  %3 = load i8, i8* %defer_eoi, align 4, !dbg !8895
  %tobool = trunc i8 %3 to i1, !dbg !8895
  br i1 %tobool, label %if.end17, label %land.lhs.true, !dbg !8896

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.evtchn_loop_ctrl*, %struct.evtchn_loop_ctrl** %ctrl.addr, align 8, !dbg !8897
  %count = getelementptr inbounds %struct.evtchn_loop_ctrl, %struct.evtchn_loop_ctrl* %4, i32 0, i32 1, !dbg !8898
  %5 = load i32, i32* %count, align 8, !dbg !8899
  %inc = add i32 %5, 1, !dbg !8899
  store i32 %inc, i32* %count, align 8, !dbg !8899
  %and = and i32 %inc, 255, !dbg !8900
  %tobool1 = icmp ne i32 %and, 0, !dbg !8900
  br i1 %tobool1, label %if.end17, label %if.then2, !dbg !8901

if.then2:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %kt, metadata !8902, metadata !DIExpression()), !dbg !8904
  %call3 = call i64 @ktime_get() #12, !dbg !8905
  store i64 %call3, i64* %kt, align 8, !dbg !8904
  %6 = load %struct.evtchn_loop_ctrl*, %struct.evtchn_loop_ctrl** %ctrl.addr, align 8, !dbg !8906
  %timeout = getelementptr inbounds %struct.evtchn_loop_ctrl, %struct.evtchn_loop_ctrl* %6, i32 0, i32 0, !dbg !8908
  %7 = load i64, i64* %timeout, align 8, !dbg !8908
  %tobool4 = icmp ne i64 %7, 0, !dbg !8906
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !8909

if.then5:                                         ; preds = %if.then2
  %8 = load i64, i64* %kt, align 8, !dbg !8910
  %9 = load i32, i32* @event_loop_timeout, align 4, !dbg !8912
  %conv = zext i32 %9 to i64, !dbg !8912
  %call6 = call i32 @jiffies_to_msecs(i64 %conv) #12, !dbg !8913
  %conv7 = zext i32 %call6 to i64, !dbg !8913
  %call8 = call i64 @ktime_add_ms(i64 %8, i64 %conv7) #12, !dbg !8914
  store i64 %call8, i64* %kt, align 8, !dbg !8915
  %10 = load i64, i64* %kt, align 8, !dbg !8916
  %11 = load %struct.evtchn_loop_ctrl*, %struct.evtchn_loop_ctrl** %ctrl.addr, align 8, !dbg !8917
  %timeout9 = getelementptr inbounds %struct.evtchn_loop_ctrl, %struct.evtchn_loop_ctrl* %11, i32 0, i32 0, !dbg !8918
  store i64 %10, i64* %timeout9, align 8, !dbg !8919
  br label %if.end16, !dbg !8920

if.else:                                          ; preds = %if.then2
  %12 = load i64, i64* %kt, align 8, !dbg !8921
  %13 = load %struct.evtchn_loop_ctrl*, %struct.evtchn_loop_ctrl** %ctrl.addr, align 8, !dbg !8923
  %timeout10 = getelementptr inbounds %struct.evtchn_loop_ctrl, %struct.evtchn_loop_ctrl* %13, i32 0, i32 0, !dbg !8924
  %14 = load i64, i64* %timeout10, align 8, !dbg !8924
  %cmp11 = icmp sgt i64 %12, %14, !dbg !8925
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !8926

if.then13:                                        ; preds = %if.else
  %15 = load %struct.evtchn_loop_ctrl*, %struct.evtchn_loop_ctrl** %ctrl.addr, align 8, !dbg !8927
  %defer_eoi14 = getelementptr inbounds %struct.evtchn_loop_ctrl, %struct.evtchn_loop_ctrl* %15, i32 0, i32 2, !dbg !8929
  store i8 1, i8* %defer_eoi14, align 4, !dbg !8930
  br label %if.end15, !dbg !8931

if.end15:                                         ; preds = %if.then13, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then5
  br label %if.end17, !dbg !8932

if.end17:                                         ; preds = %if.end16, %land.lhs.true, %if.end
  %16 = load i32, i32* %irq, align 4, !dbg !8933
  %call18 = call %struct.irq_info* @info_for_irq(i32 %16) #12, !dbg !8934
  store %struct.irq_info* %call18, %struct.irq_info** %info, align 8, !dbg !8935
  %17 = load %struct.evtchn_loop_ctrl*, %struct.evtchn_loop_ctrl** %ctrl.addr, align 8, !dbg !8936
  %defer_eoi19 = getelementptr inbounds %struct.evtchn_loop_ctrl, %struct.evtchn_loop_ctrl* %17, i32 0, i32 2, !dbg !8938
  %18 = load i8, i8* %defer_eoi19, align 4, !dbg !8938
  %tobool20 = trunc i8 %18 to i1, !dbg !8938
  br i1 %tobool20, label %if.then21, label %if.end28, !dbg !8939

if.then21:                                        ; preds = %if.end17
  %19 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8940
  %eoi_cpu = getelementptr inbounds %struct.irq_info, %struct.irq_info* %19, i32 0, i32 8, !dbg !8942
  store i16 0, i16* %eoi_cpu, align 2, !dbg !8943
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !8944
  call void @llvm.dbg.declare(metadata i32* %pscr_ret__, metadata !8946, metadata !DIExpression()), !dbg !8948
  br label %do.body, !dbg !8948

do.body:                                          ; preds = %if.then21
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !8949, metadata !DIExpression()), !dbg !8951
  store i8* null, i8** %__vpp_verify, align 8, !dbg !8951
  %20 = load i8*, i8** %__vpp_verify, align 8, !dbg !8951
  br label %do.end, !dbg !8951

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %pfo_val__, metadata !8952, metadata !DIExpression()), !dbg !8954
  %21 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @irq_epoch) #5, !dbg !8954, !srcloc !8955
  store i32 %21, i32* %pfo_val__, align 4, !dbg !8954
  %22 = load i32, i32* %pfo_val__, align 4, !dbg !8954
  %conv23 = zext i32 %22 to i64, !dbg !8954
  %conv24 = trunc i64 %conv23 to i32, !dbg !8954
  store i32 %conv24, i32* %tmp22, align 4, !dbg !8954
  %23 = load i32, i32* %tmp22, align 4, !dbg !8954
  store i32 %23, i32* %pscr_ret__, align 4, !dbg !8948
  %24 = load i32, i32* %pscr_ret__, align 4, !dbg !8948
  store i32 %24, i32* %tmp25, align 4, !dbg !8948
  %25 = load i32, i32* %tmp25, align 4, !dbg !8948
  store i32 %25, i32* %tmp, align 4, !dbg !8944
  %26 = load i32, i32* %tmp, align 4, !dbg !8944
  %27 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8956
  %irq_epoch = getelementptr inbounds %struct.irq_info, %struct.irq_info* %27, i32 0, i32 9, !dbg !8957
  store i32 %26, i32* %irq_epoch, align 4, !dbg !8958
  %call26 = call i64 @get_jiffies_64() #12, !dbg !8959
  %28 = load i32, i32* @event_eoi_delay, align 4, !dbg !8960
  %conv27 = zext i32 %28 to i64, !dbg !8960
  %add = add i64 %call26, %conv27, !dbg !8961
  %29 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !8962
  %eoi_time = getelementptr inbounds %struct.irq_info, %struct.irq_info* %29, i32 0, i32 10, !dbg !8963
  store i64 %add, i64* %eoi_time, align 8, !dbg !8964
  br label %if.end28, !dbg !8965

if.end28:                                         ; preds = %do.end, %if.end17
  %30 = load i32, i32* %irq, align 4, !dbg !8966
  %call29 = call i32 @generic_handle_irq(i32 %30) #12, !dbg !8967
  br label %return, !dbg !8968

return:                                           ; preds = %if.end28, %if.then
  ret void, !dbg !8968
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_add_ms(i64 %kt, i64 %msec) #0 !dbg !8969 {
entry:
  %kt.addr = alloca i64, align 8
  %msec.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !8974, metadata !DIExpression()), !dbg !8975
  store i64 %msec, i64* %msec.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %msec.addr, metadata !8976, metadata !DIExpression()), !dbg !8977
  %0 = load i64, i64* %kt.addr, align 8, !dbg !8978
  %1 = load i64, i64* %msec.addr, align 8, !dbg !8978
  %mul = mul i64 %1, 1000000, !dbg !8978
  %add = add i64 %0, %mul, !dbg !8978
  ret i64 %add, !dbg !8979
}

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_msecs(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__this_cpu_preempt_check(i8* %op) #0 !dbg !8980 {
entry:
  %op.addr = alloca i8*, align 8
  store i8* %op, i8** %op.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %op.addr, metadata !8984, metadata !DIExpression()), !dbg !8985
  ret void, !dbg !8986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_jiffies_64() #0 !dbg !8987 {
entry:
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !8989
  ret i64 %0, !dbg !8990
}

; Function Attrs: noredzone
declare dso_local i32 @generic_handle_irq(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_evtchn_do_upcall(%struct.pt_regs* %regs) #0 !dbg !8991 {
entry:
  %regs.addr = alloca %struct.pt_regs*, align 8
  %old_regs = alloca %struct.pt_regs*, align 8
  store %struct.pt_regs* %regs, %struct.pt_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %regs.addr, metadata !8994, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %old_regs, metadata !8996, metadata !DIExpression()), !dbg !8997
  %0 = load %struct.pt_regs*, %struct.pt_regs** %regs.addr, align 8, !dbg !8998
  %call = call %struct.pt_regs* @set_irq_regs(%struct.pt_regs* %0) #12, !dbg !8999
  store %struct.pt_regs* %call, %struct.pt_regs** %old_regs, align 8, !dbg !8997
  call void @irq_enter() #12, !dbg !9000
  call void @__xen_evtchn_do_upcall() #12, !dbg !9001
  call void @irq_exit() #12, !dbg !9002
  %1 = load %struct.pt_regs*, %struct.pt_regs** %old_regs, align 8, !dbg !9003
  %call1 = call %struct.pt_regs* @set_irq_regs(%struct.pt_regs* %1) #12, !dbg !9004
  ret void, !dbg !9005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pt_regs* @set_irq_regs(%struct.pt_regs* %new_regs) #0 !dbg !9006 {
entry:
  %new_regs.addr = alloca %struct.pt_regs*, align 8
  %old_regs = alloca %struct.pt_regs*, align 8
  %tmp = alloca %struct.pt_regs*, align 8
  %pscr_ret__ = alloca %struct.pt_regs*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pfo_val__ = alloca i64, align 8
  %tmp1 = alloca %struct.pt_regs*, align 8
  %tmp2 = alloca %struct.pt_regs*, align 8
  %__vpp_verify5 = alloca i8*, align 8
  %pto_val__ = alloca i64, align 8
  store %struct.pt_regs* %new_regs, %struct.pt_regs** %new_regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %new_regs.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %old_regs, metadata !9012, metadata !DIExpression()), !dbg !9013
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !9014
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %pscr_ret__, metadata !9016, metadata !DIExpression()), !dbg !9018
  br label %do.body, !dbg !9018

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !9019, metadata !DIExpression()), !dbg !9021
  store i8* null, i8** %__vpp_verify, align 8, !dbg !9021
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !9021
  br label %do.end, !dbg !9021

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %pfo_val__, metadata !9022, metadata !DIExpression()), !dbg !9024
  %1 = call i64 asm "movq $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(%struct.pt_regs** @__irq_regs) #5, !dbg !9024, !srcloc !9025
  store i64 %1, i64* %pfo_val__, align 8, !dbg !9024
  %2 = load i64, i64* %pfo_val__, align 8, !dbg !9024
  %3 = inttoptr i64 %2 to %struct.pt_regs*, !dbg !9024
  store %struct.pt_regs* %3, %struct.pt_regs** %tmp1, align 8, !dbg !9024
  %4 = load %struct.pt_regs*, %struct.pt_regs** %tmp1, align 8, !dbg !9024
  store %struct.pt_regs* %4, %struct.pt_regs** %pscr_ret__, align 8, !dbg !9018
  %5 = load %struct.pt_regs*, %struct.pt_regs** %pscr_ret__, align 8, !dbg !9018
  store %struct.pt_regs* %5, %struct.pt_regs** %tmp2, align 8, !dbg !9018
  %6 = load %struct.pt_regs*, %struct.pt_regs** %tmp2, align 8, !dbg !9018
  store %struct.pt_regs* %6, %struct.pt_regs** %tmp, align 8, !dbg !9014
  %7 = load %struct.pt_regs*, %struct.pt_regs** %tmp, align 8, !dbg !9014
  store %struct.pt_regs* %7, %struct.pt_regs** %old_regs, align 8, !dbg !9026
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !9027
  br label %do.body3, !dbg !9027

do.body3:                                         ; preds = %do.end
  br label %do.body4, !dbg !9029

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify5, metadata !9031, metadata !DIExpression()), !dbg !9033
  store i8* null, i8** %__vpp_verify5, align 8, !dbg !9033
  %8 = load i8*, i8** %__vpp_verify5, align 8, !dbg !9033
  br label %do.end6, !dbg !9033

do.end6:                                          ; preds = %do.body4
  br label %do.body7, !dbg !9029

do.body7:                                         ; preds = %do.end6
  call void @llvm.dbg.declare(metadata i64* %pto_val__, metadata !9034, metadata !DIExpression()), !dbg !9036
  %9 = load %struct.pt_regs*, %struct.pt_regs** %new_regs.addr, align 8, !dbg !9036
  %10 = ptrtoint %struct.pt_regs* %9 to i64, !dbg !9036
  store i64 %10, i64* %pto_val__, align 8, !dbg !9036
  %11 = load i64, i64* %pto_val__, align 8, !dbg !9036
  call void asm "movq $1, $0", "=*m,re,*m,~{dirflag},~{fpsr},~{flags}"(%struct.pt_regs** @__irq_regs, i64 %11, %struct.pt_regs** @__irq_regs) #6, !dbg !9036, !srcloc !9037
  br label %do.end8, !dbg !9036

do.end8:                                          ; preds = %do.body7
  br label %do.end9, !dbg !9029

do.end9:                                          ; preds = %do.end8
  %12 = load %struct.pt_regs*, %struct.pt_regs** %old_regs, align 8, !dbg !9038
  ret %struct.pt_regs* %12, !dbg !9039
}

; Function Attrs: noredzone
declare dso_local void @irq_enter() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__xen_evtchn_do_upcall() #0 !dbg !9040 {
entry:
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9041, metadata !DIExpression()), !dbg !9046
  %vcpu_info = alloca %struct.vcpu_info*, align 8
  %tmp = alloca %struct.vcpu_info*, align 8
  %pscr_ret__ = alloca %struct.vcpu_info*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pfo_val__ = alloca i64, align 8
  %tmp1 = alloca %struct.vcpu_info*, align 8
  %tmp2 = alloca %struct.vcpu_info*, align 8
  %cpu = alloca i32, align 4
  %ctrl = alloca %struct.evtchn_loop_ctrl, align 8
  %_flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %tmp12 = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %tmp18 = alloca i32, align 4
  %__vpp_verify44 = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.vcpu_info** %vcpu_info, metadata !9053, metadata !DIExpression()), !dbg !9054
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !9055
  call void @llvm.dbg.declare(metadata %struct.vcpu_info** %pscr_ret__, metadata !9057, metadata !DIExpression()), !dbg !9059
  br label %do.body, !dbg !9059

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !9060, metadata !DIExpression()), !dbg !9062
  store i8* null, i8** %__vpp_verify, align 8, !dbg !9062
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !9062
  br label %do.end, !dbg !9062

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %pfo_val__, metadata !9063, metadata !DIExpression()), !dbg !9065
  %1 = call i64 asm "movq $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(%struct.vcpu_info** @xen_vcpu) #5, !dbg !9065, !srcloc !9066
  store i64 %1, i64* %pfo_val__, align 8, !dbg !9065
  %2 = load i64, i64* %pfo_val__, align 8, !dbg !9065
  %3 = inttoptr i64 %2 to %struct.vcpu_info*, !dbg !9065
  store %struct.vcpu_info* %3, %struct.vcpu_info** %tmp1, align 8, !dbg !9065
  %4 = load %struct.vcpu_info*, %struct.vcpu_info** %tmp1, align 8, !dbg !9065
  store %struct.vcpu_info* %4, %struct.vcpu_info** %pscr_ret__, align 8, !dbg !9059
  %5 = load %struct.vcpu_info*, %struct.vcpu_info** %pscr_ret__, align 8, !dbg !9059
  store %struct.vcpu_info* %5, %struct.vcpu_info** %tmp2, align 8, !dbg !9059
  %6 = load %struct.vcpu_info*, %struct.vcpu_info** %tmp2, align 8, !dbg !9059
  store %struct.vcpu_info* %6, %struct.vcpu_info** %tmp, align 8, !dbg !9055
  %7 = load %struct.vcpu_info*, %struct.vcpu_info** %tmp, align 8, !dbg !9055
  store %struct.vcpu_info* %7, %struct.vcpu_info** %vcpu_info, align 8, !dbg !9054
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !9067, metadata !DIExpression()), !dbg !9068
  store i32 0, i32* %cpu, align 4, !dbg !9068
  call void @llvm.dbg.declare(metadata %struct.evtchn_loop_ctrl* %ctrl, metadata !9069, metadata !DIExpression()), !dbg !9070
  %8 = bitcast %struct.evtchn_loop_ctrl* %ctrl to i8*, !dbg !9070
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false), !dbg !9070
  br label %do.body3, !dbg !9071

do.body3:                                         ; preds = %do.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9072, !srcloc !9074
  br label %do.body4, !dbg !9072

do.body4:                                         ; preds = %do.body3
  br label %do.end5, !dbg !9075

do.end5:                                          ; preds = %do.body4
  br label %do.end6, !dbg !9072

do.end6:                                          ; preds = %do.end5
  br label %do.body7, !dbg !9077

do.body7:                                         ; preds = %do.cond, %do.end6
  %9 = load %struct.vcpu_info*, %struct.vcpu_info** %vcpu_info, align 8, !dbg !9078
  %evtchn_upcall_pending = getelementptr inbounds %struct.vcpu_info, %struct.vcpu_info* %9, i32 0, i32 0, !dbg !9079
  store i8 0, i8* %evtchn_upcall_pending, align 8, !dbg !9080
  %10 = load i32, i32* %cpu, align 4, !dbg !9081
  call void @xen_evtchn_handle_events(i32 %10, %struct.evtchn_loop_ctrl* %ctrl) #12, !dbg !9082
  br label %do.body8, !dbg !9083

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %_flags, metadata !9084, metadata !DIExpression()), !dbg !9085
  br label %do.body9, !dbg !9085

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9086, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9090, metadata !DIExpression()), !dbg !9089
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9089
  %conv = zext i1 %cmp to i32, !dbg !9089
  store i32 1, i32* %tmp10, align 4, !dbg !9089
  %11 = load i32, i32* %tmp10, align 4, !dbg !9089
  %call = call i64 @arch_local_save_flags() #12, !dbg !9091
  store i64 %call, i64* %_flags, align 8, !dbg !9091
  br label %do.end11, !dbg !9091

do.end11:                                         ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !9092, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !9095, metadata !DIExpression()), !dbg !9094
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !9094
  %conv16 = zext i1 %cmp15 to i32, !dbg !9094
  store i32 1, i32* %tmp17, align 4, !dbg !9094
  %12 = load i32, i32* %tmp17, align 4, !dbg !9094
  %13 = load i64, i64* %_flags, align 8, !dbg !9096
  store i64 %13, i64* %flags.addr.i, align 8
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !9097
  %and.i = and i64 %14, 512, !dbg !9098
  %tobool.i = icmp ne i64 %and.i, 0, !dbg !9099
  %lnot.i = xor i1 %tobool.i, true, !dbg !9099
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !9099
  store i32 %lnot.ext.i, i32* %tmp18, align 4, !dbg !9096
  %15 = load i32, i32* %tmp18, align 4, !dbg !9096
  store i32 %15, i32* %tmp12, align 4, !dbg !9091
  %16 = load i32, i32* %tmp12, align 4, !dbg !9085
  %tobool = icmp ne i32 %16, 0, !dbg !9100
  %lnot = xor i1 %tobool, true, !dbg !9100
  %lnot20 = xor i1 %lnot, true, !dbg !9100
  %lnot21 = xor i1 %lnot20, true, !dbg !9100
  %lnot.ext = zext i1 %lnot21 to i32, !dbg !9100
  %conv22 = sext i32 %lnot.ext to i64, !dbg !9100
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !9100
  br i1 %tobool23, label %if.then, label %if.end, !dbg !9101

if.then:                                          ; preds = %do.end11
  br label %do.body24, !dbg !9100

do.body24:                                        ; preds = %if.then
  br label %do.body25, !dbg !9102

do.body25:                                        ; preds = %do.body24
  br label %do.end26, !dbg !9104

do.end26:                                         ; preds = %do.body25
  br label %do.body27, !dbg !9102

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1591, i32 0, i64 12) #6, !dbg !9106, !srcloc !9108
  br label %do.end28, !dbg !9106

do.end28:                                         ; preds = %do.body27
  br label %do.body29, !dbg !9102

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 361) #6, !dbg !9109, !srcloc !9112
  unreachable, !dbg !9113

do.end30:                                         ; No predecessors!
  br label %do.end31, !dbg !9102

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !9102

if.end:                                           ; preds = %do.end31, %do.end11
  br label %do.end32, !dbg !9101

do.end32:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9114, !srcloc !9115
  br label %do.cond, !dbg !9116

do.cond:                                          ; preds = %do.end32
  %17 = load %struct.vcpu_info*, %struct.vcpu_info** %vcpu_info, align 8, !dbg !9117
  %evtchn_upcall_pending33 = getelementptr inbounds %struct.vcpu_info, %struct.vcpu_info* %17, i32 0, i32 0, !dbg !9118
  %18 = load i8, i8* %evtchn_upcall_pending33, align 8, !dbg !9118
  %tobool34 = icmp ne i8 %18, 0, !dbg !9116
  br i1 %tobool34, label %do.body7, label %do.end35, !dbg !9116, !llvm.loop !9119

do.end35:                                         ; preds = %do.cond
  br label %do.body36, !dbg !9121

do.body36:                                        ; preds = %do.end35
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9122, !srcloc !9124
  br label %do.body37, !dbg !9122

do.body37:                                        ; preds = %do.body36
  br label %do.end39, !dbg !9125

do.end39:                                         ; preds = %do.body37
  br label %do.end41, !dbg !9122

do.end41:                                         ; preds = %do.end39
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !9127
  br label %do.body42, !dbg !9127

do.body42:                                        ; preds = %do.end41
  br label %do.body43, !dbg !9129

do.body43:                                        ; preds = %do.body42
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify44, metadata !9131, metadata !DIExpression()), !dbg !9133
  store i8* null, i8** %__vpp_verify44, align 8, !dbg !9133
  %19 = load i8*, i8** %__vpp_verify44, align 8, !dbg !9133
  br label %do.end46, !dbg !9133

do.end46:                                         ; preds = %do.body43
  br label %do.body47, !dbg !9129

do.body47:                                        ; preds = %do.end46
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !9134, metadata !DIExpression()), !dbg !9137
  store i32 1, i32* %pao_ID__, align 4, !dbg !9137
  call void asm "incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* @irq_epoch, i32* @irq_epoch) #6, !dbg !9138, !srcloc !9141
  br label %do.end49, !dbg !9137

do.end49:                                         ; preds = %do.body47
  br label %do.end51, !dbg !9129

do.end51:                                         ; preds = %do.end49
  ret void, !dbg !9142
}

; Function Attrs: noredzone
declare dso_local void @irq_exit() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_hvm_evtchn_do_upcall() #0 !dbg !9143 {
entry:
  call void @__xen_evtchn_do_upcall() #12, !dbg !9144
  ret void, !dbg !9145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @rebind_evtchn_irq(i32 %evtchn, i32 %irq) #0 !dbg !9146 {
entry:
  %evtchn.addr = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !9149, metadata !DIExpression()), !dbg !9150
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9151, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !9153, metadata !DIExpression()), !dbg !9154
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9155
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !9156
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !9154
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9157, metadata !DIExpression()), !dbg !9160
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9160
  %tobool = icmp ne %struct.irq_info* %1, null, !dbg !9160
  %lnot = xor i1 %tobool, true, !dbg !9160
  %lnot1 = xor i1 %lnot, true, !dbg !9160
  %lnot2 = xor i1 %lnot1, true, !dbg !9160
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9160
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9160
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !9161
  %tobool3 = icmp ne i32 %2, 0, !dbg !9161
  %lnot4 = xor i1 %tobool3, true, !dbg !9161
  %lnot6 = xor i1 %lnot4, true, !dbg !9161
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !9161
  %conv = sext i32 %lnot.ext7 to i64, !dbg !9161
  %tobool8 = icmp ne i64 %conv, 0, !dbg !9161
  br i1 %tobool8, label %if.then, label %if.end, !dbg !9160

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9161

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !9163

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !9165

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !9163

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1630, i32 2305, i64 12) #6, !dbg !9167, !srcloc !9169
  br label %do.end11, !dbg !9167

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 362) #6, !dbg !9170, !srcloc !9172
  br label %do.body12, !dbg !9163

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !9173

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !9163

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !9163

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !9160
  %tobool15 = icmp ne i32 %3, 0, !dbg !9160
  %lnot16 = xor i1 %tobool15, true, !dbg !9160
  %lnot18 = xor i1 %lnot16, true, !dbg !9160
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !9160
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !9160
  store i64 %conv20, i64* %tmp, align 8, !dbg !9161
  %4 = load i64, i64* %tmp, align 8, !dbg !9160
  %tobool21 = icmp ne i64 %4, 0, !dbg !9175
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !9176

if.then22:                                        ; preds = %if.end
  br label %return, !dbg !9177

if.end23:                                         ; preds = %if.end
  %5 = load i32, i32* %irq.addr, align 4, !dbg !9178
  call void @disable_irq(i32 %5) #12, !dbg !9179
  call void @mutex_lock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !9180
  br label %do.body24, !dbg !9181

do.body24:                                        ; preds = %if.end23
  %6 = load i32, i32* %evtchn.addr, align 4, !dbg !9182
  %call25 = call i32 @get_evtchn_to_irq(i32 %6) #12, !dbg !9182
  %cmp = icmp ne i32 %call25, -1, !dbg !9182
  %lnot27 = xor i1 %cmp, true, !dbg !9182
  %lnot29 = xor i1 %lnot27, true, !dbg !9182
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !9182
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !9182
  %tobool32 = icmp ne i64 %conv31, 0, !dbg !9182
  br i1 %tobool32, label %if.then33, label %if.end42, !dbg !9185

if.then33:                                        ; preds = %do.body24
  br label %do.body34, !dbg !9182

do.body34:                                        ; preds = %if.then33
  br label %do.body35, !dbg !9186

do.body35:                                        ; preds = %do.body34
  br label %do.end36, !dbg !9188

do.end36:                                         ; preds = %do.body35
  br label %do.body37, !dbg !9186

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1640, i32 0, i64 12) #6, !dbg !9190, !srcloc !9192
  br label %do.end38, !dbg !9190

do.end38:                                         ; preds = %do.body37
  br label %do.body39, !dbg !9186

do.body39:                                        ; preds = %do.end38
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 363) #6, !dbg !9193, !srcloc !9196
  unreachable, !dbg !9197

do.end40:                                         ; No predecessors!
  br label %do.end41, !dbg !9186

do.end41:                                         ; preds = %do.end40
  br label %if.end42, !dbg !9186

if.end42:                                         ; preds = %do.end41, %do.body24
  br label %do.end43, !dbg !9185

do.end43:                                         ; preds = %if.end42
  br label %do.body44, !dbg !9198

do.body44:                                        ; preds = %do.end43
  %7 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9199
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %7, i32 0, i32 4, !dbg !9199
  %8 = load i32, i32* %type, align 4, !dbg !9199
  %cmp45 = icmp eq i32 %8, 0, !dbg !9199
  %lnot47 = xor i1 %cmp45, true, !dbg !9199
  %lnot49 = xor i1 %lnot47, true, !dbg !9199
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !9199
  %conv51 = sext i32 %lnot.ext50 to i64, !dbg !9199
  %tobool52 = icmp ne i64 %conv51, 0, !dbg !9199
  br i1 %tobool52, label %if.then53, label %if.end62, !dbg !9202

if.then53:                                        ; preds = %do.body44
  br label %do.body54, !dbg !9199

do.body54:                                        ; preds = %if.then53
  br label %do.body55, !dbg !9203

do.body55:                                        ; preds = %do.body54
  br label %do.end56, !dbg !9205

do.end56:                                         ; preds = %do.body55
  br label %do.body57, !dbg !9203

do.body57:                                        ; preds = %do.end56
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1643, i32 0, i64 12) #6, !dbg !9207, !srcloc !9209
  br label %do.end58, !dbg !9207

do.end58:                                         ; preds = %do.body57
  br label %do.body59, !dbg !9203

do.body59:                                        ; preds = %do.end58
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 364) #6, !dbg !9210, !srcloc !9213
  unreachable, !dbg !9214

do.end60:                                         ; No predecessors!
  br label %do.end61, !dbg !9203

do.end61:                                         ; preds = %do.end60
  br label %if.end62, !dbg !9203

if.end62:                                         ; preds = %do.end61, %do.body44
  br label %do.end63, !dbg !9202

do.end63:                                         ; preds = %if.end62
  %9 = load i32, i32* %irq.addr, align 4, !dbg !9215
  %10 = load i32, i32* %evtchn.addr, align 4, !dbg !9216
  %call64 = call i32 @xen_irq_info_evtchn_setup(i32 %9, i32 %10) #12, !dbg !9217
  call void @mutex_unlock(%struct.mutex* @irq_mapping_update_lock) #12, !dbg !9218
  %11 = load i32, i32* %evtchn.addr, align 4, !dbg !9219
  %12 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9220
  %cpu = getelementptr inbounds %struct.irq_info, %struct.irq_info* %12, i32 0, i32 7, !dbg !9221
  %13 = load i16, i16* %cpu, align 8, !dbg !9221
  %conv65 = zext i16 %13 to i32, !dbg !9220
  call void @bind_evtchn_to_cpu(i32 %11, i32 %conv65) #12, !dbg !9222
  %14 = load i32, i32* %irq.addr, align 4, !dbg !9223
  %15 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9224
  %cpu66 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %15, i32 0, i32 7, !dbg !9224
  %16 = load i16, i16* %cpu66, align 8, !dbg !9224
  %conv67 = zext i16 %16 to i32, !dbg !9224
  %call68 = call %struct.cpumask* @get_cpu_mask(i32 %conv67) #12, !dbg !9224
  %call69 = call i32 @irq_set_affinity(i32 %14, %struct.cpumask* %call68) #12, !dbg !9225
  %17 = load i32, i32* %irq.addr, align 4, !dbg !9226
  call void @enable_irq(i32 %17) #12, !dbg !9227
  br label %return, !dbg !9228

return:                                           ; preds = %do.end63, %if.then22
  ret void, !dbg !9228
}

; Function Attrs: noredzone
declare dso_local void @disable_irq(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_irq_info_evtchn_setup(i32 %irq, i32 %evtchn) #0 !dbg !9229 {
entry:
  %irq.addr = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9230, metadata !DIExpression()), !dbg !9231
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !9232, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !9234, metadata !DIExpression()), !dbg !9235
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9236
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !9237
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !9235
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9238
  %2 = load i32, i32* %irq.addr, align 4, !dbg !9239
  %3 = load i32, i32* %evtchn.addr, align 4, !dbg !9240
  %call1 = call i32 @xen_irq_info_common_setup(%struct.irq_info* %1, i32 %2, i32 4, i32 %3, i16 zeroext 0) #12, !dbg !9241
  ret i32 %call1, !dbg !9242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @irq_set_affinity(i32 %irq, %struct.cpumask* %m) #0 !dbg !9243 {
entry:
  %irq.addr = alloca i32, align 4
  %m.addr = alloca %struct.cpumask*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9246, metadata !DIExpression()), !dbg !9247
  store %struct.cpumask* %m, %struct.cpumask** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %m.addr, metadata !9248, metadata !DIExpression()), !dbg !9249
  ret i32 -22, !dbg !9250
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.cpumask* @get_cpu_mask(i32 %cpu) #0 !dbg !9251 {
entry:
  %cpu.addr = alloca i32, align 4
  %p = alloca i64*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.declare(metadata i64** %p, metadata !9256, metadata !DIExpression()), !dbg !9258
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !9259
  %rem = urem i32 %0, 64, !dbg !9260
  %add = add i32 1, %rem, !dbg !9261
  %idxprom = zext i32 %add to i64, !dbg !9262
  %arrayidx = getelementptr [65 x [1 x i64]], [65 x [1 x i64]]* @cpu_bit_bitmap, i64 0, i64 %idxprom, !dbg !9262
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %arrayidx, i64 0, i64 0, !dbg !9262
  store i64* %arraydecay, i64** %p, align 8, !dbg !9258
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !9263
  %div = udiv i32 %1, 64, !dbg !9264
  %2 = load i64*, i64** %p, align 8, !dbg !9265
  %idx.ext = zext i32 %div to i64, !dbg !9265
  %idx.neg = sub i64 0, %idx.ext, !dbg !9265
  %add.ptr = getelementptr i64, i64* %2, i64 %idx.neg, !dbg !9265
  store i64* %add.ptr, i64** %p, align 8, !dbg !9265
  %3 = load i64*, i64** %p, align 8, !dbg !9266
  %4 = bitcast i64* %3 to i8*, !dbg !9266
  %5 = bitcast i8* %4 to %struct.cpumask*, !dbg !9266
  ret %struct.cpumask* %5, !dbg !9267
}

; Function Attrs: noredzone
declare dso_local void @enable_irq(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_set_affinity_evtchn(%struct.irq_desc* %desc, i32 %tcpu) #0 !dbg !9268 {
entry:
  %desc.addr = alloca %struct.irq_desc*, align 8
  %tcpu.addr = alloca i32, align 4
  %d = alloca %struct.irq_data*, align 8
  store %struct.irq_desc* %desc, %struct.irq_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_desc** %desc.addr, metadata !9271, metadata !DIExpression()), !dbg !9272
  store i32 %tcpu, i32* %tcpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tcpu.addr, metadata !9273, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d, metadata !9275, metadata !DIExpression()), !dbg !9276
  %0 = load %struct.irq_desc*, %struct.irq_desc** %desc.addr, align 8, !dbg !9277
  %call = call %struct.irq_data* @irq_desc_get_irq_data(%struct.irq_desc* %0) #12, !dbg !9278
  store %struct.irq_data* %call, %struct.irq_data** %d, align 8, !dbg !9276
  %1 = load %struct.irq_data*, %struct.irq_data** %d, align 8, !dbg !9279
  %2 = load i32, i32* %tcpu.addr, align 4, !dbg !9280
  %call1 = call %struct.cpumask* @get_cpu_mask(i32 %2) #12, !dbg !9280
  %call2 = call i32 @set_affinity_irq(%struct.irq_data* %1, %struct.cpumask* %call1, i1 zeroext false) #12, !dbg !9281
  ret i32 %call2, !dbg !9282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.irq_data* @irq_desc_get_irq_data(%struct.irq_desc* %desc) #0 !dbg !9283 {
entry:
  %desc.addr = alloca %struct.irq_desc*, align 8
  store %struct.irq_desc* %desc, %struct.irq_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_desc** %desc.addr, metadata !9286, metadata !DIExpression()), !dbg !9287
  %0 = load %struct.irq_desc*, %struct.irq_desc** %desc.addr, align 8, !dbg !9288
  %irq_data = getelementptr inbounds %struct.irq_desc, %struct.irq_desc* %0, i32 0, i32 1, !dbg !9289
  ret %struct.irq_data* %irq_data, !dbg !9290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_affinity_irq(%struct.irq_data* %data, %struct.cpumask* %dest, i1 zeroext %force) #0 !dbg !9291 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  %dest.addr = alloca %struct.cpumask*, align 8
  %force.addr = alloca i8, align 1
  %tcpu = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !9292, metadata !DIExpression()), !dbg !9293
  store %struct.cpumask* %dest, %struct.cpumask** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %dest.addr, metadata !9294, metadata !DIExpression()), !dbg !9295
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9296, metadata !DIExpression()), !dbg !9297
  call void @llvm.dbg.declare(metadata i32* %tcpu, metadata !9298, metadata !DIExpression()), !dbg !9299
  %0 = load %struct.cpumask*, %struct.cpumask** %dest.addr, align 8, !dbg !9300
  %call = call i32 @cpumask_next_and(i32 -1, %struct.cpumask* %0, %struct.cpumask* @__cpu_online_mask) #12, !dbg !9300
  store i32 %call, i32* %tcpu, align 4, !dbg !9299
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9301, metadata !DIExpression()), !dbg !9302
  %1 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !9303
  %irq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %1, i32 0, i32 1, !dbg !9304
  %2 = load i32, i32* %irq, align 4, !dbg !9304
  %call1 = call i32 @evtchn_from_irq(i32 %2) #12, !dbg !9305
  %3 = load i32, i32* %tcpu, align 4, !dbg !9306
  %call2 = call i32 @xen_rebind_evtchn_to_cpu(i32 %call1, i32 %3) #12, !dbg !9307
  store i32 %call2, i32* %ret, align 4, !dbg !9302
  %4 = load i32, i32* %ret, align 4, !dbg !9308
  %tobool = icmp ne i32 %4, 0, !dbg !9308
  br i1 %tobool, label %if.end, label %if.then, !dbg !9310

if.then:                                          ; preds = %entry
  %5 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !9311
  %6 = load i32, i32* %tcpu, align 4, !dbg !9312
  %call3 = call %struct.cpumask* @get_cpu_mask(i32 %6) #12, !dbg !9312
  call void @irq_data_update_effective_affinity(%struct.irq_data* %5, %struct.cpumask* %call3) #12, !dbg !9313
  br label %if.end, !dbg !9313

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %ret, align 4, !dbg !9314
  ret i32 %7, !dbg !9315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_clear_irq_pending(i32 %irq) #0 !dbg !9316 {
entry:
  %irq.addr = alloca i32, align 4
  %evtchn = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9317, metadata !DIExpression()), !dbg !9318
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !9319, metadata !DIExpression()), !dbg !9320
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9321
  %call = call i32 @evtchn_from_irq(i32 %0) #12, !dbg !9322
  store i32 %call, i32* %evtchn, align 4, !dbg !9320
  %1 = load i32, i32* %evtchn, align 4, !dbg !9323
  %cmp = icmp ne i32 %1, 0, !dbg !9323
  br i1 %cmp, label %if.then, label %if.end, !dbg !9325

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %evtchn, align 4, !dbg !9326
  call void @clear_evtchn(i32 %2) #12, !dbg !9327
  br label %if.end, !dbg !9327

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_evtchn(i32 %port) #0 !dbg !9329 {
entry:
  %port.addr = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9330, metadata !DIExpression()), !dbg !9331
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !9332
  %clear_pending = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 4, !dbg !9333
  %1 = load void (i32)*, void (i32)** %clear_pending, align 8, !dbg !9333
  %2 = load i32, i32* %port.addr, align 4, !dbg !9334
  call void %1(i32 %2) #12, !dbg !9332
  ret void, !dbg !9335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_set_irq_pending(i32 %irq) #0 !dbg !9336 {
entry:
  %irq.addr = alloca i32, align 4
  %evtchn = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9337, metadata !DIExpression()), !dbg !9338
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !9339, metadata !DIExpression()), !dbg !9340
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9341
  %call = call i32 @evtchn_from_irq(i32 %0) #12, !dbg !9342
  store i32 %call, i32* %evtchn, align 4, !dbg !9340
  %1 = load i32, i32* %evtchn, align 4, !dbg !9343
  %cmp = icmp ne i32 %1, 0, !dbg !9343
  br i1 %cmp, label %if.then, label %if.end, !dbg !9345

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %evtchn, align 4, !dbg !9346
  call void @set_evtchn(i32 %2) #12, !dbg !9347
  br label %if.end, !dbg !9347

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9348
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_evtchn(i32 %port) #0 !dbg !9349 {
entry:
  %port.addr = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9350, metadata !DIExpression()), !dbg !9351
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !9352
  %set_pending = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 5, !dbg !9353
  %1 = load void (i32)*, void (i32)** %set_pending, align 8, !dbg !9353
  %2 = load i32, i32* %port.addr, align 4, !dbg !9354
  call void %1(i32 %2) #12, !dbg !9352
  ret void, !dbg !9355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @xen_test_irq_pending(i32 %irq) #0 !dbg !9356 {
entry:
  %irq.addr = alloca i32, align 4
  %evtchn = alloca i32, align 4
  %ret = alloca i8, align 1
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9359, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !9361, metadata !DIExpression()), !dbg !9362
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9363
  %call = call i32 @evtchn_from_irq(i32 %0) #12, !dbg !9364
  store i32 %call, i32* %evtchn, align 4, !dbg !9362
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !9365, metadata !DIExpression()), !dbg !9366
  store i8 0, i8* %ret, align 1, !dbg !9366
  %1 = load i32, i32* %evtchn, align 4, !dbg !9367
  %cmp = icmp ne i32 %1, 0, !dbg !9367
  br i1 %cmp, label %if.then, label %if.end, !dbg !9369

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %evtchn, align 4, !dbg !9370
  %call1 = call zeroext i1 @test_evtchn(i32 %2) #12, !dbg !9371
  %frombool = zext i1 %call1 to i8, !dbg !9372
  store i8 %frombool, i8* %ret, align 1, !dbg !9372
  br label %if.end, !dbg !9373

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8, i8* %ret, align 1, !dbg !9374
  %tobool = trunc i8 %3 to i1, !dbg !9374
  ret i1 %tobool, !dbg !9375
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_evtchn(i32 %port) #0 !dbg !9376 {
entry:
  %port.addr = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9377, metadata !DIExpression()), !dbg !9378
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !9379
  %is_pending = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 6, !dbg !9380
  %1 = load i1 (i32)*, i1 (i32)** %is_pending, align 8, !dbg !9380
  %2 = load i32, i32* %port.addr, align 4, !dbg !9381
  %call = call zeroext i1 %1(i32 %2) #12, !dbg !9379
  ret i1 %call, !dbg !9382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_poll_irq_timeout(i32 %irq, i64 %timeout) #0 !dbg !9383 {
entry:
  %irq.addr = alloca i32, align 4
  %timeout.addr = alloca i64, align 8
  %evtchn = alloca i32, align 4
  %poll = alloca %struct.sched_poll, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9386, metadata !DIExpression()), !dbg !9387
  store i64 %timeout, i64* %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timeout.addr, metadata !9388, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !9390, metadata !DIExpression()), !dbg !9391
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9392
  %call = call i32 @evtchn_from_irq(i32 %0) #12, !dbg !9393
  store i32 %call, i32* %evtchn, align 4, !dbg !9391
  %1 = load i32, i32* %evtchn, align 4, !dbg !9394
  %cmp = icmp ne i32 %1, 0, !dbg !9394
  br i1 %cmp, label %if.then, label %if.end13, !dbg !9396

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sched_poll* %poll, metadata !9397, metadata !DIExpression()), !dbg !9406
  %nr_ports = getelementptr inbounds %struct.sched_poll, %struct.sched_poll* %poll, i32 0, i32 1, !dbg !9407
  store i32 1, i32* %nr_ports, align 8, !dbg !9408
  %2 = load i64, i64* %timeout.addr, align 8, !dbg !9409
  %timeout1 = getelementptr inbounds %struct.sched_poll, %struct.sched_poll* %poll, i32 0, i32 2, !dbg !9410
  store i64 %2, i64* %timeout1, align 8, !dbg !9411
  br label %do.body, !dbg !9412

do.body:                                          ; preds = %if.then
  %ports = getelementptr inbounds %struct.sched_poll, %struct.sched_poll* %poll, i32 0, i32 0, !dbg !9413
  store i32* %evtchn, i32** %ports, align 8, !dbg !9413
  br label %do.end, !dbg !9413

do.end:                                           ; preds = %do.body
  %3 = bitcast %struct.sched_poll* %poll to i8*, !dbg !9415
  %call2 = call i32 @HYPERVISOR_sched_op(i32 3, i8* %3) #12, !dbg !9417
  %cmp3 = icmp ne i32 %call2, 0, !dbg !9418
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !9419

if.then4:                                         ; preds = %do.end
  br label %do.body5, !dbg !9420

do.body5:                                         ; preds = %if.then4
  br label %do.body6, !dbg !9421

do.body6:                                         ; preds = %do.body5
  br label %do.end7, !dbg !9423

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !9421

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1904, i32 0, i64 12) #6, !dbg !9425, !srcloc !9427
  br label %do.end9, !dbg !9425

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !9421

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 371) #6, !dbg !9428, !srcloc !9431
  unreachable, !dbg !9432

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !9421

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !9421

if.end:                                           ; preds = %do.end12, %do.end
  br label %if.end13, !dbg !9433

if.end13:                                         ; preds = %if.end, %entry
  ret void, !dbg !9434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @HYPERVISOR_sched_op(i32 %cmd, i8* %arg) #0 !dbg !9435 {
entry:
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %__res = alloca i64, align 8
  %__arg1 = alloca i64, align 8
  %__arg2 = alloca i64, align 8
  %__arg3 = alloca i64, align 8
  %__arg4 = alloca i64, align 8
  %__arg5 = alloca i64, align 8
  %tmp = alloca i32, align 4
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !9436, metadata !DIExpression()), !dbg !9437
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9438, metadata !DIExpression()), !dbg !9439
  call void @llvm.dbg.declare(metadata i64* %__res, metadata !9440, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.declare(metadata i64* %__arg1, metadata !9443, metadata !DIExpression()), !dbg !9442
  %0 = load i64, i64* %__arg1, align 8, !dbg !9442
  store i64 %0, i64* %__arg1, align 8, !dbg !9442
  call void @llvm.dbg.declare(metadata i64* %__arg2, metadata !9444, metadata !DIExpression()), !dbg !9442
  %1 = load i64, i64* %__arg2, align 8, !dbg !9442
  store i64 %1, i64* %__arg2, align 8, !dbg !9442
  call void @llvm.dbg.declare(metadata i64* %__arg3, metadata !9445, metadata !DIExpression()), !dbg !9442
  %2 = load i64, i64* %__arg3, align 8, !dbg !9442
  store i64 %2, i64* %__arg3, align 8, !dbg !9442
  call void @llvm.dbg.declare(metadata i64* %__arg4, metadata !9446, metadata !DIExpression()), !dbg !9442
  %3 = load i64, i64* %__arg4, align 8, !dbg !9442
  store i64 %3, i64* %__arg4, align 8, !dbg !9442
  call void @llvm.dbg.declare(metadata i64* %__arg5, metadata !9447, metadata !DIExpression()), !dbg !9442
  %4 = load i64, i64* %__arg5, align 8, !dbg !9442
  store i64 %4, i64* %__arg5, align 8, !dbg !9442
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !9442
  %conv = sext i32 %5 to i64, !dbg !9442
  store i64 %conv, i64* %__arg1, align 8, !dbg !9442
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !9442
  %7 = ptrtoint i8* %6 to i64, !dbg !9442
  store i64 %7, i64* %__arg2, align 8, !dbg !9442
  %8 = call i64 @llvm.read_register.i64(metadata !6565), !dbg !9442
  %9 = load i64, i64* %__arg1, align 8, !dbg !9442
  %10 = load i64, i64* %__arg2, align 8, !dbg !9442
  %11 = call { i64, i64, i64, i64 } asm sideeffect "call hypercall_page+${4:c}", "={rax},={rsp},={rdi},={rsi},i,1,2,3,~{memory},~{r8},~{r10},~{rdx},~{dirflag},~{fpsr},~{flags}"(i64 928, i64 %8, i64 %9, i64 %10) #6, !dbg !9442, !srcloc !9448
  %asmresult = extractvalue { i64, i64, i64, i64 } %11, 0, !dbg !9442
  %asmresult1 = extractvalue { i64, i64, i64, i64 } %11, 1, !dbg !9442
  %asmresult2 = extractvalue { i64, i64, i64, i64 } %11, 2, !dbg !9442
  %asmresult3 = extractvalue { i64, i64, i64, i64 } %11, 3, !dbg !9442
  store i64 %asmresult, i64* %__res, align 8, !dbg !9442
  call void @llvm.write_register.i64(metadata !6565, i64 %asmresult1), !dbg !9442
  store i64 %asmresult2, i64* %__arg1, align 8, !dbg !9442
  store i64 %asmresult3, i64* %__arg2, align 8, !dbg !9442
  %12 = load i64, i64* %__res, align 8, !dbg !9442
  %conv4 = trunc i64 %12 to i32, !dbg !9442
  store i32 %conv4, i32* %tmp, align 4, !dbg !9442
  %13 = load i32, i32* %tmp, align 4, !dbg !9442
  ret i32 %13, !dbg !9449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_poll_irq(i32 %irq) #0 !dbg !9450 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9451, metadata !DIExpression()), !dbg !9452
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9453
  call void @xen_poll_irq_timeout(i32 %0, i64 0) #12, !dbg !9454
  ret void, !dbg !9455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_test_irq_shared(i32 %irq) #0 !dbg !9456 {
entry:
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %irq_status = alloca %struct.physdev_irq_status_query, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9457, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !9459, metadata !DIExpression()), !dbg !9460
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9461
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !9462
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !9460
  call void @llvm.dbg.declare(metadata %struct.physdev_irq_status_query* %irq_status, metadata !9463, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9465, metadata !DIExpression()), !dbg !9468
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9468
  %tobool = icmp ne %struct.irq_info* %1, null, !dbg !9468
  %lnot = xor i1 %tobool, true, !dbg !9468
  %lnot1 = xor i1 %lnot, true, !dbg !9468
  %lnot2 = xor i1 %lnot1, true, !dbg !9468
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9468
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9468
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !9469
  %tobool3 = icmp ne i32 %2, 0, !dbg !9469
  %lnot4 = xor i1 %tobool3, true, !dbg !9469
  %lnot6 = xor i1 %lnot4, true, !dbg !9469
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !9469
  %conv = sext i32 %lnot.ext7 to i64, !dbg !9469
  %tobool8 = icmp ne i64 %conv, 0, !dbg !9469
  br i1 %tobool8, label %if.then, label %if.end, !dbg !9468

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9469

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !9471

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !9473

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !9471

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1921, i32 2305, i64 12) #6, !dbg !9475, !srcloc !9477
  br label %do.end11, !dbg !9475

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 372) #6, !dbg !9478, !srcloc !9480
  br label %do.body12, !dbg !9471

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !9481

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !9471

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !9471

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !9468
  %tobool15 = icmp ne i32 %3, 0, !dbg !9468
  %lnot16 = xor i1 %tobool15, true, !dbg !9468
  %lnot18 = xor i1 %lnot16, true, !dbg !9468
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !9468
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !9468
  store i64 %conv20, i64* %tmp, align 8, !dbg !9469
  %4 = load i64, i64* %tmp, align 8, !dbg !9468
  %tobool21 = icmp ne i64 %4, 0, !dbg !9483
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !9484

if.then22:                                        ; preds = %if.end
  store i32 -2, i32* %retval, align 4, !dbg !9485
  br label %return, !dbg !9485

if.end23:                                         ; preds = %if.end
  %5 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9486
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %5, i32 0, i32 11, !dbg !9487
  %pirq = bitcast %union.anon.0* %u to %struct.anon*, !dbg !9488
  %pirq24 = getelementptr inbounds %struct.anon, %struct.anon* %pirq, i32 0, i32 0, !dbg !9489
  %6 = load i16, i16* %pirq24, align 8, !dbg !9489
  %conv25 = zext i16 %6 to i32, !dbg !9486
  %irq26 = getelementptr inbounds %struct.physdev_irq_status_query, %struct.physdev_irq_status_query* %irq_status, i32 0, i32 0, !dbg !9490
  store i32 %conv25, i32* %irq26, align 4, !dbg !9491
  %7 = bitcast %struct.physdev_irq_status_query* %irq_status to i8*, !dbg !9492
  %call27 = call i32 @HYPERVISOR_physdev_op(i32 5, i8* %7) #12, !dbg !9494
  %tobool28 = icmp ne i32 %call27, 0, !dbg !9494
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !9495

if.then29:                                        ; preds = %if.end23
  store i32 0, i32* %retval, align 4, !dbg !9496
  br label %return, !dbg !9496

if.end30:                                         ; preds = %if.end23
  %flags = getelementptr inbounds %struct.physdev_irq_status_query, %struct.physdev_irq_status_query* %irq_status, i32 0, i32 1, !dbg !9497
  %8 = load i32, i32* %flags, align 4, !dbg !9497
  %and = and i32 %8, 2, !dbg !9498
  %tobool31 = icmp ne i32 %and, 0, !dbg !9499
  %lnot32 = xor i1 %tobool31, true, !dbg !9499
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !9499
  store i32 %lnot.ext33, i32* %retval, align 4, !dbg !9500
  br label %return, !dbg !9500

return:                                           ; preds = %if.end30, %if.then29, %if.then22
  %9 = load i32, i32* %retval, align 4, !dbg !9501
  ret i32 %9, !dbg !9501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_irq_resume() #0 !dbg !9502 {
entry:
  %cpu = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.irq_info*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.irq_info*, align 8
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !9503, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !9505, metadata !DIExpression()), !dbg !9506
  call void @xen_evtchn_resume() #12, !dbg !9507
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9508, metadata !DIExpression()), !dbg !9511
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @xen_irq_list_head, i32 0, i32 0), align 8, !dbg !9511
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !9511
  store i8* %1, i8** %__mptr, align 8, !dbg !9511
  br label %do.body, !dbg !9511

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9512

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9511
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9511
  %3 = bitcast i8* %add.ptr to %struct.irq_info*, !dbg !9511
  store %struct.irq_info* %3, %struct.irq_info** %tmp, align 8, !dbg !9512
  %4 = load %struct.irq_info*, %struct.irq_info** %tmp, align 8, !dbg !9511
  store %struct.irq_info* %4, %struct.irq_info** %info, align 8, !dbg !9514
  br label %for.cond, !dbg !9514

for.cond:                                         ; preds = %do.end4, %do.end
  %5 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9515
  %list = getelementptr inbounds %struct.irq_info, %struct.irq_info* %5, i32 0, i32 0, !dbg !9515
  %cmp = icmp eq %struct.list_head* %list, @xen_irq_list_head, !dbg !9515
  %lnot = xor i1 %cmp, true, !dbg !9515
  br i1 %lnot, label %for.body, label %for.end, !dbg !9514

for.body:                                         ; preds = %for.cond
  %6 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9517
  %evtchn = getelementptr inbounds %struct.irq_info, %struct.irq_info* %6, i32 0, i32 6, !dbg !9518
  store i32 0, i32* %evtchn, align 4, !dbg !9519
  br label %for.inc, !dbg !9517

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !9520, metadata !DIExpression()), !dbg !9522
  %7 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9522
  %list2 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %7, i32 0, i32 0, !dbg !9522
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list2, i32 0, i32 0, !dbg !9522
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9522
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !9522
  store i8* %9, i8** %__mptr1, align 8, !dbg !9522
  br label %do.body3, !dbg !9522

do.body3:                                         ; preds = %for.inc
  br label %do.end4, !dbg !9523

do.end4:                                          ; preds = %do.body3
  %10 = load i8*, i8** %__mptr1, align 8, !dbg !9522
  %add.ptr6 = getelementptr i8, i8* %10, i64 0, !dbg !9522
  %11 = bitcast i8* %add.ptr6 to %struct.irq_info*, !dbg !9522
  store %struct.irq_info* %11, %struct.irq_info** %tmp5, align 8, !dbg !9523
  %12 = load %struct.irq_info*, %struct.irq_info** %tmp5, align 8, !dbg !9522
  store %struct.irq_info* %12, %struct.irq_info** %info, align 8, !dbg !9515
  br label %for.cond, !dbg !9515, !llvm.loop !9525

for.end:                                          ; preds = %for.cond
  call void @clear_evtchn_to_irq_all() #12, !dbg !9527
  store i32 0, i32* %cpu, align 4, !dbg !9528
  br label %for.cond7, !dbg !9528

for.cond7:                                        ; preds = %for.inc10, %for.end
  %13 = load i32, i32* %cpu, align 4, !dbg !9530
  %cmp8 = icmp ult i32 %13, 1, !dbg !9530
  br i1 %cmp8, label %for.body9, label %for.end11, !dbg !9528

for.body9:                                        ; preds = %for.cond7
  %14 = load i32, i32* %cpu, align 4, !dbg !9532
  call void @restore_cpu_virqs(i32 %14) #12, !dbg !9534
  %15 = load i32, i32* %cpu, align 4, !dbg !9535
  call void @restore_cpu_ipis(i32 %15) #12, !dbg !9536
  br label %for.inc10, !dbg !9537

for.inc10:                                        ; preds = %for.body9
  %16 = load i32, i32* %cpu, align 4, !dbg !9530
  %inc = add i32 %16, 1, !dbg !9530
  store i32 %inc, i32* %cpu, align 4, !dbg !9530
  br label %for.cond7, !dbg !9530, !llvm.loop !9538

for.end11:                                        ; preds = %for.cond7
  call void @restore_pirqs() #12, !dbg !9540
  ret void, !dbg !9541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xen_evtchn_resume() #0 !dbg !9542 {
entry:
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !9543
  %resume = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 11, !dbg !9545
  %1 = load void ()*, void ()** %resume, align 8, !dbg !9545
  %tobool = icmp ne void ()* %1, null, !dbg !9543
  br i1 %tobool, label %if.then, label %if.end, !dbg !9546

if.then:                                          ; preds = %entry
  %2 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !9547
  %resume1 = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %2, i32 0, i32 11, !dbg !9548
  %3 = load void ()*, void ()** %resume1, align 8, !dbg !9548
  call void %3() #12, !dbg !9547
  br label %if.end, !dbg !9547

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9549
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_evtchn_to_irq_all() #0 !dbg !9550 {
entry:
  %row = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %row, metadata !9551, metadata !DIExpression()), !dbg !9552
  store i32 0, i32* %row, align 4, !dbg !9553
  br label %for.cond, !dbg !9555

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %row, align 4, !dbg !9556
  %conv = zext i32 %0 to i64, !dbg !9556
  %call = call i32 @xen_evtchn_max_channels() #12, !dbg !9558
  %conv1 = zext i32 %call to i64, !dbg !9558
  %div = udiv i64 %conv1, 1024, !dbg !9558
  %cmp = icmp ult i64 %conv, %div, !dbg !9559
  br i1 %cmp, label %for.body, label %for.end, !dbg !9560

for.body:                                         ; preds = %for.cond
  %1 = load i32**, i32*** @evtchn_to_irq, align 8, !dbg !9561
  %2 = load i32, i32* %row, align 4, !dbg !9564
  %idxprom = zext i32 %2 to i64, !dbg !9561
  %arrayidx = getelementptr i32*, i32** %1, i64 %idxprom, !dbg !9561
  %3 = load i32*, i32** %arrayidx, align 8, !dbg !9561
  %cmp3 = icmp eq i32* %3, null, !dbg !9565
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9566

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !9567

if.end:                                           ; preds = %for.body
  %4 = load i32, i32* %row, align 4, !dbg !9568
  call void @clear_evtchn_to_irq_row(i32 %4) #12, !dbg !9569
  br label %for.inc, !dbg !9570

for.inc:                                          ; preds = %if.end, %if.then
  %5 = load i32, i32* %row, align 4, !dbg !9571
  %inc = add i32 %5, 1, !dbg !9571
  store i32 %inc, i32* %row, align 4, !dbg !9571
  br label %for.cond, !dbg !9572, !llvm.loop !9573

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9575
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @restore_cpu_virqs(i32 %cpu) #0 !dbg !9576 {
entry:
  %cpu.addr = alloca i32, align 4
  %bind_virq = alloca %struct.evtchn_bind_virq, align 4
  %evtchn = alloca i32, align 4
  %virq = alloca i32, align 4
  %irq = alloca i32, align 4
  %tmp = alloca [24 x i32]*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca [24 x i32]*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !9577, metadata !DIExpression()), !dbg !9578
  call void @llvm.dbg.declare(metadata %struct.evtchn_bind_virq* %bind_virq, metadata !9579, metadata !DIExpression()), !dbg !9580
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !9581, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.declare(metadata i32* %virq, metadata !9583, metadata !DIExpression()), !dbg !9584
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !9585, metadata !DIExpression()), !dbg !9586
  store i32 0, i32* %virq, align 4, !dbg !9587
  br label %for.cond, !dbg !9589

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %virq, align 4, !dbg !9590
  %cmp = icmp slt i32 %0, 24, !dbg !9592
  br i1 %cmp, label %for.body, label %for.end, !dbg !9593

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !9594
  br label %do.body, !dbg !9598

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !9600, metadata !DIExpression()), !dbg !9602
  store i8* null, i8** %__vpp_verify, align 8, !dbg !9602
  %2 = load i8*, i8** %__vpp_verify, align 8, !dbg !9602
  br label %do.end, !dbg !9602

do.end:                                           ; preds = %do.body
  store [24 x i32]* @virq_to_irq, [24 x i32]** %tmp1, align 8, !dbg !9602
  %3 = load [24 x i32]*, [24 x i32]** %tmp1, align 8, !dbg !9598
  store [24 x i32]* %3, [24 x i32]** %tmp, align 8, !dbg !9594
  %4 = load [24 x i32]*, [24 x i32]** %tmp, align 8, !dbg !9594
  %5 = load i32, i32* %virq, align 4, !dbg !9603
  %idxprom = sext i32 %5 to i64, !dbg !9604
  %arrayidx = getelementptr [24 x i32], [24 x i32]* %4, i64 0, i64 %idxprom, !dbg !9604
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9604
  store i32 %6, i32* %irq, align 4, !dbg !9605
  %cmp2 = icmp eq i32 %6, -1, !dbg !9606
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9607

if.then:                                          ; preds = %do.end
  br label %for.inc, !dbg !9608

if.end:                                           ; preds = %do.end
  br label %do.body3, !dbg !9609

do.body3:                                         ; preds = %if.end
  %7 = load i32, i32* %irq, align 4, !dbg !9610
  %call = call i32 @virq_from_irq(i32 %7) #12, !dbg !9610
  %8 = load i32, i32* %virq, align 4, !dbg !9610
  %cmp4 = icmp ne i32 %call, %8, !dbg !9610
  %lnot = xor i1 %cmp4, true, !dbg !9610
  %lnot5 = xor i1 %lnot, true, !dbg !9610
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !9610
  %conv = sext i32 %lnot.ext to i64, !dbg !9610
  %tobool = icmp ne i64 %conv, 0, !dbg !9610
  br i1 %tobool, label %if.then6, label %if.end15, !dbg !9613

if.then6:                                         ; preds = %do.body3
  br label %do.body7, !dbg !9610

do.body7:                                         ; preds = %if.then6
  br label %do.body8, !dbg !9614

do.body8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !9616

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !9614

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1821, i32 0, i64 12) #6, !dbg !9618, !srcloc !9620
  br label %do.end11, !dbg !9618

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !9614

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 367) #6, !dbg !9621, !srcloc !9624
  unreachable, !dbg !9625

do.end13:                                         ; No predecessors!
  br label %do.end14, !dbg !9614

do.end14:                                         ; preds = %do.end13
  br label %if.end15, !dbg !9614

if.end15:                                         ; preds = %do.end14, %do.body3
  br label %do.end16, !dbg !9613

do.end16:                                         ; preds = %if.end15
  %9 = load i32, i32* %virq, align 4, !dbg !9626
  %virq17 = getelementptr inbounds %struct.evtchn_bind_virq, %struct.evtchn_bind_virq* %bind_virq, i32 0, i32 0, !dbg !9627
  store i32 %9, i32* %virq17, align 4, !dbg !9628
  %10 = load i32, i32* %cpu.addr, align 4, !dbg !9629
  %call18 = call i32 @xen_vcpu_nr(i32 %10) #12, !dbg !9630
  %vcpu = getelementptr inbounds %struct.evtchn_bind_virq, %struct.evtchn_bind_virq* %bind_virq, i32 0, i32 1, !dbg !9631
  store i32 %call18, i32* %vcpu, align 4, !dbg !9632
  %11 = bitcast %struct.evtchn_bind_virq* %bind_virq to i8*, !dbg !9633
  %call19 = call i32 @HYPERVISOR_event_channel_op(i32 1, i8* %11) #12, !dbg !9635
  %cmp20 = icmp ne i32 %call19, 0, !dbg !9636
  br i1 %cmp20, label %if.then22, label %if.end31, !dbg !9637

if.then22:                                        ; preds = %do.end16
  br label %do.body23, !dbg !9638

do.body23:                                        ; preds = %if.then22
  br label %do.body24, !dbg !9639

do.body24:                                        ; preds = %do.body23
  br label %do.end25, !dbg !9641

do.end25:                                         ; preds = %do.body24
  br label %do.body26, !dbg !9639

do.body26:                                        ; preds = %do.end25
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1828, i32 0, i64 12) #6, !dbg !9643, !srcloc !9645
  br label %do.end27, !dbg !9643

do.end27:                                         ; preds = %do.body26
  br label %do.body28, !dbg !9639

do.body28:                                        ; preds = %do.end27
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 368) #6, !dbg !9646, !srcloc !9649
  unreachable, !dbg !9650

do.end29:                                         ; No predecessors!
  br label %do.end30, !dbg !9639

do.end30:                                         ; preds = %do.end29
  br label %if.end31, !dbg !9639

if.end31:                                         ; preds = %do.end30, %do.end16
  %port = getelementptr inbounds %struct.evtchn_bind_virq, %struct.evtchn_bind_virq* %bind_virq, i32 0, i32 2, !dbg !9651
  %12 = load i32, i32* %port, align 4, !dbg !9651
  store i32 %12, i32* %evtchn, align 4, !dbg !9652
  %13 = load i32, i32* %cpu.addr, align 4, !dbg !9653
  %14 = load i32, i32* %irq, align 4, !dbg !9654
  %15 = load i32, i32* %evtchn, align 4, !dbg !9655
  %16 = load i32, i32* %virq, align 4, !dbg !9656
  %call32 = call i32 @xen_irq_info_virq_setup(i32 %13, i32 %14, i32 %15, i32 %16) #12, !dbg !9657
  %17 = load i32, i32* %evtchn, align 4, !dbg !9658
  %18 = load i32, i32* %cpu.addr, align 4, !dbg !9659
  call void @bind_evtchn_to_cpu(i32 %17, i32 %18) #12, !dbg !9660
  br label %for.inc, !dbg !9661

for.inc:                                          ; preds = %if.end31, %if.then
  %19 = load i32, i32* %virq, align 4, !dbg !9662
  %inc = add i32 %19, 1, !dbg !9662
  store i32 %inc, i32* %virq, align 4, !dbg !9662
  br label %for.cond, !dbg !9663, !llvm.loop !9664

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @restore_cpu_ipis(i32 %cpu) #0 !dbg !9667 {
entry:
  %cpu.addr = alloca i32, align 4
  %bind_ipi = alloca %struct.evtchn_bind_ipi, align 4
  %evtchn = alloca i32, align 4
  %ipi = alloca i32, align 4
  %irq = alloca i32, align 4
  %tmp = alloca [6 x i32]*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca [6 x i32]*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !9668, metadata !DIExpression()), !dbg !9669
  call void @llvm.dbg.declare(metadata %struct.evtchn_bind_ipi* %bind_ipi, metadata !9670, metadata !DIExpression()), !dbg !9671
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !9672, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.declare(metadata i32* %ipi, metadata !9674, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !9676, metadata !DIExpression()), !dbg !9677
  store i32 0, i32* %ipi, align 4, !dbg !9678
  br label %for.cond, !dbg !9680

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ipi, align 4, !dbg !9681
  %cmp = icmp slt i32 %0, 6, !dbg !9683
  br i1 %cmp, label %for.body, label %for.end, !dbg !9684

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !9685
  br label %do.body, !dbg !9689

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !9691, metadata !DIExpression()), !dbg !9693
  store i8* null, i8** %__vpp_verify, align 8, !dbg !9693
  %2 = load i8*, i8** %__vpp_verify, align 8, !dbg !9693
  br label %do.end, !dbg !9693

do.end:                                           ; preds = %do.body
  store [6 x i32]* @ipi_to_irq, [6 x i32]** %tmp1, align 8, !dbg !9693
  %3 = load [6 x i32]*, [6 x i32]** %tmp1, align 8, !dbg !9689
  store [6 x i32]* %3, [6 x i32]** %tmp, align 8, !dbg !9685
  %4 = load [6 x i32]*, [6 x i32]** %tmp, align 8, !dbg !9685
  %5 = load i32, i32* %ipi, align 4, !dbg !9694
  %idxprom = sext i32 %5 to i64, !dbg !9695
  %arrayidx = getelementptr [6 x i32], [6 x i32]* %4, i64 0, i64 %idxprom, !dbg !9695
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9695
  store i32 %6, i32* %irq, align 4, !dbg !9696
  %cmp2 = icmp eq i32 %6, -1, !dbg !9697
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9698

if.then:                                          ; preds = %do.end
  br label %for.inc, !dbg !9699

if.end:                                           ; preds = %do.end
  br label %do.body3, !dbg !9700

do.body3:                                         ; preds = %if.end
  %7 = load i32, i32* %irq, align 4, !dbg !9701
  %call = call i32 @ipi_from_irq(i32 %7) #12, !dbg !9701
  %8 = load i32, i32* %ipi, align 4, !dbg !9701
  %cmp4 = icmp ne i32 %call, %8, !dbg !9701
  %lnot = xor i1 %cmp4, true, !dbg !9701
  %lnot5 = xor i1 %lnot, true, !dbg !9701
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !9701
  %conv = sext i32 %lnot.ext to i64, !dbg !9701
  %tobool = icmp ne i64 %conv, 0, !dbg !9701
  br i1 %tobool, label %if.then6, label %if.end15, !dbg !9704

if.then6:                                         ; preds = %do.body3
  br label %do.body7, !dbg !9701

do.body7:                                         ; preds = %if.then6
  br label %do.body8, !dbg !9705

do.body8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !9707

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !9705

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1847, i32 0, i64 12) #6, !dbg !9709, !srcloc !9711
  br label %do.end11, !dbg !9709

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !9705

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 369) #6, !dbg !9712, !srcloc !9715
  unreachable, !dbg !9716

do.end13:                                         ; No predecessors!
  br label %do.end14, !dbg !9705

do.end14:                                         ; preds = %do.end13
  br label %if.end15, !dbg !9705

if.end15:                                         ; preds = %do.end14, %do.body3
  br label %do.end16, !dbg !9704

do.end16:                                         ; preds = %if.end15
  %9 = load i32, i32* %cpu.addr, align 4, !dbg !9717
  %call17 = call i32 @xen_vcpu_nr(i32 %9) #12, !dbg !9718
  %vcpu = getelementptr inbounds %struct.evtchn_bind_ipi, %struct.evtchn_bind_ipi* %bind_ipi, i32 0, i32 0, !dbg !9719
  store i32 %call17, i32* %vcpu, align 4, !dbg !9720
  %10 = bitcast %struct.evtchn_bind_ipi* %bind_ipi to i8*, !dbg !9721
  %call18 = call i32 @HYPERVISOR_event_channel_op(i32 7, i8* %10) #12, !dbg !9723
  %cmp19 = icmp ne i32 %call18, 0, !dbg !9724
  br i1 %cmp19, label %if.then21, label %if.end30, !dbg !9725

if.then21:                                        ; preds = %do.end16
  br label %do.body22, !dbg !9726

do.body22:                                        ; preds = %if.then21
  br label %do.body23, !dbg !9727

do.body23:                                        ; preds = %do.body22
  br label %do.end24, !dbg !9729

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !9727

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1853, i32 0, i64 12) #6, !dbg !9731, !srcloc !9733
  br label %do.end26, !dbg !9731

do.end26:                                         ; preds = %do.body25
  br label %do.body27, !dbg !9727

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 370) #6, !dbg !9734, !srcloc !9737
  unreachable, !dbg !9738

do.end28:                                         ; No predecessors!
  br label %do.end29, !dbg !9727

do.end29:                                         ; preds = %do.end28
  br label %if.end30, !dbg !9727

if.end30:                                         ; preds = %do.end29, %do.end16
  %port = getelementptr inbounds %struct.evtchn_bind_ipi, %struct.evtchn_bind_ipi* %bind_ipi, i32 0, i32 1, !dbg !9739
  %11 = load i32, i32* %port, align 4, !dbg !9739
  store i32 %11, i32* %evtchn, align 4, !dbg !9740
  %12 = load i32, i32* %cpu.addr, align 4, !dbg !9741
  %13 = load i32, i32* %irq, align 4, !dbg !9742
  %14 = load i32, i32* %evtchn, align 4, !dbg !9743
  %15 = load i32, i32* %ipi, align 4, !dbg !9744
  %call31 = call i32 @xen_irq_info_ipi_setup(i32 %12, i32 %13, i32 %14, i32 %15) #12, !dbg !9745
  %16 = load i32, i32* %evtchn, align 4, !dbg !9746
  %17 = load i32, i32* %cpu.addr, align 4, !dbg !9747
  call void @bind_evtchn_to_cpu(i32 %16, i32 %17) #12, !dbg !9748
  br label %for.inc, !dbg !9749

for.inc:                                          ; preds = %if.end30, %if.then
  %18 = load i32, i32* %ipi, align 4, !dbg !9750
  %inc = add i32 %18, 1, !dbg !9750
  store i32 %inc, i32* %ipi, align 4, !dbg !9750
  br label %for.cond, !dbg !9751, !llvm.loop !9752

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @restore_pirqs() #0 !dbg !9755 {
entry:
  %pirq = alloca i32, align 4
  %rc = alloca i32, align 4
  %irq = alloca i32, align 4
  %gsi = alloca i32, align 4
  %map_irq = alloca %struct.physdev_map_pirq, align 8
  %info = alloca %struct.irq_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.irq_info*, align 8
  %__mptr20 = alloca i8*, align 8
  %tmp24 = alloca %struct.irq_info*, align 8
  call void @llvm.dbg.declare(metadata i32* %pirq, metadata !9756, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9758, metadata !DIExpression()), !dbg !9759
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !9760, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.declare(metadata i32* %gsi, metadata !9762, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.declare(metadata %struct.physdev_map_pirq* %map_irq, metadata !9764, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !9776, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9778, metadata !DIExpression()), !dbg !9781
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @xen_irq_list_head, i32 0, i32 0), align 8, !dbg !9781
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !9781
  store i8* %1, i8** %__mptr, align 8, !dbg !9781
  br label %do.body, !dbg !9781

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9782

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9781
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9781
  %3 = bitcast i8* %add.ptr to %struct.irq_info*, !dbg !9781
  store %struct.irq_info* %3, %struct.irq_info** %tmp, align 8, !dbg !9782
  %4 = load %struct.irq_info*, %struct.irq_info** %tmp, align 8, !dbg !9781
  store %struct.irq_info* %4, %struct.irq_info** %info, align 8, !dbg !9784
  br label %for.cond, !dbg !9784

for.cond:                                         ; preds = %do.end23, %do.end
  %5 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9785
  %list = getelementptr inbounds %struct.irq_info, %struct.irq_info* %5, i32 0, i32 0, !dbg !9785
  %cmp = icmp eq %struct.list_head* %list, @xen_irq_list_head, !dbg !9785
  %lnot = xor i1 %cmp, true, !dbg !9785
  br i1 %lnot, label %for.body, label %for.end, !dbg !9784

for.body:                                         ; preds = %for.cond
  %6 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9787
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %6, i32 0, i32 4, !dbg !9790
  %7 = load i32, i32* %type, align 4, !dbg !9790
  %cmp1 = icmp ne i32 %7, 1, !dbg !9791
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9792

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !9793

if.end:                                           ; preds = %for.body
  %8 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9794
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %8, i32 0, i32 11, !dbg !9795
  %pirq2 = bitcast %union.anon.0* %u to %struct.anon*, !dbg !9796
  %pirq3 = getelementptr inbounds %struct.anon, %struct.anon* %pirq2, i32 0, i32 0, !dbg !9797
  %9 = load i16, i16* %pirq3, align 8, !dbg !9797
  %conv = zext i16 %9 to i32, !dbg !9794
  store i32 %conv, i32* %pirq, align 4, !dbg !9798
  %10 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9799
  %u4 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %10, i32 0, i32 11, !dbg !9800
  %pirq5 = bitcast %union.anon.0* %u4 to %struct.anon*, !dbg !9801
  %gsi6 = getelementptr inbounds %struct.anon, %struct.anon* %pirq5, i32 0, i32 1, !dbg !9802
  %11 = load i16, i16* %gsi6, align 2, !dbg !9802
  %conv7 = zext i16 %11 to i32, !dbg !9799
  store i32 %conv7, i32* %gsi, align 4, !dbg !9803
  %12 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9804
  %irq8 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %12, i32 0, i32 5, !dbg !9805
  %13 = load i32, i32* %irq8, align 8, !dbg !9805
  store i32 %13, i32* %irq, align 4, !dbg !9806
  %14 = load i32, i32* %gsi, align 4, !dbg !9807
  %tobool = icmp ne i32 %14, 0, !dbg !9807
  br i1 %tobool, label %if.end10, label %if.then9, !dbg !9809

if.then9:                                         ; preds = %if.end
  br label %for.inc, !dbg !9810

if.end10:                                         ; preds = %if.end
  %domid = getelementptr inbounds %struct.physdev_map_pirq, %struct.physdev_map_pirq* %map_irq, i32 0, i32 0, !dbg !9811
  store i16 32752, i16* %domid, align 8, !dbg !9812
  %type11 = getelementptr inbounds %struct.physdev_map_pirq, %struct.physdev_map_pirq* %map_irq, i32 0, i32 1, !dbg !9813
  store i32 1, i32* %type11, align 4, !dbg !9814
  %15 = load i32, i32* %gsi, align 4, !dbg !9815
  %index = getelementptr inbounds %struct.physdev_map_pirq, %struct.physdev_map_pirq* %map_irq, i32 0, i32 2, !dbg !9816
  store i32 %15, i32* %index, align 8, !dbg !9817
  %16 = load i32, i32* %pirq, align 4, !dbg !9818
  %pirq12 = getelementptr inbounds %struct.physdev_map_pirq, %struct.physdev_map_pirq* %map_irq, i32 0, i32 3, !dbg !9819
  store i32 %16, i32* %pirq12, align 4, !dbg !9820
  %17 = bitcast %struct.physdev_map_pirq* %map_irq to i8*, !dbg !9821
  %call = call i32 @HYPERVISOR_physdev_op(i32 13, i8* %17) #12, !dbg !9822
  store i32 %call, i32* %rc, align 4, !dbg !9823
  %18 = load i32, i32* %rc, align 4, !dbg !9824
  %tobool13 = icmp ne i32 %18, 0, !dbg !9824
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !9826

if.then14:                                        ; preds = %if.end10
  %19 = load i32, i32* %gsi, align 4, !dbg !9827
  %20 = load i32, i32* %irq, align 4, !dbg !9827
  %21 = load i32, i32* %pirq, align 4, !dbg !9827
  %22 = load i32, i32* %rc, align 4, !dbg !9827
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.16, i64 0, i64 0), i32 %19, i32 %20, i32 %21, i32 %22) #13, !dbg !9827
  %23 = load i32, i32* %irq, align 4, !dbg !9829
  call void @xen_free_irq(i32 %23) #12, !dbg !9830
  br label %for.inc, !dbg !9831

if.end16:                                         ; preds = %if.end10
  %24 = load i32, i32* %irq, align 4, !dbg !9832
  %pirq17 = getelementptr inbounds %struct.physdev_map_pirq, %struct.physdev_map_pirq* %map_irq, i32 0, i32 3, !dbg !9833
  %25 = load i32, i32* %pirq17, align 4, !dbg !9833
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i32 %24, i32 %25) #13, !dbg !9834
  %26 = load i32, i32* %irq, align 4, !dbg !9835
  %call19 = call i32 @__startup_pirq(i32 %26) #12, !dbg !9836
  br label %for.inc, !dbg !9837

for.inc:                                          ; preds = %if.end16, %if.then14, %if.then9, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr20, metadata !9838, metadata !DIExpression()), !dbg !9840
  %27 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !9840
  %list21 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %27, i32 0, i32 0, !dbg !9840
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list21, i32 0, i32 0, !dbg !9840
  %28 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9840
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !9840
  store i8* %29, i8** %__mptr20, align 8, !dbg !9840
  br label %do.body22, !dbg !9840

do.body22:                                        ; preds = %for.inc
  br label %do.end23, !dbg !9841

do.end23:                                         ; preds = %do.body22
  %30 = load i8*, i8** %__mptr20, align 8, !dbg !9840
  %add.ptr25 = getelementptr i8, i8* %30, i64 0, !dbg !9840
  %31 = bitcast i8* %add.ptr25 to %struct.irq_info*, !dbg !9840
  store %struct.irq_info* %31, %struct.irq_info** %tmp24, align 8, !dbg !9841
  %32 = load %struct.irq_info*, %struct.irq_info** %tmp24, align 8, !dbg !9840
  store %struct.irq_info* %32, %struct.irq_info** %info, align 8, !dbg !9785
  br label %for.cond, !dbg !9785, !llvm.loop !9843

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xen_set_callback_via(i64 %via) #0 !dbg !9846 {
entry:
  %via.addr = alloca i64, align 8
  %a = alloca %struct.xen_hvm_param, align 8
  store i64 %via, i64* %via.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %via.addr, metadata !9849, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.declare(metadata %struct.xen_hvm_param* %a, metadata !9851, metadata !DIExpression()), !dbg !9858
  %domid = getelementptr inbounds %struct.xen_hvm_param, %struct.xen_hvm_param* %a, i32 0, i32 0, !dbg !9859
  store i16 32752, i16* %domid, align 8, !dbg !9860
  %index = getelementptr inbounds %struct.xen_hvm_param, %struct.xen_hvm_param* %a, i32 0, i32 1, !dbg !9861
  store i32 0, i32* %index, align 4, !dbg !9862
  %0 = load i64, i64* %via.addr, align 8, !dbg !9863
  %value = getelementptr inbounds %struct.xen_hvm_param, %struct.xen_hvm_param* %a, i32 0, i32 2, !dbg !9864
  store i64 %0, i64* %value, align 8, !dbg !9865
  %1 = bitcast %struct.xen_hvm_param* %a to i8*, !dbg !9866
  %call = call i64 @HYPERVISOR_hvm_op(i32 0, i8* %1) #12, !dbg !9867
  %conv = trunc i64 %call to i32, !dbg !9867
  ret i32 %conv, !dbg !9868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @HYPERVISOR_hvm_op(i32 %op, i8* %arg) #0 !dbg !9869 {
entry:
  %op.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %__res = alloca i64, align 8
  %__arg1 = alloca i64, align 8
  %__arg2 = alloca i64, align 8
  %__arg3 = alloca i64, align 8
  %__arg4 = alloca i64, align 8
  %__arg5 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !9872, metadata !DIExpression()), !dbg !9873
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9874, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.declare(metadata i64* %__res, metadata !9876, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.declare(metadata i64* %__arg1, metadata !9879, metadata !DIExpression()), !dbg !9878
  %0 = load i64, i64* %__arg1, align 8, !dbg !9878
  store i64 %0, i64* %__arg1, align 8, !dbg !9878
  call void @llvm.dbg.declare(metadata i64* %__arg2, metadata !9880, metadata !DIExpression()), !dbg !9878
  %1 = load i64, i64* %__arg2, align 8, !dbg !9878
  store i64 %1, i64* %__arg2, align 8, !dbg !9878
  call void @llvm.dbg.declare(metadata i64* %__arg3, metadata !9881, metadata !DIExpression()), !dbg !9878
  %2 = load i64, i64* %__arg3, align 8, !dbg !9878
  store i64 %2, i64* %__arg3, align 8, !dbg !9878
  call void @llvm.dbg.declare(metadata i64* %__arg4, metadata !9882, metadata !DIExpression()), !dbg !9878
  %3 = load i64, i64* %__arg4, align 8, !dbg !9878
  store i64 %3, i64* %__arg4, align 8, !dbg !9878
  call void @llvm.dbg.declare(metadata i64* %__arg5, metadata !9883, metadata !DIExpression()), !dbg !9878
  %4 = load i64, i64* %__arg5, align 8, !dbg !9878
  store i64 %4, i64* %__arg5, align 8, !dbg !9878
  %5 = load i32, i32* %op.addr, align 4, !dbg !9878
  %conv = sext i32 %5 to i64, !dbg !9878
  store i64 %conv, i64* %__arg1, align 8, !dbg !9878
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !9878
  %7 = ptrtoint i8* %6 to i64, !dbg !9878
  store i64 %7, i64* %__arg2, align 8, !dbg !9878
  %8 = call i64 @llvm.read_register.i64(metadata !6565), !dbg !9878
  %9 = load i64, i64* %__arg1, align 8, !dbg !9878
  %10 = load i64, i64* %__arg2, align 8, !dbg !9878
  %11 = call { i64, i64, i64, i64 } asm sideeffect "call hypercall_page+${4:c}", "={rax},={rsp},={rdi},={rsi},i,1,2,3,~{memory},~{r8},~{r10},~{rdx},~{dirflag},~{fpsr},~{flags}"(i64 1088, i64 %8, i64 %9, i64 %10) #6, !dbg !9878, !srcloc !9884
  %asmresult = extractvalue { i64, i64, i64, i64 } %11, 0, !dbg !9878
  %asmresult1 = extractvalue { i64, i64, i64, i64 } %11, 1, !dbg !9878
  %asmresult2 = extractvalue { i64, i64, i64, i64 } %11, 2, !dbg !9878
  %asmresult3 = extractvalue { i64, i64, i64, i64 } %11, 3, !dbg !9878
  store i64 %asmresult, i64* %__res, align 8, !dbg !9878
  call void @llvm.write_register.i64(metadata !6565, i64 %asmresult1), !dbg !9878
  store i64 %asmresult2, i64* %__arg1, align 8, !dbg !9878
  store i64 %asmresult3, i64* %__arg2, align 8, !dbg !9878
  %12 = load i64, i64* %__res, align 8, !dbg !9878
  store i64 %12, i64* %tmp, align 8, !dbg !9878
  %13 = load i64, i64* %tmp, align 8, !dbg !9878
  ret i64 %13, !dbg !9885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_setup_callback_vector() #0 !dbg !9886 {
entry:
  %callback_via = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %callback_via, metadata !9887, metadata !DIExpression()), !dbg !9888
  %0 = load i32, i32* @xen_have_vector_callback, align 4, !dbg !9889
  %tobool = icmp ne i32 %0, 0, !dbg !9889
  br i1 %tobool, label %if.then, label %if.end4, !dbg !9891

if.then:                                          ; preds = %entry
  store i64 144115188075856115, i64* %callback_via, align 8, !dbg !9892
  %1 = load i64, i64* %callback_via, align 8, !dbg !9894
  %call = call i32 @xen_set_callback_via(i64 %1) #12, !dbg !9896
  %tobool1 = icmp ne i32 %call, 0, !dbg !9896
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !9897

if.then2:                                         ; preds = %if.then
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.8, i64 0, i64 0)) #13, !dbg !9898
  store i32 0, i32* @xen_have_vector_callback, align 4, !dbg !9900
  br label %if.end, !dbg !9901

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end4, !dbg !9902

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !9903
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @xen_init_IRQ() #4 section ".init.text" !dbg !9904 {
entry:
  %ret = alloca i32, align 4
  %evtchn = alloca i32, align 4
  %rc = alloca i32, align 4
  %eoi_gmfn = alloca %struct.physdev_pirq_eoi_gmfn, align 8
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9905, metadata !DIExpression()), !dbg !9906
  store i32 -22, i32* %ret, align 4, !dbg !9906
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !9907, metadata !DIExpression()), !dbg !9908
  %0 = load i8, i8* @xen_fifo_events, align 1, !dbg !9909
  %tobool = trunc i8 %0 to i1, !dbg !9909
  br i1 %tobool, label %if.then, label %if.end, !dbg !9911

if.then:                                          ; preds = %entry
  %call = call i32 @xen_evtchn_fifo_init() #12, !dbg !9912
  store i32 %call, i32* %ret, align 4, !dbg !9913
  br label %if.end, !dbg !9914

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %ret, align 4, !dbg !9915
  %cmp = icmp slt i32 %1, 0, !dbg !9917
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !9918

if.then1:                                         ; preds = %if.end
  call void @xen_evtchn_2l_init() #12, !dbg !9919
  store i8 0, i8* @xen_fifo_events, align 1, !dbg !9921
  br label %if.end2, !dbg !9922

if.end2:                                          ; preds = %if.then1, %if.end
  call void @xen_cpu_init_eoi(i32 0) #12, !dbg !9923
  %call3 = call i32 @cpuhp_setup_state_nocalls(i32 51, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i32 (i32)* @xen_evtchn_cpu_prepare, i32 (i32)* @xen_evtchn_cpu_dead) #12, !dbg !9924
  %call4 = call i32 @xen_evtchn_max_channels() #12, !dbg !9925
  %conv = zext i32 %call4 to i64, !dbg !9925
  %div = udiv i64 %conv, 1024, !dbg !9925
  %call5 = call i8* @kcalloc(i64 %div, i64 8, i32 3264) #12, !dbg !9926
  %2 = bitcast i8* %call5 to i32**, !dbg !9926
  store i32** %2, i32*** @evtchn_to_irq, align 8, !dbg !9927
  br label %do.body, !dbg !9928

do.body:                                          ; preds = %if.end2
  %3 = load i32**, i32*** @evtchn_to_irq, align 8, !dbg !9929
  %tobool6 = icmp ne i32** %3, null, !dbg !9929
  %lnot = xor i1 %tobool6, true, !dbg !9929
  %lnot7 = xor i1 %lnot, true, !dbg !9929
  %lnot8 = xor i1 %lnot7, true, !dbg !9929
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !9929
  %conv9 = sext i32 %lnot.ext to i64, !dbg !9929
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !9929
  br i1 %tobool10, label %if.then11, label %if.end19, !dbg !9932

if.then11:                                        ; preds = %do.body
  br label %do.body12, !dbg !9929

do.body12:                                        ; preds = %if.then11
  br label %do.body13, !dbg !9933

do.body13:                                        ; preds = %do.body12
  br label %do.end, !dbg !9935

do.end:                                           ; preds = %do.body13
  br label %do.body14, !dbg !9933

do.body14:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 2098, i32 0, i64 12) #6, !dbg !9937, !srcloc !9939
  br label %do.end15, !dbg !9937

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !9933

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 376) #6, !dbg !9940, !srcloc !9943
  unreachable, !dbg !9944

do.end17:                                         ; No predecessors!
  br label %do.end18, !dbg !9933

do.end18:                                         ; preds = %do.end17
  br label %if.end19, !dbg !9933

if.end19:                                         ; preds = %do.end18, %do.body
  br label %do.end20, !dbg !9932

do.end20:                                         ; preds = %if.end19
  store i32 0, i32* %evtchn, align 4, !dbg !9945
  br label %for.cond, !dbg !9947

for.cond:                                         ; preds = %for.inc, %do.end20
  %4 = load i32, i32* %evtchn, align 4, !dbg !9948
  %call21 = call i32 @xen_evtchn_nr_channels() #12, !dbg !9950
  %cmp22 = icmp ult i32 %4, %call21, !dbg !9951
  br i1 %cmp22, label %for.body, label %for.end, !dbg !9952

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %evtchn, align 4, !dbg !9953
  call void @mask_evtchn(i32 %5) #12, !dbg !9954
  br label %for.inc, !dbg !9954

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %evtchn, align 4, !dbg !9955
  %inc = add i32 %6, 1, !dbg !9955
  store i32 %inc, i32* %evtchn, align 4, !dbg !9955
  br label %for.cond, !dbg !9956, !llvm.loop !9957

for.end:                                          ; preds = %for.cond
  store i1 (i32)* @pirq_needs_eoi_flag, i1 (i32)** @pirq_needs_eoi, align 8, !dbg !9959
  %7 = load i32, i32* @xen_domain_type, align 4, !dbg !9960
  %cmp24 = icmp eq i32 %7, 1, !dbg !9960
  br i1 %cmp24, label %if.then26, label %if.end33, !dbg !9962

if.then26:                                        ; preds = %for.end
  %8 = load i32, i32* @xen_domain_type, align 4, !dbg !9963
  %cmp27 = icmp ne i32 %8, 0, !dbg !9963
  br i1 %cmp27, label %land.lhs.true, label %if.end32, !dbg !9963

land.lhs.true:                                    ; preds = %if.then26
  %9 = load i32, i32* @xen_start_flags, align 4, !dbg !9963
  %and = and i32 %9, 2, !dbg !9963
  %tobool29 = icmp ne i32 %and, 0, !dbg !9963
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !9966

if.then30:                                        ; preds = %land.lhs.true
  %call31 = call i32 @pci_xen_initial_domain() #13, !dbg !9967
  br label %if.end32, !dbg !9967

if.end32:                                         ; preds = %if.then30, %land.lhs.true, %if.then26
  br label %if.end33, !dbg !9968

if.end33:                                         ; preds = %if.end32, %for.end
  %call34 = call i32 @xen_feature(i32 8) #12, !dbg !9969
  %tobool35 = icmp ne i32 %call34, 0, !dbg !9969
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !9971

if.then36:                                        ; preds = %if.end33
  call void @xen_setup_callback_vector() #12, !dbg !9972
  call void @xen_alloc_callback_vector() #13, !dbg !9974
  br label %if.end37, !dbg !9975

if.end37:                                         ; preds = %if.then36, %if.end33
  %10 = load i32, i32* @xen_domain_type, align 4, !dbg !9976
  %cmp38 = icmp eq i32 %10, 2, !dbg !9976
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !9978

if.then40:                                        ; preds = %if.end37
  call void @native_init_IRQ() #12, !dbg !9979
  %call41 = call i32 @pci_xen_hvm_init() #13, !dbg !9981
  br label %if.end51, !dbg !9982

if.else:                                          ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9983, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.declare(metadata %struct.physdev_pirq_eoi_gmfn* %eoi_gmfn, metadata !9986, metadata !DIExpression()), !dbg !9990
  %call42 = call i64 @__get_free_pages(i32 3520, i32 0) #12, !dbg !9991
  %11 = inttoptr i64 %call42 to i8*, !dbg !9992
  %12 = bitcast i8* %11 to i64*, !dbg !9992
  store i64* %12, i64** @pirq_eoi_map, align 8, !dbg !9993
  %13 = load i64*, i64** @pirq_eoi_map, align 8, !dbg !9994
  %14 = ptrtoint i64* %13 to i64, !dbg !9994
  %call43 = call i64 @__phys_addr_nodebug(i64 %14) #12, !dbg !9994
  %shr = lshr i64 %call43, 12, !dbg !9994
  %call44 = call i64 @pfn_to_gfn(i64 %shr) #12, !dbg !9994
  %gmfn = getelementptr inbounds %struct.physdev_pirq_eoi_gmfn, %struct.physdev_pirq_eoi_gmfn* %eoi_gmfn, i32 0, i32 0, !dbg !9995
  store i64 %call44, i64* %gmfn, align 8, !dbg !9996
  %15 = bitcast %struct.physdev_pirq_eoi_gmfn* %eoi_gmfn to i8*, !dbg !9997
  %call45 = call i32 @HYPERVISOR_physdev_op(i32 28, i8* %15) #12, !dbg !9998
  store i32 %call45, i32* %rc, align 4, !dbg !9999
  %16 = load i32, i32* %rc, align 4, !dbg !10000
  %cmp46 = icmp ne i32 %16, 0, !dbg !10002
  br i1 %cmp46, label %if.then48, label %if.else49, !dbg !10003

if.then48:                                        ; preds = %if.else
  %17 = load i64*, i64** @pirq_eoi_map, align 8, !dbg !10004
  %18 = ptrtoint i64* %17 to i64, !dbg !10004
  call void @free_pages(i64 %18, i32 0) #12, !dbg !10004
  store i64* null, i64** @pirq_eoi_map, align 8, !dbg !10006
  br label %if.end50, !dbg !10007

if.else49:                                        ; preds = %if.else
  store i1 (i32)* @pirq_check_eoi_map, i1 (i32)** @pirq_needs_eoi, align 8, !dbg !10008
  br label %if.end50

if.end50:                                         ; preds = %if.else49, %if.then48
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then40
  ret void, !dbg !10009
}

; Function Attrs: noredzone
declare dso_local i32 @xen_evtchn_fifo_init() #2

; Function Attrs: noredzone
declare dso_local void @xen_evtchn_2l_init() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xen_cpu_init_eoi(i32 %cpu) #0 !dbg !10010 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10011, metadata !DIExpression()), !dbg !10017
  %cpu.addr = alloca i32, align 4
  %eoi = alloca %struct.lateeoi_work*, align 8
  %tmp = alloca %struct.lateeoi_work*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.lateeoi_work*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral16 = alloca %struct.spinlock, align 1
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !10020, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.declare(metadata %struct.lateeoi_work** %eoi, metadata !10022, metadata !DIExpression()), !dbg !10023
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !10024
  br label %do.body, !dbg !10026

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !10028, metadata !DIExpression()), !dbg !10030
  store i8* null, i8** %__vpp_verify, align 8, !dbg !10030
  %1 = load i8*, i8** %__vpp_verify, align 8, !dbg !10030
  br label %do.end, !dbg !10030

do.end:                                           ; preds = %do.body
  store %struct.lateeoi_work* @lateeoi, %struct.lateeoi_work** %tmp1, align 8, !dbg !10030
  %2 = load %struct.lateeoi_work*, %struct.lateeoi_work** %tmp1, align 8, !dbg !10026
  store %struct.lateeoi_work* %2, %struct.lateeoi_work** %tmp, align 8, !dbg !10024
  %3 = load %struct.lateeoi_work*, %struct.lateeoi_work** %tmp, align 8, !dbg !10024
  store %struct.lateeoi_work* %3, %struct.lateeoi_work** %eoi, align 8, !dbg !10023
  br label %do.body2, !dbg !10031

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !10032

do.body3:                                         ; preds = %do.body2
  %4 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10034
  %delayed = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %4, i32 0, i32 0, !dbg !10034
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %delayed, i32 0, i32 0, !dbg !10034
  call void @__init_work(%struct.work_struct* %work, i32 0) #12, !dbg !10034
  %5 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10034
  %delayed4 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %5, i32 0, i32 0, !dbg !10034
  %work5 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %delayed4, i32 0, i32 0, !dbg !10034
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work5, i32 0, i32 0, !dbg !10034
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !10034
  store i64 68719476704, i64* %counter, align 8, !dbg !10034
  %6 = bitcast %struct.atomic64_t* %data to i8*, !dbg !10034
  %7 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !10034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10034
  %8 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10034
  %delayed6 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %8, i32 0, i32 0, !dbg !10034
  %work7 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %delayed6, i32 0, i32 0, !dbg !10034
  %entry8 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work7, i32 0, i32 1, !dbg !10034
  call void @INIT_LIST_HEAD(%struct.list_head* %entry8) #12, !dbg !10034
  %9 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10034
  %delayed9 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %9, i32 0, i32 0, !dbg !10034
  %work10 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %delayed9, i32 0, i32 0, !dbg !10034
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work10, i32 0, i32 2, !dbg !10034
  store void (%struct.work_struct*)* @xen_irq_lateeoi_worker, void (%struct.work_struct*)** %func, align 8, !dbg !10034
  br label %do.end11, !dbg !10034

do.end11:                                         ; preds = %do.body3
  %10 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10032
  %delayed12 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %10, i32 0, i32 0, !dbg !10032
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %delayed12, i32 0, i32 1, !dbg !10032
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #12, !dbg !10032
  br label %do.end13, !dbg !10032

do.end13:                                         ; preds = %do.end11
  br label %do.body14, !dbg !10036

do.body14:                                        ; preds = %do.end13
  %11 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10037
  %eoi_list_lock = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %11, i32 0, i32 1, !dbg !10037
  store %struct.spinlock* %eoi_list_lock, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10038
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !10039
  %rlock.i = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !10039
  %14 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10037
  %eoi_list_lock15 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %14, i32 0, i32 1, !dbg !10037
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral16, i32 0, i32 0, !dbg !10037
  %rlock = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !10037
  %16 = bitcast %struct.spinlock* %eoi_list_lock15 to i8*, !dbg !10037
  %17 = bitcast %struct.spinlock* %.compoundliteral16 to i8*, !dbg !10037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 %17, i64 0, i1 false), !dbg !10037
  br label %do.end17, !dbg !10037

do.end17:                                         ; preds = %do.body14
  %18 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10040
  %eoi_list = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %18, i32 0, i32 2, !dbg !10041
  call void @INIT_LIST_HEAD(%struct.list_head* %eoi_list) #12, !dbg !10042
  ret void, !dbg !10043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpuhp_setup_state_nocalls(i32 %state, i8* %name, i32 (i32)* %startup, i32 (i32)* %teardown) #0 !dbg !10044 {
entry:
  %state.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %startup.addr = alloca i32 (i32)*, align 8
  %teardown.addr = alloca i32 (i32)*, align 8
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !10047, metadata !DIExpression()), !dbg !10048
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10049, metadata !DIExpression()), !dbg !10050
  store i32 (i32)* %startup, i32 (i32)** %startup.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32)** %startup.addr, metadata !10051, metadata !DIExpression()), !dbg !10052
  store i32 (i32)* %teardown, i32 (i32)** %teardown.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32)** %teardown.addr, metadata !10053, metadata !DIExpression()), !dbg !10054
  %0 = load i32, i32* %state.addr, align 4, !dbg !10055
  %1 = load i8*, i8** %name.addr, align 8, !dbg !10056
  %2 = load i32 (i32)*, i32 (i32)** %startup.addr, align 8, !dbg !10057
  %3 = load i32 (i32)*, i32 (i32)** %teardown.addr, align 8, !dbg !10058
  %call = call i32 @__cpuhp_setup_state(i32 %0, i8* %1, i1 zeroext false, i32 (i32)* %2, i32 (i32)* %3, i1 zeroext false) #12, !dbg !10059
  ret i32 %call, !dbg !10060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_evtchn_cpu_prepare(i32 %cpu) #0 !dbg !10061 {
entry:
  %cpu.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !10062, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10064, metadata !DIExpression()), !dbg !10065
  store i32 0, i32* %ret, align 4, !dbg !10065
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !10066
  call void @xen_cpu_init_eoi(i32 %0) #12, !dbg !10067
  %1 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !10068
  %percpu_init = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %1, i32 0, i32 12, !dbg !10070
  %2 = load i32 (i32)*, i32 (i32)** %percpu_init, align 8, !dbg !10070
  %tobool = icmp ne i32 (i32)* %2, null, !dbg !10068
  br i1 %tobool, label %if.then, label %if.end, !dbg !10071

if.then:                                          ; preds = %entry
  %3 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !10072
  %percpu_init1 = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %3, i32 0, i32 12, !dbg !10073
  %4 = load i32 (i32)*, i32 (i32)** %percpu_init1, align 8, !dbg !10073
  %5 = load i32, i32* %cpu.addr, align 4, !dbg !10074
  %call = call i32 %4(i32 %5) #12, !dbg !10072
  store i32 %call, i32* %ret, align 4, !dbg !10075
  br label %if.end, !dbg !10076

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !10077
  ret i32 %6, !dbg !10078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_evtchn_cpu_dead(i32 %cpu) #0 !dbg !10079 {
entry:
  %cpu.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !10080, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10082, metadata !DIExpression()), !dbg !10083
  store i32 0, i32* %ret, align 4, !dbg !10083
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !10084
  %percpu_deinit = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 13, !dbg !10086
  %1 = load i32 (i32)*, i32 (i32)** %percpu_deinit, align 8, !dbg !10086
  %tobool = icmp ne i32 (i32)* %1, null, !dbg !10084
  br i1 %tobool, label %if.then, label %if.end, !dbg !10087

if.then:                                          ; preds = %entry
  %2 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !10088
  %percpu_deinit1 = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %2, i32 0, i32 13, !dbg !10089
  %3 = load i32 (i32)*, i32 (i32)** %percpu_deinit1, align 8, !dbg !10089
  %4 = load i32, i32* %cpu.addr, align 4, !dbg !10090
  %call = call i32 %3(i32 %4) #12, !dbg !10088
  store i32 %call, i32* %ret, align 4, !dbg !10091
  br label %if.end, !dbg !10092

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %ret, align 4, !dbg !10093
  ret i32 %5, !dbg !10094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !10095 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10098, metadata !DIExpression()), !dbg !10099
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10100, metadata !DIExpression()), !dbg !10101
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10102, metadata !DIExpression()), !dbg !10103
  %0 = load i64, i64* %n.addr, align 8, !dbg !10104
  %1 = load i64, i64* %size.addr, align 8, !dbg !10105
  %2 = load i32, i32* %flags.addr, align 4, !dbg !10106
  %or = or i32 %2, 256, !dbg !10107
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #12, !dbg !10108
  ret i8* %call, !dbg !10109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mask_evtchn(i32 %port) #0 !dbg !10110 {
entry:
  %port.addr = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10111, metadata !DIExpression()), !dbg !10112
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !10113
  %mask = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 8, !dbg !10114
  %1 = load void (i32)*, void (i32)** %mask, align 8, !dbg !10114
  %2 = load i32, i32* %port.addr, align 4, !dbg !10115
  call void %1(i32 %2) #12, !dbg !10113
  ret void, !dbg !10116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pirq_needs_eoi_flag(i32 %irq) #0 !dbg !10117 {
entry:
  %irq.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10118, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !10120, metadata !DIExpression()), !dbg !10121
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10122
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !10123
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !10121
  br label %do.body, !dbg !10124

do.body:                                          ; preds = %entry
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !10125
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %1, i32 0, i32 4, !dbg !10125
  %2 = load i32, i32* %type, align 4, !dbg !10125
  %cmp = icmp ne i32 %2, 1, !dbg !10125
  %lnot = xor i1 %cmp, true, !dbg !10125
  %lnot1 = xor i1 %lnot, true, !dbg !10125
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10125
  %conv = sext i32 %lnot.ext to i64, !dbg !10125
  %tobool = icmp ne i64 %conv, 0, !dbg !10125
  br i1 %tobool, label %if.then, label %if.end, !dbg !10128

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !10125

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !10129

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !10131

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !10129

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 431, i32 0, i64 12) #6, !dbg !10133, !srcloc !10135
  br label %do.end5, !dbg !10133

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !10129

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 333) #6, !dbg !10136, !srcloc !10139
  unreachable, !dbg !10140

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !10129

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !10129

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !10128

do.end9:                                          ; preds = %if.end
  %3 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !10141
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %3, i32 0, i32 11, !dbg !10142
  %pirq = bitcast %union.anon.0* %u to %struct.anon*, !dbg !10143
  %flags = getelementptr inbounds %struct.anon, %struct.anon* %pirq, i32 0, i32 3, !dbg !10144
  %4 = load i8, i8* %flags, align 1, !dbg !10144
  %conv10 = zext i8 %4 to i32, !dbg !10141
  %and = and i32 %conv10, 1, !dbg !10145
  %tobool11 = icmp ne i32 %and, 0, !dbg !10141
  ret i1 %tobool11, !dbg !10146
}

; Function Attrs: cold noredzone
declare dso_local i32 @pci_xen_initial_domain() #3 section ".init.text"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_feature(i32 %flag) #0 !dbg !10147 {
entry:
  %flag.addr = alloca i32, align 4
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10149, metadata !DIExpression()), !dbg !10150
  %0 = load i32, i32* %flag.addr, align 4, !dbg !10151
  %idxprom = sext i32 %0 to i64, !dbg !10152
  %arrayidx = getelementptr [32 x i8], [32 x i8]* @xen_features, i64 0, i64 %idxprom, !dbg !10152
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10152
  %conv = zext i8 %1 to i32, !dbg !10152
  ret i32 %conv, !dbg !10153
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @xen_alloc_callback_vector() #4 section ".init.text" !dbg !10154 {
entry:
  %0 = load i32, i32* @xen_have_vector_callback, align 4, !dbg !10155
  %tobool = icmp ne i32 %0, 0, !dbg !10155
  br i1 %tobool, label %if.end, label %if.then, !dbg !10157

if.then:                                          ; preds = %entry
  br label %return, !dbg !10158

if.end:                                           ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.24, i64 0, i64 0)) #13, !dbg !10159
  call void @alloc_intr_gate(i32 243, i8* bitcast (void ()* @asm_sysvec_xen_hvm_callback to i8*)) #12, !dbg !10160
  br label %return, !dbg !10161

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10161
}

; Function Attrs: noredzone
declare dso_local void @native_init_IRQ() #2

; Function Attrs: cold noredzone
declare dso_local i32 @pci_xen_hvm_init() #3 section ".init.text"

; Function Attrs: noredzone
declare dso_local i64 @__get_free_pages(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pfn_to_gfn(i64 %pfn) #0 !dbg !10162 {
entry:
  %retval = alloca i64, align 8
  %pfn.addr = alloca i64, align 8
  store i64 %pfn, i64* %pfn.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pfn.addr, metadata !10166, metadata !DIExpression()), !dbg !10167
  %call = call i32 @xen_feature(i32 2) #12, !dbg !10168
  %tobool = icmp ne i32 %call, 0, !dbg !10168
  br i1 %tobool, label %if.then, label %if.else, !dbg !10170

if.then:                                          ; preds = %entry
  %0 = load i64, i64* %pfn.addr, align 8, !dbg !10171
  store i64 %0, i64* %retval, align 8, !dbg !10172
  br label %return, !dbg !10172

if.else:                                          ; preds = %entry
  %1 = load i64, i64* %pfn.addr, align 8, !dbg !10173
  %call1 = call i64 @pfn_to_mfn(i64 %1) #12, !dbg !10174
  store i64 %call1, i64* %retval, align 8, !dbg !10175
  br label %return, !dbg !10175

return:                                           ; preds = %if.else, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !10176
  ret i64 %2, !dbg !10176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !10177 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !10179, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.declare(metadata i64* %y, metadata !10181, metadata !DIExpression()), !dbg !10182
  %0 = load i64, i64* %x.addr, align 8, !dbg !10183
  %sub = sub i64 %0, -2147483648, !dbg !10184
  store i64 %sub, i64* %y, align 8, !dbg !10182
  %1 = load i64, i64* %y, align 8, !dbg !10185
  %2 = load i64, i64* %x.addr, align 8, !dbg !10186
  %3 = load i64, i64* %y, align 8, !dbg !10187
  %cmp = icmp ugt i64 %2, %3, !dbg !10188
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10189

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !10190
  br label %cond.end, !dbg !10189

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !10191
  %sub1 = sub i64 -2147483648, %5, !dbg !10192
  br label %cond.end, !dbg !10189

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !10189
  %add = add i64 %1, %cond, !dbg !10193
  store i64 %add, i64* %x.addr, align 8, !dbg !10194
  %6 = load i64, i64* %x.addr, align 8, !dbg !10195
  ret i64 %6, !dbg !10196
}

; Function Attrs: noredzone
declare dso_local void @free_pages(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pirq_check_eoi_map(i32 %irq) #0 !dbg !10197 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10200
  %call = call i32 @pirq_from_irq(i32 %0) #12, !dbg !10201
  %conv = zext i32 %call to i64, !dbg !10201
  %1 = load i64*, i64** @pirq_eoi_map, align 8, !dbg !10202
  %call1 = call zeroext i1 @test_bit(i64 %conv, i64* %1) #12, !dbg !10203
  ret i1 %call1, !dbg !10204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @nr_legacy_irqs() #0 !dbg !10205 {
entry:
  %0 = load %struct.legacy_pic*, %struct.legacy_pic** @legacy_pic, align 8, !dbg !10207
  %nr_legacy_irqs = getelementptr inbounds %struct.legacy_pic, %struct.legacy_pic* %0, i32 0, i32 0, !dbg !10208
  %1 = load i32, i32* %nr_legacy_irqs, align 8, !dbg !10208
  ret i32 %1, !dbg !10209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @irq_get_chip_data(i32 %irq) #0 !dbg !10210 {
entry:
  %irq.addr = alloca i32, align 4
  %d = alloca %struct.irq_data*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10213, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d, metadata !10215, metadata !DIExpression()), !dbg !10216
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10217
  %call = call %struct.irq_data* @irq_get_irq_data(i32 %0) #12, !dbg !10218
  store %struct.irq_data* %call, %struct.irq_data** %d, align 8, !dbg !10216
  %1 = load %struct.irq_data*, %struct.irq_data** %d, align 8, !dbg !10219
  %tobool = icmp ne %struct.irq_data* %1, null, !dbg !10219
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10219

cond.true:                                        ; preds = %entry
  %2 = load %struct.irq_data*, %struct.irq_data** %d, align 8, !dbg !10220
  %chip_data = getelementptr inbounds %struct.irq_data, %struct.irq_data* %2, i32 0, i32 7, !dbg !10221
  %3 = load i8*, i8** %chip_data, align 8, !dbg !10221
  br label %cond.end, !dbg !10219

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10219

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ], !dbg !10219
  ret i8* %cond, !dbg !10222
}

; Function Attrs: noredzone
declare dso_local %struct.irq_data* @irq_get_irq_data(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !10223 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !10224, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10227, metadata !DIExpression()), !dbg !10226
  %0 = load i64, i64* %__edi, align 8, !dbg !10226
  store i64 %0, i64* %__edi, align 8, !dbg !10226
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10228, metadata !DIExpression()), !dbg !10226
  %1 = load i64, i64* %__esi, align 8, !dbg !10226
  store i64 %1, i64* %__esi, align 8, !dbg !10226
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10229, metadata !DIExpression()), !dbg !10226
  %2 = load i64, i64* %__edx, align 8, !dbg !10226
  store i64 %2, i64* %__edx, align 8, !dbg !10226
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10230, metadata !DIExpression()), !dbg !10226
  %3 = load i64, i64* %__ecx, align 8, !dbg !10226
  store i64 %3, i64* %__ecx, align 8, !dbg !10226
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10231, metadata !DIExpression()), !dbg !10226
  %4 = load i64, i64* %__eax, align 8, !dbg !10226
  store i64 %4, i64* %__eax, align 8, !dbg !10226
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !10226
  %6 = call i64 @llvm.read_register.i64(metadata !6565), !dbg !10232
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !10232, !srcloc !10235
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10232
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10232
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10232
  call void @llvm.write_register.i64(metadata !6565, i64 %asmresult1), !dbg !10232
  %8 = load i64, i64* %__eax, align 8, !dbg !10232
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !10236, metadata !DIExpression()), !dbg !10238
  store i64 -1, i64* %__mask, align 8, !dbg !10238
  %9 = load i64, i64* %__mask, align 8, !dbg !10238
  store i64 %9, i64* %tmp, align 8, !dbg !10238
  %10 = load i64, i64* %tmp, align 8, !dbg !10238
  %and = and i64 %8, %10, !dbg !10232
  store i64 %and, i64* %__ret, align 8, !dbg !10232
  %11 = load i64, i64* %__ret, align 8, !dbg !10226
  store i64 %11, i64* %tmp2, align 8, !dbg !10239
  %12 = load i64, i64* %tmp2, align 8, !dbg !10226
  ret i64 %12, !dbg !10240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !10241 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10242, metadata !DIExpression()), !dbg !10244
  %0 = load i64, i64* %__edi, align 8, !dbg !10244
  store i64 %0, i64* %__edi, align 8, !dbg !10244
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10245, metadata !DIExpression()), !dbg !10244
  %1 = load i64, i64* %__esi, align 8, !dbg !10244
  store i64 %1, i64* %__esi, align 8, !dbg !10244
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10246, metadata !DIExpression()), !dbg !10244
  %2 = load i64, i64* %__edx, align 8, !dbg !10244
  store i64 %2, i64* %__edx, align 8, !dbg !10244
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10247, metadata !DIExpression()), !dbg !10244
  %3 = load i64, i64* %__ecx, align 8, !dbg !10244
  store i64 %3, i64* %__ecx, align 8, !dbg !10244
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10248, metadata !DIExpression()), !dbg !10244
  %4 = load i64, i64* %__eax, align 8, !dbg !10244
  store i64 %4, i64* %__eax, align 8, !dbg !10244
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !10244
  %6 = call i64 @llvm.read_register.i64(metadata !6565), !dbg !10244
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !10244, !srcloc !10249
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10244
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10244
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10244
  call void @llvm.write_register.i64(metadata !6565, i64 %asmresult1), !dbg !10244
  ret void, !dbg !10250
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !10251 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10257, metadata !DIExpression()), !dbg !10258
  br label %do.body, !dbg !10259

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10261

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10259
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !10259
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10259
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !10261
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !10259
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10263
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !10264
  %conv = zext i1 %cmp to i32, !dbg !10264
  ret i32 %conv, !dbg !10265
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @lateeoi_list_add(%struct.irq_info* %info) #0 !dbg !10266 {
entry:
  %lock.addr.i59 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i59, metadata !10269, metadata !DIExpression()), !dbg !10273
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10275, metadata !DIExpression()), !dbg !10276
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10011, metadata !DIExpression()), !dbg !10277
  %info.addr = alloca %struct.irq_info*, align 8
  %eoi = alloca %struct.lateeoi_work*, align 8
  %tmp = alloca %struct.lateeoi_work*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.lateeoi_work*, align 8
  %elem = alloca %struct.irq_info*, align 8
  %now = alloca i64, align 8
  %delay = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp6 = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp37 = alloca %struct.irq_info*, align 8
  %__mptr48 = alloca i8*, align 8
  %tmp53 = alloca %struct.irq_info*, align 8
  store %struct.irq_info* %info, %struct.irq_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info.addr, metadata !10284, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.declare(metadata %struct.lateeoi_work** %eoi, metadata !10286, metadata !DIExpression()), !dbg !10287
  %0 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10288
  %eoi_cpu = getelementptr inbounds %struct.irq_info, %struct.irq_info* %0, i32 0, i32 8, !dbg !10288
  %1 = load i16, i16* %eoi_cpu, align 2, !dbg !10288
  br label %do.body, !dbg !10290

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !10292, metadata !DIExpression()), !dbg !10294
  store i8* null, i8** %__vpp_verify, align 8, !dbg !10294
  %2 = load i8*, i8** %__vpp_verify, align 8, !dbg !10294
  br label %do.end, !dbg !10294

do.end:                                           ; preds = %do.body
  store %struct.lateeoi_work* @lateeoi, %struct.lateeoi_work** %tmp1, align 8, !dbg !10294
  %3 = load %struct.lateeoi_work*, %struct.lateeoi_work** %tmp1, align 8, !dbg !10290
  store %struct.lateeoi_work* %3, %struct.lateeoi_work** %tmp, align 8, !dbg !10288
  %4 = load %struct.lateeoi_work*, %struct.lateeoi_work** %tmp, align 8, !dbg !10288
  store %struct.lateeoi_work* %4, %struct.lateeoi_work** %eoi, align 8, !dbg !10287
  call void @llvm.dbg.declare(metadata %struct.irq_info** %elem, metadata !10295, metadata !DIExpression()), !dbg !10296
  call void @llvm.dbg.declare(metadata i64* %now, metadata !10297, metadata !DIExpression()), !dbg !10298
  %call = call i64 @get_jiffies_64() #12, !dbg !10299
  store i64 %call, i64* %now, align 8, !dbg !10298
  call void @llvm.dbg.declare(metadata i64* %delay, metadata !10300, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10302, metadata !DIExpression()), !dbg !10303
  %5 = load i64, i64* %now, align 8, !dbg !10304
  %6 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10306
  %eoi_time = getelementptr inbounds %struct.irq_info, %struct.irq_info* %6, i32 0, i32 10, !dbg !10307
  %7 = load i64, i64* %eoi_time, align 8, !dbg !10307
  %cmp = icmp ult i64 %5, %7, !dbg !10308
  br i1 %cmp, label %if.then, label %if.else, !dbg !10309

if.then:                                          ; preds = %do.end
  %8 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10310
  %eoi_time2 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %8, i32 0, i32 10, !dbg !10311
  %9 = load i64, i64* %eoi_time2, align 8, !dbg !10311
  %10 = load i64, i64* %now, align 8, !dbg !10312
  %sub = sub i64 %9, %10, !dbg !10313
  store i64 %sub, i64* %delay, align 8, !dbg !10314
  br label %if.end, !dbg !10315

if.else:                                          ; preds = %do.end
  store i64 1, i64* %delay, align 8, !dbg !10316
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body3, !dbg !10317

do.body3:                                         ; preds = %if.end
  br label %do.body4, !dbg !10318

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10319, metadata !DIExpression()), !dbg !10321
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10322, metadata !DIExpression()), !dbg !10321
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !10321
  %conv = zext i1 %cmp5 to i32, !dbg !10321
  store i32 1, i32* %tmp6, align 4, !dbg !10321
  %11 = load i32, i32* %tmp6, align 4, !dbg !10321
  br label %do.body7, !dbg !10323

do.body7:                                         ; preds = %do.body4
  br label %do.body8, !dbg !10324

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !10325

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !10327, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !10331, metadata !DIExpression()), !dbg !10330
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !10330
  %conv13 = zext i1 %cmp12 to i32, !dbg !10330
  store i32 1, i32* %tmp14, align 4, !dbg !10330
  %12 = load i32, i32* %tmp14, align 4, !dbg !10330
  %call15 = call i64 @arch_local_irq_save() #12, !dbg !10332
  store i64 %call15, i64* %flags, align 8, !dbg !10332
  br label %do.end16, !dbg !10332

do.end16:                                         ; preds = %do.body9
  br label %do.end17, !dbg !10325

do.end17:                                         ; preds = %do.end16
  br label %do.body18, !dbg !10324

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10333, !srcloc !10334
  br label %do.body19, !dbg !10333

do.body19:                                        ; preds = %do.body18
  %13 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10335
  %eoi_list_lock = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %13, i32 0, i32 1, !dbg !10335
  store %struct.spinlock* %eoi_list_lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10336
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !10337
  %rlock.i = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !10337
  br label %do.end21, !dbg !10335

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !10333

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !10324

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !10323

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !10318

do.end25:                                         ; preds = %do.end24
  %16 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10338
  %eoi_list = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %16, i32 0, i32 2, !dbg !10340
  %call26 = call i32 @list_empty(%struct.list_head* %eoi_list) #12, !dbg !10341
  %tobool = icmp ne i32 %call26, 0, !dbg !10341
  br i1 %tobool, label %if.then27, label %if.else33, !dbg !10342

if.then27:                                        ; preds = %do.end25
  %17 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10343
  %eoi_list28 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %17, i32 0, i32 1, !dbg !10345
  %18 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10346
  %eoi_list29 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %18, i32 0, i32 2, !dbg !10347
  call void @list_add(%struct.list_head* %eoi_list28, %struct.list_head* %eoi_list29) #12, !dbg !10348
  %19 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10349
  %eoi_cpu30 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %19, i32 0, i32 8, !dbg !10350
  %20 = load i16, i16* %eoi_cpu30, align 2, !dbg !10350
  %conv31 = zext i16 %20 to i32, !dbg !10349
  %21 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !10351
  %22 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10352
  %delayed = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %22, i32 0, i32 0, !dbg !10353
  %23 = load i64, i64* %delay, align 8, !dbg !10354
  %call32 = call zeroext i1 @mod_delayed_work_on(i32 %conv31, %struct.workqueue_struct* %21, %struct.delayed_work* %delayed, i64 %23) #12, !dbg !10355
  br label %if.end57, !dbg !10356

if.else33:                                        ; preds = %do.end25
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10357, metadata !DIExpression()), !dbg !10361
  %24 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10361
  %eoi_list34 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %24, i32 0, i32 2, !dbg !10361
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %eoi_list34, i32 0, i32 1, !dbg !10361
  %25 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10361
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !10361
  store i8* %26, i8** %__mptr, align 8, !dbg !10361
  br label %do.body35, !dbg !10361

do.body35:                                        ; preds = %if.else33
  br label %do.end36, !dbg !10362

do.end36:                                         ; preds = %do.body35
  %27 = load i8*, i8** %__mptr, align 8, !dbg !10361
  %add.ptr = getelementptr i8, i8* %27, i64 -16, !dbg !10361
  %28 = bitcast i8* %add.ptr to %struct.irq_info*, !dbg !10361
  store %struct.irq_info* %28, %struct.irq_info** %tmp37, align 8, !dbg !10362
  %29 = load %struct.irq_info*, %struct.irq_info** %tmp37, align 8, !dbg !10361
  store %struct.irq_info* %29, %struct.irq_info** %elem, align 8, !dbg !10364
  br label %for.cond, !dbg !10364

for.cond:                                         ; preds = %do.end52, %do.end36
  %30 = load %struct.irq_info*, %struct.irq_info** %elem, align 8, !dbg !10365
  %eoi_list38 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %30, i32 0, i32 1, !dbg !10365
  %31 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10365
  %eoi_list39 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %31, i32 0, i32 2, !dbg !10365
  %cmp40 = icmp eq %struct.list_head* %eoi_list38, %eoi_list39, !dbg !10365
  %lnot = xor i1 %cmp40, true, !dbg !10365
  br i1 %lnot, label %for.body, label %for.end, !dbg !10364

for.body:                                         ; preds = %for.cond
  %32 = load %struct.irq_info*, %struct.irq_info** %elem, align 8, !dbg !10367
  %eoi_time42 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %32, i32 0, i32 10, !dbg !10370
  %33 = load i64, i64* %eoi_time42, align 8, !dbg !10370
  %34 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10371
  %eoi_time43 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %34, i32 0, i32 10, !dbg !10372
  %35 = load i64, i64* %eoi_time43, align 8, !dbg !10372
  %cmp44 = icmp ule i64 %33, %35, !dbg !10373
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !10374

if.then46:                                        ; preds = %for.body
  br label %for.end, !dbg !10375

if.end47:                                         ; preds = %for.body
  br label %for.inc, !dbg !10376

for.inc:                                          ; preds = %if.end47
  call void @llvm.dbg.declare(metadata i8** %__mptr48, metadata !10377, metadata !DIExpression()), !dbg !10379
  %36 = load %struct.irq_info*, %struct.irq_info** %elem, align 8, !dbg !10379
  %eoi_list49 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %36, i32 0, i32 1, !dbg !10379
  %prev50 = getelementptr inbounds %struct.list_head, %struct.list_head* %eoi_list49, i32 0, i32 1, !dbg !10379
  %37 = load %struct.list_head*, %struct.list_head** %prev50, align 8, !dbg !10379
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !10379
  store i8* %38, i8** %__mptr48, align 8, !dbg !10379
  br label %do.body51, !dbg !10379

do.body51:                                        ; preds = %for.inc
  br label %do.end52, !dbg !10380

do.end52:                                         ; preds = %do.body51
  %39 = load i8*, i8** %__mptr48, align 8, !dbg !10379
  %add.ptr54 = getelementptr i8, i8* %39, i64 -16, !dbg !10379
  %40 = bitcast i8* %add.ptr54 to %struct.irq_info*, !dbg !10379
  store %struct.irq_info* %40, %struct.irq_info** %tmp53, align 8, !dbg !10380
  %41 = load %struct.irq_info*, %struct.irq_info** %tmp53, align 8, !dbg !10379
  store %struct.irq_info* %41, %struct.irq_info** %elem, align 8, !dbg !10365
  br label %for.cond, !dbg !10365, !llvm.loop !10382

for.end:                                          ; preds = %if.then46, %for.cond
  %42 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10384
  %eoi_list55 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %42, i32 0, i32 1, !dbg !10385
  %43 = load %struct.irq_info*, %struct.irq_info** %elem, align 8, !dbg !10386
  %eoi_list56 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %43, i32 0, i32 1, !dbg !10387
  call void @list_add(%struct.list_head* %eoi_list55, %struct.list_head* %eoi_list56) #12, !dbg !10388
  br label %if.end57

if.end57:                                         ; preds = %for.end, %if.then27
  %44 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10389
  %eoi_list_lock58 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %44, i32 0, i32 1, !dbg !10390
  %45 = load i64, i64* %flags, align 8, !dbg !10391
  store %struct.spinlock* %eoi_list_lock58, %struct.spinlock** %lock.addr.i59, align 8
  store i64 %45, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !606, metadata !10392, metadata !DIExpression()) #6, !dbg !10395
  call void @llvm.dbg.declare(metadata !606, metadata !10396, metadata !DIExpression()) #6, !dbg !10395
  store i32 1, i32* %tmp.i, align 4, !dbg !10395
  %46 = load i32, i32* %tmp.i, align 4, !dbg !10395
  call void @llvm.dbg.declare(metadata !606, metadata !10397, metadata !DIExpression()) #6, !dbg !10402
  call void @llvm.dbg.declare(metadata !606, metadata !10403, metadata !DIExpression()) #6, !dbg !10402
  store i32 1, i32* %tmp8.i, align 4, !dbg !10402
  %47 = load i32, i32* %tmp8.i, align 4, !dbg !10402
  %48 = load i64, i64* %flags.addr.i, align 8, !dbg !10404
  call void @arch_local_irq_restore(i64 %48) #14, !dbg !10404
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10405, !srcloc !10407
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i59, align 8, !dbg !10408
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !10408
  %rlock.i60 = bitcast %union.anon.1* %50 to %struct.raw_spinlock*, !dbg !10408
  ret void, !dbg !10410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @unmask_evtchn(i32 %port) #0 !dbg !10411 {
entry:
  %port.addr = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10412, metadata !DIExpression()), !dbg !10413
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !10414
  %unmask = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 9, !dbg !10415
  %1 = load void (i32)*, void (i32)** %unmask, align 8, !dbg !10415
  %2 = load i32, i32* %port.addr, align 4, !dbg !10416
  call void %1(i32 %2) #12, !dbg !10414
  ret void, !dbg !10417
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !10418 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10421, metadata !DIExpression()), !dbg !10422
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10423, metadata !DIExpression()), !dbg !10424
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10425
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10426
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10427
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !10428
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10428
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #12, !dbg !10429
  ret void, !dbg !10430
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mod_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10431 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10434, metadata !DIExpression()), !dbg !10435
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10436, metadata !DIExpression()), !dbg !10437
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10438, metadata !DIExpression()), !dbg !10439
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10440
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10442
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10443
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #12, !dbg !10444
  br i1 %call, label %if.end, label %if.then, !dbg !10445

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !10446

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10447
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10448
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !10449
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !10450
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10451
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10452
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !10453
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !10454
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10455
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10456
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !10457
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !10458
  br label %do.body, !dbg !10459

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !10460

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !10462

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !10460

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10464
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10464
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !10464
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !10464
  br label %do.end7, !dbg !10464

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !10460

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !10466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10467 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10470, metadata !DIExpression()), !dbg !10471
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10472, metadata !DIExpression()), !dbg !10473
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10474, metadata !DIExpression()), !dbg !10475
  ret i1 true, !dbg !10476
}

; Function Attrs: noredzone
declare dso_local i32 @__irq_alloc_descs(i32, i32, i32, i32, %struct.module*, %struct.irq_affinity_desc*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xen_irq_init(i32 %irq) #0 !dbg !10477 {
entry:
  %irq.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10478, metadata !DIExpression()), !dbg !10479
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !10480, metadata !DIExpression()), !dbg !10481
  %call = call i8* @kzalloc(i64 72, i32 3264) #12, !dbg !10482
  %0 = bitcast i8* %call to %struct.irq_info*, !dbg !10482
  store %struct.irq_info* %0, %struct.irq_info** %info, align 8, !dbg !10483
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !10484
  %cmp = icmp eq %struct.irq_info* %1, null, !dbg !10486
  br i1 %cmp, label %if.then, label %if.end, !dbg !10487

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %irq.addr, align 4, !dbg !10488
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0), i32 %2) #15, !dbg !10489
  unreachable, !dbg !10489

if.end:                                           ; preds = %entry
  %3 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !10490
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %3, i32 0, i32 4, !dbg !10491
  store i32 0, i32* %type, align 4, !dbg !10492
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !10493
  %refcnt = getelementptr inbounds %struct.irq_info, %struct.irq_info* %4, i32 0, i32 2, !dbg !10494
  store i16 -1, i16* %refcnt, align 8, !dbg !10495
  %5 = load i32, i32* %irq.addr, align 4, !dbg !10496
  %6 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !10497
  call void @set_info_for_irq(i32 %5, %struct.irq_info* %6) #12, !dbg !10498
  %7 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !10499
  %eoi_list = getelementptr inbounds %struct.irq_info, %struct.irq_info* %7, i32 0, i32 1, !dbg !10500
  call void @INIT_LIST_HEAD(%struct.list_head* %eoi_list) #12, !dbg !10501
  %8 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !10502
  %list = getelementptr inbounds %struct.irq_info, %struct.irq_info* %8, i32 0, i32 0, !dbg !10503
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @xen_irq_list_head) #12, !dbg !10504
  ret void, !dbg !10505
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !10506 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10509, metadata !DIExpression()), !dbg !10513
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10519, metadata !DIExpression()), !dbg !10520
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10521, metadata !DIExpression()), !dbg !10522
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10523, metadata !DIExpression()), !dbg !10524
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10525, metadata !DIExpression()), !dbg !10529
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10531, metadata !DIExpression()), !dbg !10535
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10537, metadata !DIExpression()), !dbg !10541
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10546, metadata !DIExpression()), !dbg !10547
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10548, metadata !DIExpression()), !dbg !10549
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10550, metadata !DIExpression()), !dbg !10551
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10552, metadata !DIExpression()), !dbg !10553
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10554, metadata !DIExpression()), !dbg !10555
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10556, metadata !DIExpression()), !dbg !10557
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10558, metadata !DIExpression()), !dbg !10559
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10560, metadata !DIExpression()), !dbg !10561
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10562, metadata !DIExpression()), !dbg !10563
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10564, metadata !DIExpression()), !dbg !10565
  %0 = load i64, i64* %size.addr, align 8, !dbg !10566
  %1 = load i32, i32* %flags.addr, align 4, !dbg !10567
  %or = or i32 %1, 256, !dbg !10568
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !10569
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #6, !dbg !10570
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !10571

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10572
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !10573
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10574

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !10575
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !10576
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10577
  %call.i.i = call i32 @get_order(i64 %7) #16, !dbg !10578
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10555
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !10579
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10580
  %10 = load i32, i32* %order.i.i, align 4, !dbg !10581
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10582
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10583
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10584
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !10585
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10585
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10585
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10585
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !10585
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10586
  br label %kmalloc.exit, !dbg !10586

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !10587
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10588
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !10588
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10590

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10591
  br label %kmalloc_index.exit.i, !dbg !10591

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10592
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !10594
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10595

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10596
  br label %kmalloc_index.exit.i, !dbg !10596

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10597
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !10599
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10600

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10601
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !10602
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10603

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10604
  br label %kmalloc_index.exit.i, !dbg !10604

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10605
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !10607
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10608

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10609
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !10610
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10611

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10612
  br label %kmalloc_index.exit.i, !dbg !10612

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10613
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !10615
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10616

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10617
  br label %kmalloc_index.exit.i, !dbg !10617

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10618
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !10620
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10621

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10622
  br label %kmalloc_index.exit.i, !dbg !10622

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10623
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !10625
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10626

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10627
  br label %kmalloc_index.exit.i, !dbg !10627

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10628
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !10630
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10631

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10632
  br label %kmalloc_index.exit.i, !dbg !10632

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10633
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !10635
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10636

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10637
  br label %kmalloc_index.exit.i, !dbg !10637

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10638
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !10640
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10641

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10642
  br label %kmalloc_index.exit.i, !dbg !10642

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10643
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !10645
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10646

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10647
  br label %kmalloc_index.exit.i, !dbg !10647

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10648
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !10650
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10651

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10652
  br label %kmalloc_index.exit.i, !dbg !10652

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10653
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !10655
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10656

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10657
  br label %kmalloc_index.exit.i, !dbg !10657

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10658
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !10660
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10661

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10662
  br label %kmalloc_index.exit.i, !dbg !10662

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10663
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !10665
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10666

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10667
  br label %kmalloc_index.exit.i, !dbg !10667

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10668
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !10670
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10671

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10672
  br label %kmalloc_index.exit.i, !dbg !10672

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10673
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !10675
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10676

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10677
  br label %kmalloc_index.exit.i, !dbg !10677

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10678
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !10680
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10681

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10682
  br label %kmalloc_index.exit.i, !dbg !10682

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10683
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !10685
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10686

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10687
  br label %kmalloc_index.exit.i, !dbg !10687

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10688
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !10690
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10691

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10692
  br label %kmalloc_index.exit.i, !dbg !10692

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10693
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !10695
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10696

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10697
  br label %kmalloc_index.exit.i, !dbg !10697

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10698
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !10700
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10701

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10702
  br label %kmalloc_index.exit.i, !dbg !10702

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10703
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !10705
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10706

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10707
  br label %kmalloc_index.exit.i, !dbg !10707

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10708
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !10710
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10711

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10712
  br label %kmalloc_index.exit.i, !dbg !10712

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10713
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !10715
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10716

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10717
  br label %kmalloc_index.exit.i, !dbg !10717

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10718
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !10720
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10721

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10722
  br label %kmalloc_index.exit.i, !dbg !10722

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10723
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !10725
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10726

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10727
  br label %kmalloc_index.exit.i, !dbg !10727

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10728
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !10730
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10731

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10732
  br label %kmalloc_index.exit.i, !dbg !10732

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !10733, !srcloc !10736
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 90) #6, !dbg !10737, !srcloc !10740
  unreachable, !dbg !10741

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !10742
  store i32 %45, i32* %index.i, align 4, !dbg !10743
  %46 = load i32, i32* %index.i, align 4, !dbg !10744
  %tobool.i = icmp ne i32 %46, 0, !dbg !10744
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10746

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10747
  br label %kmalloc.exit, !dbg !10747

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !10748
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10749
  %and.i.i = and i32 %48, 17, !dbg !10749
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10749
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10749
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10749
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10749
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10751

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10752
  br label %kmalloc_type.exit.i, !dbg !10752

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10753
  %and2.i.i = and i32 %49, 1, !dbg !10754
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10753
  %50 = zext i1 %tobool3.i.i to i64, !dbg !10753
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10753
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10755
  br label %kmalloc_type.exit.i, !dbg !10755

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !10756
  %idxprom.i = zext i32 %51 to i64, !dbg !10757
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10757
  %52 = load i32, i32* %index.i, align 4, !dbg !10758
  %idxprom6.i = zext i32 %52 to i64, !dbg !10757
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10757
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10757
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !10759
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !10760
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10761
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10762
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !10763
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10763
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10763
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10763
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !10763
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10524
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10764
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !10765
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10766
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10767
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !10768
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10769
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !10770
  store i8* %62, i8** %retval.i, align 8, !dbg !10771
  br label %kmalloc.exit, !dbg !10771

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !10772
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !10773
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !10774
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10774
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10774
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10774
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !10774
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10775
  br label %kmalloc.exit, !dbg !10775

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !10776
  ret i8* %65, !dbg !10777
}

; Function Attrs: cold noredzone noreturn
declare dso_local void @panic(i8*, ...) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_info_for_irq(i32 %irq, %struct.irq_info* %info) #0 !dbg !10778 {
entry:
  %irq.addr = alloca i32, align 4
  %info.addr = alloca %struct.irq_info*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10781, metadata !DIExpression()), !dbg !10782
  store %struct.irq_info* %info, %struct.irq_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info.addr, metadata !10783, metadata !DIExpression()), !dbg !10784
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10785
  %call = call i32 @nr_legacy_irqs() #12, !dbg !10787
  %cmp = icmp ult i32 %0, %call, !dbg !10788
  br i1 %cmp, label %if.then, label %if.else, !dbg !10789

if.then:                                          ; preds = %entry
  %1 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10790
  %2 = load i32, i32* %irq.addr, align 4, !dbg !10791
  %idxprom = zext i32 %2 to i64, !dbg !10792
  %arrayidx = getelementptr [16 x %struct.irq_info*], [16 x %struct.irq_info*]* @legacy_info_ptrs, i64 0, i64 %idxprom, !dbg !10792
  store %struct.irq_info* %1, %struct.irq_info** %arrayidx, align 8, !dbg !10793
  br label %if.end, !dbg !10792

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %irq.addr, align 4, !dbg !10794
  %4 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10795
  %5 = bitcast %struct.irq_info* %4 to i8*, !dbg !10795
  %call1 = call i32 @irq_set_chip_data(i32 %3, i8* %5) #12, !dbg !10796
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !10798 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !10801, metadata !DIExpression()), !dbg !10802
  br label %do.body, !dbg !10803

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10804

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !10806

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !10804

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10808
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10808
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !10808
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !10808
  br label %do.end3, !dbg !10808

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !10804

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10810
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10811
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !10812
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !10813
  ret void, !dbg !10814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !10815 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10816, metadata !DIExpression()), !dbg !10817
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10818, metadata !DIExpression()), !dbg !10819
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10820
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10821
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10822
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10822
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10823
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #12, !dbg !10824
  ret void, !dbg !10825
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !10826 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10828, metadata !DIExpression()), !dbg !10833
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10835, metadata !DIExpression()), !dbg !10836
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10837, metadata !DIExpression()), !dbg !10838
  %0 = load i64, i64* %size.addr, align 8, !dbg !10839
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10841
  br i1 %1, label %if.then, label %if.end447, !dbg !10842

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10843
  %tobool = icmp ne i64 %2, 0, !dbg !10843
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10846

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10847
  br label %return, !dbg !10847

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10848
  %cmp = icmp ult i64 %3, 4096, !dbg !10850
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10851

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10852
  br label %return, !dbg !10852

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub = sub i64 %4, 1, !dbg !10853
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !10853
  br i1 %5, label %cond.true, label %cond.false442, !dbg !10853

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub4 = sub i64 %6, 1, !dbg !10853
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !10853
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !10853

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub6 = sub i64 %8, 1, !dbg !10853
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !10853
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !10853

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !10853

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub9 = sub i64 %9, 1, !dbg !10853
  %and = and i64 %sub9, -9223372036854775808, !dbg !10853
  %tobool10 = icmp ne i64 %and, 0, !dbg !10853
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !10853

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !10853

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub13 = sub i64 %10, 1, !dbg !10853
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !10853
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10853
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10853

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !10853

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub18 = sub i64 %11, 1, !dbg !10853
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !10853
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10853
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !10853

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !10853

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub23 = sub i64 %12, 1, !dbg !10853
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !10853
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10853
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !10853

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !10853

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub28 = sub i64 %13, 1, !dbg !10853
  %and29 = and i64 %sub28, 576460752303423488, !dbg !10853
  %tobool30 = icmp ne i64 %and29, 0, !dbg !10853
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !10853

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !10853

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub33 = sub i64 %14, 1, !dbg !10853
  %and34 = and i64 %sub33, 288230376151711744, !dbg !10853
  %tobool35 = icmp ne i64 %and34, 0, !dbg !10853
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !10853

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !10853

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub38 = sub i64 %15, 1, !dbg !10853
  %and39 = and i64 %sub38, 144115188075855872, !dbg !10853
  %tobool40 = icmp ne i64 %and39, 0, !dbg !10853
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !10853

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !10853

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub43 = sub i64 %16, 1, !dbg !10853
  %and44 = and i64 %sub43, 72057594037927936, !dbg !10853
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10853
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !10853

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !10853

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub48 = sub i64 %17, 1, !dbg !10853
  %and49 = and i64 %sub48, 36028797018963968, !dbg !10853
  %tobool50 = icmp ne i64 %and49, 0, !dbg !10853
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !10853

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !10853

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub53 = sub i64 %18, 1, !dbg !10853
  %and54 = and i64 %sub53, 18014398509481984, !dbg !10853
  %tobool55 = icmp ne i64 %and54, 0, !dbg !10853
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !10853

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !10853

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub58 = sub i64 %19, 1, !dbg !10853
  %and59 = and i64 %sub58, 9007199254740992, !dbg !10853
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10853
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !10853

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !10853

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub63 = sub i64 %20, 1, !dbg !10853
  %and64 = and i64 %sub63, 4503599627370496, !dbg !10853
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10853
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !10853

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !10853

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub68 = sub i64 %21, 1, !dbg !10853
  %and69 = and i64 %sub68, 2251799813685248, !dbg !10853
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10853
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !10853

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !10853

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub73 = sub i64 %22, 1, !dbg !10853
  %and74 = and i64 %sub73, 1125899906842624, !dbg !10853
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10853
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !10853

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !10853

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub78 = sub i64 %23, 1, !dbg !10853
  %and79 = and i64 %sub78, 562949953421312, !dbg !10853
  %tobool80 = icmp ne i64 %and79, 0, !dbg !10853
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !10853

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !10853

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub83 = sub i64 %24, 1, !dbg !10853
  %and84 = and i64 %sub83, 281474976710656, !dbg !10853
  %tobool85 = icmp ne i64 %and84, 0, !dbg !10853
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !10853

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !10853

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub88 = sub i64 %25, 1, !dbg !10853
  %and89 = and i64 %sub88, 140737488355328, !dbg !10853
  %tobool90 = icmp ne i64 %and89, 0, !dbg !10853
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !10853

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !10853

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub93 = sub i64 %26, 1, !dbg !10853
  %and94 = and i64 %sub93, 70368744177664, !dbg !10853
  %tobool95 = icmp ne i64 %and94, 0, !dbg !10853
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !10853

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !10853

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub98 = sub i64 %27, 1, !dbg !10853
  %and99 = and i64 %sub98, 35184372088832, !dbg !10853
  %tobool100 = icmp ne i64 %and99, 0, !dbg !10853
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !10853

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !10853

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub103 = sub i64 %28, 1, !dbg !10853
  %and104 = and i64 %sub103, 17592186044416, !dbg !10853
  %tobool105 = icmp ne i64 %and104, 0, !dbg !10853
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !10853

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !10853

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub108 = sub i64 %29, 1, !dbg !10853
  %and109 = and i64 %sub108, 8796093022208, !dbg !10853
  %tobool110 = icmp ne i64 %and109, 0, !dbg !10853
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !10853

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !10853

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub113 = sub i64 %30, 1, !dbg !10853
  %and114 = and i64 %sub113, 4398046511104, !dbg !10853
  %tobool115 = icmp ne i64 %and114, 0, !dbg !10853
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !10853

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !10853

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub118 = sub i64 %31, 1, !dbg !10853
  %and119 = and i64 %sub118, 2199023255552, !dbg !10853
  %tobool120 = icmp ne i64 %and119, 0, !dbg !10853
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !10853

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !10853

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub123 = sub i64 %32, 1, !dbg !10853
  %and124 = and i64 %sub123, 1099511627776, !dbg !10853
  %tobool125 = icmp ne i64 %and124, 0, !dbg !10853
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !10853

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !10853

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub128 = sub i64 %33, 1, !dbg !10853
  %and129 = and i64 %sub128, 549755813888, !dbg !10853
  %tobool130 = icmp ne i64 %and129, 0, !dbg !10853
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !10853

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !10853

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub133 = sub i64 %34, 1, !dbg !10853
  %and134 = and i64 %sub133, 274877906944, !dbg !10853
  %tobool135 = icmp ne i64 %and134, 0, !dbg !10853
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !10853

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !10853

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub138 = sub i64 %35, 1, !dbg !10853
  %and139 = and i64 %sub138, 137438953472, !dbg !10853
  %tobool140 = icmp ne i64 %and139, 0, !dbg !10853
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !10853

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !10853

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub143 = sub i64 %36, 1, !dbg !10853
  %and144 = and i64 %sub143, 68719476736, !dbg !10853
  %tobool145 = icmp ne i64 %and144, 0, !dbg !10853
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !10853

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !10853

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub148 = sub i64 %37, 1, !dbg !10853
  %and149 = and i64 %sub148, 34359738368, !dbg !10853
  %tobool150 = icmp ne i64 %and149, 0, !dbg !10853
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !10853

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !10853

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub153 = sub i64 %38, 1, !dbg !10853
  %and154 = and i64 %sub153, 17179869184, !dbg !10853
  %tobool155 = icmp ne i64 %and154, 0, !dbg !10853
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !10853

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !10853

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub158 = sub i64 %39, 1, !dbg !10853
  %and159 = and i64 %sub158, 8589934592, !dbg !10853
  %tobool160 = icmp ne i64 %and159, 0, !dbg !10853
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !10853

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !10853

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub163 = sub i64 %40, 1, !dbg !10853
  %and164 = and i64 %sub163, 4294967296, !dbg !10853
  %tobool165 = icmp ne i64 %and164, 0, !dbg !10853
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !10853

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !10853

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub168 = sub i64 %41, 1, !dbg !10853
  %and169 = and i64 %sub168, 2147483648, !dbg !10853
  %tobool170 = icmp ne i64 %and169, 0, !dbg !10853
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !10853

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !10853

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub173 = sub i64 %42, 1, !dbg !10853
  %and174 = and i64 %sub173, 1073741824, !dbg !10853
  %tobool175 = icmp ne i64 %and174, 0, !dbg !10853
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !10853

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !10853

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub178 = sub i64 %43, 1, !dbg !10853
  %and179 = and i64 %sub178, 536870912, !dbg !10853
  %tobool180 = icmp ne i64 %and179, 0, !dbg !10853
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !10853

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !10853

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub183 = sub i64 %44, 1, !dbg !10853
  %and184 = and i64 %sub183, 268435456, !dbg !10853
  %tobool185 = icmp ne i64 %and184, 0, !dbg !10853
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !10853

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !10853

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub188 = sub i64 %45, 1, !dbg !10853
  %and189 = and i64 %sub188, 134217728, !dbg !10853
  %tobool190 = icmp ne i64 %and189, 0, !dbg !10853
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !10853

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !10853

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub193 = sub i64 %46, 1, !dbg !10853
  %and194 = and i64 %sub193, 67108864, !dbg !10853
  %tobool195 = icmp ne i64 %and194, 0, !dbg !10853
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !10853

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !10853

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub198 = sub i64 %47, 1, !dbg !10853
  %and199 = and i64 %sub198, 33554432, !dbg !10853
  %tobool200 = icmp ne i64 %and199, 0, !dbg !10853
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !10853

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !10853

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub203 = sub i64 %48, 1, !dbg !10853
  %and204 = and i64 %sub203, 16777216, !dbg !10853
  %tobool205 = icmp ne i64 %and204, 0, !dbg !10853
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !10853

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !10853

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub208 = sub i64 %49, 1, !dbg !10853
  %and209 = and i64 %sub208, 8388608, !dbg !10853
  %tobool210 = icmp ne i64 %and209, 0, !dbg !10853
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !10853

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !10853

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub213 = sub i64 %50, 1, !dbg !10853
  %and214 = and i64 %sub213, 4194304, !dbg !10853
  %tobool215 = icmp ne i64 %and214, 0, !dbg !10853
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !10853

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !10853

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub218 = sub i64 %51, 1, !dbg !10853
  %and219 = and i64 %sub218, 2097152, !dbg !10853
  %tobool220 = icmp ne i64 %and219, 0, !dbg !10853
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !10853

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !10853

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub223 = sub i64 %52, 1, !dbg !10853
  %and224 = and i64 %sub223, 1048576, !dbg !10853
  %tobool225 = icmp ne i64 %and224, 0, !dbg !10853
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !10853

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !10853

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub228 = sub i64 %53, 1, !dbg !10853
  %and229 = and i64 %sub228, 524288, !dbg !10853
  %tobool230 = icmp ne i64 %and229, 0, !dbg !10853
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !10853

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !10853

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub233 = sub i64 %54, 1, !dbg !10853
  %and234 = and i64 %sub233, 262144, !dbg !10853
  %tobool235 = icmp ne i64 %and234, 0, !dbg !10853
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !10853

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !10853

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub238 = sub i64 %55, 1, !dbg !10853
  %and239 = and i64 %sub238, 131072, !dbg !10853
  %tobool240 = icmp ne i64 %and239, 0, !dbg !10853
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !10853

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !10853

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub243 = sub i64 %56, 1, !dbg !10853
  %and244 = and i64 %sub243, 65536, !dbg !10853
  %tobool245 = icmp ne i64 %and244, 0, !dbg !10853
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !10853

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !10853

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub248 = sub i64 %57, 1, !dbg !10853
  %and249 = and i64 %sub248, 32768, !dbg !10853
  %tobool250 = icmp ne i64 %and249, 0, !dbg !10853
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !10853

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !10853

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub253 = sub i64 %58, 1, !dbg !10853
  %and254 = and i64 %sub253, 16384, !dbg !10853
  %tobool255 = icmp ne i64 %and254, 0, !dbg !10853
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !10853

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !10853

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub258 = sub i64 %59, 1, !dbg !10853
  %and259 = and i64 %sub258, 8192, !dbg !10853
  %tobool260 = icmp ne i64 %and259, 0, !dbg !10853
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !10853

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !10853

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub263 = sub i64 %60, 1, !dbg !10853
  %and264 = and i64 %sub263, 4096, !dbg !10853
  %tobool265 = icmp ne i64 %and264, 0, !dbg !10853
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !10853

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !10853

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub268 = sub i64 %61, 1, !dbg !10853
  %and269 = and i64 %sub268, 2048, !dbg !10853
  %tobool270 = icmp ne i64 %and269, 0, !dbg !10853
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !10853

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !10853

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub273 = sub i64 %62, 1, !dbg !10853
  %and274 = and i64 %sub273, 1024, !dbg !10853
  %tobool275 = icmp ne i64 %and274, 0, !dbg !10853
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !10853

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !10853

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub278 = sub i64 %63, 1, !dbg !10853
  %and279 = and i64 %sub278, 512, !dbg !10853
  %tobool280 = icmp ne i64 %and279, 0, !dbg !10853
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !10853

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !10853

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub283 = sub i64 %64, 1, !dbg !10853
  %and284 = and i64 %sub283, 256, !dbg !10853
  %tobool285 = icmp ne i64 %and284, 0, !dbg !10853
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !10853

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !10853

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub288 = sub i64 %65, 1, !dbg !10853
  %and289 = and i64 %sub288, 128, !dbg !10853
  %tobool290 = icmp ne i64 %and289, 0, !dbg !10853
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !10853

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !10853

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub293 = sub i64 %66, 1, !dbg !10853
  %and294 = and i64 %sub293, 64, !dbg !10853
  %tobool295 = icmp ne i64 %and294, 0, !dbg !10853
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !10853

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !10853

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub298 = sub i64 %67, 1, !dbg !10853
  %and299 = and i64 %sub298, 32, !dbg !10853
  %tobool300 = icmp ne i64 %and299, 0, !dbg !10853
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !10853

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !10853

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub303 = sub i64 %68, 1, !dbg !10853
  %and304 = and i64 %sub303, 16, !dbg !10853
  %tobool305 = icmp ne i64 %and304, 0, !dbg !10853
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !10853

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !10853

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub308 = sub i64 %69, 1, !dbg !10853
  %and309 = and i64 %sub308, 8, !dbg !10853
  %tobool310 = icmp ne i64 %and309, 0, !dbg !10853
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !10853

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !10853

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub313 = sub i64 %70, 1, !dbg !10853
  %and314 = and i64 %sub313, 4, !dbg !10853
  %tobool315 = icmp ne i64 %and314, 0, !dbg !10853
  %71 = zext i1 %tobool315 to i64, !dbg !10853
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !10853
  br label %cond.end, !dbg !10853

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !10853
  br label %cond.end317, !dbg !10853

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !10853
  br label %cond.end319, !dbg !10853

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !10853
  br label %cond.end321, !dbg !10853

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !10853
  br label %cond.end323, !dbg !10853

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !10853
  br label %cond.end325, !dbg !10853

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !10853
  br label %cond.end327, !dbg !10853

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !10853
  br label %cond.end329, !dbg !10853

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !10853
  br label %cond.end331, !dbg !10853

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !10853
  br label %cond.end333, !dbg !10853

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !10853
  br label %cond.end335, !dbg !10853

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !10853
  br label %cond.end337, !dbg !10853

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !10853
  br label %cond.end339, !dbg !10853

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !10853
  br label %cond.end341, !dbg !10853

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !10853
  br label %cond.end343, !dbg !10853

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !10853
  br label %cond.end345, !dbg !10853

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !10853
  br label %cond.end347, !dbg !10853

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !10853
  br label %cond.end349, !dbg !10853

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !10853
  br label %cond.end351, !dbg !10853

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !10853
  br label %cond.end353, !dbg !10853

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !10853
  br label %cond.end355, !dbg !10853

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !10853
  br label %cond.end357, !dbg !10853

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !10853
  br label %cond.end359, !dbg !10853

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !10853
  br label %cond.end361, !dbg !10853

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !10853
  br label %cond.end363, !dbg !10853

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !10853
  br label %cond.end365, !dbg !10853

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !10853
  br label %cond.end367, !dbg !10853

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !10853
  br label %cond.end369, !dbg !10853

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !10853
  br label %cond.end371, !dbg !10853

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !10853
  br label %cond.end373, !dbg !10853

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !10853
  br label %cond.end375, !dbg !10853

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !10853
  br label %cond.end377, !dbg !10853

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !10853
  br label %cond.end379, !dbg !10853

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !10853
  br label %cond.end381, !dbg !10853

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !10853
  br label %cond.end383, !dbg !10853

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !10853
  br label %cond.end385, !dbg !10853

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !10853
  br label %cond.end387, !dbg !10853

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !10853
  br label %cond.end389, !dbg !10853

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !10853
  br label %cond.end391, !dbg !10853

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !10853
  br label %cond.end393, !dbg !10853

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !10853
  br label %cond.end395, !dbg !10853

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !10853
  br label %cond.end397, !dbg !10853

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !10853
  br label %cond.end399, !dbg !10853

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !10853
  br label %cond.end401, !dbg !10853

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !10853
  br label %cond.end403, !dbg !10853

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !10853
  br label %cond.end405, !dbg !10853

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !10853
  br label %cond.end407, !dbg !10853

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !10853
  br label %cond.end409, !dbg !10853

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !10853
  br label %cond.end411, !dbg !10853

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !10853
  br label %cond.end413, !dbg !10853

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !10853
  br label %cond.end415, !dbg !10853

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !10853
  br label %cond.end417, !dbg !10853

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !10853
  br label %cond.end419, !dbg !10853

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !10853
  br label %cond.end421, !dbg !10853

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !10853
  br label %cond.end423, !dbg !10853

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !10853
  br label %cond.end425, !dbg !10853

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !10853
  br label %cond.end427, !dbg !10853

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !10853
  br label %cond.end429, !dbg !10853

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !10853
  br label %cond.end431, !dbg !10853

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !10853
  br label %cond.end433, !dbg !10853

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !10853
  br label %cond.end435, !dbg !10853

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !10853
  br label %cond.end437, !dbg !10853

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !10853
  br label %cond.end440, !dbg !10853

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !10853

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !10853
  br label %cond.end444, !dbg !10853

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !10853
  %sub443 = sub i64 %72, 1, !dbg !10853
  %call = call i32 @__ilog2_u64(i64 %sub443) #16, !dbg !10853
  br label %cond.end444, !dbg !10853

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !10853
  %sub446 = sub i32 %cond445, 12, !dbg !10854
  %add = add i32 %sub446, 1, !dbg !10855
  store i32 %add, i32* %retval, align 4, !dbg !10856
  br label %return, !dbg !10856

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !10857
  %dec = add i64 %73, -1, !dbg !10857
  store i64 %dec, i64* %size.addr, align 8, !dbg !10857
  %74 = load i64, i64* %size.addr, align 8, !dbg !10858
  %shr = lshr i64 %74, 12, !dbg !10858
  store i64 %shr, i64* %size.addr, align 8, !dbg !10858
  %75 = load i64, i64* %size.addr, align 8, !dbg !10859
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10836
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !10860
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !10861
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #5, !dbg !10860, !srcloc !10862
  store i32 %78, i32* %bitpos.i, align 4, !dbg !10860
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !10863
  %add.i = add i32 %79, 1, !dbg !10864
  store i32 %add.i, i32* %retval, align 4, !dbg !10865
  br label %return, !dbg !10865

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !10866
  ret i32 %80, !dbg !10866
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !10867 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10828, metadata !DIExpression()), !dbg !10871
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10835, metadata !DIExpression()), !dbg !10873
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10874, metadata !DIExpression()), !dbg !10875
  %0 = load i64, i64* %n.addr, align 8, !dbg !10876
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10873
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !10877
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !10878
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #5, !dbg !10877, !srcloc !10862
  store i32 %3, i32* %bitpos.i, align 4, !dbg !10877
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !10879
  %add.i = add i32 %4, 1, !dbg !10880
  %sub = sub i32 %add.i, 1, !dbg !10881
  ret i32 %sub, !dbg !10882
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !10883 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10887, metadata !DIExpression()), !dbg !10888
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10889, metadata !DIExpression()), !dbg !10890
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10891, metadata !DIExpression()), !dbg !10892
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10893, metadata !DIExpression()), !dbg !10894
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10895
  ret i8* %0, !dbg !10896
}

; Function Attrs: noredzone
declare dso_local i32 @irq_set_chip_data(i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @lateeoi_list_del(%struct.irq_info* %info) #0 !dbg !10897 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !10269, metadata !DIExpression()), !dbg !10898
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10275, metadata !DIExpression()), !dbg !10900
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10011, metadata !DIExpression()), !dbg !10901
  %info.addr = alloca %struct.irq_info*, align 8
  %eoi = alloca %struct.lateeoi_work*, align 8
  %tmp = alloca %struct.lateeoi_work*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.lateeoi_work*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.irq_info* %info, %struct.irq_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info.addr, metadata !10908, metadata !DIExpression()), !dbg !10909
  call void @llvm.dbg.declare(metadata %struct.lateeoi_work** %eoi, metadata !10910, metadata !DIExpression()), !dbg !10911
  %0 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10912
  %eoi_cpu = getelementptr inbounds %struct.irq_info, %struct.irq_info* %0, i32 0, i32 8, !dbg !10912
  %1 = load i16, i16* %eoi_cpu, align 2, !dbg !10912
  br label %do.body, !dbg !10914

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !10916, metadata !DIExpression()), !dbg !10918
  store i8* null, i8** %__vpp_verify, align 8, !dbg !10918
  %2 = load i8*, i8** %__vpp_verify, align 8, !dbg !10918
  br label %do.end, !dbg !10918

do.end:                                           ; preds = %do.body
  store %struct.lateeoi_work* @lateeoi, %struct.lateeoi_work** %tmp1, align 8, !dbg !10918
  %3 = load %struct.lateeoi_work*, %struct.lateeoi_work** %tmp1, align 8, !dbg !10914
  store %struct.lateeoi_work* %3, %struct.lateeoi_work** %tmp, align 8, !dbg !10912
  %4 = load %struct.lateeoi_work*, %struct.lateeoi_work** %tmp, align 8, !dbg !10912
  store %struct.lateeoi_work* %4, %struct.lateeoi_work** %eoi, align 8, !dbg !10911
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10919, metadata !DIExpression()), !dbg !10920
  br label %do.body2, !dbg !10921

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !10922

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10923, metadata !DIExpression()), !dbg !10925
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10926, metadata !DIExpression()), !dbg !10925
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10925
  %conv = zext i1 %cmp to i32, !dbg !10925
  store i32 1, i32* %tmp4, align 4, !dbg !10925
  %5 = load i32, i32* %tmp4, align 4, !dbg !10925
  br label %do.body5, !dbg !10927

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !10928

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !10929

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !10931, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !10935, metadata !DIExpression()), !dbg !10934
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !10934
  %conv11 = zext i1 %cmp10 to i32, !dbg !10934
  store i32 1, i32* %tmp12, align 4, !dbg !10934
  %6 = load i32, i32* %tmp12, align 4, !dbg !10934
  %call = call i64 @arch_local_irq_save() #12, !dbg !10936
  store i64 %call, i64* %flags, align 8, !dbg !10936
  br label %do.end13, !dbg !10936

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !10929

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !10928

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10937, !srcloc !10938
  br label %do.body16, !dbg !10937

do.body16:                                        ; preds = %do.body15
  %7 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10939
  %eoi_list_lock = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %7, i32 0, i32 1, !dbg !10939
  store %struct.spinlock* %eoi_list_lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10940
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !10941
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !10941
  br label %do.end18, !dbg !10939

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !10937

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10928

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10927

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10922

do.end22:                                         ; preds = %do.end21
  %10 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !10942
  %eoi_list = getelementptr inbounds %struct.irq_info, %struct.irq_info* %10, i32 0, i32 1, !dbg !10943
  call void @list_del_init(%struct.list_head* %eoi_list) #12, !dbg !10944
  %11 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !10945
  %eoi_list_lock23 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %11, i32 0, i32 1, !dbg !10946
  %12 = load i64, i64* %flags, align 8, !dbg !10947
  store %struct.spinlock* %eoi_list_lock23, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !606, metadata !10392, metadata !DIExpression()) #6, !dbg !10948
  call void @llvm.dbg.declare(metadata !606, metadata !10396, metadata !DIExpression()) #6, !dbg !10948
  store i32 1, i32* %tmp.i, align 4, !dbg !10948
  %13 = load i32, i32* %tmp.i, align 4, !dbg !10948
  call void @llvm.dbg.declare(metadata !606, metadata !10397, metadata !DIExpression()) #6, !dbg !10949
  call void @llvm.dbg.declare(metadata !606, metadata !10403, metadata !DIExpression()) #6, !dbg !10949
  store i32 1, i32* %tmp8.i, align 4, !dbg !10949
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !10949
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !10950
  call void @arch_local_irq_restore(i64 %15) #14, !dbg !10950
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10951, !srcloc !10407
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !10952
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !10952
  %rlock.i25 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !10952
  ret void, !dbg !10953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !10954 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10955, metadata !DIExpression()), !dbg !10956
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10957
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !10958
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10959
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !10960
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !10961
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10962
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !10963
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !10964
  ret void, !dbg !10965
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_free_desc(i32 %irq) #0 !dbg !10966 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10967, metadata !DIExpression()), !dbg !10968
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10969
  call void @irq_free_descs(i32 %0, i32 1) #12, !dbg !10970
  ret void, !dbg !10971
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !10972 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10973, metadata !DIExpression()), !dbg !10974
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10975
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !10976
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10977
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #12, !dbg !10978
  ret void, !dbg !10979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !10980 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10981, metadata !DIExpression()), !dbg !10982
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10983
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #12, !dbg !10985
  br i1 %call, label %if.end, label %if.then, !dbg !10986

if.then:                                          ; preds = %entry
  br label %return, !dbg !10987

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10988
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10989
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10989
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10990
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !10991
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10991
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #12, !dbg !10992
  br label %return, !dbg !10993

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !10994 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10997, metadata !DIExpression()), !dbg !10998
  ret i1 true, !dbg !10999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11000 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11001, metadata !DIExpression()), !dbg !11002
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11003, metadata !DIExpression()), !dbg !11004
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11005
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11006
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11007
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !11008
  br label %do.body, !dbg !11009

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !11010

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !11012

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !11010

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11014
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11014
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11014
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !11014
  br label %do.end5, !dbg !11014

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !11010

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !11016
}

; Function Attrs: noredzone
declare dso_local void @irq_free_descs(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_irq_info_common_setup(%struct.irq_info* %info, i32 %irq, i32 %type, i32 %evtchn, i16 zeroext %cpu) #0 !dbg !11017 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.irq_info*, align 8
  %irq.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %cpu.addr = alloca i16, align 2
  %ret = alloca i32, align 4
  store %struct.irq_info* %info, %struct.irq_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info.addr, metadata !11020, metadata !DIExpression()), !dbg !11021
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11022, metadata !DIExpression()), !dbg !11023
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11024, metadata !DIExpression()), !dbg !11025
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !11026, metadata !DIExpression()), !dbg !11027
  store i16 %cpu, i16* %cpu.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cpu.addr, metadata !11028, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11030, metadata !DIExpression()), !dbg !11031
  br label %do.body, !dbg !11032

do.body:                                          ; preds = %entry
  %0 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !11033
  %type1 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %0, i32 0, i32 4, !dbg !11033
  %1 = load i32, i32* %type1, align 4, !dbg !11033
  %cmp = icmp ne i32 %1, 0, !dbg !11033
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11033

land.rhs:                                         ; preds = %do.body
  %2 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !11033
  %type2 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %2, i32 0, i32 4, !dbg !11033
  %3 = load i32, i32* %type2, align 4, !dbg !11033
  %4 = load i32, i32* %type.addr, align 4, !dbg !11033
  %cmp3 = icmp ne i32 %3, %4, !dbg !11033
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.body
  %5 = phi i1 [ false, %do.body ], [ %cmp3, %land.rhs ], !dbg !11036
  %lnot = xor i1 %5, true, !dbg !11033
  %lnot4 = xor i1 %lnot, true, !dbg !11033
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !11033
  %conv = sext i32 %lnot.ext to i64, !dbg !11033
  %tobool = icmp ne i64 %conv, 0, !dbg !11033
  br i1 %tobool, label %if.then, label %if.end, !dbg !11037

if.then:                                          ; preds = %land.end
  br label %do.body5, !dbg !11033

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !11038

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !11040

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !11038

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 269, i32 0, i64 12) #6, !dbg !11042, !srcloc !11044
  br label %do.end8, !dbg !11042

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !11038

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 326) #6, !dbg !11045, !srcloc !11048
  unreachable, !dbg !11049

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !11038

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !11038

if.end:                                           ; preds = %do.end11, %land.end
  br label %do.end12, !dbg !11037

do.end12:                                         ; preds = %if.end
  %6 = load i32, i32* %type.addr, align 4, !dbg !11050
  %7 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !11051
  %type13 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %7, i32 0, i32 4, !dbg !11052
  store i32 %6, i32* %type13, align 4, !dbg !11053
  %8 = load i32, i32* %irq.addr, align 4, !dbg !11054
  %9 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !11055
  %irq14 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %9, i32 0, i32 5, !dbg !11056
  store i32 %8, i32* %irq14, align 8, !dbg !11057
  %10 = load i32, i32* %evtchn.addr, align 4, !dbg !11058
  %11 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !11059
  %evtchn15 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %11, i32 0, i32 6, !dbg !11060
  store i32 %10, i32* %evtchn15, align 4, !dbg !11061
  %12 = load i16, i16* %cpu.addr, align 2, !dbg !11062
  %13 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !11063
  %cpu16 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %13, i32 0, i32 7, !dbg !11064
  store i16 %12, i16* %cpu16, align 8, !dbg !11065
  %14 = load i32, i32* %evtchn.addr, align 4, !dbg !11066
  %15 = load i32, i32* %irq.addr, align 4, !dbg !11067
  %call = call i32 @set_evtchn_to_irq(i32 %14, i32 %15) #12, !dbg !11068
  store i32 %call, i32* %ret, align 4, !dbg !11069
  %16 = load i32, i32* %ret, align 4, !dbg !11070
  %cmp17 = icmp slt i32 %16, 0, !dbg !11072
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11073

if.then19:                                        ; preds = %do.end12
  %17 = load i32, i32* %ret, align 4, !dbg !11074
  store i32 %17, i32* %retval, align 4, !dbg !11075
  br label %return, !dbg !11075

if.end20:                                         ; preds = %do.end12
  %18 = load i32, i32* %irq.addr, align 4, !dbg !11076
  call void @irq_clear_status_flags(i32 %18, i64 6144) #12, !dbg !11077
  %19 = load i32, i32* %evtchn.addr, align 4, !dbg !11078
  %call21 = call i32 @xen_evtchn_port_setup(i32 %19) #12, !dbg !11079
  store i32 %call21, i32* %retval, align 4, !dbg !11080
  br label %return, !dbg !11080

return:                                           ; preds = %if.end20, %if.then19
  %20 = load i32, i32* %retval, align 4, !dbg !11081
  ret i32 %20, !dbg !11081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_evtchn_to_irq(i32 %evtchn, i32 %irq) #0 !dbg !11082 {
entry:
  %retval = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %row = alloca i32, align 4
  %col = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !11085, metadata !DIExpression()), !dbg !11086
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11087, metadata !DIExpression()), !dbg !11088
  call void @llvm.dbg.declare(metadata i32* %row, metadata !11089, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.declare(metadata i32* %col, metadata !11091, metadata !DIExpression()), !dbg !11092
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !11093
  %call = call i32 @xen_evtchn_max_channels() #12, !dbg !11095
  %cmp = icmp uge i32 %0, %call, !dbg !11096
  br i1 %cmp, label %if.then, label %if.end, !dbg !11097

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11098
  br label %return, !dbg !11098

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %evtchn.addr, align 4, !dbg !11099
  %conv = zext i32 %1 to i64, !dbg !11099
  %div = udiv i64 %conv, 1024, !dbg !11099
  %conv1 = trunc i64 %div to i32, !dbg !11099
  store i32 %conv1, i32* %row, align 4, !dbg !11100
  %2 = load i32, i32* %evtchn.addr, align 4, !dbg !11101
  %conv2 = zext i32 %2 to i64, !dbg !11101
  %rem = urem i64 %conv2, 1024, !dbg !11101
  %conv3 = trunc i64 %rem to i32, !dbg !11101
  store i32 %conv3, i32* %col, align 4, !dbg !11102
  %3 = load i32**, i32*** @evtchn_to_irq, align 8, !dbg !11103
  %4 = load i32, i32* %row, align 4, !dbg !11105
  %idxprom = zext i32 %4 to i64, !dbg !11103
  %arrayidx = getelementptr i32*, i32** %3, i64 %idxprom, !dbg !11103
  %5 = load i32*, i32** %arrayidx, align 8, !dbg !11103
  %cmp4 = icmp eq i32* %5, null, !dbg !11106
  br i1 %cmp4, label %if.then6, label %if.end20, !dbg !11107

if.then6:                                         ; preds = %if.end
  %6 = load i32, i32* %irq.addr, align 4, !dbg !11108
  %cmp7 = icmp eq i32 %6, -1, !dbg !11111
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !11112

if.then9:                                         ; preds = %if.then6
  store i32 0, i32* %retval, align 4, !dbg !11113
  br label %return, !dbg !11113

if.end10:                                         ; preds = %if.then6
  %call11 = call i64 @get_zeroed_page(i32 3264) #12, !dbg !11114
  %7 = inttoptr i64 %call11 to i32*, !dbg !11115
  %8 = load i32**, i32*** @evtchn_to_irq, align 8, !dbg !11116
  %9 = load i32, i32* %row, align 4, !dbg !11117
  %idxprom12 = zext i32 %9 to i64, !dbg !11116
  %arrayidx13 = getelementptr i32*, i32** %8, i64 %idxprom12, !dbg !11116
  store i32* %7, i32** %arrayidx13, align 8, !dbg !11118
  %10 = load i32**, i32*** @evtchn_to_irq, align 8, !dbg !11119
  %11 = load i32, i32* %row, align 4, !dbg !11121
  %idxprom14 = zext i32 %11 to i64, !dbg !11119
  %arrayidx15 = getelementptr i32*, i32** %10, i64 %idxprom14, !dbg !11119
  %12 = load i32*, i32** %arrayidx15, align 8, !dbg !11119
  %cmp16 = icmp eq i32* %12, null, !dbg !11122
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !11123

if.then18:                                        ; preds = %if.end10
  store i32 -12, i32* %retval, align 4, !dbg !11124
  br label %return, !dbg !11124

if.end19:                                         ; preds = %if.end10
  %13 = load i32, i32* %row, align 4, !dbg !11125
  call void @clear_evtchn_to_irq_row(i32 %13) #12, !dbg !11126
  br label %if.end20, !dbg !11127

if.end20:                                         ; preds = %if.end19, %if.end
  br label %do.body, !dbg !11128

do.body:                                          ; preds = %if.end20
  br label %do.body21, !dbg !11129

do.body21:                                        ; preds = %do.body
  br label %do.end, !dbg !11131

do.end:                                           ; preds = %do.body21
  br label %do.body22, !dbg !11129

do.body22:                                        ; preds = %do.end
  %14 = load i32, i32* %irq.addr, align 4, !dbg !11133
  %15 = load i32**, i32*** @evtchn_to_irq, align 8, !dbg !11133
  %16 = load i32, i32* %row, align 4, !dbg !11133
  %idxprom23 = zext i32 %16 to i64, !dbg !11133
  %arrayidx24 = getelementptr i32*, i32** %15, i64 %idxprom23, !dbg !11133
  %17 = load i32*, i32** %arrayidx24, align 8, !dbg !11133
  %18 = load i32, i32* %col, align 4, !dbg !11133
  %idxprom25 = zext i32 %18 to i64, !dbg !11133
  %arrayidx26 = getelementptr i32, i32* %17, i64 %idxprom25, !dbg !11133
  store volatile i32 %14, i32* %arrayidx26, align 4, !dbg !11133
  br label %do.end27, !dbg !11133

do.end27:                                         ; preds = %do.body22
  br label %do.end28, !dbg !11129

do.end28:                                         ; preds = %do.end27
  store i32 0, i32* %retval, align 4, !dbg !11135
  br label %return, !dbg !11135

return:                                           ; preds = %do.end28, %if.then18, %if.then9, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !11136
  ret i32 %19, !dbg !11136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_clear_status_flags(i32 %irq, i64 %clr) #0 !dbg !11137 {
entry:
  %irq.addr = alloca i32, align 4
  %clr.addr = alloca i64, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11140, metadata !DIExpression()), !dbg !11141
  store i64 %clr, i64* %clr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %clr.addr, metadata !11142, metadata !DIExpression()), !dbg !11143
  %0 = load i32, i32* %irq.addr, align 4, !dbg !11144
  %1 = load i64, i64* %clr.addr, align 8, !dbg !11145
  call void @irq_modify_status(i32 %0, i64 %1, i64 0) #12, !dbg !11146
  ret void, !dbg !11147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_evtchn_port_setup(i32 %evtchn) #0 !dbg !11148 {
entry:
  %retval = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !11149, metadata !DIExpression()), !dbg !11150
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !11151
  %setup = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 2, !dbg !11153
  %1 = load i32 (i32)*, i32 (i32)** %setup, align 8, !dbg !11153
  %tobool = icmp ne i32 (i32)* %1, null, !dbg !11151
  br i1 %tobool, label %if.then, label %if.end, !dbg !11154

if.then:                                          ; preds = %entry
  %2 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !11155
  %setup1 = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %2, i32 0, i32 2, !dbg !11156
  %3 = load i32 (i32)*, i32 (i32)** %setup1, align 8, !dbg !11156
  %4 = load i32, i32* %evtchn.addr, align 4, !dbg !11157
  %call = call i32 %3(i32 %4) #12, !dbg !11155
  store i32 %call, i32* %retval, align 4, !dbg !11158
  br label %return, !dbg !11158

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11159
  br label %return, !dbg !11159

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11160
  ret i32 %5, !dbg !11160
}

; Function Attrs: noredzone
declare dso_local i64 @get_zeroed_page(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_evtchn_to_irq_row(i32 %row) #0 !dbg !11161 {
entry:
  %row.addr = alloca i32, align 4
  %col = alloca i32, align 4
  store i32 %row, i32* %row.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %row.addr, metadata !11162, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.declare(metadata i32* %col, metadata !11164, metadata !DIExpression()), !dbg !11165
  store i32 0, i32* %col, align 4, !dbg !11166
  br label %for.cond, !dbg !11168

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %col, align 4, !dbg !11169
  %conv = zext i32 %0 to i64, !dbg !11169
  %cmp = icmp ult i64 %conv, 1024, !dbg !11171
  br i1 %cmp, label %for.body, label %for.end, !dbg !11172

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !11173

do.body:                                          ; preds = %for.body
  br label %do.body2, !dbg !11174

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !11176

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !11174

do.body3:                                         ; preds = %do.end
  %1 = load i32**, i32*** @evtchn_to_irq, align 8, !dbg !11178
  %2 = load i32, i32* %row.addr, align 4, !dbg !11178
  %idxprom = zext i32 %2 to i64, !dbg !11178
  %arrayidx = getelementptr i32*, i32** %1, i64 %idxprom, !dbg !11178
  %3 = load i32*, i32** %arrayidx, align 8, !dbg !11178
  %4 = load i32, i32* %col, align 4, !dbg !11178
  %idxprom4 = zext i32 %4 to i64, !dbg !11178
  %arrayidx5 = getelementptr i32, i32* %3, i64 %idxprom4, !dbg !11178
  store volatile i32 -1, i32* %arrayidx5, align 4, !dbg !11178
  br label %do.end6, !dbg !11178

do.end6:                                          ; preds = %do.body3
  br label %do.end7, !dbg !11174

do.end7:                                          ; preds = %do.end6
  br label %for.inc, !dbg !11174

for.inc:                                          ; preds = %do.end7
  %5 = load i32, i32* %col, align 4, !dbg !11180
  %inc = add i32 %5, 1, !dbg !11180
  store i32 %inc, i32* %col, align 4, !dbg !11180
  br label %for.cond, !dbg !11181, !llvm.loop !11182

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11184
}

; Function Attrs: noredzone
declare dso_local void @irq_modify_status(i32, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xen_evtchn_close(i32 %port) #0 !dbg !11185 {
entry:
  %port.addr = alloca i32, align 4
  %close = alloca %struct.evtchn_close, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11186, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.declare(metadata %struct.evtchn_close* %close, metadata !11188, metadata !DIExpression()), !dbg !11192
  %0 = load i32, i32* %port.addr, align 4, !dbg !11193
  %port1 = getelementptr inbounds %struct.evtchn_close, %struct.evtchn_close* %close, i32 0, i32 0, !dbg !11194
  store i32 %0, i32* %port1, align 4, !dbg !11195
  %1 = bitcast %struct.evtchn_close* %close to i8*, !dbg !11196
  %call = call i32 @HYPERVISOR_event_channel_op(i32 3, i8* %1) #12, !dbg !11198
  %cmp = icmp ne i32 %call, 0, !dbg !11199
  br i1 %cmp, label %if.then, label %if.end, !dbg !11200

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11201

do.body:                                          ; preds = %if.then
  br label %do.body2, !dbg !11202

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !11204

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !11202

do.body3:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 714, i32 0, i64 12) #6, !dbg !11206, !srcloc !11208
  br label %do.end4, !dbg !11206

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !11202

do.body5:                                         ; preds = %do.end4
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 342) #6, !dbg !11209, !srcloc !11212
  unreachable, !dbg !11213

do.end6:                                          ; No predecessors!
  br label %do.end7, !dbg !11202

do.end7:                                          ; preds = %do.end6
  br label %if.end, !dbg !11202

if.end:                                           ; preds = %do.end7, %entry
  ret void, !dbg !11214
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @type_from_irq(i32 %irq) #0 !dbg !11215 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11218, metadata !DIExpression()), !dbg !11219
  %0 = load i32, i32* %irq.addr, align 4, !dbg !11220
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !11221
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %call, i32 0, i32 4, !dbg !11222
  %1 = load i32, i32* %type, align 4, !dbg !11222
  ret i32 %1, !dbg !11223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @virq_from_irq(i32 %irq) #0 !dbg !11224 {
entry:
  %irq.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11225, metadata !DIExpression()), !dbg !11226
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !11227, metadata !DIExpression()), !dbg !11228
  %0 = load i32, i32* %irq.addr, align 4, !dbg !11229
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !11230
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !11228
  br label %do.body, !dbg !11231

do.body:                                          ; preds = %entry
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11232
  %cmp = icmp eq %struct.irq_info* %1, null, !dbg !11232
  %lnot = xor i1 %cmp, true, !dbg !11232
  %lnot1 = xor i1 %lnot, true, !dbg !11232
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11232
  %conv = sext i32 %lnot.ext to i64, !dbg !11232
  %tobool = icmp ne i64 %conv, 0, !dbg !11232
  br i1 %tobool, label %if.then, label %if.end, !dbg !11235

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !11232

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !11236

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !11238

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !11236

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 384, i32 0, i64 12) #6, !dbg !11240, !srcloc !11242
  br label %do.end5, !dbg !11240

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !11236

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 329) #6, !dbg !11243, !srcloc !11246
  unreachable, !dbg !11247

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !11236

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !11236

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !11235

do.end9:                                          ; preds = %if.end
  br label %do.body10, !dbg !11248

do.body10:                                        ; preds = %do.end9
  %2 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11249
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %2, i32 0, i32 4, !dbg !11249
  %3 = load i32, i32* %type, align 4, !dbg !11249
  %cmp11 = icmp ne i32 %3, 2, !dbg !11249
  %lnot13 = xor i1 %cmp11, true, !dbg !11249
  %lnot15 = xor i1 %lnot13, true, !dbg !11249
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !11249
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !11249
  %tobool18 = icmp ne i64 %conv17, 0, !dbg !11249
  br i1 %tobool18, label %if.then19, label %if.end28, !dbg !11252

if.then19:                                        ; preds = %do.body10
  br label %do.body20, !dbg !11249

do.body20:                                        ; preds = %if.then19
  br label %do.body21, !dbg !11253

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !11255

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !11253

do.body23:                                        ; preds = %do.end22
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 385, i32 0, i64 12) #6, !dbg !11257, !srcloc !11259
  br label %do.end24, !dbg !11257

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !11253

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 330) #6, !dbg !11260, !srcloc !11263
  unreachable, !dbg !11264

do.end26:                                         ; No predecessors!
  br label %do.end27, !dbg !11253

do.end27:                                         ; preds = %do.end26
  br label %if.end28, !dbg !11253

if.end28:                                         ; preds = %do.end27, %do.body10
  br label %do.end29, !dbg !11252

do.end29:                                         ; preds = %if.end28
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11265
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %4, i32 0, i32 11, !dbg !11266
  %virq = bitcast %union.anon.0* %u to i16*, !dbg !11267
  %5 = load i16, i16* %virq, align 8, !dbg !11267
  %conv30 = zext i16 %5 to i32, !dbg !11265
  ret i32 %conv30, !dbg !11268
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ipi_from_irq(i32 %irq) #0 !dbg !11269 {
entry:
  %irq.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11272, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !11274, metadata !DIExpression()), !dbg !11275
  %0 = load i32, i32* %irq.addr, align 4, !dbg !11276
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !11277
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !11275
  br label %do.body, !dbg !11278

do.body:                                          ; preds = %entry
  %1 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11279
  %cmp = icmp eq %struct.irq_info* %1, null, !dbg !11279
  %lnot = xor i1 %cmp, true, !dbg !11279
  %lnot1 = xor i1 %lnot, true, !dbg !11279
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11279
  %conv = sext i32 %lnot.ext to i64, !dbg !11279
  %tobool = icmp ne i64 %conv, 0, !dbg !11279
  br i1 %tobool, label %if.then, label %if.end, !dbg !11282

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !11279

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !11283

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !11285

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !11283

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 374, i32 0, i64 12) #6, !dbg !11287, !srcloc !11289
  br label %do.end5, !dbg !11287

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !11283

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 327) #6, !dbg !11290, !srcloc !11293
  unreachable, !dbg !11294

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !11283

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !11283

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !11282

do.end9:                                          ; preds = %if.end
  br label %do.body10, !dbg !11295

do.body10:                                        ; preds = %do.end9
  %2 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11296
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %2, i32 0, i32 4, !dbg !11296
  %3 = load i32, i32* %type, align 4, !dbg !11296
  %cmp11 = icmp ne i32 %3, 3, !dbg !11296
  %lnot13 = xor i1 %cmp11, true, !dbg !11296
  %lnot15 = xor i1 %lnot13, true, !dbg !11296
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !11296
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !11296
  %tobool18 = icmp ne i64 %conv17, 0, !dbg !11296
  br i1 %tobool18, label %if.then19, label %if.end28, !dbg !11299

if.then19:                                        ; preds = %do.body10
  br label %do.body20, !dbg !11296

do.body20:                                        ; preds = %if.then19
  br label %do.body21, !dbg !11300

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !11302

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !11300

do.body23:                                        ; preds = %do.end22
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 375, i32 0, i64 12) #6, !dbg !11304, !srcloc !11306
  br label %do.end24, !dbg !11304

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !11300

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 328) #6, !dbg !11307, !srcloc !11310
  unreachable, !dbg !11311

do.end26:                                         ; No predecessors!
  br label %do.end27, !dbg !11300

do.end27:                                         ; preds = %do.end26
  br label %if.end28, !dbg !11300

if.end28:                                         ; preds = %do.end27, %do.body10
  br label %do.end29, !dbg !11299

do.end29:                                         ; preds = %if.end28
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11312
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %4, i32 0, i32 11, !dbg !11313
  %ipi = bitcast %union.anon.0* %u to i32*, !dbg !11314
  %5 = load i32, i32* %ipi, align 8, !dbg !11314
  ret i32 %5, !dbg !11315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xen_irq_info_cleanup(%struct.irq_info* %info) #0 !dbg !11316 {
entry:
  %info.addr = alloca %struct.irq_info*, align 8
  store %struct.irq_info* %info, %struct.irq_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info.addr, metadata !11317, metadata !DIExpression()), !dbg !11318
  %0 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !11319
  %evtchn = getelementptr inbounds %struct.irq_info, %struct.irq_info* %0, i32 0, i32 6, !dbg !11320
  %1 = load i32, i32* %evtchn, align 4, !dbg !11320
  %call = call i32 @set_evtchn_to_irq(i32 %1, i32 -1) #12, !dbg !11321
  %2 = load %struct.irq_info*, %struct.irq_info** %info.addr, align 8, !dbg !11322
  %evtchn1 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %2, i32 0, i32 6, !dbg !11323
  store i32 0, i32* %evtchn1, align 4, !dbg !11324
  ret void, !dbg !11325
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xen_evtchn_port_bind_to_cpu(i32 %evtchn, i32 %cpu, i32 %old_cpu) #0 !dbg !11326 {
entry:
  %evtchn.addr = alloca i32, align 4
  %cpu.addr = alloca i32, align 4
  %old_cpu.addr = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !11327, metadata !DIExpression()), !dbg !11328
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !11329, metadata !DIExpression()), !dbg !11330
  store i32 %old_cpu, i32* %old_cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_cpu.addr, metadata !11331, metadata !DIExpression()), !dbg !11332
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !11333
  %bind_to_cpu = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 3, !dbg !11334
  %1 = load void (i32, i32, i32)*, void (i32, i32, i32)** %bind_to_cpu, align 8, !dbg !11334
  %2 = load i32, i32* %evtchn.addr, align 4, !dbg !11335
  %3 = load i32, i32* %cpu.addr, align 4, !dbg !11336
  %4 = load i32, i32* %old_cpu.addr, align 4, !dbg !11337
  call void %1(i32 %2, i32 %3, i32 %4) #12, !dbg !11333
  ret void, !dbg !11338
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_irq_info_ipi_setup(i32 %cpu, i32 %irq, i32 %evtchn, i32 %ipi) #0 !dbg !11339 {
entry:
  %cpu.addr = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %ipi.addr = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %tmp = alloca [6 x i32]*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp2 = alloca [6 x i32]*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !11342, metadata !DIExpression()), !dbg !11343
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11344, metadata !DIExpression()), !dbg !11345
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !11346, metadata !DIExpression()), !dbg !11347
  store i32 %ipi, i32* %ipi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ipi.addr, metadata !11348, metadata !DIExpression()), !dbg !11349
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !11350, metadata !DIExpression()), !dbg !11351
  %0 = load i32, i32* %irq.addr, align 4, !dbg !11352
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !11353
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !11351
  %1 = load i32, i32* %ipi.addr, align 4, !dbg !11354
  %2 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11355
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %2, i32 0, i32 11, !dbg !11356
  %ipi1 = bitcast %union.anon.0* %u to i32*, !dbg !11357
  store i32 %1, i32* %ipi1, align 8, !dbg !11358
  %3 = load i32, i32* %irq.addr, align 4, !dbg !11359
  %4 = load i32, i32* %cpu.addr, align 4, !dbg !11360
  br label %do.body, !dbg !11362

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !11364, metadata !DIExpression()), !dbg !11366
  store i8* null, i8** %__vpp_verify, align 8, !dbg !11366
  %5 = load i8*, i8** %__vpp_verify, align 8, !dbg !11366
  br label %do.end, !dbg !11366

do.end:                                           ; preds = %do.body
  store [6 x i32]* @ipi_to_irq, [6 x i32]** %tmp2, align 8, !dbg !11366
  %6 = load [6 x i32]*, [6 x i32]** %tmp2, align 8, !dbg !11362
  store [6 x i32]* %6, [6 x i32]** %tmp, align 8, !dbg !11360
  %7 = load [6 x i32]*, [6 x i32]** %tmp, align 8, !dbg !11360
  %8 = load i32, i32* %ipi.addr, align 4, !dbg !11367
  %idxprom = zext i32 %8 to i64, !dbg !11368
  %arrayidx = getelementptr [6 x i32], [6 x i32]* %7, i64 0, i64 %idxprom, !dbg !11368
  store i32 %3, i32* %arrayidx, align 4, !dbg !11369
  %9 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11370
  %10 = load i32, i32* %irq.addr, align 4, !dbg !11371
  %11 = load i32, i32* %evtchn.addr, align 4, !dbg !11372
  %call3 = call i32 @xen_irq_info_common_setup(%struct.irq_info* %9, i32 %10, i32 3, i32 %11, i16 zeroext 0) #12, !dbg !11373
  ret i32 %call3, !dbg !11374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xen_evtchn_handle_events(i32 %cpu, %struct.evtchn_loop_ctrl* %ctrl) #0 !dbg !11375 {
entry:
  %cpu.addr = alloca i32, align 4
  %ctrl.addr = alloca %struct.evtchn_loop_ctrl*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !11376, metadata !DIExpression()), !dbg !11377
  store %struct.evtchn_loop_ctrl* %ctrl, %struct.evtchn_loop_ctrl** %ctrl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.evtchn_loop_ctrl** %ctrl.addr, metadata !11378, metadata !DIExpression()), !dbg !11379
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !11380
  %handle_events = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 10, !dbg !11381
  %1 = load void (i32, %struct.evtchn_loop_ctrl*)*, void (i32, %struct.evtchn_loop_ctrl*)** %handle_events, align 8, !dbg !11381
  %2 = load i32, i32* %cpu.addr, align 4, !dbg !11382
  %3 = load %struct.evtchn_loop_ctrl*, %struct.evtchn_loop_ctrl** %ctrl.addr, align 8, !dbg !11383
  call void %1(i32 %2, %struct.evtchn_loop_ctrl* %3) #12, !dbg !11380
  ret void, !dbg !11384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpumask_next_and(i32 %n, %struct.cpumask* %srcp, %struct.cpumask* %andp) #0 !dbg !11385 {
entry:
  %n.addr = alloca i32, align 4
  %srcp.addr = alloca %struct.cpumask*, align 8
  %andp.addr = alloca %struct.cpumask*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !11388, metadata !DIExpression()), !dbg !11389
  store %struct.cpumask* %srcp, %struct.cpumask** %srcp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %srcp.addr, metadata !11390, metadata !DIExpression()), !dbg !11391
  store %struct.cpumask* %andp, %struct.cpumask** %andp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %andp.addr, metadata !11392, metadata !DIExpression()), !dbg !11393
  %0 = load i32, i32* %n.addr, align 4, !dbg !11394
  %add = add i32 %0, 1, !dbg !11395
  ret i32 %add, !dbg !11396
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_rebind_evtchn_to_cpu(i32 %evtchn, i32 %tcpu) #0 !dbg !11397 {
entry:
  %retval = alloca i32, align 4
  %evtchn.addr = alloca i32, align 4
  %tcpu.addr = alloca i32, align 4
  %bind_vcpu = alloca %struct.evtchn_bind_vcpu, align 4
  %masked = alloca i32, align 4
  store i32 %evtchn, i32* %evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %evtchn.addr, metadata !11398, metadata !DIExpression()), !dbg !11399
  store i32 %tcpu, i32* %tcpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tcpu.addr, metadata !11400, metadata !DIExpression()), !dbg !11401
  call void @llvm.dbg.declare(metadata %struct.evtchn_bind_vcpu* %bind_vcpu, metadata !11402, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.declare(metadata i32* %masked, metadata !11408, metadata !DIExpression()), !dbg !11409
  %0 = load i32, i32* %evtchn.addr, align 4, !dbg !11410
  %cmp = icmp ne i32 %0, 0, !dbg !11410
  br i1 %cmp, label %if.end, label %if.then, !dbg !11412

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !11413
  br label %return, !dbg !11413

if.end:                                           ; preds = %entry
  %call = call zeroext i1 @xen_support_evtchn_rebind() #12, !dbg !11414
  br i1 %call, label %if.end2, label %if.then1, !dbg !11416

if.then1:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !11417
  br label %return, !dbg !11417

if.end2:                                          ; preds = %if.end
  %1 = load i32, i32* %evtchn.addr, align 4, !dbg !11418
  %port = getelementptr inbounds %struct.evtchn_bind_vcpu, %struct.evtchn_bind_vcpu* %bind_vcpu, i32 0, i32 0, !dbg !11419
  store i32 %1, i32* %port, align 4, !dbg !11420
  %2 = load i32, i32* %tcpu.addr, align 4, !dbg !11421
  %call3 = call i32 @xen_vcpu_nr(i32 %2) #12, !dbg !11422
  %vcpu = getelementptr inbounds %struct.evtchn_bind_vcpu, %struct.evtchn_bind_vcpu* %bind_vcpu, i32 0, i32 1, !dbg !11423
  store i32 %call3, i32* %vcpu, align 4, !dbg !11424
  %3 = load i32, i32* %evtchn.addr, align 4, !dbg !11425
  %call4 = call zeroext i1 @test_and_set_mask(i32 %3) #12, !dbg !11426
  %conv = zext i1 %call4 to i32, !dbg !11426
  store i32 %conv, i32* %masked, align 4, !dbg !11427
  %4 = bitcast %struct.evtchn_bind_vcpu* %bind_vcpu to i8*, !dbg !11428
  %call5 = call i32 @HYPERVISOR_event_channel_op(i32 8, i8* %4) #12, !dbg !11430
  %cmp6 = icmp sge i32 %call5, 0, !dbg !11431
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !11432

if.then8:                                         ; preds = %if.end2
  %5 = load i32, i32* %evtchn.addr, align 4, !dbg !11433
  %6 = load i32, i32* %tcpu.addr, align 4, !dbg !11434
  call void @bind_evtchn_to_cpu(i32 %5, i32 %6) #12, !dbg !11435
  br label %if.end9, !dbg !11435

if.end9:                                          ; preds = %if.then8, %if.end2
  %7 = load i32, i32* %masked, align 4, !dbg !11436
  %tobool = icmp ne i32 %7, 0, !dbg !11436
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !11438

if.then10:                                        ; preds = %if.end9
  %8 = load i32, i32* %evtchn.addr, align 4, !dbg !11439
  call void @unmask_evtchn(i32 %8) #12, !dbg !11440
  br label %if.end11, !dbg !11440

if.end11:                                         ; preds = %if.then10, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !11441
  br label %return, !dbg !11441

return:                                           ; preds = %if.end11, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !11442
  ret i32 %9, !dbg !11442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_data_update_effective_affinity(%struct.irq_data* %d, %struct.cpumask* %m) #0 !dbg !11443 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  %m.addr = alloca %struct.cpumask*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !11444, metadata !DIExpression()), !dbg !11445
  store %struct.cpumask* %m, %struct.cpumask** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cpumask** %m.addr, metadata !11446, metadata !DIExpression()), !dbg !11447
  ret void, !dbg !11448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @xen_support_evtchn_rebind() #0 !dbg !11449 {
entry:
  %0 = load i32, i32* @xen_domain_type, align 4, !dbg !11450
  %cmp = icmp eq i32 %0, 2, !dbg !11450
  br i1 %cmp, label %lor.rhs, label %lor.end, !dbg !11451

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* @xen_have_vector_callback, align 4, !dbg !11452
  %tobool = icmp ne i32 %1, 0, !dbg !11451
  br label %lor.end, !dbg !11451

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]
  ret i1 %2, !dbg !11453
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_mask(i32 %port) #0 !dbg !11454 {
entry:
  %port.addr = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !11455, metadata !DIExpression()), !dbg !11456
  %0 = load %struct.evtchn_ops*, %struct.evtchn_ops** @evtchn_ops, align 8, !dbg !11457
  %test_and_set_mask = getelementptr inbounds %struct.evtchn_ops, %struct.evtchn_ops* %0, i32 0, i32 7, !dbg !11458
  %1 = load i1 (i32)*, i1 (i32)** %test_and_set_mask, align 8, !dbg !11458
  %2 = load i32, i32* %port.addr, align 4, !dbg !11459
  %call = call zeroext i1 %1(i32 %2) #12, !dbg !11457
  ret i1 %call, !dbg !11460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__startup_pirq(i32 %irq) #0 !dbg !11461 {
entry:
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %bind_pirq = alloca %struct.evtchn_bind_pirq, align 4
  %info = alloca %struct.irq_info*, align 8
  %evtchn = alloca i32, align 4
  %rc = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11462, metadata !DIExpression()), !dbg !11463
  call void @llvm.dbg.declare(metadata %struct.evtchn_bind_pirq* %bind_pirq, metadata !11464, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !11471, metadata !DIExpression()), !dbg !11472
  %0 = load i32, i32* %irq.addr, align 4, !dbg !11473
  %call = call %struct.irq_info* @info_for_irq(i32 %0) #12, !dbg !11474
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !11472
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !11475, metadata !DIExpression()), !dbg !11476
  %1 = load i32, i32* %irq.addr, align 4, !dbg !11477
  %call1 = call i32 @evtchn_from_irq(i32 %1) #12, !dbg !11478
  store i32 %call1, i32* %evtchn, align 4, !dbg !11476
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11479, metadata !DIExpression()), !dbg !11480
  br label %do.body, !dbg !11481

do.body:                                          ; preds = %entry
  %2 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11482
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %2, i32 0, i32 4, !dbg !11482
  %3 = load i32, i32* %type, align 4, !dbg !11482
  %cmp = icmp ne i32 %3, 1, !dbg !11482
  %lnot = xor i1 %cmp, true, !dbg !11482
  %lnot2 = xor i1 %lnot, true, !dbg !11482
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11482
  %conv = sext i32 %lnot.ext to i64, !dbg !11482
  %tobool = icmp ne i64 %conv, 0, !dbg !11482
  br i1 %tobool, label %if.then, label %if.end, !dbg !11485

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !11482

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !11486

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !11488

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !11486

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 774, i32 0, i64 12) #6, !dbg !11490, !srcloc !11492
  br label %do.end6, !dbg !11490

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !11486

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 345) #6, !dbg !11493, !srcloc !11496
  unreachable, !dbg !11497

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !11486

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !11486

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !11485

do.end10:                                         ; preds = %if.end
  %4 = load i32, i32* %evtchn, align 4, !dbg !11498
  %cmp11 = icmp ne i32 %4, 0, !dbg !11498
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !11500

if.then13:                                        ; preds = %do.end10
  br label %out, !dbg !11501

if.end14:                                         ; preds = %do.end10
  %5 = load i32, i32* %irq.addr, align 4, !dbg !11502
  %call15 = call i32 @pirq_from_irq(i32 %5) #12, !dbg !11503
  %pirq = getelementptr inbounds %struct.evtchn_bind_pirq, %struct.evtchn_bind_pirq* %bind_pirq, i32 0, i32 0, !dbg !11504
  store i32 %call15, i32* %pirq, align 4, !dbg !11505
  %6 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11506
  %u = getelementptr inbounds %struct.irq_info, %struct.irq_info* %6, i32 0, i32 11, !dbg !11507
  %pirq16 = bitcast %union.anon.0* %u to %struct.anon*, !dbg !11508
  %flags = getelementptr inbounds %struct.anon, %struct.anon* %pirq16, i32 0, i32 3, !dbg !11509
  %7 = load i8, i8* %flags, align 1, !dbg !11509
  %conv17 = zext i8 %7 to i32, !dbg !11506
  %and = and i32 %conv17, 2, !dbg !11510
  %tobool18 = icmp ne i32 %and, 0, !dbg !11506
  %8 = zext i1 %tobool18 to i64, !dbg !11506
  %cond = select i1 %tobool18, i32 1, i32 0, !dbg !11506
  %flags19 = getelementptr inbounds %struct.evtchn_bind_pirq, %struct.evtchn_bind_pirq* %bind_pirq, i32 0, i32 1, !dbg !11511
  store i32 %cond, i32* %flags19, align 4, !dbg !11512
  %9 = bitcast %struct.evtchn_bind_pirq* %bind_pirq to i8*, !dbg !11513
  %call20 = call i32 @HYPERVISOR_event_channel_op(i32 2, i8* %9) #12, !dbg !11514
  store i32 %call20, i32* %rc, align 4, !dbg !11515
  %10 = load i32, i32* %rc, align 4, !dbg !11516
  %cmp21 = icmp ne i32 %10, 0, !dbg !11518
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !11519

if.then23:                                        ; preds = %if.end14
  %11 = load i32, i32* %irq.addr, align 4, !dbg !11520
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.18, i64 0, i64 0), i32 %11) #13, !dbg !11520
  store i32 0, i32* %retval, align 4, !dbg !11522
  br label %return, !dbg !11522

if.end25:                                         ; preds = %if.end14
  %port = getelementptr inbounds %struct.evtchn_bind_pirq, %struct.evtchn_bind_pirq* %bind_pirq, i32 0, i32 2, !dbg !11523
  %12 = load i32, i32* %port, align 4, !dbg !11523
  store i32 %12, i32* %evtchn, align 4, !dbg !11524
  %13 = load i32, i32* %irq.addr, align 4, !dbg !11525
  call void @pirq_query_unmask(i32 %13) #12, !dbg !11526
  %14 = load i32, i32* %evtchn, align 4, !dbg !11527
  %15 = load i32, i32* %irq.addr, align 4, !dbg !11528
  %call26 = call i32 @set_evtchn_to_irq(i32 %14, i32 %15) #12, !dbg !11529
  store i32 %call26, i32* %rc, align 4, !dbg !11530
  %16 = load i32, i32* %rc, align 4, !dbg !11531
  %tobool27 = icmp ne i32 %16, 0, !dbg !11531
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !11533

if.then28:                                        ; preds = %if.end25
  br label %err, !dbg !11534

if.end29:                                         ; preds = %if.end25
  %17 = load i32, i32* %evtchn, align 4, !dbg !11535
  %18 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11536
  %evtchn30 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %18, i32 0, i32 6, !dbg !11537
  store i32 %17, i32* %evtchn30, align 4, !dbg !11538
  %19 = load i32, i32* %evtchn, align 4, !dbg !11539
  call void @bind_evtchn_to_cpu(i32 %19, i32 0) #12, !dbg !11540
  %20 = load i32, i32* %evtchn, align 4, !dbg !11541
  %call31 = call i32 @xen_evtchn_port_setup(i32 %20) #12, !dbg !11542
  store i32 %call31, i32* %rc, align 4, !dbg !11543
  %21 = load i32, i32* %rc, align 4, !dbg !11544
  %tobool32 = icmp ne i32 %21, 0, !dbg !11544
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !11546

if.then33:                                        ; preds = %if.end29
  br label %err, !dbg !11547

if.end34:                                         ; preds = %if.end29
  br label %out, !dbg !11544

out:                                              ; preds = %if.end34, %if.then13
  call void @llvm.dbg.label(metadata !11548), !dbg !11549
  %22 = load i32, i32* %evtchn, align 4, !dbg !11550
  call void @unmask_evtchn(i32 %22) #12, !dbg !11551
  %23 = load i32, i32* %irq.addr, align 4, !dbg !11552
  %call35 = call %struct.irq_data* @irq_get_irq_data(i32 %23) #12, !dbg !11553
  call void @eoi_pirq(%struct.irq_data* %call35) #12, !dbg !11554
  store i32 0, i32* %retval, align 4, !dbg !11555
  br label %return, !dbg !11555

err:                                              ; preds = %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !11556), !dbg !11557
  %24 = load i32, i32* %irq.addr, align 4, !dbg !11558
  %25 = load i32, i32* %rc, align 4, !dbg !11558
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.19, i64 0, i64 0), i32 %24, i32 %25) #13, !dbg !11558
  %26 = load i32, i32* %evtchn, align 4, !dbg !11559
  call void @xen_evtchn_close(i32 %26) #12, !dbg !11560
  store i32 0, i32* %retval, align 4, !dbg !11561
  br label %return, !dbg !11561

return:                                           ; preds = %err, %out, %if.then23
  %27 = load i32, i32* %retval, align 4, !dbg !11562
  ret i32 %27, !dbg !11562
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eoi_pirq(%struct.irq_data* %data) #0 !dbg !11563 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  %evtchn = alloca i32, align 4
  %eoi = alloca %struct.physdev_eoi, align 4
  %rc = alloca i32, align 4
  %masked = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11564, metadata !DIExpression()), !dbg !11565
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !11566, metadata !DIExpression()), !dbg !11567
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11568
  %irq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 1, !dbg !11569
  %1 = load i32, i32* %irq, align 4, !dbg !11569
  %call = call i32 @evtchn_from_irq(i32 %1) #12, !dbg !11570
  store i32 %call, i32* %evtchn, align 4, !dbg !11567
  call void @llvm.dbg.declare(metadata %struct.physdev_eoi* %eoi, metadata !11571, metadata !DIExpression()), !dbg !11575
  %irq1 = getelementptr inbounds %struct.physdev_eoi, %struct.physdev_eoi* %eoi, i32 0, i32 0, !dbg !11576
  %2 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11577
  %irq2 = getelementptr inbounds %struct.irq_data, %struct.irq_data* %2, i32 0, i32 1, !dbg !11578
  %3 = load i32, i32* %irq2, align 4, !dbg !11578
  %call3 = call i32 @pirq_from_irq(i32 %3) #12, !dbg !11579
  store i32 %call3, i32* %irq1, align 4, !dbg !11576
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11580, metadata !DIExpression()), !dbg !11581
  store i32 0, i32* %rc, align 4, !dbg !11581
  %4 = load i32, i32* %evtchn, align 4, !dbg !11582
  %cmp = icmp ne i32 %4, 0, !dbg !11582
  br i1 %cmp, label %if.end, label %if.then, !dbg !11584

if.then:                                          ; preds = %entry
  br label %if.end52, !dbg !11585

if.end:                                           ; preds = %entry
  %5 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11586
  %call4 = call zeroext i1 @irqd_is_setaffinity_pending(%struct.irq_data* %5) #12, !dbg !11586
  %lnot = xor i1 %call4, true, !dbg !11586
  %lnot5 = xor i1 %lnot, true, !dbg !11586
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !11586
  %conv = sext i32 %lnot.ext to i64, !dbg !11586
  %tobool = icmp ne i64 %conv, 0, !dbg !11586
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !11588

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11589
  %call6 = call zeroext i1 @irqd_irq_disabled(%struct.irq_data* %6) #12, !dbg !11589
  %lnot7 = xor i1 %call6, true, !dbg !11589
  %lnot9 = xor i1 %lnot7, true, !dbg !11589
  %lnot11 = xor i1 %lnot9, true, !dbg !11589
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !11589
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !11589
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !11589
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !11590

if.then15:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %masked, metadata !11591, metadata !DIExpression()), !dbg !11593
  %7 = load i32, i32* %evtchn, align 4, !dbg !11594
  %call16 = call zeroext i1 @test_and_set_mask(i32 %7) #12, !dbg !11595
  %conv17 = zext i1 %call16 to i32, !dbg !11595
  store i32 %conv17, i32* %masked, align 4, !dbg !11593
  %8 = load i32, i32* %evtchn, align 4, !dbg !11596
  call void @clear_evtchn(i32 %8) #12, !dbg !11597
  %9 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11598
  call void @irq_move_masked_irq(%struct.irq_data* %9) #12, !dbg !11599
  %10 = load i32, i32* %masked, align 4, !dbg !11600
  %tobool18 = icmp ne i32 %10, 0, !dbg !11600
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !11602

if.then19:                                        ; preds = %if.then15
  %11 = load i32, i32* %evtchn, align 4, !dbg !11603
  call void @unmask_evtchn(i32 %11) #12, !dbg !11604
  br label %if.end20, !dbg !11604

if.end20:                                         ; preds = %if.then19, %if.then15
  br label %if.end21, !dbg !11605

if.else:                                          ; preds = %land.lhs.true, %if.end
  %12 = load i32, i32* %evtchn, align 4, !dbg !11606
  call void @clear_evtchn(i32 %12) #12, !dbg !11607
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.end20
  %13 = load i1 (i32)*, i1 (i32)** @pirq_needs_eoi, align 8, !dbg !11608
  %14 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11610
  %irq22 = getelementptr inbounds %struct.irq_data, %struct.irq_data* %14, i32 0, i32 1, !dbg !11611
  %15 = load i32, i32* %irq22, align 4, !dbg !11611
  %call23 = call zeroext i1 %13(i32 %15) #12, !dbg !11608
  br i1 %call23, label %if.then24, label %if.end52, !dbg !11612

if.then24:                                        ; preds = %if.end21
  %16 = bitcast %struct.physdev_eoi* %eoi to i8*, !dbg !11613
  %call25 = call i32 @HYPERVISOR_physdev_op(i32 12, i8* %16) #12, !dbg !11615
  store i32 %call25, i32* %rc, align 4, !dbg !11616
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11617, metadata !DIExpression()), !dbg !11619
  %17 = load i32, i32* %rc, align 4, !dbg !11619
  %tobool26 = icmp ne i32 %17, 0, !dbg !11619
  %lnot27 = xor i1 %tobool26, true, !dbg !11619
  %lnot29 = xor i1 %lnot27, true, !dbg !11619
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !11619
  store i32 %lnot.ext30, i32* %__ret_warn_on, align 4, !dbg !11619
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !11620
  %tobool31 = icmp ne i32 %18, 0, !dbg !11620
  %lnot32 = xor i1 %tobool31, true, !dbg !11620
  %lnot34 = xor i1 %lnot32, true, !dbg !11620
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !11620
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !11620
  %tobool37 = icmp ne i64 %conv36, 0, !dbg !11620
  br i1 %tobool37, label %if.then38, label %if.end45, !dbg !11619

if.then38:                                        ; preds = %if.then24
  br label %do.body, !dbg !11620

do.body:                                          ; preds = %if.then38
  br label %do.body39, !dbg !11622

do.body39:                                        ; preds = %do.body
  br label %do.end, !dbg !11624

do.end:                                           ; preds = %do.body39
  br label %do.body40, !dbg !11622

do.body40:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 757, i32 2305, i64 12) #6, !dbg !11626, !srcloc !11628
  br label %do.end41, !dbg !11626

do.end41:                                         ; preds = %do.body40
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 344) #6, !dbg !11629, !srcloc !11631
  br label %do.body42, !dbg !11622

do.body42:                                        ; preds = %do.end41
  br label %do.end43, !dbg !11632

do.end43:                                         ; preds = %do.body42
  br label %do.end44, !dbg !11622

do.end44:                                         ; preds = %do.end43
  br label %if.end45, !dbg !11622

if.end45:                                         ; preds = %do.end44, %if.then24
  %19 = load i32, i32* %__ret_warn_on, align 4, !dbg !11619
  %tobool46 = icmp ne i32 %19, 0, !dbg !11619
  %lnot47 = xor i1 %tobool46, true, !dbg !11619
  %lnot49 = xor i1 %lnot47, true, !dbg !11619
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !11619
  %conv51 = sext i32 %lnot.ext50 to i64, !dbg !11619
  store i64 %conv51, i64* %tmp, align 8, !dbg !11620
  %20 = load i64, i64* %tmp, align 8, !dbg !11619
  br label %if.end52, !dbg !11634

if.end52:                                         ; preds = %if.then, %if.end45, %if.end21
  ret void, !dbg !11635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @irqd_is_setaffinity_pending(%struct.irq_data* %d) #0 !dbg !11636 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !11639, metadata !DIExpression()), !dbg !11640
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !11641
  %common = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 3, !dbg !11641
  %1 = load %struct.irq_common_data*, %struct.irq_common_data** %common, align 8, !dbg !11641
  %state_use_accessors = getelementptr inbounds %struct.irq_common_data, %struct.irq_common_data* %1, i32 0, i32 0, !dbg !11641
  %2 = load i32, i32* %state_use_accessors, align 8, !dbg !11641
  %and = and i32 %2, 256, !dbg !11642
  %tobool = icmp ne i32 %and, 0, !dbg !11641
  ret i1 %tobool, !dbg !11643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @irqd_irq_disabled(%struct.irq_data* %d) #0 !dbg !11644 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !11645, metadata !DIExpression()), !dbg !11646
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !11647
  %common = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 3, !dbg !11647
  %1 = load %struct.irq_common_data*, %struct.irq_common_data** %common, align 8, !dbg !11647
  %state_use_accessors = getelementptr inbounds %struct.irq_common_data, %struct.irq_common_data* %1, i32 0, i32 0, !dbg !11647
  %2 = load i32, i32* %state_use_accessors, align 8, !dbg !11647
  %and = and i32 %2, 65536, !dbg !11648
  %tobool = icmp ne i32 %and, 0, !dbg !11647
  ret i1 %tobool, !dbg !11649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @irq_move_masked_irq(%struct.irq_data* %data) #0 !dbg !11650 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11651, metadata !DIExpression()), !dbg !11652
  ret void, !dbg !11653
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_dynirq(%struct.irq_data* %data) #0 !dbg !11654 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  %evtchn = alloca i32, align 4
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11655, metadata !DIExpression()), !dbg !11656
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !11657, metadata !DIExpression()), !dbg !11658
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11659
  %irq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 1, !dbg !11660
  %1 = load i32, i32* %irq, align 4, !dbg !11660
  %call = call i32 @evtchn_from_irq(i32 %1) #12, !dbg !11661
  store i32 %call, i32* %evtchn, align 4, !dbg !11658
  %2 = load i32, i32* %evtchn, align 4, !dbg !11662
  %cmp = icmp ne i32 %2, 0, !dbg !11662
  br i1 %cmp, label %if.then, label %if.end, !dbg !11664

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %evtchn, align 4, !dbg !11665
  call void @mask_evtchn(i32 %3) #12, !dbg !11666
  br label %if.end, !dbg !11666

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ack_dynirq(%struct.irq_data* %data) #0 !dbg !11668 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  %evtchn = alloca i32, align 4
  %masked = alloca i32, align 4
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11669, metadata !DIExpression()), !dbg !11670
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !11671, metadata !DIExpression()), !dbg !11672
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11673
  %irq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 1, !dbg !11674
  %1 = load i32, i32* %irq, align 4, !dbg !11674
  %call = call i32 @evtchn_from_irq(i32 %1) #12, !dbg !11675
  store i32 %call, i32* %evtchn, align 4, !dbg !11672
  %2 = load i32, i32* %evtchn, align 4, !dbg !11676
  %cmp = icmp ne i32 %2, 0, !dbg !11676
  br i1 %cmp, label %if.end, label %if.then, !dbg !11678

if.then:                                          ; preds = %entry
  br label %if.end18, !dbg !11679

if.end:                                           ; preds = %entry
  %3 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11680
  %call1 = call zeroext i1 @irqd_is_setaffinity_pending(%struct.irq_data* %3) #12, !dbg !11680
  %lnot = xor i1 %call1, true, !dbg !11680
  %lnot2 = xor i1 %lnot, true, !dbg !11680
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11680
  %conv = sext i32 %lnot.ext to i64, !dbg !11680
  %tobool = icmp ne i64 %conv, 0, !dbg !11680
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !11682

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11683
  %call3 = call zeroext i1 @irqd_irq_disabled(%struct.irq_data* %4) #12, !dbg !11683
  %lnot4 = xor i1 %call3, true, !dbg !11683
  %lnot6 = xor i1 %lnot4, true, !dbg !11683
  %lnot8 = xor i1 %lnot6, true, !dbg !11683
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !11683
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !11683
  %tobool11 = icmp ne i64 %conv10, 0, !dbg !11683
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !11684

if.then12:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %masked, metadata !11685, metadata !DIExpression()), !dbg !11687
  %5 = load i32, i32* %evtchn, align 4, !dbg !11688
  %call13 = call zeroext i1 @test_and_set_mask(i32 %5) #12, !dbg !11689
  %conv14 = zext i1 %call13 to i32, !dbg !11689
  store i32 %conv14, i32* %masked, align 4, !dbg !11687
  %6 = load i32, i32* %evtchn, align 4, !dbg !11690
  call void @clear_evtchn(i32 %6) #12, !dbg !11691
  %7 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11692
  call void @irq_move_masked_irq(%struct.irq_data* %7) #12, !dbg !11693
  %8 = load i32, i32* %masked, align 4, !dbg !11694
  %tobool15 = icmp ne i32 %8, 0, !dbg !11694
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11696

if.then16:                                        ; preds = %if.then12
  %9 = load i32, i32* %evtchn, align 4, !dbg !11697
  call void @unmask_evtchn(i32 %9) #12, !dbg !11698
  br label %if.end17, !dbg !11698

if.end17:                                         ; preds = %if.then16, %if.then12
  br label %if.end18, !dbg !11699

if.else:                                          ; preds = %land.lhs.true, %if.end
  %10 = load i32, i32* %evtchn, align 4, !dbg !11700
  call void @clear_evtchn(i32 %10) #12, !dbg !11701
  br label %if.end18

if.end18:                                         ; preds = %if.then, %if.else, %if.end17
  ret void, !dbg !11702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mask_ack_dynirq(%struct.irq_data* %data) #0 !dbg !11703 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11704, metadata !DIExpression()), !dbg !11705
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11706
  call void @disable_dynirq(%struct.irq_data* %0) #12, !dbg !11707
  %1 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11708
  call void @ack_dynirq(%struct.irq_data* %1) #12, !dbg !11709
  ret void, !dbg !11710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_dynirq(%struct.irq_data* %data) #0 !dbg !11711 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  %evtchn = alloca i32, align 4
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11712, metadata !DIExpression()), !dbg !11713
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !11714, metadata !DIExpression()), !dbg !11715
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11716
  %irq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 1, !dbg !11717
  %1 = load i32, i32* %irq, align 4, !dbg !11717
  %call = call i32 @evtchn_from_irq(i32 %1) #12, !dbg !11718
  store i32 %call, i32* %evtchn, align 4, !dbg !11715
  %2 = load i32, i32* %evtchn, align 4, !dbg !11719
  %cmp = icmp ne i32 %2, 0, !dbg !11719
  br i1 %cmp, label %if.then, label %if.end, !dbg !11721

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %evtchn, align 4, !dbg !11722
  call void @unmask_evtchn(i32 %3) #12, !dbg !11723
  br label %if.end, !dbg !11723

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @retrigger_dynirq(%struct.irq_data* %data) #0 !dbg !11725 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.irq_data*, align 8
  %evtchn = alloca i32, align 4
  %masked = alloca i32, align 4
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11726, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !11728, metadata !DIExpression()), !dbg !11729
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11730
  %irq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 1, !dbg !11731
  %1 = load i32, i32* %irq, align 4, !dbg !11731
  %call = call i32 @evtchn_from_irq(i32 %1) #12, !dbg !11732
  store i32 %call, i32* %evtchn, align 4, !dbg !11729
  call void @llvm.dbg.declare(metadata i32* %masked, metadata !11733, metadata !DIExpression()), !dbg !11734
  %2 = load i32, i32* %evtchn, align 4, !dbg !11735
  %cmp = icmp ne i32 %2, 0, !dbg !11735
  br i1 %cmp, label %if.end, label %if.then, !dbg !11737

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11738
  br label %return, !dbg !11738

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %evtchn, align 4, !dbg !11739
  %call1 = call zeroext i1 @test_and_set_mask(i32 %3) #12, !dbg !11740
  %conv = zext i1 %call1 to i32, !dbg !11740
  store i32 %conv, i32* %masked, align 4, !dbg !11741
  %4 = load i32, i32* %evtchn, align 4, !dbg !11742
  call void @set_evtchn(i32 %4) #12, !dbg !11743
  %5 = load i32, i32* %masked, align 4, !dbg !11744
  %tobool = icmp ne i32 %5, 0, !dbg !11744
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !11746

if.then2:                                         ; preds = %if.end
  %6 = load i32, i32* %evtchn, align 4, !dbg !11747
  call void @unmask_evtchn(i32 %6) #12, !dbg !11748
  br label %if.end3, !dbg !11748

if.end3:                                          ; preds = %if.then2, %if.end
  store i32 1, i32* %retval, align 4, !dbg !11749
  br label %return, !dbg !11749

return:                                           ; preds = %if.end3, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !11750
  ret i32 %7, !dbg !11750
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @startup_pirq(%struct.irq_data* %data) #0 !dbg !11751 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11752, metadata !DIExpression()), !dbg !11753
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11754
  %irq = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 1, !dbg !11755
  %1 = load i32, i32* %irq, align 4, !dbg !11755
  %call = call i32 @__startup_pirq(i32 %1) #12, !dbg !11756
  ret i32 %call, !dbg !11757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @shutdown_pirq(%struct.irq_data* %data) #0 !dbg !11758 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  %irq = alloca i32, align 4
  %info = alloca %struct.irq_info*, align 8
  %evtchn = alloca i32, align 4
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11759, metadata !DIExpression()), !dbg !11760
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !11761, metadata !DIExpression()), !dbg !11762
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11763
  %irq1 = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 1, !dbg !11764
  %1 = load i32, i32* %irq1, align 4, !dbg !11764
  store i32 %1, i32* %irq, align 4, !dbg !11762
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !11765, metadata !DIExpression()), !dbg !11766
  %2 = load i32, i32* %irq, align 4, !dbg !11767
  %call = call %struct.irq_info* @info_for_irq(i32 %2) #12, !dbg !11768
  store %struct.irq_info* %call, %struct.irq_info** %info, align 8, !dbg !11766
  call void @llvm.dbg.declare(metadata i32* %evtchn, metadata !11769, metadata !DIExpression()), !dbg !11770
  %3 = load i32, i32* %irq, align 4, !dbg !11771
  %call2 = call i32 @evtchn_from_irq(i32 %3) #12, !dbg !11772
  store i32 %call2, i32* %evtchn, align 4, !dbg !11770
  br label %do.body, !dbg !11773

do.body:                                          ; preds = %entry
  %4 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11774
  %type = getelementptr inbounds %struct.irq_info, %struct.irq_info* %4, i32 0, i32 4, !dbg !11774
  %5 = load i32, i32* %type, align 4, !dbg !11774
  %cmp = icmp ne i32 %5, 1, !dbg !11774
  %lnot = xor i1 %cmp, true, !dbg !11774
  %lnot3 = xor i1 %lnot, true, !dbg !11774
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11774
  %conv = sext i32 %lnot.ext to i64, !dbg !11774
  %tobool = icmp ne i64 %conv, 0, !dbg !11774
  br i1 %tobool, label %if.then, label %if.end, !dbg !11777

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !11774

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !11778

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !11780

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !11778

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 826, i32 0, i64 12) #6, !dbg !11782, !srcloc !11784
  br label %do.end7, !dbg !11782

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !11778

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 346) #6, !dbg !11785, !srcloc !11788
  unreachable, !dbg !11789

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !11778

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !11778

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !11777

do.end11:                                         ; preds = %if.end
  %6 = load i32, i32* %evtchn, align 4, !dbg !11790
  %cmp12 = icmp ne i32 %6, 0, !dbg !11790
  br i1 %cmp12, label %if.end15, label %if.then14, !dbg !11792

if.then14:                                        ; preds = %do.end11
  br label %return, !dbg !11793

if.end15:                                         ; preds = %do.end11
  %7 = load i32, i32* %evtchn, align 4, !dbg !11794
  call void @mask_evtchn(i32 %7) #12, !dbg !11795
  %8 = load i32, i32* %evtchn, align 4, !dbg !11796
  call void @xen_evtchn_close(i32 %8) #12, !dbg !11797
  %9 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11798
  call void @xen_irq_info_cleanup(%struct.irq_info* %9) #12, !dbg !11799
  br label %return, !dbg !11800

return:                                           ; preds = %if.end15, %if.then14
  ret void, !dbg !11800
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_pirq(%struct.irq_data* %data) #0 !dbg !11801 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11802, metadata !DIExpression()), !dbg !11803
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11804
  call void @enable_dynirq(%struct.irq_data* %0) #12, !dbg !11805
  ret void, !dbg !11806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_pirq(%struct.irq_data* %data) #0 !dbg !11807 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11808, metadata !DIExpression()), !dbg !11809
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11810
  call void @disable_dynirq(%struct.irq_data* %0) #12, !dbg !11811
  ret void, !dbg !11812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mask_ack_pirq(%struct.irq_data* %data) #0 !dbg !11813 {
entry:
  %data.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %data, %struct.irq_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %data.addr, metadata !11814, metadata !DIExpression()), !dbg !11815
  %0 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11816
  call void @disable_dynirq(%struct.irq_data* %0) #12, !dbg !11817
  %1 = load %struct.irq_data*, %struct.irq_data** %data.addr, align 8, !dbg !11818
  call void @eoi_pirq(%struct.irq_data* %1) #12, !dbg !11819
  ret void, !dbg !11820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !11821 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !11824, metadata !DIExpression()), !dbg !11825
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !11826, metadata !DIExpression()), !dbg !11827
  ret void, !dbg !11828
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xen_irq_lateeoi_worker(%struct.work_struct* %work) #0 !dbg !11829 {
entry:
  %lock.addr.i69 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i69, metadata !11830, metadata !DIExpression()), !dbg !11834
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !11830, metadata !DIExpression()), !dbg !11837
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11841, metadata !DIExpression()), !dbg !11843
  %work.addr = alloca %struct.work_struct*, align 8
  %eoi = alloca %struct.lateeoi_work*, align 8
  %info = alloca %struct.irq_info*, align 8
  %now = alloca i64, align 8
  %flags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.lateeoi_work*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp23 = alloca %struct.list_head*, align 8
  %tmp24 = alloca %struct.irq_info*, align 8
  %__mptr27 = alloca i8*, align 8
  %tmp30 = alloca %struct.irq_info*, align 8
  %__dummy46 = alloca i64, align 8
  %__dummy247 = alloca i64, align 8
  %tmp50 = alloca i32, align 4
  %__dummy54 = alloca i64, align 8
  %__dummy255 = alloca i64, align 8
  %tmp58 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !11845, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.declare(metadata %struct.lateeoi_work** %eoi, metadata !11847, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.declare(metadata %struct.irq_info** %info, metadata !11849, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.declare(metadata i64* %now, metadata !11851, metadata !DIExpression()), !dbg !11852
  %call = call i64 @get_jiffies_64() #12, !dbg !11853
  store i64 %call, i64* %now, align 8, !dbg !11852
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11854, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11856, metadata !DIExpression()), !dbg !11858
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !11858
  %call1 = call %struct.delayed_work* @to_delayed_work(%struct.work_struct* %0) #12, !dbg !11858
  %1 = bitcast %struct.delayed_work* %call1 to i8*, !dbg !11858
  store i8* %1, i8** %__mptr, align 8, !dbg !11858
  br label %do.body, !dbg !11858

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11859

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11858
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !11858
  %3 = bitcast i8* %add.ptr to %struct.lateeoi_work*, !dbg !11858
  store %struct.lateeoi_work* %3, %struct.lateeoi_work** %tmp, align 8, !dbg !11859
  %4 = load %struct.lateeoi_work*, %struct.lateeoi_work** %tmp, align 8, !dbg !11858
  store %struct.lateeoi_work* %4, %struct.lateeoi_work** %eoi, align 8, !dbg !11861
  br label %do.body2, !dbg !11862

do.body2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11863, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11867, metadata !DIExpression()), !dbg !11866
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11866
  %conv = zext i1 %cmp to i32, !dbg !11866
  store i32 1, i32* %tmp3, align 4, !dbg !11866
  %5 = load i32, i32* %tmp3, align 4, !dbg !11866
  br label %do.body4, !dbg !11868

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !11869

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !11871

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !11873, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !11877, metadata !DIExpression()), !dbg !11876
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !11876
  %conv10 = zext i1 %cmp9 to i32, !dbg !11876
  store i32 1, i32* %tmp11, align 4, !dbg !11876
  %6 = load i32, i32* %tmp11, align 4, !dbg !11876
  %call12 = call i64 @arch_local_irq_save() #12, !dbg !11878
  store i64 %call12, i64* %flags, align 8, !dbg !11878
  br label %do.end13, !dbg !11878

do.end13:                                         ; preds = %do.body6
  br label %do.end14, !dbg !11871

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !11869

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11879, !srcloc !11881
  br label %do.body16, !dbg !11879

do.body16:                                        ; preds = %do.body15
  br label %do.end17, !dbg !11882

do.end17:                                         ; preds = %do.body16
  br label %do.end18, !dbg !11879

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11869

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11868

do.end20:                                         ; preds = %do.end19
  br label %while.body, !dbg !11884

while.body:                                       ; preds = %do.end20, %if.end
  %7 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !11885
  %eoi_list_lock = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %7, i32 0, i32 1, !dbg !11886
  store %struct.spinlock* %eoi_list_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11887, !srcloc !11889
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11890
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !11890
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !11890
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !11892, metadata !DIExpression()), !dbg !11894
  %10 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !11894
  %eoi_list = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %10, i32 0, i32 2, !dbg !11894
  store %struct.list_head* %eoi_list, %struct.list_head** %head__, align 8, !dbg !11894
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !11895, metadata !DIExpression()), !dbg !11894
  br label %do.body21, !dbg !11896

do.body21:                                        ; preds = %while.body
  br label %do.end22, !dbg !11898

do.end22:                                         ; preds = %do.body21
  %11 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !11896
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 0, !dbg !11896
  %12 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11896
  store %struct.list_head* %12, %struct.list_head** %tmp23, align 8, !dbg !11898
  %13 = load %struct.list_head*, %struct.list_head** %tmp23, align 8, !dbg !11896
  store %struct.list_head* %13, %struct.list_head** %pos__, align 8, !dbg !11894
  %14 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !11894
  %15 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !11894
  %cmp25 = icmp ne %struct.list_head* %14, %15, !dbg !11894
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !11894

cond.true:                                        ; preds = %do.end22
  call void @llvm.dbg.declare(metadata i8** %__mptr27, metadata !11900, metadata !DIExpression()), !dbg !11902
  %16 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !11902
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !11902
  store i8* %17, i8** %__mptr27, align 8, !dbg !11902
  br label %do.body28, !dbg !11902

do.body28:                                        ; preds = %cond.true
  br label %do.end29, !dbg !11903

do.end29:                                         ; preds = %do.body28
  %18 = load i8*, i8** %__mptr27, align 8, !dbg !11902
  %add.ptr31 = getelementptr i8, i8* %18, i64 -16, !dbg !11902
  %19 = bitcast i8* %add.ptr31 to %struct.irq_info*, !dbg !11902
  store %struct.irq_info* %19, %struct.irq_info** %tmp30, align 8, !dbg !11903
  %20 = load %struct.irq_info*, %struct.irq_info** %tmp30, align 8, !dbg !11902
  br label %cond.end, !dbg !11894

cond.false:                                       ; preds = %do.end22
  br label %cond.end, !dbg !11894

cond.end:                                         ; preds = %cond.false, %do.end29
  %cond = phi %struct.irq_info* [ %20, %do.end29 ], [ null, %cond.false ], !dbg !11894
  store %struct.irq_info* %cond, %struct.irq_info** %tmp24, align 8, !dbg !11894
  %21 = load %struct.irq_info*, %struct.irq_info** %tmp24, align 8, !dbg !11894
  store %struct.irq_info* %21, %struct.irq_info** %info, align 8, !dbg !11905
  %22 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11906
  %cmp32 = icmp eq %struct.irq_info* %22, null, !dbg !11907
  br i1 %cmp32, label %if.then, label %lor.lhs.false, !dbg !11908

lor.lhs.false:                                    ; preds = %cond.end
  %23 = load i64, i64* %now, align 8, !dbg !11909
  %24 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11910
  %eoi_time = getelementptr inbounds %struct.irq_info, %struct.irq_info* %24, i32 0, i32 10, !dbg !11911
  %25 = load i64, i64* %eoi_time, align 8, !dbg !11911
  %cmp34 = icmp ult i64 %23, %25, !dbg !11912
  br i1 %cmp34, label %if.then, label %if.end, !dbg !11913

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  %26 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !11914
  %eoi_list_lock36 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %26, i32 0, i32 1, !dbg !11915
  store %struct.spinlock* %eoi_list_lock36, %struct.spinlock** %lock.addr.i67, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11916, !srcloc !11918
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !11919
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !11919
  %rlock.i68 = bitcast %union.anon.1* %28 to %struct.raw_spinlock*, !dbg !11919
  br label %while.end, !dbg !11921

if.end:                                           ; preds = %lor.lhs.false
  %29 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11922
  %eoi_list37 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %29, i32 0, i32 1, !dbg !11923
  call void @list_del_init(%struct.list_head* %eoi_list37) #12, !dbg !11924
  %30 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !11925
  %eoi_list_lock38 = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %30, i32 0, i32 1, !dbg !11926
  store %struct.spinlock* %eoi_list_lock38, %struct.spinlock** %lock.addr.i69, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11927, !srcloc !11918
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i69, align 8, !dbg !11928
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !11928
  %rlock.i70 = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !11928
  %33 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11929
  %eoi_time39 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %33, i32 0, i32 10, !dbg !11930
  store i64 0, i64* %eoi_time39, align 8, !dbg !11931
  %34 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11932
  call void @xen_irq_lateeoi_locked(%struct.irq_info* %34, i1 zeroext false) #12, !dbg !11933
  br label %while.body, !dbg !11884, !llvm.loop !11934

while.end:                                        ; preds = %if.then
  %35 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11936
  %tobool = icmp ne %struct.irq_info* %35, null, !dbg !11936
  br i1 %tobool, label %if.then40, label %if.end44, !dbg !11938

if.then40:                                        ; preds = %while.end
  %36 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11939
  %eoi_cpu = getelementptr inbounds %struct.irq_info, %struct.irq_info* %36, i32 0, i32 8, !dbg !11940
  %37 = load i16, i16* %eoi_cpu, align 2, !dbg !11940
  %conv41 = zext i16 %37 to i32, !dbg !11939
  %38 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !11941
  %39 = load %struct.lateeoi_work*, %struct.lateeoi_work** %eoi, align 8, !dbg !11942
  %delayed = getelementptr inbounds %struct.lateeoi_work, %struct.lateeoi_work* %39, i32 0, i32 0, !dbg !11943
  %40 = load %struct.irq_info*, %struct.irq_info** %info, align 8, !dbg !11944
  %eoi_time42 = getelementptr inbounds %struct.irq_info, %struct.irq_info* %40, i32 0, i32 10, !dbg !11945
  %41 = load i64, i64* %eoi_time42, align 8, !dbg !11945
  %42 = load i64, i64* %now, align 8, !dbg !11946
  %sub = sub i64 %41, %42, !dbg !11947
  %call43 = call zeroext i1 @mod_delayed_work_on(i32 %conv41, %struct.workqueue_struct* %38, %struct.delayed_work* %delayed, i64 %sub) #12, !dbg !11948
  br label %if.end44, !dbg !11948

if.end44:                                         ; preds = %if.then40, %while.end
  br label %do.body45, !dbg !11949

do.body45:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata i64* %__dummy46, metadata !11950, metadata !DIExpression()), !dbg !11953
  call void @llvm.dbg.declare(metadata i64* %__dummy247, metadata !11954, metadata !DIExpression()), !dbg !11953
  %cmp48 = icmp eq i64* %__dummy46, %__dummy247, !dbg !11953
  %conv49 = zext i1 %cmp48 to i32, !dbg !11953
  store i32 1, i32* %tmp50, align 4, !dbg !11953
  %43 = load i32, i32* %tmp50, align 4, !dbg !11953
  br label %do.body51, !dbg !11955

do.body51:                                        ; preds = %do.body45
  br label %do.body52, !dbg !11956

do.body52:                                        ; preds = %do.body51
  br label %do.body53, !dbg !11958

do.body53:                                        ; preds = %do.body52
  call void @llvm.dbg.declare(metadata i64* %__dummy54, metadata !11960, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.declare(metadata i64* %__dummy255, metadata !11964, metadata !DIExpression()), !dbg !11963
  %cmp56 = icmp eq i64* %__dummy54, %__dummy255, !dbg !11963
  %conv57 = zext i1 %cmp56 to i32, !dbg !11963
  store i32 1, i32* %tmp58, align 4, !dbg !11963
  %44 = load i32, i32* %tmp58, align 4, !dbg !11963
  %45 = load i64, i64* %flags, align 8, !dbg !11965
  call void @arch_local_irq_restore(i64 %45) #12, !dbg !11965
  br label %do.end59, !dbg !11965

do.end59:                                         ; preds = %do.body53
  br label %do.end60, !dbg !11958

do.end60:                                         ; preds = %do.end59
  br label %do.body61, !dbg !11956

do.body61:                                        ; preds = %do.end60
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11966, !srcloc !11968
  br label %do.body62, !dbg !11966

do.body62:                                        ; preds = %do.body61
  br label %do.end63, !dbg !11969

do.end63:                                         ; preds = %do.body62
  br label %do.end64, !dbg !11966

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !11956

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !11955

do.end66:                                         ; preds = %do.end65
  ret void, !dbg !11971
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.delayed_work* @to_delayed_work(%struct.work_struct* %work) #0 !dbg !11972 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.delayed_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !11975, metadata !DIExpression()), !dbg !11976
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11977, metadata !DIExpression()), !dbg !11979
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !11979
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !11979
  store i8* %1, i8** %__mptr, align 8, !dbg !11979
  br label %do.body, !dbg !11979

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11980

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11979
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !11979
  %3 = bitcast i8* %add.ptr to %struct.delayed_work*, !dbg !11979
  store %struct.delayed_work* %3, %struct.delayed_work** %tmp, align 8, !dbg !11980
  %4 = load %struct.delayed_work*, %struct.delayed_work** %tmp, align 8, !dbg !11979
  ret %struct.delayed_work* %4, !dbg !11982
}

; Function Attrs: noredzone
declare dso_local i32 @__cpuhp_setup_state(i32, i8*, i1 zeroext, i32 (i32)*, i32 (i32)*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !11983 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10509, metadata !DIExpression()), !dbg !11984
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10519, metadata !DIExpression()), !dbg !11988
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10521, metadata !DIExpression()), !dbg !11989
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10523, metadata !DIExpression()), !dbg !11990
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10525, metadata !DIExpression()), !dbg !11991
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10531, metadata !DIExpression()), !dbg !11993
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10537, metadata !DIExpression()), !dbg !11995
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10546, metadata !DIExpression()), !dbg !11998
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10548, metadata !DIExpression()), !dbg !11999
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10550, metadata !DIExpression()), !dbg !12000
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10552, metadata !DIExpression()), !dbg !12001
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10554, metadata !DIExpression()), !dbg !12002
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10556, metadata !DIExpression()), !dbg !12003
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10558, metadata !DIExpression()), !dbg !12004
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10560, metadata !DIExpression()), !dbg !12005
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12006, metadata !DIExpression()), !dbg !12007
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12008, metadata !DIExpression()), !dbg !12009
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12010, metadata !DIExpression()), !dbg !12011
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !12012, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !12014, metadata !DIExpression()), !dbg !12017
  %0 = load i64, i64* %n.addr, align 8, !dbg !12017
  store i64 %0, i64* %__a, align 8, !dbg !12017
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !12018, metadata !DIExpression()), !dbg !12017
  %1 = load i64, i64* %size.addr, align 8, !dbg !12017
  store i64 %1, i64* %__b, align 8, !dbg !12017
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !12019, metadata !DIExpression()), !dbg !12017
  store i64* %bytes, i64** %__d, align 8, !dbg !12017
  %cmp = icmp eq i64* %__a, %__b, !dbg !12017
  %conv = zext i1 %cmp to i32, !dbg !12017
  %2 = load i64*, i64** %__d, align 8, !dbg !12017
  %cmp1 = icmp eq i64* %__a, %2, !dbg !12017
  %conv2 = zext i1 %cmp1 to i32, !dbg !12017
  %3 = load i64, i64* %__a, align 8, !dbg !12017
  %4 = load i64, i64* %__b, align 8, !dbg !12017
  %5 = load i64*, i64** %__d, align 8, !dbg !12017
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !12017
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !12017
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !12017
  store i64 %8, i64* %5, align 8, !dbg !12017
  %frombool = zext i1 %7 to i8, !dbg !12017
  store i8 %frombool, i8* %tmp, align 1, !dbg !12017
  %9 = load i8, i8* %tmp, align 1, !dbg !12017
  %tobool = trunc i8 %9 to i1, !dbg !12017
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #12, !dbg !12020
  %lnot = xor i1 %call, true, !dbg !12020
  %lnot3 = xor i1 %lnot, true, !dbg !12020
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12020
  %conv4 = sext i32 %lnot.ext to i64, !dbg !12020
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !12020
  br i1 %tobool5, label %if.then, label %if.end, !dbg !12021

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12022
  br label %return, !dbg !12022

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !12023
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !12024
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !12025

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !12026
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !12027
  br i1 %13, label %if.then6, label %if.end8, !dbg !12028

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !12029
  %15 = load i32, i32* %flags.addr, align 4, !dbg !12030
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !12031
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #6, !dbg !12032
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !12033

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !12034
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !12035
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12036

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !12037
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !12038
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !12039
  %call.i.i = call i32 @get_order(i64 %21) #16, !dbg !12040
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12002
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !12041
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12042
  %24 = load i32, i32* %order.i.i, align 4, !dbg !12043
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12044
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12045
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12046
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #14, !dbg !12047
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12047
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12047
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12047
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !12047
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12048
  br label %kmalloc.exit, !dbg !12048

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !12049
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12050
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !12050
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12051

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12052
  br label %kmalloc_index.exit.i, !dbg !12052

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12053
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !12054
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12055

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12056
  br label %kmalloc_index.exit.i, !dbg !12056

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12057
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !12058
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12059

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12060
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !12061
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12062

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12063
  br label %kmalloc_index.exit.i, !dbg !12063

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12064
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !12065
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12066

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12067
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !12068
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12069

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12070
  br label %kmalloc_index.exit.i, !dbg !12070

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12071
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !12072
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12073

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12074
  br label %kmalloc_index.exit.i, !dbg !12074

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12075
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !12076
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12077

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12078
  br label %kmalloc_index.exit.i, !dbg !12078

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12079
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !12080
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12081

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12082
  br label %kmalloc_index.exit.i, !dbg !12082

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12083
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !12084
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12085

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12086
  br label %kmalloc_index.exit.i, !dbg !12086

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12087
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !12088
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12089

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12090
  br label %kmalloc_index.exit.i, !dbg !12090

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12091
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !12092
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12093

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12094
  br label %kmalloc_index.exit.i, !dbg !12094

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12095
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !12096
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12097

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12098
  br label %kmalloc_index.exit.i, !dbg !12098

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12099
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !12100
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12101

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12102
  br label %kmalloc_index.exit.i, !dbg !12102

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12103
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !12104
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12105

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12106
  br label %kmalloc_index.exit.i, !dbg !12106

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12107
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !12108
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12109

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12110
  br label %kmalloc_index.exit.i, !dbg !12110

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12111
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !12112
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12113

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12114
  br label %kmalloc_index.exit.i, !dbg !12114

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12115
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !12116
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12117

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12118
  br label %kmalloc_index.exit.i, !dbg !12118

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12119
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !12120
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12121

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12122
  br label %kmalloc_index.exit.i, !dbg !12122

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12123
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !12124
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12125

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12126
  br label %kmalloc_index.exit.i, !dbg !12126

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12127
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !12128
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12129

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12130
  br label %kmalloc_index.exit.i, !dbg !12130

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12131
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !12132
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12133

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12134
  br label %kmalloc_index.exit.i, !dbg !12134

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12135
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !12136
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12137

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12138
  br label %kmalloc_index.exit.i, !dbg !12138

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12139
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !12140
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12141

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12142
  br label %kmalloc_index.exit.i, !dbg !12142

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12143
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !12144
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12145

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12146
  br label %kmalloc_index.exit.i, !dbg !12146

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12147
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !12148
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12149

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12150
  br label %kmalloc_index.exit.i, !dbg !12150

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12151
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !12152
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12153

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12154
  br label %kmalloc_index.exit.i, !dbg !12154

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12155
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !12156
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12157

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12158
  br label %kmalloc_index.exit.i, !dbg !12158

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12159
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !12160
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12161

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12162
  br label %kmalloc_index.exit.i, !dbg !12162

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12163
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !12164
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12165

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12166
  br label %kmalloc_index.exit.i, !dbg !12166

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !12167, !srcloc !10736
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 90) #6, !dbg !12168, !srcloc !10740
  unreachable, !dbg !12169

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !12170
  store i32 %59, i32* %index.i, align 4, !dbg !12171
  %60 = load i32, i32* %index.i, align 4, !dbg !12172
  %tobool.i = icmp ne i32 %60, 0, !dbg !12172
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12173

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12174
  br label %kmalloc.exit, !dbg !12174

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !12175
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12176
  %and.i.i = and i32 %62, 17, !dbg !12176
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12176
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12176
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12176
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12176
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12177

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12178
  br label %kmalloc_type.exit.i, !dbg !12178

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12179
  %and2.i.i = and i32 %63, 1, !dbg !12180
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12179
  %64 = zext i1 %tobool3.i.i to i64, !dbg !12179
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12179
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12181
  br label %kmalloc_type.exit.i, !dbg !12181

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !12182
  %idxprom.i = zext i32 %65 to i64, !dbg !12183
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12183
  %66 = load i32, i32* %index.i, align 4, !dbg !12184
  %idxprom6.i = zext i32 %66 to i64, !dbg !12183
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12183
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12183
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !12185
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !12186
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12187
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12188
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #14, !dbg !12189
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12189
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12189
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12189
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !12189
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11990
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12190
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !12191
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12192
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12193
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #14, !dbg !12194
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12195
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !12196
  store i8* %76, i8** %retval.i, align 8, !dbg !12197
  br label %kmalloc.exit, !dbg !12197

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !12198
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !12199
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #14, !dbg !12200
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12200
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12200
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12200
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !12200
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12201
  br label %kmalloc.exit, !dbg !12201

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !12202
  store i8* %79, i8** %retval, align 8, !dbg !12203
  br label %return, !dbg !12203

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !12204
  %81 = load i32, i32* %flags.addr, align 4, !dbg !12205
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #12, !dbg !12206
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !12206
  %maskedptr = and i64 %ptrint, 7, !dbg !12206
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !12206
  call void @llvm.assume(i1 %maskcond), !dbg !12206
  store i8* %call9, i8** %retval, align 8, !dbg !12207
  br label %return, !dbg !12207

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !12208
  ret i8* %82, !dbg !12208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !12209 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !12213, metadata !DIExpression()), !dbg !12214
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !12215
  %tobool = trunc i8 %0 to i1, !dbg !12215
  %lnot = xor i1 %tobool, true, !dbg !12215
  %lnot1 = xor i1 %lnot, true, !dbg !12215
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12215
  %conv = sext i32 %lnot.ext to i64, !dbg !12215
  %tobool2 = icmp ne i64 %conv, 0, !dbg !12215
  ret i1 %tobool2, !dbg !12216
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local void @alloc_intr_gate(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @asm_sysvec_xen_hvm_callback() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pfn_to_mfn(i64 %pfn) #0 !dbg !12217 {
entry:
  %retval = alloca i64, align 8
  %pfn.addr = alloca i64, align 8
  %mfn = alloca i64, align 8
  store i64 %pfn, i64* %pfn.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pfn.addr, metadata !12218, metadata !DIExpression()), !dbg !12219
  call void @llvm.dbg.declare(metadata i64* %mfn, metadata !12220, metadata !DIExpression()), !dbg !12221
  %call = call i32 @xen_feature(i32 2) #12, !dbg !12222
  %tobool = icmp ne i32 %call, 0, !dbg !12222
  br i1 %tobool, label %if.then, label %if.end, !dbg !12224

if.then:                                          ; preds = %entry
  %0 = load i64, i64* %pfn.addr, align 8, !dbg !12225
  store i64 %0, i64* %retval, align 8, !dbg !12226
  br label %return, !dbg !12226

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %pfn.addr, align 8, !dbg !12227
  %call1 = call i64 @__pfn_to_mfn(i64 %1) #12, !dbg !12228
  store i64 %call1, i64* %mfn, align 8, !dbg !12229
  %2 = load i64, i64* %mfn, align 8, !dbg !12230
  %cmp = icmp ne i64 %2, -1, !dbg !12232
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12233

if.then2:                                         ; preds = %if.end
  %3 = load i64, i64* %mfn, align 8, !dbg !12234
  %and = and i64 %3, 4611686018427387903, !dbg !12234
  store i64 %and, i64* %mfn, align 8, !dbg !12234
  br label %if.end3, !dbg !12235

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load i64, i64* %mfn, align 8, !dbg !12236
  store i64 %4, i64* %retval, align 8, !dbg !12237
  br label %return, !dbg !12237

return:                                           ; preds = %if.end3, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !12238
  ret i64 %5, !dbg !12238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__pfn_to_mfn(i64 %pfn) #0 !dbg !12239 {
entry:
  %retval = alloca i64, align 8
  %pfn.addr = alloca i64, align 8
  %mfn = alloca i64, align 8
  store i64 %pfn, i64* %pfn.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pfn.addr, metadata !12240, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.declare(metadata i64* %mfn, metadata !12242, metadata !DIExpression()), !dbg !12243
  %0 = load i64, i64* %pfn.addr, align 8, !dbg !12244
  %1 = load i64, i64* @xen_p2m_size, align 8, !dbg !12246
  %cmp = icmp ult i64 %0, %1, !dbg !12247
  br i1 %cmp, label %if.then, label %if.else, !dbg !12248

if.then:                                          ; preds = %entry
  %2 = load i64*, i64** @xen_p2m_addr, align 8, !dbg !12249
  %3 = load i64, i64* %pfn.addr, align 8, !dbg !12250
  %arrayidx = getelementptr i64, i64* %2, i64 %3, !dbg !12249
  %4 = load i64, i64* %arrayidx, align 8, !dbg !12249
  store i64 %4, i64* %mfn, align 8, !dbg !12251
  br label %if.end, !dbg !12252

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %pfn.addr, align 8, !dbg !12253
  %6 = load i64, i64* @xen_max_p2m_pfn, align 8, !dbg !12253
  %cmp1 = icmp ult i64 %5, %6, !dbg !12253
  %lnot = xor i1 %cmp1, true, !dbg !12253
  %lnot2 = xor i1 %lnot, true, !dbg !12253
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12253
  %conv = sext i32 %lnot.ext to i64, !dbg !12253
  %tobool = icmp ne i64 %conv, 0, !dbg !12253
  br i1 %tobool, label %if.then3, label %if.else4, !dbg !12255

if.then3:                                         ; preds = %if.else
  %7 = load i64, i64* %pfn.addr, align 8, !dbg !12256
  %call = call i64 @get_phys_to_machine(i64 %7) #12, !dbg !12257
  store i64 %call, i64* %retval, align 8, !dbg !12258
  br label %return, !dbg !12258

if.else4:                                         ; preds = %if.else
  %8 = load i64, i64* %pfn.addr, align 8, !dbg !12259
  %or = or i64 %8, 4611686018427387904, !dbg !12259
  store i64 %or, i64* %retval, align 8, !dbg !12260
  br label %return, !dbg !12260

if.end:                                           ; preds = %if.then
  %9 = load i64, i64* %mfn, align 8, !dbg !12261
  %cmp5 = icmp eq i64 %9, -1, !dbg !12261
  %lnot7 = xor i1 %cmp5, true, !dbg !12261
  %lnot9 = xor i1 %lnot7, true, !dbg !12261
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !12261
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !12261
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !12261
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !12263

if.then13:                                        ; preds = %if.end
  %10 = load i64, i64* %pfn.addr, align 8, !dbg !12264
  %call14 = call i64 @get_phys_to_machine(i64 %10) #12, !dbg !12265
  store i64 %call14, i64* %retval, align 8, !dbg !12266
  br label %return, !dbg !12266

if.end15:                                         ; preds = %if.end
  %11 = load i64, i64* %mfn, align 8, !dbg !12267
  store i64 %11, i64* %retval, align 8, !dbg !12268
  br label %return, !dbg !12268

return:                                           ; preds = %if.end15, %if.then13, %if.else4, %if.then3
  %12 = load i64, i64* %retval, align 8, !dbg !12269
  ret i64 %12, !dbg !12269
}

; Function Attrs: noredzone
declare dso_local i64 @get_phys_to_machine(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !12270 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !12277, metadata !DIExpression()), !dbg !12279
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !12281, metadata !DIExpression()), !dbg !12282
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !12283, metadata !DIExpression()), !dbg !12284
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12285, metadata !DIExpression()), !dbg !12287
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12289, metadata !DIExpression()), !dbg !12290
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12291, metadata !DIExpression()), !dbg !12299
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12301, metadata !DIExpression()), !dbg !12302
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12303, metadata !DIExpression()), !dbg !12304
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12305, metadata !DIExpression()), !dbg !12306
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12307
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12308
  %div = sdiv i64 %1, 64, !dbg !12308
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12309
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12307
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12310
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12311
  %conv.i = trunc i64 %4 to i32, !dbg !12311
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !12312
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12313
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12313
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !12313
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12314
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !12314
  br i1 %8, label %cond.true, label %cond.false, !dbg !12314

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !12314
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !12314
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !12315
  %and.i = and i64 %11, 63, !dbg !12316
  %shl.i = shl i64 1, %and.i, !dbg !12317
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !12318
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12319
  %shr.i = ashr i64 %13, 6, !dbg !12320
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !12318
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !12318
  %and1.i = and i64 %shl.i, %14, !dbg !12321
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !12322
  %conv = zext i1 %cmp.i to i32, !dbg !12314
  br label %cond.end, !dbg !12314

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !12314
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !12314
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !12323
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !12324
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #6, !dbg !12325, !srcloc !12326
  store i8 %19, i8* %oldbit.i, align 1, !dbg !12325
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !12327
  %tobool.i = trunc i8 %20 to i1, !dbg !12327
  %conv2 = zext i1 %tobool.i to i32, !dbg !12314
  br label %cond.end, !dbg !12314

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !12314
  %tobool = icmp ne i32 %cond, 0, !dbg !12314
  ret i1 %tobool, !dbg !12328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !12329 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12333, metadata !DIExpression()), !dbg !12334
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12335, metadata !DIExpression()), !dbg !12336
  ret i1 true, !dbg !12337
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !12338 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12342, metadata !DIExpression()), !dbg !12343
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12344, metadata !DIExpression()), !dbg !12345
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12346, metadata !DIExpression()), !dbg !12347
  ret void, !dbg !12348
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { cold noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind willreturn }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { cold noredzone noreturn }
attributes #16 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6565}
!llvm.module.flags = !{!6566, !6567, !6568, !6569}
!llvm.ident = !{!6570}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_event_loop_timeout", scope: !2, file: !3, line: 125, type: !6562, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !465, globals: !681, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/xen/events/events_base.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !23, !29, !34, !41, !47, !52, !58, !70, !76, !83, !90, !95, !105, !112, !118, !127, !135, !141, !147, !154, !161, !175, !182, !190, !196, !201, !374, !381, !406, !432}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xen_irq_type", file: !3, line: 74, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10, !11, !12}
!8 = !DIEnumerator(name: "IRQT_UNBOUND", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "IRQT_PIRQ", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "IRQT_VIRQ", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "IRQT_IPI", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "IRQT_EVTCHN", value: 4, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ipi_vector", file: !14, line: 7, baseType: !6, size: 32, elements: !15)
!14 = !DIFile(filename: "./arch/x86/include/asm/xen/events.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18, !19, !20, !21, !22}
!16 = !DIEnumerator(name: "XEN_RESCHEDULE_VECTOR", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "XEN_CALL_FUNCTION_VECTOR", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "XEN_CALL_FUNCTION_SINGLE_VECTOR", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "XEN_SPIN_UNLOCK_VECTOR", value: 3, isUnsigned: true)
!20 = !DIEnumerator(name: "XEN_IRQ_WORK_VECTOR", value: 4, isUnsigned: true)
!21 = !DIEnumerator(name: "XEN_NMI_VECTOR", value: 5, isUnsigned: true)
!22 = !DIEnumerator(name: "XEN_NR_IPIS", value: 6, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xen_domain_type", file: !24, line: 5, baseType: !6, size: 32, elements: !25)
!24 = !DIFile(filename: "./include/xen/xen.h", directory: "/home/lizy2001/genbc/linux")
!25 = !{!26, !27, !28}
!26 = !DIEnumerator(name: "XEN_NATIVE", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "XEN_PV_DOMAIN", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "XEN_HVM_DOMAIN", value: 2, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !30, line: 41, baseType: !6, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33}
!32 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !35, line: 15, baseType: !6, size: 32, elements: !36)
!35 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!36 = !{!37, !38, !39, !40}
!37 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!38 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!40 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !42, line: 546, baseType: !6, size: 32, elements: !43)
!42 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!43 = !{!44, !45, !46}
!44 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!45 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!46 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !48, line: 65, baseType: !6, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51}
!50 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !53, line: 16, baseType: !6, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57}
!55 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !59, line: 49, baseType: !6, size: 32, elements: !60)
!59 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!60 = !{!61, !62, !63, !64, !65, !66, !67, !68, !69}
!61 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!63 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!64 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!65 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!66 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!67 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!68 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!69 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!70 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !71, line: 118, baseType: !6, size: 32, elements: !72)
!71 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!72 = !{!73, !74, !75}
!73 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !77, line: 19, baseType: !6, size: 32, elements: !78)
!77 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!80 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !84, line: 502, baseType: !6, size: 32, elements: !85)
!84 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!85 = !{!86, !87, !88, !89}
!86 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!88 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!89 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !71, line: 315, baseType: !6, size: 32, elements: !91)
!91 = !{!92, !93, !94}
!92 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "perf_event_state", file: !96, line: 566, baseType: !97, size: 32, elements: !98)
!96 = !DIFile(filename: "./include/linux/perf_event.h", directory: "/home/lizy2001/genbc/linux")
!97 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!98 = !{!99, !100, !101, !102, !103, !104}
!99 = !DIEnumerator(name: "PERF_EVENT_STATE_DEAD", value: -4)
!100 = !DIEnumerator(name: "PERF_EVENT_STATE_EXIT", value: -3)
!101 = !DIEnumerator(name: "PERF_EVENT_STATE_ERROR", value: -2)
!102 = !DIEnumerator(name: "PERF_EVENT_STATE_OFF", value: -1)
!103 = !DIEnumerator(name: "PERF_EVENT_STATE_INACTIVE", value: 0)
!104 = !DIEnumerator(name: "PERF_EVENT_STATE_ACTIVE", value: 1)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !106, line: 59, baseType: !6, size: 32, elements: !107)
!106 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!107 = !{!108, !109, !110, !111}
!108 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!111 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!112 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !113, line: 54, baseType: !6, size: 32, elements: !114)
!113 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!114 = !{!115, !116, !117}
!115 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !119, line: 296, baseType: !6, size: 32, elements: !120)
!119 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!120 = !{!121, !122, !123, !124, !125, !126}
!121 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!125 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!126 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !128, line: 9, baseType: !6, size: 32, elements: !129)
!128 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133, !134}
!130 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!132 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!133 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!134 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !136, line: 26, baseType: !6, size: 32, elements: !137)
!136 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!137 = !{!138, !139, !140}
!138 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !142, line: 44, baseType: !6, size: 32, elements: !143)
!142 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !148, line: 343, baseType: !6, size: 32, elements: !149)
!148 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!149 = !{!150, !151, !152, !153}
!150 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!151 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !84, line: 524, baseType: !6, size: 32, elements: !155)
!155 = !{!156, !157, !158, !159, !160}
!156 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!160 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!161 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !162, line: 76, baseType: !6, size: 32, elements: !163)
!162 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!163 = !{!164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!164 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!165 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!166 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!167 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!168 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!169 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!170 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!171 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!172 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!173 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!174 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !176, line: 478, baseType: !6, size: 32, elements: !177)
!176 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!177 = !{!178, !179, !180, !181}
!178 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !183, line: 1084, baseType: !6, size: 32, elements: !184)
!183 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!188 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!189 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !191, line: 11, baseType: !6, size: 32, elements: !192)
!191 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!192 = !{!193, !194, !195}
!193 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!194 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!195 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !197, line: 10, baseType: !6, size: 32, elements: !198)
!197 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!198 = !{!199, !200}
!199 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!200 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cpuhp_state", file: !202, line: 25, baseType: !97, size: 32, elements: !203)
!202 = !DIFile(filename: "./include/linux/cpuhotplug.h", directory: "/home/lizy2001/genbc/linux")
!203 = !{!204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373}
!204 = !DIEnumerator(name: "CPUHP_INVALID", value: -1)
!205 = !DIEnumerator(name: "CPUHP_OFFLINE", value: 0)
!206 = !DIEnumerator(name: "CPUHP_CREATE_THREADS", value: 1)
!207 = !DIEnumerator(name: "CPUHP_PERF_PREPARE", value: 2)
!208 = !DIEnumerator(name: "CPUHP_PERF_X86_PREPARE", value: 3)
!209 = !DIEnumerator(name: "CPUHP_PERF_X86_AMD_UNCORE_PREP", value: 4)
!210 = !DIEnumerator(name: "CPUHP_PERF_POWER", value: 5)
!211 = !DIEnumerator(name: "CPUHP_PERF_SUPERH", value: 6)
!212 = !DIEnumerator(name: "CPUHP_X86_HPET_DEAD", value: 7)
!213 = !DIEnumerator(name: "CPUHP_X86_APB_DEAD", value: 8)
!214 = !DIEnumerator(name: "CPUHP_X86_MCE_DEAD", value: 9)
!215 = !DIEnumerator(name: "CPUHP_VIRT_NET_DEAD", value: 10)
!216 = !DIEnumerator(name: "CPUHP_SLUB_DEAD", value: 11)
!217 = !DIEnumerator(name: "CPUHP_DEBUG_OBJ_DEAD", value: 12)
!218 = !DIEnumerator(name: "CPUHP_MM_WRITEBACK_DEAD", value: 13)
!219 = !DIEnumerator(name: "CPUHP_MM_VMSTAT_DEAD", value: 14)
!220 = !DIEnumerator(name: "CPUHP_SOFTIRQ_DEAD", value: 15)
!221 = !DIEnumerator(name: "CPUHP_NET_MVNETA_DEAD", value: 16)
!222 = !DIEnumerator(name: "CPUHP_CPUIDLE_DEAD", value: 17)
!223 = !DIEnumerator(name: "CPUHP_ARM64_FPSIMD_DEAD", value: 18)
!224 = !DIEnumerator(name: "CPUHP_ARM_OMAP_WAKE_DEAD", value: 19)
!225 = !DIEnumerator(name: "CPUHP_IRQ_POLL_DEAD", value: 20)
!226 = !DIEnumerator(name: "CPUHP_BLOCK_SOFTIRQ_DEAD", value: 21)
!227 = !DIEnumerator(name: "CPUHP_ACPI_CPUDRV_DEAD", value: 22)
!228 = !DIEnumerator(name: "CPUHP_S390_PFAULT_DEAD", value: 23)
!229 = !DIEnumerator(name: "CPUHP_BLK_MQ_DEAD", value: 24)
!230 = !DIEnumerator(name: "CPUHP_FS_BUFF_DEAD", value: 25)
!231 = !DIEnumerator(name: "CPUHP_PRINTK_DEAD", value: 26)
!232 = !DIEnumerator(name: "CPUHP_MM_MEMCQ_DEAD", value: 27)
!233 = !DIEnumerator(name: "CPUHP_PERCPU_CNT_DEAD", value: 28)
!234 = !DIEnumerator(name: "CPUHP_RADIX_DEAD", value: 29)
!235 = !DIEnumerator(name: "CPUHP_PAGE_ALLOC_DEAD", value: 30)
!236 = !DIEnumerator(name: "CPUHP_NET_DEV_DEAD", value: 31)
!237 = !DIEnumerator(name: "CPUHP_PCI_XGENE_DEAD", value: 32)
!238 = !DIEnumerator(name: "CPUHP_IOMMU_INTEL_DEAD", value: 33)
!239 = !DIEnumerator(name: "CPUHP_LUSTRE_CFS_DEAD", value: 34)
!240 = !DIEnumerator(name: "CPUHP_AP_ARM_CACHE_B15_RAC_DEAD", value: 35)
!241 = !DIEnumerator(name: "CPUHP_PADATA_DEAD", value: 36)
!242 = !DIEnumerator(name: "CPUHP_WORKQUEUE_PREP", value: 37)
!243 = !DIEnumerator(name: "CPUHP_POWER_NUMA_PREPARE", value: 38)
!244 = !DIEnumerator(name: "CPUHP_HRTIMERS_PREPARE", value: 39)
!245 = !DIEnumerator(name: "CPUHP_PROFILE_PREPARE", value: 40)
!246 = !DIEnumerator(name: "CPUHP_X2APIC_PREPARE", value: 41)
!247 = !DIEnumerator(name: "CPUHP_SMPCFD_PREPARE", value: 42)
!248 = !DIEnumerator(name: "CPUHP_RELAY_PREPARE", value: 43)
!249 = !DIEnumerator(name: "CPUHP_SLAB_PREPARE", value: 44)
!250 = !DIEnumerator(name: "CPUHP_MD_RAID5_PREPARE", value: 45)
!251 = !DIEnumerator(name: "CPUHP_RCUTREE_PREP", value: 46)
!252 = !DIEnumerator(name: "CPUHP_CPUIDLE_COUPLED_PREPARE", value: 47)
!253 = !DIEnumerator(name: "CPUHP_POWERPC_PMAC_PREPARE", value: 48)
!254 = !DIEnumerator(name: "CPUHP_POWERPC_MMU_CTX_PREPARE", value: 49)
!255 = !DIEnumerator(name: "CPUHP_XEN_PREPARE", value: 50)
!256 = !DIEnumerator(name: "CPUHP_XEN_EVTCHN_PREPARE", value: 51)
!257 = !DIEnumerator(name: "CPUHP_ARM_SHMOBILE_SCU_PREPARE", value: 52)
!258 = !DIEnumerator(name: "CPUHP_SH_SH3X_PREPARE", value: 53)
!259 = !DIEnumerator(name: "CPUHP_NET_FLOW_PREPARE", value: 54)
!260 = !DIEnumerator(name: "CPUHP_TOPOLOGY_PREPARE", value: 55)
!261 = !DIEnumerator(name: "CPUHP_NET_IUCV_PREPARE", value: 56)
!262 = !DIEnumerator(name: "CPUHP_ARM_BL_PREPARE", value: 57)
!263 = !DIEnumerator(name: "CPUHP_TRACE_RB_PREPARE", value: 58)
!264 = !DIEnumerator(name: "CPUHP_MM_ZS_PREPARE", value: 59)
!265 = !DIEnumerator(name: "CPUHP_MM_ZSWP_MEM_PREPARE", value: 60)
!266 = !DIEnumerator(name: "CPUHP_MM_ZSWP_POOL_PREPARE", value: 61)
!267 = !DIEnumerator(name: "CPUHP_KVM_PPC_BOOK3S_PREPARE", value: 62)
!268 = !DIEnumerator(name: "CPUHP_ZCOMP_PREPARE", value: 63)
!269 = !DIEnumerator(name: "CPUHP_TIMERS_PREPARE", value: 64)
!270 = !DIEnumerator(name: "CPUHP_MIPS_SOC_PREPARE", value: 65)
!271 = !DIEnumerator(name: "CPUHP_BP_PREPARE_DYN", value: 66)
!272 = !DIEnumerator(name: "CPUHP_BP_PREPARE_DYN_END", value: 86)
!273 = !DIEnumerator(name: "CPUHP_BRINGUP_CPU", value: 87)
!274 = !DIEnumerator(name: "CPUHP_AP_IDLE_DEAD", value: 88)
!275 = !DIEnumerator(name: "CPUHP_AP_OFFLINE", value: 89)
!276 = !DIEnumerator(name: "CPUHP_AP_SCHED_STARTING", value: 90)
!277 = !DIEnumerator(name: "CPUHP_AP_RCUTREE_DYING", value: 91)
!278 = !DIEnumerator(name: "CPUHP_AP_CPU_PM_STARTING", value: 92)
!279 = !DIEnumerator(name: "CPUHP_AP_IRQ_GIC_STARTING", value: 93)
!280 = !DIEnumerator(name: "CPUHP_AP_IRQ_HIP04_STARTING", value: 94)
!281 = !DIEnumerator(name: "CPUHP_AP_IRQ_ARMADA_XP_STARTING", value: 95)
!282 = !DIEnumerator(name: "CPUHP_AP_IRQ_BCM2836_STARTING", value: 96)
!283 = !DIEnumerator(name: "CPUHP_AP_IRQ_MIPS_GIC_STARTING", value: 97)
!284 = !DIEnumerator(name: "CPUHP_AP_IRQ_RISCV_STARTING", value: 98)
!285 = !DIEnumerator(name: "CPUHP_AP_IRQ_SIFIVE_PLIC_STARTING", value: 99)
!286 = !DIEnumerator(name: "CPUHP_AP_ARM_MVEBU_COHERENCY", value: 100)
!287 = !DIEnumerator(name: "CPUHP_AP_MICROCODE_LOADER", value: 101)
!288 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_AMD_UNCORE_STARTING", value: 102)
!289 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_STARTING", value: 103)
!290 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_AMD_IBS_STARTING", value: 104)
!291 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_CQM_STARTING", value: 105)
!292 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_CSTATE_STARTING", value: 106)
!293 = !DIEnumerator(name: "CPUHP_AP_PERF_XTENSA_STARTING", value: 107)
!294 = !DIEnumerator(name: "CPUHP_AP_MIPS_OP_LOONGSON3_STARTING", value: 108)
!295 = !DIEnumerator(name: "CPUHP_AP_ARM_SDEI_STARTING", value: 109)
!296 = !DIEnumerator(name: "CPUHP_AP_ARM_VFP_STARTING", value: 110)
!297 = !DIEnumerator(name: "CPUHP_AP_ARM64_DEBUG_MONITORS_STARTING", value: 111)
!298 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_HW_BREAKPOINT_STARTING", value: 112)
!299 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_ACPI_STARTING", value: 113)
!300 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_STARTING", value: 114)
!301 = !DIEnumerator(name: "CPUHP_AP_ARM_L2X0_STARTING", value: 115)
!302 = !DIEnumerator(name: "CPUHP_AP_EXYNOS4_MCT_TIMER_STARTING", value: 116)
!303 = !DIEnumerator(name: "CPUHP_AP_ARM_ARCH_TIMER_STARTING", value: 117)
!304 = !DIEnumerator(name: "CPUHP_AP_ARM_GLOBAL_TIMER_STARTING", value: 118)
!305 = !DIEnumerator(name: "CPUHP_AP_JCORE_TIMER_STARTING", value: 119)
!306 = !DIEnumerator(name: "CPUHP_AP_ARM_TWD_STARTING", value: 120)
!307 = !DIEnumerator(name: "CPUHP_AP_QCOM_TIMER_STARTING", value: 121)
!308 = !DIEnumerator(name: "CPUHP_AP_TEGRA_TIMER_STARTING", value: 122)
!309 = !DIEnumerator(name: "CPUHP_AP_ARMADA_TIMER_STARTING", value: 123)
!310 = !DIEnumerator(name: "CPUHP_AP_MARCO_TIMER_STARTING", value: 124)
!311 = !DIEnumerator(name: "CPUHP_AP_MIPS_GIC_TIMER_STARTING", value: 125)
!312 = !DIEnumerator(name: "CPUHP_AP_ARC_TIMER_STARTING", value: 126)
!313 = !DIEnumerator(name: "CPUHP_AP_RISCV_TIMER_STARTING", value: 127)
!314 = !DIEnumerator(name: "CPUHP_AP_CLINT_TIMER_STARTING", value: 128)
!315 = !DIEnumerator(name: "CPUHP_AP_CSKY_TIMER_STARTING", value: 129)
!316 = !DIEnumerator(name: "CPUHP_AP_HYPERV_TIMER_STARTING", value: 130)
!317 = !DIEnumerator(name: "CPUHP_AP_KVM_STARTING", value: 131)
!318 = !DIEnumerator(name: "CPUHP_AP_KVM_ARM_VGIC_INIT_STARTING", value: 132)
!319 = !DIEnumerator(name: "CPUHP_AP_KVM_ARM_VGIC_STARTING", value: 133)
!320 = !DIEnumerator(name: "CPUHP_AP_KVM_ARM_TIMER_STARTING", value: 134)
!321 = !DIEnumerator(name: "CPUHP_AP_DUMMY_TIMER_STARTING", value: 135)
!322 = !DIEnumerator(name: "CPUHP_AP_ARM_XEN_STARTING", value: 136)
!323 = !DIEnumerator(name: "CPUHP_AP_ARM_CORESIGHT_STARTING", value: 137)
!324 = !DIEnumerator(name: "CPUHP_AP_ARM_CORESIGHT_CTI_STARTING", value: 138)
!325 = !DIEnumerator(name: "CPUHP_AP_ARM64_ISNDEP_STARTING", value: 139)
!326 = !DIEnumerator(name: "CPUHP_AP_SMPCFD_DYING", value: 140)
!327 = !DIEnumerator(name: "CPUHP_AP_X86_TBOOT_DYING", value: 141)
!328 = !DIEnumerator(name: "CPUHP_AP_ARM_CACHE_B15_RAC_DYING", value: 142)
!329 = !DIEnumerator(name: "CPUHP_AP_ONLINE", value: 143)
!330 = !DIEnumerator(name: "CPUHP_TEARDOWN_CPU", value: 144)
!331 = !DIEnumerator(name: "CPUHP_AP_ONLINE_IDLE", value: 145)
!332 = !DIEnumerator(name: "CPUHP_AP_SMPBOOT_THREADS", value: 146)
!333 = !DIEnumerator(name: "CPUHP_AP_X86_VDSO_VMA_ONLINE", value: 147)
!334 = !DIEnumerator(name: "CPUHP_AP_IRQ_AFFINITY_ONLINE", value: 148)
!335 = !DIEnumerator(name: "CPUHP_AP_BLK_MQ_ONLINE", value: 149)
!336 = !DIEnumerator(name: "CPUHP_AP_ARM_MVEBU_SYNC_CLOCKS", value: 150)
!337 = !DIEnumerator(name: "CPUHP_AP_X86_INTEL_EPB_ONLINE", value: 151)
!338 = !DIEnumerator(name: "CPUHP_AP_PERF_ONLINE", value: 152)
!339 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_ONLINE", value: 153)
!340 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_UNCORE_ONLINE", value: 154)
!341 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_AMD_UNCORE_ONLINE", value: 155)
!342 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_AMD_POWER_ONLINE", value: 156)
!343 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_RAPL_ONLINE", value: 157)
!344 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_CQM_ONLINE", value: 158)
!345 = !DIEnumerator(name: "CPUHP_AP_PERF_X86_CSTATE_ONLINE", value: 159)
!346 = !DIEnumerator(name: "CPUHP_AP_PERF_S390_CF_ONLINE", value: 160)
!347 = !DIEnumerator(name: "CPUHP_AP_PERF_S390_SF_ONLINE", value: 161)
!348 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_CCI_ONLINE", value: 162)
!349 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_CCN_ONLINE", value: 163)
!350 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_HISI_DDRC_ONLINE", value: 164)
!351 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_HISI_HHA_ONLINE", value: 165)
!352 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_HISI_L3_ONLINE", value: 166)
!353 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_L2X0_ONLINE", value: 167)
!354 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_QCOM_L2_ONLINE", value: 168)
!355 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_QCOM_L3_ONLINE", value: 169)
!356 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_APM_XGENE_ONLINE", value: 170)
!357 = !DIEnumerator(name: "CPUHP_AP_PERF_ARM_CAVIUM_TX2_UNCORE_ONLINE", value: 171)
!358 = !DIEnumerator(name: "CPUHP_AP_PERF_POWERPC_NEST_IMC_ONLINE", value: 172)
!359 = !DIEnumerator(name: "CPUHP_AP_PERF_POWERPC_CORE_IMC_ONLINE", value: 173)
!360 = !DIEnumerator(name: "CPUHP_AP_PERF_POWERPC_THREAD_IMC_ONLINE", value: 174)
!361 = !DIEnumerator(name: "CPUHP_AP_PERF_POWERPC_TRACE_IMC_ONLINE", value: 175)
!362 = !DIEnumerator(name: "CPUHP_AP_PERF_POWERPC_HV_24x7_ONLINE", value: 176)
!363 = !DIEnumerator(name: "CPUHP_AP_PERF_POWERPC_HV_GPCI_ONLINE", value: 177)
!364 = !DIEnumerator(name: "CPUHP_AP_WATCHDOG_ONLINE", value: 178)
!365 = !DIEnumerator(name: "CPUHP_AP_WORKQUEUE_ONLINE", value: 179)
!366 = !DIEnumerator(name: "CPUHP_AP_RCUTREE_ONLINE", value: 180)
!367 = !DIEnumerator(name: "CPUHP_AP_BASE_CACHEINFO_ONLINE", value: 181)
!368 = !DIEnumerator(name: "CPUHP_AP_ONLINE_DYN", value: 182)
!369 = !DIEnumerator(name: "CPUHP_AP_ONLINE_DYN_END", value: 212)
!370 = !DIEnumerator(name: "CPUHP_AP_X86_HPET_ONLINE", value: 213)
!371 = !DIEnumerator(name: "CPUHP_AP_X86_KVM_CLK_ONLINE", value: 214)
!372 = !DIEnumerator(name: "CPUHP_AP_ACTIVE", value: 215)
!373 = !DIEnumerator(name: "CPUHP_ONLINE", value: 216)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !375, line: 305, baseType: !6, size: 32, elements: !376)
!375 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!376 = !{!377, !378, !379, !380}
!377 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!378 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!379 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!380 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!381 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !183, line: 76, baseType: !6, size: 32, elements: !382)
!382 = !{!383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405}
!383 = !DIEnumerator(name: "IRQ_TYPE_NONE", value: 0, isUnsigned: true)
!384 = !DIEnumerator(name: "IRQ_TYPE_EDGE_RISING", value: 1, isUnsigned: true)
!385 = !DIEnumerator(name: "IRQ_TYPE_EDGE_FALLING", value: 2, isUnsigned: true)
!386 = !DIEnumerator(name: "IRQ_TYPE_EDGE_BOTH", value: 3, isUnsigned: true)
!387 = !DIEnumerator(name: "IRQ_TYPE_LEVEL_HIGH", value: 4, isUnsigned: true)
!388 = !DIEnumerator(name: "IRQ_TYPE_LEVEL_LOW", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "IRQ_TYPE_LEVEL_MASK", value: 12, isUnsigned: true)
!390 = !DIEnumerator(name: "IRQ_TYPE_SENSE_MASK", value: 15, isUnsigned: true)
!391 = !DIEnumerator(name: "IRQ_TYPE_DEFAULT", value: 15, isUnsigned: true)
!392 = !DIEnumerator(name: "IRQ_TYPE_PROBE", value: 16, isUnsigned: true)
!393 = !DIEnumerator(name: "IRQ_LEVEL", value: 256, isUnsigned: true)
!394 = !DIEnumerator(name: "IRQ_PER_CPU", value: 512, isUnsigned: true)
!395 = !DIEnumerator(name: "IRQ_NOPROBE", value: 1024, isUnsigned: true)
!396 = !DIEnumerator(name: "IRQ_NOREQUEST", value: 2048, isUnsigned: true)
!397 = !DIEnumerator(name: "IRQ_NOAUTOEN", value: 4096, isUnsigned: true)
!398 = !DIEnumerator(name: "IRQ_NO_BALANCING", value: 8192, isUnsigned: true)
!399 = !DIEnumerator(name: "IRQ_MOVE_PCNTXT", value: 16384, isUnsigned: true)
!400 = !DIEnumerator(name: "IRQ_NESTED_THREAD", value: 32768, isUnsigned: true)
!401 = !DIEnumerator(name: "IRQ_NOTHREAD", value: 65536, isUnsigned: true)
!402 = !DIEnumerator(name: "IRQ_PER_CPU_DEVID", value: 131072, isUnsigned: true)
!403 = !DIEnumerator(name: "IRQ_IS_POLLED", value: 262144, isUnsigned: true)
!404 = !DIEnumerator(name: "IRQ_DISABLE_UNLAZY", value: 524288, isUnsigned: true)
!405 = !DIEnumerator(name: "IRQ_HIDDEN", value: 1048576, isUnsigned: true)
!406 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !183, line: 223, baseType: !6, size: 32, elements: !407)
!407 = !{!408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431}
!408 = !DIEnumerator(name: "IRQD_TRIGGER_MASK", value: 15, isUnsigned: true)
!409 = !DIEnumerator(name: "IRQD_SETAFFINITY_PENDING", value: 256, isUnsigned: true)
!410 = !DIEnumerator(name: "IRQD_ACTIVATED", value: 512, isUnsigned: true)
!411 = !DIEnumerator(name: "IRQD_NO_BALANCING", value: 1024, isUnsigned: true)
!412 = !DIEnumerator(name: "IRQD_PER_CPU", value: 2048, isUnsigned: true)
!413 = !DIEnumerator(name: "IRQD_AFFINITY_SET", value: 4096, isUnsigned: true)
!414 = !DIEnumerator(name: "IRQD_LEVEL", value: 8192, isUnsigned: true)
!415 = !DIEnumerator(name: "IRQD_WAKEUP_STATE", value: 16384, isUnsigned: true)
!416 = !DIEnumerator(name: "IRQD_MOVE_PCNTXT", value: 32768, isUnsigned: true)
!417 = !DIEnumerator(name: "IRQD_IRQ_DISABLED", value: 65536, isUnsigned: true)
!418 = !DIEnumerator(name: "IRQD_IRQ_MASKED", value: 131072, isUnsigned: true)
!419 = !DIEnumerator(name: "IRQD_IRQ_INPROGRESS", value: 262144, isUnsigned: true)
!420 = !DIEnumerator(name: "IRQD_WAKEUP_ARMED", value: 524288, isUnsigned: true)
!421 = !DIEnumerator(name: "IRQD_FORWARDED_TO_VCPU", value: 1048576, isUnsigned: true)
!422 = !DIEnumerator(name: "IRQD_AFFINITY_MANAGED", value: 2097152, isUnsigned: true)
!423 = !DIEnumerator(name: "IRQD_IRQ_STARTED", value: 4194304, isUnsigned: true)
!424 = !DIEnumerator(name: "IRQD_MANAGED_SHUTDOWN", value: 8388608, isUnsigned: true)
!425 = !DIEnumerator(name: "IRQD_SINGLE_TARGET", value: 16777216, isUnsigned: true)
!426 = !DIEnumerator(name: "IRQD_DEFAULT_TRIGGER_SET", value: 33554432, isUnsigned: true)
!427 = !DIEnumerator(name: "IRQD_CAN_RESERVE", value: 67108864, isUnsigned: true)
!428 = !DIEnumerator(name: "IRQD_MSI_NOMASK_QUIRK", value: 134217728, isUnsigned: true)
!429 = !DIEnumerator(name: "IRQD_HANDLE_ENFORCE_IRQCTX", value: 268435456, isUnsigned: true)
!430 = !DIEnumerator(name: "IRQD_AFFINITY_ON_ACTIVATE", value: 536870912, isUnsigned: true)
!431 = !DIEnumerator(name: "IRQD_IRQ_ENABLED_ON_SUSPEND", value: 1073741824, isUnsigned: true)
!432 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !433, line: 30, baseType: !434, size: 64, elements: !435)
!433 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!434 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!435 = !{!436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464}
!436 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!437 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!438 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!439 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!440 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!441 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!442 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!443 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!444 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!445 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!446 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!447 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!448 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!449 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!450 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!451 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!452 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!453 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!454 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!455 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!456 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!457 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!458 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!459 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!460 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!461 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!462 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!463 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!464 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!465 = !{!466, !467, !470, !474, !486, !499, !523, !527, !6, !528, !529, !538, !539, !540, !543, !608, !609, !97, !612, !613, !614, !503, !615, !616, !641, !642, !678, !679, !680}
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !469)
!469 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !97)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !97, size: 768, elements: !472)
!472 = !{!473}
!473 = !DISubrange(count: 24)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_info", file: !3, line: 94, size: 576, elements: !476)
!476 = !{!477, !484, !485, !487, !488, !489, !490, !498, !500, !501, !502, !506}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !475, file: !3, line: 95, baseType: !478, size: 128)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !479, line: 178, size: 128, elements: !480)
!479 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!480 = !{!481, !483}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !478, file: !479, line: 179, baseType: !482, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !478, file: !479, line: 179, baseType: !482, size: 64, offset: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "eoi_list", scope: !475, file: !3, line: 96, baseType: !478, size: 128, offset: 128)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !475, file: !3, line: 97, baseType: !486, size: 16, offset: 256)
!486 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "spurious_cnt", scope: !475, file: !3, line: 98, baseType: !486, size: 16, offset: 272)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !475, file: !3, line: 99, baseType: !5, size: 32, offset: 288)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !475, file: !3, line: 100, baseType: !6, size: 32, offset: 320)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "evtchn", scope: !475, file: !3, line: 101, baseType: !491, size: 32, offset: 352)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "evtchn_port_t", file: !492, line: 15, baseType: !493)
!492 = !DIFile(filename: "./include/xen/interface/event_channel.h", directory: "/home/lizy2001/genbc/linux")
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !479, line: 104, baseType: !494)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !495, line: 21, baseType: !496)
!495 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !497, line: 27, baseType: !6)
!497 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!498 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !475, file: !3, line: 102, baseType: !499, size: 16, offset: 384)
!499 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "eoi_cpu", scope: !475, file: !3, line: 103, baseType: !499, size: 16, offset: 400)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "irq_epoch", scope: !475, file: !3, line: 104, baseType: !6, size: 32, offset: 416)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "eoi_time", scope: !475, file: !3, line: 105, baseType: !503, size: 64, offset: 448)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !495, line: 23, baseType: !504)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !497, line: 31, baseType: !505)
!505 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !475, file: !3, line: 117, baseType: !507, size: 64, offset: 512)
!507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !475, file: !3, line: 107, size: 64, elements: !508)
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "virq", scope: !507, file: !3, line: 108, baseType: !499, size: 16)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ipi", scope: !507, file: !3, line: 109, baseType: !13, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "pirq", scope: !507, file: !3, line: 116, baseType: !512, size: 64)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !3, line: 110, size: 64, elements: !513)
!513 = !{!514, !515, !516, !518, !519}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pirq", scope: !512, file: !3, line: 111, baseType: !499, size: 16)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "gsi", scope: !512, file: !3, line: 112, baseType: !499, size: 16, offset: 16)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !512, file: !3, line: 113, baseType: !517, size: 8, offset: 32)
!517 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !512, file: !3, line: 114, baseType: !517, size: 8, offset: 40)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "domid", scope: !512, file: !3, line: 115, baseType: !520, size: 16, offset: 48)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !479, line: 103, baseType: !521)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !495, line: 19, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !497, line: 24, baseType: !499)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !97, size: 192, elements: !525)
!525 = !{!526}
!526 = !DISubrange(count: 6)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!528 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !532, line: 17, size: 64, elements: !533)
!532 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!533 = !{!534}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !531, file: !532, line: 17, baseType: !535, size: 64)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 64, elements: !536)
!536 = !{!537}
!537 = !DISubrange(count: 1)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !479, line: 107, baseType: !503)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !479, line: 148, baseType: !6)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !542)
!542 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !482)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lateeoi_work", file: !3, line: 467, size: 832, elements: !545)
!545 = !{!546, !591, !607}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "delayed", scope: !544, file: !3, line: 468, baseType: !547, size: 704)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !433, line: 115, size: 704, elements: !548)
!548 = !{!549, !569, !587, !590}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !547, file: !433, line: 116, baseType: !550, size: 256)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !433, line: 102, size: 256, elements: !551)
!551 = !{!552, !562, !563}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !550, file: !433, line: 103, baseType: !553, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !554, line: 13, baseType: !555)
!554 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !479, line: 175, baseType: !556)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !479, line: 173, size: 64, elements: !557)
!557 = !{!558}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !556, file: !479, line: 174, baseType: !559, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !495, line: 22, baseType: !560)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !497, line: 30, baseType: !561)
!561 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !550, file: !433, line: 104, baseType: !478, size: 128, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !550, file: !433, line: 105, baseType: !564, size: 64, offset: 192)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !433, line: 21, baseType: !565)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DISubroutineType(types: !567)
!567 = !{null, !568}
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !547, file: !433, line: 117, baseType: !570, size: 320, offset: 256)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !571, line: 11, size: 320, elements: !572)
!571 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!572 = !{!573, !580, !581, !586}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !570, file: !571, line: 16, baseType: !574, size: 128)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !479, line: 186, size: 128, elements: !575)
!575 = !{!576, !578}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !574, file: !479, line: 187, baseType: !577, size: 64)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !574, file: !479, line: 187, baseType: !579, size: 64, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !570, file: !571, line: 17, baseType: !528, size: 64, offset: 128)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !570, file: !571, line: 18, baseType: !582, size: 64, offset: 192)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{null, !585}
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !570, file: !571, line: 19, baseType: !494, size: 32, offset: 256)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !547, file: !433, line: 120, baseType: !588, size: 64, offset: 576)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !433, line: 18, flags: DIFlagFwdDecl)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !547, file: !433, line: 121, baseType: !97, size: 32, offset: 640)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "eoi_list_lock", scope: !544, file: !3, line: 469, baseType: !592, offset: 704)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !593, line: 83, baseType: !594)
!593 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !593, line: 71, elements: !595)
!595 = !{!596}
!596 = !DIDerivedType(tag: DW_TAG_member, scope: !594, file: !593, line: 72, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !594, file: !593, line: 72, elements: !598)
!598 = !{!599}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !597, file: !593, line: 73, baseType: !600)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !593, line: 20, elements: !601)
!601 = !{!602}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !600, file: !593, line: 21, baseType: !603)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !604, line: 25, baseType: !605)
!604 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !604, line: 25, elements: !606)
!606 = !{}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "eoi_list", scope: !544, file: !3, line: 470, baseType: !478, size: 128, offset: 704)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !611, line: 76, flags: DIFlagFwdDecl)
!611 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !618, line: 56, size: 1344, elements: !619)
!618 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!619 = !{!620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !617, file: !618, line: 61, baseType: !528, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !617, file: !618, line: 62, baseType: !528, size: 64, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !617, file: !618, line: 63, baseType: !528, size: 64, offset: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !617, file: !618, line: 64, baseType: !528, size: 64, offset: 192)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !617, file: !618, line: 65, baseType: !528, size: 64, offset: 256)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !617, file: !618, line: 66, baseType: !528, size: 64, offset: 320)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !617, file: !618, line: 68, baseType: !528, size: 64, offset: 384)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !617, file: !618, line: 69, baseType: !528, size: 64, offset: 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !617, file: !618, line: 70, baseType: !528, size: 64, offset: 512)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !617, file: !618, line: 71, baseType: !528, size: 64, offset: 576)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !617, file: !618, line: 72, baseType: !528, size: 64, offset: 640)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !617, file: !618, line: 73, baseType: !528, size: 64, offset: 704)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !617, file: !618, line: 74, baseType: !528, size: 64, offset: 768)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !617, file: !618, line: 75, baseType: !528, size: 64, offset: 832)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !617, file: !618, line: 76, baseType: !528, size: 64, offset: 896)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !617, file: !618, line: 81, baseType: !528, size: 64, offset: 960)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !617, file: !618, line: 83, baseType: !528, size: 64, offset: 1024)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !617, file: !618, line: 84, baseType: !528, size: 64, offset: 1088)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !617, file: !618, line: 85, baseType: !528, size: 64, offset: 1152)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !617, file: !618, line: 86, baseType: !528, size: 64, offset: 1216)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !617, file: !618, line: 87, baseType: !528, size: 64, offset: 1280)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vcpu_info", file: !644, line: 522, size: 512, elements: !645)
!644 = !DIFile(filename: "./include/xen/interface/xen.h", directory: "/home/lizy2001/genbc/linux")
!645 = !{!646, !650, !651, !654, !660}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "evtchn_upcall_pending", scope: !643, file: !644, line: 548, baseType: !647, size: 8)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !479, line: 102, baseType: !648)
!648 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !495, line: 17, baseType: !649)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !497, line: 21, baseType: !517)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "evtchn_upcall_mask", scope: !643, file: !644, line: 549, baseType: !647, size: 8, offset: 8)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "evtchn_pending_sel", scope: !643, file: !644, line: 550, baseType: !652, size: 64, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "xen_ulong_t", file: !653, line: 81, baseType: !528)
!653 = !DIFile(filename: "./arch/x86/include/asm/xen/interface.h", directory: "/home/lizy2001/genbc/linux")
!654 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !643, file: !644, line: 551, baseType: !655, size: 128, offset: 128)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_vcpu_info", file: !656, line: 136, size: 128, elements: !657)
!656 = !DIFile(filename: "./arch/x86/include/asm/xen/interface_64.h", directory: "/home/lizy2001/genbc/linux")
!657 = !{!658, !659}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !655, file: !656, line: 137, baseType: !528, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !655, file: !656, line: 138, baseType: !528, size: 64, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !643, file: !644, line: 552, baseType: !661, size: 256, offset: 256)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pvclock_vcpu_time_info", file: !662, line: 26, size: 256, elements: !663)
!662 = !DIFile(filename: "./arch/x86/include/asm/pvclock-abi.h", directory: "/home/lizy2001/genbc/linux")
!663 = !{!664, !665, !666, !667, !668, !669, !673, !674}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !661, file: !662, line: 27, baseType: !494, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !661, file: !662, line: 28, baseType: !494, size: 32, offset: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "tsc_timestamp", scope: !661, file: !662, line: 29, baseType: !503, size: 64, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "system_time", scope: !661, file: !662, line: 30, baseType: !503, size: 64, offset: 128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "tsc_to_system_mul", scope: !661, file: !662, line: 31, baseType: !494, size: 32, offset: 192)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "tsc_shift", scope: !661, file: !662, line: 32, baseType: !670, size: 8, offset: 224)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !495, line: 16, baseType: !671)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !497, line: 20, baseType: !672)
!672 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !661, file: !662, line: 33, baseType: !648, size: 8, offset: 232)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !661, file: !662, line: 34, baseType: !675, size: 16, offset: 240)
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 16, elements: !676)
!676 = !{!677}
!677 = !DISubrange(count: 2)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!681 = !{!682, !738, !743, !745, !750, !6458, !6460, !6462, !6467, !6516, !6519, !6521, !6526, !0, !6528, !6531, !6534, !6536, !6539, !6541, !6543, !6545, !6547, !6549, !6551, !6553, !6555, !6557, !6559}
!682 = !DIGlobalVariableExpression(var: !683, expr: !DIExpression())
!683 = distinct !DIGlobalVariable(name: "__param_event_loop_timeout", scope: !2, file: !3, line: 125, type: !684, isLocal: true, isDefinition: true, align: 64)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !686, line: 69, size: 320, elements: !687)
!686 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!687 = !{!688, !692, !693, !713, !715, !716, !717}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !685, file: !686, line: 70, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!691 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !685, file: !686, line: 71, baseType: !609, size: 64, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !685, file: !686, line: 72, baseType: !694, size: 64, offset: 128)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !686, line: 47, size: 256, elements: !697)
!697 = !{!698, !699, !704, !709}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !696, file: !686, line: 49, baseType: !6, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !696, file: !686, line: 51, baseType: !700, size: 64, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{!97, !689, !703}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !696, file: !686, line: 53, baseType: !705, size: 64, offset: 128)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DISubroutineType(types: !707)
!707 = !{!97, !708, !703}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !696, file: !686, line: 55, baseType: !710, size: 64, offset: 192)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{null, !466}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !685, file: !686, line: 73, baseType: !714, size: 16, offset: 192)
!714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !521)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !685, file: !686, line: 74, baseType: !670, size: 8, offset: 208)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !685, file: !686, line: 75, baseType: !648, size: 8, offset: 216)
!717 = !DIDerivedType(tag: DW_TAG_member, scope: !685, file: !686, line: 76, baseType: !718, size: 64, offset: 256)
!718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !685, file: !686, line: 76, size: 64, elements: !719)
!719 = !{!720, !721, !728}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !718, file: !686, line: 77, baseType: !466, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !718, file: !686, line: 78, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !724)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !686, line: 86, size: 128, elements: !725)
!725 = !{!726, !727}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !724, file: !686, line: 87, baseType: !6, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !724, file: !686, line: 88, baseType: !708, size: 64, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !718, file: !686, line: 79, baseType: !729, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !731)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !686, line: 92, size: 256, elements: !732)
!732 = !{!733, !734, !735, !736, !737}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !731, file: !686, line: 94, baseType: !6, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !731, file: !686, line: 95, baseType: !6, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !731, file: !686, line: 96, baseType: !527, size: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !731, file: !686, line: 97, baseType: !694, size: 64, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !731, file: !686, line: 98, baseType: !466, size: 64, offset: 192)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_event_loop_timeouttype321", scope: !2, file: !3, line: 125, type: !740, isLocal: true, isDefinition: true, align: 8)
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 320, elements: !741)
!741 = !{!742}
!742 = !DISubrange(count: 40)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "__param_event_eoi_delay", scope: !2, file: !3, line: 128, type: !684, isLocal: true, isDefinition: true, align: 64)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_event_eoi_delaytype322", scope: !2, file: !3, line: 128, type: !747, isLocal: true, isDefinition: true, align: 8)
!747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 296, elements: !748)
!748 = !{!749}
!749 = !DISubrange(count: 37)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__warned", scope: !752, file: !3, line: 984, type: !1066, isLocal: true, isDefinition: true)
!752 = distinct !DISubprogram(name: "xen_allocate_pirq_msi", scope: !3, file: !3, line: 976, type: !753, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!753 = !DISubroutineType(types: !754)
!754 = !{!97, !755, !5865}
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !757, line: 309, size: 19264, elements: !758)
!757 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!758 = !{!759, !760, !6261, !6262, !6263, !6264, !6275, !6276, !6277, !6278, !6279, !6280, !6281, !6282, !6283, !6284, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6356, !6357, !6358, !6360, !6361, !6362, !6363, !6364, !6365, !6366, !6367, !6368, !6369, !6370, !6371, !6372, !6373, !6374, !6375, !6376, !6377, !6378, !6379, !6382, !6383, !6384, !6385, !6386, !6387, !6388, !6389, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405, !6406, !6407, !6408, !6409, !6410, !6411, !6412, !6413, !6414, !6415, !6416, !6417, !6418, !6419, !6420, !6421, !6422, !6423, !6424, !6425, !6426, !6427, !6428, !6429, !6430, !6432, !6433, !6434, !6435, !6436, !6437, !6439, !6440, !6441, !6444, !6451, !6452, !6453, !6454, !6455, !6456, !6457}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !756, file: !757, line: 310, baseType: !478, size: 128)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !756, file: !757, line: 311, baseType: !761, size: 64, offset: 128)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !757, line: 605, size: 8064, elements: !763)
!763 = !{!764, !765, !766, !767, !768, !769, !770, !788, !789, !790, !815, !6243, !6244, !6245, !6246, !6247, !6248, !6249, !6253, !6254, !6256, !6257, !6258, !6259, !6260}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !762, file: !757, line: 606, baseType: !478, size: 128)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !762, file: !757, line: 607, baseType: !761, size: 64, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !762, file: !757, line: 608, baseType: !478, size: 128, offset: 192)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !762, file: !757, line: 609, baseType: !478, size: 128, offset: 320)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !762, file: !757, line: 610, baseType: !755, size: 64, offset: 448)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !762, file: !757, line: 611, baseType: !478, size: 128, offset: 512)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !762, file: !757, line: 613, baseType: !771, size: 256, offset: 640)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 256, elements: !786)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !774, line: 20, size: 512, elements: !775)
!774 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!775 = !{!776, !779, !780, !781, !782, !783, !784, !785}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !773, file: !774, line: 21, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !479, line: 158, baseType: !778)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !479, line: 153, baseType: !503)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !773, file: !774, line: 22, baseType: !777, size: 64, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !773, file: !774, line: 23, baseType: !689, size: 64, offset: 128)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !773, file: !774, line: 24, baseType: !528, size: 64, offset: 192)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !773, file: !774, line: 25, baseType: !528, size: 64, offset: 256)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !773, file: !774, line: 26, baseType: !772, size: 64, offset: 320)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !773, file: !774, line: 26, baseType: !772, size: 64, offset: 384)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !773, file: !774, line: 26, baseType: !772, size: 64, offset: 448)
!786 = !{!787}
!787 = !DISubrange(count: 4)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !762, file: !757, line: 614, baseType: !478, size: 128, offset: 896)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !762, file: !757, line: 615, baseType: !773, size: 512, offset: 1024)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !762, file: !757, line: 617, baseType: !791, size: 64, offset: 1536)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !757, line: 731, size: 320, elements: !793)
!793 = !{!794, !798, !802, !806, !811}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !792, file: !757, line: 732, baseType: !795, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{!97, !761}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !792, file: !757, line: 733, baseType: !799, size: 64, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DISubroutineType(types: !801)
!801 = !{null, !761}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !792, file: !757, line: 734, baseType: !803, size: 64, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{!466, !761, !6, !97}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !792, file: !757, line: 735, baseType: !807, size: 64, offset: 192)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DISubroutineType(types: !809)
!809 = !{!97, !761, !6, !97, !97, !810}
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !792, file: !757, line: 736, baseType: !812, size: 64, offset: 256)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DISubroutineType(types: !814)
!814 = !{!97, !761, !6, !97, !97, !494}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !762, file: !757, line: 618, baseType: !816, size: 64, offset: 1600)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !818, line: 230, size: 512, elements: !819)
!818 = !DIFile(filename: "./include/linux/msi.h", directory: "/home/lizy2001/genbc/linux")
!819 = !{!820, !821, !6229, !6230, !6231, !6235, !6239}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !817, file: !818, line: 231, baseType: !609, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !817, file: !818, line: 232, baseType: !822, size: 64, offset: 64)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !148, line: 461, size: 5568, elements: !824)
!824 = !{!825, !5419, !5420, !5423, !5424, !5474, !5565, !5566, !5567, !5568, !5569, !5578, !5672, !5685, !6156, !6157, !6161, !6163, !6164, !6165, !6169, !6175, !6176, !6179, !6180, !6181, !6182, !6183, !6184, !6185, !6217, !6218, !6219, !6222, !6225, !6226, !6227, !6228}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !823, file: !148, line: 462, baseType: !826, size: 512)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !827, line: 64, size: 512, elements: !828)
!827 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!828 = !{!829, !830, !831, !833, !877, !5292, !5413, !5414, !5415, !5416, !5417, !5418}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !826, file: !827, line: 65, baseType: !689, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !826, file: !827, line: 66, baseType: !478, size: 128, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !826, file: !827, line: 67, baseType: !832, size: 64, offset: 192)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !826, file: !827, line: 68, baseType: !834, size: 64, offset: 256)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !827, line: 192, size: 704, elements: !836)
!836 = !{!837, !838, !839, !840}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !835, file: !827, line: 193, baseType: !478, size: 128)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !835, file: !827, line: 194, baseType: !592, offset: 128)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !835, file: !827, line: 195, baseType: !826, size: 512, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !835, file: !827, line: 196, baseType: !841, size: 64, offset: 640)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !827, line: 156, size: 192, elements: !844)
!844 = !{!845, !850, !855}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !843, file: !827, line: 157, baseType: !846, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !847)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{!97, !834, !832}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !843, file: !827, line: 158, baseType: !851, size: 64, offset: 64)
!851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !852)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DISubroutineType(types: !854)
!854 = !{!689, !834, !832}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !843, file: !827, line: 159, baseType: !856, size: 64, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!97, !834, !832, !860}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !827, line: 148, size: 20736, elements: !862)
!862 = !{!863, !867, !871, !872, !876}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !861, file: !827, line: 149, baseType: !864, size: 192)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !708, size: 192, elements: !865)
!865 = !{!866}
!866 = !DISubrange(count: 3)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !861, file: !827, line: 150, baseType: !868, size: 4096, offset: 192)
!868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !708, size: 4096, elements: !869)
!869 = !{!870}
!870 = !DISubrange(count: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !861, file: !827, line: 151, baseType: !97, size: 32, offset: 4288)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !861, file: !827, line: 152, baseType: !873, size: 16384, offset: 4320)
!873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 16384, elements: !874)
!874 = !{!875}
!875 = !DISubrange(count: 2048)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !861, file: !827, line: 153, baseType: !97, size: 32, offset: 20704)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !826, file: !827, line: 69, baseType: !878, size: 64, offset: 320)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !827, line: 138, size: 448, elements: !880)
!880 = !{!881, !885, !912, !914, !5256, !5284, !5288}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !879, file: !827, line: 139, baseType: !882, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{null, !832}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !879, file: !827, line: 140, baseType: !886, size: 64, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !889, line: 230, size: 128, elements: !890)
!889 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!890 = !{!891, !905}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !888, file: !889, line: 231, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!895, !832, !899, !708}
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !479, line: 60, baseType: !896)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !897, line: 73, baseType: !898)
!897 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !897, line: 15, baseType: !434)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !889, line: 30, size: 128, elements: !901)
!901 = !{!902, !903}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !900, file: !889, line: 31, baseType: !689, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !900, file: !889, line: 32, baseType: !904, size: 16, offset: 64)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !479, line: 19, baseType: !499)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !888, file: !889, line: 232, baseType: !906, size: 64, offset: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{!895, !832, !899, !689, !909}
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !479, line: 55, baseType: !910)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !897, line: 72, baseType: !911)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !897, line: 16, baseType: !528)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !879, file: !827, line: 141, baseType: !913, size: 64, offset: 128)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !879, file: !827, line: 142, baseType: !915, size: 64, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !889, line: 84, size: 320, elements: !919)
!919 = !{!920, !921, !925, !5253, !5254}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !918, file: !889, line: 85, baseType: !689, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !918, file: !889, line: 86, baseType: !922, size: 64, offset: 64)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{!904, !832, !899, !97}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !918, file: !889, line: 88, baseType: !926, size: 64, offset: 128)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{!904, !832, !929, !97}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !889, line: 168, size: 448, elements: !931)
!931 = !{!932, !933, !934, !935, !5248, !5249}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !930, file: !889, line: 169, baseType: !900, size: 128)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !930, file: !889, line: 170, baseType: !909, size: 64, offset: 128)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !930, file: !889, line: 171, baseType: !466, size: 64, offset: 192)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !930, file: !889, line: 172, baseType: !936, size: 64, offset: 256)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{!895, !939, !832, !929, !708, !1107, !909}
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !119, line: 916, size: 1856, align: 32, elements: !941)
!941 = !{!942, !960, !5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220, !5221, !5222, !5231, !5232, !5241, !5242, !5243, !5244, !5245, !5246, !5247}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !940, file: !119, line: 920, baseType: !943, size: 128)
!943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !940, file: !119, line: 917, size: 128, elements: !944)
!944 = !{!945, !951}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !943, file: !119, line: 918, baseType: !946, size: 64)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !947, line: 58, size: 64, elements: !948)
!947 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!948 = !{!949}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !946, file: !947, line: 59, baseType: !950, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !943, file: !119, line: 919, baseType: !952, size: 128, align: 64)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !479, line: 216, size: 128, align: 64, elements: !953)
!953 = !{!954, !956}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !952, file: !479, line: 217, baseType: !955, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !952, file: !479, line: 218, baseType: !957, size: 64, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{null, !955}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !940, file: !119, line: 921, baseType: !961, size: 128, offset: 128)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !962, line: 8, size: 128, elements: !963)
!962 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!963 = !{!964, !968}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !961, file: !962, line: 9, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !967, line: 18, flags: DIFlagFwdDecl)
!967 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!968 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !961, file: !962, line: 10, baseType: !969, size: 64, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !967, line: 89, size: 1536, elements: !971)
!971 = !{!972, !973, !983, !991, !992, !1007, !5182, !5184, !5196, !5197, !5198, !5199, !5200, !5205, !5206, !5207}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !970, file: !967, line: 91, baseType: !6, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !970, file: !967, line: 92, baseType: !974, size: 32, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !975, line: 277, baseType: !976)
!975 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !975, line: 277, size: 32, elements: !977)
!977 = !{!978}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !976, file: !975, line: 277, baseType: !979, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !975, line: 70, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !975, line: 65, size: 32, elements: !981)
!981 = !{!982}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !980, file: !975, line: 66, baseType: !6, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !970, file: !967, line: 93, baseType: !984, size: 128, offset: 64)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !985, line: 38, size: 128, elements: !986)
!985 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!986 = !{!987, !989}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !984, file: !985, line: 39, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !984, file: !985, line: 39, baseType: !990, size: 64, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !970, file: !967, line: 94, baseType: !969, size: 64, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !970, file: !967, line: 95, baseType: !993, size: 128, offset: 256)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !967, line: 47, size: 128, elements: !994)
!994 = !{!995, !1004}
!995 = !DIDerivedType(tag: DW_TAG_member, scope: !993, file: !967, line: 48, baseType: !996, size: 64)
!996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !993, file: !967, line: 48, size: 64, elements: !997)
!997 = !{!998, !1003}
!998 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !967, line: 49, baseType: !999, size: 64)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !967, line: 49, size: 64, elements: !1000)
!1000 = !{!1001, !1002}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !999, file: !967, line: 50, baseType: !494, size: 32)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !999, file: !967, line: 50, baseType: !494, size: 32, offset: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !996, file: !967, line: 52, baseType: !503, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !993, file: !967, line: 54, baseType: !1005, size: 64, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !970, file: !967, line: 96, baseType: !1008, size: 64, offset: 384)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !119, line: 610, size: 4224, elements: !1010)
!1010 = !{!1011, !1012, !1013, !1021, !1028, !1029, !1171, !4894, !4895, !4896, !4901, !4902, !4903, !4904, !4905, !4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !5150, !5158, !5159, !5160, !5178, !5179, !5180, !5181}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1009, file: !119, line: 611, baseType: !904, size: 16)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1009, file: !119, line: 612, baseType: !499, size: 16, offset: 16)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1009, file: !119, line: 613, baseType: !1014, size: 32, offset: 32)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1015, line: 23, baseType: !1016)
!1015 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1015, line: 21, size: 32, elements: !1017)
!1017 = !{!1018}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1016, file: !1015, line: 22, baseType: !1019, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !479, line: 32, baseType: !1020)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !897, line: 49, baseType: !6)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1009, file: !119, line: 614, baseType: !1022, size: 32, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1015, line: 28, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1015, line: 26, size: 32, elements: !1024)
!1024 = !{!1025}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1023, file: !1015, line: 27, baseType: !1026, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !479, line: 33, baseType: !1027)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !897, line: 50, baseType: !6)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1009, file: !119, line: 615, baseType: !6, size: 32, offset: 96)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1009, file: !119, line: 622, baseType: !1030, size: 64, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !119, line: 1864, size: 1536, align: 512, elements: !1033)
!1033 = !{!1034, !1038, !1048, !1052, !1058, !1062, !1068, !1072, !1076, !1080, !1084, !1085, !1091, !1095, !1119, !1147, !1151, !1157, !1162, !1166, !1167}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1032, file: !119, line: 1865, baseType: !1035, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!969, !1008, !969, !6}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1032, file: !119, line: 1866, baseType: !1039, size: 64, offset: 64)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!689, !969, !1008, !1042}
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1044, line: 10, size: 128, elements: !1045)
!1044 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1045 = !{!1046, !1047}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1043, file: !1044, line: 11, baseType: !710, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1043, file: !1044, line: 12, baseType: !466, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1032, file: !119, line: 1867, baseType: !1049, size: 64, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!97, !1008, !97}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1032, file: !119, line: 1868, baseType: !1053, size: 64, offset: 192)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!1056, !1008, !97}
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !119, line: 581, flags: DIFlagFwdDecl)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1032, file: !119, line: 1870, baseType: !1059, size: 64, offset: 256)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!97, !969, !708, !97}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1032, file: !119, line: 1872, baseType: !1063, size: 64, offset: 320)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!97, !1008, !969, !904, !1066}
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !479, line: 30, baseType: !1067)
!1067 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1032, file: !119, line: 1873, baseType: !1069, size: 64, offset: 384)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!97, !969, !1008, !969}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1032, file: !119, line: 1874, baseType: !1073, size: 64, offset: 448)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!97, !1008, !969}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1032, file: !119, line: 1875, baseType: !1077, size: 64, offset: 512)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!97, !1008, !969, !689}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1032, file: !119, line: 1876, baseType: !1081, size: 64, offset: 576)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!97, !1008, !969, !904}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1032, file: !119, line: 1877, baseType: !1073, size: 64, offset: 640)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1032, file: !119, line: 1878, baseType: !1086, size: 64, offset: 704)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!97, !1008, !969, !904, !1089}
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !479, line: 16, baseType: !1090)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !479, line: 13, baseType: !494)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1032, file: !119, line: 1879, baseType: !1092, size: 64, offset: 768)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!97, !1008, !969, !1008, !969, !6}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1032, file: !119, line: 1881, baseType: !1096, size: 64, offset: 832)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!97, !969, !1099}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !119, line: 219, size: 640, elements: !1101)
!1101 = !{!1102, !1103, !1104, !1105, !1106, !1109, !1116, !1117, !1118}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1100, file: !119, line: 220, baseType: !6, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1100, file: !119, line: 221, baseType: !904, size: 16, offset: 32)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1100, file: !119, line: 222, baseType: !1014, size: 32, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1100, file: !119, line: 223, baseType: !1022, size: 32, offset: 96)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1100, file: !119, line: 224, baseType: !1107, size: 64, offset: 128)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !479, line: 46, baseType: !1108)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !897, line: 88, baseType: !561)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1100, file: !119, line: 225, baseType: !1110, size: 128, offset: 192)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1111, line: 13, size: 128, elements: !1112)
!1111 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1112 = !{!1113, !1115}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1110, file: !1111, line: 14, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1111, line: 8, baseType: !560)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1110, file: !1111, line: 15, baseType: !434, size: 64, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1100, file: !119, line: 226, baseType: !1110, size: 128, offset: 320)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1100, file: !119, line: 227, baseType: !1110, size: 128, offset: 448)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1100, file: !119, line: 234, baseType: !939, size: 64, offset: 576)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1032, file: !119, line: 1882, baseType: !1120, size: 64, offset: 896)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!97, !1123, !1125, !494, !6}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1127, line: 22, size: 1152, elements: !1128)
!1127 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1128 = !{!1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1126, file: !1127, line: 23, baseType: !494, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1126, file: !1127, line: 24, baseType: !904, size: 16, offset: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1126, file: !1127, line: 25, baseType: !6, size: 32, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1126, file: !1127, line: 26, baseType: !493, size: 32, offset: 96)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1126, file: !1127, line: 27, baseType: !503, size: 64, offset: 128)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1126, file: !1127, line: 28, baseType: !503, size: 64, offset: 192)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1126, file: !1127, line: 37, baseType: !503, size: 64, offset: 256)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1126, file: !1127, line: 38, baseType: !1089, size: 32, offset: 320)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1126, file: !1127, line: 39, baseType: !1089, size: 32, offset: 352)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1126, file: !1127, line: 40, baseType: !1014, size: 32, offset: 384)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1126, file: !1127, line: 41, baseType: !1022, size: 32, offset: 416)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1126, file: !1127, line: 42, baseType: !1107, size: 64, offset: 448)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1126, file: !1127, line: 43, baseType: !1110, size: 128, offset: 512)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1126, file: !1127, line: 44, baseType: !1110, size: 128, offset: 640)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1126, file: !1127, line: 45, baseType: !1110, size: 128, offset: 768)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1126, file: !1127, line: 46, baseType: !1110, size: 128, offset: 896)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1126, file: !1127, line: 47, baseType: !503, size: 64, offset: 1024)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1126, file: !1127, line: 48, baseType: !503, size: 64, offset: 1088)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1032, file: !119, line: 1883, baseType: !1148, size: 64, offset: 960)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!895, !969, !708, !909}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1032, file: !119, line: 1884, baseType: !1152, size: 64, offset: 1024)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!97, !1008, !1155, !503, !503}
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !119, line: 50, flags: DIFlagFwdDecl)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1032, file: !119, line: 1886, baseType: !1158, size: 64, offset: 1088)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!97, !1008, !1161, !97}
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1032, file: !119, line: 1887, baseType: !1163, size: 64, offset: 1152)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!97, !1008, !969, !939, !6, !904}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1032, file: !119, line: 1890, baseType: !1081, size: 64, offset: 1216)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1032, file: !119, line: 1891, baseType: !1168, size: 64, offset: 1280)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!97, !1008, !1056, !97}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1009, file: !119, line: 623, baseType: !1172, size: 64, offset: 192)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !119, line: 1416, size: 9472, elements: !1174)
!1174 = !{!1175, !1176, !1177, !1178, !1179, !1180, !1221, !4508, !4590, !4673, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4689, !4693, !4694, !4695, !4696, !4699, !4700, !4701, !4742, !4768, !4769, !4770, !4771, !4772, !4773, !4776, !4777, !4784, !4785, !4786, !4787, !4788, !4847, !4848, !4863, !4864, !4865, !4866, !4867, !4868, !4869, !4870, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1173, file: !119, line: 1417, baseType: !478, size: 128)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1173, file: !119, line: 1418, baseType: !1089, size: 32, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1173, file: !119, line: 1419, baseType: !517, size: 8, offset: 160)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1173, file: !119, line: 1420, baseType: !528, size: 64, offset: 192)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1173, file: !119, line: 1421, baseType: !1107, size: 64, offset: 256)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1173, file: !119, line: 1422, baseType: !1181, size: 64, offset: 320)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !119, line: 2228, size: 576, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1193, !1197, !1201, !1205, !1206, !1207, !1211, !1214, !1215, !1216, !1218, !1219, !1220}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1182, file: !119, line: 2229, baseType: !689, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1182, file: !119, line: 2230, baseType: !97, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1182, file: !119, line: 2238, baseType: !1187, size: 64, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!97, !1190}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1192, line: 28, flags: DIFlagFwdDecl)
!1192 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1182, file: !119, line: 2239, baseType: !1194, size: 64, offset: 192)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1196)
!1196 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !119, line: 70, flags: DIFlagFwdDecl)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1182, file: !119, line: 2240, baseType: !1198, size: 64, offset: 256)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!969, !1181, !97, !689, !466}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1182, file: !119, line: 2242, baseType: !1202, size: 64, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{null, !1172}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1182, file: !119, line: 2243, baseType: !609, size: 64, offset: 384)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1182, file: !119, line: 2244, baseType: !1181, size: 64, offset: 448)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1182, file: !119, line: 2245, baseType: !1208, size: 64, offset: 512)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !479, line: 182, size: 64, elements: !1209)
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1208, file: !479, line: 183, baseType: !577, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1182, file: !119, line: 2247, baseType: !1212, offset: 576)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1213, line: 187, elements: !606)
!1213 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1182, file: !119, line: 2248, baseType: !1212, offset: 576)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1182, file: !119, line: 2249, baseType: !1212, offset: 576)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1182, file: !119, line: 2250, baseType: !1217, offset: 576)
!1217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1212, elements: !865)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1182, file: !119, line: 2252, baseType: !1212, offset: 576)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1182, file: !119, line: 2253, baseType: !1212, offset: 576)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1182, file: !119, line: 2254, baseType: !1212, offset: 576)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1173, file: !119, line: 1423, baseType: !1222, size: 64, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !119, line: 1935, size: 1472, elements: !1225)
!1225 = !{!1226, !1230, !1234, !1235, !1239, !1259, !1263, !1264, !1265, !1269, !1273, !1274, !1275, !1276, !1282, !1286, !1287, !1336, !1337, !1338, !1339, !4492, !4507}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1224, file: !119, line: 1936, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!1008, !1172}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1224, file: !119, line: 1937, baseType: !1231, size: 64, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{null, !1008}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1224, file: !119, line: 1938, baseType: !1231, size: 64, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1224, file: !119, line: 1940, baseType: !1236, size: 64, offset: 192)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{null, !1008, !97}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1224, file: !119, line: 1941, baseType: !1240, size: 64, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!97, !1008, !1243}
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !30, line: 51, size: 320, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !1244, file: !30, line: 52, baseType: !434, size: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !1244, file: !30, line: 54, baseType: !434, size: 64, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !1244, file: !30, line: 61, baseType: !1107, size: 64, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !1244, file: !30, line: 62, baseType: !1107, size: 64, offset: 192)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !1244, file: !30, line: 64, baseType: !29, size: 32, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !1244, file: !30, line: 66, baseType: !6, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !1244, file: !30, line: 67, baseType: !6, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !1244, file: !30, line: 68, baseType: !6, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !1244, file: !30, line: 69, baseType: !6, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !1244, file: !30, line: 70, baseType: !6, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !1244, file: !30, line: 71, baseType: !6, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !1244, file: !30, line: 79, baseType: !6, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !1244, file: !30, line: 81, baseType: !6, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1224, file: !119, line: 1942, baseType: !1260, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!97, !1008}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1224, file: !119, line: 1943, baseType: !1231, size: 64, offset: 384)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1224, file: !119, line: 1944, baseType: !1202, size: 64, offset: 448)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1224, file: !119, line: 1945, baseType: !1266, size: 64, offset: 512)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!97, !1172, !97}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1224, file: !119, line: 1946, baseType: !1270, size: 64, offset: 576)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!97, !1172}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1224, file: !119, line: 1947, baseType: !1270, size: 64, offset: 640)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1224, file: !119, line: 1948, baseType: !1270, size: 64, offset: 704)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1224, file: !119, line: 1949, baseType: !1270, size: 64, offset: 768)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1224, file: !119, line: 1950, baseType: !1277, size: 64, offset: 832)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!97, !969, !1280}
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !119, line: 57, flags: DIFlagFwdDecl)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1224, file: !119, line: 1951, baseType: !1283, size: 64, offset: 896)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!97, !1172, !612, !708}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1224, file: !119, line: 1952, baseType: !1202, size: 64, offset: 960)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1224, file: !119, line: 1954, baseType: !1288, size: 64, offset: 1024)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!97, !1291, !969}
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1293, line: 16, size: 896, elements: !1294)
!1293 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1294 = !{!1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1309, !1331, !1332, !1335}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1292, file: !1293, line: 17, baseType: !708, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1292, file: !1293, line: 18, baseType: !909, size: 64, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1292, file: !1293, line: 19, baseType: !909, size: 64, offset: 128)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1292, file: !1293, line: 20, baseType: !909, size: 64, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1292, file: !1293, line: 21, baseType: !909, size: 64, offset: 256)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1292, file: !1293, line: 22, baseType: !1107, size: 64, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1292, file: !1293, line: 23, baseType: !1107, size: 64, offset: 384)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1292, file: !1293, line: 24, baseType: !1303, size: 192, offset: 448)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1304, line: 53, size: 192, elements: !1305)
!1304 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1305 = !{!1306, !1307, !1308}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1303, file: !1304, line: 54, baseType: !553, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1303, file: !1304, line: 55, baseType: !592, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1303, file: !1304, line: 59, baseType: !478, size: 128, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1292, file: !1293, line: 25, baseType: !1310, size: 64, offset: 640)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1293, line: 31, size: 256, elements: !1313)
!1313 = !{!1314, !1319, !1323, !1327}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1312, file: !1293, line: 32, baseType: !1315, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!466, !1291, !1318}
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1312, file: !1293, line: 33, baseType: !1320, size: 64, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{null, !1291, !466}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1312, file: !1293, line: 34, baseType: !1324, size: 64, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!466, !1291, !466, !1318}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1312, file: !1293, line: 35, baseType: !1328, size: 64, offset: 192)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!97, !1291, !466}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1292, file: !1293, line: 26, baseType: !97, size: 32, offset: 704)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1292, file: !1293, line: 27, baseType: !1333, size: 64, offset: 768)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !940)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1292, file: !1293, line: 28, baseType: !466, size: 64, offset: 832)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1224, file: !119, line: 1955, baseType: !1288, size: 64, offset: 1088)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1224, file: !119, line: 1956, baseType: !1288, size: 64, offset: 1152)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1224, file: !119, line: 1957, baseType: !1288, size: 64, offset: 1216)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1224, file: !119, line: 1963, baseType: !1340, size: 64, offset: 1280)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!97, !1172, !1343, !539}
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1345, line: 68, size: 512, align: 128, elements: !1346)
!1345 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1346 = !{!1347, !1348, !4484, !4491}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1344, file: !1345, line: 69, baseType: !528, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, scope: !1344, file: !1345, line: 77, baseType: !1349, size: 320, offset: 64)
!1349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1344, file: !1345, line: 77, size: 320, elements: !1350)
!1350 = !{!1351, !1553, !1558, !1586, !1594, !1600, !4435, !4483}
!1351 = !DIDerivedType(tag: DW_TAG_member, scope: !1349, file: !1345, line: 78, baseType: !1352, size: 320)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1349, file: !1345, line: 78, size: 320, elements: !1353)
!1353 = !{!1354, !1355, !1551, !1552}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1352, file: !1345, line: 84, baseType: !478, size: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1352, file: !1345, line: 86, baseType: !1356, size: 64, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !119, line: 451, size: 1216, align: 64, elements: !1358)
!1358 = !{!1359, !1360, !1367, !1368, !1373, !1388, !1397, !1398, !1399, !1400, !1544, !1545, !1548, !1549, !1550}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1357, file: !119, line: 452, baseType: !1008, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1357, file: !119, line: 453, baseType: !1361, size: 128, offset: 64)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1362, line: 292, size: 128, elements: !1363)
!1362 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1363 = !{!1364, !1365, !1366}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1361, file: !1362, line: 293, baseType: !592)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1361, file: !1362, line: 295, baseType: !539, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1361, file: !1362, line: 296, baseType: !466, size: 64, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1357, file: !119, line: 454, baseType: !539, size: 32, offset: 192)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1357, file: !119, line: 455, baseType: !1369, size: 32, offset: 224)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !479, line: 168, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !479, line: 166, size: 32, elements: !1371)
!1371 = !{!1372}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1370, file: !479, line: 167, baseType: !97, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1357, file: !119, line: 460, baseType: !1374, size: 128, offset: 256)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1375, line: 125, size: 128, elements: !1376)
!1375 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1376 = !{!1377, !1387}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1374, file: !1375, line: 126, baseType: !1378, size: 64)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1375, line: 31, size: 64, elements: !1379)
!1379 = !{!1380}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1378, file: !1375, line: 32, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1375, line: 24, size: 192, align: 64, elements: !1383)
!1383 = !{!1384, !1385, !1386}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1382, file: !1375, line: 25, baseType: !528, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1382, file: !1375, line: 26, baseType: !1381, size: 64, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1382, file: !1375, line: 27, baseType: !1381, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1374, file: !1375, line: 127, baseType: !1381, size: 64, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1357, file: !119, line: 461, baseType: !1389, size: 256, offset: 384)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1390, line: 35, size: 256, elements: !1391)
!1390 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1391 = !{!1392, !1393, !1394, !1396}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1389, file: !1390, line: 36, baseType: !553, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1389, file: !1390, line: 42, baseType: !553, size: 64, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1389, file: !1390, line: 46, baseType: !1395, offset: 128)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !593, line: 29, baseType: !600)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1389, file: !1390, line: 47, baseType: !478, size: 128, offset: 128)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1357, file: !119, line: 462, baseType: !528, size: 64, offset: 640)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1357, file: !119, line: 463, baseType: !528, size: 64, offset: 704)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1357, file: !119, line: 464, baseType: !528, size: 64, offset: 768)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1357, file: !119, line: 465, baseType: !1401, size: 64, offset: 832)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !119, line: 367, size: 1408, elements: !1404)
!1404 = !{!1405, !1409, !1413, !1417, !1421, !1425, !1438, !1444, !1448, !1453, !1457, !1461, !1465, !1508, !1512, !1518, !1519, !1520, !1524, !1529, !1533, !1540}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1403, file: !119, line: 368, baseType: !1406, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!97, !1343, !1243}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1403, file: !119, line: 369, baseType: !1410, size: 64, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!97, !939, !1343}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1403, file: !119, line: 372, baseType: !1414, size: 64, offset: 128)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!97, !1356, !1243}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1403, file: !119, line: 375, baseType: !1418, size: 64, offset: 192)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!97, !1343}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1403, file: !119, line: 381, baseType: !1422, size: 64, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!97, !939, !1356, !482, !6}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1403, file: !119, line: 383, baseType: !1426, size: 64, offset: 320)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DISubroutineType(types: !1428)
!1428 = !{null, !1429}
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1431, line: 795, size: 256, elements: !1432)
!1431 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1432 = !{!1433, !1434, !1435, !1436, !1437}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1430, file: !1431, line: 796, baseType: !939, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1430, file: !1431, line: 797, baseType: !1356, size: 64, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !1430, file: !1431, line: 799, baseType: !528, size: 64, offset: 128)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !1430, file: !1431, line: 800, baseType: !6, size: 32, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !1430, file: !1431, line: 801, baseType: !6, size: 32, offset: 224)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1403, file: !119, line: 385, baseType: !1439, size: 64, offset: 384)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!97, !939, !1356, !1107, !6, !6, !1442, !1443}
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1403, file: !119, line: 388, baseType: !1445, size: 64, offset: 448)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!97, !939, !1356, !1107, !6, !6, !1343, !466}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1403, file: !119, line: 393, baseType: !1449, size: 64, offset: 512)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!1452, !1356, !1452}
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !479, line: 125, baseType: !503)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1403, file: !119, line: 394, baseType: !1454, size: 64, offset: 576)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{null, !1343, !6, !6}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1403, file: !119, line: 395, baseType: !1458, size: 64, offset: 640)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!97, !1343, !539}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1403, file: !119, line: 396, baseType: !1462, size: 64, offset: 704)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{null, !1343}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1403, file: !119, line: 397, baseType: !1466, size: 64, offset: 768)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!895, !1469, !1506}
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !119, line: 320, size: 384, elements: !1471)
!1471 = !{!1472, !1473, !1474, !1478, !1479, !1480, !1481, !1482}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1470, file: !119, line: 321, baseType: !939, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1470, file: !119, line: 326, baseType: !1107, size: 64, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1470, file: !119, line: 327, baseType: !1475, size: 64, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{null, !1469, !434, !434}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1470, file: !119, line: 328, baseType: !466, size: 64, offset: 192)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1470, file: !119, line: 329, baseType: !97, size: 32, offset: 256)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1470, file: !119, line: 330, baseType: !521, size: 16, offset: 288)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1470, file: !119, line: 331, baseType: !521, size: 16, offset: 304)
!1482 = !DIDerivedType(tag: DW_TAG_member, scope: !1470, file: !119, line: 332, baseType: !1483, size: 64, offset: 320)
!1483 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1470, file: !119, line: 332, size: 64, elements: !1484)
!1484 = !{!1485, !1486}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1483, file: !119, line: 333, baseType: !6, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1483, file: !119, line: 334, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1431, line: 569, size: 448, elements: !1489)
!1489 = !{!1490, !1491, !1492}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1488, file: !1431, line: 570, baseType: !1343, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1488, file: !1431, line: 571, baseType: !97, size: 32, offset: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1488, file: !1431, line: 572, baseType: !1493, size: 320, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1494, line: 14, baseType: !1495)
!1494 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1494, line: 29, size: 320, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1505}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1495, file: !1494, line: 30, baseType: !6, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1495, file: !1494, line: 31, baseType: !466, size: 64, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1495, file: !1494, line: 32, baseType: !1500, size: 64, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1494, line: 16, baseType: !1501)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!97, !1504, !6, !97, !466}
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1495, file: !1494, line: 33, baseType: !478, size: 128, offset: 192)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!1507 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !119, line: 64, flags: DIFlagFwdDecl)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1403, file: !119, line: 402, baseType: !1509, size: 64, offset: 832)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!97, !1356, !1343, !1343, !34}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1403, file: !119, line: 404, baseType: !1513, size: 64, offset: 896)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!1066, !1343, !1516}
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1517, line: 305, baseType: !6)
!1517 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1403, file: !119, line: 405, baseType: !1462, size: 64, offset: 960)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1403, file: !119, line: 406, baseType: !1418, size: 64, offset: 1024)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1403, file: !119, line: 407, baseType: !1521, size: 64, offset: 1088)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!97, !1343, !528, !528}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1403, file: !119, line: 409, baseType: !1525, size: 64, offset: 1152)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{null, !1343, !1528, !1528}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1403, file: !119, line: 410, baseType: !1530, size: 64, offset: 1216)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!97, !1356, !1343}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1403, file: !119, line: 413, baseType: !1534, size: 64, offset: 1280)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!97, !1537, !939, !1539}
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !119, line: 61, flags: DIFlagFwdDecl)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1403, file: !119, line: 415, baseType: !1541, size: 64, offset: 1344)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{null, !939}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1357, file: !119, line: 466, baseType: !528, size: 64, offset: 896)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1357, file: !119, line: 467, baseType: !1546, size: 32, offset: 960)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1547, line: 8, baseType: !494)
!1547 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1357, file: !119, line: 468, baseType: !592, offset: 992)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1357, file: !119, line: 469, baseType: !478, size: 128, offset: 1024)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1357, file: !119, line: 470, baseType: !466, size: 64, offset: 1152)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1352, file: !1345, line: 87, baseType: !528, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1352, file: !1345, line: 94, baseType: !528, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, scope: !1349, file: !1345, line: 96, baseType: !1554, size: 64)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1349, file: !1345, line: 96, size: 64, elements: !1555)
!1555 = !{!1556}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1554, file: !1345, line: 101, baseType: !1557, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !479, line: 143, baseType: !503)
!1558 = !DIDerivedType(tag: DW_TAG_member, scope: !1349, file: !1345, line: 103, baseType: !1559, size: 320)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1349, file: !1345, line: 103, size: 320, elements: !1560)
!1560 = !{!1561, !1571, !1574, !1575}
!1561 = !DIDerivedType(tag: DW_TAG_member, scope: !1559, file: !1345, line: 104, baseType: !1562, size: 128)
!1562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1559, file: !1345, line: 104, size: 128, elements: !1563)
!1563 = !{!1564, !1565}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1562, file: !1345, line: 105, baseType: !478, size: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, scope: !1562, file: !1345, line: 106, baseType: !1566, size: 128)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1562, file: !1345, line: 106, size: 128, elements: !1567)
!1567 = !{!1568, !1569, !1570}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1566, file: !1345, line: 107, baseType: !1343, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1566, file: !1345, line: 109, baseType: !97, size: 32, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1566, file: !1345, line: 110, baseType: !97, size: 32, offset: 96)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1559, file: !1345, line: 117, baseType: !1572, size: 64, offset: 128)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1345, line: 117, flags: DIFlagFwdDecl)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1559, file: !1345, line: 119, baseType: !466, size: 64, offset: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, scope: !1559, file: !1345, line: 120, baseType: !1576, size: 64, offset: 256)
!1576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1559, file: !1345, line: 120, size: 64, elements: !1577)
!1577 = !{!1578, !1579, !1580}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1576, file: !1345, line: 121, baseType: !466, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1576, file: !1345, line: 122, baseType: !528, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, scope: !1576, file: !1345, line: 123, baseType: !1581, size: 32)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1576, file: !1345, line: 123, size: 32, elements: !1582)
!1582 = !{!1583, !1584, !1585}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1581, file: !1345, line: 124, baseType: !6, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1581, file: !1345, line: 125, baseType: !6, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1581, file: !1345, line: 126, baseType: !6, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1586 = !DIDerivedType(tag: DW_TAG_member, scope: !1349, file: !1345, line: 130, baseType: !1587, size: 192)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1349, file: !1345, line: 130, size: 192, elements: !1588)
!1588 = !{!1589, !1590, !1591, !1592, !1593}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1587, file: !1345, line: 131, baseType: !528, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1587, file: !1345, line: 134, baseType: !517, size: 8, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1587, file: !1345, line: 135, baseType: !517, size: 8, offset: 72)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1587, file: !1345, line: 136, baseType: !1369, size: 32, offset: 96)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1587, file: !1345, line: 137, baseType: !6, size: 32, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, scope: !1349, file: !1345, line: 139, baseType: !1595, size: 256)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1349, file: !1345, line: 139, size: 256, elements: !1596)
!1596 = !{!1597, !1598, !1599}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1595, file: !1345, line: 140, baseType: !528, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1595, file: !1345, line: 141, baseType: !1369, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1595, file: !1345, line: 143, baseType: !478, size: 128, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, scope: !1349, file: !1345, line: 145, baseType: !1601, size: 256)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1349, file: !1345, line: 145, size: 256, elements: !1602)
!1602 = !{!1603, !1604, !1607, !1608, !4434}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1601, file: !1345, line: 146, baseType: !528, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1601, file: !1345, line: 147, baseType: !1605, size: 64, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1606, line: 509, baseType: !1343)
!1606 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1601, file: !1345, line: 148, baseType: !528, size: 64, offset: 128)
!1608 = !DIDerivedType(tag: DW_TAG_member, scope: !1601, file: !1345, line: 149, baseType: !1609, size: 64, offset: 192)
!1609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1601, file: !1345, line: 149, size: 64, elements: !1610)
!1610 = !{!1611, !4433}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1609, file: !1345, line: 150, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1345, line: 388, size: 7296, elements: !1614)
!1614 = !{!1615, !4431}
!1615 = !DIDerivedType(tag: DW_TAG_member, scope: !1613, file: !1345, line: 389, baseType: !1616, size: 7296)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1613, file: !1345, line: 389, size: 7296, elements: !1617)
!1617 = !{!1618, !1736, !1737, !1738, !1742, !1743, !1744, !1745, !1746, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1787, !1793, !1796, !1835, !1836, !4415, !4416, !4419, !4420, !4421, !4424, !4425, !4426, !4429, !4430}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1616, file: !1345, line: 390, baseType: !1619, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1345, line: 305, size: 1472, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1636, !1637, !1642, !1643, !1646, !1730, !1731, !1732, !1733, !1734}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1620, file: !1345, line: 308, baseType: !528, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1620, file: !1345, line: 309, baseType: !528, size: 64, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1620, file: !1345, line: 313, baseType: !1619, size: 64, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1620, file: !1345, line: 313, baseType: !1619, size: 64, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1620, file: !1345, line: 315, baseType: !1382, size: 192, align: 64, offset: 256)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1620, file: !1345, line: 323, baseType: !528, size: 64, offset: 448)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1620, file: !1345, line: 327, baseType: !1612, size: 64, offset: 512)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1620, file: !1345, line: 333, baseType: !1630, size: 64, offset: 576)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1606, line: 284, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1606, line: 284, size: 64, elements: !1632)
!1632 = !{!1633}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1631, file: !1606, line: 284, baseType: !1634, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1635, line: 19, baseType: !528)
!1635 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1620, file: !1345, line: 334, baseType: !528, size: 64, offset: 640)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1620, file: !1345, line: 343, baseType: !1638, size: 256, offset: 704)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1620, file: !1345, line: 340, size: 256, elements: !1639)
!1639 = !{!1640, !1641}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1638, file: !1345, line: 341, baseType: !1382, size: 192, align: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1638, file: !1345, line: 342, baseType: !528, size: 64, offset: 192)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1620, file: !1345, line: 351, baseType: !478, size: 128, offset: 960)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1620, file: !1345, line: 353, baseType: !1644, size: 64, offset: 1088)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1345, line: 353, flags: DIFlagFwdDecl)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1620, file: !1345, line: 356, baseType: !1647, size: 64, offset: 1152)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !42, line: 557, size: 832, elements: !1650)
!1650 = !{!1651, !1655, !1656, !1660, !1664, !1704, !1708, !1712, !1716, !1717, !1718, !1722, !1726}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1649, file: !42, line: 558, baseType: !1652, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{null, !1619}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1649, file: !42, line: 559, baseType: !1652, size: 64, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1649, file: !42, line: 560, baseType: !1657, size: 64, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!97, !1619, !528}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1649, file: !42, line: 561, baseType: !1661, size: 64, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!97, !1619}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1649, file: !42, line: 562, baseType: !1665, size: 64, offset: 256)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{!1668, !1669}
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1345, line: 682, baseType: !6)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !42, line: 508, size: 768, elements: !1671)
!1671 = !{!1672, !1673, !1674, !1675, !1676, !1677, !1684, !1691, !1697, !1698, !1699, !1701, !1703}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1670, file: !42, line: 509, baseType: !1619, size: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1670, file: !42, line: 510, baseType: !6, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1670, file: !42, line: 511, baseType: !539, size: 32, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1670, file: !42, line: 512, baseType: !528, size: 64, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1670, file: !42, line: 513, baseType: !528, size: 64, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1670, file: !42, line: 514, baseType: !1678, size: 64, offset: 256)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1606, line: 385, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1606, line: 385, size: 64, elements: !1681)
!1681 = !{!1682}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1680, file: !1606, line: 385, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1635, line: 15, baseType: !528)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1670, file: !42, line: 516, baseType: !1685, size: 64, offset: 320)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1606, line: 359, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1606, line: 359, size: 64, elements: !1688)
!1688 = !{!1689}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1687, file: !1606, line: 359, baseType: !1690, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1635, line: 16, baseType: !528)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1670, file: !42, line: 519, baseType: !1692, size: 64, offset: 384)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1635, line: 21, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1635, line: 21, size: 64, elements: !1694)
!1694 = !{!1695}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1693, file: !1635, line: 21, baseType: !1696, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1635, line: 14, baseType: !528)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1670, file: !42, line: 521, baseType: !1343, size: 64, offset: 448)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1670, file: !42, line: 522, baseType: !1343, size: 64, offset: 512)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1670, file: !42, line: 528, baseType: !1700, size: 64, offset: 576)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1670, file: !42, line: 532, baseType: !1702, size: 64, offset: 640)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1670, file: !42, line: 536, baseType: !1605, size: 64, offset: 704)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1649, file: !42, line: 563, baseType: !1705, size: 64, offset: 320)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!1668, !1669, !41}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1649, file: !42, line: 565, baseType: !1709, size: 64, offset: 384)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{null, !1669, !528, !528}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1649, file: !42, line: 567, baseType: !1713, size: 64, offset: 448)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!528, !1619}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1649, file: !42, line: 571, baseType: !1665, size: 64, offset: 512)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1649, file: !42, line: 574, baseType: !1665, size: 64, offset: 576)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1649, file: !42, line: 579, baseType: !1719, size: 64, offset: 640)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!97, !1619, !528, !466, !97, !97}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1649, file: !42, line: 585, baseType: !1723, size: 64, offset: 704)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{!689, !1619}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1649, file: !42, line: 615, baseType: !1727, size: 64, offset: 768)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!1343, !1619, !528}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1620, file: !1345, line: 359, baseType: !528, size: 64, offset: 1216)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1620, file: !1345, line: 361, baseType: !939, size: 64, offset: 1280)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1620, file: !1345, line: 362, baseType: !466, size: 64, offset: 1344)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1620, file: !1345, line: 365, baseType: !553, size: 64, offset: 1408)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1620, file: !1345, line: 373, baseType: !1735, offset: 1472)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1345, line: 296, elements: !606)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1616, file: !1345, line: 391, baseType: !1378, size: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1616, file: !1345, line: 392, baseType: !503, size: 64, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1616, file: !1345, line: 394, baseType: !1739, size: 64, offset: 192)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!528, !939, !528, !528, !528, !528}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1616, file: !1345, line: 398, baseType: !528, size: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1616, file: !1345, line: 399, baseType: !528, size: 64, offset: 320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1616, file: !1345, line: 405, baseType: !528, size: 64, offset: 384)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1616, file: !1345, line: 406, baseType: !528, size: 64, offset: 448)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1616, file: !1345, line: 407, baseType: !1747, size: 64, offset: 512)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1606, line: 286, baseType: !1749)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1606, line: 286, size: 64, elements: !1750)
!1750 = !{!1751}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1749, file: !1606, line: 286, baseType: !1752, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1635, line: 18, baseType: !528)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1616, file: !1345, line: 416, baseType: !1369, size: 32, offset: 576)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1616, file: !1345, line: 428, baseType: !1369, size: 32, offset: 608)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1616, file: !1345, line: 437, baseType: !1369, size: 32, offset: 640)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1616, file: !1345, line: 447, baseType: !1369, size: 32, offset: 672)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1616, file: !1345, line: 450, baseType: !553, size: 64, offset: 704)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1616, file: !1345, line: 452, baseType: !97, size: 32, offset: 768)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1616, file: !1345, line: 454, baseType: !592, offset: 800)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1616, file: !1345, line: 457, baseType: !1389, size: 256, offset: 832)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1616, file: !1345, line: 459, baseType: !478, size: 128, offset: 1088)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1616, file: !1345, line: 466, baseType: !528, size: 64, offset: 1216)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1616, file: !1345, line: 467, baseType: !528, size: 64, offset: 1280)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1616, file: !1345, line: 469, baseType: !528, size: 64, offset: 1344)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1616, file: !1345, line: 470, baseType: !528, size: 64, offset: 1408)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1616, file: !1345, line: 471, baseType: !555, size: 64, offset: 1472)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1616, file: !1345, line: 472, baseType: !528, size: 64, offset: 1536)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1616, file: !1345, line: 473, baseType: !528, size: 64, offset: 1600)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1616, file: !1345, line: 474, baseType: !528, size: 64, offset: 1664)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1616, file: !1345, line: 475, baseType: !528, size: 64, offset: 1728)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1616, file: !1345, line: 477, baseType: !592, offset: 1792)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1616, file: !1345, line: 478, baseType: !528, size: 64, offset: 1792)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1616, file: !1345, line: 478, baseType: !528, size: 64, offset: 1856)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1616, file: !1345, line: 478, baseType: !528, size: 64, offset: 1920)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1616, file: !1345, line: 478, baseType: !528, size: 64, offset: 1984)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1616, file: !1345, line: 479, baseType: !528, size: 64, offset: 2048)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1616, file: !1345, line: 479, baseType: !528, size: 64, offset: 2112)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1616, file: !1345, line: 479, baseType: !528, size: 64, offset: 2176)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1616, file: !1345, line: 480, baseType: !528, size: 64, offset: 2240)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1616, file: !1345, line: 480, baseType: !528, size: 64, offset: 2304)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1616, file: !1345, line: 480, baseType: !528, size: 64, offset: 2368)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1616, file: !1345, line: 480, baseType: !528, size: 64, offset: 2432)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1616, file: !1345, line: 482, baseType: !1784, size: 2816, offset: 2496)
!1784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 2816, elements: !1785)
!1785 = !{!1786}
!1786 = !DISubrange(count: 44)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1616, file: !1345, line: 488, baseType: !1788, size: 256, offset: 5312)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1789, line: 60, size: 256, elements: !1790)
!1789 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1790 = !{!1791}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1788, file: !1789, line: 61, baseType: !1792, size: 256)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !553, size: 256, elements: !786)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1616, file: !1345, line: 490, baseType: !1794, size: 64, offset: 5568)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1345, line: 490, flags: DIFlagFwdDecl)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1616, file: !1345, line: 493, baseType: !1797, size: 896, offset: 5632)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1798, line: 53, baseType: !1799)
!1798 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1798, line: 13, size: 896, elements: !1800)
!1800 = !{!1801, !1802, !1803, !1804, !1807, !1808, !1809, !1810, !1830, !1831, !1832}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1799, file: !1798, line: 18, baseType: !503, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1799, file: !1798, line: 28, baseType: !555, size: 64, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1799, file: !1798, line: 31, baseType: !1389, size: 256, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1799, file: !1798, line: 32, baseType: !1805, size: 64, offset: 384)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1798, line: 32, flags: DIFlagFwdDecl)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1799, file: !1798, line: 37, baseType: !499, size: 16, offset: 448)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1799, file: !1798, line: 40, baseType: !1303, size: 192, offset: 512)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1799, file: !1798, line: 41, baseType: !466, size: 64, offset: 704)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1799, file: !1798, line: 42, baseType: !1811, size: 64, offset: 768)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1813)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1814, line: 13, size: 896, elements: !1815)
!1814 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1815 = !{!1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1813, file: !1814, line: 14, baseType: !466, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1813, file: !1814, line: 15, baseType: !528, size: 64, offset: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1813, file: !1814, line: 17, baseType: !528, size: 64, offset: 128)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1813, file: !1814, line: 17, baseType: !528, size: 64, offset: 192)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1813, file: !1814, line: 19, baseType: !434, size: 64, offset: 256)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1813, file: !1814, line: 21, baseType: !434, size: 64, offset: 320)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1813, file: !1814, line: 22, baseType: !434, size: 64, offset: 384)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1813, file: !1814, line: 23, baseType: !434, size: 64, offset: 448)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1813, file: !1814, line: 24, baseType: !434, size: 64, offset: 512)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1813, file: !1814, line: 25, baseType: !434, size: 64, offset: 576)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1813, file: !1814, line: 26, baseType: !434, size: 64, offset: 640)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1813, file: !1814, line: 27, baseType: !434, size: 64, offset: 704)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1813, file: !1814, line: 28, baseType: !434, size: 64, offset: 768)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1813, file: !1814, line: 29, baseType: !434, size: 64, offset: 832)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1799, file: !1798, line: 44, baseType: !1369, size: 32, offset: 832)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1799, file: !1798, line: 50, baseType: !521, size: 16, offset: 864)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1799, file: !1798, line: 51, baseType: !1833, size: 16, offset: 880)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !495, line: 18, baseType: !1834)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !497, line: 23, baseType: !486)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1616, file: !1345, line: 495, baseType: !528, size: 64, offset: 6528)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1616, file: !1345, line: 497, baseType: !1837, size: 64, offset: 6592)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1345, line: 381, size: 384, elements: !1839)
!1839 = !{!1840, !1841, !4414}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1838, file: !1345, line: 382, baseType: !1369, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1838, file: !1345, line: 383, baseType: !1842, size: 128, offset: 64)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1345, line: 376, size: 128, elements: !1843)
!1843 = !{!1844, !4412}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1842, file: !1345, line: 377, baseType: !1845, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1847, line: 640, size: 48640, elements: !1848)
!1847 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1848 = !{!1849, !1855, !1857, !1858, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1875, !1893, !1904, !1987, !1988, !1989, !1993, !1994, !1996, !1997, !1998, !1999, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2082, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2402, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2436, !2441, !2515, !2516, !2517, !2518, !2522, !2525, !2528, !2531, !2534, !2570, !2671, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2717, !2718, !2719, !2720, !2721, !2726, !2727, !2728, !2731, !2732, !3549, !3558, !3561, !3562, !3563, !3566, !3567, !3646, !3647, !3650, !3651, !3654, !3655, !3656, !4190, !4191, !4192, !4205, !4206, !4207, !4217, !4222, !4225, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1846, file: !1847, line: 646, baseType: !1850, size: 128)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1851, line: 56, size: 128, elements: !1852)
!1851 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1852 = !{!1853, !1854}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1850, file: !1851, line: 57, baseType: !528, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1850, file: !1851, line: 58, baseType: !494, size: 32, offset: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1846, file: !1847, line: 649, baseType: !1856, size: 64, offset: 128)
!1856 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !434)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1846, file: !1847, line: 657, baseType: !466, size: 64, offset: 192)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1846, file: !1847, line: 658, baseType: !1859, size: 32, offset: 256)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1860, line: 113, baseType: !1861)
!1860 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1860, line: 111, size: 32, elements: !1862)
!1862 = !{!1863}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1861, file: !1860, line: 112, baseType: !1369, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1846, file: !1847, line: 660, baseType: !6, size: 32, offset: 288)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1846, file: !1847, line: 661, baseType: !6, size: 32, offset: 320)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1846, file: !1847, line: 684, baseType: !97, size: 32, offset: 352)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1846, file: !1847, line: 686, baseType: !97, size: 32, offset: 384)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1846, file: !1847, line: 687, baseType: !97, size: 32, offset: 416)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1846, file: !1847, line: 688, baseType: !97, size: 32, offset: 448)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1846, file: !1847, line: 689, baseType: !6, size: 32, offset: 480)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1846, file: !1847, line: 691, baseType: !1872, size: 64, offset: 512)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1874)
!1874 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1847, line: 691, flags: DIFlagFwdDecl)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1846, file: !1847, line: 692, baseType: !1876, size: 832, offset: 576)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1847, line: 451, size: 832, elements: !1877)
!1877 = !{!1878, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1876, file: !1847, line: 453, baseType: !1879, size: 128)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1847, line: 325, size: 128, elements: !1880)
!1880 = !{!1881, !1882}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1879, file: !1847, line: 326, baseType: !528, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1879, file: !1847, line: 327, baseType: !494, size: 32, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1876, file: !1847, line: 454, baseType: !1382, size: 192, align: 64, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1876, file: !1847, line: 455, baseType: !478, size: 128, offset: 320)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1876, file: !1847, line: 456, baseType: !6, size: 32, offset: 448)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1876, file: !1847, line: 458, baseType: !503, size: 64, offset: 512)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1876, file: !1847, line: 459, baseType: !503, size: 64, offset: 576)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1876, file: !1847, line: 460, baseType: !503, size: 64, offset: 640)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1876, file: !1847, line: 461, baseType: !503, size: 64, offset: 704)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1876, file: !1847, line: 463, baseType: !503, size: 64, offset: 768)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1876, file: !1847, line: 465, baseType: !1892, offset: 832)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1847, line: 415, elements: !606)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1846, file: !1847, line: 693, baseType: !1894, size: 384, offset: 1408)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1847, line: 489, size: 384, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1900, !1901, !1902}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1894, file: !1847, line: 490, baseType: !478, size: 128)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1894, file: !1847, line: 491, baseType: !528, size: 64, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1894, file: !1847, line: 492, baseType: !528, size: 64, offset: 192)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1894, file: !1847, line: 493, baseType: !6, size: 32, offset: 256)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1894, file: !1847, line: 494, baseType: !499, size: 16, offset: 288)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1894, file: !1847, line: 495, baseType: !499, size: 16, offset: 304)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1894, file: !1847, line: 497, baseType: !1903, size: 64, offset: 320)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1846, file: !1847, line: 697, baseType: !1905, size: 1792, offset: 1792)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1847, line: 507, size: 1792, elements: !1906)
!1906 = !{!1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1984, !1985}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1905, file: !1847, line: 508, baseType: !1382, size: 192, align: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1905, file: !1847, line: 515, baseType: !503, size: 64, offset: 192)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1905, file: !1847, line: 516, baseType: !503, size: 64, offset: 256)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1905, file: !1847, line: 517, baseType: !503, size: 64, offset: 320)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1905, file: !1847, line: 518, baseType: !503, size: 64, offset: 384)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1905, file: !1847, line: 519, baseType: !503, size: 64, offset: 448)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1905, file: !1847, line: 526, baseType: !559, size: 64, offset: 512)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1905, file: !1847, line: 527, baseType: !503, size: 64, offset: 576)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1905, file: !1847, line: 528, baseType: !6, size: 32, offset: 640)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1905, file: !1847, line: 554, baseType: !6, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1905, file: !1847, line: 555, baseType: !6, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1905, file: !1847, line: 556, baseType: !6, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1905, file: !1847, line: 557, baseType: !6, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1905, file: !1847, line: 563, baseType: !1921, size: 512, offset: 704)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !48, line: 118, size: 512, elements: !1922)
!1922 = !{!1923, !1931, !1932, !1937, !1980, !1981, !1982, !1983}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1921, file: !48, line: 119, baseType: !1924, size: 256)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1925, line: 9, size: 256, elements: !1926)
!1925 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1926 = !{!1927, !1928}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1924, file: !1925, line: 10, baseType: !1382, size: 192, align: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1924, file: !1925, line: 11, baseType: !1929, size: 64, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1930, line: 29, baseType: !559)
!1930 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1921, file: !48, line: 120, baseType: !1929, size: 64, offset: 256)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1921, file: !48, line: 121, baseType: !1933, size: 64, offset: 320)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!47, !1936}
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1921, file: !48, line: 122, baseType: !1938, size: 64, offset: 384)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !48, line: 159, size: 512, align: 512, elements: !1940)
!1940 = !{!1941, !1961, !1962, !1965, !1970, !1971, !1975, !1979}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1939, file: !48, line: 160, baseType: !1942, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !48, line: 214, size: 4608, align: 512, elements: !1944)
!1944 = !{!1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1943, file: !48, line: 215, baseType: !1395)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1943, file: !48, line: 216, baseType: !6, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1943, file: !48, line: 217, baseType: !6, size: 32, offset: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1943, file: !48, line: 218, baseType: !6, size: 32, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1943, file: !48, line: 219, baseType: !6, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1943, file: !48, line: 220, baseType: !6, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1943, file: !48, line: 221, baseType: !6, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1943, file: !48, line: 222, baseType: !6, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1943, file: !48, line: 233, baseType: !1929, size: 64, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1943, file: !48, line: 234, baseType: !1936, size: 64, offset: 192)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1943, file: !48, line: 235, baseType: !1929, size: 64, offset: 256)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1943, file: !48, line: 236, baseType: !1936, size: 64, offset: 320)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1943, file: !48, line: 237, baseType: !1958, size: 4096, offset: 512)
!1958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1939, size: 4096, elements: !1959)
!1959 = !{!1960}
!1960 = !DISubrange(count: 8)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1939, file: !48, line: 161, baseType: !6, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1939, file: !48, line: 162, baseType: !1963, size: 32, offset: 96)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !479, line: 27, baseType: !1964)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !897, line: 96, baseType: !97)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1939, file: !48, line: 163, baseType: !1966, size: 32, offset: 128)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !975, line: 276, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !975, line: 276, size: 32, elements: !1968)
!1968 = !{!1969}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1967, file: !975, line: 276, baseType: !979, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1939, file: !48, line: 164, baseType: !1936, size: 64, offset: 192)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1939, file: !48, line: 165, baseType: !1972, size: 128, offset: 256)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1925, line: 14, size: 128, elements: !1973)
!1973 = !{!1974}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1972, file: !1925, line: 15, baseType: !1374, size: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1939, file: !48, line: 166, baseType: !1976, size: 64, offset: 384)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{!1929}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1939, file: !48, line: 167, baseType: !1929, size: 64, offset: 448)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1921, file: !48, line: 123, baseType: !648, size: 8, offset: 448)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1921, file: !48, line: 124, baseType: !648, size: 8, offset: 456)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1921, file: !48, line: 125, baseType: !648, size: 8, offset: 464)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1921, file: !48, line: 126, baseType: !648, size: 8, offset: 472)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1905, file: !1847, line: 572, baseType: !1921, size: 512, offset: 1216)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1905, file: !1847, line: 580, baseType: !1986, size: 64, offset: 1728)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1846, file: !1847, line: 721, baseType: !6, size: 32, offset: 3584)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1846, file: !1847, line: 722, baseType: !97, size: 32, offset: 3616)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1846, file: !1847, line: 723, baseType: !1990, size: 64, offset: 3648)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1992)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !532, line: 17, baseType: !531)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1846, file: !1847, line: 724, baseType: !1992, size: 64, offset: 3712)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1846, file: !1847, line: 749, baseType: !1995, offset: 3776)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1847, line: 290, elements: !606)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1846, file: !1847, line: 751, baseType: !478, size: 128, offset: 3776)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1846, file: !1847, line: 757, baseType: !1612, size: 64, offset: 3904)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1846, file: !1847, line: 758, baseType: !1612, size: 64, offset: 3968)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1846, file: !1847, line: 761, baseType: !2000, size: 320, offset: 4032)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1789, line: 34, size: 320, elements: !2001)
!2001 = !{!2002, !2003}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2000, file: !1789, line: 35, baseType: !503, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2000, file: !1789, line: 36, baseType: !2004, size: 256, offset: 64)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1619, size: 256, elements: !786)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1846, file: !1847, line: 766, baseType: !97, size: 32, offset: 4352)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1846, file: !1847, line: 767, baseType: !97, size: 32, offset: 4384)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1846, file: !1847, line: 768, baseType: !97, size: 32, offset: 4416)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1846, file: !1847, line: 770, baseType: !97, size: 32, offset: 4448)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1846, file: !1847, line: 772, baseType: !528, size: 64, offset: 4480)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1846, file: !1847, line: 775, baseType: !6, size: 32, offset: 4544)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1846, file: !1847, line: 778, baseType: !6, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1846, file: !1847, line: 779, baseType: !6, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1846, file: !1847, line: 780, baseType: !6, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1846, file: !1847, line: 803, baseType: !6, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1846, file: !1847, line: 806, baseType: !6, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1846, file: !1847, line: 807, baseType: !6, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1846, file: !1847, line: 809, baseType: !6, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1846, file: !1847, line: 815, baseType: !6, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1846, file: !1847, line: 831, baseType: !528, size: 64, offset: 4672)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1846, file: !1847, line: 833, baseType: !2021, size: 384, offset: 4736)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !53, line: 25, size: 384, elements: !2022)
!2022 = !{!2023, !2028}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2021, file: !53, line: 26, baseType: !2024, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DISubroutineType(types: !2026)
!2026 = !{!434, !2027}
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, scope: !2021, file: !53, line: 27, baseType: !2029, size: 320, offset: 64)
!2029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2021, file: !53, line: 27, size: 320, elements: !2030)
!2030 = !{!2031, !2040, !2067}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2029, file: !53, line: 36, baseType: !2032, size: 320)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2029, file: !53, line: 29, size: 320, elements: !2033)
!2033 = !{!2034, !2035, !2036, !2037, !2038, !2039}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2032, file: !53, line: 30, baseType: !810, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2032, file: !53, line: 31, baseType: !494, size: 32, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2032, file: !53, line: 32, baseType: !494, size: 32, offset: 96)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2032, file: !53, line: 33, baseType: !494, size: 32, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2032, file: !53, line: 34, baseType: !503, size: 64, offset: 192)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2032, file: !53, line: 35, baseType: !810, size: 64, offset: 256)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2029, file: !53, line: 46, baseType: !2041, size: 192)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2029, file: !53, line: 38, size: 192, elements: !2042)
!2042 = !{!2043, !2044, !2045, !2066}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2041, file: !53, line: 39, baseType: !1963, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2041, file: !53, line: 40, baseType: !52, size: 32, offset: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, scope: !2041, file: !53, line: 41, baseType: !2046, size: 64, offset: 64)
!2046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2041, file: !53, line: 41, size: 64, elements: !2047)
!2047 = !{!2048, !2056}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2046, file: !53, line: 42, baseType: !2049, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2051, line: 7, size: 128, elements: !2052)
!2051 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2052 = !{!2053, !2055}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2050, file: !2051, line: 8, baseType: !2054, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !897, line: 93, baseType: !561)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2050, file: !2051, line: 9, baseType: !561, size: 64, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2046, file: !53, line: 43, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2059, line: 7, size: 64, elements: !2060)
!2059 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2060 = !{!2061, !2065}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2058, file: !2059, line: 8, baseType: !2062, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2059, line: 5, baseType: !2063)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !495, line: 20, baseType: !2064)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !497, line: 26, baseType: !97)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2058, file: !2059, line: 9, baseType: !2063, size: 32, offset: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2041, file: !53, line: 45, baseType: !503, size: 64, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2029, file: !53, line: 54, baseType: !2068, size: 256)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2029, file: !53, line: 48, size: 256, elements: !2069)
!2069 = !{!2070, !2078, !2079, !2080, !2081}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2068, file: !53, line: 49, baseType: !2071, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !2073, line: 36, size: 64, elements: !2074)
!2073 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!2074 = !{!2075, !2076, !2077}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2072, file: !2073, line: 37, baseType: !97, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2072, file: !2073, line: 38, baseType: !486, size: 16, offset: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !2072, file: !2073, line: 39, baseType: !486, size: 16, offset: 48)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2068, file: !53, line: 50, baseType: !97, size: 32, offset: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2068, file: !53, line: 51, baseType: !97, size: 32, offset: 96)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2068, file: !53, line: 52, baseType: !528, size: 64, offset: 128)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2068, file: !53, line: 53, baseType: !528, size: 64, offset: 192)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1846, file: !1847, line: 835, baseType: !2083, size: 32, offset: 5120)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !479, line: 22, baseType: !2084)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !897, line: 28, baseType: !97)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1846, file: !1847, line: 836, baseType: !2083, size: 32, offset: 5152)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1846, file: !1847, line: 840, baseType: !528, size: 64, offset: 5184)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1846, file: !1847, line: 849, baseType: !1845, size: 64, offset: 5248)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1846, file: !1847, line: 852, baseType: !1845, size: 64, offset: 5312)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1846, file: !1847, line: 857, baseType: !478, size: 128, offset: 5376)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1846, file: !1847, line: 858, baseType: !478, size: 128, offset: 5504)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1846, file: !1847, line: 859, baseType: !1845, size: 64, offset: 5632)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1846, file: !1847, line: 867, baseType: !478, size: 128, offset: 5696)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1846, file: !1847, line: 868, baseType: !478, size: 128, offset: 5824)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1846, file: !1847, line: 871, baseType: !2095, size: 64, offset: 5952)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !128, line: 59, size: 768, elements: !2097)
!2097 = !{!2098, !2099, !2100, !2101, !2103, !2104, !2110, !2111}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2096, file: !128, line: 61, baseType: !1859, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2096, file: !128, line: 62, baseType: !6, size: 32, offset: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2096, file: !128, line: 63, baseType: !592, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2096, file: !128, line: 65, baseType: !2102, size: 256, offset: 64)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1208, size: 256, elements: !786)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2096, file: !128, line: 66, baseType: !1208, size: 64, offset: 320)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2096, file: !128, line: 68, baseType: !2105, size: 128, offset: 384)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1494, line: 40, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1494, line: 36, size: 128, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2106, file: !1494, line: 37, baseType: !592)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2106, file: !1494, line: 38, baseType: !478, size: 128)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2096, file: !128, line: 69, baseType: !952, size: 128, align: 64, offset: 512)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2096, file: !128, line: 70, baseType: !2112, size: 128, offset: 640)
!2112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2113, size: 128, elements: !536)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !128, line: 54, size: 128, elements: !2114)
!2114 = !{!2115, !2116}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2113, file: !128, line: 55, baseType: !97, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2113, file: !128, line: 56, baseType: !2117, size: 64, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2119, line: 20, size: 1088, elements: !2120)
!2119 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2120 = !{!2121, !2126, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2399, !2400, !2401}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2118, file: !2119, line: 21, baseType: !2122, size: 32)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2123, line: 19, size: 32, elements: !2124)
!2123 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2124 = !{!2125}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2122, file: !2123, line: 20, baseType: !1859, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !2118, file: !2119, line: 22, baseType: !2127, size: 192, offset: 64)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2128, line: 19, size: 192, elements: !2129)
!2128 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2129 = !{!2130, !2131, !2132}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2127, file: !2128, line: 20, baseType: !1361, size: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2127, file: !2128, line: 21, baseType: !6, size: 32, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2127, file: !2128, line: 22, baseType: !6, size: 32, offset: 160)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2118, file: !2119, line: 23, baseType: !952, size: 128, align: 64, offset: 256)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !2118, file: !2119, line: 24, baseType: !6, size: 32, offset: 384)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !2118, file: !2119, line: 25, baseType: !1845, size: 64, offset: 448)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !2118, file: !2119, line: 26, baseType: !1572, size: 64, offset: 512)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2118, file: !2119, line: 27, baseType: !6, size: 32, offset: 576)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2118, file: !2119, line: 28, baseType: !2117, size: 64, offset: 640)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2118, file: !2119, line: 32, baseType: !2140, size: 64, offset: 704)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2142, line: 56, size: 4160, elements: !2143)
!2142 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2143 = !{!2144, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2183, !2184, !2185, !2290, !2291, !2292, !2384, !2385, !2397}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2141, file: !2142, line: 57, baseType: !2145, size: 576)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2142, line: 23, size: 576, elements: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2145, file: !2142, line: 24, baseType: !494, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, scope: !2145, file: !2142, line: 25, baseType: !2149, size: 512, offset: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2145, file: !2142, line: 25, size: 512, elements: !2150)
!2150 = !{!2151, !2160}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2149, file: !2142, line: 26, baseType: !2152, size: 480)
!2152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2153, size: 480, elements: !2158)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2142, line: 17, size: 96, elements: !2154)
!2154 = !{!2155, !2156, !2157}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2153, file: !2142, line: 18, baseType: !494, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2153, file: !2142, line: 19, baseType: !494, size: 32, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2153, file: !2142, line: 20, baseType: !494, size: 32, offset: 64)
!2158 = !{!2159}
!2159 = !DISubrange(count: 5)
!2160 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2142, line: 27, baseType: !2161, size: 128)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2149, file: !2142, line: 27, size: 128, elements: !2162)
!2162 = !{!2163, !2165}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2161, file: !2142, line: 28, baseType: !2164, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2161, file: !2142, line: 29, baseType: !2164, size: 64, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2141, file: !2142, line: 58, baseType: !2145, size: 576, offset: 576)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2141, file: !2142, line: 59, baseType: !2145, size: 576, offset: 1152)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2141, file: !2142, line: 60, baseType: !1369, size: 32, offset: 1728)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2141, file: !2142, line: 61, baseType: !2140, size: 64, offset: 1792)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2141, file: !2142, line: 62, baseType: !97, size: 32, offset: 1856)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2141, file: !2142, line: 63, baseType: !1014, size: 32, offset: 1888)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2141, file: !2142, line: 64, baseType: !1022, size: 32, offset: 1920)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2141, file: !2142, line: 65, baseType: !2174, size: 192, offset: 1984)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2175, line: 7, size: 192, elements: !2176)
!2175 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2176 = !{!2177, !2178, !2182}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2174, file: !2175, line: 8, baseType: !553, size: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2174, file: !2175, line: 9, baseType: !2179, size: 64, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2181)
!2181 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2175, line: 5, flags: DIFlagFwdDecl)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2174, file: !2175, line: 10, baseType: !6, size: 32, offset: 128)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2141, file: !2142, line: 66, baseType: !528, size: 64, offset: 2176)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2141, file: !2142, line: 74, baseType: !478, size: 128, offset: 2240)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2141, file: !2142, line: 75, baseType: !2186, size: 64, offset: 2368)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2188, line: 189, size: 1664, elements: !2189)
!2188 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2189 = !{!2190, !2191, !2194, !2199, !2200, !2203, !2204, !2209, !2210, !2211, !2212, !2214, !2215, !2216, !2217, !2218, !2254, !2275}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2187, file: !2188, line: 190, baseType: !1859, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2187, file: !2188, line: 191, baseType: !2192, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2188, line: 28, baseType: !2193)
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !479, line: 98, baseType: !2063)
!2194 = !DIDerivedType(tag: DW_TAG_member, scope: !2187, file: !2188, line: 192, baseType: !2195, size: 192, offset: 64)
!2195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2187, file: !2188, line: 192, size: 192, elements: !2196)
!2196 = !{!2197, !2198}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2195, file: !2188, line: 193, baseType: !478, size: 128)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2195, file: !2188, line: 194, baseType: !1382, size: 192, align: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2187, file: !2188, line: 199, baseType: !1389, size: 256, offset: 256)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2187, file: !2188, line: 200, baseType: !2201, size: 64, offset: 512)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2188, line: 200, flags: DIFlagFwdDecl)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2187, file: !2188, line: 201, baseType: !466, size: 64, offset: 576)
!2204 = !DIDerivedType(tag: DW_TAG_member, scope: !2187, file: !2188, line: 202, baseType: !2205, size: 64, offset: 640)
!2205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2187, file: !2188, line: 202, size: 64, elements: !2206)
!2206 = !{!2207, !2208}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2205, file: !2188, line: 203, baseType: !1114, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2205, file: !2188, line: 204, baseType: !1114, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2187, file: !2188, line: 206, baseType: !1114, size: 64, offset: 704)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2187, file: !2188, line: 207, baseType: !1014, size: 32, offset: 768)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2187, file: !2188, line: 208, baseType: !1022, size: 32, offset: 800)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2187, file: !2188, line: 209, baseType: !2213, size: 32, offset: 832)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2188, line: 31, baseType: !493)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2187, file: !2188, line: 210, baseType: !499, size: 16, offset: 864)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2187, file: !2188, line: 211, baseType: !499, size: 16, offset: 880)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2187, file: !2188, line: 215, baseType: !486, size: 16, offset: 896)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2187, file: !2188, line: 222, baseType: !528, size: 64, offset: 960)
!2218 = !DIDerivedType(tag: DW_TAG_member, scope: !2187, file: !2188, line: 239, baseType: !2219, size: 320, offset: 1024)
!2219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2187, file: !2188, line: 239, size: 320, elements: !2220)
!2220 = !{!2221, !2246}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2219, file: !2188, line: 240, baseType: !2222, size: 320)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2188, line: 108, size: 320, elements: !2223)
!2223 = !{!2224, !2225, !2235, !2238, !2245}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2222, file: !2188, line: 110, baseType: !528, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, scope: !2222, file: !2188, line: 111, baseType: !2226, size: 64, offset: 64)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2222, file: !2188, line: 111, size: 64, elements: !2227)
!2227 = !{!2228, !2234}
!2228 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !2188, line: 112, baseType: !2229, size: 64)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2226, file: !2188, line: 112, size: 64, elements: !2230)
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2229, file: !2188, line: 114, baseType: !521, size: 16)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2229, file: !2188, line: 115, baseType: !2233, size: 48, offset: 16)
!2233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 48, elements: !525)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2226, file: !2188, line: 121, baseType: !528, size: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2222, file: !2188, line: 123, baseType: !2236, size: 64, offset: 128)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2188, line: 96, flags: DIFlagFwdDecl)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2222, file: !2188, line: 124, baseType: !2239, size: 64, offset: 192)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2188, line: 102, size: 192, elements: !2241)
!2241 = !{!2242, !2243, !2244}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2240, file: !2188, line: 103, baseType: !952, size: 128, align: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2240, file: !2188, line: 104, baseType: !1859, size: 32, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2240, file: !2188, line: 105, baseType: !1066, size: 8, offset: 160)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2222, file: !2188, line: 125, baseType: !689, size: 64, offset: 256)
!2246 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !2188, line: 241, baseType: !2247, size: 320)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2219, file: !2188, line: 241, size: 320, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2253}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2247, file: !2188, line: 242, baseType: !528, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2247, file: !2188, line: 243, baseType: !528, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2247, file: !2188, line: 244, baseType: !2236, size: 64, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2247, file: !2188, line: 245, baseType: !2239, size: 64, offset: 192)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2247, file: !2188, line: 246, baseType: !708, size: 64, offset: 256)
!2254 = !DIDerivedType(tag: DW_TAG_member, scope: !2187, file: !2188, line: 254, baseType: !2255, size: 256, offset: 1344)
!2255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2187, file: !2188, line: 254, size: 256, elements: !2256)
!2256 = !{!2257, !2263}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2255, file: !2188, line: 255, baseType: !2258, size: 256)
!2258 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2188, line: 128, size: 256, elements: !2259)
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2258, file: !2188, line: 129, baseType: !466, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2258, file: !2188, line: 130, baseType: !2262, size: 256)
!2262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 256, elements: !786)
!2263 = !DIDerivedType(tag: DW_TAG_member, scope: !2255, file: !2188, line: 256, baseType: !2264, size: 256)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2255, file: !2188, line: 256, size: 256, elements: !2265)
!2265 = !{!2266, !2267}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2264, file: !2188, line: 258, baseType: !478, size: 128)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2264, file: !2188, line: 259, baseType: !2268, size: 128, offset: 128)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2269, line: 22, size: 128, elements: !2270)
!2269 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2270 = !{!2271, !2274}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2268, file: !2269, line: 23, baseType: !2272, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2269, line: 23, flags: DIFlagFwdDecl)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2268, file: !2269, line: 24, baseType: !528, size: 64, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2187, file: !2188, line: 274, baseType: !2276, size: 64, offset: 1600)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2188, line: 170, size: 192, elements: !2278)
!2278 = !{!2279, !2288, !2289}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2277, file: !2188, line: 171, baseType: !2280, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2188, line: 165, baseType: !2281)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!97, !2186, !2284, !2286, !2186}
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2237)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2258)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2277, file: !2188, line: 172, baseType: !2186, size: 64, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2277, file: !2188, line: 173, baseType: !2236, size: 64, offset: 128)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2141, file: !2142, line: 76, baseType: !1389, size: 256, offset: 2432)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2141, file: !2142, line: 83, baseType: !550, size: 256, offset: 2688)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2141, file: !2142, line: 85, baseType: !2293, size: 768, offset: 2944)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2294, line: 156, size: 768, elements: !2295)
!2294 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2295 = !{!2296, !2301}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2293, file: !2294, line: 157, baseType: !2297, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2298 = !DISubroutineType(types: !2299)
!2299 = !{!97, !2300}
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2293, file: !2294, line: 158, baseType: !2302, size: 704, offset: 64)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2294, line: 150, size: 704, elements: !2303)
!2303 = !{!2304, !2383}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2302, file: !2294, line: 152, baseType: !2305, size: 640)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2294, line: 131, size: 640, elements: !2306)
!2306 = !{!2307, !2340, !2352, !2353, !2373, !2374, !2376, !2382}
!2307 = !DIDerivedType(tag: DW_TAG_member, scope: !2305, file: !2294, line: 132, baseType: !2308, size: 192)
!2308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2305, file: !2294, line: 132, size: 192, elements: !2309)
!2309 = !{!2310, !2339}
!2310 = !DIDerivedType(tag: DW_TAG_member, scope: !2308, file: !2294, line: 133, baseType: !2311, size: 192)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2308, file: !2294, line: 133, size: 192, elements: !2312)
!2312 = !{!2313, !2336, !2337, !2338}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2311, file: !2294, line: 134, baseType: !2314, size: 64)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2294, line: 112, size: 512, elements: !2316)
!2316 = !{!2317, !2318, !2319, !2320, !2321, !2322, !2328, !2334, !2335}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2315, file: !2294, line: 113, baseType: !689, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2315, file: !2294, line: 114, baseType: !466, size: 64, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2315, file: !2294, line: 115, baseType: !97, size: 32, offset: 128)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2315, file: !2294, line: 116, baseType: !904, size: 16, offset: 160)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2315, file: !2294, line: 117, baseType: !2314, size: 64, offset: 192)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2315, file: !2294, line: 118, baseType: !2323, size: 64, offset: 256)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2294, line: 47, baseType: !2325)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{!97, !2314, !97, !466, !2327, !1318}
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2315, file: !2294, line: 119, baseType: !2329, size: 64, offset: 320)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2294, line: 94, size: 192, elements: !2331)
!2331 = !{!2332, !2333}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2330, file: !2294, line: 95, baseType: !1369, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2330, file: !2294, line: 96, baseType: !2105, size: 128, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2315, file: !2294, line: 120, baseType: !466, size: 64, offset: 384)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2315, file: !2294, line: 121, baseType: !466, size: 64, offset: 448)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2311, file: !2294, line: 135, baseType: !97, size: 32, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2311, file: !2294, line: 136, baseType: !97, size: 32, offset: 96)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2311, file: !2294, line: 137, baseType: !97, size: 32, offset: 128)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2308, file: !2294, line: 139, baseType: !952, size: 128, align: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2305, file: !2294, line: 141, baseType: !2341, size: 64, offset: 192)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2343, line: 26, size: 192, elements: !2344)
!2343 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2344 = !{!2345, !2346}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2342, file: !2343, line: 27, baseType: !6, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2342, file: !2343, line: 28, baseType: !2347, size: 128, offset: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2348, line: 43, size: 128, elements: !2349)
!2348 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2347, file: !2348, line: 44, baseType: !1395)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2347, file: !2348, line: 45, baseType: !478, size: 128)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2305, file: !2294, line: 142, baseType: !2314, size: 64, offset: 256)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2305, file: !2294, line: 143, baseType: !2354, size: 64, offset: 320)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2294, line: 161, size: 960, elements: !2356)
!2356 = !{!2357, !2358, !2362, !2369}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2355, file: !2294, line: 162, baseType: !2293, size: 768)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2355, file: !2294, line: 163, baseType: !2359, size: 64, offset: 768)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{!2300, !2354}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2355, file: !2294, line: 164, baseType: !2363, size: 64, offset: 832)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = !DISubroutineType(types: !2365)
!2365 = !{null, !2366, !2314, !2367, !2368}
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2355, file: !2294, line: 167, baseType: !2370, size: 64, offset: 896)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!97, !2366, !2314}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2305, file: !2294, line: 144, baseType: !2300, size: 64, offset: 384)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2305, file: !2294, line: 145, baseType: !2375, size: 64, offset: 448)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2305, file: !2294, line: 146, baseType: !2377, size: 64, offset: 512)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2294, line: 124, size: 256, elements: !2379)
!2379 = !{!2380, !2381}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2378, file: !2294, line: 125, baseType: !1382, size: 192, align: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2378, file: !2294, line: 126, baseType: !2366, size: 64, offset: 192)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2305, file: !2294, line: 147, baseType: !1208, size: 64, offset: 576)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2302, file: !2294, line: 153, baseType: !1378, size: 64, offset: 640)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2141, file: !2142, line: 86, baseType: !2366, size: 64, offset: 3712)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2141, file: !2142, line: 88, baseType: !2386, size: 64, offset: 3776)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2142, line: 92, size: 576, elements: !2388)
!2388 = !{!2389, !2390, !2391, !2392, !2393}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2387, file: !2142, line: 93, baseType: !574, size: 128)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2387, file: !2142, line: 94, baseType: !2140, size: 64, offset: 128)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2387, file: !2142, line: 95, baseType: !1014, size: 32, offset: 192)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2387, file: !2142, line: 96, baseType: !97, size: 32, offset: 224)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2387, file: !2142, line: 97, baseType: !2394, size: 320, offset: 256)
!2394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1369, size: 320, elements: !2395)
!2395 = !{!2396}
!2396 = !DISubrange(count: 10)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2141, file: !2142, line: 89, baseType: !2398, size: 320, offset: 3840)
!2398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !97, size: 320, elements: !2395)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2118, file: !2119, line: 33, baseType: !2386, size: 64, offset: 768)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !2118, file: !2119, line: 34, baseType: !97, size: 32, offset: 832)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2118, file: !2119, line: 35, baseType: !2174, size: 192, offset: 896)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1846, file: !1847, line: 872, baseType: !2403, size: 512, offset: 6016)
!2403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 512, elements: !786)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1846, file: !1847, line: 873, baseType: !478, size: 128, offset: 6528)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1846, file: !1847, line: 874, baseType: !478, size: 128, offset: 6656)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1846, file: !1847, line: 876, baseType: !2341, size: 64, offset: 6784)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1846, file: !1847, line: 879, baseType: !612, size: 64, offset: 6848)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1846, file: !1847, line: 882, baseType: !612, size: 64, offset: 6912)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1846, file: !1847, line: 884, baseType: !503, size: 64, offset: 6976)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1846, file: !1847, line: 885, baseType: !503, size: 64, offset: 7040)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1846, file: !1847, line: 890, baseType: !503, size: 64, offset: 7104)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1846, file: !1847, line: 891, baseType: !2413, size: 128, offset: 7168)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1847, line: 242, size: 128, elements: !2414)
!2414 = !{!2415, !2416, !2417}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2413, file: !1847, line: 244, baseType: !503, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2413, file: !1847, line: 245, baseType: !503, size: 64, offset: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2413, file: !1847, line: 246, baseType: !1395, offset: 128)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1846, file: !1847, line: 900, baseType: !528, size: 64, offset: 7296)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1846, file: !1847, line: 901, baseType: !528, size: 64, offset: 7360)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1846, file: !1847, line: 904, baseType: !503, size: 64, offset: 7424)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1846, file: !1847, line: 907, baseType: !503, size: 64, offset: 7488)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1846, file: !1847, line: 910, baseType: !528, size: 64, offset: 7552)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1846, file: !1847, line: 911, baseType: !528, size: 64, offset: 7616)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1846, file: !1847, line: 914, baseType: !2425, size: 640, offset: 7680)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2426, line: 123, size: 640, elements: !2427)
!2426 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2427 = !{!2428, !2434, !2435}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2425, file: !2426, line: 124, baseType: !2429, size: 576)
!2429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2430, size: 576, elements: !865)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2426, line: 108, size: 192, elements: !2431)
!2431 = !{!2432, !2433}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2430, file: !2426, line: 109, baseType: !503, size: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2430, file: !2426, line: 110, baseType: !1972, size: 128, offset: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2425, file: !2426, line: 125, baseType: !6, size: 32, offset: 576)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2425, file: !2426, line: 126, baseType: !6, size: 32, offset: 608)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1846, file: !1847, line: 917, baseType: !2437, size: 192, offset: 8320)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2426, line: 134, size: 192, elements: !2438)
!2438 = !{!2439, !2440}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2437, file: !2426, line: 135, baseType: !952, size: 128, align: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2437, file: !2426, line: 136, baseType: !6, size: 32, offset: 128)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1846, file: !1847, line: 923, baseType: !2442, size: 64, offset: 8512)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2444)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2445, line: 111, size: 1280, elements: !2446)
!2445 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2446 = !{!2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2499, !2500, !2510}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2444, file: !2445, line: 112, baseType: !1369, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2444, file: !2445, line: 120, baseType: !1014, size: 32, offset: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2444, file: !2445, line: 121, baseType: !1022, size: 32, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2444, file: !2445, line: 122, baseType: !1014, size: 32, offset: 96)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2444, file: !2445, line: 123, baseType: !1022, size: 32, offset: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2444, file: !2445, line: 124, baseType: !1014, size: 32, offset: 160)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2444, file: !2445, line: 125, baseType: !1022, size: 32, offset: 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2444, file: !2445, line: 126, baseType: !1014, size: 32, offset: 224)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2444, file: !2445, line: 127, baseType: !1022, size: 32, offset: 256)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2444, file: !2445, line: 128, baseType: !6, size: 32, offset: 288)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2444, file: !2445, line: 129, baseType: !2458, size: 64, offset: 320)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2459, line: 26, baseType: !2460)
!2459 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2459, line: 24, size: 64, elements: !2461)
!2461 = !{!2462}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2460, file: !2459, line: 25, baseType: !2463, size: 64)
!2463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 64, elements: !676)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2444, file: !2445, line: 130, baseType: !2458, size: 64, offset: 384)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2444, file: !2445, line: 131, baseType: !2458, size: 64, offset: 448)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2444, file: !2445, line: 132, baseType: !2458, size: 64, offset: 512)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2444, file: !2445, line: 133, baseType: !2458, size: 64, offset: 576)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2444, file: !2445, line: 135, baseType: !517, size: 8, offset: 640)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2444, file: !2445, line: 137, baseType: !2186, size: 64, offset: 704)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2444, file: !2445, line: 138, baseType: !2186, size: 64, offset: 768)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2444, file: !2445, line: 139, baseType: !2186, size: 64, offset: 832)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2444, file: !2445, line: 140, baseType: !2186, size: 64, offset: 896)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2444, file: !2445, line: 145, baseType: !2474, size: 64, offset: 960)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2476, line: 13, size: 896, elements: !2477)
!2476 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2477 = !{!2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2475, file: !2476, line: 14, baseType: !1859, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2475, file: !2476, line: 15, baseType: !1369, size: 32, offset: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2475, file: !2476, line: 16, baseType: !1369, size: 32, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2475, file: !2476, line: 21, baseType: !553, size: 64, offset: 128)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2475, file: !2476, line: 27, baseType: !528, size: 64, offset: 192)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2475, file: !2476, line: 28, baseType: !528, size: 64, offset: 256)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2475, file: !2476, line: 29, baseType: !553, size: 64, offset: 320)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2475, file: !2476, line: 32, baseType: !574, size: 128, offset: 384)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2475, file: !2476, line: 33, baseType: !1014, size: 32, offset: 512)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2475, file: !2476, line: 37, baseType: !553, size: 64, offset: 576)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2475, file: !2476, line: 44, baseType: !2489, size: 256, offset: 640)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2490, line: 15, size: 256, elements: !2491)
!2490 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2491 = !{!2492, !2493, !2494, !2495, !2496, !2497, !2498}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2489, file: !2490, line: 16, baseType: !1395)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2489, file: !2490, line: 18, baseType: !97, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2489, file: !2490, line: 19, baseType: !97, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2489, file: !2490, line: 20, baseType: !97, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2489, file: !2490, line: 21, baseType: !97, size: 32, offset: 96)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2489, file: !2490, line: 22, baseType: !528, size: 64, offset: 128)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2489, file: !2490, line: 23, baseType: !528, size: 64, offset: 192)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2444, file: !2445, line: 146, baseType: !2140, size: 64, offset: 1024)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2444, file: !2445, line: 147, baseType: !2501, size: 64, offset: 1088)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2445, line: 25, size: 64, elements: !2503)
!2503 = !{!2504, !2505, !2506}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2502, file: !2445, line: 26, baseType: !1369, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2502, file: !2445, line: 27, baseType: !97, size: 32, offset: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2502, file: !2445, line: 28, baseType: !2507, offset: 64)
!2507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1022, elements: !2508)
!2508 = !{!2509}
!2509 = !DISubrange(count: 0)
!2510 = !DIDerivedType(tag: DW_TAG_member, scope: !2444, file: !2445, line: 149, baseType: !2511, size: 128, offset: 1152)
!2511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2444, file: !2445, line: 149, size: 128, elements: !2512)
!2512 = !{!2513, !2514}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2511, file: !2445, line: 150, baseType: !97, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2511, file: !2445, line: 151, baseType: !952, size: 128, align: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1846, file: !1847, line: 926, baseType: !2442, size: 64, offset: 8576)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1846, file: !1847, line: 929, baseType: !2442, size: 64, offset: 8640)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1846, file: !1847, line: 933, baseType: !2186, size: 64, offset: 8704)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1846, file: !1847, line: 943, baseType: !2519, size: 128, offset: 8768)
!2519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 128, elements: !2520)
!2520 = !{!2521}
!2521 = !DISubrange(count: 16)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1846, file: !1847, line: 945, baseType: !2523, size: 64, offset: 8896)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1847, line: 49, flags: DIFlagFwdDecl)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1846, file: !1847, line: 956, baseType: !2526, size: 64, offset: 8960)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1847, line: 45, flags: DIFlagFwdDecl)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1846, file: !1847, line: 959, baseType: !2529, size: 64, offset: 9024)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1847, line: 959, flags: DIFlagFwdDecl)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1846, file: !1847, line: 962, baseType: !2532, size: 64, offset: 9088)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1847, line: 66, flags: DIFlagFwdDecl)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1846, file: !1847, line: 966, baseType: !2535, size: 64, offset: 9152)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2537, line: 31, size: 576, elements: !2538)
!2537 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2538 = !{!2539, !2540, !2543, !2546, !2549, !2550, !2553, !2556, !2557}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2536, file: !2537, line: 32, baseType: !1369, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2536, file: !2537, line: 33, baseType: !2541, size: 64, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2537, line: 9, flags: DIFlagFwdDecl)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2536, file: !2537, line: 34, baseType: !2544, size: 64, offset: 128)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2537, line: 10, flags: DIFlagFwdDecl)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2536, file: !2537, line: 35, baseType: !2547, size: 64, offset: 192)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2537, line: 8, flags: DIFlagFwdDecl)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2536, file: !2537, line: 36, baseType: !2117, size: 64, offset: 256)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2536, file: !2537, line: 37, baseType: !2551, size: 64, offset: 320)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2188, line: 34, flags: DIFlagFwdDecl)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2536, file: !2537, line: 38, baseType: !2554, size: 64, offset: 384)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2537, line: 38, flags: DIFlagFwdDecl)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2536, file: !2537, line: 39, baseType: !2554, size: 64, offset: 448)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2536, file: !2537, line: 40, baseType: !2558, size: 64, offset: 512)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !2560, line: 856, size: 448, elements: !2561)
!2560 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!2561 = !{!2562, !2563, !2564, !2565, !2566}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2559, file: !2560, line: 857, baseType: !1859, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2559, file: !2560, line: 858, baseType: !2174, size: 192, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2559, file: !2560, line: 859, baseType: !2140, size: 64, offset: 256)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2559, file: !2560, line: 860, baseType: !2386, size: 64, offset: 320)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !2559, file: !2560, line: 861, baseType: !2567, size: 64, offset: 384)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !2569, line: 16, flags: DIFlagFwdDecl)
!2569 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1846, file: !1847, line: 969, baseType: !2571, size: 64, offset: 9216)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2573, line: 82, size: 7296, elements: !2574)
!2573 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2576, !2577, !2578, !2579, !2580, !2581, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2610, !2619, !2620, !2622, !2623, !2624, !2627, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2657, !2658, !2665, !2666, !2667, !2668, !2669, !2670}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2572, file: !2573, line: 83, baseType: !1859, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2572, file: !2573, line: 84, baseType: !1369, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2572, file: !2573, line: 85, baseType: !97, size: 32, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2572, file: !2573, line: 86, baseType: !478, size: 128, offset: 128)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2572, file: !2573, line: 88, baseType: !2105, size: 128, offset: 256)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2572, file: !2573, line: 91, baseType: !1845, size: 64, offset: 384)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2572, file: !2573, line: 94, baseType: !2582, size: 192, offset: 448)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2583, line: 30, size: 192, elements: !2584)
!2583 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2584 = !{!2585, !2586}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2582, file: !2583, line: 31, baseType: !478, size: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2582, file: !2583, line: 32, baseType: !2587, size: 64, offset: 128)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2588, line: 25, baseType: !2589)
!2588 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2588, line: 23, size: 64, elements: !2590)
!2590 = !{!2591}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2589, file: !2588, line: 24, baseType: !535, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2572, file: !2573, line: 97, baseType: !1208, size: 64, offset: 640)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2572, file: !2573, line: 100, baseType: !97, size: 32, offset: 704)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2572, file: !2573, line: 106, baseType: !97, size: 32, offset: 736)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2572, file: !2573, line: 107, baseType: !1845, size: 64, offset: 768)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2572, file: !2573, line: 110, baseType: !97, size: 32, offset: 832)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2572, file: !2573, line: 111, baseType: !6, size: 32, offset: 864)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2572, file: !2573, line: 122, baseType: !6, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2572, file: !2573, line: 123, baseType: !6, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2572, file: !2573, line: 128, baseType: !97, size: 32, offset: 928)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2572, file: !2573, line: 129, baseType: !478, size: 128, offset: 960)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2572, file: !2573, line: 132, baseType: !1921, size: 512, offset: 1088)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2572, file: !2573, line: 133, baseType: !1929, size: 64, offset: 1600)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2572, file: !2573, line: 140, baseType: !2605, size: 256, offset: 1664)
!2605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2606, size: 256, elements: !676)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2573, line: 38, size: 128, elements: !2607)
!2607 = !{!2608, !2609}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2606, file: !2573, line: 39, baseType: !503, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2606, file: !2573, line: 40, baseType: !503, size: 64, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2572, file: !2573, line: 146, baseType: !2611, size: 192, offset: 1920)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2573, line: 66, size: 192, elements: !2612)
!2612 = !{!2613}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2611, file: !2573, line: 67, baseType: !2614, size: 192)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2573, line: 47, size: 192, elements: !2615)
!2615 = !{!2616, !2617, !2618}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2614, file: !2573, line: 48, baseType: !555, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2614, file: !2573, line: 49, baseType: !555, size: 64, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2614, file: !2573, line: 50, baseType: !555, size: 64, offset: 128)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2572, file: !2573, line: 150, baseType: !2425, size: 640, offset: 2112)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2572, file: !2573, line: 153, baseType: !2621, size: 256, offset: 2752)
!2621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2095, size: 256, elements: !786)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2572, file: !2573, line: 159, baseType: !2095, size: 64, offset: 3008)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2572, file: !2573, line: 162, baseType: !97, size: 32, offset: 3072)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2572, file: !2573, line: 164, baseType: !2625, size: 64, offset: 3136)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2573, line: 164, flags: DIFlagFwdDecl)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2572, file: !2573, line: 175, baseType: !2628, size: 32, offset: 3200)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !975, line: 805, baseType: !2629)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !975, line: 798, size: 32, elements: !2630)
!2630 = !{!2631, !2632}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2629, file: !975, line: 803, baseType: !974, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2629, file: !975, line: 804, baseType: !592, offset: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2572, file: !2573, line: 176, baseType: !503, size: 64, offset: 3264)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2572, file: !2573, line: 176, baseType: !503, size: 64, offset: 3328)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2572, file: !2573, line: 176, baseType: !503, size: 64, offset: 3392)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2572, file: !2573, line: 176, baseType: !503, size: 64, offset: 3456)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2572, file: !2573, line: 177, baseType: !503, size: 64, offset: 3520)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2572, file: !2573, line: 178, baseType: !503, size: 64, offset: 3584)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2572, file: !2573, line: 179, baseType: !2413, size: 128, offset: 3648)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2572, file: !2573, line: 180, baseType: !528, size: 64, offset: 3776)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2572, file: !2573, line: 180, baseType: !528, size: 64, offset: 3840)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2572, file: !2573, line: 180, baseType: !528, size: 64, offset: 3904)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2572, file: !2573, line: 180, baseType: !528, size: 64, offset: 3968)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2572, file: !2573, line: 181, baseType: !528, size: 64, offset: 4032)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2572, file: !2573, line: 181, baseType: !528, size: 64, offset: 4096)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2572, file: !2573, line: 181, baseType: !528, size: 64, offset: 4160)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2572, file: !2573, line: 181, baseType: !528, size: 64, offset: 4224)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2572, file: !2573, line: 182, baseType: !528, size: 64, offset: 4288)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2572, file: !2573, line: 182, baseType: !528, size: 64, offset: 4352)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2572, file: !2573, line: 182, baseType: !528, size: 64, offset: 4416)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2572, file: !2573, line: 182, baseType: !528, size: 64, offset: 4480)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2572, file: !2573, line: 183, baseType: !528, size: 64, offset: 4544)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2572, file: !2573, line: 183, baseType: !528, size: 64, offset: 4608)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2572, file: !2573, line: 184, baseType: !2655, offset: 4672)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2656, line: 12, elements: !606)
!2656 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2572, file: !2573, line: 192, baseType: !505, size: 64, offset: 4672)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2572, file: !2573, line: 203, baseType: !2659, size: 2048, offset: 4736)
!2659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2660, size: 2048, elements: !2520)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2661, line: 43, size: 128, elements: !2662)
!2661 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2662 = !{!2663, !2664}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2660, file: !2661, line: 44, baseType: !911, size: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2660, file: !2661, line: 45, baseType: !911, size: 64, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2572, file: !2573, line: 220, baseType: !1066, size: 8, offset: 6784)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2572, file: !2573, line: 221, baseType: !486, size: 16, offset: 6800)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2572, file: !2573, line: 222, baseType: !486, size: 16, offset: 6816)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2572, file: !2573, line: 224, baseType: !1612, size: 64, offset: 6848)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2572, file: !2573, line: 227, baseType: !1303, size: 192, offset: 6912)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2572, file: !2573, line: 233, baseType: !1303, size: 192, offset: 7104)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1846, file: !1847, line: 970, baseType: !2672, size: 64, offset: 9280)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2573, line: 20, size: 16576, elements: !2674)
!2674 = !{!2675, !2676, !2677, !2678}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2673, file: !2573, line: 21, baseType: !592)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2673, file: !2573, line: 22, baseType: !1859, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2673, file: !2573, line: 23, baseType: !2105, size: 128, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2673, file: !2573, line: 24, baseType: !2679, size: 16384, offset: 192)
!2679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2680, size: 16384, elements: !869)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2583, line: 49, size: 256, elements: !2681)
!2681 = !{!2682}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2680, file: !2583, line: 50, baseType: !2683, size: 256)
!2683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2583, line: 35, size: 256, elements: !2684)
!2684 = !{!2685, !2692, !2693, !2699}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2683, file: !2583, line: 37, baseType: !2686, size: 64)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2687, line: 19, baseType: !2688)
!2687 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2687, line: 18, baseType: !2690)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{null, !97}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2683, file: !2583, line: 38, baseType: !528, size: 64, offset: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2683, file: !2583, line: 44, baseType: !2694, size: 64, offset: 128)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2687, line: 22, baseType: !2695)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2687, line: 21, baseType: !2697)
!2697 = !DISubroutineType(types: !2698)
!2698 = !{null}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2683, file: !2583, line: 46, baseType: !2587, size: 64, offset: 192)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1846, file: !1847, line: 971, baseType: !2587, size: 64, offset: 9344)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1846, file: !1847, line: 972, baseType: !2587, size: 64, offset: 9408)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1846, file: !1847, line: 974, baseType: !2587, size: 64, offset: 9472)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1846, file: !1847, line: 975, baseType: !2582, size: 192, offset: 9536)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1846, file: !1847, line: 976, baseType: !528, size: 64, offset: 9728)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1846, file: !1847, line: 977, baseType: !909, size: 64, offset: 9792)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1846, file: !1847, line: 978, baseType: !6, size: 32, offset: 9856)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1846, file: !1847, line: 980, baseType: !955, size: 64, offset: 9920)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1846, file: !1847, line: 989, baseType: !2709, size: 128, offset: 9984)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2710, line: 35, size: 128, elements: !2711)
!2710 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2711 = !{!2712, !2713, !2714}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2709, file: !2710, line: 36, baseType: !97, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2709, file: !2710, line: 37, baseType: !1369, size: 32, offset: 32)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2709, file: !2710, line: 38, baseType: !2715, size: 64, offset: 64)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2710, line: 23, flags: DIFlagFwdDecl)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1846, file: !1847, line: 992, baseType: !503, size: 64, offset: 10112)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1846, file: !1847, line: 993, baseType: !503, size: 64, offset: 10176)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1846, file: !1847, line: 996, baseType: !592, offset: 10240)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1846, file: !1847, line: 999, baseType: !1395, offset: 10240)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1846, file: !1847, line: 1001, baseType: !2722, size: 64, offset: 10240)
!2722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1847, line: 636, size: 64, elements: !2723)
!2723 = !{!2724}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2722, file: !1847, line: 637, baseType: !2725, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1846, file: !1847, line: 1005, baseType: !1374, size: 128, offset: 10304)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1846, file: !1847, line: 1007, baseType: !1845, size: 64, offset: 10432)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1846, file: !1847, line: 1009, baseType: !2729, size: 64, offset: 10496)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1847, line: 1009, flags: DIFlagFwdDecl)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1846, file: !1847, line: 1043, baseType: !466, size: 64, offset: 10560)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1846, file: !1847, line: 1046, baseType: !2733, size: 64, offset: 10624)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2735, line: 554, size: 128, elements: !2736)
!2735 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2736 = !{!2737, !3548}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2734, file: !2735, line: 555, baseType: !2738, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !2740, line: 203, size: 832, elements: !2741)
!2740 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!2741 = !{!2742, !2743, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3516, !3521, !3522, !3541, !3542, !3543, !3544, !3545, !3547}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2739, file: !2740, line: 204, baseType: !2738, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2739, file: !2740, line: 205, baseType: !2744, size: 64, offset: 64)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !2746, line: 167, size: 8512, elements: !2747)
!2746 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!2747 = !{!2748, !2749, !2750, !2751, !2755, !2756, !2757, !2816, !2817, !2983, !3483, !3484, !3485, !3486, !3487, !3488, !3491, !3492, !3495, !3496, !3497, !3500}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2745, file: !2746, line: 171, baseType: !97, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2745, file: !2746, line: 172, baseType: !97, size: 32, offset: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2745, file: !2746, line: 173, baseType: !97, size: 32, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2745, file: !2746, line: 176, baseType: !2752, size: 256, offset: 96)
!2752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 256, elements: !2753)
!2753 = !{!2754}
!2754 = !DISubrange(count: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2745, file: !2746, line: 178, baseType: !499, size: 16, offset: 352)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2745, file: !2746, line: 179, baseType: !499, size: 16, offset: 368)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2745, file: !2746, line: 186, baseType: !2758, size: 64, offset: 384)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !2746, line: 149, size: 256, elements: !2760)
!2760 = !{!2761, !2762, !2763, !2812}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2759, file: !2746, line: 150, baseType: !952, size: 128, align: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2759, file: !2746, line: 151, baseType: !97, size: 32, offset: 128)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2759, file: !2746, line: 152, baseType: !2764, size: 64, offset: 192)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !2746, line: 53, size: 6592, elements: !2766)
!2766 = !{!2767, !2768, !2769, !2770, !2773, !2794, !2795, !2796, !2797, !2798, !2806}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !2765, file: !2746, line: 54, baseType: !1452, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !2765, file: !2746, line: 60, baseType: !1452, size: 64, offset: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2765, file: !2746, line: 64, baseType: !528, size: 64, offset: 128)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !2765, file: !2746, line: 65, baseType: !2771, size: 64, offset: 192)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !2746, line: 65, flags: DIFlagFwdDecl)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2765, file: !2746, line: 66, baseType: !2774, size: 128, offset: 256)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2775, line: 105, size: 128, elements: !2776)
!2775 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2774, file: !2775, line: 110, baseType: !528, size: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2774, file: !2775, line: 118, baseType: !2779, size: 64, offset: 64)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2775, line: 95, size: 448, elements: !2781)
!2781 = !{!2782, !2783, !2789, !2790, !2791, !2792, !2793}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2780, file: !2775, line: 96, baseType: !553, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2780, file: !2775, line: 97, baseType: !2784, size: 64, offset: 64)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2775, line: 60, baseType: !2786)
!2786 = !DISubroutineType(types: !2787)
!2787 = !{null, !2788}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2780, file: !2775, line: 98, baseType: !2784, size: 64, offset: 128)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2780, file: !2775, line: 99, baseType: !1066, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2780, file: !2775, line: 100, baseType: !1066, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2780, file: !2775, line: 101, baseType: !952, size: 128, align: 64, offset: 256)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2780, file: !2775, line: 102, baseType: !2788, size: 64, offset: 384)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !2765, file: !2746, line: 68, baseType: !823, size: 5568, offset: 384)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !2765, file: !2746, line: 69, baseType: !832, size: 64, offset: 5952)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2765, file: !2746, line: 70, baseType: !97, size: 32, offset: 6016)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !2765, file: !2746, line: 70, baseType: !97, size: 32, offset: 6048)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2765, file: !2746, line: 71, baseType: !2799, size: 64, offset: 6080)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !2746, line: 48, size: 808, elements: !2801)
!2801 = !{!2802, !2804}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2800, file: !2746, line: 49, baseType: !2803, size: 296)
!2803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 296, elements: !748)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2800, file: !2746, line: 50, baseType: !2805, size: 512, offset: 296)
!2805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 512, elements: !869)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !2765, file: !2746, line: 75, baseType: !2807, size: 448, offset: 6144)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !433, line: 124, size: 448, elements: !2808)
!2808 = !{!2809, !2810, !2811}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2807, file: !433, line: 125, baseType: !550, size: 256)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2807, file: !433, line: 126, baseType: !952, size: 128, align: 64, offset: 256)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2807, file: !433, line: 129, baseType: !588, size: 64, offset: 384)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2759, file: !2746, line: 153, baseType: !2813, offset: 256)
!2813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2764, elements: !2814)
!2814 = !{!2815}
!2815 = !DISubrange(count: -1)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2745, file: !2746, line: 187, baseType: !2765, size: 6592, offset: 448)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2745, file: !2746, line: 189, baseType: !2818, size: 64, offset: 7040)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2820)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !71, line: 1844, size: 960, elements: !2821)
!2821 = !{!2822, !2827, !2914, !2918, !2922, !2926, !2927, !2931, !2935, !2939, !2945, !2949, !2973, !2978, !2979}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2820, file: !71, line: 1845, baseType: !2823, size: 64)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!2826, !2738}
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !2740, line: 515, baseType: !6)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2820, file: !71, line: 1846, baseType: !2828, size: 64, offset: 64)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{!97, !2831, !2913}
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !2740, line: 22, size: 1344, elements: !2833)
!2833 = !{!2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2911, !2912}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2832, file: !2740, line: 23, baseType: !1089, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2832, file: !2740, line: 24, baseType: !97, size: 32, offset: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2832, file: !2740, line: 25, baseType: !1008, size: 64, offset: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2832, file: !2740, line: 26, baseType: !1172, size: 64, offset: 128)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2832, file: !2740, line: 27, baseType: !1303, size: 192, offset: 192)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2832, file: !2740, line: 28, baseType: !466, size: 64, offset: 384)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2832, file: !2740, line: 29, baseType: !466, size: 64, offset: 448)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2832, file: !2740, line: 30, baseType: !97, size: 32, offset: 512)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2832, file: !2740, line: 31, baseType: !1066, size: 8, offset: 544)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2832, file: !2740, line: 33, baseType: !478, size: 128, offset: 576)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2832, file: !2740, line: 35, baseType: !2831, size: 64, offset: 704)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2832, file: !2740, line: 36, baseType: !648, size: 8, offset: 768)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2832, file: !2740, line: 37, baseType: !2764, size: 64, offset: 832)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2832, file: !2740, line: 39, baseType: !6, size: 32, offset: 896)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2832, file: !2740, line: 41, baseType: !592, offset: 928)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2832, file: !2740, line: 42, baseType: !2744, size: 64, offset: 960)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2832, file: !2740, line: 43, baseType: !2851, size: 64, offset: 1024)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !59, line: 165, size: 4672, elements: !2853)
!2853 = !{!2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2904, !2905, !2906, !2907, !2909, !2910}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2852, file: !59, line: 166, baseType: !503, size: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2852, file: !59, line: 167, baseType: !1382, size: 192, align: 64, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !2852, file: !59, line: 168, baseType: !478, size: 128, offset: 256)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2852, file: !59, line: 169, baseType: !528, size: 64, offset: 384)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !2852, file: !59, line: 170, baseType: !528, size: 64, offset: 448)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2852, file: !59, line: 172, baseType: !2122, size: 32, offset: 512)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2852, file: !59, line: 173, baseType: !6, size: 32, offset: 544)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !2852, file: !59, line: 174, baseType: !6, size: 32, offset: 576)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !2852, file: !59, line: 175, baseType: !6, size: 32, offset: 608)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !2852, file: !59, line: 175, baseType: !6, size: 32, offset: 640)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !2852, file: !59, line: 181, baseType: !553, size: 64, offset: 704)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !2852, file: !59, line: 183, baseType: !2866, size: 2688, offset: 768)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !59, line: 107, size: 2688, elements: !2867)
!2867 = !{!2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2897, !2898, !2899, !2900, !2901, !2902, !2903}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !2866, file: !59, line: 108, baseType: !2851, size: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2866, file: !59, line: 110, baseType: !528, size: 64, offset: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !2866, file: !59, line: 111, baseType: !528, size: 64, offset: 128)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !2866, file: !59, line: 113, baseType: !478, size: 128, offset: 192)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !2866, file: !59, line: 114, baseType: !478, size: 128, offset: 320)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !2866, file: !59, line: 115, baseType: !478, size: 128, offset: 448)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !2866, file: !59, line: 116, baseType: !478, size: 128, offset: 576)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2866, file: !59, line: 117, baseType: !592, offset: 704)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !2866, file: !59, line: 119, baseType: !2877, size: 256, offset: 704)
!2877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2878, size: 256, elements: !786)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2879, line: 97, size: 64, elements: !2880)
!2879 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2880 = !{!2881}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2878, file: !2879, line: 98, baseType: !559, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !2866, file: !59, line: 121, baseType: !528, size: 64, offset: 960)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !2866, file: !59, line: 123, baseType: !528, size: 64, offset: 1024)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !2866, file: !59, line: 124, baseType: !528, size: 64, offset: 1088)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !2866, file: !59, line: 125, baseType: !528, size: 64, offset: 1152)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !2866, file: !59, line: 126, baseType: !528, size: 64, offset: 1216)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !2866, file: !59, line: 127, baseType: !528, size: 64, offset: 1280)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !2866, file: !59, line: 135, baseType: !528, size: 64, offset: 1344)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !2866, file: !59, line: 136, baseType: !528, size: 64, offset: 1408)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !2866, file: !59, line: 138, baseType: !2891, size: 128, offset: 1472)
!2891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !2892, line: 76, size: 128, elements: !2893)
!2892 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!2893 = !{!2894, !2895, !2896}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2891, file: !2892, line: 78, baseType: !2878, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2891, file: !2892, line: 80, baseType: !6, size: 32, offset: 64)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2891, file: !2892, line: 81, baseType: !1395, offset: 96)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !2866, file: !59, line: 139, baseType: !97, size: 32, offset: 1600)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !2866, file: !59, line: 140, baseType: !58, size: 32, offset: 1632)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !2866, file: !59, line: 142, baseType: !592, offset: 1664)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !2866, file: !59, line: 143, baseType: !478, size: 128, offset: 1664)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !2866, file: !59, line: 144, baseType: !547, size: 704, offset: 1792)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !2866, file: !59, line: 146, baseType: !528, size: 64, offset: 2496)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !2866, file: !59, line: 148, baseType: !478, size: 128, offset: 2560)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !2852, file: !59, line: 184, baseType: !478, size: 128, offset: 3456)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !2852, file: !59, line: 190, baseType: !2105, size: 128, offset: 3584)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2852, file: !59, line: 192, baseType: !822, size: 64, offset: 3712)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2852, file: !59, line: 193, baseType: !2908, size: 512, offset: 3776)
!2908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 512, elements: !869)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2852, file: !59, line: 194, baseType: !822, size: 64, offset: 4288)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !2852, file: !59, line: 196, baseType: !570, size: 320, offset: 4352)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2832, file: !2740, line: 46, baseType: !97, size: 32, offset: 1088)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2832, file: !2740, line: 48, baseType: !1303, size: 192, offset: 1152)
!2913 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !479, line: 150, baseType: !6)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2820, file: !71, line: 1847, baseType: !2915, size: 64, offset: 128)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2916 = !DISubroutineType(types: !2917)
!2917 = !{null, !2744, !2913}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2820, file: !71, line: 1848, baseType: !2919, size: 64, offset: 192)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!97, !2831, !1452, !1343, !6}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2820, file: !71, line: 1849, baseType: !2923, size: 64, offset: 256)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{!97, !2831, !2913, !6, !528}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2820, file: !71, line: 1850, baseType: !2923, size: 64, offset: 320)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2820, file: !71, line: 1851, baseType: !2928, size: 64, offset: 384)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!2929 = !DISubroutineType(types: !2930)
!2930 = !{!6, !2744, !6}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2820, file: !71, line: 1853, baseType: !2932, size: 64, offset: 448)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{null, !2744}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2820, file: !71, line: 1854, baseType: !2936, size: 64, offset: 512)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{!97, !2744}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2820, file: !71, line: 1855, baseType: !2940, size: 64, offset: 576)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{!97, !2831, !2943}
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !119, line: 51, flags: DIFlagFwdDecl)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2820, file: !71, line: 1857, baseType: !2946, size: 64, offset: 640)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{null, !2831, !528}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2820, file: !71, line: 1858, baseType: !2950, size: 64, offset: 704)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!97, !2744, !1452, !6, !2953, !466}
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !71, line: 354, baseType: !2954)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!97, !2957, !6, !466}
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2959, line: 106, size: 512, elements: !2960)
!2959 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2960 = !{!2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2970, !2971}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2958, file: !2959, line: 107, baseType: !504, size: 64)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2958, file: !2959, line: 108, baseType: !504, size: 64, offset: 64)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2958, file: !2959, line: 109, baseType: !504, size: 64, offset: 128)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2958, file: !2959, line: 110, baseType: !649, size: 8, offset: 192)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2958, file: !2959, line: 111, baseType: !649, size: 8, offset: 200)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2958, file: !2959, line: 112, baseType: !649, size: 8, offset: 208)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2958, file: !2959, line: 113, baseType: !649, size: 8, offset: 216)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2958, file: !2959, line: 114, baseType: !2969, size: 32, offset: 224)
!2969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 32, elements: !786)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2958, file: !2959, line: 115, baseType: !504, size: 64, offset: 256)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2958, file: !2959, line: 116, baseType: !2972, size: 192, offset: 320)
!2972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 192, elements: !472)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2820, file: !71, line: 1860, baseType: !2974, size: 64, offset: 768)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!708, !2744, !2977}
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2820, file: !71, line: 1861, baseType: !609, size: 64, offset: 832)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2820, file: !71, line: 1862, baseType: !2980, size: 64, offset: 896)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2982)
!2982 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !71, line: 41, flags: DIFlagFwdDecl)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2745, file: !2746, line: 190, baseType: !2984, size: 64, offset: 7104)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !71, line: 399, size: 14464, elements: !2986)
!2986 = !{!2987, !3123, !3245, !3246, !3249, !3252, !3256, !3257, !3258, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3317, !3326, !3327, !3328, !3329, !3330, !3360, !3361, !3362, !3363, !3364, !3365, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3438, !3439, !3440, !3441, !3444, !3445, !3478, !3479, !3480, !3481}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2985, file: !71, line: 400, baseType: !2988, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !71, line: 130, size: 2176, elements: !2990)
!2990 = !{!2991, !2992, !2995, !2998, !2999, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3013, !3026, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3121, !3122}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2989, file: !71, line: 131, baseType: !2984, size: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2989, file: !71, line: 132, baseType: !2993, size: 64, offset: 64)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !71, line: 132, flags: DIFlagFwdDecl)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2989, file: !71, line: 133, baseType: !2996, size: 64, offset: 128)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !71, line: 133, flags: DIFlagFwdDecl)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2989, file: !71, line: 135, baseType: !6, size: 32, offset: 192)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2989, file: !71, line: 136, baseType: !3000, size: 32, offset: 224)
!3000 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !71, line: 66, baseType: !496)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2989, file: !71, line: 138, baseType: !97, size: 32, offset: 256)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2989, file: !71, line: 139, baseType: !97, size: 32, offset: 288)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2989, file: !71, line: 142, baseType: !6, size: 32, offset: 320)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2989, file: !71, line: 143, baseType: !1452, size: 64, offset: 384)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2989, file: !71, line: 145, baseType: !2738, size: 64, offset: 448)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2989, file: !71, line: 146, baseType: !2738, size: 64, offset: 512)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2989, file: !71, line: 148, baseType: !478, size: 128, offset: 576)
!3008 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !71, line: 157, baseType: !3009, size: 128, offset: 704)
!3009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !71, line: 157, size: 128, elements: !3010)
!3010 = !{!3011, !3012}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3009, file: !71, line: 158, baseType: !574, size: 128)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !3009, file: !71, line: 159, baseType: !478, size: 128)
!3013 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !71, line: 167, baseType: !3014, size: 192, offset: 832)
!3014 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !71, line: 167, size: 192, elements: !3015)
!3015 = !{!3016, !3017, !3024, !3025}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3014, file: !71, line: 168, baseType: !1382, size: 192, align: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !3014, file: !71, line: 169, baseType: !3018, size: 128)
!3018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !3019, line: 31, size: 128, elements: !3020)
!3019 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!3020 = !{!3021, !3022, !3023}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !3018, file: !3019, line: 32, baseType: !1343, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !3018, file: !3019, line: 33, baseType: !6, size: 32, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !3018, file: !3019, line: 34, baseType: !6, size: 32, offset: 96)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !3014, file: !71, line: 170, baseType: !466, size: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !3014, file: !71, line: 171, baseType: !97, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !71, line: 180, baseType: !3027, size: 256, offset: 1024)
!3027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !71, line: 180, size: 256, elements: !3028)
!3028 = !{!3029, !3064}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !3027, file: !71, line: 184, baseType: !3030, size: 192)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3027, file: !71, line: 181, size: 192, elements: !3031)
!3031 = !{!3032, !3062}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !3030, file: !71, line: 182, baseType: !3033, size: 64)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3035, line: 73, size: 448, elements: !3036)
!3035 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3036 = !{!3037, !3038, !3051, !3056, !3061}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3034, file: !3035, line: 74, baseType: !2984, size: 64)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3034, file: !3035, line: 75, baseType: !3039, size: 64, offset: 64)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3035, line: 99, size: 704, elements: !3041)
!3041 = !{!3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3040, file: !3035, line: 100, baseType: !553, size: 64)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3040, file: !3035, line: 101, baseType: !1369, size: 32, offset: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3040, file: !3035, line: 102, baseType: !1369, size: 32, offset: 96)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3040, file: !3035, line: 105, baseType: !592, offset: 128)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3040, file: !3035, line: 107, baseType: !499, size: 16, offset: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3040, file: !3035, line: 109, baseType: !1361, size: 128, offset: 192)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3040, file: !3035, line: 110, baseType: !3033, size: 64, offset: 320)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3040, file: !3035, line: 111, baseType: !1208, size: 64, offset: 384)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3040, file: !3035, line: 113, baseType: !550, size: 256, offset: 448)
!3051 = !DIDerivedType(tag: DW_TAG_member, scope: !3034, file: !3035, line: 83, baseType: !3052, size: 128, offset: 128)
!3052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3034, file: !3035, line: 83, size: 128, elements: !3053)
!3053 = !{!3054, !3055}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3052, file: !3035, line: 84, baseType: !478, size: 128)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3052, file: !3035, line: 85, baseType: !1572, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, scope: !3034, file: !3035, line: 87, baseType: !3057, size: 128, offset: 256)
!3057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3034, file: !3035, line: 87, size: 128, elements: !3058)
!3058 = !{!3059, !3060}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3057, file: !3035, line: 88, baseType: !574, size: 128)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3057, file: !3035, line: 89, baseType: !952, size: 128, align: 64)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3034, file: !3035, line: 92, baseType: !6, size: 32, offset: 384)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3030, file: !71, line: 183, baseType: !3063, size: 128, offset: 64)
!3063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 128, elements: !676)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3027, file: !71, line: 190, baseType: !3065, size: 256)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3027, file: !71, line: 186, size: 256, elements: !3066)
!3066 = !{!3067, !3068, !3069}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3065, file: !71, line: 187, baseType: !6, size: 32)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3065, file: !71, line: 188, baseType: !478, size: 128, offset: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !3065, file: !71, line: 189, baseType: !3070, size: 64, offset: 192)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !71, line: 62, baseType: !3072)
!3072 = !DISubroutineType(types: !3073)
!3073 = !{null, !2988, !3074}
!3074 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !2740, line: 58, baseType: !648)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2989, file: !71, line: 193, baseType: !2744, size: 64, offset: 1280)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2989, file: !71, line: 194, baseType: !2764, size: 64, offset: 1344)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2989, file: !71, line: 200, baseType: !503, size: 64, offset: 1408)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2989, file: !71, line: 202, baseType: !503, size: 64, offset: 1472)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2989, file: !71, line: 212, baseType: !499, size: 16, offset: 1536)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2989, file: !71, line: 218, baseType: !499, size: 16, offset: 1552)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2989, file: !71, line: 221, baseType: !499, size: 16, offset: 1568)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2989, file: !71, line: 229, baseType: !499, size: 16, offset: 1584)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2989, file: !71, line: 230, baseType: !499, size: 16, offset: 1600)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2989, file: !71, line: 232, baseType: !70, size: 32, offset: 1632)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2989, file: !71, line: 233, baseType: !1859, size: 32, offset: 1664)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2989, file: !71, line: 235, baseType: !6, size: 32, offset: 1696)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2989, file: !71, line: 236, baseType: !528, size: 64, offset: 1728)
!3088 = !DIDerivedType(tag: DW_TAG_member, scope: !2989, file: !71, line: 238, baseType: !3089, size: 256, offset: 1792)
!3089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !71, line: 238, size: 256, elements: !3090)
!3090 = !{!3091, !3120}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !3089, file: !71, line: 239, baseType: !3092, size: 256)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !3093, line: 23, size: 256, elements: !3094)
!3093 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!3094 = !{!3095, !3117, !3119}
!3095 = !DIDerivedType(tag: DW_TAG_member, scope: !3092, file: !3093, line: 24, baseType: !3096, size: 128)
!3096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3092, file: !3093, line: 24, size: 128, elements: !3097)
!3097 = !{!3098, !3110}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3096, file: !3093, line: 25, baseType: !3099, size: 128)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !3100, line: 58, size: 128, elements: !3101)
!3100 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!3101 = !{!3102, !3103, !3108, !3109}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3099, file: !3100, line: 59, baseType: !946, size: 64)
!3103 = !DIDerivedType(tag: DW_TAG_member, scope: !3099, file: !3100, line: 60, baseType: !3104, size: 32, offset: 64)
!3104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3099, file: !3100, line: 60, size: 32, elements: !3105)
!3105 = !{!3106, !3107}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !3104, file: !3100, line: 61, baseType: !6, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !3104, file: !3100, line: 62, baseType: !1369, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3099, file: !3100, line: 65, baseType: !521, size: 16, offset: 96)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3099, file: !3100, line: 65, baseType: !521, size: 16, offset: 112)
!3110 = !DIDerivedType(tag: DW_TAG_member, scope: !3096, file: !3093, line: 26, baseType: !3111, size: 128)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3096, file: !3093, line: 26, size: 128, elements: !3112)
!3112 = !{!3113, !3114, !3115, !3116}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3111, file: !3093, line: 27, baseType: !946, size: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3111, file: !3093, line: 28, baseType: !6, size: 32, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3111, file: !3093, line: 30, baseType: !521, size: 16, offset: 96)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3111, file: !3093, line: 30, baseType: !521, size: 16, offset: 112)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3092, file: !3093, line: 34, baseType: !3118, size: 64, offset: 128)
!3118 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !3093, line: 17, baseType: !710)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3092, file: !3093, line: 35, baseType: !466, size: 64, offset: 192)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !3089, file: !71, line: 240, baseType: !503, size: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2989, file: !71, line: 246, baseType: !3070, size: 64, offset: 2048)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2989, file: !71, line: 247, baseType: !466, size: 64, offset: 2112)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2985, file: !71, line: 401, baseType: !3124, size: 64, offset: 64)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !77, line: 101, size: 4992, elements: !3126)
!3126 = !{!3127, !3239, !3240, !3241, !3242, !3243}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3125, file: !77, line: 103, baseType: !3128, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !77, line: 66, size: 2240, elements: !3130)
!3130 = !{!3131, !3132, !3214, !3215, !3216, !3229, !3230, !3231, !3233, !3234, !3238}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !3129, file: !77, line: 69, baseType: !1572, size: 64)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3129, file: !77, line: 72, baseType: !3133, size: 1408, offset: 64)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !77, line: 29, size: 1408, elements: !3134)
!3134 = !{!3135, !3139, !3143, !3147, !3151, !3155, !3159, !3163, !3168, !3172, !3176, !3182, !3186, !3187, !3191, !3195, !3199, !3203, !3204, !3208, !3209, !3213}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !3133, file: !77, line: 30, baseType: !3136, size: 64)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{!97, !2984, !3128}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !3133, file: !77, line: 31, baseType: !3140, size: 64, offset: 64)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{null, !3124}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3133, file: !77, line: 32, baseType: !3144, size: 64, offset: 128)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{!97, !2996, !6}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3133, file: !77, line: 33, baseType: !3148, size: 64, offset: 192)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{null, !2996, !6}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !3133, file: !77, line: 34, baseType: !3152, size: 64, offset: 256)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{null, !2996}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !3133, file: !77, line: 36, baseType: !3156, size: 64, offset: 320)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!1066, !2984, !2988, !2738}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !3133, file: !77, line: 37, baseType: !3160, size: 64, offset: 384)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{!1066, !2996, !2738, !6}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !3133, file: !77, line: 38, baseType: !3164, size: 64, offset: 448)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!97, !2984, !3167, !2738}
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !3133, file: !77, line: 39, baseType: !3169, size: 64, offset: 512)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{null, !2984, !2988, !76}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !3133, file: !77, line: 40, baseType: !3173, size: 64, offset: 576)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{null, !2984, !2988, !2988}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !3133, file: !77, line: 41, baseType: !3177, size: 64, offset: 640)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{null, !6, !3180}
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 64)
!3181 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !77, line: 26, flags: DIFlagFwdDecl)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !3133, file: !77, line: 42, baseType: !3183, size: 64, offset: 704)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 64)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{null, !2988}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !3133, file: !77, line: 43, baseType: !3183, size: 64, offset: 768)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !3133, file: !77, line: 44, baseType: !3188, size: 64, offset: 832)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{null, !2996, !482, !1066}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !3133, file: !77, line: 45, baseType: !3192, size: 64, offset: 896)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{!2988, !2996}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !3133, file: !77, line: 46, baseType: !3196, size: 64, offset: 960)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 64)
!3197 = !DISubroutineType(types: !3198)
!3198 = !{!1066, !2996}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !3133, file: !77, line: 47, baseType: !3200, size: 64, offset: 1024)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DISubroutineType(types: !3202)
!3202 = !{null, !2988, !503}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !3133, file: !77, line: 48, baseType: !3183, size: 64, offset: 1088)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !3133, file: !77, line: 49, baseType: !3205, size: 64, offset: 1152)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{!2988, !2984, !2988}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !3133, file: !77, line: 50, baseType: !3205, size: 64, offset: 1216)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !3133, file: !77, line: 51, baseType: !3210, size: 64, offset: 1280)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{null, !3033}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !3133, file: !77, line: 52, baseType: !3210, size: 64, offset: 1344)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !3129, file: !77, line: 74, baseType: !909, size: 64, offset: 1472)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !3129, file: !77, line: 75, baseType: !909, size: 64, offset: 1536)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !3129, file: !77, line: 76, baseType: !3217, size: 64, offset: 1600)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 64)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !77, line: 57, size: 256, elements: !3219)
!3219 = !{!3220, !3221, !3225}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3218, file: !77, line: 58, baseType: !900, size: 128)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3218, file: !77, line: 59, baseType: !3222, size: 64, offset: 128)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{!895, !3124, !708}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3218, file: !77, line: 60, baseType: !3226, size: 64, offset: 192)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{!895, !3124, !689, !909}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !3129, file: !77, line: 77, baseType: !689, size: 64, offset: 1664)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !3129, file: !77, line: 78, baseType: !689, size: 64, offset: 1728)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !3129, file: !77, line: 79, baseType: !3232, size: 32, offset: 1792)
!3232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !3129, file: !77, line: 80, baseType: !609, size: 64, offset: 1856)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !3129, file: !77, line: 87, baseType: !3235, size: 176, offset: 1920)
!3235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 176, elements: !3236)
!3236 = !{!3237}
!3237 = !DISubrange(count: 22)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3129, file: !77, line: 88, baseType: !478, size: 128, offset: 2112)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !3125, file: !77, line: 104, baseType: !466, size: 64, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3125, file: !77, line: 105, baseType: !826, size: 512, offset: 128)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3125, file: !77, line: 106, baseType: !1303, size: 192, offset: 640)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3125, file: !77, line: 107, baseType: !6, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3125, file: !77, line: 108, baseType: !3244, size: 4096, offset: 896)
!3244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1208, size: 4096, elements: !869)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2985, file: !71, line: 403, baseType: !2774, size: 128, offset: 128)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2985, file: !71, line: 405, baseType: !3247, size: 64, offset: 256)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !71, line: 43, flags: DIFlagFwdDecl)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2985, file: !71, line: 406, baseType: !3250, size: 64, offset: 320)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !71, line: 42, flags: DIFlagFwdDecl)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2985, file: !71, line: 408, baseType: !3253, size: 64, offset: 384)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3255)
!3255 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !71, line: 408, flags: DIFlagFwdDecl)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2985, file: !71, line: 411, baseType: !2993, size: 64, offset: 448)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2985, file: !71, line: 413, baseType: !6, size: 32, offset: 512)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2985, file: !71, line: 416, baseType: !3259, size: 64, offset: 576)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2985, file: !71, line: 417, baseType: !6, size: 32, offset: 640)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2985, file: !71, line: 419, baseType: !2851, size: 64, offset: 704)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2985, file: !71, line: 425, baseType: !466, size: 64, offset: 768)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2985, file: !71, line: 430, baseType: !528, size: 64, offset: 832)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2985, file: !71, line: 436, baseType: !1369, size: 32, offset: 896)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2985, file: !71, line: 442, baseType: !97, size: 32, offset: 928)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2985, file: !71, line: 447, baseType: !539, size: 32, offset: 960)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2985, file: !71, line: 449, baseType: !592, offset: 992)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2985, file: !71, line: 454, baseType: !826, size: 512, offset: 1024)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2985, file: !71, line: 459, baseType: !832, size: 64, offset: 1536)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2985, file: !71, line: 462, baseType: !3271, size: 128, offset: 1600)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !2746, line: 159, size: 128, elements: !3272)
!3272 = !{!3273, !3302, !3303, !3304, !3305}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3271, file: !2746, line: 160, baseType: !3274, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3276)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !71, line: 1664, size: 320, elements: !3277)
!3277 = !{!3278, !3292, !3293, !3296, !3301}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3276, file: !71, line: 1665, baseType: !3279, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !71, line: 1660, baseType: !3281)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!3074, !3283}
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !71, line: 1651, size: 320, elements: !3285)
!3285 = !{!3286, !3287, !3288, !3289, !3290, !3291}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3284, file: !71, line: 1652, baseType: !466, size: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3284, file: !71, line: 1653, baseType: !466, size: 64, offset: 64)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3284, file: !71, line: 1654, baseType: !1452, size: 64, offset: 128)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3284, file: !71, line: 1655, baseType: !6, size: 32, offset: 192)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3284, file: !71, line: 1656, baseType: !499, size: 16, offset: 224)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3284, file: !71, line: 1657, baseType: !689, size: 64, offset: 256)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3276, file: !71, line: 1666, baseType: !3279, size: 64, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3276, file: !71, line: 1667, baseType: !3294, size: 64, offset: 128)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !71, line: 1661, baseType: !3184)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3276, file: !71, line: 1668, baseType: !3297, size: 64, offset: 192)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !71, line: 1662, baseType: !3299)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{null, !2988, !6}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3276, file: !71, line: 1669, baseType: !689, size: 64, offset: 256)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3271, file: !2746, line: 161, baseType: !517, size: 8, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3271, file: !2746, line: 162, baseType: !517, size: 8, offset: 72)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3271, file: !2746, line: 163, baseType: !517, size: 8, offset: 80)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3271, file: !2746, line: 164, baseType: !517, size: 8, offset: 88)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2985, file: !71, line: 466, baseType: !822, size: 64, offset: 1728)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2985, file: !71, line: 467, baseType: !83, size: 32, offset: 1792)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2985, file: !71, line: 468, baseType: !6, size: 32, offset: 1824)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2985, file: !71, line: 474, baseType: !528, size: 64, offset: 1856)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2985, file: !71, line: 476, baseType: !6, size: 32, offset: 1920)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2985, file: !71, line: 477, baseType: !6, size: 32, offset: 1952)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2985, file: !71, line: 484, baseType: !6, size: 32, offset: 1984)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2985, file: !71, line: 485, baseType: !97, size: 32, offset: 2016)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2985, file: !71, line: 487, baseType: !3315, size: 64, offset: 2048)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !71, line: 44, flags: DIFlagFwdDecl)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2985, file: !71, line: 488, baseType: !3318, size: 5120, offset: 2112)
!3318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3319, size: 5120, elements: !2520)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !2740, line: 540, size: 320, elements: !3320)
!3320 = !{!3321, !3322, !3323, !3324, !3325}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3319, file: !2740, line: 541, baseType: !503, size: 64)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3319, file: !2740, line: 542, baseType: !503, size: 64, offset: 64)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3319, file: !2740, line: 543, baseType: !503, size: 64, offset: 128)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3319, file: !2740, line: 544, baseType: !494, size: 32, offset: 192)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3319, file: !2740, line: 545, baseType: !503, size: 64, offset: 256)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2985, file: !71, line: 490, baseType: !570, size: 320, offset: 7232)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2985, file: !71, line: 491, baseType: !550, size: 256, offset: 7552)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2985, file: !71, line: 493, baseType: !1369, size: 32, offset: 7808)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2985, file: !71, line: 495, baseType: !478, size: 128, offset: 7872)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2985, file: !71, line: 502, baseType: !3331, size: 896, offset: 8000)
!3331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !71, line: 321, size: 896, elements: !3332)
!3332 = !{!3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3331, file: !71, line: 322, baseType: !528, size: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3331, file: !71, line: 323, baseType: !528, size: 64, offset: 64)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3331, file: !71, line: 324, baseType: !528, size: 64, offset: 128)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3331, file: !71, line: 326, baseType: !6, size: 32, offset: 192)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3331, file: !71, line: 327, baseType: !6, size: 32, offset: 224)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3331, file: !71, line: 328, baseType: !6, size: 32, offset: 256)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3331, file: !71, line: 329, baseType: !6, size: 32, offset: 288)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3331, file: !71, line: 330, baseType: !6, size: 32, offset: 320)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3331, file: !71, line: 331, baseType: !6, size: 32, offset: 352)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3331, file: !71, line: 332, baseType: !6, size: 32, offset: 384)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3331, file: !71, line: 333, baseType: !6, size: 32, offset: 416)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3331, file: !71, line: 334, baseType: !6, size: 32, offset: 448)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3331, file: !71, line: 335, baseType: !6, size: 32, offset: 480)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3331, file: !71, line: 336, baseType: !6, size: 32, offset: 512)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3331, file: !71, line: 337, baseType: !6, size: 32, offset: 544)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3331, file: !71, line: 338, baseType: !6, size: 32, offset: 576)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3331, file: !71, line: 339, baseType: !6, size: 32, offset: 608)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3331, file: !71, line: 340, baseType: !6, size: 32, offset: 640)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3331, file: !71, line: 341, baseType: !6, size: 32, offset: 672)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3331, file: !71, line: 342, baseType: !6, size: 32, offset: 704)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3331, file: !71, line: 344, baseType: !499, size: 16, offset: 736)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3331, file: !71, line: 345, baseType: !499, size: 16, offset: 752)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3331, file: !71, line: 346, baseType: !499, size: 16, offset: 768)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3331, file: !71, line: 348, baseType: !517, size: 8, offset: 784)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3331, file: !71, line: 349, baseType: !517, size: 8, offset: 792)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3331, file: !71, line: 350, baseType: !517, size: 8, offset: 800)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3331, file: !71, line: 351, baseType: !90, size: 32, offset: 832)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2985, file: !71, line: 504, baseType: !6, size: 32, offset: 8896)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2985, file: !71, line: 534, baseType: !6, size: 32, offset: 8928)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2985, file: !71, line: 535, baseType: !6, size: 32, offset: 8960)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2985, file: !71, line: 536, baseType: !97, size: 32, offset: 8992)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2985, file: !71, line: 537, baseType: !1303, size: 192, offset: 9024)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2985, file: !71, line: 544, baseType: !3366, size: 64, offset: 9216)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !71, line: 40, flags: DIFlagFwdDecl)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2985, file: !71, line: 546, baseType: !478, size: 128, offset: 9280)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2985, file: !71, line: 547, baseType: !592, offset: 9408)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2985, file: !71, line: 548, baseType: !547, size: 704, offset: 9408)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2985, file: !71, line: 550, baseType: !1303, size: 192, offset: 10112)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2985, file: !71, line: 551, baseType: !1303, size: 192, offset: 10304)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2985, file: !71, line: 557, baseType: !478, size: 128, offset: 10496)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2985, file: !71, line: 558, baseType: !592, offset: 10624)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2985, file: !71, line: 560, baseType: !97, size: 32, offset: 10624)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2985, file: !71, line: 563, baseType: !3377, size: 256, offset: 10688)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3378, line: 18, size: 256, elements: !3379)
!3378 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3379 = !{!3380, !3381, !3382, !3383}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3377, file: !3378, line: 19, baseType: !822, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3377, file: !3378, line: 20, baseType: !97, size: 32, offset: 64)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3377, file: !3378, line: 21, baseType: !2984, size: 64, offset: 128)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3377, file: !3378, line: 22, baseType: !3384, size: 64, offset: 192)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3386)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3378, line: 10, size: 256, elements: !3387)
!3387 = !{!3388, !3429, !3433, !3437}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3386, file: !3378, line: 11, baseType: !3389, size: 64)
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{!97, !3392}
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3394, line: 22, size: 1280, elements: !3395)
!3394 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3395 = !{!3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3393, file: !3394, line: 23, baseType: !2064, size: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3393, file: !3394, line: 24, baseType: !496, size: 32, offset: 32)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3393, file: !3394, line: 25, baseType: !496, size: 32, offset: 64)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3393, file: !3394, line: 28, baseType: !496, size: 32, offset: 96)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3393, file: !3394, line: 29, baseType: !504, size: 64, offset: 128)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3393, file: !3394, line: 30, baseType: !504, size: 64, offset: 192)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3393, file: !3394, line: 31, baseType: !496, size: 32, offset: 256)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3393, file: !3394, line: 32, baseType: !496, size: 32, offset: 288)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3393, file: !3394, line: 33, baseType: !496, size: 32, offset: 320)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3393, file: !3394, line: 34, baseType: !496, size: 32, offset: 352)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3393, file: !3394, line: 35, baseType: !504, size: 64, offset: 384)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3393, file: !3394, line: 38, baseType: !496, size: 32, offset: 448)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3393, file: !3394, line: 40, baseType: !496, size: 32, offset: 480)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3393, file: !3394, line: 41, baseType: !496, size: 32, offset: 512)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3393, file: !3394, line: 42, baseType: !496, size: 32, offset: 544)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3393, file: !3394, line: 43, baseType: !504, size: 64, offset: 576)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3393, file: !3394, line: 44, baseType: !504, size: 64, offset: 640)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3393, file: !3394, line: 46, baseType: !496, size: 32, offset: 704)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3393, file: !3394, line: 47, baseType: !496, size: 32, offset: 736)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3393, file: !3394, line: 48, baseType: !504, size: 64, offset: 768)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3393, file: !3394, line: 49, baseType: !496, size: 32, offset: 832)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3393, file: !3394, line: 51, baseType: !496, size: 32, offset: 864)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3393, file: !3394, line: 52, baseType: !496, size: 32, offset: 896)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3393, file: !3394, line: 53, baseType: !496, size: 32, offset: 928)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3393, file: !3394, line: 54, baseType: !496, size: 32, offset: 960)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3393, file: !3394, line: 55, baseType: !496, size: 32, offset: 992)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3393, file: !3394, line: 56, baseType: !496, size: 32, offset: 1024)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3393, file: !3394, line: 57, baseType: !496, size: 32, offset: 1056)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3393, file: !3394, line: 58, baseType: !2064, size: 32, offset: 1088)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3393, file: !3394, line: 59, baseType: !2064, size: 32, offset: 1120)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3393, file: !3394, line: 60, baseType: !504, size: 64, offset: 1152)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3393, file: !3394, line: 61, baseType: !496, size: 32, offset: 1216)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3393, file: !3394, line: 63, baseType: !496, size: 32, offset: 1248)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3386, file: !3378, line: 12, baseType: !3430, size: 64, offset: 64)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{!97, !2988, !3392, !2913}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3386, file: !3378, line: 14, baseType: !3434, size: 64, offset: 128)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{!97, !2988, !3392}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3386, file: !3378, line: 15, baseType: !3183, size: 64, offset: 192)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2985, file: !71, line: 570, baseType: !952, size: 128, align: 64, offset: 10944)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2985, file: !71, line: 571, baseType: !2105, size: 128, offset: 11072)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2985, file: !71, line: 576, baseType: !1303, size: 192, offset: 11200)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2985, file: !71, line: 578, baseType: !3442, size: 64, offset: 11392)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !71, line: 578, flags: DIFlagFwdDecl)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2985, file: !71, line: 579, baseType: !478, size: 128, offset: 11456)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2985, file: !71, line: 580, baseType: !3446, size: 2368, offset: 11584)
!3446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2735, line: 682, size: 2368, elements: !3447)
!3447 = !{!3448, !3449, !3450, !3471, !3472, !3473, !3474, !3475, !3476, !3477}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3446, file: !2735, line: 683, baseType: !1572, size: 64)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3446, file: !2735, line: 684, baseType: !6, size: 32, offset: 64)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3446, file: !2735, line: 686, baseType: !3451, size: 448, offset: 128)
!3451 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3452, line: 26, baseType: !3453)
!3452 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3452, line: 16, size: 448, elements: !3454)
!3454 = !{!3455, !3456, !3457, !3458, !3459, !3460, !3465, !3470}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3453, file: !3452, line: 17, baseType: !592)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3453, file: !3452, line: 18, baseType: !97, size: 32)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3453, file: !3452, line: 19, baseType: !97, size: 32, offset: 32)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3453, file: !3452, line: 20, baseType: !1443, size: 64, offset: 64)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3453, file: !3452, line: 22, baseType: !466, size: 64, offset: 128)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3453, file: !3452, line: 23, baseType: !3461, size: 64, offset: 192)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3452, line: 13, baseType: !3463)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!466, !539, !466}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3453, file: !3452, line: 24, baseType: !3466, size: 64, offset: 256)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3452, line: 14, baseType: !3468)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{null, !466, !466}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3453, file: !3452, line: 25, baseType: !2105, size: 128, offset: 320)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3446, file: !2735, line: 687, baseType: !3451, size: 448, offset: 576)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3446, file: !2735, line: 689, baseType: !3451, size: 448, offset: 1024)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3446, file: !2735, line: 690, baseType: !3451, size: 448, offset: 1472)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3446, file: !2735, line: 697, baseType: !592, offset: 1920)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3446, file: !2735, line: 698, baseType: !2734, size: 128, offset: 1920)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3446, file: !2735, line: 699, baseType: !550, size: 256, offset: 2048)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3446, file: !2735, line: 700, baseType: !588, size: 64, offset: 2304)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2985, file: !71, line: 582, baseType: !969, size: 64, offset: 13952)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2985, file: !71, line: 589, baseType: !1066, size: 8, offset: 14016)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2985, file: !71, line: 591, baseType: !909, size: 64, offset: 14080)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2985, file: !71, line: 594, baseType: !3482, size: 320, offset: 14144)
!3482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 320, elements: !2158)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2745, file: !2746, line: 191, baseType: !466, size: 64, offset: 7168)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2745, file: !2746, line: 193, baseType: !97, size: 32, offset: 7232)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2745, file: !2746, line: 194, baseType: !528, size: 64, offset: 7296)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2745, file: !2746, line: 196, baseType: !1389, size: 256, offset: 7360)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2745, file: !2746, line: 197, baseType: !832, size: 64, offset: 7616)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2745, file: !2746, line: 199, baseType: !3489, size: 64, offset: 7680)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !2746, line: 199, flags: DIFlagFwdDecl)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2745, file: !2746, line: 200, baseType: !1369, size: 32, offset: 7744)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2745, file: !2746, line: 201, baseType: !3493, size: 64, offset: 7808)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !2746, line: 156, flags: DIFlagFwdDecl)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2745, file: !2746, line: 203, baseType: !826, size: 512, offset: 7872)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2745, file: !2746, line: 208, baseType: !97, size: 32, offset: 8384)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2745, file: !2746, line: 209, baseType: !3498, size: 64, offset: 8448)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 64)
!3499 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !2746, line: 157, flags: DIFlagFwdDecl)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2745, file: !2746, line: 210, baseType: !3501, offset: 8512)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1213, line: 192, elements: !606)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2739, file: !2740, line: 206, baseType: !6, size: 32, offset: 128)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2739, file: !2740, line: 210, baseType: !499, size: 16, offset: 160)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2739, file: !2740, line: 211, baseType: !499, size: 16, offset: 176)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2739, file: !2740, line: 212, baseType: !499, size: 16, offset: 192)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2739, file: !2740, line: 213, baseType: !3074, size: 8, offset: 208)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2739, file: !2740, line: 214, baseType: !648, size: 8, offset: 216)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2739, file: !2740, line: 215, baseType: !1369, size: 32, offset: 224)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2739, file: !2740, line: 217, baseType: !3510, size: 192, offset: 256)
!3510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !3019, line: 37, size: 192, elements: !3511)
!3511 = !{!3512, !3513, !3514, !3515}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3510, file: !3019, line: 38, baseType: !1452, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3510, file: !3019, line: 40, baseType: !6, size: 32, offset: 64)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3510, file: !3019, line: 42, baseType: !6, size: 32, offset: 96)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3510, file: !3019, line: 44, baseType: !6, size: 32, offset: 128)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2739, file: !2740, line: 219, baseType: !3517, size: 64, offset: 448)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !2740, line: 19, baseType: !3519)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{null, !2738}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2739, file: !2740, line: 221, baseType: !466, size: 64, offset: 512)
!3522 = !DIDerivedType(tag: DW_TAG_member, scope: !2739, file: !2740, line: 240, baseType: !3523, size: 64, offset: 576)
!3523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2739, file: !2740, line: 240, size: 64, elements: !3524)
!3524 = !{!3525}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3523, file: !2740, line: 242, baseType: !3526, size: 64)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2735, line: 313, size: 832, elements: !3528)
!3528 = !{!3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3539}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3527, file: !2735, line: 314, baseType: !2738, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3527, file: !2735, line: 316, baseType: !3510, size: 192, offset: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3527, file: !2735, line: 318, baseType: !499, size: 16, offset: 256)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3527, file: !2735, line: 319, baseType: !499, size: 16, offset: 272)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3527, file: !2735, line: 320, baseType: !499, size: 16, offset: 288)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3527, file: !2735, line: 321, baseType: !499, size: 16, offset: 304)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3527, file: !2735, line: 323, baseType: !3510, size: 192, offset: 320)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3527, file: !2735, line: 325, baseType: !550, size: 256, offset: 512)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3527, file: !2735, line: 327, baseType: !3538, size: 64, offset: 768)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3527, file: !2735, line: 328, baseType: !3540, offset: 832)
!3540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3018, elements: !2814)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2739, file: !2740, line: 246, baseType: !499, size: 16, offset: 640)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2739, file: !2740, line: 252, baseType: !499, size: 16, offset: 656)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2739, file: !2740, line: 254, baseType: !1369, size: 32, offset: 672)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2739, file: !2740, line: 256, baseType: !3538, size: 64, offset: 704)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2739, file: !2740, line: 258, baseType: !3546, size: 64, offset: 768)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2739, file: !2740, line: 265, baseType: !3540, offset: 832)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2734, file: !2735, line: 556, baseType: !2738, size: 64, offset: 64)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1846, file: !1847, line: 1050, baseType: !3550, size: 64, offset: 10688)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !71, line: 1236, size: 320, elements: !3552)
!3552 = !{!3553, !3554, !3555, !3556, !3557}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3551, file: !71, line: 1237, baseType: !478, size: 128)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3551, file: !71, line: 1238, baseType: !478, size: 128, offset: 128)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3551, file: !71, line: 1239, baseType: !499, size: 16, offset: 256)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3551, file: !71, line: 1240, baseType: !1066, size: 8, offset: 272)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3551, file: !71, line: 1241, baseType: !1066, size: 8, offset: 280)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1846, file: !1847, line: 1054, baseType: !3559, size: 64, offset: 10752)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3560 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1847, line: 55, flags: DIFlagFwdDecl)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1846, file: !1847, line: 1056, baseType: !2851, size: 64, offset: 10816)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1846, file: !1847, line: 1058, baseType: !3039, size: 64, offset: 10880)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1846, file: !1847, line: 1061, baseType: !3564, size: 64, offset: 10944)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 64)
!3565 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1847, line: 43, flags: DIFlagFwdDecl)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1846, file: !1847, line: 1064, baseType: !528, size: 64, offset: 11008)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1846, file: !1847, line: 1065, baseType: !3568, size: 64, offset: 11072)
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2583, line: 14, baseType: !3570)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2583, line: 12, size: 384, elements: !3571)
!3571 = !{!3572}
!3572 = !DIDerivedType(tag: DW_TAG_member, scope: !3570, file: !2583, line: 13, baseType: !3573, size: 384)
!3573 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3570, file: !2583, line: 13, size: 384, elements: !3574)
!3574 = !{!3575, !3576, !3577, !3578}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3573, file: !2583, line: 13, baseType: !97, size: 32)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3573, file: !2583, line: 13, baseType: !97, size: 32, offset: 32)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3573, file: !2583, line: 13, baseType: !97, size: 32, offset: 64)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3573, file: !2583, line: 13, baseType: !3579, size: 256, offset: 128)
!3579 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3580, line: 32, size: 256, elements: !3581)
!3580 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3581 = !{!3582, !3587, !3600, !3606, !3615, !3635, !3640}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3579, file: !3580, line: 37, baseType: !3583, size: 64)
!3583 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3579, file: !3580, line: 34, size: 64, elements: !3584)
!3584 = !{!3585, !3586}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3583, file: !3580, line: 35, baseType: !2084, size: 32)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3583, file: !3580, line: 36, baseType: !1020, size: 32, offset: 32)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3579, file: !3580, line: 45, baseType: !3588, size: 192)
!3588 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3579, file: !3580, line: 40, size: 192, elements: !3589)
!3589 = !{!3590, !3592, !3593, !3599}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3588, file: !3580, line: 41, baseType: !3591, size: 32)
!3591 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !897, line: 95, baseType: !97)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3588, file: !3580, line: 42, baseType: !97, size: 32, offset: 32)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3588, file: !3580, line: 43, baseType: !3594, size: 64, offset: 64)
!3594 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3580, line: 11, baseType: !3595)
!3595 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3580, line: 8, size: 64, elements: !3596)
!3596 = !{!3597, !3598}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3595, file: !3580, line: 9, baseType: !97, size: 32)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3595, file: !3580, line: 10, baseType: !466, size: 64)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3588, file: !3580, line: 44, baseType: !97, size: 32, offset: 128)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3579, file: !3580, line: 52, baseType: !3601, size: 128)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3579, file: !3580, line: 48, size: 128, elements: !3602)
!3602 = !{!3603, !3604, !3605}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3601, file: !3580, line: 49, baseType: !2084, size: 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3601, file: !3580, line: 50, baseType: !1020, size: 32, offset: 32)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3601, file: !3580, line: 51, baseType: !3594, size: 64, offset: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3579, file: !3580, line: 61, baseType: !3607, size: 256)
!3607 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3579, file: !3580, line: 55, size: 256, elements: !3608)
!3608 = !{!3609, !3610, !3611, !3612, !3614}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3607, file: !3580, line: 56, baseType: !2084, size: 32)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3607, file: !3580, line: 57, baseType: !1020, size: 32, offset: 32)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3607, file: !3580, line: 58, baseType: !97, size: 32, offset: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3607, file: !3580, line: 59, baseType: !3613, size: 64, offset: 128)
!3613 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !897, line: 94, baseType: !898)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3607, file: !3580, line: 60, baseType: !3613, size: 64, offset: 192)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3579, file: !3580, line: 95, baseType: !3616, size: 256)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3579, file: !3580, line: 64, size: 256, elements: !3617)
!3617 = !{!3618, !3619}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3616, file: !3580, line: 65, baseType: !466, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_member, scope: !3616, file: !3580, line: 77, baseType: !3620, size: 192, offset: 64)
!3620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3616, file: !3580, line: 77, size: 192, elements: !3621)
!3621 = !{!3622, !3623, !3630}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3620, file: !3580, line: 82, baseType: !486, size: 16)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3620, file: !3580, line: 88, baseType: !3624, size: 192)
!3624 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3620, file: !3580, line: 84, size: 192, elements: !3625)
!3625 = !{!3626, !3628, !3629}
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3624, file: !3580, line: 85, baseType: !3627, size: 64)
!3627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 64, elements: !1959)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3624, file: !3580, line: 86, baseType: !466, size: 64, offset: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3624, file: !3580, line: 87, baseType: !466, size: 64, offset: 128)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3620, file: !3580, line: 93, baseType: !3631, size: 96)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3620, file: !3580, line: 90, size: 96, elements: !3632)
!3632 = !{!3633, !3634}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3631, file: !3580, line: 91, baseType: !3627, size: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3631, file: !3580, line: 92, baseType: !496, size: 32, offset: 64)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3579, file: !3580, line: 101, baseType: !3636, size: 128)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3579, file: !3580, line: 98, size: 128, elements: !3637)
!3637 = !{!3638, !3639}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3636, file: !3580, line: 99, baseType: !434, size: 64)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3636, file: !3580, line: 100, baseType: !97, size: 32, offset: 64)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3579, file: !3580, line: 108, baseType: !3641, size: 128)
!3641 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3579, file: !3580, line: 104, size: 128, elements: !3642)
!3642 = !{!3643, !3644, !3645}
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3641, file: !3580, line: 105, baseType: !466, size: 64)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3641, file: !3580, line: 106, baseType: !97, size: 32, offset: 64)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3641, file: !3580, line: 107, baseType: !6, size: 32, offset: 96)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1846, file: !1847, line: 1067, baseType: !2655, offset: 11136)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1846, file: !1847, line: 1099, baseType: !3648, size: 64, offset: 11136)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 64)
!3649 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1847, line: 56, flags: DIFlagFwdDecl)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1846, file: !1847, line: 1103, baseType: !478, size: 128, offset: 11200)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1846, file: !1847, line: 1104, baseType: !3652, size: 64, offset: 11328)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 64)
!3653 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1847, line: 46, flags: DIFlagFwdDecl)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1846, file: !1847, line: 1105, baseType: !1303, size: 192, offset: 11392)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1846, file: !1847, line: 1106, baseType: !6, size: 32, offset: 11584)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1846, file: !1847, line: 1109, baseType: !3657, size: 128, offset: 11648)
!3657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3658, size: 128, elements: !676)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !96, line: 793, size: 1920, elements: !3660)
!3660 = !{!3661, !4161, !4162, !4163, !4164, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "pmu", scope: !3659, file: !96, line: 794, baseType: !3662, size: 64)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pmu", file: !96, line: 278, size: 2368, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !4079, !4080, !4081, !4082, !4083, !4087, !4088, !4092, !4096, !4097, !4101, !4105, !4106, !4107, !4108, !4112, !4116, !4117, !4118, !4122, !4123, !4127, !4131, !4132, !4150, !4154, !4155, !4156, !4157}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3663, file: !96, line: 279, baseType: !478, size: 128)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !3663, file: !96, line: 281, baseType: !609, size: 64, offset: 128)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3663, file: !96, line: 282, baseType: !822, size: 64, offset: 192)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "attr_groups", scope: !3663, file: !96, line: 283, baseType: !915, size: 64, offset: 256)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "attr_update", scope: !3663, file: !96, line: 284, baseType: !915, size: 64, offset: 320)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3663, file: !96, line: 285, baseType: !689, size: 64, offset: 384)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3663, file: !96, line: 286, baseType: !97, size: 32, offset: 448)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !3663, file: !96, line: 291, baseType: !97, size: 32, offset: 480)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_disable_count", scope: !3663, file: !96, line: 293, baseType: !612, size: 64, offset: 512)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_cpu_context", scope: !3663, file: !96, line: 294, baseType: !3675, size: 64, offset: 576)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_cpu_context", file: !96, line: 859, size: 2944, elements: !3677)
!3677 = !{!3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !4077}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !3676, file: !96, line: 860, baseType: !3659, size: 1920)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "task_ctx", scope: !3676, file: !96, line: 861, baseType: !3658, size: 64, offset: 1920)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "active_oncpu", scope: !3676, file: !96, line: 862, baseType: !97, size: 32, offset: 1984)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "exclusive", scope: !3676, file: !96, line: 863, baseType: !97, size: 32, offset: 2016)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer_lock", scope: !3676, file: !96, line: 865, baseType: !1395, offset: 2048)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer", scope: !3676, file: !96, line: 866, baseType: !1921, size: 512, offset: 2048)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer_interval", scope: !3676, file: !96, line: 867, baseType: !1929, size: 64, offset: 2560)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer_active", scope: !3676, file: !96, line: 868, baseType: !6, size: 32, offset: 2624)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "sched_cb_usage", scope: !3676, file: !96, line: 875, baseType: !97, size: 32, offset: 2656)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3676, file: !96, line: 877, baseType: !97, size: 32, offset: 2688)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "heap_size", scope: !3676, file: !96, line: 882, baseType: !97, size: 32, offset: 2720)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3676, file: !96, line: 883, baseType: !3690, size: 64, offset: 2752)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !96, line: 625, size: 7424, elements: !3693)
!3693 = !{!3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3721, !3722, !3723, !3724, !3725, !3726, !3804, !3805, !3806, !3807, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3904, !3905, !3906, !3907, !3908, !3925, !3926, !3927, !3928, !3946, !3947, !3953, !3959, !3960, !3961, !3965, !3966, !3967, !3968, !3972, !4075, !4076}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "event_entry", scope: !3692, file: !96, line: 632, baseType: !478, size: 128)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "sibling_list", scope: !3692, file: !96, line: 638, baseType: !478, size: 128, offset: 128)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "active_list", scope: !3692, file: !96, line: 639, baseType: !478, size: 128, offset: 256)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !3692, file: !96, line: 643, baseType: !1382, size: 192, align: 64, offset: 384)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "group_index", scope: !3692, file: !96, line: 644, baseType: !503, size: 64, offset: 576)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_entry", scope: !3692, file: !96, line: 650, baseType: !478, size: 128, offset: 640)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "hlist_entry", scope: !3692, file: !96, line: 652, baseType: !574, size: 128, offset: 768)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "active_entry", scope: !3692, file: !96, line: 653, baseType: !478, size: 128, offset: 896)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "nr_siblings", scope: !3692, file: !96, line: 654, baseType: !97, size: 32, offset: 1024)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "event_caps", scope: !3692, file: !96, line: 657, baseType: !97, size: 32, offset: 1056)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "group_caps", scope: !3692, file: !96, line: 659, baseType: !97, size: 32, offset: 1088)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !3692, file: !96, line: 661, baseType: !3691, size: 64, offset: 1152)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "pmu", scope: !3692, file: !96, line: 662, baseType: !3662, size: 64, offset: 1216)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_private", scope: !3692, file: !96, line: 663, baseType: !466, size: 64, offset: 1280)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3692, file: !96, line: 665, baseType: !95, size: 32, offset: 1344)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "attach_state", scope: !3692, file: !96, line: 666, baseType: !6, size: 32, offset: 1376)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3692, file: !96, line: 667, baseType: !3711, size: 64, offset: 1408)
!3711 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !3712, line: 26, baseType: !3713)
!3712 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!3713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3712, line: 24, size: 64, elements: !3714)
!3714 = !{!3715}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3713, file: !3712, line: 25, baseType: !3716, size: 64)
!3716 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !3717, line: 12, baseType: !3718)
!3717 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3717, line: 10, size: 64, elements: !3719)
!3719 = !{!3720}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3718, file: !3717, line: 11, baseType: !553, size: 64)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3692, file: !96, line: 668, baseType: !555, size: 64, offset: 1472)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "total_time_enabled", scope: !3692, file: !96, line: 676, baseType: !503, size: 64, offset: 1536)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "total_time_running", scope: !3692, file: !96, line: 677, baseType: !503, size: 64, offset: 1600)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !3692, file: !96, line: 678, baseType: !503, size: 64, offset: 1664)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_ctx_time", scope: !3692, file: !96, line: 688, baseType: !503, size: 64, offset: 1728)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3692, file: !96, line: 690, baseType: !3727, size: 960, offset: 1792)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_attr", file: !3728, line: 317, size: 960, elements: !3729)
!3728 = !DIFile(filename: "./include/uapi/linux/perf_event.h", directory: "/home/lizy2001/genbc/linux")
!3729 = !{!3730, !3731, !3732, !3733, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3779, !3780, !3787, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3727, file: !3728, line: 322, baseType: !496, size: 32)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3727, file: !3728, line: 327, baseType: !496, size: 32, offset: 32)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3727, file: !3728, line: 332, baseType: !504, size: 64, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, scope: !3727, file: !3728, line: 334, baseType: !3734, size: 64, offset: 128)
!3734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3727, file: !3728, line: 334, size: 64, elements: !3735)
!3735 = !{!3736, !3737}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !3734, file: !3728, line: 335, baseType: !504, size: 64)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "sample_freq", scope: !3734, file: !3728, line: 336, baseType: !504, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "sample_type", scope: !3727, file: !3728, line: 339, baseType: !504, size: 64, offset: 192)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "read_format", scope: !3727, file: !3728, line: 340, baseType: !504, size: 64, offset: 256)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "disabled", scope: !3727, file: !3728, line: 342, baseType: !504, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "inherit", scope: !3727, file: !3728, line: 343, baseType: !504, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "pinned", scope: !3727, file: !3728, line: 344, baseType: !504, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "exclusive", scope: !3727, file: !3728, line: 345, baseType: !504, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_user", scope: !3727, file: !3728, line: 346, baseType: !504, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_kernel", scope: !3727, file: !3728, line: 347, baseType: !504, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_hv", scope: !3727, file: !3728, line: 348, baseType: !504, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_idle", scope: !3727, file: !3728, line: 349, baseType: !504, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3727, file: !3728, line: 350, baseType: !504, size: 1, offset: 328, flags: DIFlagBitField, extraData: i64 320)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !3727, file: !3728, line: 351, baseType: !504, size: 1, offset: 329, flags: DIFlagBitField, extraData: i64 320)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !3727, file: !3728, line: 352, baseType: !504, size: 1, offset: 330, flags: DIFlagBitField, extraData: i64 320)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "inherit_stat", scope: !3727, file: !3728, line: 353, baseType: !504, size: 1, offset: 331, flags: DIFlagBitField, extraData: i64 320)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "enable_on_exec", scope: !3727, file: !3728, line: 354, baseType: !504, size: 1, offset: 332, flags: DIFlagBitField, extraData: i64 320)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3727, file: !3728, line: 355, baseType: !504, size: 1, offset: 333, flags: DIFlagBitField, extraData: i64 320)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "watermark", scope: !3727, file: !3728, line: 356, baseType: !504, size: 1, offset: 334, flags: DIFlagBitField, extraData: i64 320)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "precise_ip", scope: !3727, file: !3728, line: 367, baseType: !504, size: 2, offset: 335, flags: DIFlagBitField, extraData: i64 320)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_data", scope: !3727, file: !3728, line: 368, baseType: !504, size: 1, offset: 337, flags: DIFlagBitField, extraData: i64 320)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "sample_id_all", scope: !3727, file: !3728, line: 369, baseType: !504, size: 1, offset: 338, flags: DIFlagBitField, extraData: i64 320)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_host", scope: !3727, file: !3728, line: 371, baseType: !504, size: 1, offset: 339, flags: DIFlagBitField, extraData: i64 320)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_guest", scope: !3727, file: !3728, line: 372, baseType: !504, size: 1, offset: 340, flags: DIFlagBitField, extraData: i64 320)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_callchain_kernel", scope: !3727, file: !3728, line: 374, baseType: !504, size: 1, offset: 341, flags: DIFlagBitField, extraData: i64 320)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_callchain_user", scope: !3727, file: !3728, line: 375, baseType: !504, size: 1, offset: 342, flags: DIFlagBitField, extraData: i64 320)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "mmap2", scope: !3727, file: !3728, line: 376, baseType: !504, size: 1, offset: 343, flags: DIFlagBitField, extraData: i64 320)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "comm_exec", scope: !3727, file: !3728, line: 377, baseType: !504, size: 1, offset: 344, flags: DIFlagBitField, extraData: i64 320)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "use_clockid", scope: !3727, file: !3728, line: 378, baseType: !504, size: 1, offset: 345, flags: DIFlagBitField, extraData: i64 320)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "context_switch", scope: !3727, file: !3728, line: 379, baseType: !504, size: 1, offset: 346, flags: DIFlagBitField, extraData: i64 320)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "write_backward", scope: !3727, file: !3728, line: 380, baseType: !504, size: 1, offset: 347, flags: DIFlagBitField, extraData: i64 320)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "namespaces", scope: !3727, file: !3728, line: 381, baseType: !504, size: 1, offset: 348, flags: DIFlagBitField, extraData: i64 320)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "ksymbol", scope: !3727, file: !3728, line: 382, baseType: !504, size: 1, offset: 349, flags: DIFlagBitField, extraData: i64 320)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_event", scope: !3727, file: !3728, line: 383, baseType: !504, size: 1, offset: 350, flags: DIFlagBitField, extraData: i64 320)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "aux_output", scope: !3727, file: !3728, line: 384, baseType: !504, size: 1, offset: 351, flags: DIFlagBitField, extraData: i64 320)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup", scope: !3727, file: !3728, line: 385, baseType: !504, size: 1, offset: 352, flags: DIFlagBitField, extraData: i64 320)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "text_poke", scope: !3727, file: !3728, line: 386, baseType: !504, size: 1, offset: 353, flags: DIFlagBitField, extraData: i64 320)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "__reserved_1", scope: !3727, file: !3728, line: 387, baseType: !504, size: 30, offset: 354, flags: DIFlagBitField, extraData: i64 320)
!3774 = !DIDerivedType(tag: DW_TAG_member, scope: !3727, file: !3728, line: 389, baseType: !3775, size: 32, offset: 384)
!3775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3727, file: !3728, line: 389, size: 32, elements: !3776)
!3776 = !{!3777, !3778}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_events", scope: !3775, file: !3728, line: 390, baseType: !496, size: 32)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_watermark", scope: !3775, file: !3728, line: 391, baseType: !496, size: 32)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "bp_type", scope: !3727, file: !3728, line: 394, baseType: !496, size: 32, offset: 416)
!3780 = !DIDerivedType(tag: DW_TAG_member, scope: !3727, file: !3728, line: 395, baseType: !3781, size: 64, offset: 448)
!3781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3727, file: !3728, line: 395, size: 64, elements: !3782)
!3782 = !{!3783, !3784, !3785, !3786}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "bp_addr", scope: !3781, file: !3728, line: 396, baseType: !504, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_func", scope: !3781, file: !3728, line: 397, baseType: !504, size: 64)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "uprobe_path", scope: !3781, file: !3728, line: 398, baseType: !504, size: 64)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "config1", scope: !3781, file: !3728, line: 399, baseType: !504, size: 64)
!3787 = !DIDerivedType(tag: DW_TAG_member, scope: !3727, file: !3728, line: 401, baseType: !3788, size: 64, offset: 512)
!3788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3727, file: !3728, line: 401, size: 64, elements: !3789)
!3789 = !{!3790, !3791, !3792, !3793}
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "bp_len", scope: !3788, file: !3728, line: 402, baseType: !504, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_addr", scope: !3788, file: !3728, line: 403, baseType: !504, size: 64)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3788, file: !3728, line: 404, baseType: !504, size: 64)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "config2", scope: !3788, file: !3728, line: 405, baseType: !504, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "branch_sample_type", scope: !3727, file: !3728, line: 407, baseType: !504, size: 64, offset: 576)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "sample_regs_user", scope: !3727, file: !3728, line: 413, baseType: !504, size: 64, offset: 640)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "sample_stack_user", scope: !3727, file: !3728, line: 418, baseType: !496, size: 32, offset: 704)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !3727, file: !3728, line: 420, baseType: !2064, size: 32, offset: 736)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "sample_regs_intr", scope: !3727, file: !3728, line: 429, baseType: !504, size: 64, offset: 768)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "aux_watermark", scope: !3727, file: !3728, line: 434, baseType: !496, size: 32, offset: 832)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "sample_max_stack", scope: !3727, file: !3728, line: 435, baseType: !522, size: 16, offset: 864)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "__reserved_2", scope: !3727, file: !3728, line: 436, baseType: !522, size: 16, offset: 880)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "aux_sample_size", scope: !3727, file: !3728, line: 437, baseType: !496, size: 32, offset: 896)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "__reserved_3", scope: !3727, file: !3728, line: 438, baseType: !496, size: 32, offset: 928)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "header_size", scope: !3692, file: !96, line: 691, baseType: !521, size: 16, offset: 2752)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "id_header_size", scope: !3692, file: !96, line: 692, baseType: !521, size: 16, offset: 2768)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "read_size", scope: !3692, file: !96, line: 693, baseType: !521, size: 16, offset: 2784)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !3692, file: !96, line: 694, baseType: !3808, size: 1536, offset: 2816)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hw_perf_event", file: !96, line: 134, size: 1536, elements: !3809)
!3809 = !{!3810, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3884, !3885, !3886, !3887}
!3810 = !DIDerivedType(tag: DW_TAG_member, scope: !3808, file: !96, line: 136, baseType: !3811, size: 768)
!3811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3808, file: !96, line: 136, size: 768, elements: !3812)
!3812 = !{!3813, !3832, !3836, !3840, !3845, !3857}
!3813 = !DIDerivedType(tag: DW_TAG_member, scope: !3811, file: !96, line: 137, baseType: !3814, size: 768)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3811, file: !96, line: 137, size: 768, elements: !3815)
!3815 = !{!3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3831}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3814, file: !96, line: 138, baseType: !503, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "last_tag", scope: !3814, file: !96, line: 139, baseType: !503, size: 64, offset: 64)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "config_base", scope: !3814, file: !96, line: 140, baseType: !528, size: 64, offset: 128)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "event_base", scope: !3814, file: !96, line: 141, baseType: !528, size: 64, offset: 192)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "event_base_rdpmc", scope: !3814, file: !96, line: 142, baseType: !97, size: 32, offset: 256)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !3814, file: !96, line: 143, baseType: !97, size: 32, offset: 288)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3814, file: !96, line: 144, baseType: !97, size: 32, offset: 320)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3814, file: !96, line: 145, baseType: !97, size: 32, offset: 352)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "extra_reg", scope: !3814, file: !96, line: 147, baseType: !3825, size: 192, offset: 384)
!3825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hw_perf_event_extra", file: !96, line: 124, size: 192, elements: !3826)
!3826 = !{!3827, !3828, !3829, !3830}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !3825, file: !96, line: 125, baseType: !503, size: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3825, file: !96, line: 126, baseType: !6, size: 32, offset: 64)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3825, file: !96, line: 127, baseType: !97, size: 32, offset: 96)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !3825, file: !96, line: 128, baseType: !97, size: 32, offset: 128)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "branch_reg", scope: !3814, file: !96, line: 148, baseType: !3825, size: 192, offset: 576)
!3832 = !DIDerivedType(tag: DW_TAG_member, scope: !3811, file: !96, line: 150, baseType: !3833, size: 512)
!3833 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3811, file: !96, line: 150, size: 512, elements: !3834)
!3834 = !{!3835}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer", scope: !3833, file: !96, line: 151, baseType: !1921, size: 512)
!3836 = !DIDerivedType(tag: DW_TAG_member, scope: !3811, file: !96, line: 153, baseType: !3837, size: 128)
!3837 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3811, file: !96, line: 153, size: 128, elements: !3838)
!3838 = !{!3839}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "tp_list", scope: !3837, file: !96, line: 155, baseType: !478, size: 128)
!3840 = !DIDerivedType(tag: DW_TAG_member, scope: !3811, file: !96, line: 157, baseType: !3841, size: 128)
!3841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3811, file: !96, line: 157, size: 128, elements: !3842)
!3842 = !{!3843, !3844}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "pwr_acc", scope: !3841, file: !96, line: 158, baseType: !503, size: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "ptsc", scope: !3841, file: !96, line: 159, baseType: !503, size: 64, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_member, scope: !3811, file: !96, line: 162, baseType: !3846, size: 320)
!3846 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3811, file: !96, line: 162, size: 320, elements: !3847)
!3847 = !{!3848, !3856}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3846, file: !96, line: 168, baseType: !3849, size: 192)
!3849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_hw_breakpoint", file: !3850, line: 14, size: 192, elements: !3851)
!3850 = !DIFile(filename: "./arch/x86/include/asm/hw_breakpoint.h", directory: "/home/lizy2001/genbc/linux")
!3851 = !{!3852, !3853, !3854, !3855}
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !3849, file: !3850, line: 15, baseType: !528, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3849, file: !3850, line: 16, baseType: !528, size: 64, offset: 64)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3849, file: !3850, line: 17, baseType: !648, size: 8, offset: 128)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3849, file: !3850, line: 18, baseType: !648, size: 8, offset: 136)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "bp_list", scope: !3846, file: !96, line: 169, baseType: !478, size: 128, offset: 192)
!3857 = !DIDerivedType(tag: DW_TAG_member, scope: !3811, file: !96, line: 172, baseType: !3858, size: 192)
!3858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3811, file: !96, line: 172, size: 192, elements: !3859)
!3859 = !{!3860, !3861, !3862, !3863, !3864}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_bank", scope: !3858, file: !96, line: 173, baseType: !648, size: 8)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_cntr", scope: !3858, file: !96, line: 174, baseType: !648, size: 8, offset: 8)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3858, file: !96, line: 175, baseType: !521, size: 16, offset: 16)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "conf", scope: !3858, file: !96, line: 176, baseType: !503, size: 64, offset: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "conf1", scope: !3858, file: !96, line: 177, baseType: !503, size: 64, offset: 128)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3808, file: !96, line: 184, baseType: !1845, size: 64, offset: 768)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters", scope: !3808, file: !96, line: 190, baseType: !466, size: 64, offset: 832)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters_gen", scope: !3808, file: !96, line: 193, baseType: !528, size: 64, offset: 896)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3808, file: !96, line: 202, baseType: !97, size: 32, offset: 960)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "prev_count", scope: !3808, file: !96, line: 208, baseType: !3711, size: 64, offset: 1024)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !3808, file: !96, line: 213, baseType: !503, size: 64, offset: 1088)
!3871 = !DIDerivedType(tag: DW_TAG_member, scope: !3808, file: !96, line: 215, baseType: !3872, size: 128, offset: 1152)
!3872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3808, file: !96, line: 215, size: 128, elements: !3873)
!3873 = !{!3874, !3879}
!3874 = !DIDerivedType(tag: DW_TAG_member, scope: !3872, file: !96, line: 216, baseType: !3875, size: 128)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3872, file: !96, line: 216, size: 128, elements: !3876)
!3876 = !{!3877, !3878}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "last_period", scope: !3875, file: !96, line: 220, baseType: !503, size: 64)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "period_left", scope: !3875, file: !96, line: 228, baseType: !3711, size: 64, offset: 64)
!3879 = !DIDerivedType(tag: DW_TAG_member, scope: !3872, file: !96, line: 230, baseType: !3880, size: 128)
!3880 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3872, file: !96, line: 230, size: 128, elements: !3881)
!3881 = !{!3882, !3883}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "saved_metric", scope: !3880, file: !96, line: 231, baseType: !503, size: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "saved_slots", scope: !3880, file: !96, line: 232, baseType: !503, size: 64, offset: 64)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts_seq", scope: !3808, file: !96, line: 240, baseType: !503, size: 64, offset: 1280)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !3808, file: !96, line: 241, baseType: !503, size: 64, offset: 1344)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "freq_time_stamp", scope: !3808, file: !96, line: 247, baseType: !503, size: 64, offset: 1408)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "freq_count_stamp", scope: !3808, file: !96, line: 248, baseType: !503, size: 64, offset: 1472)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !3692, file: !96, line: 696, baseType: !3658, size: 64, offset: 4352)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3692, file: !96, line: 697, baseType: !553, size: 64, offset: 4416)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "child_total_time_enabled", scope: !3692, file: !96, line: 703, baseType: !555, size: 64, offset: 4480)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "child_total_time_running", scope: !3692, file: !96, line: 704, baseType: !555, size: 64, offset: 4544)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "child_mutex", scope: !3692, file: !96, line: 709, baseType: !1303, size: 192, offset: 4608)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "child_list", scope: !3692, file: !96, line: 710, baseType: !478, size: 128, offset: 4800)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3692, file: !96, line: 711, baseType: !3691, size: 64, offset: 4928)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "oncpu", scope: !3692, file: !96, line: 713, baseType: !97, size: 32, offset: 4992)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3692, file: !96, line: 714, baseType: !97, size: 32, offset: 5024)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "owner_entry", scope: !3692, file: !96, line: 716, baseType: !478, size: 128, offset: 5056)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3692, file: !96, line: 717, baseType: !1845, size: 64, offset: 5184)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_mutex", scope: !3692, file: !96, line: 720, baseType: !1303, size: 192, offset: 5248)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_count", scope: !3692, file: !96, line: 721, baseType: !1369, size: 32, offset: 5440)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3692, file: !96, line: 723, baseType: !3902, size: 64, offset: 5504)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_buffer", file: !96, line: 611, flags: DIFlagFwdDecl)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "rb_entry", scope: !3692, file: !96, line: 724, baseType: !478, size: 128, offset: 5568)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_batches", scope: !3692, file: !96, line: 725, baseType: !528, size: 64, offset: 5696)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_pending", scope: !3692, file: !96, line: 726, baseType: !97, size: 32, offset: 5760)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3692, file: !96, line: 729, baseType: !2105, size: 128, offset: 5824)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3692, file: !96, line: 730, baseType: !3909, size: 64, offset: 5952)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !119, line: 1314, size: 320, elements: !3911)
!3911 = !{!3912, !3920, !3921, !3922, !3923, !3924}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3910, file: !119, line: 1315, baseType: !3913)
!3913 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3914, line: 20, baseType: !3915)
!3914 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3914, line: 11, elements: !3916)
!3916 = !{!3917}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3915, file: !3914, line: 12, baseType: !3918)
!3918 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !604, line: 33, baseType: !3919)
!3919 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !604, line: 31, elements: !606)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3910, file: !119, line: 1316, baseType: !97, size: 32)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3910, file: !119, line: 1317, baseType: !97, size: 32, offset: 32)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3910, file: !119, line: 1318, baseType: !3909, size: 64, offset: 64)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3910, file: !119, line: 1319, baseType: !939, size: 64, offset: 128)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3910, file: !119, line: 1320, baseType: !952, size: 128, align: 64, offset: 192)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "pending_wakeup", scope: !3692, file: !96, line: 733, baseType: !97, size: 32, offset: 6016)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "pending_kill", scope: !3692, file: !96, line: 734, baseType: !97, size: 32, offset: 6048)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "pending_disable", scope: !3692, file: !96, line: 735, baseType: !97, size: 32, offset: 6080)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !3692, file: !96, line: 736, baseType: !3929, size: 192, offset: 6144)
!3929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_work", file: !3930, line: 16, size: 192, elements: !3931)
!3930 = !DIFile(filename: "./include/linux/irq_work.h", directory: "/home/lizy2001/genbc/linux")
!3931 = !{!3932, !3941}
!3932 = !DIDerivedType(tag: DW_TAG_member, scope: !3929, file: !3930, line: 17, baseType: !3933, size: 128)
!3933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3929, file: !3930, line: 17, size: 128, elements: !3934)
!3934 = !{!3935, !3936}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3933, file: !3930, line: 18, baseType: !3099, size: 128)
!3936 = !DIDerivedType(tag: DW_TAG_member, scope: !3933, file: !3930, line: 19, baseType: !3937, size: 128)
!3937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3933, file: !3930, line: 19, size: 128, elements: !3938)
!3938 = !{!3939, !3940}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "llnode", scope: !3937, file: !3930, line: 20, baseType: !946, size: 64)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3937, file: !3930, line: 21, baseType: !1369, size: 32, offset: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3929, file: !3930, line: 24, baseType: !3942, size: 64, offset: 128)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{null, !3945}
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "event_limit", scope: !3692, file: !96, line: 738, baseType: !1369, size: 32, offset: 6336)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters", scope: !3692, file: !96, line: 741, baseType: !3948, size: 192, offset: 6400)
!3948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_addr_filters_head", file: !96, line: 552, size: 192, elements: !3949)
!3949 = !{!3950, !3951, !3952}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3948, file: !96, line: 553, baseType: !478, size: 128)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3948, file: !96, line: 554, baseType: !1395, offset: 128)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "nr_file_filters", scope: !3948, file: !96, line: 555, baseType: !6, size: 32, offset: 128)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filter_ranges", scope: !3692, file: !96, line: 743, baseType: !3954, size: 64, offset: 6592)
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3955, size: 64)
!3955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_addr_filter_range", file: !96, line: 558, size: 128, elements: !3956)
!3956 = !{!3957, !3958}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3955, file: !96, line: 559, baseType: !528, size: 64)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3955, file: !96, line: 560, baseType: !528, size: 64, offset: 64)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters_gen", scope: !3692, file: !96, line: 744, baseType: !528, size: 64, offset: 6656)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "aux_event", scope: !3692, file: !96, line: 747, baseType: !3691, size: 64, offset: 6720)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3692, file: !96, line: 749, baseType: !3962, size: 64, offset: 6784)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{null, !3691}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3692, file: !96, line: 750, baseType: !952, size: 128, align: 64, offset: 6848)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3692, file: !96, line: 752, baseType: !2117, size: 64, offset: 6976)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3692, file: !96, line: 753, baseType: !503, size: 64, offset: 7040)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !3692, file: !96, line: 755, baseType: !3969, size: 64, offset: 7104)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = !DISubroutineType(types: !3971)
!3971 = !{!503}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_handler", scope: !3692, file: !96, line: 756, baseType: !3973, size: 64, offset: 7168)
!3973 = !DIDerivedType(tag: DW_TAG_typedef, name: "perf_overflow_handler_t", file: !96, line: 578, baseType: !3974)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{null, !3691, !3977, !616}
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_sample_data", file: !96, line: 992, size: 1536, align: 512, elements: !3979)
!3979 = !{!3980, !3981, !4004, !4023, !4024, !4025, !4026, !4042, !4043, !4044, !4049, !4050, !4051, !4052, !4057, !4064, !4065, !4071, !4072, !4073, !4074}
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3978, file: !96, line: 997, baseType: !503, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3978, file: !96, line: 998, baseType: !3982, size: 64, offset: 64)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_raw_record", file: !96, line: 88, size: 256, elements: !3984)
!3984 = !{!3985, !4003}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "frag", scope: !3983, file: !96, line: 89, baseType: !3986, size: 224)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_raw_frag", file: !96, line: 78, size: 224, elements: !3987)
!3987 = !{!3988, !3994, !4001, !4002}
!3988 = !DIDerivedType(tag: DW_TAG_member, scope: !3986, file: !96, line: 79, baseType: !3989, size: 64)
!3989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3986, file: !96, line: 79, size: 64, elements: !3990)
!3990 = !{!3991, !3993}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3989, file: !96, line: 80, baseType: !3992, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3989, file: !96, line: 81, baseType: !528, size: 64)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "copy", scope: !3986, file: !96, line: 83, baseType: !3995, size: 64, offset: 64)
!3995 = !DIDerivedType(tag: DW_TAG_typedef, name: "perf_copy_f", file: !96, line: 75, baseType: !3996)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!528, !466, !3999, !528, !528}
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3986, file: !96, line: 84, baseType: !466, size: 64, offset: 128)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3986, file: !96, line: 85, baseType: !494, size: 32, offset: 192)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3983, file: !96, line: 90, baseType: !494, size: 32, offset: 224)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "br_stack", scope: !3978, file: !96, line: 999, baseType: !4005, size: 64, offset: 128)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_branch_stack", file: !96, line: 113, size: 128, elements: !4007)
!4007 = !{!4008, !4009, !4010}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4006, file: !96, line: 114, baseType: !504, size: 64)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "hw_idx", scope: !4006, file: !96, line: 115, baseType: !504, size: 64, offset: 64)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !4006, file: !96, line: 116, baseType: !4011, offset: 128)
!4011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4012, elements: !2814)
!4012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_branch_entry", file: !3728, line: 1235, size: 192, elements: !4013)
!4013 = !{!4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022}
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !4012, file: !3728, line: 1236, baseType: !504, size: 64)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !4012, file: !3728, line: 1237, baseType: !504, size: 64, offset: 64)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "mispred", scope: !4012, file: !3728, line: 1238, baseType: !504, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "predicted", scope: !4012, file: !3728, line: 1239, baseType: !504, size: 1, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "in_tx", scope: !4012, file: !3728, line: 1240, baseType: !504, size: 1, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "abort", scope: !4012, file: !3728, line: 1241, baseType: !504, size: 1, offset: 131, flags: DIFlagBitField, extraData: i64 128)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "cycles", scope: !4012, file: !3728, line: 1242, baseType: !504, size: 16, offset: 132, flags: DIFlagBitField, extraData: i64 128)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4012, file: !3728, line: 1243, baseType: !504, size: 4, offset: 148, flags: DIFlagBitField, extraData: i64 128)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4012, file: !3728, line: 1244, baseType: !504, size: 40, offset: 152, flags: DIFlagBitField, extraData: i64 128)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3978, file: !96, line: 1000, baseType: !503, size: 64, offset: 192)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3978, file: !96, line: 1001, baseType: !503, size: 64, offset: 256)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "txn", scope: !3978, file: !96, line: 1002, baseType: !503, size: 64, offset: 320)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "data_src", scope: !3978, file: !96, line: 1003, baseType: !4027, size: 64, offset: 384)
!4027 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "perf_mem_data_src", file: !3728, line: 1115, size: 64, elements: !4028)
!4028 = !{!4029, !4030}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4027, file: !3728, line: 1116, baseType: !504, size: 64)
!4030 = !DIDerivedType(tag: DW_TAG_member, scope: !4027, file: !3728, line: 1117, baseType: !4031, size: 64)
!4031 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4027, file: !3728, line: 1117, size: 64, elements: !4032)
!4032 = !{!4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "mem_op", scope: !4031, file: !3728, line: 1118, baseType: !504, size: 5, flags: DIFlagBitField, extraData: i64 0)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "mem_lvl", scope: !4031, file: !3728, line: 1119, baseType: !504, size: 14, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "mem_snoop", scope: !4031, file: !3728, line: 1120, baseType: !504, size: 5, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "mem_lock", scope: !4031, file: !3728, line: 1121, baseType: !504, size: 2, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "mem_dtlb", scope: !4031, file: !3728, line: 1122, baseType: !504, size: 7, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "mem_lvl_num", scope: !4031, file: !3728, line: 1123, baseType: !504, size: 4, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "mem_remote", scope: !4031, file: !3728, line: 1124, baseType: !504, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "mem_snoopx", scope: !4031, file: !3728, line: 1125, baseType: !504, size: 2, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "mem_rsvd", scope: !4031, file: !3728, line: 1126, baseType: !504, size: 24, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3978, file: !96, line: 1009, baseType: !503, size: 64, offset: 448)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3978, file: !96, line: 1010, baseType: !503, size: 64, offset: 512)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "tid_entry", scope: !3978, file: !96, line: 1014, baseType: !4045, size: 64, offset: 576)
!4045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3978, file: !96, line: 1011, size: 64, elements: !4046)
!4046 = !{!4047, !4048}
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4045, file: !96, line: 1012, baseType: !494, size: 32)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !4045, file: !96, line: 1013, baseType: !494, size: 32, offset: 32)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3978, file: !96, line: 1015, baseType: !503, size: 64, offset: 640)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3978, file: !96, line: 1016, baseType: !503, size: 64, offset: 704)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !3978, file: !96, line: 1017, baseType: !503, size: 64, offset: 768)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_entry", scope: !3978, file: !96, line: 1021, baseType: !4053, size: 64, offset: 832)
!4053 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3978, file: !96, line: 1018, size: 64, elements: !4054)
!4054 = !{!4055, !4056}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !4053, file: !96, line: 1019, baseType: !494, size: 32)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4053, file: !96, line: 1020, baseType: !494, size: 32, offset: 32)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "callchain", scope: !3978, file: !96, line: 1022, baseType: !4058, size: 64, offset: 896)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_callchain_entry", file: !96, line: 62, size: 64, elements: !4060)
!4060 = !{!4061, !4062}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4059, file: !96, line: 63, baseType: !504, size: 64)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4059, file: !96, line: 64, baseType: !4063, offset: 64)
!4063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, elements: !2814)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "aux_size", scope: !3978, file: !96, line: 1023, baseType: !503, size: 64, offset: 960)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "regs_user", scope: !3978, file: !96, line: 1025, baseType: !4066, size: 128, offset: 1024)
!4066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_regs", file: !4067, line: 7, size: 128, elements: !4068)
!4067 = !DIFile(filename: "./include/linux/perf_regs.h", directory: "/home/lizy2001/genbc/linux")
!4068 = !{!4069, !4070}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "abi", scope: !4066, file: !4067, line: 8, baseType: !504, size: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4066, file: !4067, line: 9, baseType: !616, size: 64, offset: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "regs_intr", scope: !3978, file: !96, line: 1026, baseType: !4066, size: 128, offset: 1152)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "stack_user_size", scope: !3978, file: !96, line: 1027, baseType: !503, size: 64, offset: 1280)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3978, file: !96, line: 1029, baseType: !503, size: 64, offset: 1344)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup", scope: !3978, file: !96, line: 1030, baseType: !503, size: 64, offset: 1408)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_handler_context", scope: !3692, file: !96, line: 757, baseType: !466, size: 64, offset: 7232)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "sb_list", scope: !3692, file: !96, line: 778, baseType: !478, size: 128, offset: 7296)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "heap_default", scope: !3676, file: !96, line: 884, baseType: !4078, size: 128, offset: 2816)
!4078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3691, size: 128, elements: !676)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "exclusive_cnt", scope: !3663, file: !96, line: 295, baseType: !1369, size: 32, offset: 640)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "task_ctx_nr", scope: !3663, file: !96, line: 296, baseType: !97, size: 32, offset: 672)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer_interval_ms", scope: !3663, file: !96, line: 297, baseType: !97, size: 32, offset: 704)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "nr_addr_filters", scope: !3663, file: !96, line: 300, baseType: !6, size: 32, offset: 736)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_enable", scope: !3663, file: !96, line: 306, baseType: !4084, size: 64, offset: 768)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{null, !3662}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_disable", scope: !3663, file: !96, line: 307, baseType: !4084, size: 64, offset: 832)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "event_init", scope: !3663, file: !96, line: 325, baseType: !4089, size: 64, offset: 896)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!97, !3691}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "event_mapped", scope: !3663, file: !96, line: 331, baseType: !4093, size: 64, offset: 960)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{null, !3691, !1612}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "event_unmapped", scope: !3663, file: !96, line: 332, baseType: !4093, size: 64, offset: 1024)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !3663, file: !96, line: 360, baseType: !4098, size: 64, offset: 1088)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!97, !3691, !97}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "del", scope: !3663, file: !96, line: 361, baseType: !4102, size: 64, offset: 1152)
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4103, size: 64)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{null, !3691, !97}
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3663, file: !96, line: 381, baseType: !4102, size: 64, offset: 1216)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !3663, file: !96, line: 382, baseType: !4102, size: 64, offset: 1280)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3663, file: !96, line: 390, baseType: !3962, size: 64, offset: 1344)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "start_txn", scope: !3663, file: !96, line: 402, baseType: !4109, size: 64, offset: 1408)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{null, !3662, !6}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "commit_txn", scope: !3663, file: !96, line: 411, baseType: !4113, size: 64, offset: 1472)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!97, !3662}
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "cancel_txn", scope: !3663, file: !96, line: 418, baseType: !4084, size: 64, offset: 1536)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "event_idx", scope: !3663, file: !96, line: 424, baseType: !4089, size: 64, offset: 1600)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "sched_task", scope: !3663, file: !96, line: 429, baseType: !4119, size: 64, offset: 1664)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{null, !3658, !1066}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "task_ctx_cache", scope: !3663, file: !96, line: 435, baseType: !1572, size: 64, offset: 1728)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "swap_task_ctx", scope: !3663, file: !96, line: 443, baseType: !4124, size: 64, offset: 1792)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{null, !3658, !3658}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "setup_aux", scope: !3663, file: !96, line: 450, baseType: !4128, size: 64, offset: 1856)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!466, !3691, !1443, !97, !1066}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "free_aux", scope: !3663, file: !96, line: 457, baseType: !710, size: 64, offset: 1920)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot_aux", scope: !3663, file: !96, line: 468, baseType: !4133, size: 64, offset: 1984)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!434, !3691, !4136, !528}
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_output_handle", file: !96, line: 887, size: 448, elements: !4138)
!4138 = !{!4139, !4140, !4141, !4142, !4143, !4144, !4149}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4137, file: !96, line: 888, baseType: !3691, size: 64)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4137, file: !96, line: 889, baseType: !3902, size: 64, offset: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4137, file: !96, line: 890, baseType: !528, size: 64, offset: 128)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4137, file: !96, line: 891, baseType: !528, size: 64, offset: 192)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "aux_flags", scope: !4137, file: !96, line: 892, baseType: !503, size: 64, offset: 256)
!4144 = !DIDerivedType(tag: DW_TAG_member, scope: !4137, file: !96, line: 893, baseType: !4145, size: 64, offset: 320)
!4145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4137, file: !96, line: 893, size: 64, elements: !4146)
!4146 = !{!4147, !4148}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4145, file: !96, line: 894, baseType: !466, size: 64)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4145, file: !96, line: 895, baseType: !528, size: 64)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4137, file: !96, line: 897, baseType: !97, size: 32, offset: 384)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters_validate", scope: !3663, file: !96, line: 480, baseType: !4151, size: 64, offset: 2048)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!97, !482}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters_sync", scope: !3663, file: !96, line: 494, baseType: !3962, size: 64, offset: 2112)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "aux_output_match", scope: !3663, file: !96, line: 504, baseType: !4089, size: 64, offset: 2176)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "filter_match", scope: !3663, file: !96, line: 510, baseType: !4089, size: 64, offset: 2240)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "check_period", scope: !3663, file: !96, line: 515, baseType: !4158, size: 64, offset: 2304)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!97, !3691, !503}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3659, file: !96, line: 799, baseType: !1395, offset: 64)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3659, file: !96, line: 805, baseType: !1303, size: 192, offset: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "active_ctx_list", scope: !3659, file: !96, line: 807, baseType: !478, size: 128, offset: 256)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_groups", scope: !3659, file: !96, line: 808, baseType: !4165, size: 128, offset: 384)
!4165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_groups", file: !96, line: 783, size: 128, elements: !4166)
!4166 = !{!4167, !4168}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !4165, file: !96, line: 784, baseType: !1378, size: 64)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4165, file: !96, line: 785, baseType: !503, size: 64, offset: 64)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "flexible_groups", scope: !3659, file: !96, line: 809, baseType: !4165, size: 128, offset: 512)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !3659, file: !96, line: 810, baseType: !478, size: 128, offset: 640)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_active", scope: !3659, file: !96, line: 812, baseType: !478, size: 128, offset: 768)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "flexible_active", scope: !3659, file: !96, line: 813, baseType: !478, size: 128, offset: 896)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "nr_events", scope: !3659, file: !96, line: 815, baseType: !97, size: 32, offset: 1024)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !3659, file: !96, line: 816, baseType: !97, size: 32, offset: 1056)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "is_active", scope: !3659, file: !96, line: 817, baseType: !97, size: 32, offset: 1088)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "nr_stat", scope: !3659, file: !96, line: 818, baseType: !97, size: 32, offset: 1120)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "nr_freq", scope: !3659, file: !96, line: 819, baseType: !97, size: 32, offset: 1152)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "rotate_disable", scope: !3659, file: !96, line: 820, baseType: !97, size: 32, offset: 1184)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "rotate_necessary", scope: !3659, file: !96, line: 825, baseType: !97, size: 32, offset: 1216)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3659, file: !96, line: 826, baseType: !1859, size: 32, offset: 1248)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3659, file: !96, line: 827, baseType: !1845, size: 64, offset: 1280)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3659, file: !96, line: 832, baseType: !503, size: 64, offset: 1344)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3659, file: !96, line: 833, baseType: !503, size: 64, offset: 1408)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "parent_ctx", scope: !3659, file: !96, line: 839, baseType: !3658, size: 64, offset: 1472)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "parent_gen", scope: !3659, file: !96, line: 840, baseType: !503, size: 64, offset: 1536)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "generation", scope: !3659, file: !96, line: 841, baseType: !503, size: 64, offset: 1600)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "pin_count", scope: !3659, file: !96, line: 842, baseType: !97, size: 32, offset: 1664)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "task_ctx_data", scope: !3659, file: !96, line: 846, baseType: !466, size: 64, offset: 1728)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3659, file: !96, line: 847, baseType: !952, size: 128, align: 64, offset: 1792)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1846, file: !1847, line: 1110, baseType: !1303, size: 192, offset: 11776)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1846, file: !1847, line: 1111, baseType: !478, size: 128, offset: 11968)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1846, file: !1847, line: 1173, baseType: !4193, size: 64, offset: 12096)
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4194, size: 64)
!4194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4195, line: 62, size: 256, align: 256, elements: !4196)
!4195 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4196 = !{!4197, !4198, !4199, !4204}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4194, file: !4195, line: 75, baseType: !496, size: 32)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4194, file: !4195, line: 90, baseType: !496, size: 32, offset: 32)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4194, file: !4195, line: 124, baseType: !4200, size: 64, offset: 64)
!4200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4194, file: !4195, line: 109, size: 64, elements: !4201)
!4201 = !{!4202, !4203}
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4200, file: !4195, line: 110, baseType: !504, size: 64)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4200, file: !4195, line: 112, baseType: !504, size: 64)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4194, file: !4195, line: 144, baseType: !496, size: 32, offset: 128)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1846, file: !1847, line: 1174, baseType: !494, size: 32, offset: 12160)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1846, file: !1847, line: 1179, baseType: !528, size: 64, offset: 12224)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1846, file: !1847, line: 1182, baseType: !4208, size: 128, offset: 12288)
!4208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1789, line: 76, size: 128, elements: !4209)
!4209 = !{!4210, !4215, !4216}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4208, file: !1789, line: 85, baseType: !4211, size: 64)
!4211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4212, line: 7, size: 64, elements: !4213)
!4212 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4213 = !{!4214}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4211, file: !4212, line: 12, baseType: !531, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4208, file: !1789, line: 88, baseType: !1066, size: 8, offset: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4208, file: !1789, line: 95, baseType: !1066, size: 8, offset: 72)
!4217 = !DIDerivedType(tag: DW_TAG_member, scope: !1846, file: !1847, line: 1184, baseType: !4218, size: 128, offset: 12416)
!4218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1846, file: !1847, line: 1184, size: 128, elements: !4219)
!4219 = !{!4220, !4221}
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4218, file: !1847, line: 1185, baseType: !1859, size: 32)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4218, file: !1847, line: 1186, baseType: !952, size: 128, align: 64)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1846, file: !1847, line: 1190, baseType: !4223, size: 64, offset: 12544)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!4224 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1847, line: 53, flags: DIFlagFwdDecl)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1846, file: !1847, line: 1192, baseType: !4226, size: 128, offset: 12608)
!4226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1789, line: 64, size: 128, elements: !4227)
!4227 = !{!4228, !4229, !4230}
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4226, file: !1789, line: 65, baseType: !1343, size: 64)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4226, file: !1789, line: 67, baseType: !496, size: 32, offset: 64)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4226, file: !1789, line: 68, baseType: !496, size: 32, offset: 96)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1846, file: !1847, line: 1206, baseType: !97, size: 32, offset: 12736)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1846, file: !1847, line: 1207, baseType: !97, size: 32, offset: 12768)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1846, file: !1847, line: 1209, baseType: !528, size: 64, offset: 12800)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1846, file: !1847, line: 1219, baseType: !503, size: 64, offset: 12864)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1846, file: !1847, line: 1220, baseType: !503, size: 64, offset: 12928)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1846, file: !1847, line: 1317, baseType: !97, size: 32, offset: 12992)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1846, file: !1847, line: 1319, baseType: !1845, size: 64, offset: 13056)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1846, file: !1847, line: 1322, baseType: !4239, size: 64, offset: 13120)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4241, line: 56, size: 512, elements: !4242)
!4241 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4242 = !{!4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4240, file: !4241, line: 57, baseType: !4239, size: 64)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4240, file: !4241, line: 58, baseType: !466, size: 64, offset: 64)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4240, file: !4241, line: 59, baseType: !528, size: 64, offset: 128)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4240, file: !4241, line: 60, baseType: !528, size: 64, offset: 192)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4240, file: !4241, line: 61, baseType: !1442, size: 64, offset: 256)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4240, file: !4241, line: 62, baseType: !6, size: 32, offset: 320)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4240, file: !4241, line: 63, baseType: !778, size: 64, offset: 384)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4240, file: !4241, line: 64, baseType: !3999, size: 64, offset: 448)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1846, file: !1847, line: 1326, baseType: !1859, size: 32, offset: 13184)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1846, file: !1847, line: 1342, baseType: !466, size: 64, offset: 13248)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1846, file: !1847, line: 1343, baseType: !504, size: 64, offset: 13312)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1846, file: !1847, line: 1344, baseType: !503, size: 64, offset: 13376)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1846, file: !1847, line: 1345, baseType: !504, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1846, file: !1847, line: 1346, baseType: !504, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1846, file: !1847, line: 1347, baseType: !504, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1846, file: !1847, line: 1348, baseType: !952, size: 128, align: 64, offset: 13504)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1846, file: !1847, line: 1358, baseType: !4260, size: 34816, offset: 13824)
!4260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4261, line: 485, size: 34816, elements: !4262)
!4261 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4262 = !{!4263, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4290, !4291, !4292, !4293, !4294, !4295, !4307, !4308, !4309}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4260, file: !4261, line: 487, baseType: !4264, size: 192)
!4264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4265, size: 192, elements: !865)
!4265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4266, line: 16, size: 64, elements: !4267)
!4266 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4267 = !{!4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4265, file: !4266, line: 17, baseType: !521, size: 16)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4265, file: !4266, line: 18, baseType: !521, size: 16, offset: 16)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4265, file: !4266, line: 19, baseType: !521, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4265, file: !4266, line: 19, baseType: !521, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4265, file: !4266, line: 19, baseType: !521, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4265, file: !4266, line: 19, baseType: !521, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4265, file: !4266, line: 19, baseType: !521, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4265, file: !4266, line: 20, baseType: !521, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4265, file: !4266, line: 20, baseType: !521, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4265, file: !4266, line: 20, baseType: !521, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4265, file: !4266, line: 20, baseType: !521, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4265, file: !4266, line: 20, baseType: !521, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4265, file: !4266, line: 20, baseType: !521, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4260, file: !4261, line: 491, baseType: !528, size: 64, offset: 192)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4260, file: !4261, line: 495, baseType: !499, size: 16, offset: 256)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4260, file: !4261, line: 496, baseType: !499, size: 16, offset: 272)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4260, file: !4261, line: 497, baseType: !499, size: 16, offset: 288)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4260, file: !4261, line: 498, baseType: !499, size: 16, offset: 304)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4260, file: !4261, line: 502, baseType: !528, size: 64, offset: 320)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4260, file: !4261, line: 503, baseType: !528, size: 64, offset: 384)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4260, file: !4261, line: 514, baseType: !4289, size: 256, offset: 448)
!4289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3691, size: 256, elements: !786)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4260, file: !4261, line: 516, baseType: !528, size: 64, offset: 704)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4260, file: !4261, line: 518, baseType: !528, size: 64, offset: 768)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4260, file: !4261, line: 520, baseType: !528, size: 64, offset: 832)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4260, file: !4261, line: 521, baseType: !528, size: 64, offset: 896)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4260, file: !4261, line: 522, baseType: !528, size: 64, offset: 960)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4260, file: !4261, line: 528, baseType: !4296, size: 64, offset: 1024)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4298, line: 8, size: 65664, elements: !4299)
!4298 = !DIFile(filename: "./arch/x86/include/asm/io_bitmap.h", directory: "/home/lizy2001/genbc/linux")
!4299 = !{!4300, !4301, !4302, !4303}
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !4297, file: !4298, line: 9, baseType: !503, size: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4297, file: !4298, line: 10, baseType: !1859, size: 32, offset: 64)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4297, file: !4298, line: 12, baseType: !6, size: 32, offset: 96)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap", scope: !4297, file: !4298, line: 13, baseType: !4304, size: 65536, offset: 128)
!4304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 65536, elements: !4305)
!4305 = !{!4306}
!4306 = !DISubrange(count: 1024)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4260, file: !4261, line: 535, baseType: !528, size: 64, offset: 1088)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4260, file: !4261, line: 537, baseType: !6, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4260, file: !4261, line: 540, baseType: !4310, size: 33280, offset: 1536)
!4310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4311, line: 317, size: 33280, elements: !4312)
!4311 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4312 = !{!4313, !4314, !4315}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4310, file: !4311, line: 330, baseType: !6, size: 32)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4310, file: !4311, line: 337, baseType: !528, size: 64, offset: 64)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4310, file: !4311, line: 348, baseType: !4316, size: 32768, offset: 512)
!4316 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4311, line: 304, size: 32768, elements: !4317)
!4317 = !{!4318, !4333, !4370, !4395, !4408}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4316, file: !4311, line: 305, baseType: !4319, size: 896)
!4319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4311, line: 12, size: 896, elements: !4320)
!4320 = !{!4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4332}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4319, file: !4311, line: 13, baseType: !494, size: 32)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4319, file: !4311, line: 14, baseType: !494, size: 32, offset: 32)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4319, file: !4311, line: 15, baseType: !494, size: 32, offset: 64)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4319, file: !4311, line: 16, baseType: !494, size: 32, offset: 96)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4319, file: !4311, line: 17, baseType: !494, size: 32, offset: 128)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4319, file: !4311, line: 18, baseType: !494, size: 32, offset: 160)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4319, file: !4311, line: 19, baseType: !494, size: 32, offset: 192)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4319, file: !4311, line: 22, baseType: !4329, size: 640, offset: 224)
!4329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 640, elements: !4330)
!4330 = !{!4331}
!4331 = !DISubrange(count: 20)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4319, file: !4311, line: 25, baseType: !494, size: 32, offset: 864)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4316, file: !4311, line: 306, baseType: !4334, size: 4096, align: 128)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4311, line: 34, size: 4096, align: 128, elements: !4335)
!4335 = !{!4336, !4337, !4338, !4339, !4340, !4355, !4356, !4357, !4359, !4361, !4365}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4334, file: !4311, line: 35, baseType: !521, size: 16)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4334, file: !4311, line: 36, baseType: !521, size: 16, offset: 16)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4334, file: !4311, line: 37, baseType: !521, size: 16, offset: 32)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4334, file: !4311, line: 38, baseType: !521, size: 16, offset: 48)
!4340 = !DIDerivedType(tag: DW_TAG_member, scope: !4334, file: !4311, line: 39, baseType: !4341, size: 128, offset: 64)
!4341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4334, file: !4311, line: 39, size: 128, elements: !4342)
!4342 = !{!4343, !4348}
!4343 = !DIDerivedType(tag: DW_TAG_member, scope: !4341, file: !4311, line: 40, baseType: !4344, size: 128)
!4344 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4341, file: !4311, line: 40, size: 128, elements: !4345)
!4345 = !{!4346, !4347}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4344, file: !4311, line: 41, baseType: !503, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4344, file: !4311, line: 42, baseType: !503, size: 64, offset: 64)
!4348 = !DIDerivedType(tag: DW_TAG_member, scope: !4341, file: !4311, line: 44, baseType: !4349, size: 128)
!4349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4341, file: !4311, line: 44, size: 128, elements: !4350)
!4350 = !{!4351, !4352, !4353, !4354}
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4349, file: !4311, line: 45, baseType: !494, size: 32)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4349, file: !4311, line: 46, baseType: !494, size: 32, offset: 32)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4349, file: !4311, line: 47, baseType: !494, size: 32, offset: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4349, file: !4311, line: 48, baseType: !494, size: 32, offset: 96)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4334, file: !4311, line: 51, baseType: !494, size: 32, offset: 192)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4334, file: !4311, line: 52, baseType: !494, size: 32, offset: 224)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4334, file: !4311, line: 55, baseType: !4358, size: 1024, offset: 256)
!4358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 1024, elements: !2753)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4334, file: !4311, line: 58, baseType: !4360, size: 2048, offset: 1280)
!4360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 2048, elements: !869)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4334, file: !4311, line: 60, baseType: !4362, size: 384, offset: 3328)
!4362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 384, elements: !4363)
!4363 = !{!4364}
!4364 = !DISubrange(count: 12)
!4365 = !DIDerivedType(tag: DW_TAG_member, scope: !4334, file: !4311, line: 62, baseType: !4366, size: 384, offset: 3712)
!4366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4334, file: !4311, line: 62, size: 384, elements: !4367)
!4367 = !{!4368, !4369}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4366, file: !4311, line: 63, baseType: !4362, size: 384)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4366, file: !4311, line: 64, baseType: !4362, size: 384)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4316, file: !4311, line: 307, baseType: !4371, size: 1088)
!4371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4311, line: 79, size: 1088, elements: !4372)
!4372 = !{!4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4394}
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4371, file: !4311, line: 80, baseType: !494, size: 32)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4371, file: !4311, line: 81, baseType: !494, size: 32, offset: 32)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4371, file: !4311, line: 82, baseType: !494, size: 32, offset: 64)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4371, file: !4311, line: 83, baseType: !494, size: 32, offset: 96)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4371, file: !4311, line: 84, baseType: !494, size: 32, offset: 128)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4371, file: !4311, line: 85, baseType: !494, size: 32, offset: 160)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4371, file: !4311, line: 86, baseType: !494, size: 32, offset: 192)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4371, file: !4311, line: 88, baseType: !4329, size: 640, offset: 224)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4371, file: !4311, line: 89, baseType: !648, size: 8, offset: 864)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4371, file: !4311, line: 90, baseType: !648, size: 8, offset: 872)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4371, file: !4311, line: 91, baseType: !648, size: 8, offset: 880)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4371, file: !4311, line: 92, baseType: !648, size: 8, offset: 888)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4371, file: !4311, line: 93, baseType: !648, size: 8, offset: 896)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4371, file: !4311, line: 94, baseType: !648, size: 8, offset: 904)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4371, file: !4311, line: 95, baseType: !4388, size: 64, offset: 960)
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4389, size: 64)
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4390, line: 11, size: 128, elements: !4391)
!4390 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4391 = !{!4392, !4393}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4389, file: !4390, line: 12, baseType: !434, size: 64)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4389, file: !4390, line: 13, baseType: !616, size: 64, offset: 64)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4371, file: !4311, line: 96, baseType: !494, size: 32, offset: 1024)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4316, file: !4311, line: 308, baseType: !4396, size: 4608, align: 512)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4311, line: 289, size: 4608, align: 512, elements: !4397)
!4397 = !{!4398, !4399, !4406}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4396, file: !4311, line: 290, baseType: !4334, size: 4096, align: 128)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4396, file: !4311, line: 291, baseType: !4400, size: 512, offset: 4096)
!4400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4311, line: 268, size: 512, elements: !4401)
!4401 = !{!4402, !4403, !4404}
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4400, file: !4311, line: 269, baseType: !503, size: 64)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4400, file: !4311, line: 270, baseType: !503, size: 64, offset: 64)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4400, file: !4311, line: 271, baseType: !4405, size: 384, offset: 128)
!4405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 384, elements: !525)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4396, file: !4311, line: 292, baseType: !4407, offset: 4608)
!4407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, elements: !2508)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4316, file: !4311, line: 309, baseType: !4409, size: 32768)
!4409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 32768, elements: !4410)
!4410 = !{!4411}
!4411 = !DISubrange(count: 4096)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1842, file: !1345, line: 378, baseType: !4413, size: 64, offset: 64)
!4413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1838, file: !1345, line: 384, baseType: !2342, size: 192, offset: 192)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1616, file: !1345, line: 500, baseType: !592, offset: 6656)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1616, file: !1345, line: 501, baseType: !4417, size: 64, offset: 6656)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4418 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1345, line: 387, flags: DIFlagFwdDecl)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1616, file: !1345, line: 516, baseType: !2140, size: 64, offset: 6720)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1616, file: !1345, line: 519, baseType: !939, size: 64, offset: 6784)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1616, file: !1345, line: 521, baseType: !4422, size: 64, offset: 6848)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1345, line: 521, flags: DIFlagFwdDecl)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1616, file: !1345, line: 545, baseType: !1369, size: 32, offset: 6912)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1616, file: !1345, line: 548, baseType: !1066, size: 8, offset: 6944)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1616, file: !1345, line: 550, baseType: !4427, offset: 6952)
!4427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4428, line: 142, elements: !606)
!4428 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1616, file: !1345, line: 554, baseType: !550, size: 256, offset: 6976)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1616, file: !1345, line: 557, baseType: !494, size: 32, offset: 7232)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1613, file: !1345, line: 565, baseType: !4432, offset: 7296)
!4432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, elements: !2814)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1609, file: !1345, line: 151, baseType: !1369, size: 32)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1601, file: !1345, line: 156, baseType: !592, offset: 256)
!4435 = !DIDerivedType(tag: DW_TAG_member, scope: !1349, file: !1345, line: 159, baseType: !4436, size: 128)
!4436 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1349, file: !1345, line: 159, size: 128, elements: !4437)
!4437 = !{!4438, !4482}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4436, file: !1345, line: 161, baseType: !4439, size: 64)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !106, line: 110, size: 1152, elements: !4441)
!4441 = !{!4442, !4452, !4453, !4454, !4455, !4456, !4457, !4469, !4470, !4471}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4440, file: !106, line: 111, baseType: !4443, size: 384)
!4443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !106, line: 19, size: 384, elements: !4444)
!4444 = !{!4445, !4447, !4448, !4449, !4450, !4451}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4443, file: !106, line: 20, baseType: !4446, size: 64)
!4446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !528)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4443, file: !106, line: 21, baseType: !4446, size: 64, offset: 64)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4443, file: !106, line: 22, baseType: !4446, size: 64, offset: 128)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4443, file: !106, line: 23, baseType: !528, size: 64, offset: 192)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4443, file: !106, line: 24, baseType: !528, size: 64, offset: 256)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4443, file: !106, line: 25, baseType: !528, size: 64, offset: 320)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4440, file: !106, line: 112, baseType: !2788, size: 64, offset: 384)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4440, file: !106, line: 113, baseType: !2774, size: 128, offset: 448)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4440, file: !106, line: 114, baseType: !2342, size: 192, offset: 576)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4440, file: !106, line: 115, baseType: !105, size: 32, offset: 768)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4440, file: !106, line: 116, baseType: !6, size: 32, offset: 800)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4440, file: !106, line: 117, baseType: !4458, size: 64, offset: 832)
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!4459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4460)
!4460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !106, line: 67, size: 256, elements: !4461)
!4461 = !{!4462, !4463, !4467, !4468}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4460, file: !106, line: 73, baseType: !1462, size: 64)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4460, file: !106, line: 78, baseType: !4464, size: 64, offset: 64)
!4464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4465, size: 64)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{null, !4439}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4460, file: !106, line: 83, baseType: !4464, size: 64, offset: 128)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4460, file: !106, line: 89, baseType: !1665, size: 64, offset: 192)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4440, file: !106, line: 118, baseType: !466, size: 64, offset: 896)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4440, file: !106, line: 119, baseType: !97, size: 32, offset: 960)
!4471 = !DIDerivedType(tag: DW_TAG_member, scope: !4440, file: !106, line: 120, baseType: !4472, size: 128, offset: 1024)
!4472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4440, file: !106, line: 120, size: 128, elements: !4473)
!4473 = !{!4474, !4480}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4472, file: !106, line: 121, baseType: !4475, size: 128)
!4475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4476, line: 6, size: 128, elements: !4477)
!4476 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4477 = !{!4478, !4479}
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4475, file: !4476, line: 7, baseType: !503, size: 64)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4475, file: !4476, line: 8, baseType: !503, size: 64, offset: 64)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4472, file: !106, line: 122, baseType: !4481)
!4481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4475, elements: !2508)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4436, file: !1345, line: 162, baseType: !466, size: 64, offset: 64)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1349, file: !1345, line: 176, baseType: !952, size: 128, align: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, scope: !1344, file: !1345, line: 179, baseType: !4485, size: 32, offset: 384)
!4485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1344, file: !1345, line: 179, size: 32, elements: !4486)
!4486 = !{!4487, !4488, !4489, !4490}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4485, file: !1345, line: 184, baseType: !1369, size: 32)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4485, file: !1345, line: 192, baseType: !6, size: 32)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4485, file: !1345, line: 194, baseType: !6, size: 32)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4485, file: !1345, line: 195, baseType: !97, size: 32)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1344, file: !1345, line: 199, baseType: !1369, size: 32, offset: 416)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1224, file: !119, line: 1964, baseType: !4493, size: 64, offset: 1344)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 64)
!4494 = !DISubroutineType(types: !4495)
!4495 = !{!434, !1172, !4496}
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4498, line: 12, size: 256, elements: !4499)
!4498 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4499 = !{!4500, !4501, !4502, !4503, !4504}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4497, file: !4498, line: 13, baseType: !539, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4497, file: !4498, line: 16, baseType: !97, size: 32, offset: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4497, file: !4498, line: 23, baseType: !528, size: 64, offset: 64)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4497, file: !4498, line: 30, baseType: !528, size: 64, offset: 128)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4497, file: !4498, line: 33, baseType: !4505, size: 64, offset: 192)
!4505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 64)
!4506 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1345, line: 27, flags: DIFlagFwdDecl)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1224, file: !119, line: 1966, baseType: !4493, size: 64, offset: 1408)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1173, file: !119, line: 1424, baseType: !4509, size: 64, offset: 448)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 64)
!4510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4511)
!4511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !113, line: 322, size: 704, elements: !4512)
!4512 = !{!4513, !4559, !4563, !4567, !4568, !4569, !4570, !4571, !4576, !4581, !4585}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4511, file: !113, line: 323, baseType: !4514, size: 64)
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4515, size: 64)
!4515 = !DISubroutineType(types: !4516)
!4516 = !{!97, !4517}
!4517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4518, size: 64)
!4518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !113, line: 294, size: 1600, elements: !4519)
!4519 = !{!4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4544, !4545, !4546}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4518, file: !113, line: 295, baseType: !574, size: 128)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4518, file: !113, line: 296, baseType: !478, size: 128, offset: 128)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4518, file: !113, line: 297, baseType: !478, size: 128, offset: 256)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4518, file: !113, line: 298, baseType: !478, size: 128, offset: 384)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4518, file: !113, line: 299, baseType: !1303, size: 192, offset: 512)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4518, file: !113, line: 300, baseType: !592, offset: 704)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4518, file: !113, line: 301, baseType: !1369, size: 32, offset: 704)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4518, file: !113, line: 302, baseType: !1172, size: 64, offset: 768)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4518, file: !113, line: 303, baseType: !4529, size: 64, offset: 832)
!4529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !113, line: 68, size: 64, elements: !4530)
!4530 = !{!4531, !4543}
!4531 = !DIDerivedType(tag: DW_TAG_member, scope: !4529, file: !113, line: 69, baseType: !4532, size: 32)
!4532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4529, file: !113, line: 69, size: 32, elements: !4533)
!4533 = !{!4534, !4535, !4536}
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4532, file: !113, line: 70, baseType: !1014, size: 32)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4532, file: !113, line: 71, baseType: !1022, size: 32)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4532, file: !113, line: 72, baseType: !4537, size: 32)
!4537 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4538, line: 24, baseType: !4539)
!4538 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4539 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4538, line: 22, size: 32, elements: !4540)
!4540 = !{!4541}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4539, file: !4538, line: 23, baseType: !4542, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4538, line: 20, baseType: !1020)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4529, file: !113, line: 74, baseType: !112, size: 32, offset: 32)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4518, file: !113, line: 304, baseType: !1107, size: 64, offset: 896)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4518, file: !113, line: 305, baseType: !528, size: 64, offset: 960)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4518, file: !113, line: 306, baseType: !4547, size: 576, offset: 1024)
!4547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !113, line: 205, size: 576, elements: !4548)
!4548 = !{!4549, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558}
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4547, file: !113, line: 206, baseType: !4550, size: 64)
!4550 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !113, line: 66, baseType: !561)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4547, file: !113, line: 207, baseType: !4550, size: 64, offset: 64)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4547, file: !113, line: 208, baseType: !4550, size: 64, offset: 128)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4547, file: !113, line: 209, baseType: !4550, size: 64, offset: 192)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4547, file: !113, line: 210, baseType: !4550, size: 64, offset: 256)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4547, file: !113, line: 211, baseType: !4550, size: 64, offset: 320)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4547, file: !113, line: 212, baseType: !4550, size: 64, offset: 384)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4547, file: !113, line: 213, baseType: !1114, size: 64, offset: 448)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4547, file: !113, line: 214, baseType: !1114, size: 64, offset: 512)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4511, file: !113, line: 324, baseType: !4560, size: 64, offset: 64)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{!4517, !1172, !97}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4511, file: !113, line: 325, baseType: !4564, size: 64, offset: 128)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DISubroutineType(types: !4566)
!4566 = !{null, !4517}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4511, file: !113, line: 326, baseType: !4514, size: 64, offset: 192)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4511, file: !113, line: 327, baseType: !4514, size: 64, offset: 256)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4511, file: !113, line: 328, baseType: !4514, size: 64, offset: 320)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4511, file: !113, line: 329, baseType: !1266, size: 64, offset: 384)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4511, file: !113, line: 332, baseType: !4572, size: 64, offset: 448)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = !DISubroutineType(types: !4574)
!4574 = !{!4575, !1008}
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4511, file: !113, line: 333, baseType: !4577, size: 64, offset: 512)
!4577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4578, size: 64)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!97, !1008, !4580}
!4580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 64)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4511, file: !113, line: 335, baseType: !4582, size: 64, offset: 576)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!97, !1008, !4575}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4511, file: !113, line: 337, baseType: !4586, size: 64, offset: 640)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!97, !1172, !4589}
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 64)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1173, file: !119, line: 1425, baseType: !4591, size: 64, offset: 512)
!4591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4592, size: 64)
!4592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4593)
!4593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !113, line: 428, size: 704, elements: !4594)
!4594 = !{!4595, !4599, !4600, !4604, !4605, !4606, !4621, !4644, !4648, !4649, !4672}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4593, file: !113, line: 429, baseType: !4596, size: 64)
!4596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4597, size: 64)
!4597 = !DISubroutineType(types: !4598)
!4598 = !{!97, !1172, !97, !97, !1123}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4593, file: !113, line: 430, baseType: !1266, size: 64, offset: 64)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4593, file: !113, line: 431, baseType: !4601, size: 64, offset: 128)
!4601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4602, size: 64)
!4602 = !DISubroutineType(types: !4603)
!4603 = !{!97, !1172, !6}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4593, file: !113, line: 432, baseType: !4601, size: 64, offset: 192)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4593, file: !113, line: 433, baseType: !1266, size: 64, offset: 256)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4593, file: !113, line: 434, baseType: !4607, size: 64, offset: 320)
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{!97, !1172, !97, !4610}
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4611, size: 64)
!4611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !113, line: 415, size: 256, elements: !4612)
!4612 = !{!4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4611, file: !113, line: 416, baseType: !97, size: 32)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4611, file: !113, line: 417, baseType: !6, size: 32, offset: 32)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4611, file: !113, line: 418, baseType: !6, size: 32, offset: 64)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4611, file: !113, line: 420, baseType: !6, size: 32, offset: 96)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4611, file: !113, line: 421, baseType: !6, size: 32, offset: 128)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4611, file: !113, line: 422, baseType: !6, size: 32, offset: 160)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4611, file: !113, line: 423, baseType: !6, size: 32, offset: 192)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4611, file: !113, line: 424, baseType: !6, size: 32, offset: 224)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4593, file: !113, line: 435, baseType: !4622, size: 64, offset: 384)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!97, !1172, !4529, !4625}
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !113, line: 343, size: 960, elements: !4627)
!4627 = !{!4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4626, file: !113, line: 344, baseType: !97, size: 32)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4626, file: !113, line: 345, baseType: !503, size: 64, offset: 64)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4626, file: !113, line: 346, baseType: !503, size: 64, offset: 128)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4626, file: !113, line: 347, baseType: !503, size: 64, offset: 192)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4626, file: !113, line: 348, baseType: !503, size: 64, offset: 256)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4626, file: !113, line: 349, baseType: !503, size: 64, offset: 320)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4626, file: !113, line: 350, baseType: !503, size: 64, offset: 384)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4626, file: !113, line: 351, baseType: !559, size: 64, offset: 448)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4626, file: !113, line: 353, baseType: !559, size: 64, offset: 512)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4626, file: !113, line: 354, baseType: !97, size: 32, offset: 576)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4626, file: !113, line: 355, baseType: !97, size: 32, offset: 608)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4626, file: !113, line: 356, baseType: !503, size: 64, offset: 640)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4626, file: !113, line: 357, baseType: !503, size: 64, offset: 704)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4626, file: !113, line: 358, baseType: !503, size: 64, offset: 768)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4626, file: !113, line: 359, baseType: !559, size: 64, offset: 832)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4626, file: !113, line: 360, baseType: !97, size: 32, offset: 896)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4593, file: !113, line: 436, baseType: !4645, size: 64, offset: 448)
!4645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4646, size: 64)
!4646 = !DISubroutineType(types: !4647)
!4647 = !{!97, !1172, !4589, !4625}
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4593, file: !113, line: 438, baseType: !4622, size: 64, offset: 512)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4593, file: !113, line: 439, baseType: !4650, size: 64, offset: 576)
!4650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4651, size: 64)
!4651 = !DISubroutineType(types: !4652)
!4652 = !{!97, !1172, !4653}
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !113, line: 409, size: 1408, elements: !4655)
!4655 = !{!4656, !4657}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4654, file: !113, line: 410, baseType: !6, size: 32)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4654, file: !113, line: 411, baseType: !4658, size: 1344, offset: 64)
!4658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4659, size: 1344, elements: !865)
!4659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !113, line: 395, size: 448, elements: !4660)
!4660 = !{!4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4671}
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4659, file: !113, line: 396, baseType: !6, size: 32)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4659, file: !113, line: 397, baseType: !6, size: 32, offset: 32)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4659, file: !113, line: 399, baseType: !6, size: 32, offset: 64)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4659, file: !113, line: 400, baseType: !6, size: 32, offset: 96)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4659, file: !113, line: 401, baseType: !6, size: 32, offset: 128)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4659, file: !113, line: 402, baseType: !6, size: 32, offset: 160)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4659, file: !113, line: 403, baseType: !6, size: 32, offset: 192)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4659, file: !113, line: 404, baseType: !505, size: 64, offset: 256)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4659, file: !113, line: 405, baseType: !4670, size: 64, offset: 320)
!4670 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !479, line: 126, baseType: !503)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4659, file: !113, line: 406, baseType: !4670, size: 64, offset: 384)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4593, file: !113, line: 440, baseType: !4601, size: 64, offset: 640)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1173, file: !119, line: 1426, baseType: !4674, size: 64, offset: 576)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4676)
!4676 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !119, line: 49, flags: DIFlagFwdDecl)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1173, file: !119, line: 1427, baseType: !528, size: 64, offset: 640)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1173, file: !119, line: 1428, baseType: !528, size: 64, offset: 704)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1173, file: !119, line: 1429, baseType: !528, size: 64, offset: 768)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1173, file: !119, line: 1430, baseType: !969, size: 64, offset: 832)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1173, file: !119, line: 1431, baseType: !1389, size: 256, offset: 896)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1173, file: !119, line: 1432, baseType: !97, size: 32, offset: 1152)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1173, file: !119, line: 1433, baseType: !1369, size: 32, offset: 1184)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1173, file: !119, line: 1437, baseType: !4685, size: 64, offset: 1216)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4688)
!4688 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !119, line: 1437, flags: DIFlagFwdDecl)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1173, file: !119, line: 1449, baseType: !4690, size: 64, offset: 1280)
!4690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !985, line: 34, size: 64, elements: !4691)
!4691 = !{!4692}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4690, file: !985, line: 35, baseType: !988, size: 64)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1173, file: !119, line: 1450, baseType: !478, size: 128, offset: 1344)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1173, file: !119, line: 1451, baseType: !2831, size: 64, offset: 1472)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1173, file: !119, line: 1452, baseType: !2851, size: 64, offset: 1536)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1173, file: !119, line: 1453, baseType: !4697, size: 64, offset: 1600)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4698 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !119, line: 1453, flags: DIFlagFwdDecl)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1173, file: !119, line: 1454, baseType: !574, size: 128, offset: 1664)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1173, file: !119, line: 1455, baseType: !6, size: 32, offset: 1792)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1173, file: !119, line: 1456, baseType: !4702, size: 2432, offset: 1856)
!4702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !113, line: 518, size: 2432, elements: !4703)
!4703 = !{!4704, !4705, !4706, !4708, !4740}
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4702, file: !113, line: 519, baseType: !6, size: 32)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4702, file: !113, line: 520, baseType: !1389, size: 256, offset: 64)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4702, file: !113, line: 521, baseType: !4707, size: 192, offset: 320)
!4707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 192, elements: !865)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4702, file: !113, line: 522, baseType: !4709, size: 1728, offset: 512)
!4709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4710, size: 1728, elements: !865)
!4710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !113, line: 222, size: 576, elements: !4711)
!4711 = !{!4712, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739}
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4710, file: !113, line: 223, baseType: !4713, size: 64)
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 64)
!4714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !113, line: 443, size: 256, elements: !4715)
!4715 = !{!4716, !4717, !4730, !4731}
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4714, file: !113, line: 444, baseType: !97, size: 32)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4714, file: !113, line: 445, baseType: !4718, size: 64, offset: 64)
!4718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 64)
!4719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4720)
!4720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !113, line: 310, size: 512, elements: !4721)
!4721 = !{!4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4720, file: !113, line: 311, baseType: !1266, size: 64)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4720, file: !113, line: 312, baseType: !1266, size: 64, offset: 64)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4720, file: !113, line: 313, baseType: !1266, size: 64, offset: 128)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4720, file: !113, line: 314, baseType: !1266, size: 64, offset: 192)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4720, file: !113, line: 315, baseType: !4514, size: 64, offset: 256)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4720, file: !113, line: 316, baseType: !4514, size: 64, offset: 320)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4720, file: !113, line: 317, baseType: !4514, size: 64, offset: 384)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4720, file: !113, line: 318, baseType: !4586, size: 64, offset: 448)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4714, file: !113, line: 446, baseType: !609, size: 64, offset: 128)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4714, file: !113, line: 447, baseType: !4713, size: 64, offset: 192)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4710, file: !113, line: 224, baseType: !97, size: 32, offset: 64)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4710, file: !113, line: 226, baseType: !478, size: 128, offset: 128)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4710, file: !113, line: 227, baseType: !528, size: 64, offset: 256)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4710, file: !113, line: 228, baseType: !6, size: 32, offset: 320)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4710, file: !113, line: 229, baseType: !6, size: 32, offset: 352)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4710, file: !113, line: 230, baseType: !4550, size: 64, offset: 384)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4710, file: !113, line: 231, baseType: !4550, size: 64, offset: 448)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4710, file: !113, line: 232, baseType: !466, size: 64, offset: 512)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4702, file: !113, line: 523, baseType: !4741, size: 192, offset: 2240)
!4741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4718, size: 192, elements: !865)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1173, file: !119, line: 1458, baseType: !4743, size: 2112, offset: 4288)
!4743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !119, line: 1410, size: 2112, elements: !4744)
!4744 = !{!4745, !4746, !4747}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4743, file: !119, line: 1411, baseType: !97, size: 32)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4743, file: !119, line: 1412, baseType: !2105, size: 128, offset: 64)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4743, file: !119, line: 1413, baseType: !4748, size: 1920, offset: 192)
!4748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4749, size: 1920, elements: !865)
!4749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4750, line: 12, size: 640, elements: !4751)
!4750 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4751 = !{!4752, !4760, !4761, !4766, !4767}
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4749, file: !4750, line: 13, baseType: !4753, size: 320)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4754, line: 17, size: 320, elements: !4755)
!4754 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4755 = !{!4756, !4757, !4758, !4759}
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4753, file: !4754, line: 18, baseType: !97, size: 32)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4753, file: !4754, line: 19, baseType: !97, size: 32, offset: 32)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4753, file: !4754, line: 20, baseType: !2105, size: 128, offset: 64)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4753, file: !4754, line: 22, baseType: !952, size: 128, align: 64, offset: 192)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4749, file: !4750, line: 14, baseType: !527, size: 64, offset: 320)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4749, file: !4750, line: 15, baseType: !4762, size: 64, offset: 384)
!4762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4763, line: 16, size: 64, elements: !4764)
!4763 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4764 = !{!4765}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4762, file: !4763, line: 17, baseType: !1845, size: 64)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4749, file: !4750, line: 16, baseType: !2105, size: 128, offset: 448)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4749, file: !4750, line: 17, baseType: !1369, size: 32, offset: 576)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1173, file: !119, line: 1465, baseType: !466, size: 64, offset: 6400)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1173, file: !119, line: 1468, baseType: !494, size: 32, offset: 6464)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1173, file: !119, line: 1470, baseType: !1114, size: 64, offset: 6528)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1173, file: !119, line: 1471, baseType: !1114, size: 64, offset: 6592)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1173, file: !119, line: 1473, baseType: !496, size: 32, offset: 6656)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1173, file: !119, line: 1474, baseType: !4774, size: 64, offset: 6720)
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4775, size: 64)
!4775 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !119, line: 603, flags: DIFlagFwdDecl)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1173, file: !119, line: 1477, baseType: !2752, size: 256, offset: 6784)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1173, file: !119, line: 1478, baseType: !4778, size: 128, offset: 7040)
!4778 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4779, line: 18, baseType: !4780)
!4779 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4779, line: 16, size: 128, elements: !4781)
!4781 = !{!4782}
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4780, file: !4779, line: 17, baseType: !4783, size: 128)
!4783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 128, elements: !2520)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1173, file: !119, line: 1480, baseType: !6, size: 32, offset: 7168)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1173, file: !119, line: 1481, baseType: !2913, size: 32, offset: 7200)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1173, file: !119, line: 1487, baseType: !1303, size: 192, offset: 7232)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1173, file: !119, line: 1493, baseType: !689, size: 64, offset: 7424)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1173, file: !119, line: 1495, baseType: !4789, size: 64, offset: 7488)
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 64)
!4790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4791)
!4791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !967, line: 135, size: 1024, align: 512, elements: !4792)
!4792 = !{!4793, !4797, !4798, !4805, !4811, !4815, !4819, !4823, !4824, !4828, !4832, !4837, !4841}
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4791, file: !967, line: 136, baseType: !4794, size: 64)
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4795, size: 64)
!4795 = !DISubroutineType(types: !4796)
!4796 = !{!97, !969, !6}
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4791, file: !967, line: 137, baseType: !4794, size: 64, offset: 64)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4791, file: !967, line: 138, baseType: !4799, size: 64, offset: 128)
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4800, size: 64)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!97, !4802, !4804}
!4802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4803, size: 64)
!4803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4791, file: !967, line: 139, baseType: !4806, size: 64, offset: 192)
!4806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4807 = !DISubroutineType(types: !4808)
!4808 = !{!97, !4802, !6, !689, !4809}
!4809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4810, size: 64)
!4810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !993)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4791, file: !967, line: 141, baseType: !4812, size: 64, offset: 256)
!4812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4813, size: 64)
!4813 = !DISubroutineType(types: !4814)
!4814 = !{!97, !4802}
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4791, file: !967, line: 142, baseType: !4816, size: 64, offset: 320)
!4816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4817, size: 64)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!97, !969}
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4791, file: !967, line: 143, baseType: !4820, size: 64, offset: 384)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{null, !969}
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4791, file: !967, line: 144, baseType: !4820, size: 64, offset: 448)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4791, file: !967, line: 145, baseType: !4825, size: 64, offset: 512)
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{null, !969, !1008}
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4791, file: !967, line: 146, baseType: !4829, size: 64, offset: 576)
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{!708, !969, !708, !97}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4791, file: !967, line: 147, baseType: !4833, size: 64, offset: 640)
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4834, size: 64)
!4834 = !DISubroutineType(types: !4835)
!4835 = !{!965, !4836}
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4791, file: !967, line: 148, baseType: !4838, size: 64, offset: 704)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = !DISubroutineType(types: !4840)
!4840 = !{!97, !1123, !1066}
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4791, file: !967, line: 149, baseType: !4842, size: 64, offset: 768)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!969, !969, !4845}
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1173, file: !119, line: 1500, baseType: !97, size: 32, offset: 7552)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1173, file: !119, line: 1502, baseType: !4849, size: 448, offset: 7616)
!4849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4498, line: 60, size: 448, elements: !4850)
!4850 = !{!4851, !4856, !4857, !4858, !4859, !4860, !4861}
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4849, file: !4498, line: 61, baseType: !4852, size: 64)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!528, !4855, !4496}
!4855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4849, file: !4498, line: 63, baseType: !4852, size: 64, offset: 64)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4849, file: !4498, line: 66, baseType: !434, size: 64, offset: 128)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4849, file: !4498, line: 67, baseType: !97, size: 32, offset: 192)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4849, file: !4498, line: 68, baseType: !6, size: 32, offset: 224)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4849, file: !4498, line: 71, baseType: !478, size: 128, offset: 256)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4849, file: !4498, line: 77, baseType: !4862, size: 64, offset: 384)
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1173, file: !119, line: 1505, baseType: !553, size: 64, offset: 8064)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1173, file: !119, line: 1508, baseType: !553, size: 64, offset: 8128)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1173, file: !119, line: 1511, baseType: !97, size: 32, offset: 8192)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1173, file: !119, line: 1514, baseType: !1546, size: 32, offset: 8224)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1173, file: !119, line: 1517, baseType: !588, size: 64, offset: 8256)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1173, file: !119, line: 1518, baseType: !1208, size: 64, offset: 8320)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1173, file: !119, line: 1525, baseType: !2140, size: 64, offset: 8384)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1173, file: !119, line: 1532, baseType: !4871, size: 64, offset: 8448)
!4871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4872, line: 52, size: 64, elements: !4873)
!4872 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4873 = !{!4874}
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4871, file: !4872, line: 53, baseType: !4875, size: 64)
!4875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4876, size: 64)
!4876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4872, line: 40, size: 256, elements: !4877)
!4877 = !{!4878, !4879, !4884}
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4876, file: !4872, line: 42, baseType: !592)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4876, file: !4872, line: 44, baseType: !4880, size: 192)
!4880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4872, line: 28, size: 192, elements: !4881)
!4881 = !{!4882, !4883}
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4880, file: !4872, line: 29, baseType: !478, size: 128)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4880, file: !4872, line: 31, baseType: !434, size: 64, offset: 128)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4876, file: !4872, line: 49, baseType: !434, size: 64, offset: 192)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1173, file: !119, line: 1533, baseType: !4871, size: 64, offset: 8512)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1173, file: !119, line: 1534, baseType: !952, size: 128, align: 64, offset: 8576)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1173, file: !119, line: 1535, baseType: !550, size: 256, offset: 8704)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1173, file: !119, line: 1537, baseType: !1303, size: 192, offset: 8960)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1173, file: !119, line: 1542, baseType: !97, size: 32, offset: 9152)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1173, file: !119, line: 1545, baseType: !592, offset: 9184)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1173, file: !119, line: 1546, baseType: !478, size: 128, offset: 9216)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1173, file: !119, line: 1548, baseType: !592, offset: 9344)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1173, file: !119, line: 1549, baseType: !478, size: 128, offset: 9344)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1009, file: !119, line: 624, baseType: !1356, size: 64, offset: 256)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1009, file: !119, line: 631, baseType: !528, size: 64, offset: 320)
!4896 = !DIDerivedType(tag: DW_TAG_member, scope: !1009, file: !119, line: 639, baseType: !4897, size: 32, offset: 384)
!4897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1009, file: !119, line: 639, size: 32, elements: !4898)
!4898 = !{!4899, !4900}
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4897, file: !119, line: 640, baseType: !3232, size: 32)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4897, file: !119, line: 641, baseType: !6, size: 32)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1009, file: !119, line: 643, baseType: !1089, size: 32, offset: 416)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1009, file: !119, line: 644, baseType: !1107, size: 64, offset: 448)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1009, file: !119, line: 645, baseType: !1110, size: 128, offset: 512)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1009, file: !119, line: 646, baseType: !1110, size: 128, offset: 640)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1009, file: !119, line: 647, baseType: !1110, size: 128, offset: 768)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1009, file: !119, line: 648, baseType: !592, offset: 896)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1009, file: !119, line: 649, baseType: !499, size: 16, offset: 896)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1009, file: !119, line: 650, baseType: !648, size: 8, offset: 912)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1009, file: !119, line: 651, baseType: !648, size: 8, offset: 920)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1009, file: !119, line: 652, baseType: !4670, size: 64, offset: 960)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1009, file: !119, line: 659, baseType: !528, size: 64, offset: 1024)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1009, file: !119, line: 660, baseType: !1389, size: 256, offset: 1088)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1009, file: !119, line: 662, baseType: !528, size: 64, offset: 1344)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1009, file: !119, line: 663, baseType: !528, size: 64, offset: 1408)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1009, file: !119, line: 665, baseType: !574, size: 128, offset: 1472)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1009, file: !119, line: 666, baseType: !478, size: 128, offset: 1600)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1009, file: !119, line: 675, baseType: !478, size: 128, offset: 1728)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1009, file: !119, line: 676, baseType: !478, size: 128, offset: 1856)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1009, file: !119, line: 677, baseType: !478, size: 128, offset: 1984)
!4920 = !DIDerivedType(tag: DW_TAG_member, scope: !1009, file: !119, line: 678, baseType: !4921, size: 128, offset: 2112)
!4921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1009, file: !119, line: 678, size: 128, elements: !4922)
!4922 = !{!4923, !4924}
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4921, file: !119, line: 679, baseType: !1208, size: 64)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4921, file: !119, line: 680, baseType: !952, size: 128, align: 64)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1009, file: !119, line: 682, baseType: !555, size: 64, offset: 2240)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1009, file: !119, line: 683, baseType: !555, size: 64, offset: 2304)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1009, file: !119, line: 684, baseType: !1369, size: 32, offset: 2368)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1009, file: !119, line: 685, baseType: !1369, size: 32, offset: 2400)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1009, file: !119, line: 686, baseType: !1369, size: 32, offset: 2432)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1009, file: !119, line: 688, baseType: !1369, size: 32, offset: 2464)
!4931 = !DIDerivedType(tag: DW_TAG_member, scope: !1009, file: !119, line: 690, baseType: !4932, size: 64, offset: 2496)
!4932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1009, file: !119, line: 690, size: 64, elements: !4933)
!4933 = !{!4934, !5149}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4932, file: !119, line: 691, baseType: !4935, size: 64)
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4936, size: 64)
!4936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4937)
!4937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !119, line: 1822, size: 2048, elements: !4938)
!4938 = !{!4939, !4940, !4944, !4948, !4952, !4953, !4954, !4958, !4971, !4972, !4989, !4993, !4994, !4998, !4999, !5003, !5008, !5009, !5013, !5017, !5109, !5113, !5114, !5118, !5119, !5123, !5127, !5132, !5136, !5140, !5144, !5148}
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4937, file: !119, line: 1823, baseType: !609, size: 64)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4937, file: !119, line: 1824, baseType: !4941, size: 64, offset: 64)
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4942, size: 64)
!4942 = !DISubroutineType(types: !4943)
!4943 = !{!1107, !939, !1107, !97}
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4937, file: !119, line: 1825, baseType: !4945, size: 64, offset: 128)
!4945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4946, size: 64)
!4946 = !DISubroutineType(types: !4947)
!4947 = !{!895, !939, !708, !909, !1318}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4937, file: !119, line: 1826, baseType: !4949, size: 64, offset: 192)
!4949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4950, size: 64)
!4950 = !DISubroutineType(types: !4951)
!4951 = !{!895, !939, !689, !909, !1318}
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4937, file: !119, line: 1827, baseType: !1466, size: 64, offset: 256)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4937, file: !119, line: 1828, baseType: !1466, size: 64, offset: 320)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4937, file: !119, line: 1829, baseType: !4955, size: 64, offset: 384)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!97, !1469, !1066}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4937, file: !119, line: 1830, baseType: !4959, size: 64, offset: 448)
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4960, size: 64)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{!97, !939, !4962}
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !119, line: 1776, size: 128, elements: !4964)
!4964 = !{!4965, !4970}
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4963, file: !119, line: 1777, baseType: !4966, size: 64)
!4966 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !119, line: 1773, baseType: !4967)
!4967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4968, size: 64)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{!97, !4962, !689, !97, !1107, !503, !6}
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4963, file: !119, line: 1778, baseType: !1107, size: 64, offset: 64)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4937, file: !119, line: 1831, baseType: !4959, size: 64, offset: 512)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4937, file: !119, line: 1832, baseType: !4973, size: 64, offset: 576)
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4974, size: 64)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{!4976, !939, !4978}
!4976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4977, line: 52, baseType: !6)
!4977 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4979, size: 64)
!4979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !4980, line: 43, size: 128, elements: !4981)
!4980 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!4981 = !{!4982, !4988}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !4979, file: !4980, line: 44, baseType: !4983, size: 64)
!4983 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !4980, line: 37, baseType: !4984)
!4984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 64)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{null, !939, !4987, !4978}
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !4979, file: !4980, line: 45, baseType: !4976, size: 32, offset: 64)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4937, file: !119, line: 1833, baseType: !4990, size: 64, offset: 640)
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4991, size: 64)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{!434, !939, !6, !528}
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4937, file: !119, line: 1834, baseType: !4990, size: 64, offset: 704)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4937, file: !119, line: 1835, baseType: !4995, size: 64, offset: 768)
!4995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4996, size: 64)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{!97, !939, !1619}
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4937, file: !119, line: 1836, baseType: !528, size: 64, offset: 832)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4937, file: !119, line: 1837, baseType: !5000, size: 64, offset: 896)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!97, !1008, !939}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4937, file: !119, line: 1838, baseType: !5004, size: 64, offset: 960)
!5004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5005, size: 64)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{!97, !939, !5007}
!5007 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !119, line: 1007, baseType: !466)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4937, file: !119, line: 1839, baseType: !5000, size: 64, offset: 1024)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4937, file: !119, line: 1840, baseType: !5010, size: 64, offset: 1088)
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 64)
!5011 = !DISubroutineType(types: !5012)
!5012 = !{!97, !939, !1107, !1107, !97}
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4937, file: !119, line: 1841, baseType: !5014, size: 64, offset: 1152)
!5014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5015, size: 64)
!5015 = !DISubroutineType(types: !5016)
!5016 = !{!97, !97, !939, !97}
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4937, file: !119, line: 1842, baseType: !5018, size: 64, offset: 1216)
!5018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5019, size: 64)
!5019 = !DISubroutineType(types: !5020)
!5020 = !{!97, !939, !97, !5021}
!5021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5022, size: 64)
!5022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !119, line: 1062, size: 1664, elements: !5023)
!5023 = !{!5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040, !5041, !5054, !5085}
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !5022, file: !119, line: 1063, baseType: !5021, size: 64)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !5022, file: !119, line: 1064, baseType: !478, size: 128, offset: 64)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !5022, file: !119, line: 1065, baseType: !574, size: 128, offset: 192)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !5022, file: !119, line: 1066, baseType: !478, size: 128, offset: 320)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !5022, file: !119, line: 1069, baseType: !478, size: 128, offset: 448)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !5022, file: !119, line: 1072, baseType: !5007, size: 64, offset: 576)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !5022, file: !119, line: 1073, baseType: !6, size: 32, offset: 640)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !5022, file: !119, line: 1074, baseType: !517, size: 8, offset: 672)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !5022, file: !119, line: 1075, baseType: !6, size: 32, offset: 704)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !5022, file: !119, line: 1076, baseType: !97, size: 32, offset: 736)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !5022, file: !119, line: 1077, baseType: !2105, size: 128, offset: 768)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !5022, file: !119, line: 1078, baseType: !939, size: 64, offset: 896)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !5022, file: !119, line: 1079, baseType: !1107, size: 64, offset: 960)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !5022, file: !119, line: 1080, baseType: !1107, size: 64, offset: 1024)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !5022, file: !119, line: 1082, baseType: !3909, size: 64, offset: 1088)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !5022, file: !119, line: 1084, baseType: !528, size: 64, offset: 1152)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !5022, file: !119, line: 1085, baseType: !528, size: 64, offset: 1216)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !5022, file: !119, line: 1087, baseType: !5042, size: 64, offset: 1280)
!5042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5043, size: 64)
!5043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5044)
!5044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !119, line: 1011, size: 128, elements: !5045)
!5045 = !{!5046, !5050}
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !5044, file: !119, line: 1012, baseType: !5047, size: 64)
!5047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5048, size: 64)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{null, !5021, !5021}
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !5044, file: !119, line: 1013, baseType: !5051, size: 64, offset: 64)
!5051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5052, size: 64)
!5052 = !DISubroutineType(types: !5053)
!5053 = !{null, !5021}
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !5022, file: !119, line: 1088, baseType: !5055, size: 64, offset: 1344)
!5055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5056, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5057)
!5057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !119, line: 1016, size: 512, elements: !5058)
!5058 = !{!5059, !5063, !5067, !5068, !5072, !5076, !5080, !5084}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !5057, file: !119, line: 1017, baseType: !5060, size: 64)
!5060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5061, size: 64)
!5061 = !DISubroutineType(types: !5062)
!5062 = !{!5007, !5007}
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !5057, file: !119, line: 1018, baseType: !5064, size: 64, offset: 64)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = !DISubroutineType(types: !5066)
!5066 = !{null, !5007}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !5057, file: !119, line: 1019, baseType: !5051, size: 64, offset: 128)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !5057, file: !119, line: 1020, baseType: !5069, size: 64, offset: 192)
!5069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5070, size: 64)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{!97, !5021, !97}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !5057, file: !119, line: 1021, baseType: !5073, size: 64, offset: 256)
!5073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5074, size: 64)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{!1066, !5021}
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !5057, file: !119, line: 1022, baseType: !5077, size: 64, offset: 320)
!5077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5078, size: 64)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{!97, !5021, !97, !482}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !5057, file: !119, line: 1023, baseType: !5081, size: 64, offset: 384)
!5081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5082, size: 64)
!5082 = !DISubroutineType(types: !5083)
!5083 = !{null, !5021, !1443}
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !5057, file: !119, line: 1024, baseType: !5073, size: 64, offset: 448)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !5022, file: !119, line: 1097, baseType: !5086, size: 256, offset: 1408)
!5086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5022, file: !119, line: 1089, size: 256, elements: !5087)
!5087 = !{!5088, !5097, !5103}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !5086, file: !119, line: 1090, baseType: !5089, size: 256)
!5089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !5090, line: 10, size: 256, elements: !5091)
!5090 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5091 = !{!5092, !5093, !5096}
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5089, file: !5090, line: 11, baseType: !494, size: 32)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5089, file: !5090, line: 12, baseType: !5094, size: 64, offset: 64)
!5094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5095, size: 64)
!5095 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !5090, line: 5, flags: DIFlagFwdDecl)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5089, file: !5090, line: 13, baseType: !478, size: 128, offset: 128)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !5086, file: !119, line: 1091, baseType: !5098, size: 64)
!5098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !5090, line: 17, size: 64, elements: !5099)
!5099 = !{!5100}
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5098, file: !5090, line: 18, baseType: !5101, size: 64)
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5102, size: 64)
!5102 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !5090, line: 16, flags: DIFlagFwdDecl)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !5086, file: !119, line: 1096, baseType: !5104, size: 192)
!5104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5086, file: !119, line: 1092, size: 192, elements: !5105)
!5105 = !{!5106, !5107, !5108}
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5104, file: !119, line: 1093, baseType: !478, size: 128)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5104, file: !119, line: 1094, baseType: !97, size: 32, offset: 128)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !5104, file: !119, line: 1095, baseType: !6, size: 32, offset: 160)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4937, file: !119, line: 1843, baseType: !5110, size: 64, offset: 1280)
!5110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5111, size: 64)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!895, !939, !1343, !97, !909, !1318, !97}
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4937, file: !119, line: 1844, baseType: !1739, size: 64, offset: 1344)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4937, file: !119, line: 1845, baseType: !5115, size: 64, offset: 1408)
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5116, size: 64)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!97, !97}
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4937, file: !119, line: 1846, baseType: !5018, size: 64, offset: 1472)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4937, file: !119, line: 1847, baseType: !5120, size: 64, offset: 1536)
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 64)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{!895, !4223, !939, !1318, !909, !6}
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4937, file: !119, line: 1848, baseType: !5124, size: 64, offset: 1600)
!5124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5125, size: 64)
!5125 = !DISubroutineType(types: !5126)
!5126 = !{!895, !939, !1318, !4223, !909, !6}
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4937, file: !119, line: 1849, baseType: !5128, size: 64, offset: 1664)
!5128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5129, size: 64)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!97, !939, !434, !5131, !1443}
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5021, size: 64)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4937, file: !119, line: 1850, baseType: !5133, size: 64, offset: 1728)
!5133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5134, size: 64)
!5134 = !DISubroutineType(types: !5135)
!5135 = !{!434, !939, !97, !1107, !1107}
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4937, file: !119, line: 1852, baseType: !5137, size: 64, offset: 1792)
!5137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5138, size: 64)
!5138 = !DISubroutineType(types: !5139)
!5139 = !{null, !1291, !939}
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4937, file: !119, line: 1856, baseType: !5141, size: 64, offset: 1856)
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5142, size: 64)
!5142 = !DISubroutineType(types: !5143)
!5143 = !{!895, !939, !1107, !939, !1107, !909, !6}
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4937, file: !119, line: 1858, baseType: !5145, size: 64, offset: 1920)
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5146, size: 64)
!5146 = !DISubroutineType(types: !5147)
!5147 = !{!1107, !939, !1107, !939, !1107, !1107, !6}
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4937, file: !119, line: 1861, baseType: !5010, size: 64, offset: 1984)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4932, file: !119, line: 692, baseType: !1231, size: 64)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1009, file: !119, line: 694, baseType: !5151, size: 64, offset: 2560)
!5151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5152, size: 64)
!5152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !119, line: 1100, size: 384, elements: !5153)
!5153 = !{!5154, !5155, !5156, !5157}
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !5152, file: !119, line: 1101, baseType: !592)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !5152, file: !119, line: 1102, baseType: !478, size: 128)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !5152, file: !119, line: 1103, baseType: !478, size: 128, offset: 128)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !5152, file: !119, line: 1104, baseType: !478, size: 128, offset: 256)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1009, file: !119, line: 695, baseType: !1357, size: 1216, align: 64, offset: 2624)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1009, file: !119, line: 696, baseType: !478, size: 128, offset: 3840)
!5160 = !DIDerivedType(tag: DW_TAG_member, scope: !1009, file: !119, line: 697, baseType: !5161, size: 64, offset: 3968)
!5161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1009, file: !119, line: 697, size: 64, elements: !5162)
!5162 = !{!5163, !5164, !5165, !5176, !5177}
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5161, file: !119, line: 698, baseType: !4223, size: 64)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5161, file: !119, line: 699, baseType: !2831, size: 64)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5161, file: !119, line: 700, baseType: !5166, size: 64)
!5166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !5168, line: 14, size: 832, elements: !5169)
!5168 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!5169 = !{!5170, !5171, !5172, !5173, !5174, !5175}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5167, file: !5168, line: 15, baseType: !826, size: 512)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5167, file: !5168, line: 16, baseType: !609, size: 64, offset: 512)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5167, file: !5168, line: 17, baseType: !4935, size: 64, offset: 576)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5167, file: !5168, line: 18, baseType: !478, size: 128, offset: 640)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5167, file: !5168, line: 19, baseType: !1089, size: 32, offset: 768)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5167, file: !5168, line: 20, baseType: !6, size: 32, offset: 800)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5161, file: !119, line: 701, baseType: !708, size: 64)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5161, file: !119, line: 702, baseType: !6, size: 32)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1009, file: !119, line: 705, baseType: !496, size: 32, offset: 4032)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1009, file: !119, line: 708, baseType: !496, size: 32, offset: 4064)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1009, file: !119, line: 709, baseType: !4774, size: 64, offset: 4096)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1009, file: !119, line: 720, baseType: !466, size: 64, offset: 4160)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !970, file: !967, line: 98, baseType: !5183, size: 256, offset: 448)
!5183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 256, elements: !2753)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !970, file: !967, line: 101, baseType: !5185, size: 32, offset: 704)
!5185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5186, line: 25, size: 32, elements: !5187)
!5186 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5187 = !{!5188}
!5188 = !DIDerivedType(tag: DW_TAG_member, scope: !5185, file: !5186, line: 26, baseType: !5189, size: 32)
!5189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5185, file: !5186, line: 26, size: 32, elements: !5190)
!5190 = !{!5191}
!5191 = !DIDerivedType(tag: DW_TAG_member, scope: !5189, file: !5186, line: 30, baseType: !5192, size: 32)
!5192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5189, file: !5186, line: 30, size: 32, elements: !5193)
!5193 = !{!5194, !5195}
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5192, file: !5186, line: 31, baseType: !592)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5192, file: !5186, line: 32, baseType: !97, size: 32)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !970, file: !967, line: 102, baseType: !4789, size: 64, offset: 768)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !970, file: !967, line: 103, baseType: !1172, size: 64, offset: 832)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !970, file: !967, line: 104, baseType: !528, size: 64, offset: 896)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !970, file: !967, line: 105, baseType: !466, size: 64, offset: 960)
!5200 = !DIDerivedType(tag: DW_TAG_member, scope: !970, file: !967, line: 107, baseType: !5201, size: 128, offset: 1024)
!5201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !970, file: !967, line: 107, size: 128, elements: !5202)
!5202 = !{!5203, !5204}
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5201, file: !967, line: 108, baseType: !478, size: 128)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5201, file: !967, line: 109, baseType: !4987, size: 64)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !970, file: !967, line: 111, baseType: !478, size: 128, offset: 1152)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !970, file: !967, line: 112, baseType: !478, size: 128, offset: 1280)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !970, file: !967, line: 120, baseType: !5208, size: 128, offset: 1408)
!5208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !970, file: !967, line: 116, size: 128, elements: !5209)
!5209 = !{!5210, !5211, !5212}
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5208, file: !967, line: 117, baseType: !574, size: 128)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5208, file: !967, line: 118, baseType: !984, size: 128)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5208, file: !967, line: 119, baseType: !952, size: 128, align: 64)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !940, file: !119, line: 922, baseType: !1008, size: 64, offset: 256)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !940, file: !119, line: 923, baseType: !4935, size: 64, offset: 320)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !940, file: !119, line: 929, baseType: !592, offset: 384)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !940, file: !119, line: 930, baseType: !118, size: 32, offset: 384)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !940, file: !119, line: 931, baseType: !553, size: 64, offset: 448)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !940, file: !119, line: 932, baseType: !6, size: 32, offset: 512)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !940, file: !119, line: 933, baseType: !2913, size: 32, offset: 544)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !940, file: !119, line: 934, baseType: !1303, size: 192, offset: 576)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !940, file: !119, line: 935, baseType: !1107, size: 64, offset: 768)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !940, file: !119, line: 936, baseType: !5223, size: 192, offset: 832)
!5223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !119, line: 885, size: 192, elements: !5224)
!5224 = !{!5225, !5226, !5227, !5228, !5229, !5230}
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5223, file: !119, line: 886, baseType: !3913)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5223, file: !119, line: 887, baseType: !2095, size: 64)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5223, file: !119, line: 888, baseType: !127, size: 32, offset: 64)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5223, file: !119, line: 889, baseType: !1014, size: 32, offset: 96)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5223, file: !119, line: 889, baseType: !1014, size: 32, offset: 128)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5223, file: !119, line: 890, baseType: !97, size: 32, offset: 160)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !940, file: !119, line: 937, baseType: !2442, size: 64, offset: 1024)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !940, file: !119, line: 938, baseType: !5233, size: 256, offset: 1088)
!5233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !119, line: 896, size: 256, elements: !5234)
!5234 = !{!5235, !5236, !5237, !5238, !5239, !5240}
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5233, file: !119, line: 897, baseType: !528, size: 64)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5233, file: !119, line: 898, baseType: !6, size: 32, offset: 64)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5233, file: !119, line: 899, baseType: !6, size: 32, offset: 96)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5233, file: !119, line: 902, baseType: !6, size: 32, offset: 128)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5233, file: !119, line: 903, baseType: !6, size: 32, offset: 160)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5233, file: !119, line: 904, baseType: !1107, size: 64, offset: 192)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !940, file: !119, line: 940, baseType: !503, size: 64, offset: 1344)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !940, file: !119, line: 945, baseType: !466, size: 64, offset: 1408)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !940, file: !119, line: 949, baseType: !478, size: 128, offset: 1472)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !940, file: !119, line: 950, baseType: !478, size: 128, offset: 1600)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !940, file: !119, line: 952, baseType: !1356, size: 64, offset: 1728)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !940, file: !119, line: 953, baseType: !1546, size: 32, offset: 1792)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !940, file: !119, line: 954, baseType: !1546, size: 32, offset: 1824)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !930, file: !889, line: 174, baseType: !936, size: 64, offset: 320)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !930, file: !889, line: 176, baseType: !5250, size: 64, offset: 384)
!5250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5251, size: 64)
!5251 = !DISubroutineType(types: !5252)
!5252 = !{!97, !939, !832, !929, !1619}
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !918, file: !889, line: 90, baseType: !913, size: 64, offset: 192)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !918, file: !889, line: 91, baseType: !5255, size: 64, offset: 256)
!5255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !879, file: !827, line: 143, baseType: !5257, size: 64, offset: 256)
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5258, size: 64)
!5258 = !DISubroutineType(types: !5259)
!5259 = !{!5260, !832}
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5261, size: 64)
!5261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5262)
!5262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !136, line: 39, size: 384, elements: !5263)
!5263 = !{!5264, !5265, !5269, !5273, !5279, !5283}
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5262, file: !136, line: 40, baseType: !135, size: 32)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !5262, file: !136, line: 41, baseType: !5266, size: 64, offset: 64)
!5266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5267, size: 64)
!5267 = !DISubroutineType(types: !5268)
!5268 = !{!1066}
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !5262, file: !136, line: 42, baseType: !5270, size: 64, offset: 128)
!5270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5271, size: 64)
!5271 = !DISubroutineType(types: !5272)
!5272 = !{!466}
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !5262, file: !136, line: 43, baseType: !5274, size: 64, offset: 192)
!5274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5275, size: 64)
!5275 = !DISubroutineType(types: !5276)
!5276 = !{!3999, !5277}
!5277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5278, size: 64)
!5278 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !136, line: 19, flags: DIFlagFwdDecl)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !5262, file: !136, line: 44, baseType: !5280, size: 64, offset: 256)
!5280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5281, size: 64)
!5281 = !DISubroutineType(types: !5282)
!5282 = !{!3999}
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !5262, file: !136, line: 45, baseType: !710, size: 64, offset: 320)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !879, file: !827, line: 144, baseType: !5285, size: 64, offset: 320)
!5285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5286, size: 64)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{!3999, !832}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !879, file: !827, line: 145, baseType: !5289, size: 64, offset: 384)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5290, size: 64)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{null, !832, !2367, !2368}
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !826, file: !827, line: 70, baseType: !5293, size: 64, offset: 384)
!5293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5294, size: 64)
!5294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1192, line: 123, size: 1024, elements: !5295)
!5295 = !{!5296, !5297, !5298, !5299, !5300, !5301, !5302, !5303, !5406, !5407, !5408, !5409, !5410}
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5294, file: !1192, line: 124, baseType: !1369, size: 32)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5294, file: !1192, line: 125, baseType: !1369, size: 32, offset: 32)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5294, file: !1192, line: 135, baseType: !5293, size: 64, offset: 64)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5294, file: !1192, line: 136, baseType: !689, size: 64, offset: 128)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5294, file: !1192, line: 138, baseType: !1382, size: 192, align: 64, offset: 192)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !5294, file: !1192, line: 140, baseType: !3999, size: 64, offset: 384)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5294, file: !1192, line: 141, baseType: !6, size: 32, offset: 448)
!5303 = !DIDerivedType(tag: DW_TAG_member, scope: !5294, file: !1192, line: 142, baseType: !5304, size: 256, offset: 512)
!5304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5294, file: !1192, line: 142, size: 256, elements: !5305)
!5305 = !{!5306, !5346, !5350}
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5304, file: !1192, line: 143, baseType: !5307, size: 192)
!5307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1192, line: 91, size: 192, elements: !5308)
!5308 = !{!5309, !5310, !5311}
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !5307, file: !1192, line: 92, baseType: !528, size: 64)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5307, file: !1192, line: 94, baseType: !1378, size: 64, offset: 64)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !5307, file: !1192, line: 100, baseType: !5312, size: 64, offset: 128)
!5312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5313, size: 64)
!5313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1192, line: 180, size: 704, elements: !5314)
!5314 = !{!5315, !5316, !5317, !5318, !5319, !5320, !5344, !5345}
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5313, file: !1192, line: 182, baseType: !5293, size: 64)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5313, file: !1192, line: 183, baseType: !6, size: 32, offset: 64)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !5313, file: !1192, line: 186, baseType: !2127, size: 192, offset: 128)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !5313, file: !1192, line: 187, baseType: !494, size: 32, offset: 320)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !5313, file: !1192, line: 188, baseType: !494, size: 32, offset: 352)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !5313, file: !1192, line: 189, baseType: !5321, size: 64, offset: 384)
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64)
!5322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1192, line: 168, size: 320, elements: !5323)
!5323 = !{!5324, !5328, !5332, !5336, !5340}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !5322, file: !1192, line: 169, baseType: !5325, size: 64)
!5325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5326, size: 64)
!5326 = !DISubroutineType(types: !5327)
!5327 = !{!97, !1291, !5312}
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !5322, file: !1192, line: 171, baseType: !5329, size: 64, offset: 64)
!5329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5330, size: 64)
!5330 = !DISubroutineType(types: !5331)
!5331 = !{!97, !5293, !689, !904}
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !5322, file: !1192, line: 173, baseType: !5333, size: 64, offset: 128)
!5333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5334, size: 64)
!5334 = !DISubroutineType(types: !5335)
!5335 = !{!97, !5293}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !5322, file: !1192, line: 174, baseType: !5337, size: 64, offset: 192)
!5337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5338, size: 64)
!5338 = !DISubroutineType(types: !5339)
!5339 = !{!97, !5293, !5293, !689}
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !5322, file: !1192, line: 176, baseType: !5341, size: 64, offset: 256)
!5341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5342, size: 64)
!5342 = !DISubroutineType(types: !5343)
!5343 = !{!97, !1291, !5293, !5312}
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !5313, file: !1192, line: 192, baseType: !478, size: 128, offset: 448)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !5313, file: !1192, line: 194, baseType: !2105, size: 128, offset: 576)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !5304, file: !1192, line: 144, baseType: !5347, size: 64)
!5347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1192, line: 103, size: 64, elements: !5348)
!5348 = !{!5349}
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !5347, file: !1192, line: 104, baseType: !5293, size: 64)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5304, file: !1192, line: 145, baseType: !5351, size: 256)
!5351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1192, line: 107, size: 256, elements: !5352)
!5352 = !{!5353, !5401, !5404, !5405}
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5351, file: !1192, line: 108, baseType: !5354, size: 64)
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 64)
!5355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5356)
!5356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1192, line: 217, size: 768, elements: !5357)
!5357 = !{!5358, !5378, !5382, !5383, !5384, !5385, !5386, !5390, !5391, !5392, !5393, !5397}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5356, file: !1192, line: 222, baseType: !5359, size: 64)
!5359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5360, size: 64)
!5360 = !DISubroutineType(types: !5361)
!5361 = !{!97, !5362}
!5362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5363, size: 64)
!5363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1192, line: 197, size: 1088, elements: !5364)
!5364 = !{!5365, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377}
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5363, file: !1192, line: 199, baseType: !5293, size: 64)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5363, file: !1192, line: 200, baseType: !939, size: 64, offset: 64)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !5363, file: !1192, line: 201, baseType: !1291, size: 64, offset: 128)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5363, file: !1192, line: 202, baseType: !466, size: 64, offset: 192)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5363, file: !1192, line: 205, baseType: !1303, size: 192, offset: 256)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !5363, file: !1192, line: 206, baseType: !1303, size: 192, offset: 448)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5363, file: !1192, line: 207, baseType: !97, size: 32, offset: 640)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5363, file: !1192, line: 208, baseType: !478, size: 128, offset: 704)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !5363, file: !1192, line: 209, baseType: !708, size: 64, offset: 832)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5363, file: !1192, line: 211, baseType: !909, size: 64, offset: 896)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !5363, file: !1192, line: 212, baseType: !1066, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !5363, file: !1192, line: 213, baseType: !1066, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !5363, file: !1192, line: 214, baseType: !1647, size: 64, offset: 1024)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5356, file: !1192, line: 223, baseType: !5379, size: 64, offset: 64)
!5379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5380, size: 64)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{null, !5362}
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !5356, file: !1192, line: 236, baseType: !1328, size: 64, offset: 128)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !5356, file: !1192, line: 238, baseType: !1315, size: 64, offset: 192)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !5356, file: !1192, line: 239, baseType: !1324, size: 64, offset: 256)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !5356, file: !1192, line: 240, baseType: !1320, size: 64, offset: 320)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5356, file: !1192, line: 242, baseType: !5387, size: 64, offset: 384)
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 64)
!5388 = !DISubroutineType(types: !5389)
!5389 = !{!895, !5362, !708, !909, !1107}
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !5356, file: !1192, line: 252, baseType: !909, size: 64, offset: 448)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !5356, file: !1192, line: 259, baseType: !1066, size: 8, offset: 512)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5356, file: !1192, line: 260, baseType: !5387, size: 64, offset: 576)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5356, file: !1192, line: 263, baseType: !5394, size: 64, offset: 640)
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5395, size: 64)
!5395 = !DISubroutineType(types: !5396)
!5396 = !{!4976, !5362, !4978}
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5356, file: !1192, line: 266, baseType: !5398, size: 64, offset: 704)
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 64)
!5399 = !DISubroutineType(types: !5400)
!5400 = !{!97, !5362, !1619}
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5351, file: !1192, line: 109, baseType: !5402, size: 64, offset: 64)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1192, line: 31, flags: DIFlagFwdDecl)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5351, file: !1192, line: 110, baseType: !1107, size: 64, offset: 128)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !5351, file: !1192, line: 111, baseType: !5293, size: 64, offset: 192)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5294, file: !1192, line: 148, baseType: !466, size: 64, offset: 768)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5294, file: !1192, line: 154, baseType: !503, size: 64, offset: 832)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5294, file: !1192, line: 156, baseType: !499, size: 16, offset: 896)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5294, file: !1192, line: 157, baseType: !904, size: 16, offset: 912)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !5294, file: !1192, line: 158, baseType: !5411, size: 64, offset: 960)
!5411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5412, size: 64)
!5412 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1192, line: 32, flags: DIFlagFwdDecl)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !826, file: !827, line: 71, baseType: !2122, size: 32, offset: 448)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !826, file: !827, line: 75, baseType: !6, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !826, file: !827, line: 76, baseType: !6, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !826, file: !827, line: 77, baseType: !6, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !826, file: !827, line: 78, baseType: !6, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !826, file: !827, line: 79, baseType: !6, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !823, file: !148, line: 463, baseType: !822, size: 64, offset: 512)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !823, file: !148, line: 465, baseType: !5421, size: 64, offset: 576)
!5421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5422, size: 64)
!5422 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !148, line: 36, flags: DIFlagFwdDecl)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !823, file: !148, line: 467, baseType: !689, size: 64, offset: 640)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !823, file: !148, line: 468, baseType: !5425, size: 64, offset: 704)
!5425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5426, size: 64)
!5426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5427)
!5427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !148, line: 87, size: 384, elements: !5428)
!5428 = !{!5429, !5430, !5431, !5435, !5439, !5443}
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5427, file: !148, line: 88, baseType: !689, size: 64)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5427, file: !148, line: 89, baseType: !915, size: 64, offset: 64)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5427, file: !148, line: 90, baseType: !5432, size: 64, offset: 128)
!5432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5433, size: 64)
!5433 = !DISubroutineType(types: !5434)
!5434 = !{!97, !822, !860}
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5427, file: !148, line: 91, baseType: !5436, size: 64, offset: 192)
!5436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5437, size: 64)
!5437 = !DISubroutineType(types: !5438)
!5438 = !{!708, !822, !2977, !2367, !2368}
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5427, file: !148, line: 93, baseType: !5440, size: 64, offset: 256)
!5440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5441, size: 64)
!5441 = !DISubroutineType(types: !5442)
!5442 = !{null, !822}
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5427, file: !148, line: 95, baseType: !5444, size: 64, offset: 320)
!5444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5445, size: 64)
!5445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5446)
!5446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !84, line: 278, size: 1472, elements: !5447)
!5447 = !{!5448, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473}
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !5446, file: !84, line: 279, baseType: !5449, size: 64)
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5450, size: 64)
!5450 = !DISubroutineType(types: !5451)
!5451 = !{!97, !822}
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5446, file: !84, line: 280, baseType: !5440, size: 64, offset: 64)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5446, file: !84, line: 281, baseType: !5449, size: 64, offset: 128)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5446, file: !84, line: 282, baseType: !5449, size: 64, offset: 192)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !5446, file: !84, line: 283, baseType: !5449, size: 64, offset: 256)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !5446, file: !84, line: 284, baseType: !5449, size: 64, offset: 320)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !5446, file: !84, line: 285, baseType: !5449, size: 64, offset: 384)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !5446, file: !84, line: 286, baseType: !5449, size: 64, offset: 448)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !5446, file: !84, line: 287, baseType: !5449, size: 64, offset: 512)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !5446, file: !84, line: 288, baseType: !5449, size: 64, offset: 576)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !5446, file: !84, line: 289, baseType: !5449, size: 64, offset: 640)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !5446, file: !84, line: 290, baseType: !5449, size: 64, offset: 704)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !5446, file: !84, line: 291, baseType: !5449, size: 64, offset: 768)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !5446, file: !84, line: 292, baseType: !5449, size: 64, offset: 832)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !5446, file: !84, line: 293, baseType: !5449, size: 64, offset: 896)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !5446, file: !84, line: 294, baseType: !5449, size: 64, offset: 960)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !5446, file: !84, line: 295, baseType: !5449, size: 64, offset: 1024)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !5446, file: !84, line: 296, baseType: !5449, size: 64, offset: 1088)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !5446, file: !84, line: 297, baseType: !5449, size: 64, offset: 1152)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !5446, file: !84, line: 298, baseType: !5449, size: 64, offset: 1216)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !5446, file: !84, line: 299, baseType: !5449, size: 64, offset: 1280)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !5446, file: !84, line: 300, baseType: !5449, size: 64, offset: 1344)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !5446, file: !84, line: 301, baseType: !5449, size: 64, offset: 1408)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !823, file: !148, line: 470, baseType: !5475, size: 64, offset: 768)
!5475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !5477, line: 82, size: 1408, elements: !5478)
!5477 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!5478 = !{!5479, !5480, !5481, !5482, !5483, !5484, !5485, !5544, !5545, !5546, !5547, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556, !5560, !5563, !5564}
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5476, file: !5477, line: 83, baseType: !689, size: 64)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5476, file: !5477, line: 84, baseType: !689, size: 64, offset: 64)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !5476, file: !5477, line: 85, baseType: !822, size: 64, offset: 128)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !5476, file: !5477, line: 86, baseType: !915, size: 64, offset: 192)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5476, file: !5477, line: 87, baseType: !915, size: 64, offset: 256)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !5476, file: !5477, line: 88, baseType: !915, size: 64, offset: 320)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5476, file: !5477, line: 90, baseType: !5486, size: 64, offset: 384)
!5486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5487, size: 64)
!5487 = !DISubroutineType(types: !5488)
!5488 = !{!97, !822, !5489}
!5489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5490, size: 64)
!5490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !142, line: 95, size: 1152, elements: !5491)
!5491 = !{!5492, !5493, !5494, !5495, !5496, !5497, !5498, !5511, !5524, !5525, !5526, !5527, !5528, !5536, !5537, !5538, !5539, !5540, !5541}
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5490, file: !142, line: 96, baseType: !689, size: 64)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5490, file: !142, line: 97, baseType: !5475, size: 64, offset: 64)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5490, file: !142, line: 99, baseType: !609, size: 64, offset: 128)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !5490, file: !142, line: 100, baseType: !689, size: 64, offset: 192)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !5490, file: !142, line: 102, baseType: !1066, size: 8, offset: 256)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !5490, file: !142, line: 103, baseType: !141, size: 32, offset: 288)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !5490, file: !142, line: 105, baseType: !5499, size: 64, offset: 320)
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5500, size: 64)
!5500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5501)
!5501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !5502, line: 262, size: 1600, elements: !5503)
!5502 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!5503 = !{!5504, !5505, !5506, !5510}
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5501, file: !5502, line: 263, baseType: !2752, size: 256)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5501, file: !5502, line: 264, baseType: !2752, size: 256, offset: 256)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !5501, file: !5502, line: 265, baseType: !5507, size: 1024, offset: 512)
!5507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 1024, elements: !5508)
!5508 = !{!5509}
!5509 = !DISubrange(count: 128)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5501, file: !5502, line: 266, baseType: !3999, size: 64, offset: 1536)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !5490, file: !142, line: 106, baseType: !5512, size: 64, offset: 384)
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 64)
!5513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5514)
!5514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !5502, line: 210, size: 256, elements: !5515)
!5515 = !{!5516, !5520, !5522, !5523}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5514, file: !5502, line: 211, baseType: !5517, size: 72)
!5517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 72, elements: !5518)
!5518 = !{!5519}
!5519 = !DISubrange(count: 9)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5514, file: !5502, line: 212, baseType: !5521, size: 64, offset: 128)
!5521 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !5502, line: 14, baseType: !528)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !5514, file: !5502, line: 213, baseType: !496, size: 32, offset: 192)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !5514, file: !5502, line: 214, baseType: !496, size: 32, offset: 224)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5490, file: !142, line: 108, baseType: !5449, size: 64, offset: 448)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5490, file: !142, line: 109, baseType: !5440, size: 64, offset: 512)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5490, file: !142, line: 110, baseType: !5449, size: 64, offset: 576)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5490, file: !142, line: 111, baseType: !5440, size: 64, offset: 640)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5490, file: !142, line: 112, baseType: !5529, size: 64, offset: 704)
!5529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5530, size: 64)
!5530 = !DISubroutineType(types: !5531)
!5531 = !{!97, !822, !5532}
!5532 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !84, line: 52, baseType: !5533)
!5533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !84, line: 50, size: 32, elements: !5534)
!5534 = !{!5535}
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5533, file: !84, line: 51, baseType: !97, size: 32)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5490, file: !142, line: 113, baseType: !5449, size: 64, offset: 768)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5490, file: !142, line: 114, baseType: !915, size: 64, offset: 832)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5490, file: !142, line: 115, baseType: !915, size: 64, offset: 896)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5490, file: !142, line: 117, baseType: !5444, size: 64, offset: 960)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !5490, file: !142, line: 118, baseType: !5440, size: 64, offset: 1024)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5490, file: !142, line: 120, baseType: !5542, size: 64, offset: 1088)
!5542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5543, size: 64)
!5543 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !142, line: 120, flags: DIFlagFwdDecl)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5476, file: !5477, line: 91, baseType: !5432, size: 64, offset: 448)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5476, file: !5477, line: 92, baseType: !5449, size: 64, offset: 512)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !5476, file: !5477, line: 93, baseType: !5440, size: 64, offset: 576)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5476, file: !5477, line: 94, baseType: !5449, size: 64, offset: 640)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5476, file: !5477, line: 95, baseType: !5440, size: 64, offset: 704)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !5476, file: !5477, line: 97, baseType: !5449, size: 64, offset: 768)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !5476, file: !5477, line: 98, baseType: !5449, size: 64, offset: 832)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5476, file: !5477, line: 100, baseType: !5529, size: 64, offset: 896)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5476, file: !5477, line: 101, baseType: !5449, size: 64, offset: 960)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !5476, file: !5477, line: 103, baseType: !5449, size: 64, offset: 1024)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !5476, file: !5477, line: 105, baseType: !5449, size: 64, offset: 1088)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5476, file: !5477, line: 107, baseType: !5444, size: 64, offset: 1152)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !5476, file: !5477, line: 109, baseType: !5557, size: 64, offset: 1216)
!5557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5558, size: 64)
!5558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5559)
!5559 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !5477, line: 109, flags: DIFlagFwdDecl)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5476, file: !5477, line: 111, baseType: !5561, size: 64, offset: 1280)
!5561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5562, size: 64)
!5562 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !5477, line: 111, flags: DIFlagFwdDecl)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !5476, file: !5477, line: 112, baseType: !1212, offset: 1344)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !5476, file: !5477, line: 114, baseType: !1066, size: 8, offset: 1344)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !823, file: !148, line: 471, baseType: !5489, size: 64, offset: 832)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !823, file: !148, line: 473, baseType: !466, size: 64, offset: 896)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !823, file: !148, line: 475, baseType: !466, size: 64, offset: 960)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !823, file: !148, line: 480, baseType: !1303, size: 192, offset: 1024)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !823, file: !148, line: 484, baseType: !5570, size: 576, offset: 1216)
!5570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !148, line: 361, size: 576, elements: !5571)
!5571 = !{!5572, !5573, !5574, !5575, !5576, !5577}
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !5570, file: !148, line: 362, baseType: !478, size: 128)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !5570, file: !148, line: 363, baseType: !478, size: 128, offset: 128)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !5570, file: !148, line: 364, baseType: !478, size: 128, offset: 256)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !5570, file: !148, line: 365, baseType: !478, size: 128, offset: 384)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !5570, file: !148, line: 366, baseType: !1066, size: 8, offset: 512)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5570, file: !148, line: 367, baseType: !147, size: 32, offset: 544)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !823, file: !148, line: 485, baseType: !5579, size: 2304, offset: 1792)
!5579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !84, line: 565, size: 2304, elements: !5580)
!5580 = !{!5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642, !5643, !5644, !5645, !5646, !5647, !5648, !5649, !5650, !5651, !5652, !5653, !5654, !5655, !5665, !5669}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !5579, file: !84, line: 566, baseType: !5532, size: 32)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !5579, file: !84, line: 567, baseType: !6, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !5579, file: !84, line: 568, baseType: !6, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !5579, file: !84, line: 569, baseType: !1066, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !5579, file: !84, line: 570, baseType: !1066, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !5579, file: !84, line: 571, baseType: !1066, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !5579, file: !84, line: 572, baseType: !1066, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !5579, file: !84, line: 573, baseType: !1066, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !5579, file: !84, line: 574, baseType: !1066, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !5579, file: !84, line: 575, baseType: !1066, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !5579, file: !84, line: 576, baseType: !1066, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !5579, file: !84, line: 577, baseType: !494, size: 32, offset: 64)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5579, file: !84, line: 578, baseType: !592, offset: 96)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5579, file: !84, line: 580, baseType: !478, size: 128, offset: 128)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !5579, file: !84, line: 581, baseType: !2342, size: 192, offset: 256)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !5579, file: !84, line: 582, baseType: !5597, size: 64, offset: 448)
!5597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5598, size: 64)
!5598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !5599, line: 43, size: 1472, elements: !5600)
!5599 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!5600 = !{!5601, !5602, !5603, !5604, !5605, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5621, !5622}
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5598, file: !5599, line: 44, baseType: !689, size: 64)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5598, file: !5599, line: 45, baseType: !97, size: 32, offset: 64)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5598, file: !5599, line: 46, baseType: !478, size: 128, offset: 128)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5598, file: !5599, line: 47, baseType: !592, offset: 256)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5598, file: !5599, line: 48, baseType: !5606, size: 64, offset: 256)
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5607 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !84, line: 533, flags: DIFlagFwdDecl)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5598, file: !5599, line: 49, baseType: !570, size: 320, offset: 320)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5598, file: !5599, line: 50, baseType: !528, size: 64, offset: 640)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !5598, file: !5599, line: 51, baseType: !1929, size: 64, offset: 704)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !5598, file: !5599, line: 52, baseType: !1929, size: 64, offset: 768)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !5598, file: !5599, line: 53, baseType: !1929, size: 64, offset: 832)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !5598, file: !5599, line: 54, baseType: !1929, size: 64, offset: 896)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !5598, file: !5599, line: 55, baseType: !1929, size: 64, offset: 960)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !5598, file: !5599, line: 56, baseType: !528, size: 64, offset: 1024)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !5598, file: !5599, line: 57, baseType: !528, size: 64, offset: 1088)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !5598, file: !5599, line: 58, baseType: !528, size: 64, offset: 1152)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !5598, file: !5599, line: 59, baseType: !528, size: 64, offset: 1216)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !5598, file: !5599, line: 60, baseType: !528, size: 64, offset: 1280)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5598, file: !5599, line: 61, baseType: !822, size: 64, offset: 1344)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5598, file: !5599, line: 62, baseType: !1066, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !5598, file: !5599, line: 63, baseType: !1066, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !5579, file: !84, line: 583, baseType: !1066, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !5579, file: !84, line: 584, baseType: !1066, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !5579, file: !84, line: 585, baseType: !1066, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !5579, file: !84, line: 586, baseType: !6, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !5579, file: !84, line: 587, baseType: !6, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !5579, file: !84, line: 592, baseType: !1921, size: 512, offset: 576)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !5579, file: !84, line: 593, baseType: !503, size: 64, offset: 1088)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5579, file: !84, line: 594, baseType: !550, size: 256, offset: 1152)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !5579, file: !84, line: 595, baseType: !2105, size: 128, offset: 1408)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !5579, file: !84, line: 596, baseType: !5606, size: 64, offset: 1536)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !5579, file: !84, line: 597, baseType: !1369, size: 32, offset: 1600)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !5579, file: !84, line: 598, baseType: !1369, size: 32, offset: 1632)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !5579, file: !84, line: 599, baseType: !6, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !5579, file: !84, line: 600, baseType: !6, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !5579, file: !84, line: 601, baseType: !6, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !5579, file: !84, line: 602, baseType: !6, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !5579, file: !84, line: 603, baseType: !6, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !5579, file: !84, line: 604, baseType: !1066, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !5579, file: !84, line: 605, baseType: !6, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !5579, file: !84, line: 606, baseType: !6, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !5579, file: !84, line: 607, baseType: !6, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !5579, file: !84, line: 608, baseType: !6, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !5579, file: !84, line: 609, baseType: !6, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !5579, file: !84, line: 610, baseType: !6, size: 32, offset: 1696)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5579, file: !84, line: 611, baseType: !154, size: 32, offset: 1728)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !5579, file: !84, line: 612, baseType: !83, size: 32, offset: 1760)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !5579, file: !84, line: 613, baseType: !97, size: 32, offset: 1792)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !5579, file: !84, line: 614, baseType: !97, size: 32, offset: 1824)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !5579, file: !84, line: 615, baseType: !503, size: 64, offset: 1856)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !5579, file: !84, line: 616, baseType: !503, size: 64, offset: 1920)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !5579, file: !84, line: 617, baseType: !503, size: 64, offset: 1984)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !5579, file: !84, line: 618, baseType: !503, size: 64, offset: 2048)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !5579, file: !84, line: 620, baseType: !5656, size: 64, offset: 2112)
!5656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5657, size: 64)
!5657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !84, line: 536, size: 256, elements: !5658)
!5658 = !{!5659, !5660, !5661, !5662}
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5657, file: !84, line: 537, baseType: !592)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5657, file: !84, line: 538, baseType: !6, size: 32)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !5657, file: !84, line: 540, baseType: !478, size: 128, offset: 64)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !5657, file: !84, line: 543, baseType: !5663, size: 64, offset: 192)
!5663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5664, size: 64)
!5664 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !84, line: 534, flags: DIFlagFwdDecl)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !5579, file: !84, line: 621, baseType: !5666, size: 64, offset: 2176)
!5666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5667, size: 64)
!5667 = !DISubroutineType(types: !5668)
!5668 = !{null, !822, !2063}
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !5579, file: !84, line: 622, baseType: !5670, size: 64, offset: 2240)
!5670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5671, size: 64)
!5671 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !84, line: 622, flags: DIFlagFwdDecl)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !823, file: !148, line: 486, baseType: !5673, size: 64, offset: 4096)
!5673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5674, size: 64)
!5674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !84, line: 642, size: 1792, elements: !5675)
!5675 = !{!5676, !5677, !5678, !5682, !5683, !5684}
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5674, file: !84, line: 643, baseType: !5446, size: 1472)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5674, file: !84, line: 644, baseType: !5449, size: 64, offset: 1472)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5674, file: !84, line: 645, baseType: !5679, size: 64, offset: 1536)
!5679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5680, size: 64)
!5680 = !DISubroutineType(types: !5681)
!5681 = !{null, !822, !1066}
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5674, file: !84, line: 646, baseType: !5449, size: 64, offset: 1600)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !5674, file: !84, line: 647, baseType: !5440, size: 64, offset: 1664)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !5674, file: !84, line: 648, baseType: !5440, size: 64, offset: 1728)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !823, file: !148, line: 493, baseType: !5686, size: 64, offset: 4160)
!5686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5687, size: 64)
!5687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !162, line: 162, size: 1088, elements: !5688)
!5688 = !{!5689, !5690, !5691, !6018, !6019, !6020, !6021, !6022, !6023, !6148, !6149, !6150, !6151, !6152, !6153, !6154}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5687, file: !162, line: 163, baseType: !478, size: 128)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5687, file: !162, line: 164, baseType: !689, size: 64, offset: 128)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5687, file: !162, line: 165, baseType: !5692, size: 64, offset: 192)
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5693, size: 64)
!5693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5694)
!5694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !162, line: 105, size: 640, elements: !5695)
!5695 = !{!5696, !5814, !5825, !5830, !5834, !5840, !5844, !5848, !6010, !6014}
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5694, file: !162, line: 106, baseType: !5697, size: 64)
!5697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5698, size: 64)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!97, !5686, !5700, !161}
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64)
!5701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !5702, line: 51, size: 1344, elements: !5703)
!5702 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!5703 = !{!5704, !5705, !5707, !5708, !5798, !5807, !5808, !5809, !5810, !5811, !5812, !5813}
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5701, file: !5702, line: 52, baseType: !689, size: 64)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !5701, file: !5702, line: 53, baseType: !5706, size: 32, offset: 64)
!5706 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !5702, line: 28, baseType: !494)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !5701, file: !5702, line: 54, baseType: !689, size: 64, offset: 128)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5701, file: !5702, line: 55, baseType: !5709, size: 192, offset: 192)
!5709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !5710, line: 17, size: 192, elements: !5711)
!5710 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!5711 = !{!5712, !5714, !5797}
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !5709, file: !5710, line: 18, baseType: !5713, size: 64)
!5713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5709, size: 64)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5709, file: !5710, line: 19, baseType: !5715, size: 64, offset: 64)
!5715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5716, size: 64)
!5716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5717)
!5717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !5710, line: 110, size: 1152, elements: !5718)
!5718 = !{!5719, !5723, !5727, !5733, !5739, !5743, !5747, !5752, !5756, !5757, !5761, !5765, !5769, !5780, !5781, !5782, !5783, !5793}
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5717, file: !5710, line: 111, baseType: !5720, size: 64)
!5720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5721, size: 64)
!5721 = !DISubroutineType(types: !5722)
!5722 = !{!5713, !5713}
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5717, file: !5710, line: 112, baseType: !5724, size: 64, offset: 64)
!5724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5725, size: 64)
!5725 = !DISubroutineType(types: !5726)
!5726 = !{null, !5713}
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !5717, file: !5710, line: 113, baseType: !5728, size: 64, offset: 128)
!5728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5729, size: 64)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{!1066, !5731}
!5731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5732, size: 64)
!5732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5709)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !5717, file: !5710, line: 114, baseType: !5734, size: 64, offset: 192)
!5734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5735, size: 64)
!5735 = !DISubroutineType(types: !5736)
!5736 = !{!3999, !5731, !5737}
!5737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5738, size: 64)
!5738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !823)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !5717, file: !5710, line: 116, baseType: !5740, size: 64, offset: 256)
!5740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5741, size: 64)
!5741 = !DISubroutineType(types: !5742)
!5742 = !{!1066, !5731, !689}
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !5717, file: !5710, line: 118, baseType: !5744, size: 64, offset: 320)
!5744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5745, size: 64)
!5745 = !DISubroutineType(types: !5746)
!5746 = !{!97, !5731, !689, !6, !466, !909}
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !5717, file: !5710, line: 123, baseType: !5748, size: 64, offset: 384)
!5748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5749, size: 64)
!5749 = !DISubroutineType(types: !5750)
!5750 = !{!97, !5731, !689, !5751, !909}
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !5717, file: !5710, line: 126, baseType: !5753, size: 64, offset: 448)
!5753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5754, size: 64)
!5754 = !DISubroutineType(types: !5755)
!5755 = !{!689, !5731}
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !5717, file: !5710, line: 127, baseType: !5753, size: 64, offset: 512)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !5717, file: !5710, line: 128, baseType: !5758, size: 64, offset: 576)
!5758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5759, size: 64)
!5759 = !DISubroutineType(types: !5760)
!5760 = !{!5713, !5731}
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !5717, file: !5710, line: 130, baseType: !5762, size: 64, offset: 640)
!5762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5763, size: 64)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{!5713, !5731, !5713}
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !5717, file: !5710, line: 133, baseType: !5766, size: 64, offset: 704)
!5766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5767, size: 64)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!5713, !5731, !689}
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !5717, file: !5710, line: 135, baseType: !5770, size: 64, offset: 768)
!5770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5771, size: 64)
!5771 = !DISubroutineType(types: !5772)
!5772 = !{!97, !5731, !689, !689, !6, !6, !5773}
!5773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5774, size: 64)
!5774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !5710, line: 43, size: 640, elements: !5775)
!5775 = !{!5776, !5777, !5778}
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5774, file: !5710, line: 44, baseType: !5713, size: 64)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !5774, file: !5710, line: 45, baseType: !6, size: 32, offset: 64)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5774, file: !5710, line: 46, baseType: !5779, size: 512, offset: 128)
!5779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 512, elements: !1959)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !5717, file: !5710, line: 140, baseType: !5762, size: 64, offset: 832)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !5717, file: !5710, line: 143, baseType: !5758, size: 64, offset: 896)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !5717, file: !5710, line: 145, baseType: !5720, size: 64, offset: 960)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !5717, file: !5710, line: 146, baseType: !5784, size: 64, offset: 1024)
!5784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5785, size: 64)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{!97, !5731, !5787}
!5787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5788, size: 64)
!5788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !5710, line: 29, size: 128, elements: !5789)
!5789 = !{!5790, !5791, !5792}
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5788, file: !5710, line: 30, baseType: !6, size: 32)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5788, file: !5710, line: 31, baseType: !6, size: 32, offset: 32)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !5788, file: !5710, line: 32, baseType: !5731, size: 64, offset: 64)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !5717, file: !5710, line: 148, baseType: !5794, size: 64, offset: 1088)
!5794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5795, size: 64)
!5795 = !DISubroutineType(types: !5796)
!5796 = !{!97, !5731, !822}
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5709, file: !5710, line: 20, baseType: !822, size: 64, offset: 128)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5701, file: !5702, line: 57, baseType: !5799, size: 64, offset: 384)
!5799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5800, size: 64)
!5800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !5702, line: 31, size: 704, elements: !5801)
!5801 = !{!5802, !5803, !5804, !5805, !5806}
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5800, file: !5702, line: 32, baseType: !708, size: 64)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5800, file: !5702, line: 33, baseType: !97, size: 32, offset: 64)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5800, file: !5702, line: 34, baseType: !466, size: 64, offset: 128)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5800, file: !5702, line: 35, baseType: !5799, size: 64, offset: 192)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5800, file: !5702, line: 43, baseType: !930, size: 448, offset: 256)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !5701, file: !5702, line: 58, baseType: !5799, size: 64, offset: 448)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5701, file: !5702, line: 59, baseType: !5700, size: 64, offset: 512)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5701, file: !5702, line: 60, baseType: !5700, size: 64, offset: 576)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5701, file: !5702, line: 61, baseType: !5700, size: 64, offset: 640)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5701, file: !5702, line: 63, baseType: !826, size: 512, offset: 704)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5701, file: !5702, line: 65, baseType: !528, size: 64, offset: 1216)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5701, file: !5702, line: 66, baseType: !466, size: 64, offset: 1280)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !5694, file: !162, line: 108, baseType: !5815, size: 64, offset: 64)
!5815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5816, size: 64)
!5816 = !DISubroutineType(types: !5817)
!5817 = !{!97, !5686, !5818, !161}
!5818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5819, size: 64)
!5819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !162, line: 63, size: 640, elements: !5820)
!5820 = !{!5821, !5822, !5823}
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5819, file: !162, line: 64, baseType: !5713, size: 64)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !5819, file: !162, line: 65, baseType: !97, size: 32, offset: 64)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !5819, file: !162, line: 66, baseType: !5824, size: 512, offset: 96)
!5824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 512, elements: !2520)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5694, file: !162, line: 110, baseType: !5826, size: 64, offset: 128)
!5826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5827, size: 64)
!5827 = !DISubroutineType(types: !5828)
!5828 = !{!97, !5686, !6, !5829}
!5829 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !479, line: 164, baseType: !528)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !5694, file: !162, line: 111, baseType: !5831, size: 64, offset: 192)
!5831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5832, size: 64)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{null, !5686, !6}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !5694, file: !162, line: 112, baseType: !5835, size: 64, offset: 256)
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 64)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{!97, !5686, !5700, !5838, !6, !680, !527}
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5839, size: 64)
!5839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5694, file: !162, line: 117, baseType: !5841, size: 64, offset: 320)
!5841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5842, size: 64)
!5842 = !DISubroutineType(types: !5843)
!5843 = !{!97, !5686, !6, !6, !466}
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5694, file: !162, line: 119, baseType: !5845, size: 64, offset: 384)
!5845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5846, size: 64)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{null, !5686, !6, !6}
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5694, file: !162, line: 121, baseType: !5849, size: 64, offset: 448)
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{!97, !5686, !5852, !1066}
!5852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5853, size: 64)
!5853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !183, line: 175, size: 448, elements: !5854)
!5854 = !{!5855, !5856, !5857, !5858, !5930, !6007, !6008, !6009}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5853, file: !183, line: 176, baseType: !494, size: 32)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5853, file: !183, line: 177, baseType: !6, size: 32, offset: 32)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !5853, file: !183, line: 178, baseType: !528, size: 64, offset: 64)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !5853, file: !183, line: 179, baseType: !5859, size: 64, offset: 128)
!5859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5860, size: 64)
!5860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !183, line: 145, size: 256, elements: !5861)
!5861 = !{!5862, !5863, !5864, !5927}
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !5860, file: !183, line: 146, baseType: !6, size: 32)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !5860, file: !183, line: 150, baseType: !466, size: 64, offset: 64)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !5860, file: !183, line: 151, baseType: !5865, size: 64, offset: 128)
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5866, size: 64)
!5866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !818, line: 85, size: 768, elements: !5867)
!5867 = !{!5868, !5869, !5870, !5871, !5872, !5878, !5884, !5888, !5889}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5866, file: !818, line: 87, baseType: !478, size: 128)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5866, file: !818, line: 88, baseType: !6, size: 32, offset: 128)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "nvec_used", scope: !5866, file: !818, line: 89, baseType: !6, size: 32, offset: 160)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5866, file: !818, line: 90, baseType: !822, size: 64, offset: 192)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !5866, file: !818, line: 91, baseType: !5873, size: 96, offset: 256)
!5873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !818, line: 8, size: 96, elements: !5874)
!5874 = !{!5875, !5876, !5877}
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "address_lo", scope: !5873, file: !818, line: 9, baseType: !494, size: 32)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "address_hi", scope: !5873, file: !818, line: 10, baseType: !494, size: 32, offset: 32)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5873, file: !818, line: 11, baseType: !494, size: 32, offset: 64)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !5866, file: !818, line: 92, baseType: !5879, size: 64, offset: 384)
!5879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5880, size: 64)
!5880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_affinity_desc", file: !176, line: 308, size: 128, elements: !5881)
!5881 = !{!5882, !5883}
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5880, file: !176, line: 309, baseType: !531, size: 64)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !5880, file: !176, line: 310, baseType: !6, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg", scope: !5866, file: !818, line: 97, baseType: !5885, size: 64, offset: 448)
!5885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5886, size: 64)
!5886 = !DISubroutineType(types: !5887)
!5887 = !{null, !5865, !466}
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg_data", scope: !5866, file: !818, line: 98, baseType: !466, size: 64, offset: 512)
!5889 = !DIDerivedType(tag: DW_TAG_member, scope: !5866, file: !818, line: 100, baseType: !5890, size: 192, offset: 576)
!5890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5866, file: !818, line: 100, size: 192, elements: !5891)
!5891 = !{!5892, !5912, !5919, !5923}
!5892 = !DIDerivedType(tag: DW_TAG_member, scope: !5890, file: !818, line: 102, baseType: !5893, size: 192)
!5893 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5890, file: !818, line: 102, size: 192, elements: !5894)
!5894 = !{!5895, !5896, !5907}
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "masked", scope: !5893, file: !818, line: 103, baseType: !494, size: 32)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "msi_attrib", scope: !5893, file: !818, line: 113, baseType: !5897, size: 64, offset: 32)
!5897 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5893, file: !818, line: 104, size: 64, elements: !5898)
!5898 = !{!5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906}
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "is_msix", scope: !5897, file: !818, line: 105, baseType: !648, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "multiple", scope: !5897, file: !818, line: 106, baseType: !648, size: 3, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "multi_cap", scope: !5897, file: !818, line: 107, baseType: !648, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "maskbit", scope: !5897, file: !818, line: 108, baseType: !648, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "is_64", scope: !5897, file: !818, line: 109, baseType: !648, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtual", scope: !5897, file: !818, line: 110, baseType: !648, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "entry_nr", scope: !5897, file: !818, line: 111, baseType: !521, size: 16, offset: 16)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "default_irq", scope: !5897, file: !818, line: 112, baseType: !6, size: 32, offset: 32)
!5907 = !DIDerivedType(tag: DW_TAG_member, scope: !5893, file: !818, line: 114, baseType: !5908, size: 64, offset: 128)
!5908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5893, file: !818, line: 114, size: 64, elements: !5909)
!5909 = !{!5910, !5911}
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pos", scope: !5908, file: !818, line: 115, baseType: !648, size: 8)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "mask_base", scope: !5908, file: !818, line: 116, baseType: !466, size: 64)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "platform", scope: !5890, file: !818, line: 127, baseType: !5913, size: 128)
!5913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_desc", file: !818, line: 37, size: 128, elements: !5914)
!5914 = !{!5915, !5918}
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "msi_priv_data", scope: !5913, file: !818, line: 38, baseType: !5916, size: 64)
!5916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5917, size: 64)
!5917 = !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_priv_data", file: !818, line: 19, flags: DIFlagFwdDecl)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !5913, file: !818, line: 39, baseType: !521, size: 16, offset: 64)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "fsl_mc", scope: !5890, file: !818, line: 128, baseType: !5920, size: 16)
!5920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_msi_desc", file: !818, line: 46, size: 16, elements: !5921)
!5921 = !{!5922}
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !5920, file: !818, line: 47, baseType: !521, size: 16)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "inta", scope: !5890, file: !818, line: 129, baseType: !5924, size: 16)
!5924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ti_sci_inta_msi_desc", file: !818, line: 54, size: 16, elements: !5925)
!5925 = !{!5926}
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index", scope: !5924, file: !818, line: 55, baseType: !521, size: 16)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !5860, file: !183, line: 152, baseType: !5928, size: 64, offset: 192)
!5928 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !532, line: 756, baseType: !5929)
!5929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 64, elements: !536)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !5853, file: !183, line: 180, baseType: !5931, size: 64, offset: 192)
!5931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5932, size: 64)
!5932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !183, line: 503, size: 2304, elements: !5933)
!5933 = !{!5934, !5935, !5936, !5940, !5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5955, !5959, !5963, !5964, !5965, !5966, !5967, !5968, !5969, !5970, !5971, !5972, !5976, !5977, !5978, !5983, !5984, !5988, !5992, !5996, !6000, !6004, !6005, !6006}
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !5932, file: !183, line: 504, baseType: !822, size: 64)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5932, file: !183, line: 505, baseType: !689, size: 64, offset: 64)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !5932, file: !183, line: 506, baseType: !5937, size: 64, offset: 128)
!5937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5938, size: 64)
!5938 = !DISubroutineType(types: !5939)
!5939 = !{!6, !5852}
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !5932, file: !183, line: 507, baseType: !5941, size: 64, offset: 192)
!5941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5942, size: 64)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{null, !5852}
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !5932, file: !183, line: 508, baseType: !5941, size: 64, offset: 256)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !5932, file: !183, line: 509, baseType: !5941, size: 64, offset: 320)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !5932, file: !183, line: 511, baseType: !5941, size: 64, offset: 384)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !5932, file: !183, line: 512, baseType: !5941, size: 64, offset: 448)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !5932, file: !183, line: 513, baseType: !5941, size: 64, offset: 512)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !5932, file: !183, line: 514, baseType: !5941, size: 64, offset: 576)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !5932, file: !183, line: 515, baseType: !5941, size: 64, offset: 640)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !5932, file: !183, line: 517, baseType: !5952, size: 64, offset: 704)
!5952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5953, size: 64)
!5953 = !DISubroutineType(types: !5954)
!5954 = !{!97, !5852, !529, !1066}
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !5932, file: !183, line: 518, baseType: !5956, size: 64, offset: 768)
!5956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5957, size: 64)
!5957 = !DISubroutineType(types: !5958)
!5958 = !{!97, !5852}
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !5932, file: !183, line: 519, baseType: !5960, size: 64, offset: 832)
!5960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5961, size: 64)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{!97, !5852, !6}
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !5932, file: !183, line: 520, baseType: !5960, size: 64, offset: 896)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !5932, file: !183, line: 522, baseType: !5941, size: 64, offset: 960)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !5932, file: !183, line: 523, baseType: !5941, size: 64, offset: 1024)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !5932, file: !183, line: 525, baseType: !5941, size: 64, offset: 1088)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !5932, file: !183, line: 526, baseType: !5941, size: 64, offset: 1152)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !5932, file: !183, line: 528, baseType: !5941, size: 64, offset: 1216)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !5932, file: !183, line: 529, baseType: !5941, size: 64, offset: 1280)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !5932, file: !183, line: 530, baseType: !5941, size: 64, offset: 1344)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !5932, file: !183, line: 532, baseType: !5941, size: 64, offset: 1408)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !5932, file: !183, line: 534, baseType: !5973, size: 64, offset: 1472)
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{null, !5852, !1291}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !5932, file: !183, line: 535, baseType: !5956, size: 64, offset: 1536)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !5932, file: !183, line: 536, baseType: !5941, size: 64, offset: 1600)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !5932, file: !183, line: 538, baseType: !5979, size: 64, offset: 1664)
!5979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5980, size: 64)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{null, !5852, !5982}
!5982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5873, size: 64)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !5932, file: !183, line: 539, baseType: !5979, size: 64, offset: 1728)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !5932, file: !183, line: 541, baseType: !5985, size: 64, offset: 1792)
!5985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5986, size: 64)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{!97, !5852, !175, !1528}
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !5932, file: !183, line: 542, baseType: !5989, size: 64, offset: 1856)
!5989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5990, size: 64)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{!97, !5852, !175, !1066}
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !5932, file: !183, line: 544, baseType: !5993, size: 64, offset: 1920)
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5994, size: 64)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!97, !5852, !466}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !5932, file: !183, line: 546, baseType: !5997, size: 64, offset: 1984)
!5997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5998, size: 64)
!5998 = !DISubroutineType(types: !5999)
!5999 = !{null, !5852, !6}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !5932, file: !183, line: 547, baseType: !6001, size: 64, offset: 2048)
!6001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6002, size: 64)
!6002 = !DISubroutineType(types: !6003)
!6003 = !{null, !5852, !529}
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !5932, file: !183, line: 549, baseType: !5956, size: 64, offset: 2112)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !5932, file: !183, line: 550, baseType: !5941, size: 64, offset: 2176)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5932, file: !183, line: 552, baseType: !528, size: 64, offset: 2240)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !5853, file: !183, line: 181, baseType: !5686, size: 64, offset: 256)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !5853, file: !183, line: 183, baseType: !5852, size: 64, offset: 320)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !5853, file: !183, line: 185, baseType: !466, size: 64, offset: 384)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !5694, file: !162, line: 122, baseType: !6011, size: 64, offset: 512)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6012, size: 64)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{null, !5686, !5852}
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !5694, file: !162, line: 123, baseType: !6015, size: 64, offset: 576)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!97, !5686, !5818, !680, !527}
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !5687, file: !162, line: 166, baseType: !466, size: 64, offset: 256)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5687, file: !162, line: 167, baseType: !6, size: 32, offset: 320)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !5687, file: !162, line: 168, baseType: !6, size: 32, offset: 352)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5687, file: !162, line: 171, baseType: !5713, size: 64, offset: 384)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !5687, file: !162, line: 172, baseType: !161, size: 32, offset: 448)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !5687, file: !162, line: 173, baseType: !6024, size: 64, offset: 512)
!6024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6025, size: 64)
!6025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !183, line: 1101, size: 192, elements: !6026)
!6026 = !{!6027, !6028, !6029, !6030, !6031, !6032}
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !6025, file: !183, line: 1102, baseType: !6, size: 32)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !6025, file: !183, line: 1103, baseType: !6, size: 32, offset: 32)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !6025, file: !183, line: 1104, baseType: !6, size: 32, offset: 64)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !6025, file: !183, line: 1105, baseType: !6, size: 32, offset: 96)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !6025, file: !183, line: 1106, baseType: !182, size: 32, offset: 128)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !6025, file: !183, line: 1107, baseType: !6033, offset: 192)
!6033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6034, elements: !2814)
!6034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6035, size: 64)
!6035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !183, line: 1051, size: 960, elements: !6036)
!6036 = !{!6037, !6038, !6039, !6043, !6047, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058, !6059, !6060, !6061, !6062, !6063, !6064, !6065}
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6035, file: !183, line: 1052, baseType: !1395)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !6035, file: !183, line: 1053, baseType: !466, size: 64)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !6035, file: !183, line: 1054, baseType: !6040, size: 64, offset: 64)
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6041, size: 64)
!6041 = !DISubroutineType(types: !6042)
!6042 = !{!494, !466}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !6035, file: !183, line: 1055, baseType: !6044, size: 64, offset: 128)
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{null, !494, !466}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6035, file: !183, line: 1056, baseType: !6048, size: 64, offset: 192)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{null, !6034}
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6035, file: !183, line: 1057, baseType: !6048, size: 64, offset: 256)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !6035, file: !183, line: 1058, baseType: !6, size: 32, offset: 320)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !6035, file: !183, line: 1059, baseType: !6, size: 32, offset: 352)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !6035, file: !183, line: 1060, baseType: !494, size: 32, offset: 384)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !6035, file: !183, line: 1061, baseType: !494, size: 32, offset: 416)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !6035, file: !183, line: 1062, baseType: !494, size: 32, offset: 448)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !6035, file: !183, line: 1063, baseType: !494, size: 32, offset: 480)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !6035, file: !183, line: 1064, baseType: !494, size: 32, offset: 512)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !6035, file: !183, line: 1065, baseType: !6, size: 32, offset: 544)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6035, file: !183, line: 1066, baseType: !466, size: 64, offset: 576)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !6035, file: !183, line: 1067, baseType: !528, size: 64, offset: 640)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6035, file: !183, line: 1068, baseType: !528, size: 64, offset: 704)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !6035, file: !183, line: 1069, baseType: !5686, size: 64, offset: 768)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6035, file: !183, line: 1070, baseType: !478, size: 128, offset: 832)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !6035, file: !183, line: 1071, baseType: !6066, offset: 960)
!6066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6067, elements: !2814)
!6067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !183, line: 1009, size: 2944, elements: !6068)
!6068 = !{!6069, !6070, !6080, !6145, !6146, !6147}
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !6067, file: !183, line: 1010, baseType: !5932, size: 2304)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6067, file: !183, line: 1011, baseType: !6071, size: 448, offset: 2304)
!6071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !183, line: 986, size: 448, elements: !6072)
!6072 = !{!6073, !6074, !6075, !6076, !6077, !6078, !6079}
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !6071, file: !183, line: 987, baseType: !528, size: 64)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !6071, file: !183, line: 988, baseType: !528, size: 64, offset: 64)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6071, file: !183, line: 989, baseType: !528, size: 64, offset: 128)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !6071, file: !183, line: 990, baseType: !528, size: 64, offset: 192)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !6071, file: !183, line: 991, baseType: !528, size: 64, offset: 256)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6071, file: !183, line: 992, baseType: !528, size: 64, offset: 320)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !6071, file: !183, line: 993, baseType: !528, size: 64, offset: 384)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !6067, file: !183, line: 1012, baseType: !6081, size: 64, offset: 2752)
!6081 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !6082, line: 12, baseType: !6083)
!6082 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!6083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6084, size: 64)
!6084 = !DISubroutineType(types: !6085)
!6085 = !{null, !6086}
!6086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6087, size: 64)
!6087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !6088, line: 55, size: 2880, elements: !6089)
!6088 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!6089 = !{!6090, !6091, !6092, !6093, !6094, !6118, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6140, !6141, !6142, !6143, !6144}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !6087, file: !6088, line: 56, baseType: !5860, size: 256)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !6087, file: !6088, line: 57, baseType: !5853, size: 448, offset: 256)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !6087, file: !6088, line: 58, baseType: !527, size: 64, offset: 704)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !6087, file: !6088, line: 59, baseType: !6081, size: 64, offset: 768)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !6087, file: !6088, line: 60, baseType: !6095, size: 64, offset: 832)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !176, line: 110, size: 768, elements: !6097)
!6097 = !{!6098, !6104, !6105, !6106, !6107, !6108, !6109, !6110, !6111, !6112, !6113, !6114, !6115}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !6096, file: !176, line: 111, baseType: !6099, size: 64)
!6099 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !176, line: 92, baseType: !6100)
!6100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6101, size: 64)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{!6103, !97, !466}
!6103 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !191, line: 17, baseType: !190)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !6096, file: !176, line: 112, baseType: !466, size: 64, offset: 64)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !6096, file: !176, line: 113, baseType: !466, size: 64, offset: 128)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6096, file: !176, line: 114, baseType: !6095, size: 64, offset: 192)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !6096, file: !176, line: 115, baseType: !6099, size: 64, offset: 256)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !6096, file: !176, line: 116, baseType: !1845, size: 64, offset: 320)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6096, file: !176, line: 117, baseType: !6095, size: 64, offset: 384)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !6096, file: !176, line: 118, baseType: !6, size: 32, offset: 448)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6096, file: !176, line: 119, baseType: !6, size: 32, offset: 480)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !6096, file: !176, line: 120, baseType: !528, size: 64, offset: 512)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !6096, file: !176, line: 121, baseType: !528, size: 64, offset: 576)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6096, file: !176, line: 122, baseType: !689, size: 64, offset: 640)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6096, file: !176, line: 123, baseType: !6116, size: 64, offset: 704)
!6116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6117, size: 64)
!6117 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !176, line: 123, flags: DIFlagFwdDecl)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !6087, file: !6088, line: 61, baseType: !6, size: 32, offset: 896)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !6087, file: !6088, line: 62, baseType: !6, size: 32, offset: 928)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !6087, file: !6088, line: 63, baseType: !6, size: 32, offset: 960)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !6087, file: !6088, line: 64, baseType: !6, size: 32, offset: 992)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !6087, file: !6088, line: 65, baseType: !6, size: 32, offset: 1024)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !6087, file: !6088, line: 66, baseType: !6, size: 32, offset: 1056)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !6087, file: !6088, line: 67, baseType: !528, size: 64, offset: 1088)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !6087, file: !6088, line: 68, baseType: !6, size: 32, offset: 1152)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !6087, file: !6088, line: 69, baseType: !1369, size: 32, offset: 1184)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !6087, file: !6088, line: 70, baseType: !97, size: 32, offset: 1216)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6087, file: !6088, line: 71, baseType: !1395, offset: 1248)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !6087, file: !6088, line: 72, baseType: !678, size: 64, offset: 1280)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !6087, file: !6088, line: 73, baseType: !529, size: 64, offset: 1344)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !6087, file: !6088, line: 81, baseType: !528, size: 64, offset: 1408)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !6087, file: !6088, line: 82, baseType: !1369, size: 32, offset: 1472)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !6087, file: !6088, line: 83, baseType: !2105, size: 128, offset: 1536)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !6087, file: !6088, line: 85, baseType: !6, size: 32, offset: 1664)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !6087, file: !6088, line: 86, baseType: !6, size: 32, offset: 1696)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !6087, file: !6088, line: 87, baseType: !6, size: 32, offset: 1728)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !6087, file: !6088, line: 88, baseType: !6, size: 32, offset: 1760)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6087, file: !6088, line: 91, baseType: !6116, size: 64, offset: 1792)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6087, file: !6088, line: 98, baseType: !952, size: 128, align: 64, offset: 1856)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6087, file: !6088, line: 99, baseType: !826, size: 512, offset: 1984)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !6087, file: !6088, line: 101, baseType: !1303, size: 192, offset: 2496)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !6087, file: !6088, line: 102, baseType: !97, size: 32, offset: 2688)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6087, file: !6088, line: 103, baseType: !609, size: 64, offset: 2752)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6087, file: !6088, line: 104, baseType: !689, size: 64, offset: 2816)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6067, file: !183, line: 1013, baseType: !494, size: 32, offset: 2816)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !6067, file: !183, line: 1014, baseType: !494, size: 32, offset: 2848)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !6067, file: !183, line: 1015, baseType: !810, size: 64, offset: 2880)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5687, file: !162, line: 175, baseType: !5686, size: 64, offset: 576)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !5687, file: !162, line: 182, baseType: !5829, size: 64, offset: 640)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !5687, file: !162, line: 183, baseType: !6, size: 32, offset: 704)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !5687, file: !162, line: 184, baseType: !6, size: 32, offset: 736)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !5687, file: !162, line: 185, baseType: !1361, size: 128, offset: 768)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !5687, file: !162, line: 186, baseType: !1303, size: 192, offset: 896)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !5687, file: !162, line: 187, baseType: !6155, offset: 1088)
!6155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, elements: !2814)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !823, file: !148, line: 499, baseType: !478, size: 128, offset: 4224)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !823, file: !148, line: 502, baseType: !6158, size: 64, offset: 4352)
!6158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6159, size: 64)
!6159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6160)
!6160 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !148, line: 502, flags: DIFlagFwdDecl)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !823, file: !148, line: 504, baseType: !6162, size: 64, offset: 4416)
!6162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !823, file: !148, line: 505, baseType: !503, size: 64, offset: 4480)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !823, file: !148, line: 510, baseType: !503, size: 64, offset: 4544)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !823, file: !148, line: 511, baseType: !6166, size: 64, offset: 4608)
!6166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6167, size: 64)
!6167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6168)
!6168 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !148, line: 511, flags: DIFlagFwdDecl)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !823, file: !148, line: 513, baseType: !6170, size: 64, offset: 4672)
!6170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 64)
!6171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !148, line: 288, size: 128, elements: !6172)
!6172 = !{!6173, !6174}
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6171, file: !148, line: 293, baseType: !6, size: 32)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6171, file: !148, line: 294, baseType: !528, size: 64, offset: 64)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !823, file: !148, line: 515, baseType: !478, size: 128, offset: 4736)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !823, file: !148, line: 526, baseType: !6177, offset: 4864)
!6177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6178, line: 5, elements: !606)
!6178 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !823, file: !148, line: 528, baseType: !5700, size: 64, offset: 4864)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !823, file: !148, line: 529, baseType: !5713, size: 64, offset: 4928)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !823, file: !148, line: 534, baseType: !1089, size: 32, offset: 4992)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !823, file: !148, line: 535, baseType: !494, size: 32, offset: 5024)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !823, file: !148, line: 537, baseType: !592, offset: 5056)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !823, file: !148, line: 538, baseType: !478, size: 128, offset: 5056)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !823, file: !148, line: 540, baseType: !6186, size: 64, offset: 5184)
!6186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6187, size: 64)
!6187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6188, line: 54, size: 960, elements: !6189)
!6188 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6189 = !{!6190, !6191, !6192, !6193, !6194, !6195, !6196, !6200, !6204, !6205, !6206, !6207, !6211, !6215, !6216}
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6187, file: !6188, line: 55, baseType: !689, size: 64)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6187, file: !6188, line: 56, baseType: !609, size: 64, offset: 64)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6187, file: !6188, line: 58, baseType: !915, size: 64, offset: 128)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6187, file: !6188, line: 59, baseType: !915, size: 64, offset: 192)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6187, file: !6188, line: 60, baseType: !832, size: 64, offset: 256)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6187, file: !6188, line: 62, baseType: !5432, size: 64, offset: 320)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6187, file: !6188, line: 63, baseType: !6197, size: 64, offset: 384)
!6197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6198, size: 64)
!6198 = !DISubroutineType(types: !6199)
!6199 = !{!708, !822, !2977}
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6187, file: !6188, line: 65, baseType: !6201, size: 64, offset: 448)
!6201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6202, size: 64)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{null, !6186}
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6187, file: !6188, line: 66, baseType: !5440, size: 64, offset: 512)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6187, file: !6188, line: 68, baseType: !5449, size: 64, offset: 576)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6187, file: !6188, line: 70, baseType: !5260, size: 64, offset: 640)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6187, file: !6188, line: 71, baseType: !6208, size: 64, offset: 704)
!6208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6209, size: 64)
!6209 = !DISubroutineType(types: !6210)
!6210 = !{!3999, !822}
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6187, file: !6188, line: 73, baseType: !6212, size: 64, offset: 768)
!6212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6213, size: 64)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{null, !822, !2367, !2368}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6187, file: !6188, line: 75, baseType: !5444, size: 64, offset: 832)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6187, file: !6188, line: 77, baseType: !5561, size: 64, offset: 896)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !823, file: !148, line: 541, baseType: !915, size: 64, offset: 5248)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !823, file: !148, line: 543, baseType: !5440, size: 64, offset: 5312)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !823, file: !148, line: 544, baseType: !6220, size: 64, offset: 5376)
!6220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6221, size: 64)
!6221 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !148, line: 45, flags: DIFlagFwdDecl)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !823, file: !148, line: 545, baseType: !6223, size: 64, offset: 5440)
!6223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6224, size: 64)
!6224 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !148, line: 47, flags: DIFlagFwdDecl)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !823, file: !148, line: 547, baseType: !1066, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !823, file: !148, line: 548, baseType: !1066, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !823, file: !148, line: 549, baseType: !1066, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !823, file: !148, line: 550, baseType: !1066, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !817, file: !818, line: 233, baseType: !5700, size: 64, offset: 128)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !817, file: !818, line: 234, baseType: !478, size: 128, offset: 192)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "setup_irq", scope: !817, file: !818, line: 236, baseType: !6232, size: 64, offset: 320)
!6232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6233, size: 64)
!6233 = !DISubroutineType(types: !6234)
!6234 = !{!97, !816, !755, !5865}
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "setup_irqs", scope: !817, file: !818, line: 238, baseType: !6236, size: 64, offset: 384)
!6236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6237, size: 64)
!6237 = !DISubroutineType(types: !6238)
!6238 = !{!97, !816, !755, !97, !97}
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "teardown_irq", scope: !817, file: !818, line: 240, baseType: !6240, size: 64, offset: 448)
!6240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6241, size: 64)
!6241 = !DISubroutineType(types: !6242)
!6242 = !{null, !816, !6}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !762, file: !757, line: 619, baseType: !466, size: 64, offset: 1664)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !762, file: !757, line: 620, baseType: !6116, size: 64, offset: 1728)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !762, file: !757, line: 622, baseType: !517, size: 8, offset: 1792)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !762, file: !757, line: 623, baseType: !517, size: 8, offset: 1800)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !762, file: !757, line: 624, baseType: !517, size: 8, offset: 1808)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !762, file: !757, line: 625, baseType: !517, size: 8, offset: 1816)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !762, file: !757, line: 630, baseType: !6250, size: 384, offset: 1824)
!6250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 384, elements: !6251)
!6251 = !{!6252}
!6252 = !DISubrange(count: 48)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !762, file: !757, line: 632, baseType: !499, size: 16, offset: 2208)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !762, file: !757, line: 633, baseType: !6255, size: 16, offset: 2224)
!6255 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !757, line: 237, baseType: !499)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !762, file: !757, line: 634, baseType: !822, size: 64, offset: 2240)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !762, file: !757, line: 635, baseType: !823, size: 5568, offset: 2304)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !762, file: !757, line: 636, baseType: !929, size: 64, offset: 7872)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !762, file: !757, line: 637, baseType: !929, size: 64, offset: 7936)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !762, file: !757, line: 638, baseType: !6, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !756, file: !757, line: 312, baseType: !761, size: 64, offset: 192)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !756, file: !757, line: 314, baseType: !466, size: 64, offset: 256)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !756, file: !757, line: 315, baseType: !6116, size: 64, offset: 320)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !756, file: !757, line: 316, baseType: !6265, size: 64, offset: 384)
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6266, size: 64)
!6266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !757, line: 69, size: 832, elements: !6267)
!6267 = !{!6268, !6269, !6270, !6273, !6274}
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6266, file: !757, line: 70, baseType: !761, size: 64)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6266, file: !757, line: 71, baseType: !478, size: 128, offset: 64)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !6266, file: !757, line: 72, baseType: !6271, size: 64, offset: 192)
!6271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6272, size: 64)
!6272 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !757, line: 72, flags: DIFlagFwdDecl)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !6266, file: !757, line: 73, baseType: !517, size: 8, offset: 256)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6266, file: !757, line: 74, baseType: !826, size: 512, offset: 320)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !756, file: !757, line: 318, baseType: !6, size: 32, offset: 448)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !756, file: !757, line: 319, baseType: !499, size: 16, offset: 480)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !756, file: !757, line: 320, baseType: !499, size: 16, offset: 496)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !756, file: !757, line: 321, baseType: !499, size: 16, offset: 512)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !756, file: !757, line: 322, baseType: !499, size: 16, offset: 528)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !756, file: !757, line: 323, baseType: !6, size: 32, offset: 544)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !756, file: !757, line: 324, baseType: !648, size: 8, offset: 576)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !756, file: !757, line: 325, baseType: !648, size: 8, offset: 584)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !756, file: !757, line: 330, baseType: !648, size: 8, offset: 592)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !756, file: !757, line: 331, baseType: !648, size: 8, offset: 600)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !756, file: !757, line: 332, baseType: !648, size: 8, offset: 608)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !756, file: !757, line: 333, baseType: !648, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !756, file: !757, line: 334, baseType: !648, size: 8, offset: 624)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !756, file: !757, line: 335, baseType: !648, size: 8, offset: 632)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !756, file: !757, line: 336, baseType: !521, size: 16, offset: 640)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !756, file: !757, line: 337, baseType: !680, size: 64, offset: 704)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !756, file: !757, line: 339, baseType: !6292, size: 64, offset: 768)
!6292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6293, size: 64)
!6293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !757, line: 858, size: 2048, elements: !6294)
!6294 = !{!6295, !6296, !6297, !6309, !6313, !6317, !6321, !6325, !6326, !6330, !6349, !6350, !6351}
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6293, file: !757, line: 859, baseType: !478, size: 128)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6293, file: !757, line: 860, baseType: !689, size: 64, offset: 128)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !6293, file: !757, line: 861, baseType: !6298, size: 64, offset: 192)
!6298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6299, size: 64)
!6299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6300)
!6300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !5502, line: 38, size: 256, elements: !6301)
!6301 = !{!6302, !6303, !6304, !6305, !6306, !6307, !6308}
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !6300, file: !5502, line: 39, baseType: !496, size: 32)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6300, file: !5502, line: 39, baseType: !496, size: 32, offset: 32)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !6300, file: !5502, line: 40, baseType: !496, size: 32, offset: 64)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !6300, file: !5502, line: 40, baseType: !496, size: 32, offset: 96)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6300, file: !5502, line: 41, baseType: !496, size: 32, offset: 128)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !6300, file: !5502, line: 41, baseType: !496, size: 32, offset: 160)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6300, file: !5502, line: 42, baseType: !5521, size: 64, offset: 192)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6293, file: !757, line: 862, baseType: !6310, size: 64, offset: 256)
!6310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6311, size: 64)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!97, !755, !6298}
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6293, file: !757, line: 863, baseType: !6314, size: 64, offset: 320)
!6314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6315, size: 64)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{null, !755}
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6293, file: !757, line: 864, baseType: !6318, size: 64, offset: 384)
!6318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6319, size: 64)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{!97, !755, !5532}
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6293, file: !757, line: 865, baseType: !6322, size: 64, offset: 448)
!6322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6323, size: 64)
!6323 = !DISubroutineType(types: !6324)
!6324 = !{!97, !755}
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6293, file: !757, line: 866, baseType: !6314, size: 64, offset: 512)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !6293, file: !757, line: 867, baseType: !6327, size: 64, offset: 576)
!6327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6328, size: 64)
!6328 = !DISubroutineType(types: !6329)
!6329 = !{!97, !755, !97}
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !6293, file: !757, line: 868, baseType: !6331, size: 64, offset: 640)
!6331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6332, size: 64)
!6332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6333)
!6333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !757, line: 795, size: 384, elements: !6334)
!6334 = !{!6335, !6341, !6345, !6346, !6347, !6348}
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !6333, file: !757, line: 797, baseType: !6336, size: 64)
!6336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6337, size: 64)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{!6339, !755, !6340}
!6339 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !757, line: 772, baseType: !6)
!6340 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !757, line: 180, baseType: !6)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !6333, file: !757, line: 801, baseType: !6342, size: 64, offset: 64)
!6342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6343, size: 64)
!6343 = !DISubroutineType(types: !6344)
!6344 = !{!6339, !755}
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !6333, file: !757, line: 804, baseType: !6342, size: 64, offset: 128)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !6333, file: !757, line: 807, baseType: !6314, size: 64, offset: 192)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !6333, file: !757, line: 808, baseType: !6314, size: 64, offset: 256)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6333, file: !757, line: 811, baseType: !6314, size: 64, offset: 320)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6293, file: !757, line: 869, baseType: !915, size: 64, offset: 704)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6293, file: !757, line: 870, baseType: !5490, size: 1152, offset: 768)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !6293, file: !757, line: 871, baseType: !6352, size: 128, offset: 1920)
!6352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !757, line: 759, size: 128, elements: !6353)
!6353 = !{!6354, !6355}
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6352, file: !757, line: 760, baseType: !592)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6352, file: !757, line: 761, baseType: !478, size: 128)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !756, file: !757, line: 340, baseType: !503, size: 64, offset: 832)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !756, file: !757, line: 346, baseType: !6171, size: 128, offset: 896)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !756, file: !757, line: 348, baseType: !6359, size: 32, offset: 1024)
!6359 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !757, line: 155, baseType: !97)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !756, file: !757, line: 351, baseType: !6, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !756, file: !757, line: 352, baseType: !648, size: 8, offset: 1064)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !756, file: !757, line: 353, baseType: !6, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !756, file: !757, line: 355, baseType: !6, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !756, file: !757, line: 356, baseType: !6, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !756, file: !757, line: 357, baseType: !6, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !756, file: !757, line: 358, baseType: !6, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !756, file: !757, line: 359, baseType: !6, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !756, file: !757, line: 360, baseType: !6, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !756, file: !757, line: 361, baseType: !6, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !756, file: !757, line: 362, baseType: !6, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !756, file: !757, line: 364, baseType: !6, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !756, file: !757, line: 365, baseType: !6, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !756, file: !757, line: 369, baseType: !6, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !756, file: !757, line: 370, baseType: !6, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !756, file: !757, line: 371, baseType: !6, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !756, file: !757, line: 374, baseType: !6, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !756, file: !757, line: 376, baseType: !6, size: 32, offset: 1120)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !756, file: !757, line: 377, baseType: !6, size: 32, offset: 1152)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !756, file: !757, line: 380, baseType: !6380, size: 64, offset: 1216)
!6380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6381, size: 64)
!6381 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !757, line: 303, flags: DIFlagFwdDecl)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !756, file: !757, line: 381, baseType: !6, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !756, file: !757, line: 383, baseType: !97, size: 32, offset: 1312)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !756, file: !757, line: 385, baseType: !6, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !756, file: !757, line: 387, baseType: !6340, size: 32, offset: 1376)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !756, file: !757, line: 388, baseType: !823, size: 5568, offset: 1408)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !756, file: !757, line: 390, baseType: !97, size: 32, offset: 6976)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !756, file: !757, line: 396, baseType: !6, size: 32, offset: 7008)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !756, file: !757, line: 397, baseType: !6390, size: 8704, offset: 7040)
!6390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !773, size: 8704, elements: !6391)
!6391 = !{!6392}
!6392 = !DISubrange(count: 17)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !756, file: !757, line: 399, baseType: !1066, size: 8, offset: 15744)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !756, file: !757, line: 401, baseType: !6, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !756, file: !757, line: 402, baseType: !6, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !756, file: !757, line: 403, baseType: !6, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !756, file: !757, line: 404, baseType: !6, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !756, file: !757, line: 405, baseType: !6, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !756, file: !757, line: 407, baseType: !6, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !756, file: !757, line: 408, baseType: !6, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !756, file: !757, line: 409, baseType: !6, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !756, file: !757, line: 410, baseType: !6, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !756, file: !757, line: 411, baseType: !6, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !756, file: !757, line: 412, baseType: !6, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !756, file: !757, line: 413, baseType: !6, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !756, file: !757, line: 414, baseType: !6, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !756, file: !757, line: 415, baseType: !6, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !756, file: !757, line: 416, baseType: !6, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !756, file: !757, line: 417, baseType: !6, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !756, file: !757, line: 418, baseType: !6, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !756, file: !757, line: 419, baseType: !6, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !756, file: !757, line: 420, baseType: !6, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !756, file: !757, line: 421, baseType: !6, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !756, file: !757, line: 422, baseType: !6, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !756, file: !757, line: 423, baseType: !6, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !756, file: !757, line: 424, baseType: !6, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !756, file: !757, line: 425, baseType: !6, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !756, file: !757, line: 426, baseType: !6, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !756, file: !757, line: 427, baseType: !6, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !756, file: !757, line: 435, baseType: !6, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !756, file: !757, line: 441, baseType: !6, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !756, file: !757, line: 442, baseType: !6, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !756, file: !757, line: 443, baseType: !6, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !756, file: !757, line: 444, baseType: !6, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !756, file: !757, line: 445, baseType: !6, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !756, file: !757, line: 446, baseType: !6, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !756, file: !757, line: 447, baseType: !6, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !756, file: !757, line: 448, baseType: !6, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !756, file: !757, line: 449, baseType: !6, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !756, file: !757, line: 450, baseType: !6431, size: 16, offset: 15792)
!6431 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !757, line: 206, baseType: !499)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !756, file: !757, line: 451, baseType: !1369, size: 32, offset: 15808)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !756, file: !757, line: 453, baseType: !5824, size: 512, offset: 15840)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !756, file: !757, line: 454, baseType: !1208, size: 64, offset: 16384)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !756, file: !757, line: 455, baseType: !929, size: 64, offset: 16448)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !756, file: !757, line: 456, baseType: !97, size: 32, offset: 16512)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !756, file: !757, line: 457, baseType: !6438, size: 1088, offset: 16576)
!6438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 1088, elements: !6391)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !756, file: !757, line: 458, baseType: !6438, size: 1088, offset: 17664)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !756, file: !757, line: 469, baseType: !915, size: 64, offset: 18752)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !756, file: !757, line: 471, baseType: !6442, size: 64, offset: 18816)
!6442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6443, size: 64)
!6443 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !757, line: 304, flags: DIFlagFwdDecl)
!6444 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !757, line: 478, baseType: !6445, size: 64, offset: 18880)
!6445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !756, file: !757, line: 478, size: 64, elements: !6446)
!6446 = !{!6447, !6450}
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !6445, file: !757, line: 479, baseType: !6448, size: 64)
!6448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6449, size: 64)
!6449 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !757, line: 305, flags: DIFlagFwdDecl)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !6445, file: !757, line: 480, baseType: !755, size: 64)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !756, file: !757, line: 482, baseType: !521, size: 16, offset: 18944)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !756, file: !757, line: 483, baseType: !648, size: 8, offset: 18960)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !756, file: !757, line: 497, baseType: !521, size: 16, offset: 18976)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !756, file: !757, line: 498, baseType: !778, size: 64, offset: 19008)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !756, file: !757, line: 499, baseType: !909, size: 64, offset: 19072)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !756, file: !757, line: 500, baseType: !708, size: 64, offset: 19136)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !756, file: !757, line: 502, baseType: !528, size: 64, offset: 19200)
!6458 = !DIGlobalVariableExpression(var: !6459, expr: !DIExpression())
!6459 = distinct !DIGlobalVariable(name: "xen_fifo_events", scope: !2, file: !3, line: 2053, type: !1066, isLocal: false, isDefinition: true)
!6460 = !DIGlobalVariableExpression(var: !6461, expr: !DIExpression())
!6461 = distinct !DIGlobalVariable(name: "__param_fifo_events", scope: !2, file: !3, line: 2054, type: !684, isLocal: true, isDefinition: true, align: 64)
!6462 = !DIGlobalVariableExpression(var: !6463, expr: !DIExpression())
!6463 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_fifo_eventstype375", scope: !2, file: !3, line: 2054, type: !6464, isLocal: true, isDefinition: true, align: 8)
!6464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 264, elements: !6465)
!6465 = !{!6466}
!6466 = !DISubrange(count: 33)
!6467 = !DIGlobalVariableExpression(var: !6468, expr: !DIExpression())
!6468 = distinct !DIGlobalVariable(name: "evtchn_ops", scope: !2, file: !3, line: 130, type: !6469, isLocal: false, isDefinition: true)
!6469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6470, size: 64)
!6470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6471)
!6471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_ops", file: !6472, line: 12, size: 896, elements: !6473)
!6472 = !DIFile(filename: "drivers/xen/events/events_internal.h", directory: "/home/lizy2001/genbc/linux")
!6473 = !{!6474, !6478, !6479, !6483, !6487, !6491, !6492, !6496, !6497, !6498, !6499, !6509, !6511, !6515}
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "max_channels", scope: !6471, file: !6472, line: 13, baseType: !6475, size: 64)
!6475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6476, size: 64)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{!6}
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "nr_channels", scope: !6471, file: !6472, line: 14, baseType: !6475, size: 64, offset: 64)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !6471, file: !6472, line: 16, baseType: !6480, size: 64, offset: 128)
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6481, size: 64)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{!97, !491}
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "bind_to_cpu", scope: !6471, file: !6472, line: 17, baseType: !6484, size: 64, offset: 192)
!6484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6485, size: 64)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{null, !491, !6, !6}
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "clear_pending", scope: !6471, file: !6472, line: 20, baseType: !6488, size: 64, offset: 256)
!6488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6489, size: 64)
!6489 = !DISubroutineType(types: !6490)
!6490 = !{null, !491}
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "set_pending", scope: !6471, file: !6472, line: 21, baseType: !6488, size: 64, offset: 320)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "is_pending", scope: !6471, file: !6472, line: 22, baseType: !6493, size: 64, offset: 384)
!6493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6494, size: 64)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{!1066, !491}
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "test_and_set_mask", scope: !6471, file: !6472, line: 23, baseType: !6493, size: 64, offset: 448)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6471, file: !6472, line: 24, baseType: !6488, size: 64, offset: 512)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "unmask", scope: !6471, file: !6472, line: 25, baseType: !6488, size: 64, offset: 576)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "handle_events", scope: !6471, file: !6472, line: 27, baseType: !6500, size: 64, offset: 640)
!6500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6501, size: 64)
!6501 = !DISubroutineType(types: !6502)
!6502 = !{null, !6, !6503}
!6503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6504, size: 64)
!6504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_loop_ctrl", file: !3, line: 1530, size: 128, elements: !6505)
!6505 = !{!6506, !6507, !6508}
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6504, file: !3, line: 1531, baseType: !1929, size: 64)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6504, file: !3, line: 1532, baseType: !6, size: 32, offset: 64)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "defer_eoi", scope: !6504, file: !3, line: 1533, baseType: !1066, size: 8, offset: 96)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6471, file: !6472, line: 28, baseType: !6510, size: 64, offset: 704)
!6510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_init", scope: !6471, file: !6472, line: 30, baseType: !6512, size: 64, offset: 768)
!6512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6513, size: 64)
!6513 = !DISubroutineType(types: !6514)
!6514 = !{!97, !6}
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_deinit", scope: !6471, file: !6472, line: 31, baseType: !6512, size: 64, offset: 832)
!6516 = !DIGlobalVariableExpression(var: !6517, expr: !DIExpression())
!6517 = distinct !DIGlobalVariable(name: "evtchn_to_irq", scope: !2, file: !3, line: 164, type: !6518, isLocal: true, isDefinition: true)
!6518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!6519 = !DIGlobalVariableExpression(var: !6520, expr: !DIExpression())
!6520 = distinct !DIGlobalVariable(name: "pirq_eoi_map", scope: !2, file: !3, line: 166, type: !680, isLocal: true, isDefinition: true)
!6521 = !DIGlobalVariableExpression(var: !6522, expr: !DIExpression())
!6522 = distinct !DIGlobalVariable(name: "pirq_needs_eoi", scope: !2, file: !3, line: 168, type: !6523, isLocal: true, isDefinition: true)
!6523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6524, size: 64)
!6524 = !DISubroutineType(types: !6525)
!6525 = !{!1066, !6}
!6526 = !DIGlobalVariableExpression(var: !6527, expr: !DIExpression())
!6527 = distinct !DIGlobalVariable(name: "irq_epoch", scope: !2, file: !3, line: 186, type: !6, isLocal: true, isDefinition: true)
!6528 = !DIGlobalVariableExpression(var: !6529, expr: !DIExpression())
!6529 = distinct !DIGlobalVariable(name: "event_loop_timeout", scope: !2, file: !3, line: 124, type: !6530, isLocal: true, isDefinition: true)
!6530 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !479, line: 87, baseType: !6)
!6531 = !DIGlobalVariableExpression(var: !6532, expr: !DIExpression())
!6532 = distinct !DIGlobalVariable(name: "__param_str_event_eoi_delay", scope: !2, file: !3, line: 128, type: !6533, isLocal: true, isDefinition: true)
!6533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 160, elements: !4330)
!6534 = !DIGlobalVariableExpression(var: !6535, expr: !DIExpression())
!6535 = distinct !DIGlobalVariable(name: "event_eoi_delay", scope: !2, file: !3, line: 127, type: !6530, isLocal: true, isDefinition: true)
!6536 = !DIGlobalVariableExpression(var: !6537, expr: !DIExpression())
!6537 = distinct !DIGlobalVariable(name: "legacy_info_ptrs", scope: !2, file: !3, line: 177, type: !6538, isLocal: true, isDefinition: true)
!6538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 1024, elements: !2520)
!6539 = !DIGlobalVariableExpression(var: !6540, expr: !DIExpression())
!6540 = distinct !DIGlobalVariable(name: "virq_to_irq", scope: !2, file: !3, line: 159, type: !471, isLocal: true, isDefinition: true)
!6541 = !DIGlobalVariableExpression(var: !6542, expr: !DIExpression())
!6542 = distinct !DIGlobalVariable(name: "evtchn_rwlock", scope: !2, file: !3, line: 145, type: !3913, isLocal: true, isDefinition: true)
!6543 = !DIGlobalVariableExpression(var: !6544, expr: !DIExpression())
!6544 = distinct !DIGlobalVariable(name: "lateeoi", scope: !2, file: !3, line: 473, type: !544, isLocal: true, isDefinition: true)
!6545 = !DIGlobalVariableExpression(var: !6546, expr: !DIExpression())
!6546 = distinct !DIGlobalVariable(name: "xen_irq_list_head", scope: !2, file: !3, line: 156, type: !478, isLocal: true, isDefinition: true)
!6547 = !DIGlobalVariableExpression(var: !6548, expr: !DIExpression())
!6548 = distinct !DIGlobalVariable(name: "irq_mapping_update_lock", scope: !2, file: !3, line: 136, type: !1303, isLocal: true, isDefinition: true)
!6549 = !DIGlobalVariableExpression(var: !6550, expr: !DIExpression())
!6550 = distinct !DIGlobalVariable(name: "ipi_to_irq", scope: !2, file: !3, line: 162, type: !524, isLocal: true, isDefinition: true)
!6551 = !DIGlobalVariableExpression(var: !6552, expr: !DIExpression())
!6552 = distinct !DIGlobalVariable(name: "xen_dynamic_chip", scope: !2, file: !3, line: 1954, type: !5932, isLocal: true, isDefinition: true)
!6553 = !DIGlobalVariableExpression(var: !6554, expr: !DIExpression())
!6554 = distinct !DIGlobalVariable(name: "xen_lateeoi_chip", scope: !2, file: !3, line: 1968, type: !5932, isLocal: true, isDefinition: true)
!6555 = !DIGlobalVariableExpression(var: !6556, expr: !DIExpression())
!6556 = distinct !DIGlobalVariable(name: "xen_pirq_chip", scope: !2, file: !3, line: 1983, type: !5932, isLocal: true, isDefinition: true)
!6557 = !DIGlobalVariableExpression(var: !6558, expr: !DIExpression())
!6558 = distinct !DIGlobalVariable(name: "xen_percpu_chip", scope: !2, file: !3, line: 2003, type: !5932, isLocal: true, isDefinition: true)
!6559 = !DIGlobalVariableExpression(var: !6560, expr: !DIExpression())
!6560 = distinct !DIGlobalVariable(name: "__param_str_fifo_events", scope: !2, file: !3, line: 2054, type: !6561, isLocal: true, isDefinition: true)
!6561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 128, elements: !2520)
!6562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 184, elements: !6563)
!6563 = !{!6564}
!6564 = !DISubrange(count: 23)
!6565 = !{!"rsp"}
!6566 = !{i32 7, !"Dwarf Version", i32 4}
!6567 = !{i32 2, !"Debug Info Version", i32 3}
!6568 = !{i32 1, !"wchar_size", i32 2}
!6569 = !{i32 1, !"Code Model", i32 2}
!6570 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6571 = distinct !DISubprogram(name: "get_evtchn_to_irq", scope: !3, file: !3, line: 234, type: !6481, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6572 = !DILocalVariable(name: "evtchn", arg: 1, scope: !6571, file: !3, line: 234, type: !491)
!6573 = !DILocation(line: 234, column: 37, scope: !6571)
!6574 = !DILocation(line: 236, column: 6, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 236, column: 6)
!6576 = !DILocation(line: 236, column: 16, scope: !6575)
!6577 = !DILocation(line: 236, column: 13, scope: !6575)
!6578 = !DILocation(line: 236, column: 6, scope: !6571)
!6579 = !DILocation(line: 237, column: 3, scope: !6575)
!6580 = !DILocation(line: 238, column: 6, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 238, column: 6)
!6582 = !DILocation(line: 238, column: 20, scope: !6581)
!6583 = !DILocation(line: 238, column: 40, scope: !6581)
!6584 = !DILocation(line: 238, column: 6, scope: !6571)
!6585 = !DILocation(line: 239, column: 3, scope: !6581)
!6586 = !DILocation(line: 240, column: 9, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 240, column: 9)
!6588 = !DILocation(line: 240, column: 9, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 240, column: 9)
!6590 = !DILocation(line: 240, column: 2, scope: !6571)
!6591 = !DILocation(line: 241, column: 1, scope: !6571)
!6592 = distinct !DISubprogram(name: "xen_evtchn_max_channels", scope: !6472, file: !6472, line: 41, type: !6476, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6593 = !DILocation(line: 43, column: 9, scope: !6592)
!6594 = !DILocation(line: 43, column: 21, scope: !6592)
!6595 = !DILocation(line: 43, column: 2, scope: !6592)
!6596 = distinct !DISubprogram(name: "evtchn_from_irq", scope: !3, file: !3, line: 347, type: !6597, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6597 = !DISubroutineType(types: !6598)
!6598 = !{!491, !6}
!6599 = !DILocalVariable(name: "irq", arg: 1, scope: !6596, file: !3, line: 347, type: !6)
!6600 = !DILocation(line: 347, column: 40, scope: !6596)
!6601 = !DILocalVariable(name: "info", scope: !6596, file: !3, line: 349, type: !6602)
!6602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6603, size: 64)
!6603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !475)
!6604 = !DILocation(line: 349, column: 25, scope: !6596)
!6605 = !DILocation(line: 351, column: 6, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 351, column: 6)
!6607 = !DILocation(line: 351, column: 6, scope: !6596)
!6608 = !DILocation(line: 352, column: 23, scope: !6606)
!6609 = !DILocation(line: 352, column: 10, scope: !6606)
!6610 = !DILocation(line: 352, column: 8, scope: !6606)
!6611 = !DILocation(line: 352, column: 3, scope: !6606)
!6612 = !DILocation(line: 353, column: 7, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 353, column: 6)
!6614 = !DILocation(line: 353, column: 6, scope: !6596)
!6615 = !DILocation(line: 354, column: 3, scope: !6613)
!6616 = !DILocation(line: 356, column: 9, scope: !6596)
!6617 = !DILocation(line: 356, column: 15, scope: !6596)
!6618 = !DILocation(line: 356, column: 2, scope: !6596)
!6619 = !DILocation(line: 357, column: 1, scope: !6596)
!6620 = distinct !DISubprogram(name: "info_for_irq", scope: !3, file: !3, line: 244, type: !6621, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6621 = !DISubroutineType(types: !6622)
!6622 = !{!474, !6}
!6623 = !DILocalVariable(name: "irq", arg: 1, scope: !6620, file: !3, line: 244, type: !6)
!6624 = !DILocation(line: 244, column: 47, scope: !6620)
!6625 = !DILocation(line: 246, column: 6, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 246, column: 6)
!6627 = !DILocation(line: 246, column: 12, scope: !6626)
!6628 = !DILocation(line: 246, column: 10, scope: !6626)
!6629 = !DILocation(line: 246, column: 6, scope: !6620)
!6630 = !DILocation(line: 247, column: 27, scope: !6626)
!6631 = !DILocation(line: 247, column: 10, scope: !6626)
!6632 = !DILocation(line: 247, column: 3, scope: !6626)
!6633 = !DILocation(line: 249, column: 28, scope: !6626)
!6634 = !DILocation(line: 249, column: 10, scope: !6626)
!6635 = !DILocation(line: 249, column: 3, scope: !6626)
!6636 = !DILocation(line: 250, column: 1, scope: !6620)
!6637 = distinct !DISubprogram(name: "irq_from_evtchn", scope: !3, file: !3, line: 359, type: !6638, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{!6, !491}
!6640 = !DILocalVariable(name: "evtchn", arg: 1, scope: !6637, file: !3, line: 359, type: !491)
!6641 = !DILocation(line: 359, column: 44, scope: !6637)
!6642 = !DILocation(line: 361, column: 27, scope: !6637)
!6643 = !DILocation(line: 361, column: 9, scope: !6637)
!6644 = !DILocation(line: 361, column: 2, scope: !6637)
!6645 = distinct !DISubprogram(name: "irq_from_virq", scope: !3, file: !3, line: 365, type: !6646, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6646 = !DISubroutineType(types: !6647)
!6647 = !{!97, !6, !6}
!6648 = !DILocalVariable(name: "cpu", arg: 1, scope: !6645, file: !3, line: 365, type: !6)
!6649 = !DILocation(line: 365, column: 32, scope: !6645)
!6650 = !DILocalVariable(name: "virq", arg: 2, scope: !6645, file: !3, line: 365, type: !6)
!6651 = !DILocation(line: 365, column: 50, scope: !6645)
!6652 = !DILocation(line: 367, column: 9, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 367, column: 9)
!6654 = !DILocation(line: 367, column: 9, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 367, column: 9)
!6656 = !DILocalVariable(name: "__vpp_verify", scope: !6657, file: !3, line: 367, type: !3999)
!6657 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 367, column: 9)
!6658 = !DILocation(line: 367, column: 9, scope: !6657)
!6659 = !DILocation(line: 367, column: 35, scope: !6645)
!6660 = !DILocation(line: 367, column: 9, scope: !6645)
!6661 = !DILocation(line: 367, column: 2, scope: !6645)
!6662 = distinct !DISubprogram(name: "cpu_from_evtchn", scope: !3, file: !3, line: 410, type: !6638, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6663 = !DILocalVariable(name: "evtchn", arg: 1, scope: !6662, file: !3, line: 410, type: !491)
!6664 = !DILocation(line: 410, column: 44, scope: !6662)
!6665 = !DILocalVariable(name: "irq", scope: !6662, file: !3, line: 412, type: !97)
!6666 = !DILocation(line: 412, column: 6, scope: !6662)
!6667 = !DILocation(line: 412, column: 30, scope: !6662)
!6668 = !DILocation(line: 412, column: 12, scope: !6662)
!6669 = !DILocalVariable(name: "ret", scope: !6662, file: !3, line: 413, type: !6)
!6670 = !DILocation(line: 413, column: 11, scope: !6662)
!6671 = !DILocation(line: 415, column: 6, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 415, column: 6)
!6673 = !DILocation(line: 415, column: 10, scope: !6672)
!6674 = !DILocation(line: 415, column: 6, scope: !6662)
!6675 = !DILocation(line: 416, column: 22, scope: !6672)
!6676 = !DILocation(line: 416, column: 9, scope: !6672)
!6677 = !DILocation(line: 416, column: 7, scope: !6672)
!6678 = !DILocation(line: 416, column: 3, scope: !6672)
!6679 = !DILocation(line: 418, column: 9, scope: !6662)
!6680 = !DILocation(line: 418, column: 2, scope: !6662)
!6681 = distinct !DISubprogram(name: "cpu_from_irq", scope: !3, file: !3, line: 405, type: !6682, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6682 = !DISubroutineType(types: !6683)
!6683 = !{!6, !6}
!6684 = !DILocalVariable(name: "irq", arg: 1, scope: !6681, file: !3, line: 405, type: !6)
!6685 = !DILocation(line: 405, column: 39, scope: !6681)
!6686 = !DILocation(line: 407, column: 22, scope: !6681)
!6687 = !DILocation(line: 407, column: 9, scope: !6681)
!6688 = !DILocation(line: 407, column: 28, scope: !6681)
!6689 = !DILocation(line: 407, column: 2, scope: !6681)
!6690 = distinct !DISubprogram(name: "notify_remote_via_irq", scope: !3, file: !3, line: 458, type: !2690, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6691 = !DILocalVariable(name: "irq", arg: 1, scope: !6690, file: !3, line: 458, type: !97)
!6692 = !DILocation(line: 458, column: 32, scope: !6690)
!6693 = !DILocalVariable(name: "evtchn", scope: !6690, file: !3, line: 460, type: !491)
!6694 = !DILocation(line: 460, column: 16, scope: !6690)
!6695 = !DILocation(line: 460, column: 41, scope: !6690)
!6696 = !DILocation(line: 460, column: 25, scope: !6690)
!6697 = !DILocation(line: 462, column: 6, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 462, column: 6)
!6699 = !DILocation(line: 462, column: 6, scope: !6690)
!6700 = !DILocation(line: 463, column: 28, scope: !6698)
!6701 = !DILocation(line: 463, column: 3, scope: !6698)
!6702 = !DILocation(line: 464, column: 1, scope: !6690)
!6703 = distinct !DISubprogram(name: "notify_remote_via_evtchn", scope: !6704, file: !6704, line: 78, type: !6489, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6704 = !DIFile(filename: "./include/xen/events.h", directory: "/home/lizy2001/genbc/linux")
!6705 = !DILocalVariable(name: "port", arg: 1, scope: !6703, file: !6704, line: 78, type: !491)
!6706 = !DILocation(line: 78, column: 59, scope: !6703)
!6707 = !DILocalVariable(name: "send", scope: !6703, file: !6704, line: 80, type: !6708)
!6708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_send", file: !492, line: 114, size: 32, elements: !6709)
!6709 = !{!6710}
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6708, file: !492, line: 116, baseType: !491, size: 32)
!6711 = !DILocation(line: 80, column: 21, scope: !6703)
!6712 = !DILocation(line: 80, column: 28, scope: !6703)
!6713 = !DILocation(line: 80, column: 38, scope: !6703)
!6714 = !DILocation(line: 81, column: 51, scope: !6703)
!6715 = !DILocation(line: 81, column: 8, scope: !6703)
!6716 = !DILocation(line: 82, column: 1, scope: !6703)
!6717 = distinct !DISubprogram(name: "xen_irq_lateeoi", scope: !3, file: !3, line: 598, type: !6718, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6718 = !DISubroutineType(types: !6719)
!6719 = !{null, !6, !6}
!6720 = !DILocalVariable(name: "irq", arg: 1, scope: !6717, file: !3, line: 598, type: !6)
!6721 = !DILocation(line: 598, column: 35, scope: !6717)
!6722 = !DILocalVariable(name: "eoi_flags", arg: 2, scope: !6717, file: !3, line: 598, type: !6)
!6723 = !DILocation(line: 598, column: 53, scope: !6717)
!6724 = !DILocalVariable(name: "info", scope: !6717, file: !3, line: 600, type: !474)
!6725 = !DILocation(line: 600, column: 19, scope: !6717)
!6726 = !DILocalVariable(name: "flags", scope: !6717, file: !3, line: 601, type: !528)
!6727 = !DILocation(line: 601, column: 16, scope: !6717)
!6728 = !DILocation(line: 603, column: 2, scope: !6717)
!6729 = !DILocalVariable(name: "__dummy", scope: !6730, file: !3, line: 603, type: !528)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 603, column: 2)
!6731 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 603, column: 2)
!6732 = !DILocation(line: 603, column: 2, scope: !6730)
!6733 = !DILocalVariable(name: "__dummy2", scope: !6730, file: !3, line: 603, type: !528)
!6734 = !DILocation(line: 603, column: 2, scope: !6731)
!6735 = !DILocation(line: 603, column: 2, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 603, column: 2)
!6737 = !DILocation(line: 603, column: 2, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 603, column: 2)
!6739 = !DILocalVariable(name: "__dummy", scope: !6740, file: !3, line: 603, type: !528)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 603, column: 2)
!6741 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 603, column: 2)
!6742 = !DILocation(line: 603, column: 2, scope: !6740)
!6743 = !DILocalVariable(name: "__dummy2", scope: !6740, file: !3, line: 603, type: !528)
!6744 = !DILocation(line: 603, column: 2, scope: !6741)
!6745 = !DILocation(line: 603, column: 2, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 603, column: 2)
!6747 = !{i32 -2138996564}
!6748 = !DILocation(line: 603, column: 2, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 603, column: 2)
!6750 = !DILocation(line: 605, column: 22, scope: !6717)
!6751 = !DILocation(line: 605, column: 9, scope: !6717)
!6752 = !DILocation(line: 605, column: 7, scope: !6717)
!6753 = !DILocation(line: 607, column: 6, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 607, column: 6)
!6755 = !DILocation(line: 607, column: 6, scope: !6717)
!6756 = !DILocation(line: 608, column: 26, scope: !6754)
!6757 = !DILocation(line: 608, column: 32, scope: !6754)
!6758 = !DILocation(line: 608, column: 42, scope: !6754)
!6759 = !DILocation(line: 608, column: 3, scope: !6754)
!6760 = !DILocation(line: 610, column: 2, scope: !6717)
!6761 = !DILocalVariable(name: "__dummy", scope: !6762, file: !3, line: 610, type: !528)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 610, column: 2)
!6763 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 610, column: 2)
!6764 = !DILocation(line: 610, column: 2, scope: !6762)
!6765 = !DILocalVariable(name: "__dummy2", scope: !6762, file: !3, line: 610, type: !528)
!6766 = !DILocation(line: 610, column: 2, scope: !6763)
!6767 = !DILocation(line: 610, column: 2, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 610, column: 2)
!6769 = !DILocation(line: 610, column: 2, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 610, column: 2)
!6771 = !DILocalVariable(name: "__dummy", scope: !6772, file: !3, line: 610, type: !528)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 610, column: 2)
!6773 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 610, column: 2)
!6774 = !DILocation(line: 610, column: 2, scope: !6772)
!6775 = !DILocalVariable(name: "__dummy2", scope: !6772, file: !3, line: 610, type: !528)
!6776 = !DILocation(line: 610, column: 2, scope: !6773)
!6777 = !DILocation(line: 610, column: 2, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 610, column: 2)
!6779 = !{i32 -2138995704}
!6780 = !DILocation(line: 610, column: 2, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 610, column: 2)
!6782 = !DILocation(line: 611, column: 1, scope: !6717)
!6783 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6784, file: !6784, line: 666, type: !6785, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6784 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6785 = !DISubroutineType(types: !6786)
!6786 = !{!528}
!6787 = !DILocalVariable(name: "f", scope: !6783, file: !6784, line: 668, type: !528)
!6788 = !DILocation(line: 668, column: 16, scope: !6783)
!6789 = !DILocation(line: 670, column: 6, scope: !6783)
!6790 = !DILocation(line: 670, column: 4, scope: !6783)
!6791 = !DILocation(line: 671, column: 2, scope: !6783)
!6792 = !DILocation(line: 672, column: 9, scope: !6783)
!6793 = !DILocation(line: 672, column: 2, scope: !6783)
!6794 = distinct !DISubprogram(name: "xen_irq_lateeoi_locked", scope: !3, file: !3, line: 515, type: !6795, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6795 = !DISubroutineType(types: !6796)
!6796 = !{null, !474, !1066}
!6797 = !DILocalVariable(name: "info", arg: 1, scope: !6794, file: !3, line: 515, type: !474)
!6798 = !DILocation(line: 515, column: 53, scope: !6794)
!6799 = !DILocalVariable(name: "spurious", arg: 2, scope: !6794, file: !3, line: 515, type: !1066)
!6800 = !DILocation(line: 515, column: 64, scope: !6794)
!6801 = !DILocalVariable(name: "evtchn", scope: !6794, file: !3, line: 517, type: !491)
!6802 = !DILocation(line: 517, column: 16, scope: !6794)
!6803 = !DILocalVariable(name: "cpu", scope: !6794, file: !3, line: 518, type: !6)
!6804 = !DILocation(line: 518, column: 15, scope: !6794)
!6805 = !DILocalVariable(name: "delay", scope: !6794, file: !3, line: 519, type: !6)
!6806 = !DILocation(line: 519, column: 15, scope: !6794)
!6807 = !DILocation(line: 521, column: 11, scope: !6794)
!6808 = !DILocation(line: 521, column: 17, scope: !6794)
!6809 = !DILocation(line: 521, column: 9, scope: !6794)
!6810 = !DILocation(line: 522, column: 7, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 522, column: 6)
!6812 = !DILocation(line: 522, column: 28, scope: !6811)
!6813 = !DILocation(line: 522, column: 44, scope: !6811)
!6814 = !DILocation(line: 522, column: 50, scope: !6811)
!6815 = !DILocation(line: 522, column: 32, scope: !6811)
!6816 = !DILocation(line: 522, column: 6, scope: !6794)
!6817 = !DILocation(line: 523, column: 3, scope: !6811)
!6818 = !DILocation(line: 525, column: 6, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 525, column: 6)
!6820 = !DILocation(line: 525, column: 6, scope: !6794)
!6821 = !DILocation(line: 526, column: 13, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !3, line: 526, column: 7)
!6823 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 525, column: 16)
!6824 = !DILocation(line: 526, column: 19, scope: !6822)
!6825 = !DILocation(line: 526, column: 10, scope: !6822)
!6826 = !DILocation(line: 526, column: 33, scope: !6822)
!6827 = !DILocation(line: 526, column: 7, scope: !6823)
!6828 = !DILocation(line: 527, column: 4, scope: !6822)
!6829 = !DILocation(line: 527, column: 10, scope: !6822)
!6830 = !DILocation(line: 527, column: 22, scope: !6822)
!6831 = !DILocation(line: 528, column: 7, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6823, file: !3, line: 528, column: 7)
!6833 = !DILocation(line: 528, column: 13, scope: !6832)
!6834 = !DILocation(line: 528, column: 26, scope: !6832)
!6835 = !DILocation(line: 528, column: 7, scope: !6823)
!6836 = !DILocation(line: 529, column: 18, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 528, column: 31)
!6838 = !DILocation(line: 529, column: 24, scope: !6837)
!6839 = !DILocation(line: 529, column: 37, scope: !6837)
!6840 = !DILocation(line: 529, column: 14, scope: !6837)
!6841 = !DILocation(line: 529, column: 10, scope: !6837)
!6842 = !DILocation(line: 530, column: 8, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 530, column: 8)
!6844 = !DILocation(line: 530, column: 14, scope: !6843)
!6845 = !DILocation(line: 530, column: 8, scope: !6837)
!6846 = !DILocation(line: 531, column: 11, scope: !6843)
!6847 = !DILocation(line: 531, column: 5, scope: !6843)
!6848 = !DILocation(line: 532, column: 9, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 532, column: 8)
!6850 = !DILocation(line: 532, column: 15, scope: !6849)
!6851 = !DILocation(line: 532, column: 8, scope: !6837)
!6852 = !DILocation(line: 533, column: 5, scope: !6849)
!6853 = !DILocation(line: 533, column: 11, scope: !6849)
!6854 = !DILocation(line: 533, column: 19, scope: !6849)
!6855 = !DILocation(line: 534, column: 21, scope: !6837)
!6856 = !DILocation(line: 534, column: 40, scope: !6837)
!6857 = !DILocation(line: 534, column: 38, scope: !6837)
!6858 = !DILocation(line: 534, column: 4, scope: !6837)
!6859 = !DILocation(line: 534, column: 10, scope: !6837)
!6860 = !DILocation(line: 534, column: 19, scope: !6837)
!6861 = !DILocation(line: 535, column: 3, scope: !6837)
!6862 = !DILocation(line: 536, column: 2, scope: !6823)
!6863 = !DILocation(line: 537, column: 3, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 536, column: 9)
!6865 = !DILocation(line: 537, column: 9, scope: !6864)
!6866 = !DILocation(line: 537, column: 22, scope: !6864)
!6867 = !DILocation(line: 540, column: 8, scope: !6794)
!6868 = !DILocation(line: 540, column: 14, scope: !6794)
!6869 = !DILocation(line: 540, column: 6, scope: !6794)
!6870 = !DILocation(line: 541, column: 6, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 541, column: 6)
!6872 = !DILocation(line: 541, column: 12, scope: !6871)
!6873 = !DILocation(line: 541, column: 21, scope: !6871)
!6874 = !DILocation(line: 542, column: 7, scope: !6871)
!6875 = !DILocation(line: 542, column: 13, scope: !6871)
!6876 = !DILocation(line: 542, column: 26, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 542, column: 26)
!6878 = !DILocation(line: 542, column: 26, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 542, column: 26)
!6880 = !DILocalVariable(name: "__vpp_verify", scope: !6881, file: !3, line: 542, type: !3999)
!6881 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 542, column: 26)
!6882 = !DILocation(line: 542, column: 26, scope: !6881)
!6883 = !DILocation(line: 542, column: 26, scope: !6871)
!6884 = !DILocation(line: 542, column: 23, scope: !6871)
!6885 = !DILocation(line: 542, column: 50, scope: !6871)
!6886 = !DILocation(line: 542, column: 53, scope: !6871)
!6887 = !DILocation(line: 541, column: 6, scope: !6794)
!6888 = !DILocation(line: 543, column: 20, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 542, column: 61)
!6890 = !DILocation(line: 543, column: 3, scope: !6889)
!6891 = !DILocation(line: 544, column: 3, scope: !6889)
!6892 = !DILocation(line: 547, column: 2, scope: !6794)
!6893 = !DILocation(line: 547, column: 8, scope: !6794)
!6894 = !DILocation(line: 547, column: 17, scope: !6794)
!6895 = !DILocation(line: 548, column: 16, scope: !6794)
!6896 = !DILocation(line: 548, column: 2, scope: !6794)
!6897 = !DILocation(line: 549, column: 1, scope: !6794)
!6898 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6784, file: !6784, line: 651, type: !6899, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6899 = !DISubroutineType(types: !6900)
!6900 = !{null, !528}
!6901 = !DILocalVariable(name: "f", arg: 1, scope: !6898, file: !6784, line: 651, type: !528)
!6902 = !DILocation(line: 651, column: 65, scope: !6898)
!6903 = !DILocalVariable(name: "__edi", scope: !6904, file: !6784, line: 653, type: !528)
!6904 = distinct !DILexicalBlock(scope: !6898, file: !6784, line: 653, column: 2)
!6905 = !DILocation(line: 653, column: 2, scope: !6904)
!6906 = !DILocalVariable(name: "__esi", scope: !6904, file: !6784, line: 653, type: !528)
!6907 = !DILocalVariable(name: "__edx", scope: !6904, file: !6784, line: 653, type: !528)
!6908 = !DILocalVariable(name: "__ecx", scope: !6904, file: !6784, line: 653, type: !528)
!6909 = !DILocalVariable(name: "__eax", scope: !6904, file: !6784, line: 653, type: !528)
!6910 = !{i32 -2145724354, i32 -2145723604, i32 -2145723370, i32 -2145723319, i32 -2145723291, i32 -2145723266, i32 -2145723582, i32 -2145723569, i32 -2145723131, i32 -2145723012, i32 -2145723477, i32 -2145723450, i32 -2145723422, i32 -2145723392}
!6911 = !DILocation(line: 654, column: 1, scope: !6898)
!6912 = distinct !DISubprogram(name: "xen_irq_from_gsi", scope: !3, file: !3, line: 846, type: !6513, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6913 = !DILocalVariable(name: "gsi", arg: 1, scope: !6912, file: !3, line: 846, type: !6)
!6914 = !DILocation(line: 846, column: 31, scope: !6912)
!6915 = !DILocalVariable(name: "info", scope: !6912, file: !3, line: 848, type: !474)
!6916 = !DILocation(line: 848, column: 19, scope: !6912)
!6917 = !DILocalVariable(name: "__mptr", scope: !6918, file: !3, line: 850, type: !466)
!6918 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 850, column: 2)
!6919 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 850, column: 2)
!6920 = !DILocation(line: 850, column: 2, scope: !6918)
!6921 = !DILocation(line: 850, column: 2, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 850, column: 2)
!6923 = !DILocation(line: 850, column: 2, scope: !6919)
!6924 = !DILocation(line: 850, column: 2, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 850, column: 2)
!6926 = !DILocation(line: 851, column: 7, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 851, column: 7)
!6928 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 850, column: 54)
!6929 = !DILocation(line: 851, column: 13, scope: !6927)
!6930 = !DILocation(line: 851, column: 18, scope: !6927)
!6931 = !DILocation(line: 851, column: 7, scope: !6928)
!6932 = !DILocation(line: 852, column: 4, scope: !6927)
!6933 = !DILocation(line: 854, column: 7, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 854, column: 7)
!6935 = !DILocation(line: 854, column: 13, scope: !6934)
!6936 = !DILocation(line: 854, column: 15, scope: !6934)
!6937 = !DILocation(line: 854, column: 20, scope: !6934)
!6938 = !DILocation(line: 854, column: 27, scope: !6934)
!6939 = !DILocation(line: 854, column: 24, scope: !6934)
!6940 = !DILocation(line: 854, column: 7, scope: !6928)
!6941 = !DILocation(line: 855, column: 11, scope: !6934)
!6942 = !DILocation(line: 855, column: 17, scope: !6934)
!6943 = !DILocation(line: 855, column: 4, scope: !6934)
!6944 = !DILocation(line: 856, column: 2, scope: !6928)
!6945 = !DILocalVariable(name: "__mptr", scope: !6946, file: !3, line: 850, type: !466)
!6946 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 850, column: 2)
!6947 = !DILocation(line: 850, column: 2, scope: !6946)
!6948 = !DILocation(line: 850, column: 2, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 850, column: 2)
!6950 = distinct !{!6950, !6923, !6951}
!6951 = !DILocation(line: 856, column: 2, scope: !6919)
!6952 = !DILocation(line: 858, column: 2, scope: !6912)
!6953 = !DILocation(line: 859, column: 1, scope: !6912)
!6954 = distinct !DISubprogram(name: "xen_bind_pirq_gsi_to_irq", scope: !3, file: !3, line: 905, type: !6955, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!6955 = !DISubroutineType(types: !6956)
!6956 = !{!97, !6, !6, !97, !708}
!6957 = !DILocalVariable(name: "gsi", arg: 1, scope: !6954, file: !3, line: 905, type: !6)
!6958 = !DILocation(line: 905, column: 39, scope: !6954)
!6959 = !DILocalVariable(name: "pirq", arg: 2, scope: !6954, file: !3, line: 906, type: !6)
!6960 = !DILocation(line: 906, column: 18, scope: !6954)
!6961 = !DILocalVariable(name: "shareable", arg: 3, scope: !6954, file: !3, line: 906, type: !97)
!6962 = !DILocation(line: 906, column: 28, scope: !6954)
!6963 = !DILocalVariable(name: "name", arg: 4, scope: !6954, file: !3, line: 906, type: !708)
!6964 = !DILocation(line: 906, column: 45, scope: !6954)
!6965 = !DILocalVariable(name: "irq", scope: !6954, file: !3, line: 908, type: !97)
!6966 = !DILocation(line: 908, column: 6, scope: !6954)
!6967 = !DILocalVariable(name: "irq_op", scope: !6954, file: !3, line: 909, type: !6968)
!6968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "physdev_irq", file: !6969, line: 123, size: 64, elements: !6970)
!6969 = !DIFile(filename: "./include/xen/interface/physdev.h", directory: "/home/lizy2001/genbc/linux")
!6970 = !{!6971, !6972}
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !6968, file: !6969, line: 125, baseType: !493, size: 32)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !6968, file: !6969, line: 127, baseType: !493, size: 32, offset: 32)
!6973 = !DILocation(line: 909, column: 21, scope: !6954)
!6974 = !DILocalVariable(name: "ret", scope: !6954, file: !3, line: 910, type: !97)
!6975 = !DILocation(line: 910, column: 6, scope: !6954)
!6976 = !DILocation(line: 912, column: 2, scope: !6954)
!6977 = !DILocation(line: 914, column: 25, scope: !6954)
!6978 = !DILocation(line: 914, column: 8, scope: !6954)
!6979 = !DILocation(line: 914, column: 6, scope: !6954)
!6980 = !DILocation(line: 915, column: 6, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 915, column: 6)
!6982 = !DILocation(line: 915, column: 10, scope: !6981)
!6983 = !DILocation(line: 915, column: 6, scope: !6954)
!6984 = !DILocation(line: 916, column: 3, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 915, column: 17)
!6986 = !DILocation(line: 918, column: 3, scope: !6985)
!6987 = !DILocation(line: 921, column: 29, scope: !6954)
!6988 = !DILocation(line: 921, column: 8, scope: !6954)
!6989 = !DILocation(line: 921, column: 6, scope: !6954)
!6990 = !DILocation(line: 922, column: 6, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 922, column: 6)
!6992 = !DILocation(line: 922, column: 10, scope: !6991)
!6993 = !DILocation(line: 922, column: 6, scope: !6954)
!6994 = !DILocation(line: 923, column: 3, scope: !6991)
!6995 = !DILocation(line: 925, column: 15, scope: !6954)
!6996 = !DILocation(line: 925, column: 9, scope: !6954)
!6997 = !DILocation(line: 925, column: 13, scope: !6954)
!6998 = !DILocation(line: 926, column: 9, scope: !6954)
!6999 = !DILocation(line: 926, column: 16, scope: !6954)
!7000 = !DILocation(line: 931, column: 6, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 931, column: 6)
!7002 = !DILocation(line: 931, column: 27, scope: !7001)
!7003 = !DILocation(line: 932, column: 56, scope: !7001)
!7004 = !DILocation(line: 932, column: 6, scope: !7001)
!7005 = !DILocation(line: 931, column: 6, scope: !6954)
!7006 = !DILocation(line: 933, column: 16, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 932, column: 66)
!7008 = !DILocation(line: 933, column: 3, scope: !7007)
!7009 = !DILocation(line: 934, column: 7, scope: !7007)
!7010 = !DILocation(line: 935, column: 3, scope: !7007)
!7011 = !DILocation(line: 938, column: 32, scope: !6954)
!7012 = !DILocation(line: 938, column: 40, scope: !6954)
!7013 = !DILocation(line: 938, column: 46, scope: !6954)
!7014 = !DILocation(line: 939, column: 11, scope: !6954)
!7015 = !DILocation(line: 938, column: 8, scope: !6954)
!7016 = !DILocation(line: 938, column: 6, scope: !6954)
!7017 = !DILocation(line: 940, column: 6, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 940, column: 6)
!7019 = !DILocation(line: 940, column: 10, scope: !7018)
!7020 = !DILocation(line: 940, column: 6, scope: !6954)
!7021 = !DILocation(line: 941, column: 21, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 940, column: 15)
!7023 = !DILocation(line: 941, column: 3, scope: !7022)
!7024 = !DILocation(line: 942, column: 9, scope: !7022)
!7025 = !DILocation(line: 942, column: 7, scope: !7022)
!7026 = !DILocation(line: 943, column: 3, scope: !7022)
!7027 = !DILocation(line: 946, column: 20, scope: !6954)
!7028 = !DILocation(line: 946, column: 2, scope: !6954)
!7029 = !DILocation(line: 962, column: 6, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 962, column: 6)
!7031 = !DILocation(line: 962, column: 6, scope: !6954)
!7032 = !DILocation(line: 963, column: 33, scope: !7030)
!7033 = !DILocation(line: 964, column: 25, scope: !7030)
!7034 = !DILocation(line: 963, column: 3, scope: !7030)
!7035 = !DILocation(line: 966, column: 33, scope: !7030)
!7036 = !DILocation(line: 967, column: 22, scope: !7030)
!7037 = !DILocation(line: 966, column: 3, scope: !7030)
!7038 = !DILabel(scope: !6954, name: "out", file: !3, line: 969)
!7039 = !DILocation(line: 969, column: 1, scope: !6954)
!7040 = !DILocation(line: 970, column: 2, scope: !6954)
!7041 = !DILocation(line: 972, column: 9, scope: !6954)
!7042 = !DILocation(line: 972, column: 2, scope: !6954)
!7043 = distinct !DISubprogram(name: "xen_allocate_irq_gsi", scope: !3, file: !3, line: 654, type: !6513, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7044 = !DILocalVariable(name: "gsi", arg: 1, scope: !7043, file: !3, line: 654, type: !6)
!7045 = !DILocation(line: 654, column: 55, scope: !7043)
!7046 = !DILocalVariable(name: "irq", scope: !7043, file: !3, line: 656, type: !97)
!7047 = !DILocation(line: 656, column: 6, scope: !7043)
!7048 = !DILocation(line: 664, column: 6, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 664, column: 6)
!7050 = !DILocation(line: 664, column: 22, scope: !7049)
!7051 = !DILocation(line: 664, column: 26, scope: !7049)
!7052 = !DILocation(line: 664, column: 6, scope: !7043)
!7053 = !DILocation(line: 665, column: 10, scope: !7049)
!7054 = !DILocation(line: 665, column: 3, scope: !7049)
!7055 = !DILocation(line: 668, column: 6, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 668, column: 6)
!7057 = !DILocation(line: 668, column: 12, scope: !7056)
!7058 = !DILocation(line: 668, column: 10, scope: !7056)
!7059 = !DILocation(line: 668, column: 6, scope: !7043)
!7060 = !DILocation(line: 669, column: 9, scope: !7056)
!7061 = !DILocation(line: 669, column: 7, scope: !7056)
!7062 = !DILocation(line: 669, column: 3, scope: !7056)
!7063 = !DILocation(line: 671, column: 9, scope: !7056)
!7064 = !DILocation(line: 671, column: 7, scope: !7056)
!7065 = !DILocation(line: 673, column: 15, scope: !7043)
!7066 = !DILocation(line: 673, column: 2, scope: !7043)
!7067 = !DILocation(line: 675, column: 9, scope: !7043)
!7068 = !DILocation(line: 675, column: 2, scope: !7043)
!7069 = !DILocation(line: 676, column: 1, scope: !7043)
!7070 = distinct !DISubprogram(name: "HYPERVISOR_physdev_op", scope: !7071, file: !7071, line: 374, type: !7072, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7071 = !DIFile(filename: "./arch/x86/include/asm/xen/hypercall.h", directory: "/home/lizy2001/genbc/linux")
!7072 = !DISubroutineType(types: !7073)
!7073 = !{!97, !97, !466}
!7074 = !DILocalVariable(name: "cmd", arg: 1, scope: !7070, file: !7071, line: 374, type: !97)
!7075 = !DILocation(line: 374, column: 27, scope: !7070)
!7076 = !DILocalVariable(name: "arg", arg: 2, scope: !7070, file: !7071, line: 374, type: !466)
!7077 = !DILocation(line: 374, column: 38, scope: !7070)
!7078 = !DILocalVariable(name: "__res", scope: !7079, file: !7071, line: 376, type: !528)
!7079 = distinct !DILexicalBlock(scope: !7070, file: !7071, line: 376, column: 9)
!7080 = !DILocation(line: 376, column: 9, scope: !7079)
!7081 = !DILocalVariable(name: "__arg1", scope: !7079, file: !7071, line: 376, type: !528)
!7082 = !DILocalVariable(name: "__arg2", scope: !7079, file: !7071, line: 376, type: !528)
!7083 = !DILocalVariable(name: "__arg3", scope: !7079, file: !7071, line: 376, type: !528)
!7084 = !DILocalVariable(name: "__arg4", scope: !7079, file: !7071, line: 376, type: !528)
!7085 = !DILocalVariable(name: "__arg5", scope: !7079, file: !7071, line: 376, type: !528)
!7086 = !{i32 -2139411420}
!7087 = !DILocation(line: 376, column: 2, scope: !7070)
!7088 = distinct !DISubprogram(name: "xen_free_irq", scope: !3, file: !3, line: 678, type: !7089, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7089 = !DISubroutineType(types: !7090)
!7090 = !{null, !6}
!7091 = !DILocalVariable(name: "irq", arg: 1, scope: !7088, file: !3, line: 678, type: !6)
!7092 = !DILocation(line: 678, column: 35, scope: !7088)
!7093 = !DILocalVariable(name: "info", scope: !7088, file: !3, line: 680, type: !474)
!7094 = !DILocation(line: 680, column: 19, scope: !7088)
!7095 = !DILocation(line: 680, column: 39, scope: !7088)
!7096 = !DILocation(line: 680, column: 26, scope: !7088)
!7097 = !DILocalVariable(name: "flags", scope: !7088, file: !3, line: 681, type: !528)
!7098 = !DILocation(line: 681, column: 16, scope: !7088)
!7099 = !DILocalVariable(name: "__ret_warn_on", scope: !7100, file: !3, line: 683, type: !97)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 683, column: 6)
!7101 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 683, column: 6)
!7102 = !DILocation(line: 683, column: 6, scope: !7100)
!7103 = !DILocation(line: 683, column: 6, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 683, column: 6)
!7105 = !DILocation(line: 683, column: 6, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 683, column: 6)
!7107 = !DILocation(line: 683, column: 6, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 683, column: 6)
!7109 = !DILocation(line: 683, column: 6, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 683, column: 6)
!7111 = !{i32 -2138994156, i32 -2138994127, i32 -2138994081, i32 -2138994023, i32 -2138993969, i32 -2138993915, i32 -2138993860, i32 -2138993829}
!7112 = !DILocation(line: 683, column: 6, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 683, column: 6)
!7114 = !{i32 -2138993415, i32 -2138993408, i32 -2138993356, i32 -2138993325, i32 -2138993295}
!7115 = !DILocation(line: 683, column: 6, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 683, column: 6)
!7117 = !DILocation(line: 683, column: 6, scope: !7101)
!7118 = !DILocation(line: 683, column: 6, scope: !7088)
!7119 = !DILocation(line: 684, column: 3, scope: !7101)
!7120 = !DILocation(line: 686, column: 2, scope: !7088)
!7121 = !DILocalVariable(name: "__dummy", scope: !7122, file: !3, line: 686, type: !528)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 686, column: 2)
!7123 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 686, column: 2)
!7124 = !DILocation(line: 686, column: 2, scope: !7122)
!7125 = !DILocalVariable(name: "__dummy2", scope: !7122, file: !3, line: 686, type: !528)
!7126 = !DILocation(line: 686, column: 2, scope: !7123)
!7127 = !DILocation(line: 686, column: 2, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 686, column: 2)
!7129 = !DILocation(line: 686, column: 2, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 686, column: 2)
!7131 = !DILocalVariable(name: "__dummy", scope: !7132, file: !3, line: 686, type: !528)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 686, column: 2)
!7133 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 686, column: 2)
!7134 = !DILocation(line: 686, column: 2, scope: !7132)
!7135 = !DILocalVariable(name: "__dummy2", scope: !7132, file: !3, line: 686, type: !528)
!7136 = !DILocation(line: 686, column: 2, scope: !7133)
!7137 = !DILocation(line: 686, column: 2, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 686, column: 2)
!7139 = !{i32 -2138992474}
!7140 = !DILocation(line: 686, column: 2, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 686, column: 2)
!7142 = !DILocation(line: 688, column: 19, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 688, column: 6)
!7144 = !DILocation(line: 688, column: 25, scope: !7143)
!7145 = !DILocation(line: 688, column: 7, scope: !7143)
!7146 = !DILocation(line: 688, column: 6, scope: !7088)
!7147 = !DILocation(line: 689, column: 20, scope: !7143)
!7148 = !DILocation(line: 689, column: 3, scope: !7143)
!7149 = !DILocation(line: 691, column: 12, scope: !7088)
!7150 = !DILocation(line: 691, column: 18, scope: !7088)
!7151 = !DILocation(line: 691, column: 2, scope: !7088)
!7152 = !DILocation(line: 693, column: 19, scope: !7088)
!7153 = !DILocation(line: 693, column: 2, scope: !7088)
!7154 = !DILocalVariable(name: "__ret_warn_on", scope: !7155, file: !3, line: 695, type: !97)
!7155 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 695, column: 2)
!7156 = !DILocation(line: 695, column: 2, scope: !7155)
!7157 = !DILocation(line: 695, column: 2, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 695, column: 2)
!7159 = !DILocation(line: 695, column: 2, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 695, column: 2)
!7161 = !DILocation(line: 695, column: 2, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 695, column: 2)
!7163 = !DILocation(line: 695, column: 2, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 695, column: 2)
!7165 = !{i32 -2138991866, i32 -2138991837, i32 -2138991791, i32 -2138991733, i32 -2138991679, i32 -2138991625, i32 -2138991570, i32 -2138991539}
!7166 = !DILocation(line: 695, column: 2, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 695, column: 2)
!7168 = !{i32 -2138987064, i32 -2138987057, i32 -2138987005, i32 -2138986974, i32 -2138986944}
!7169 = !DILocation(line: 695, column: 2, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 695, column: 2)
!7171 = !DILocation(line: 697, column: 2, scope: !7088)
!7172 = !DILocalVariable(name: "__dummy", scope: !7173, file: !3, line: 697, type: !528)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 697, column: 2)
!7174 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 697, column: 2)
!7175 = !DILocation(line: 697, column: 2, scope: !7173)
!7176 = !DILocalVariable(name: "__dummy2", scope: !7173, file: !3, line: 697, type: !528)
!7177 = !DILocation(line: 697, column: 2, scope: !7174)
!7178 = !DILocation(line: 697, column: 2, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 697, column: 2)
!7180 = !DILocation(line: 697, column: 2, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 697, column: 2)
!7182 = !DILocalVariable(name: "__dummy", scope: !7183, file: !3, line: 697, type: !528)
!7183 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 697, column: 2)
!7184 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 697, column: 2)
!7185 = !DILocation(line: 697, column: 2, scope: !7183)
!7186 = !DILocalVariable(name: "__dummy2", scope: !7183, file: !3, line: 697, type: !528)
!7187 = !DILocation(line: 697, column: 2, scope: !7184)
!7188 = !DILocation(line: 697, column: 2, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 697, column: 2)
!7190 = !{i32 -2138986104}
!7191 = !DILocation(line: 697, column: 2, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 697, column: 2)
!7193 = !DILocation(line: 699, column: 8, scope: !7088)
!7194 = !DILocation(line: 699, column: 2, scope: !7088)
!7195 = !DILocation(line: 702, column: 6, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 702, column: 6)
!7197 = !DILocation(line: 702, column: 12, scope: !7196)
!7198 = !DILocation(line: 702, column: 10, scope: !7196)
!7199 = !DILocation(line: 702, column: 6, scope: !7088)
!7200 = !DILocation(line: 703, column: 3, scope: !7196)
!7201 = !DILocation(line: 705, column: 16, scope: !7088)
!7202 = !DILocation(line: 705, column: 2, scope: !7088)
!7203 = !DILocation(line: 706, column: 1, scope: !7088)
!7204 = distinct !DISubprogram(name: "xen_irq_info_pirq_setup", scope: !3, file: !3, line: 321, type: !7205, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7205 = !DISubroutineType(types: !7206)
!7206 = !{!97, !6, !491, !6, !6, !520, !517}
!7207 = !DILocalVariable(name: "irq", arg: 1, scope: !7204, file: !3, line: 321, type: !6)
!7208 = !DILocation(line: 321, column: 45, scope: !7204)
!7209 = !DILocalVariable(name: "evtchn", arg: 2, scope: !7204, file: !3, line: 322, type: !491)
!7210 = !DILocation(line: 322, column: 22, scope: !7204)
!7211 = !DILocalVariable(name: "pirq", arg: 3, scope: !7204, file: !3, line: 323, type: !6)
!7212 = !DILocation(line: 323, column: 17, scope: !7204)
!7213 = !DILocalVariable(name: "gsi", arg: 4, scope: !7204, file: !3, line: 324, type: !6)
!7214 = !DILocation(line: 324, column: 17, scope: !7204)
!7215 = !DILocalVariable(name: "domid", arg: 5, scope: !7204, file: !3, line: 325, type: !520)
!7216 = !DILocation(line: 325, column: 17, scope: !7204)
!7217 = !DILocalVariable(name: "flags", arg: 6, scope: !7204, file: !3, line: 326, type: !517)
!7218 = !DILocation(line: 326, column: 22, scope: !7204)
!7219 = !DILocalVariable(name: "info", scope: !7204, file: !3, line: 328, type: !474)
!7220 = !DILocation(line: 328, column: 19, scope: !7204)
!7221 = !DILocation(line: 328, column: 39, scope: !7204)
!7222 = !DILocation(line: 328, column: 26, scope: !7204)
!7223 = !DILocation(line: 330, column: 22, scope: !7204)
!7224 = !DILocation(line: 330, column: 2, scope: !7204)
!7225 = !DILocation(line: 330, column: 8, scope: !7204)
!7226 = !DILocation(line: 330, column: 10, scope: !7204)
!7227 = !DILocation(line: 330, column: 15, scope: !7204)
!7228 = !DILocation(line: 330, column: 20, scope: !7204)
!7229 = !DILocation(line: 331, column: 21, scope: !7204)
!7230 = !DILocation(line: 331, column: 2, scope: !7204)
!7231 = !DILocation(line: 331, column: 8, scope: !7204)
!7232 = !DILocation(line: 331, column: 10, scope: !7204)
!7233 = !DILocation(line: 331, column: 15, scope: !7204)
!7234 = !DILocation(line: 331, column: 19, scope: !7204)
!7235 = !DILocation(line: 332, column: 23, scope: !7204)
!7236 = !DILocation(line: 332, column: 2, scope: !7204)
!7237 = !DILocation(line: 332, column: 8, scope: !7204)
!7238 = !DILocation(line: 332, column: 10, scope: !7204)
!7239 = !DILocation(line: 332, column: 15, scope: !7204)
!7240 = !DILocation(line: 332, column: 21, scope: !7204)
!7241 = !DILocation(line: 333, column: 23, scope: !7204)
!7242 = !DILocation(line: 333, column: 2, scope: !7204)
!7243 = !DILocation(line: 333, column: 8, scope: !7204)
!7244 = !DILocation(line: 333, column: 10, scope: !7204)
!7245 = !DILocation(line: 333, column: 15, scope: !7204)
!7246 = !DILocation(line: 333, column: 21, scope: !7204)
!7247 = !DILocation(line: 335, column: 35, scope: !7204)
!7248 = !DILocation(line: 335, column: 41, scope: !7204)
!7249 = !DILocation(line: 335, column: 57, scope: !7204)
!7250 = !DILocation(line: 335, column: 9, scope: !7204)
!7251 = !DILocation(line: 335, column: 2, scope: !7204)
!7252 = distinct !DISubprogram(name: "__unbind_from_irq", scope: !3, file: !3, line: 862, type: !7089, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7253 = !DILocalVariable(name: "irq", arg: 1, scope: !7252, file: !3, line: 862, type: !6)
!7254 = !DILocation(line: 862, column: 44, scope: !7252)
!7255 = !DILocalVariable(name: "evtchn", scope: !7252, file: !3, line: 864, type: !491)
!7256 = !DILocation(line: 864, column: 16, scope: !7252)
!7257 = !DILocation(line: 864, column: 41, scope: !7252)
!7258 = !DILocation(line: 864, column: 25, scope: !7252)
!7259 = !DILocalVariable(name: "info", scope: !7252, file: !3, line: 865, type: !474)
!7260 = !DILocation(line: 865, column: 19, scope: !7252)
!7261 = !DILocation(line: 865, column: 39, scope: !7252)
!7262 = !DILocation(line: 865, column: 26, scope: !7252)
!7263 = !DILocation(line: 867, column: 6, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 867, column: 6)
!7265 = !DILocation(line: 867, column: 12, scope: !7264)
!7266 = !DILocation(line: 867, column: 19, scope: !7264)
!7267 = !DILocation(line: 867, column: 6, scope: !7252)
!7268 = !DILocation(line: 868, column: 3, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 867, column: 24)
!7270 = !DILocation(line: 868, column: 9, scope: !7269)
!7271 = !DILocation(line: 868, column: 15, scope: !7269)
!7272 = !DILocation(line: 869, column: 7, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 869, column: 7)
!7274 = !DILocation(line: 869, column: 13, scope: !7273)
!7275 = !DILocation(line: 869, column: 20, scope: !7273)
!7276 = !DILocation(line: 869, column: 7, scope: !7269)
!7277 = !DILocation(line: 870, column: 4, scope: !7273)
!7278 = !DILocation(line: 871, column: 2, scope: !7269)
!7279 = !DILocation(line: 873, column: 6, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 873, column: 6)
!7281 = !DILocation(line: 873, column: 6, scope: !7252)
!7282 = !DILocalVariable(name: "cpu", scope: !7283, file: !3, line: 874, type: !6)
!7283 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 873, column: 28)
!7284 = !DILocation(line: 874, column: 16, scope: !7283)
!7285 = !DILocation(line: 874, column: 35, scope: !7283)
!7286 = !DILocation(line: 874, column: 22, scope: !7283)
!7287 = !DILocation(line: 876, column: 20, scope: !7283)
!7288 = !DILocation(line: 876, column: 3, scope: !7283)
!7289 = !DILocation(line: 878, column: 25, scope: !7283)
!7290 = !DILocation(line: 878, column: 11, scope: !7283)
!7291 = !DILocation(line: 878, column: 3, scope: !7283)
!7292 = !DILocation(line: 880, column: 4, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 880, column: 4)
!7294 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 878, column: 31)
!7295 = !DILocation(line: 880, column: 4, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 880, column: 4)
!7297 = !DILocalVariable(name: "__vpp_verify", scope: !7298, file: !3, line: 880, type: !3999)
!7298 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 880, column: 4)
!7299 = !DILocation(line: 880, column: 4, scope: !7298)
!7300 = !DILocation(line: 880, column: 44, scope: !7294)
!7301 = !DILocation(line: 880, column: 30, scope: !7294)
!7302 = !DILocation(line: 880, column: 4, scope: !7294)
!7303 = !DILocation(line: 880, column: 50, scope: !7294)
!7304 = !DILocation(line: 881, column: 4, scope: !7294)
!7305 = !DILocation(line: 883, column: 4, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 883, column: 4)
!7307 = !DILocation(line: 883, column: 4, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 883, column: 4)
!7309 = !DILocalVariable(name: "__vpp_verify", scope: !7310, file: !3, line: 883, type: !3999)
!7310 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 883, column: 4)
!7311 = !DILocation(line: 883, column: 4, scope: !7310)
!7312 = !DILocation(line: 883, column: 42, scope: !7294)
!7313 = !DILocation(line: 883, column: 29, scope: !7294)
!7314 = !DILocation(line: 883, column: 4, scope: !7294)
!7315 = !DILocation(line: 883, column: 48, scope: !7294)
!7316 = !DILocation(line: 884, column: 4, scope: !7294)
!7317 = !DILocation(line: 886, column: 4, scope: !7294)
!7318 = !DILocation(line: 889, column: 24, scope: !7283)
!7319 = !DILocation(line: 889, column: 3, scope: !7283)
!7320 = !DILocation(line: 890, column: 2, scope: !7283)
!7321 = !DILocation(line: 892, column: 15, scope: !7252)
!7322 = !DILocation(line: 892, column: 2, scope: !7252)
!7323 = !DILocation(line: 893, column: 1, scope: !7252)
!7324 = distinct !DISubprogram(name: "pirq_query_unmask", scope: !3, file: !3, line: 717, type: !2690, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7325 = !DILocalVariable(name: "irq", arg: 1, scope: !7324, file: !3, line: 717, type: !97)
!7326 = !DILocation(line: 717, column: 35, scope: !7324)
!7327 = !DILocalVariable(name: "irq_status", scope: !7324, file: !3, line: 719, type: !7328)
!7328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "physdev_irq_status_query", file: !6969, line: 67, size: 64, elements: !7329)
!7329 = !{!7330, !7331}
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7328, file: !6969, line: 69, baseType: !493, size: 32)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7328, file: !6969, line: 71, baseType: !493, size: 32, offset: 32)
!7332 = !DILocation(line: 719, column: 34, scope: !7324)
!7333 = !DILocalVariable(name: "info", scope: !7324, file: !3, line: 720, type: !474)
!7334 = !DILocation(line: 720, column: 19, scope: !7324)
!7335 = !DILocation(line: 720, column: 39, scope: !7324)
!7336 = !DILocation(line: 720, column: 26, scope: !7324)
!7337 = !DILocation(line: 722, column: 2, scope: !7324)
!7338 = !DILocation(line: 722, column: 2, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 722, column: 2)
!7340 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 722, column: 2)
!7341 = !DILocation(line: 722, column: 2, scope: !7340)
!7342 = !DILocation(line: 722, column: 2, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7339, file: !3, line: 722, column: 2)
!7344 = !DILocation(line: 722, column: 2, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 722, column: 2)
!7346 = !DILocation(line: 722, column: 2, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 722, column: 2)
!7348 = !{i32 -2138984599, i32 -2138984570, i32 -2138984524, i32 -2138984466, i32 -2138984412, i32 -2138984358, i32 -2138984303, i32 -2138984272}
!7349 = !DILocation(line: 722, column: 2, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 722, column: 2)
!7351 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 722, column: 2)
!7352 = !{i32 -2138983817, i32 -2138983810, i32 -2138983756, i32 -2138983725, i32 -2138983695}
!7353 = !DILocation(line: 722, column: 2, scope: !7351)
!7354 = !DILocation(line: 724, column: 33, scope: !7324)
!7355 = !DILocation(line: 724, column: 19, scope: !7324)
!7356 = !DILocation(line: 724, column: 13, scope: !7324)
!7357 = !DILocation(line: 724, column: 17, scope: !7324)
!7358 = !DILocation(line: 725, column: 56, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 725, column: 6)
!7360 = !DILocation(line: 725, column: 6, scope: !7359)
!7361 = !DILocation(line: 725, column: 6, scope: !7324)
!7362 = !DILocation(line: 726, column: 14, scope: !7359)
!7363 = !DILocation(line: 726, column: 20, scope: !7359)
!7364 = !DILocation(line: 726, column: 3, scope: !7359)
!7365 = !DILocation(line: 728, column: 2, scope: !7324)
!7366 = !DILocation(line: 728, column: 8, scope: !7324)
!7367 = !DILocation(line: 728, column: 10, scope: !7324)
!7368 = !DILocation(line: 728, column: 15, scope: !7324)
!7369 = !DILocation(line: 728, column: 21, scope: !7324)
!7370 = !DILocation(line: 729, column: 17, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 729, column: 6)
!7372 = !DILocation(line: 729, column: 23, scope: !7371)
!7373 = !DILocation(line: 729, column: 6, scope: !7324)
!7374 = !DILocation(line: 730, column: 3, scope: !7371)
!7375 = !DILocation(line: 730, column: 9, scope: !7371)
!7376 = !DILocation(line: 730, column: 11, scope: !7371)
!7377 = !DILocation(line: 730, column: 16, scope: !7371)
!7378 = !DILocation(line: 730, column: 22, scope: !7371)
!7379 = !DILocation(line: 731, column: 1, scope: !7324)
!7380 = !DILocalVariable(name: "dev", arg: 1, scope: !752, file: !3, line: 976, type: !755)
!7381 = !DILocation(line: 976, column: 43, scope: !752)
!7382 = !DILocalVariable(name: "msidesc", arg: 2, scope: !752, file: !3, line: 976, type: !5865)
!7383 = !DILocation(line: 976, column: 65, scope: !752)
!7384 = !DILocalVariable(name: "rc", scope: !752, file: !3, line: 978, type: !97)
!7385 = !DILocation(line: 978, column: 6, scope: !752)
!7386 = !DILocalVariable(name: "op_get_free_pirq", scope: !752, file: !3, line: 979, type: !7387)
!7387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "physdev_get_free_pirq", file: !6969, line: 229, size: 64, elements: !7388)
!7388 = !{!7389, !7390}
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7387, file: !6969, line: 231, baseType: !97, size: 32)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "pirq", scope: !7387, file: !6969, line: 233, baseType: !493, size: 32, offset: 32)
!7391 = !DILocation(line: 979, column: 31, scope: !752)
!7392 = !DILocation(line: 981, column: 19, scope: !752)
!7393 = !DILocation(line: 981, column: 24, scope: !752)
!7394 = !DILocation(line: 982, column: 54, scope: !752)
!7395 = !DILocation(line: 982, column: 7, scope: !752)
!7396 = !DILocation(line: 982, column: 5, scope: !752)
!7397 = !DILocalVariable(name: "__ret_warn_once", scope: !7398, file: !3, line: 984, type: !97)
!7398 = distinct !DILexicalBlock(scope: !752, file: !3, line: 984, column: 2)
!7399 = !DILocation(line: 984, column: 2, scope: !7398)
!7400 = !DILocation(line: 984, column: 2, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 984, column: 2)
!7402 = !DILocation(line: 0, scope: !7401)
!7403 = !DILocation(line: 984, column: 2, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 984, column: 2)
!7405 = !DILocalVariable(name: "__ret_warn_on", scope: !7406, file: !3, line: 984, type: !97)
!7406 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 984, column: 2)
!7407 = !DILocation(line: 984, column: 2, scope: !7406)
!7408 = !DILocation(line: 984, column: 2, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 984, column: 2)
!7410 = !DILocation(line: 984, column: 2, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 984, column: 2)
!7412 = !DILocation(line: 984, column: 2, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7411, file: !3, line: 984, column: 2)
!7414 = !DILocation(line: 984, column: 2, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7411, file: !3, line: 984, column: 2)
!7416 = !DILocation(line: 984, column: 2, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 984, column: 2)
!7418 = !DILocation(line: 984, column: 2, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 984, column: 2)
!7420 = !{i32 -2138972682, i32 -2138972653, i32 -2138972607, i32 -2138972549, i32 -2138972495, i32 -2138972441, i32 -2138972386, i32 -2138972355}
!7421 = !DILocation(line: 984, column: 2, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 984, column: 2)
!7423 = !{i32 -2138971930, i32 -2138971923, i32 -2138971871, i32 -2138971840, i32 -2138971810}
!7424 = !DILocation(line: 984, column: 2, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 984, column: 2)
!7426 = !DILocation(line: 984, column: 2, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7411, file: !3, line: 984, column: 2)
!7428 = !DILocation(line: 987, column: 9, scope: !752)
!7429 = !DILocation(line: 987, column: 36, scope: !752)
!7430 = !DILocation(line: 987, column: 2, scope: !752)
!7431 = distinct !DISubprogram(name: "xen_bind_pirq_msi_to_irq", scope: !3, file: !3, line: 990, type: !7432, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7432 = !DISubroutineType(types: !7433)
!7433 = !{!97, !755, !5865, !97, !97, !689, !7434}
!7434 = !DIDerivedType(tag: DW_TAG_typedef, name: "domid_t", file: !644, line: 437, baseType: !520)
!7435 = !DILocalVariable(name: "dev", arg: 1, scope: !7431, file: !3, line: 990, type: !755)
!7436 = !DILocation(line: 990, column: 46, scope: !7431)
!7437 = !DILocalVariable(name: "msidesc", arg: 2, scope: !7431, file: !3, line: 990, type: !5865)
!7438 = !DILocation(line: 990, column: 68, scope: !7431)
!7439 = !DILocalVariable(name: "pirq", arg: 3, scope: !7431, file: !3, line: 991, type: !97)
!7440 = !DILocation(line: 991, column: 13, scope: !7431)
!7441 = !DILocalVariable(name: "nvec", arg: 4, scope: !7431, file: !3, line: 991, type: !97)
!7442 = !DILocation(line: 991, column: 23, scope: !7431)
!7443 = !DILocalVariable(name: "name", arg: 5, scope: !7431, file: !3, line: 991, type: !689)
!7444 = !DILocation(line: 991, column: 41, scope: !7431)
!7445 = !DILocalVariable(name: "domid", arg: 6, scope: !7431, file: !3, line: 991, type: !7434)
!7446 = !DILocation(line: 991, column: 55, scope: !7431)
!7447 = !DILocalVariable(name: "i", scope: !7431, file: !3, line: 993, type: !97)
!7448 = !DILocation(line: 993, column: 6, scope: !7431)
!7449 = !DILocalVariable(name: "irq", scope: !7431, file: !3, line: 993, type: !97)
!7450 = !DILocation(line: 993, column: 9, scope: !7431)
!7451 = !DILocalVariable(name: "ret", scope: !7431, file: !3, line: 993, type: !97)
!7452 = !DILocation(line: 993, column: 14, scope: !7431)
!7453 = !DILocation(line: 995, column: 2, scope: !7431)
!7454 = !DILocation(line: 997, column: 34, scope: !7431)
!7455 = !DILocation(line: 997, column: 8, scope: !7431)
!7456 = !DILocation(line: 997, column: 6, scope: !7431)
!7457 = !DILocation(line: 998, column: 6, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 998, column: 6)
!7459 = !DILocation(line: 998, column: 10, scope: !7458)
!7460 = !DILocation(line: 998, column: 6, scope: !7431)
!7461 = !DILocation(line: 999, column: 3, scope: !7458)
!7462 = !DILocation(line: 1001, column: 9, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 1001, column: 2)
!7464 = !DILocation(line: 1001, column: 7, scope: !7463)
!7465 = !DILocation(line: 1001, column: 14, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 1001, column: 2)
!7467 = !DILocation(line: 1001, column: 18, scope: !7466)
!7468 = !DILocation(line: 1001, column: 16, scope: !7466)
!7469 = !DILocation(line: 1001, column: 2, scope: !7463)
!7470 = !DILocation(line: 1002, column: 33, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 1001, column: 29)
!7472 = !DILocation(line: 1002, column: 39, scope: !7471)
!7473 = !DILocation(line: 1002, column: 37, scope: !7471)
!7474 = !DILocation(line: 1002, column: 75, scope: !7471)
!7475 = !DILocation(line: 1002, column: 3, scope: !7471)
!7476 = !DILocation(line: 1004, column: 33, scope: !7471)
!7477 = !DILocation(line: 1004, column: 39, scope: !7471)
!7478 = !DILocation(line: 1004, column: 37, scope: !7471)
!7479 = !DILocation(line: 1004, column: 45, scope: !7471)
!7480 = !DILocation(line: 1004, column: 52, scope: !7471)
!7481 = !DILocation(line: 1004, column: 50, scope: !7471)
!7482 = !DILocation(line: 1004, column: 58, scope: !7471)
!7483 = !DILocation(line: 1005, column: 12, scope: !7471)
!7484 = !DILocation(line: 1005, column: 14, scope: !7471)
!7485 = !DILocation(line: 1004, column: 9, scope: !7471)
!7486 = !DILocation(line: 1004, column: 7, scope: !7471)
!7487 = !DILocation(line: 1006, column: 7, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1006, column: 7)
!7489 = !DILocation(line: 1006, column: 11, scope: !7488)
!7490 = !DILocation(line: 1006, column: 7, scope: !7471)
!7491 = !DILocation(line: 1007, column: 4, scope: !7488)
!7492 = !DILocation(line: 1008, column: 2, scope: !7471)
!7493 = !DILocation(line: 1001, column: 25, scope: !7466)
!7494 = !DILocation(line: 1001, column: 2, scope: !7466)
!7495 = distinct !{!7495, !7469, !7496}
!7496 = !DILocation(line: 1008, column: 2, scope: !7463)
!7497 = !DILocation(line: 1010, column: 25, scope: !7431)
!7498 = !DILocation(line: 1010, column: 30, scope: !7431)
!7499 = !DILocation(line: 1010, column: 8, scope: !7431)
!7500 = !DILocation(line: 1010, column: 6, scope: !7431)
!7501 = !DILocation(line: 1011, column: 6, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 1011, column: 6)
!7503 = !DILocation(line: 1011, column: 10, scope: !7502)
!7504 = !DILocation(line: 1011, column: 6, scope: !7431)
!7505 = !DILocation(line: 1012, column: 3, scope: !7502)
!7506 = !DILocation(line: 1011, column: 12, scope: !7502)
!7507 = !DILabel(scope: !7431, name: "out", file: !3, line: 1013)
!7508 = !DILocation(line: 1013, column: 1, scope: !7431)
!7509 = !DILocation(line: 1014, column: 2, scope: !7431)
!7510 = !DILocation(line: 1015, column: 9, scope: !7431)
!7511 = !DILocation(line: 1015, column: 2, scope: !7431)
!7512 = !DILabel(scope: !7431, name: "error_irq", file: !3, line: 1016)
!7513 = !DILocation(line: 1016, column: 1, scope: !7431)
!7514 = !DILocation(line: 1017, column: 2, scope: !7431)
!7515 = !DILocation(line: 1017, column: 13, scope: !7431)
!7516 = !DILocation(line: 1018, column: 21, scope: !7431)
!7517 = !DILocation(line: 1018, column: 27, scope: !7431)
!7518 = !DILocation(line: 1018, column: 25, scope: !7431)
!7519 = !DILocation(line: 1018, column: 3, scope: !7431)
!7520 = distinct !{!7520, !7514, !7521}
!7521 = !DILocation(line: 1018, column: 31, scope: !7431)
!7522 = !DILocation(line: 1019, column: 2, scope: !7431)
!7523 = !DILocation(line: 1020, column: 9, scope: !7431)
!7524 = !DILocation(line: 1020, column: 2, scope: !7431)
!7525 = !DILocation(line: 1021, column: 1, scope: !7431)
!7526 = distinct !DISubprogram(name: "xen_allocate_irqs_dynamic", scope: !3, file: !3, line: 636, type: !5116, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7527 = !DILocalVariable(name: "nvec", arg: 1, scope: !7526, file: !3, line: 636, type: !97)
!7528 = !DILocation(line: 636, column: 55, scope: !7526)
!7529 = !DILocalVariable(name: "i", scope: !7526, file: !3, line: 638, type: !97)
!7530 = !DILocation(line: 638, column: 6, scope: !7526)
!7531 = !DILocalVariable(name: "irq", scope: !7526, file: !3, line: 638, type: !97)
!7532 = !DILocation(line: 638, column: 9, scope: !7526)
!7533 = !DILocation(line: 638, column: 15, scope: !7526)
!7534 = !DILocation(line: 640, column: 6, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 640, column: 6)
!7536 = !DILocation(line: 640, column: 10, scope: !7535)
!7537 = !DILocation(line: 640, column: 6, scope: !7526)
!7538 = !DILocation(line: 641, column: 10, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 641, column: 3)
!7540 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 640, column: 16)
!7541 = !DILocation(line: 641, column: 8, scope: !7539)
!7542 = !DILocation(line: 641, column: 15, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 641, column: 3)
!7544 = !DILocation(line: 641, column: 19, scope: !7543)
!7545 = !DILocation(line: 641, column: 17, scope: !7543)
!7546 = !DILocation(line: 641, column: 3, scope: !7539)
!7547 = !DILocation(line: 642, column: 17, scope: !7543)
!7548 = !DILocation(line: 642, column: 23, scope: !7543)
!7549 = !DILocation(line: 642, column: 21, scope: !7543)
!7550 = !DILocation(line: 642, column: 4, scope: !7543)
!7551 = !DILocation(line: 641, column: 26, scope: !7543)
!7552 = !DILocation(line: 641, column: 3, scope: !7543)
!7553 = distinct !{!7553, !7546, !7554}
!7554 = !DILocation(line: 642, column: 24, scope: !7539)
!7555 = !DILocation(line: 643, column: 2, scope: !7540)
!7556 = !DILocation(line: 645, column: 9, scope: !7526)
!7557 = !DILocation(line: 645, column: 2, scope: !7526)
!7558 = distinct !DISubprogram(name: "xen_destroy_irq", scope: !3, file: !3, line: 1024, type: !5116, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7559 = !DILocalVariable(name: "irq", arg: 1, scope: !7558, file: !3, line: 1024, type: !97)
!7560 = !DILocation(line: 1024, column: 25, scope: !7558)
!7561 = !DILocalVariable(name: "unmap_irq", scope: !7558, file: !3, line: 1026, type: !7562)
!7562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "physdev_unmap_pirq", file: !6969, line: 161, size: 64, elements: !7563)
!7563 = !{!7564, !7565}
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "domid", scope: !7562, file: !6969, line: 162, baseType: !7434, size: 16)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "pirq", scope: !7562, file: !6969, line: 164, baseType: !97, size: 32, offset: 32)
!7566 = !DILocation(line: 1026, column: 28, scope: !7558)
!7567 = !DILocalVariable(name: "info", scope: !7558, file: !3, line: 1027, type: !474)
!7568 = !DILocation(line: 1027, column: 19, scope: !7558)
!7569 = !DILocation(line: 1027, column: 39, scope: !7558)
!7570 = !DILocation(line: 1027, column: 26, scope: !7558)
!7571 = !DILocalVariable(name: "rc", scope: !7558, file: !3, line: 1028, type: !97)
!7572 = !DILocation(line: 1028, column: 6, scope: !7558)
!7573 = !DILocation(line: 1030, column: 2, scope: !7558)
!7574 = !DILocation(line: 1037, column: 6, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 1037, column: 6)
!7576 = !DILocation(line: 1037, column: 27, scope: !7575)
!7577 = !DILocation(line: 1037, column: 32, scope: !7575)
!7578 = !DILocation(line: 1037, column: 38, scope: !7575)
!7579 = !DILocation(line: 1037, column: 40, scope: !7575)
!7580 = !DILocation(line: 1037, column: 45, scope: !7575)
!7581 = !DILocation(line: 1037, column: 51, scope: !7575)
!7582 = !DILocation(line: 1037, column: 6, scope: !7558)
!7583 = !DILocation(line: 1038, column: 20, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 1037, column: 70)
!7585 = !DILocation(line: 1038, column: 26, scope: !7584)
!7586 = !DILocation(line: 1038, column: 28, scope: !7584)
!7587 = !DILocation(line: 1038, column: 33, scope: !7584)
!7588 = !DILocation(line: 1038, column: 13, scope: !7584)
!7589 = !DILocation(line: 1038, column: 18, scope: !7584)
!7590 = !DILocation(line: 1039, column: 21, scope: !7584)
!7591 = !DILocation(line: 1039, column: 27, scope: !7584)
!7592 = !DILocation(line: 1039, column: 29, scope: !7584)
!7593 = !DILocation(line: 1039, column: 34, scope: !7584)
!7594 = !DILocation(line: 1039, column: 13, scope: !7584)
!7595 = !DILocation(line: 1039, column: 19, scope: !7584)
!7596 = !DILocation(line: 1040, column: 52, scope: !7584)
!7597 = !DILocation(line: 1040, column: 8, scope: !7584)
!7598 = !DILocation(line: 1040, column: 6, scope: !7584)
!7599 = !DILocation(line: 1045, column: 8, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 1045, column: 7)
!7601 = !DILocation(line: 1045, column: 11, scope: !7600)
!7602 = !DILocation(line: 1045, column: 21, scope: !7600)
!7603 = !DILocation(line: 1045, column: 24, scope: !7600)
!7604 = !DILocation(line: 1045, column: 30, scope: !7600)
!7605 = !DILocation(line: 1045, column: 32, scope: !7600)
!7606 = !DILocation(line: 1045, column: 37, scope: !7600)
!7607 = !DILocation(line: 1045, column: 43, scope: !7600)
!7608 = !DILocation(line: 1045, column: 7, scope: !7584)
!7609 = !DILocation(line: 1046, column: 4, scope: !7600)
!7610 = !DILocation(line: 1048, column: 12, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 1048, column: 12)
!7612 = !DILocation(line: 1048, column: 12, scope: !7600)
!7613 = !DILocation(line: 1049, column: 4, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 1048, column: 16)
!7615 = !DILocation(line: 1050, column: 4, scope: !7614)
!7616 = !DILocation(line: 1052, column: 2, scope: !7584)
!7617 = !DILocation(line: 1054, column: 15, scope: !7558)
!7618 = !DILocation(line: 1054, column: 2, scope: !7558)
!7619 = !DILabel(scope: !7558, name: "out", file: !3, line: 1056)
!7620 = !DILocation(line: 1056, column: 1, scope: !7558)
!7621 = !DILocation(line: 1057, column: 2, scope: !7558)
!7622 = !DILocation(line: 1058, column: 9, scope: !7558)
!7623 = !DILocation(line: 1058, column: 2, scope: !7558)
!7624 = distinct !DISubprogram(name: "xen_irq_from_pirq", scope: !3, file: !3, line: 1061, type: !6513, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7625 = !DILocalVariable(name: "pirq", arg: 1, scope: !7624, file: !3, line: 1061, type: !6)
!7626 = !DILocation(line: 1061, column: 32, scope: !7624)
!7627 = !DILocalVariable(name: "irq", scope: !7624, file: !3, line: 1063, type: !97)
!7628 = !DILocation(line: 1063, column: 6, scope: !7624)
!7629 = !DILocalVariable(name: "info", scope: !7624, file: !3, line: 1065, type: !474)
!7630 = !DILocation(line: 1065, column: 19, scope: !7624)
!7631 = !DILocation(line: 1067, column: 2, scope: !7624)
!7632 = !DILocalVariable(name: "__mptr", scope: !7633, file: !3, line: 1069, type: !466)
!7633 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 1069, column: 2)
!7634 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 1069, column: 2)
!7635 = !DILocation(line: 1069, column: 2, scope: !7633)
!7636 = !DILocation(line: 1069, column: 2, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1069, column: 2)
!7638 = !DILocation(line: 1069, column: 2, scope: !7634)
!7639 = !DILocation(line: 1069, column: 2, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 1069, column: 2)
!7641 = !DILocation(line: 1070, column: 7, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !3, line: 1070, column: 7)
!7643 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 1069, column: 54)
!7644 = !DILocation(line: 1070, column: 13, scope: !7642)
!7645 = !DILocation(line: 1070, column: 18, scope: !7642)
!7646 = !DILocation(line: 1070, column: 7, scope: !7643)
!7647 = !DILocation(line: 1071, column: 4, scope: !7642)
!7648 = !DILocation(line: 1072, column: 9, scope: !7643)
!7649 = !DILocation(line: 1072, column: 15, scope: !7643)
!7650 = !DILocation(line: 1072, column: 7, scope: !7643)
!7651 = !DILocation(line: 1073, column: 7, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7643, file: !3, line: 1073, column: 7)
!7653 = !DILocation(line: 1073, column: 13, scope: !7652)
!7654 = !DILocation(line: 1073, column: 15, scope: !7652)
!7655 = !DILocation(line: 1073, column: 20, scope: !7652)
!7656 = !DILocation(line: 1073, column: 28, scope: !7652)
!7657 = !DILocation(line: 1073, column: 25, scope: !7652)
!7658 = !DILocation(line: 1073, column: 7, scope: !7643)
!7659 = !DILocation(line: 1074, column: 4, scope: !7652)
!7660 = !DILocation(line: 1075, column: 2, scope: !7643)
!7661 = !DILocalVariable(name: "__mptr", scope: !7662, file: !3, line: 1069, type: !466)
!7662 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 1069, column: 2)
!7663 = !DILocation(line: 1069, column: 2, scope: !7662)
!7664 = !DILocation(line: 1069, column: 2, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 1069, column: 2)
!7666 = distinct !{!7666, !7638, !7667}
!7667 = !DILocation(line: 1075, column: 2, scope: !7634)
!7668 = !DILocation(line: 1076, column: 6, scope: !7624)
!7669 = !DILocation(line: 1076, column: 2, scope: !7624)
!7670 = !DILabel(scope: !7624, name: "out", file: !3, line: 1077)
!7671 = !DILocation(line: 1077, column: 1, scope: !7624)
!7672 = !DILocation(line: 1078, column: 2, scope: !7624)
!7673 = !DILocation(line: 1080, column: 9, scope: !7624)
!7674 = !DILocation(line: 1080, column: 2, scope: !7624)
!7675 = distinct !DISubprogram(name: "xen_pirq_from_irq", scope: !3, file: !3, line: 1084, type: !6513, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7676 = !DILocalVariable(name: "irq", arg: 1, scope: !7675, file: !3, line: 1084, type: !6)
!7677 = !DILocation(line: 1084, column: 32, scope: !7675)
!7678 = !DILocation(line: 1086, column: 23, scope: !7675)
!7679 = !DILocation(line: 1086, column: 9, scope: !7675)
!7680 = !DILocation(line: 1086, column: 2, scope: !7675)
!7681 = distinct !DISubprogram(name: "pirq_from_irq", scope: !3, file: !3, line: 390, type: !6682, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7682 = !DILocalVariable(name: "irq", arg: 1, scope: !7681, file: !3, line: 390, type: !6)
!7683 = !DILocation(line: 390, column: 40, scope: !7681)
!7684 = !DILocalVariable(name: "info", scope: !7681, file: !3, line: 392, type: !474)
!7685 = !DILocation(line: 392, column: 19, scope: !7681)
!7686 = !DILocation(line: 392, column: 39, scope: !7681)
!7687 = !DILocation(line: 392, column: 26, scope: !7681)
!7688 = !DILocation(line: 394, column: 2, scope: !7681)
!7689 = !DILocation(line: 394, column: 2, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 394, column: 2)
!7691 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 394, column: 2)
!7692 = !DILocation(line: 394, column: 2, scope: !7691)
!7693 = !DILocation(line: 394, column: 2, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 394, column: 2)
!7695 = !DILocation(line: 394, column: 2, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 394, column: 2)
!7697 = !DILocation(line: 394, column: 2, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 394, column: 2)
!7699 = !{i32 -2139018720, i32 -2139018691, i32 -2139018645, i32 -2139018587, i32 -2139018533, i32 -2139018479, i32 -2139018424, i32 -2139018393}
!7700 = !DILocation(line: 394, column: 2, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 394, column: 2)
!7702 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 394, column: 2)
!7703 = !{i32 -2139017938, i32 -2139017931, i32 -2139017877, i32 -2139017846, i32 -2139017816}
!7704 = !DILocation(line: 394, column: 2, scope: !7702)
!7705 = !DILocation(line: 395, column: 2, scope: !7681)
!7706 = !DILocation(line: 395, column: 2, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 395, column: 2)
!7708 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 395, column: 2)
!7709 = !DILocation(line: 395, column: 2, scope: !7708)
!7710 = !DILocation(line: 395, column: 2, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 395, column: 2)
!7712 = !DILocation(line: 395, column: 2, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 395, column: 2)
!7714 = !DILocation(line: 395, column: 2, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 395, column: 2)
!7716 = !{i32 -2139017487, i32 -2139017458, i32 -2139017412, i32 -2139017354, i32 -2139017300, i32 -2139017246, i32 -2139017191, i32 -2139017160}
!7717 = !DILocation(line: 395, column: 2, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 395, column: 2)
!7719 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 395, column: 2)
!7720 = !{i32 -2139016705, i32 -2139016698, i32 -2139016644, i32 -2139016613, i32 -2139016583}
!7721 = !DILocation(line: 395, column: 2, scope: !7719)
!7722 = !DILocation(line: 397, column: 9, scope: !7681)
!7723 = !DILocation(line: 397, column: 15, scope: !7681)
!7724 = !DILocation(line: 397, column: 17, scope: !7681)
!7725 = !DILocation(line: 397, column: 22, scope: !7681)
!7726 = !DILocation(line: 397, column: 2, scope: !7681)
!7727 = distinct !DISubprogram(name: "bind_evtchn_to_irq", scope: !3, file: !3, line: 1129, type: !6481, scopeLine: 1130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7728 = !DILocalVariable(name: "evtchn", arg: 1, scope: !7727, file: !3, line: 1129, type: !491)
!7729 = !DILocation(line: 1129, column: 38, scope: !7727)
!7730 = !DILocation(line: 1131, column: 33, scope: !7727)
!7731 = !DILocation(line: 1131, column: 9, scope: !7727)
!7732 = !DILocation(line: 1131, column: 2, scope: !7727)
!7733 = distinct !DISubprogram(name: "bind_evtchn_to_irq_chip", scope: !3, file: !3, line: 1090, type: !7734, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7734 = !DISubroutineType(types: !7735)
!7735 = !{!97, !491, !5931}
!7736 = !DILocalVariable(name: "evtchn", arg: 1, scope: !7733, file: !3, line: 1090, type: !491)
!7737 = !DILocation(line: 1090, column: 50, scope: !7733)
!7738 = !DILocalVariable(name: "chip", arg: 2, scope: !7733, file: !3, line: 1090, type: !5931)
!7739 = !DILocation(line: 1090, column: 75, scope: !7733)
!7740 = !DILocalVariable(name: "irq", scope: !7733, file: !3, line: 1092, type: !97)
!7741 = !DILocation(line: 1092, column: 6, scope: !7733)
!7742 = !DILocalVariable(name: "ret", scope: !7733, file: !3, line: 1093, type: !97)
!7743 = !DILocation(line: 1093, column: 6, scope: !7733)
!7744 = !DILocation(line: 1095, column: 6, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 1095, column: 6)
!7746 = !DILocation(line: 1095, column: 16, scope: !7745)
!7747 = !DILocation(line: 1095, column: 13, scope: !7745)
!7748 = !DILocation(line: 1095, column: 6, scope: !7733)
!7749 = !DILocation(line: 1096, column: 3, scope: !7745)
!7750 = !DILocation(line: 1098, column: 2, scope: !7733)
!7751 = !DILocation(line: 1100, column: 26, scope: !7733)
!7752 = !DILocation(line: 1100, column: 8, scope: !7733)
!7753 = !DILocation(line: 1100, column: 6, scope: !7733)
!7754 = !DILocation(line: 1102, column: 6, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 1102, column: 6)
!7756 = !DILocation(line: 1102, column: 10, scope: !7755)
!7757 = !DILocation(line: 1102, column: 6, scope: !7733)
!7758 = !DILocation(line: 1103, column: 9, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 1102, column: 17)
!7760 = !DILocation(line: 1103, column: 7, scope: !7759)
!7761 = !DILocation(line: 1104, column: 7, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 1104, column: 7)
!7763 = !DILocation(line: 1104, column: 11, scope: !7762)
!7764 = !DILocation(line: 1104, column: 7, scope: !7759)
!7765 = !DILocation(line: 1105, column: 4, scope: !7762)
!7766 = !DILocation(line: 1107, column: 33, scope: !7759)
!7767 = !DILocation(line: 1107, column: 38, scope: !7759)
!7768 = !DILocation(line: 1107, column: 3, scope: !7759)
!7769 = !DILocation(line: 1110, column: 35, scope: !7759)
!7770 = !DILocation(line: 1110, column: 40, scope: !7759)
!7771 = !DILocation(line: 1110, column: 9, scope: !7759)
!7772 = !DILocation(line: 1110, column: 7, scope: !7759)
!7773 = !DILocation(line: 1111, column: 7, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 1111, column: 7)
!7775 = !DILocation(line: 1111, column: 11, scope: !7774)
!7776 = !DILocation(line: 1111, column: 7, scope: !7759)
!7777 = !DILocation(line: 1112, column: 22, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 1111, column: 16)
!7779 = !DILocation(line: 1112, column: 4, scope: !7778)
!7780 = !DILocation(line: 1113, column: 10, scope: !7778)
!7781 = !DILocation(line: 1113, column: 8, scope: !7778)
!7782 = !DILocation(line: 1114, column: 4, scope: !7778)
!7783 = !DILocation(line: 1117, column: 22, scope: !7759)
!7784 = !DILocation(line: 1117, column: 3, scope: !7759)
!7785 = !DILocation(line: 1118, column: 2, scope: !7759)
!7786 = !DILocalVariable(name: "info", scope: !7787, file: !3, line: 1119, type: !474)
!7787 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 1118, column: 9)
!7788 = !DILocation(line: 1119, column: 20, scope: !7787)
!7789 = !DILocation(line: 1119, column: 40, scope: !7787)
!7790 = !DILocation(line: 1119, column: 27, scope: !7787)
!7791 = !DILocalVariable(name: "__ret_warn_on", scope: !7792, file: !3, line: 1120, type: !97)
!7792 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 1120, column: 3)
!7793 = !DILocation(line: 1120, column: 3, scope: !7792)
!7794 = !DILocation(line: 1120, column: 3, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 1120, column: 3)
!7796 = !DILocation(line: 1120, column: 3, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 1120, column: 3)
!7798 = !DILocation(line: 1120, column: 3, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 1120, column: 3)
!7800 = !DILocation(line: 1120, column: 3, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 1120, column: 3)
!7802 = !{i32 -2138966575, i32 -2138966546, i32 -2138966500, i32 -2138966442, i32 -2138966388, i32 -2138966334, i32 -2138966279, i32 -2138966248}
!7803 = !DILocation(line: 1120, column: 3, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 1120, column: 3)
!7805 = !{i32 -2138965833, i32 -2138965826, i32 -2138965774, i32 -2138965743, i32 -2138965713}
!7806 = !DILocation(line: 1120, column: 3, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 1120, column: 3)
!7808 = !DILocation(line: 1102, column: 14, scope: !7755)
!7809 = !DILabel(scope: !7733, name: "out", file: !3, line: 1123)
!7810 = !DILocation(line: 1123, column: 1, scope: !7733)
!7811 = !DILocation(line: 1124, column: 2, scope: !7733)
!7812 = !DILocation(line: 1126, column: 9, scope: !7733)
!7813 = !DILocation(line: 1126, column: 2, scope: !7733)
!7814 = !DILocation(line: 1127, column: 1, scope: !7733)
!7815 = distinct !DISubprogram(name: "bind_evtchn_to_irq_lateeoi", scope: !3, file: !3, line: 1135, type: !6481, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7816 = !DILocalVariable(name: "evtchn", arg: 1, scope: !7815, file: !3, line: 1135, type: !491)
!7817 = !DILocation(line: 1135, column: 46, scope: !7815)
!7818 = !DILocation(line: 1137, column: 33, scope: !7815)
!7819 = !DILocation(line: 1137, column: 9, scope: !7815)
!7820 = !DILocation(line: 1137, column: 2, scope: !7815)
!7821 = distinct !DISubprogram(name: "bind_interdomain_evtchn_to_irq_lateeoi", scope: !3, file: !3, line: 1199, type: !7822, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7822 = !DISubroutineType(types: !7823)
!7823 = !{!97, !6, !491}
!7824 = !DILocalVariable(name: "remote_domain", arg: 1, scope: !7821, file: !3, line: 1199, type: !6)
!7825 = !DILocation(line: 1199, column: 57, scope: !7821)
!7826 = !DILocalVariable(name: "remote_port", arg: 2, scope: !7821, file: !3, line: 1200, type: !491)
!7827 = !DILocation(line: 1200, column: 23, scope: !7821)
!7828 = !DILocation(line: 1202, column: 45, scope: !7821)
!7829 = !DILocation(line: 1202, column: 60, scope: !7821)
!7830 = !DILocation(line: 1202, column: 9, scope: !7821)
!7831 = !DILocation(line: 1202, column: 2, scope: !7821)
!7832 = distinct !DISubprogram(name: "bind_interdomain_evtchn_to_irq_chip", scope: !3, file: !3, line: 1182, type: !7833, scopeLine: 1185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7833 = !DISubroutineType(types: !7834)
!7834 = !{!97, !6, !491, !5931}
!7835 = !DILocalVariable(name: "remote_domain", arg: 1, scope: !7832, file: !3, line: 1182, type: !6)
!7836 = !DILocation(line: 1182, column: 61, scope: !7832)
!7837 = !DILocalVariable(name: "remote_port", arg: 2, scope: !7832, file: !3, line: 1183, type: !491)
!7838 = !DILocation(line: 1183, column: 27, scope: !7832)
!7839 = !DILocalVariable(name: "chip", arg: 3, scope: !7832, file: !3, line: 1184, type: !5931)
!7840 = !DILocation(line: 1184, column: 30, scope: !7832)
!7841 = !DILocalVariable(name: "bind_interdomain", scope: !7832, file: !3, line: 1186, type: !7842)
!7842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_bind_interdomain", file: !492, line: 44, size: 96, elements: !7843)
!7843 = !{!7844, !7845, !7846}
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "remote_dom", scope: !7842, file: !492, line: 46, baseType: !7434, size: 16)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !7842, file: !492, line: 47, baseType: !491, size: 32, offset: 32)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !7842, file: !492, line: 49, baseType: !491, size: 32, offset: 64)
!7847 = !DILocation(line: 1186, column: 33, scope: !7832)
!7848 = !DILocalVariable(name: "err", scope: !7832, file: !3, line: 1187, type: !97)
!7849 = !DILocation(line: 1187, column: 6, scope: !7832)
!7850 = !DILocation(line: 1189, column: 33, scope: !7832)
!7851 = !DILocation(line: 1189, column: 19, scope: !7832)
!7852 = !DILocation(line: 1189, column: 31, scope: !7832)
!7853 = !DILocation(line: 1190, column: 33, scope: !7832)
!7854 = !DILocation(line: 1190, column: 19, scope: !7832)
!7855 = !DILocation(line: 1190, column: 31, scope: !7832)
!7856 = !DILocation(line: 1193, column: 8, scope: !7832)
!7857 = !DILocation(line: 1192, column: 8, scope: !7832)
!7858 = !DILocation(line: 1192, column: 6, scope: !7832)
!7859 = !DILocation(line: 1195, column: 9, scope: !7832)
!7860 = !DILocation(line: 1195, column: 58, scope: !7832)
!7861 = !DILocation(line: 1196, column: 13, scope: !7832)
!7862 = !DILocation(line: 1195, column: 17, scope: !7832)
!7863 = !DILocation(line: 1195, column: 2, scope: !7832)
!7864 = distinct !DISubprogram(name: "xen_evtchn_nr_channels", scope: !3, file: !3, line: 1237, type: !6476, scopeLine: 1238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7865 = !DILocation(line: 1239, column: 16, scope: !7864)
!7866 = !DILocation(line: 1239, column: 28, scope: !7864)
!7867 = !DILocation(line: 1239, column: 9, scope: !7864)
!7868 = distinct !DISubprogram(name: "bind_virq_to_irq", scope: !3, file: !3, line: 1243, type: !7869, scopeLine: 1244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!7869 = !DISubroutineType(types: !7870)
!7870 = !{!97, !6, !6, !1066}
!7871 = !DILocalVariable(name: "virq", arg: 1, scope: !7868, file: !3, line: 1243, type: !6)
!7872 = !DILocation(line: 1243, column: 35, scope: !7868)
!7873 = !DILocalVariable(name: "cpu", arg: 2, scope: !7868, file: !3, line: 1243, type: !6)
!7874 = !DILocation(line: 1243, column: 54, scope: !7868)
!7875 = !DILocalVariable(name: "percpu", arg: 3, scope: !7868, file: !3, line: 1243, type: !1066)
!7876 = !DILocation(line: 1243, column: 64, scope: !7868)
!7877 = !DILocalVariable(name: "bind_virq", scope: !7868, file: !3, line: 1245, type: !7878)
!7878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_bind_virq", file: !492, line: 61, size: 96, elements: !7879)
!7879 = !{!7880, !7881, !7882}
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "virq", scope: !7878, file: !492, line: 63, baseType: !493, size: 32)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "vcpu", scope: !7878, file: !492, line: 64, baseType: !493, size: 32, offset: 32)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7878, file: !492, line: 66, baseType: !491, size: 32, offset: 64)
!7883 = !DILocation(line: 1245, column: 26, scope: !7868)
!7884 = !DILocalVariable(name: "evtchn", scope: !7868, file: !3, line: 1246, type: !491)
!7885 = !DILocation(line: 1246, column: 16, scope: !7868)
!7886 = !DILocalVariable(name: "irq", scope: !7868, file: !3, line: 1247, type: !97)
!7887 = !DILocation(line: 1247, column: 6, scope: !7868)
!7888 = !DILocalVariable(name: "ret", scope: !7868, file: !3, line: 1247, type: !97)
!7889 = !DILocation(line: 1247, column: 11, scope: !7868)
!7890 = !DILocation(line: 1249, column: 2, scope: !7868)
!7891 = !DILocation(line: 1251, column: 8, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 1251, column: 8)
!7893 = !DILocation(line: 1251, column: 8, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 1251, column: 8)
!7895 = !DILocalVariable(name: "__vpp_verify", scope: !7896, file: !3, line: 1251, type: !3999)
!7896 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 1251, column: 8)
!7897 = !DILocation(line: 1251, column: 8, scope: !7896)
!7898 = !DILocation(line: 1251, column: 34, scope: !7868)
!7899 = !DILocation(line: 1251, column: 8, scope: !7868)
!7900 = !DILocation(line: 1251, column: 6, scope: !7868)
!7901 = !DILocation(line: 1253, column: 6, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 1253, column: 6)
!7903 = !DILocation(line: 1253, column: 10, scope: !7902)
!7904 = !DILocation(line: 1253, column: 6, scope: !7868)
!7905 = !DILocation(line: 1254, column: 9, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 1253, column: 17)
!7907 = !DILocation(line: 1254, column: 7, scope: !7906)
!7908 = !DILocation(line: 1255, column: 7, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1255, column: 7)
!7910 = !DILocation(line: 1255, column: 11, scope: !7909)
!7911 = !DILocation(line: 1255, column: 7, scope: !7906)
!7912 = !DILocation(line: 1256, column: 4, scope: !7909)
!7913 = !DILocation(line: 1258, column: 7, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1258, column: 7)
!7915 = !DILocation(line: 1258, column: 7, scope: !7906)
!7916 = !DILocation(line: 1259, column: 34, scope: !7914)
!7917 = !DILocation(line: 1259, column: 4, scope: !7914)
!7918 = !DILocation(line: 1262, column: 34, scope: !7914)
!7919 = !DILocation(line: 1262, column: 4, scope: !7914)
!7920 = !DILocation(line: 1265, column: 20, scope: !7906)
!7921 = !DILocation(line: 1265, column: 13, scope: !7906)
!7922 = !DILocation(line: 1265, column: 18, scope: !7906)
!7923 = !DILocation(line: 1266, column: 32, scope: !7906)
!7924 = !DILocation(line: 1266, column: 20, scope: !7906)
!7925 = !DILocation(line: 1266, column: 13, scope: !7906)
!7926 = !DILocation(line: 1266, column: 18, scope: !7906)
!7927 = !DILocation(line: 1268, column: 7, scope: !7906)
!7928 = !DILocation(line: 1267, column: 9, scope: !7906)
!7929 = !DILocation(line: 1267, column: 7, scope: !7906)
!7930 = !DILocation(line: 1269, column: 7, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1269, column: 7)
!7932 = !DILocation(line: 1269, column: 11, scope: !7931)
!7933 = !DILocation(line: 1269, column: 7, scope: !7906)
!7934 = !DILocation(line: 1270, column: 23, scope: !7931)
!7935 = !DILocation(line: 1270, column: 11, scope: !7931)
!7936 = !DILocation(line: 1270, column: 4, scope: !7931)
!7937 = !DILocation(line: 1272, column: 8, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1272, column: 8)
!7939 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1271, column: 8)
!7940 = !DILocation(line: 1272, column: 12, scope: !7938)
!7941 = !DILocation(line: 1272, column: 8, scope: !7939)
!7942 = !DILocation(line: 1273, column: 21, scope: !7938)
!7943 = !DILocation(line: 1273, column: 27, scope: !7938)
!7944 = !DILocation(line: 1273, column: 11, scope: !7938)
!7945 = !DILocation(line: 1273, column: 9, scope: !7938)
!7946 = !DILocation(line: 1273, column: 5, scope: !7938)
!7947 = !DILocation(line: 1274, column: 4, scope: !7939)
!7948 = !DILocation(line: 1274, column: 4, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 1274, column: 4)
!7950 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1274, column: 4)
!7951 = !DILocation(line: 1274, column: 4, scope: !7950)
!7952 = !DILocation(line: 1274, column: 4, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 1274, column: 4)
!7954 = !DILocation(line: 1274, column: 4, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 1274, column: 4)
!7956 = !DILocation(line: 1274, column: 4, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 1274, column: 4)
!7958 = !{i32 -2138961451, i32 -2138961422, i32 -2138961376, i32 -2138961318, i32 -2138961264, i32 -2138961210, i32 -2138961155, i32 -2138961124}
!7959 = !DILocation(line: 1274, column: 4, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 1274, column: 4)
!7961 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 1274, column: 4)
!7962 = !{i32 -2138960668, i32 -2138960661, i32 -2138960607, i32 -2138960576, i32 -2138960546}
!7963 = !DILocation(line: 1274, column: 4, scope: !7961)
!7964 = !DILocation(line: 1277, column: 33, scope: !7906)
!7965 = !DILocation(line: 1277, column: 38, scope: !7906)
!7966 = !DILocation(line: 1277, column: 43, scope: !7906)
!7967 = !DILocation(line: 1277, column: 51, scope: !7906)
!7968 = !DILocation(line: 1277, column: 9, scope: !7906)
!7969 = !DILocation(line: 1277, column: 7, scope: !7906)
!7970 = !DILocation(line: 1278, column: 7, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 1278, column: 7)
!7972 = !DILocation(line: 1278, column: 11, scope: !7971)
!7973 = !DILocation(line: 1278, column: 7, scope: !7906)
!7974 = !DILocation(line: 1279, column: 22, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 1278, column: 16)
!7976 = !DILocation(line: 1279, column: 4, scope: !7975)
!7977 = !DILocation(line: 1280, column: 10, scope: !7975)
!7978 = !DILocation(line: 1280, column: 8, scope: !7975)
!7979 = !DILocation(line: 1281, column: 4, scope: !7975)
!7980 = !DILocation(line: 1284, column: 22, scope: !7906)
!7981 = !DILocation(line: 1284, column: 30, scope: !7906)
!7982 = !DILocation(line: 1284, column: 3, scope: !7906)
!7983 = !DILocation(line: 1285, column: 2, scope: !7906)
!7984 = !DILocalVariable(name: "info", scope: !7985, file: !3, line: 1286, type: !474)
!7985 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 1285, column: 9)
!7986 = !DILocation(line: 1286, column: 20, scope: !7985)
!7987 = !DILocation(line: 1286, column: 40, scope: !7985)
!7988 = !DILocation(line: 1286, column: 27, scope: !7985)
!7989 = !DILocalVariable(name: "__ret_warn_on", scope: !7990, file: !3, line: 1287, type: !97)
!7990 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 1287, column: 3)
!7991 = !DILocation(line: 1287, column: 3, scope: !7990)
!7992 = !DILocation(line: 1287, column: 3, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 1287, column: 3)
!7994 = !DILocation(line: 1287, column: 3, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 1287, column: 3)
!7996 = !DILocation(line: 1287, column: 3, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1287, column: 3)
!7998 = !DILocation(line: 1287, column: 3, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1287, column: 3)
!8000 = !{i32 -2138959973, i32 -2138959944, i32 -2138959898, i32 -2138959840, i32 -2138959786, i32 -2138959732, i32 -2138959677, i32 -2138959646}
!8001 = !DILocation(line: 1287, column: 3, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1287, column: 3)
!8003 = !{i32 -2138959231, i32 -2138959224, i32 -2138959172, i32 -2138959141, i32 -2138959111}
!8004 = !DILocation(line: 1287, column: 3, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1287, column: 3)
!8006 = !DILocation(line: 1253, column: 14, scope: !7902)
!8007 = !DILabel(scope: !7868, name: "out", file: !3, line: 1290)
!8008 = !DILocation(line: 1290, column: 1, scope: !7868)
!8009 = !DILocation(line: 1291, column: 2, scope: !7868)
!8010 = !DILocation(line: 1293, column: 9, scope: !7868)
!8011 = !DILocation(line: 1293, column: 2, scope: !7868)
!8012 = distinct !DISubprogram(name: "xen_allocate_irq_dynamic", scope: !3, file: !3, line: 648, type: !8013, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8013 = !DISubroutineType(types: !8014)
!8014 = !{!97}
!8015 = !DILocation(line: 651, column: 9, scope: !8012)
!8016 = !DILocation(line: 651, column: 2, scope: !8012)
!8017 = distinct !DISubprogram(name: "xen_vcpu_nr", scope: !8018, file: !8018, line: 15, type: !8019, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8018 = !DIFile(filename: "./include/xen/xen-ops.h", directory: "/home/lizy2001/genbc/linux")
!8019 = !DISubroutineType(types: !8020)
!8020 = !{!493, !97}
!8021 = !DILocalVariable(name: "cpu", arg: 1, scope: !8017, file: !8018, line: 15, type: !97)
!8022 = !DILocation(line: 15, column: 40, scope: !8017)
!8023 = !DILocation(line: 17, column: 9, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8017, file: !8018, line: 17, column: 9)
!8025 = !DILocation(line: 17, column: 9, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8024, file: !8018, line: 17, column: 9)
!8027 = !DILocalVariable(name: "__vpp_verify", scope: !8028, file: !8018, line: 17, type: !3999)
!8028 = distinct !DILexicalBlock(scope: !8026, file: !8018, line: 17, column: 9)
!8029 = !DILocation(line: 17, column: 9, scope: !8028)
!8030 = !DILocation(line: 17, column: 9, scope: !8017)
!8031 = !DILocation(line: 17, column: 2, scope: !8017)
!8032 = distinct !DISubprogram(name: "HYPERVISOR_event_channel_op", scope: !7071, file: !7071, line: 356, type: !7072, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8033 = !DILocalVariable(name: "cmd", arg: 1, scope: !8032, file: !7071, line: 356, type: !97)
!8034 = !DILocation(line: 356, column: 33, scope: !8032)
!8035 = !DILocalVariable(name: "arg", arg: 2, scope: !8032, file: !7071, line: 356, type: !466)
!8036 = !DILocation(line: 356, column: 44, scope: !8032)
!8037 = !DILocalVariable(name: "__res", scope: !8038, file: !7071, line: 358, type: !528)
!8038 = distinct !DILexicalBlock(scope: !8032, file: !7071, line: 358, column: 9)
!8039 = !DILocation(line: 358, column: 9, scope: !8038)
!8040 = !DILocalVariable(name: "__arg1", scope: !8038, file: !7071, line: 358, type: !528)
!8041 = !DILocalVariable(name: "__arg2", scope: !8038, file: !7071, line: 358, type: !528)
!8042 = !DILocalVariable(name: "__arg3", scope: !8038, file: !7071, line: 358, type: !528)
!8043 = !DILocalVariable(name: "__arg4", scope: !8038, file: !7071, line: 358, type: !528)
!8044 = !DILocalVariable(name: "__arg5", scope: !8038, file: !7071, line: 358, type: !528)
!8045 = !{i32 -2139415675}
!8046 = !DILocation(line: 358, column: 2, scope: !8032)
!8047 = distinct !DISubprogram(name: "find_virq", scope: !3, file: !3, line: 1207, type: !8048, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{!97, !6, !6, !8050}
!8050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!8051 = !DILocalVariable(name: "virq", arg: 1, scope: !8047, file: !3, line: 1207, type: !6)
!8052 = !DILocation(line: 1207, column: 35, scope: !8047)
!8053 = !DILocalVariable(name: "cpu", arg: 2, scope: !8047, file: !3, line: 1207, type: !6)
!8054 = !DILocation(line: 1207, column: 54, scope: !8047)
!8055 = !DILocalVariable(name: "evtchn", arg: 3, scope: !8047, file: !3, line: 1207, type: !8050)
!8056 = !DILocation(line: 1207, column: 74, scope: !8047)
!8057 = !DILocalVariable(name: "status", scope: !8047, file: !3, line: 1209, type: !8058)
!8058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_status", file: !492, line: 128, size: 192, elements: !8059)
!8059 = !{!8060, !8061, !8062, !8063, !8064}
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !8058, file: !492, line: 130, baseType: !7434, size: 16)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8058, file: !492, line: 131, baseType: !491, size: 32, offset: 32)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !8058, file: !492, line: 139, baseType: !493, size: 32, offset: 64)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "vcpu", scope: !8058, file: !492, line: 140, baseType: !493, size: 32, offset: 96)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !8058, file: !492, line: 151, baseType: !8065, size: 64, offset: 128)
!8065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8058, file: !492, line: 141, size: 64, elements: !8066)
!8066 = !{!8067, !8071, !8076, !8077}
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "unbound", scope: !8065, file: !492, line: 144, baseType: !8068, size: 16)
!8068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8065, file: !492, line: 142, size: 16, elements: !8069)
!8069 = !{!8070}
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !8068, file: !492, line: 143, baseType: !7434, size: 16)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "interdomain", scope: !8065, file: !492, line: 148, baseType: !8072, size: 64)
!8072 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8065, file: !492, line: 145, size: 64, elements: !8073)
!8073 = !{!8074, !8075}
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !8072, file: !492, line: 146, baseType: !7434, size: 16)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8072, file: !492, line: 147, baseType: !491, size: 32, offset: 32)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "pirq", scope: !8065, file: !492, line: 149, baseType: !493, size: 32)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "virq", scope: !8065, file: !492, line: 150, baseType: !493, size: 32)
!8078 = !DILocation(line: 1209, column: 23, scope: !8047)
!8079 = !DILocalVariable(name: "port", scope: !8047, file: !3, line: 1210, type: !491)
!8080 = !DILocation(line: 1210, column: 16, scope: !8047)
!8081 = !DILocalVariable(name: "rc", scope: !8047, file: !3, line: 1211, type: !97)
!8082 = !DILocation(line: 1211, column: 6, scope: !8047)
!8083 = !DILocation(line: 1213, column: 2, scope: !8047)
!8084 = !DILocation(line: 1214, column: 12, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 1214, column: 2)
!8086 = !DILocation(line: 1214, column: 7, scope: !8085)
!8087 = !DILocation(line: 1214, column: 17, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 1214, column: 2)
!8089 = !DILocation(line: 1214, column: 24, scope: !8088)
!8090 = !DILocation(line: 1214, column: 22, scope: !8088)
!8091 = !DILocation(line: 1214, column: 2, scope: !8085)
!8092 = !DILocation(line: 1215, column: 10, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 1214, column: 59)
!8094 = !DILocation(line: 1215, column: 14, scope: !8093)
!8095 = !DILocation(line: 1216, column: 17, scope: !8093)
!8096 = !DILocation(line: 1216, column: 10, scope: !8093)
!8097 = !DILocation(line: 1216, column: 15, scope: !8093)
!8098 = !DILocation(line: 1217, column: 53, scope: !8093)
!8099 = !DILocation(line: 1217, column: 8, scope: !8093)
!8100 = !DILocation(line: 1217, column: 6, scope: !8093)
!8101 = !DILocation(line: 1218, column: 7, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 1218, column: 7)
!8103 = !DILocation(line: 1218, column: 10, scope: !8102)
!8104 = !DILocation(line: 1218, column: 7, scope: !8093)
!8105 = !DILocation(line: 1219, column: 4, scope: !8102)
!8106 = !DILocation(line: 1220, column: 14, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 1220, column: 7)
!8108 = !DILocation(line: 1220, column: 21, scope: !8107)
!8109 = !DILocation(line: 1220, column: 7, scope: !8093)
!8110 = !DILocation(line: 1221, column: 4, scope: !8107)
!8111 = !DILocation(line: 1222, column: 14, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 1222, column: 7)
!8113 = !DILocation(line: 1222, column: 16, scope: !8112)
!8114 = !DILocation(line: 1222, column: 24, scope: !8112)
!8115 = !DILocation(line: 1222, column: 21, scope: !8112)
!8116 = !DILocation(line: 1222, column: 29, scope: !8112)
!8117 = !DILocation(line: 1222, column: 39, scope: !8112)
!8118 = !DILocation(line: 1222, column: 59, scope: !8112)
!8119 = !DILocation(line: 1222, column: 47, scope: !8112)
!8120 = !DILocation(line: 1222, column: 44, scope: !8112)
!8121 = !DILocation(line: 1222, column: 7, scope: !8093)
!8122 = !DILocation(line: 1223, column: 14, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8112, file: !3, line: 1222, column: 65)
!8124 = !DILocation(line: 1223, column: 5, scope: !8123)
!8125 = !DILocation(line: 1223, column: 12, scope: !8123)
!8126 = !DILocation(line: 1224, column: 4, scope: !8123)
!8127 = !DILocation(line: 1226, column: 2, scope: !8093)
!8128 = !DILocation(line: 1214, column: 55, scope: !8088)
!8129 = !DILocation(line: 1214, column: 2, scope: !8088)
!8130 = distinct !{!8130, !8091, !8131}
!8131 = !DILocation(line: 1226, column: 2, scope: !8085)
!8132 = !DILocation(line: 1227, column: 9, scope: !8047)
!8133 = !DILocation(line: 1227, column: 2, scope: !8047)
!8134 = distinct !DISubprogram(name: "xen_irq_info_virq_setup", scope: !3, file: !3, line: 307, type: !8135, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8135 = !DISubroutineType(types: !8136)
!8136 = !{!97, !6, !6, !491, !6}
!8137 = !DILocalVariable(name: "cpu", arg: 1, scope: !8134, file: !3, line: 307, type: !6)
!8138 = !DILocation(line: 307, column: 45, scope: !8134)
!8139 = !DILocalVariable(name: "irq", arg: 2, scope: !8134, file: !3, line: 308, type: !6)
!8140 = !DILocation(line: 308, column: 17, scope: !8134)
!8141 = !DILocalVariable(name: "evtchn", arg: 3, scope: !8134, file: !3, line: 309, type: !491)
!8142 = !DILocation(line: 309, column: 22, scope: !8134)
!8143 = !DILocalVariable(name: "virq", arg: 4, scope: !8134, file: !3, line: 310, type: !6)
!8144 = !DILocation(line: 310, column: 17, scope: !8134)
!8145 = !DILocalVariable(name: "info", scope: !8134, file: !3, line: 312, type: !474)
!8146 = !DILocation(line: 312, column: 19, scope: !8134)
!8147 = !DILocation(line: 312, column: 39, scope: !8134)
!8148 = !DILocation(line: 312, column: 26, scope: !8134)
!8149 = !DILocation(line: 314, column: 17, scope: !8134)
!8150 = !DILocation(line: 314, column: 2, scope: !8134)
!8151 = !DILocation(line: 314, column: 8, scope: !8134)
!8152 = !DILocation(line: 314, column: 10, scope: !8134)
!8153 = !DILocation(line: 314, column: 15, scope: !8134)
!8154 = !DILocation(line: 316, column: 36, scope: !8134)
!8155 = !DILocation(line: 316, column: 2, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 316, column: 2)
!8157 = !DILocation(line: 316, column: 2, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 316, column: 2)
!8159 = !DILocalVariable(name: "__vpp_verify", scope: !8160, file: !3, line: 316, type: !3999)
!8160 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 316, column: 2)
!8161 = !DILocation(line: 316, column: 2, scope: !8160)
!8162 = !DILocation(line: 316, column: 28, scope: !8134)
!8163 = !DILocation(line: 316, column: 2, scope: !8134)
!8164 = !DILocation(line: 316, column: 34, scope: !8134)
!8165 = !DILocation(line: 318, column: 35, scope: !8134)
!8166 = !DILocation(line: 318, column: 41, scope: !8134)
!8167 = !DILocation(line: 318, column: 57, scope: !8134)
!8168 = !DILocation(line: 318, column: 9, scope: !8134)
!8169 = !DILocation(line: 318, column: 2, scope: !8134)
!8170 = distinct !DISubprogram(name: "bind_evtchn_to_cpu", scope: !3, file: !3, line: 436, type: !8171, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8171 = !DISubroutineType(types: !8172)
!8172 = !{null, !491, !6}
!8173 = !DILocalVariable(name: "evtchn", arg: 1, scope: !8170, file: !3, line: 436, type: !491)
!8174 = !DILocation(line: 436, column: 46, scope: !8170)
!8175 = !DILocalVariable(name: "cpu", arg: 2, scope: !8170, file: !3, line: 436, type: !6)
!8176 = !DILocation(line: 436, column: 67, scope: !8170)
!8177 = !DILocalVariable(name: "irq", scope: !8170, file: !3, line: 438, type: !97)
!8178 = !DILocation(line: 438, column: 6, scope: !8170)
!8179 = !DILocation(line: 438, column: 30, scope: !8170)
!8180 = !DILocation(line: 438, column: 12, scope: !8170)
!8181 = !DILocalVariable(name: "info", scope: !8170, file: !3, line: 439, type: !474)
!8182 = !DILocation(line: 439, column: 19, scope: !8170)
!8183 = !DILocation(line: 439, column: 39, scope: !8170)
!8184 = !DILocation(line: 439, column: 26, scope: !8170)
!8185 = !DILocation(line: 441, column: 2, scope: !8170)
!8186 = !DILocation(line: 441, column: 2, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 441, column: 2)
!8188 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 441, column: 2)
!8189 = !DILocation(line: 441, column: 2, scope: !8188)
!8190 = !DILocation(line: 441, column: 2, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 441, column: 2)
!8192 = !DILocation(line: 441, column: 2, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 441, column: 2)
!8194 = !DILocation(line: 441, column: 2, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 441, column: 2)
!8196 = !{i32 -2139015040, i32 -2139015011, i32 -2139014965, i32 -2139014907, i32 -2139014853, i32 -2139014799, i32 -2139014744, i32 -2139014713}
!8197 = !DILocation(line: 441, column: 2, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 441, column: 2)
!8199 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 441, column: 2)
!8200 = !{i32 -2139014258, i32 -2139014251, i32 -2139014197, i32 -2139014166, i32 -2139014136}
!8201 = !DILocation(line: 441, column: 2, scope: !8199)
!8202 = !DILocation(line: 445, column: 30, scope: !8170)
!8203 = !DILocation(line: 445, column: 38, scope: !8170)
!8204 = !DILocation(line: 445, column: 43, scope: !8170)
!8205 = !DILocation(line: 445, column: 49, scope: !8170)
!8206 = !DILocation(line: 445, column: 2, scope: !8170)
!8207 = !DILocation(line: 447, column: 14, scope: !8170)
!8208 = !DILocation(line: 447, column: 2, scope: !8170)
!8209 = !DILocation(line: 447, column: 8, scope: !8170)
!8210 = !DILocation(line: 447, column: 12, scope: !8170)
!8211 = !DILocation(line: 448, column: 1, scope: !8170)
!8212 = distinct !DISubprogram(name: "bind_evtchn_to_irqhandler", scope: !3, file: !3, line: 1323, type: !8213, scopeLine: 1327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8213 = !DISubroutineType(types: !8214)
!8214 = !{!97, !491, !6099, !528, !689, !466}
!8215 = !DILocalVariable(name: "evtchn", arg: 1, scope: !8212, file: !3, line: 1323, type: !491)
!8216 = !DILocation(line: 1323, column: 45, scope: !8212)
!8217 = !DILocalVariable(name: "handler", arg: 2, scope: !8212, file: !3, line: 1324, type: !6099)
!8218 = !DILocation(line: 1324, column: 24, scope: !8212)
!8219 = !DILocalVariable(name: "irqflags", arg: 3, scope: !8212, file: !3, line: 1325, type: !528)
!8220 = !DILocation(line: 1325, column: 24, scope: !8212)
!8221 = !DILocalVariable(name: "devname", arg: 4, scope: !8212, file: !3, line: 1326, type: !689)
!8222 = !DILocation(line: 1326, column: 22, scope: !8212)
!8223 = !DILocalVariable(name: "dev_id", arg: 5, scope: !8212, file: !3, line: 1326, type: !466)
!8224 = !DILocation(line: 1326, column: 37, scope: !8212)
!8225 = !DILocation(line: 1328, column: 40, scope: !8212)
!8226 = !DILocation(line: 1328, column: 48, scope: !8212)
!8227 = !DILocation(line: 1328, column: 57, scope: !8212)
!8228 = !DILocation(line: 1329, column: 12, scope: !8212)
!8229 = !DILocation(line: 1329, column: 21, scope: !8212)
!8230 = !DILocation(line: 1328, column: 9, scope: !8212)
!8231 = !DILocation(line: 1328, column: 2, scope: !8212)
!8232 = distinct !DISubprogram(name: "bind_evtchn_to_irqhandler_chip", scope: !3, file: !3, line: 1303, type: !8233, scopeLine: 1308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!97, !491, !6099, !528, !689, !466, !5931}
!8235 = !DILocalVariable(name: "evtchn", arg: 1, scope: !8232, file: !3, line: 1303, type: !491)
!8236 = !DILocation(line: 1303, column: 57, scope: !8232)
!8237 = !DILocalVariable(name: "handler", arg: 2, scope: !8232, file: !3, line: 1304, type: !6099)
!8238 = !DILocation(line: 1304, column: 22, scope: !8232)
!8239 = !DILocalVariable(name: "irqflags", arg: 3, scope: !8232, file: !3, line: 1305, type: !528)
!8240 = !DILocation(line: 1305, column: 22, scope: !8232)
!8241 = !DILocalVariable(name: "devname", arg: 4, scope: !8232, file: !3, line: 1306, type: !689)
!8242 = !DILocation(line: 1306, column: 20, scope: !8232)
!8243 = !DILocalVariable(name: "dev_id", arg: 5, scope: !8232, file: !3, line: 1306, type: !466)
!8244 = !DILocation(line: 1306, column: 35, scope: !8232)
!8245 = !DILocalVariable(name: "chip", arg: 6, scope: !8232, file: !3, line: 1307, type: !5931)
!8246 = !DILocation(line: 1307, column: 25, scope: !8232)
!8247 = !DILocalVariable(name: "irq", scope: !8232, file: !3, line: 1309, type: !97)
!8248 = !DILocation(line: 1309, column: 6, scope: !8232)
!8249 = !DILocalVariable(name: "retval", scope: !8232, file: !3, line: 1309, type: !97)
!8250 = !DILocation(line: 1309, column: 11, scope: !8232)
!8251 = !DILocation(line: 1311, column: 32, scope: !8232)
!8252 = !DILocation(line: 1311, column: 40, scope: !8232)
!8253 = !DILocation(line: 1311, column: 8, scope: !8232)
!8254 = !DILocation(line: 1311, column: 6, scope: !8232)
!8255 = !DILocation(line: 1312, column: 6, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8232, file: !3, line: 1312, column: 6)
!8257 = !DILocation(line: 1312, column: 10, scope: !8256)
!8258 = !DILocation(line: 1312, column: 6, scope: !8232)
!8259 = !DILocation(line: 1313, column: 10, scope: !8256)
!8260 = !DILocation(line: 1313, column: 3, scope: !8256)
!8261 = !DILocation(line: 1314, column: 23, scope: !8232)
!8262 = !DILocation(line: 1314, column: 28, scope: !8232)
!8263 = !DILocation(line: 1314, column: 37, scope: !8232)
!8264 = !DILocation(line: 1314, column: 47, scope: !8232)
!8265 = !DILocation(line: 1314, column: 56, scope: !8232)
!8266 = !DILocation(line: 1314, column: 11, scope: !8232)
!8267 = !DILocation(line: 1314, column: 9, scope: !8232)
!8268 = !DILocation(line: 1315, column: 6, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8232, file: !3, line: 1315, column: 6)
!8270 = !DILocation(line: 1315, column: 13, scope: !8269)
!8271 = !DILocation(line: 1315, column: 6, scope: !8232)
!8272 = !DILocation(line: 1316, column: 19, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 1315, column: 19)
!8274 = !DILocation(line: 1316, column: 3, scope: !8273)
!8275 = !DILocation(line: 1317, column: 10, scope: !8273)
!8276 = !DILocation(line: 1317, column: 3, scope: !8273)
!8277 = !DILocation(line: 1320, column: 9, scope: !8232)
!8278 = !DILocation(line: 1320, column: 2, scope: !8232)
!8279 = !DILocation(line: 1321, column: 1, scope: !8232)
!8280 = distinct !DISubprogram(name: "bind_evtchn_to_irqhandler_lateeoi", scope: !3, file: !3, line: 1334, type: !8213, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8281 = !DILocalVariable(name: "evtchn", arg: 1, scope: !8280, file: !3, line: 1334, type: !491)
!8282 = !DILocation(line: 1334, column: 53, scope: !8280)
!8283 = !DILocalVariable(name: "handler", arg: 2, scope: !8280, file: !3, line: 1335, type: !6099)
!8284 = !DILocation(line: 1335, column: 25, scope: !8280)
!8285 = !DILocalVariable(name: "irqflags", arg: 3, scope: !8280, file: !3, line: 1336, type: !528)
!8286 = !DILocation(line: 1336, column: 25, scope: !8280)
!8287 = !DILocalVariable(name: "devname", arg: 4, scope: !8280, file: !3, line: 1337, type: !689)
!8288 = !DILocation(line: 1337, column: 23, scope: !8280)
!8289 = !DILocalVariable(name: "dev_id", arg: 5, scope: !8280, file: !3, line: 1337, type: !466)
!8290 = !DILocation(line: 1337, column: 38, scope: !8280)
!8291 = !DILocation(line: 1339, column: 40, scope: !8280)
!8292 = !DILocation(line: 1339, column: 48, scope: !8280)
!8293 = !DILocation(line: 1339, column: 57, scope: !8280)
!8294 = !DILocation(line: 1340, column: 12, scope: !8280)
!8295 = !DILocation(line: 1340, column: 21, scope: !8280)
!8296 = !DILocation(line: 1339, column: 9, scope: !8280)
!8297 = !DILocation(line: 1339, column: 2, scope: !8280)
!8298 = distinct !DISubprogram(name: "bind_interdomain_evtchn_to_irqhandler_lateeoi", scope: !3, file: !3, line: 1366, type: !8299, scopeLine: 1372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{!97, !6, !491, !6099, !528, !689, !466}
!8301 = !DILocalVariable(name: "remote_domain", arg: 1, scope: !8298, file: !3, line: 1366, type: !6)
!8302 = !DILocation(line: 1366, column: 64, scope: !8298)
!8303 = !DILocalVariable(name: "remote_port", arg: 2, scope: !8298, file: !3, line: 1367, type: !491)
!8304 = !DILocation(line: 1367, column: 23, scope: !8298)
!8305 = !DILocalVariable(name: "handler", arg: 3, scope: !8298, file: !3, line: 1368, type: !6099)
!8306 = !DILocation(line: 1368, column: 23, scope: !8298)
!8307 = !DILocalVariable(name: "irqflags", arg: 4, scope: !8298, file: !3, line: 1369, type: !528)
!8308 = !DILocation(line: 1369, column: 23, scope: !8298)
!8309 = !DILocalVariable(name: "devname", arg: 5, scope: !8298, file: !3, line: 1370, type: !689)
!8310 = !DILocation(line: 1370, column: 21, scope: !8298)
!8311 = !DILocalVariable(name: "dev_id", arg: 6, scope: !8298, file: !3, line: 1371, type: !466)
!8312 = !DILocation(line: 1371, column: 15, scope: !8298)
!8313 = !DILocation(line: 1373, column: 52, scope: !8298)
!8314 = !DILocation(line: 1374, column: 5, scope: !8298)
!8315 = !DILocation(line: 1374, column: 18, scope: !8298)
!8316 = !DILocation(line: 1374, column: 27, scope: !8298)
!8317 = !DILocation(line: 1374, column: 37, scope: !8298)
!8318 = !DILocation(line: 1375, column: 5, scope: !8298)
!8319 = !DILocation(line: 1373, column: 9, scope: !8298)
!8320 = !DILocation(line: 1373, column: 2, scope: !8298)
!8321 = distinct !DISubprogram(name: "bind_interdomain_evtchn_to_irqhandler_chip", scope: !3, file: !3, line: 1345, type: !8322, scopeLine: 1349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!97, !6, !491, !6099, !528, !689, !466, !5931}
!8324 = !DILocalVariable(name: "remote_domain", arg: 1, scope: !8321, file: !3, line: 1346, type: !6)
!8325 = !DILocation(line: 1346, column: 16, scope: !8321)
!8326 = !DILocalVariable(name: "remote_port", arg: 2, scope: !8321, file: !3, line: 1346, type: !491)
!8327 = !DILocation(line: 1346, column: 45, scope: !8321)
!8328 = !DILocalVariable(name: "handler", arg: 3, scope: !8321, file: !3, line: 1347, type: !6099)
!8329 = !DILocation(line: 1347, column: 17, scope: !8321)
!8330 = !DILocalVariable(name: "irqflags", arg: 4, scope: !8321, file: !3, line: 1347, type: !528)
!8331 = !DILocation(line: 1347, column: 40, scope: !8321)
!8332 = !DILocalVariable(name: "devname", arg: 5, scope: !8321, file: !3, line: 1348, type: !689)
!8333 = !DILocation(line: 1348, column: 15, scope: !8321)
!8334 = !DILocalVariable(name: "dev_id", arg: 6, scope: !8321, file: !3, line: 1348, type: !466)
!8335 = !DILocation(line: 1348, column: 30, scope: !8321)
!8336 = !DILocalVariable(name: "chip", arg: 7, scope: !8321, file: !3, line: 1348, type: !5931)
!8337 = !DILocation(line: 1348, column: 55, scope: !8321)
!8338 = !DILocalVariable(name: "irq", scope: !8321, file: !3, line: 1350, type: !97)
!8339 = !DILocation(line: 1350, column: 6, scope: !8321)
!8340 = !DILocalVariable(name: "retval", scope: !8321, file: !3, line: 1350, type: !97)
!8341 = !DILocation(line: 1350, column: 11, scope: !8321)
!8342 = !DILocation(line: 1352, column: 44, scope: !8321)
!8343 = !DILocation(line: 1352, column: 59, scope: !8321)
!8344 = !DILocation(line: 1353, column: 9, scope: !8321)
!8345 = !DILocation(line: 1352, column: 8, scope: !8321)
!8346 = !DILocation(line: 1352, column: 6, scope: !8321)
!8347 = !DILocation(line: 1354, column: 6, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 1354, column: 6)
!8349 = !DILocation(line: 1354, column: 10, scope: !8348)
!8350 = !DILocation(line: 1354, column: 6, scope: !8321)
!8351 = !DILocation(line: 1355, column: 10, scope: !8348)
!8352 = !DILocation(line: 1355, column: 3, scope: !8348)
!8353 = !DILocation(line: 1357, column: 23, scope: !8321)
!8354 = !DILocation(line: 1357, column: 28, scope: !8321)
!8355 = !DILocation(line: 1357, column: 37, scope: !8321)
!8356 = !DILocation(line: 1357, column: 47, scope: !8321)
!8357 = !DILocation(line: 1357, column: 56, scope: !8321)
!8358 = !DILocation(line: 1357, column: 11, scope: !8321)
!8359 = !DILocation(line: 1357, column: 9, scope: !8321)
!8360 = !DILocation(line: 1358, column: 6, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 1358, column: 6)
!8362 = !DILocation(line: 1358, column: 13, scope: !8361)
!8363 = !DILocation(line: 1358, column: 6, scope: !8321)
!8364 = !DILocation(line: 1359, column: 19, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 1358, column: 19)
!8366 = !DILocation(line: 1359, column: 3, scope: !8365)
!8367 = !DILocation(line: 1360, column: 10, scope: !8365)
!8368 = !DILocation(line: 1360, column: 3, scope: !8365)
!8369 = !DILocation(line: 1363, column: 9, scope: !8321)
!8370 = !DILocation(line: 1363, column: 2, scope: !8321)
!8371 = !DILocation(line: 1364, column: 1, scope: !8321)
!8372 = distinct !DISubprogram(name: "bind_virq_to_irqhandler", scope: !3, file: !3, line: 1379, type: !8373, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8373 = !DISubroutineType(types: !8374)
!8374 = !{!97, !6, !6, !6099, !528, !689, !466}
!8375 = !DILocalVariable(name: "virq", arg: 1, scope: !8372, file: !3, line: 1379, type: !6)
!8376 = !DILocation(line: 1379, column: 42, scope: !8372)
!8377 = !DILocalVariable(name: "cpu", arg: 2, scope: !8372, file: !3, line: 1379, type: !6)
!8378 = !DILocation(line: 1379, column: 61, scope: !8372)
!8379 = !DILocalVariable(name: "handler", arg: 3, scope: !8372, file: !3, line: 1380, type: !6099)
!8380 = !DILocation(line: 1380, column: 22, scope: !8372)
!8381 = !DILocalVariable(name: "irqflags", arg: 4, scope: !8372, file: !3, line: 1381, type: !528)
!8382 = !DILocation(line: 1381, column: 22, scope: !8372)
!8383 = !DILocalVariable(name: "devname", arg: 5, scope: !8372, file: !3, line: 1381, type: !689)
!8384 = !DILocation(line: 1381, column: 44, scope: !8372)
!8385 = !DILocalVariable(name: "dev_id", arg: 6, scope: !8372, file: !3, line: 1381, type: !466)
!8386 = !DILocation(line: 1381, column: 59, scope: !8372)
!8387 = !DILocalVariable(name: "irq", scope: !8372, file: !3, line: 1383, type: !97)
!8388 = !DILocation(line: 1383, column: 6, scope: !8372)
!8389 = !DILocalVariable(name: "retval", scope: !8372, file: !3, line: 1383, type: !97)
!8390 = !DILocation(line: 1383, column: 11, scope: !8372)
!8391 = !DILocation(line: 1385, column: 25, scope: !8372)
!8392 = !DILocation(line: 1385, column: 31, scope: !8372)
!8393 = !DILocation(line: 1385, column: 36, scope: !8372)
!8394 = !DILocation(line: 1385, column: 45, scope: !8372)
!8395 = !DILocation(line: 1385, column: 8, scope: !8372)
!8396 = !DILocation(line: 1385, column: 6, scope: !8372)
!8397 = !DILocation(line: 1386, column: 6, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 1386, column: 6)
!8399 = !DILocation(line: 1386, column: 10, scope: !8398)
!8400 = !DILocation(line: 1386, column: 6, scope: !8372)
!8401 = !DILocation(line: 1387, column: 10, scope: !8398)
!8402 = !DILocation(line: 1387, column: 3, scope: !8398)
!8403 = !DILocation(line: 1388, column: 23, scope: !8372)
!8404 = !DILocation(line: 1388, column: 28, scope: !8372)
!8405 = !DILocation(line: 1388, column: 37, scope: !8372)
!8406 = !DILocation(line: 1388, column: 47, scope: !8372)
!8407 = !DILocation(line: 1388, column: 56, scope: !8372)
!8408 = !DILocation(line: 1388, column: 11, scope: !8372)
!8409 = !DILocation(line: 1388, column: 9, scope: !8372)
!8410 = !DILocation(line: 1389, column: 6, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 1389, column: 6)
!8412 = !DILocation(line: 1389, column: 13, scope: !8411)
!8413 = !DILocation(line: 1389, column: 6, scope: !8372)
!8414 = !DILocation(line: 1390, column: 19, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 1389, column: 19)
!8416 = !DILocation(line: 1390, column: 3, scope: !8415)
!8417 = !DILocation(line: 1391, column: 10, scope: !8415)
!8418 = !DILocation(line: 1391, column: 3, scope: !8415)
!8419 = !DILocation(line: 1394, column: 9, scope: !8372)
!8420 = !DILocation(line: 1394, column: 2, scope: !8372)
!8421 = !DILocation(line: 1395, column: 1, scope: !8372)
!8422 = distinct !DISubprogram(name: "request_irq", scope: !176, file: !176, line: 157, type: !8423, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8423 = !DISubroutineType(types: !8424)
!8424 = !{!97, !6, !6099, !528, !689, !466}
!8425 = !DILocalVariable(name: "irq", arg: 1, scope: !8422, file: !176, line: 157, type: !6)
!8426 = !DILocation(line: 157, column: 26, scope: !8422)
!8427 = !DILocalVariable(name: "handler", arg: 2, scope: !8422, file: !176, line: 157, type: !6099)
!8428 = !DILocation(line: 157, column: 45, scope: !8422)
!8429 = !DILocalVariable(name: "flags", arg: 3, scope: !8422, file: !176, line: 157, type: !528)
!8430 = !DILocation(line: 157, column: 68, scope: !8422)
!8431 = !DILocalVariable(name: "name", arg: 4, scope: !8422, file: !176, line: 158, type: !689)
!8432 = !DILocation(line: 158, column: 18, scope: !8422)
!8433 = !DILocalVariable(name: "dev", arg: 5, scope: !8422, file: !176, line: 158, type: !466)
!8434 = !DILocation(line: 158, column: 30, scope: !8422)
!8435 = !DILocation(line: 160, column: 30, scope: !8422)
!8436 = !DILocation(line: 160, column: 35, scope: !8422)
!8437 = !DILocation(line: 160, column: 50, scope: !8422)
!8438 = !DILocation(line: 160, column: 57, scope: !8422)
!8439 = !DILocation(line: 160, column: 63, scope: !8422)
!8440 = !DILocation(line: 160, column: 9, scope: !8422)
!8441 = !DILocation(line: 160, column: 2, scope: !8422)
!8442 = distinct !DISubprogram(name: "unbind_from_irq", scope: !3, file: !3, line: 1296, type: !7089, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8443 = !DILocalVariable(name: "irq", arg: 1, scope: !8442, file: !3, line: 1296, type: !6)
!8444 = !DILocation(line: 1296, column: 42, scope: !8442)
!8445 = !DILocation(line: 1298, column: 2, scope: !8442)
!8446 = !DILocation(line: 1299, column: 20, scope: !8442)
!8447 = !DILocation(line: 1299, column: 2, scope: !8442)
!8448 = !DILocation(line: 1300, column: 2, scope: !8442)
!8449 = !DILocation(line: 1301, column: 1, scope: !8442)
!8450 = distinct !DISubprogram(name: "bind_ipi_to_irqhandler", scope: !3, file: !3, line: 1398, type: !8451, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8451 = !DISubroutineType(types: !8452)
!8452 = !{!97, !13, !6, !6099, !528, !689, !466}
!8453 = !DILocalVariable(name: "ipi", arg: 1, scope: !8450, file: !3, line: 1398, type: !13)
!8454 = !DILocation(line: 1398, column: 44, scope: !8450)
!8455 = !DILocalVariable(name: "cpu", arg: 2, scope: !8450, file: !3, line: 1399, type: !6)
!8456 = !DILocation(line: 1399, column: 20, scope: !8450)
!8457 = !DILocalVariable(name: "handler", arg: 3, scope: !8450, file: !3, line: 1400, type: !6099)
!8458 = !DILocation(line: 1400, column: 21, scope: !8450)
!8459 = !DILocalVariable(name: "irqflags", arg: 4, scope: !8450, file: !3, line: 1401, type: !528)
!8460 = !DILocation(line: 1401, column: 21, scope: !8450)
!8461 = !DILocalVariable(name: "devname", arg: 5, scope: !8450, file: !3, line: 1402, type: !689)
!8462 = !DILocation(line: 1402, column: 19, scope: !8450)
!8463 = !DILocalVariable(name: "dev_id", arg: 6, scope: !8450, file: !3, line: 1403, type: !466)
!8464 = !DILocation(line: 1403, column: 13, scope: !8450)
!8465 = !DILocalVariable(name: "irq", scope: !8450, file: !3, line: 1405, type: !97)
!8466 = !DILocation(line: 1405, column: 6, scope: !8450)
!8467 = !DILocalVariable(name: "retval", scope: !8450, file: !3, line: 1405, type: !97)
!8468 = !DILocation(line: 1405, column: 11, scope: !8450)
!8469 = !DILocation(line: 1407, column: 24, scope: !8450)
!8470 = !DILocation(line: 1407, column: 29, scope: !8450)
!8471 = !DILocation(line: 1407, column: 8, scope: !8450)
!8472 = !DILocation(line: 1407, column: 6, scope: !8450)
!8473 = !DILocation(line: 1408, column: 6, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 1408, column: 6)
!8475 = !DILocation(line: 1408, column: 10, scope: !8474)
!8476 = !DILocation(line: 1408, column: 6, scope: !8450)
!8477 = !DILocation(line: 1409, column: 10, scope: !8474)
!8478 = !DILocation(line: 1409, column: 3, scope: !8474)
!8479 = !DILocation(line: 1411, column: 11, scope: !8450)
!8480 = !DILocation(line: 1412, column: 23, scope: !8450)
!8481 = !DILocation(line: 1412, column: 28, scope: !8450)
!8482 = !DILocation(line: 1412, column: 37, scope: !8450)
!8483 = !DILocation(line: 1412, column: 47, scope: !8450)
!8484 = !DILocation(line: 1412, column: 56, scope: !8450)
!8485 = !DILocation(line: 1412, column: 11, scope: !8450)
!8486 = !DILocation(line: 1412, column: 9, scope: !8450)
!8487 = !DILocation(line: 1413, column: 6, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 1413, column: 6)
!8489 = !DILocation(line: 1413, column: 13, scope: !8488)
!8490 = !DILocation(line: 1413, column: 6, scope: !8450)
!8491 = !DILocation(line: 1414, column: 19, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 1413, column: 19)
!8493 = !DILocation(line: 1414, column: 3, scope: !8492)
!8494 = !DILocation(line: 1415, column: 10, scope: !8492)
!8495 = !DILocation(line: 1415, column: 3, scope: !8492)
!8496 = !DILocation(line: 1418, column: 9, scope: !8450)
!8497 = !DILocation(line: 1418, column: 2, scope: !8450)
!8498 = !DILocation(line: 1419, column: 1, scope: !8450)
!8499 = distinct !DISubprogram(name: "bind_ipi_to_irq", scope: !3, file: !3, line: 1141, type: !6646, scopeLine: 1142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8500 = !DILocalVariable(name: "ipi", arg: 1, scope: !8499, file: !3, line: 1141, type: !6)
!8501 = !DILocation(line: 1141, column: 41, scope: !8499)
!8502 = !DILocalVariable(name: "cpu", arg: 2, scope: !8499, file: !3, line: 1141, type: !6)
!8503 = !DILocation(line: 1141, column: 59, scope: !8499)
!8504 = !DILocalVariable(name: "bind_ipi", scope: !8499, file: !3, line: 1143, type: !8505)
!8505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_bind_ipi", file: !492, line: 92, size: 64, elements: !8506)
!8506 = !{!8507, !8508}
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "vcpu", scope: !8505, file: !492, line: 93, baseType: !493, size: 32)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8505, file: !492, line: 95, baseType: !491, size: 32, offset: 32)
!8509 = !DILocation(line: 1143, column: 25, scope: !8499)
!8510 = !DILocalVariable(name: "evtchn", scope: !8499, file: !3, line: 1144, type: !491)
!8511 = !DILocation(line: 1144, column: 16, scope: !8499)
!8512 = !DILocalVariable(name: "ret", scope: !8499, file: !3, line: 1145, type: !97)
!8513 = !DILocation(line: 1145, column: 6, scope: !8499)
!8514 = !DILocalVariable(name: "irq", scope: !8499, file: !3, line: 1145, type: !97)
!8515 = !DILocation(line: 1145, column: 11, scope: !8499)
!8516 = !DILocation(line: 1147, column: 2, scope: !8499)
!8517 = !DILocation(line: 1149, column: 8, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 1149, column: 8)
!8519 = !DILocation(line: 1149, column: 8, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 1149, column: 8)
!8521 = !DILocalVariable(name: "__vpp_verify", scope: !8522, file: !3, line: 1149, type: !3999)
!8522 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 1149, column: 8)
!8523 = !DILocation(line: 1149, column: 8, scope: !8522)
!8524 = !DILocation(line: 1149, column: 33, scope: !8499)
!8525 = !DILocation(line: 1149, column: 8, scope: !8499)
!8526 = !DILocation(line: 1149, column: 6, scope: !8499)
!8527 = !DILocation(line: 1151, column: 6, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 1151, column: 6)
!8529 = !DILocation(line: 1151, column: 10, scope: !8528)
!8530 = !DILocation(line: 1151, column: 6, scope: !8499)
!8531 = !DILocation(line: 1152, column: 9, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 1151, column: 17)
!8533 = !DILocation(line: 1152, column: 7, scope: !8532)
!8534 = !DILocation(line: 1153, column: 7, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 1153, column: 7)
!8536 = !DILocation(line: 1153, column: 11, scope: !8535)
!8537 = !DILocation(line: 1153, column: 7, scope: !8532)
!8538 = !DILocation(line: 1154, column: 4, scope: !8535)
!8539 = !DILocation(line: 1156, column: 33, scope: !8532)
!8540 = !DILocation(line: 1156, column: 3, scope: !8532)
!8541 = !DILocation(line: 1159, column: 31, scope: !8532)
!8542 = !DILocation(line: 1159, column: 19, scope: !8532)
!8543 = !DILocation(line: 1159, column: 12, scope: !8532)
!8544 = !DILocation(line: 1159, column: 17, scope: !8532)
!8545 = !DILocation(line: 1161, column: 7, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 1160, column: 7)
!8547 = !DILocation(line: 1160, column: 7, scope: !8546)
!8548 = !DILocation(line: 1161, column: 18, scope: !8546)
!8549 = !DILocation(line: 1160, column: 7, scope: !8532)
!8550 = !DILocation(line: 1162, column: 4, scope: !8546)
!8551 = !DILocation(line: 1162, column: 4, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 1162, column: 4)
!8553 = !DILocation(line: 1162, column: 4, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1162, column: 4)
!8555 = !DILocation(line: 1162, column: 4, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1162, column: 4)
!8557 = !{i32 -2138964827, i32 -2138964798, i32 -2138964752, i32 -2138964694, i32 -2138964640, i32 -2138964586, i32 -2138964531, i32 -2138964500}
!8558 = !DILocation(line: 1162, column: 4, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 1162, column: 4)
!8560 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1162, column: 4)
!8561 = !{i32 -2138964044, i32 -2138964037, i32 -2138963983, i32 -2138963952, i32 -2138963922}
!8562 = !DILocation(line: 1162, column: 4, scope: !8560)
!8563 = !DILocation(line: 1163, column: 21, scope: !8532)
!8564 = !DILocation(line: 1163, column: 10, scope: !8532)
!8565 = !DILocation(line: 1165, column: 32, scope: !8532)
!8566 = !DILocation(line: 1165, column: 37, scope: !8532)
!8567 = !DILocation(line: 1165, column: 42, scope: !8532)
!8568 = !DILocation(line: 1165, column: 50, scope: !8532)
!8569 = !DILocation(line: 1165, column: 9, scope: !8532)
!8570 = !DILocation(line: 1165, column: 7, scope: !8532)
!8571 = !DILocation(line: 1166, column: 7, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 1166, column: 7)
!8573 = !DILocation(line: 1166, column: 11, scope: !8572)
!8574 = !DILocation(line: 1166, column: 7, scope: !8532)
!8575 = !DILocation(line: 1167, column: 22, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8572, file: !3, line: 1166, column: 16)
!8577 = !DILocation(line: 1167, column: 4, scope: !8576)
!8578 = !DILocation(line: 1168, column: 10, scope: !8576)
!8579 = !DILocation(line: 1168, column: 8, scope: !8576)
!8580 = !DILocation(line: 1169, column: 4, scope: !8576)
!8581 = !DILocation(line: 1171, column: 22, scope: !8532)
!8582 = !DILocation(line: 1171, column: 30, scope: !8532)
!8583 = !DILocation(line: 1171, column: 3, scope: !8532)
!8584 = !DILocation(line: 1172, column: 2, scope: !8532)
!8585 = !DILocalVariable(name: "info", scope: !8586, file: !3, line: 1173, type: !474)
!8586 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 1172, column: 9)
!8587 = !DILocation(line: 1173, column: 20, scope: !8586)
!8588 = !DILocation(line: 1173, column: 40, scope: !8586)
!8589 = !DILocation(line: 1173, column: 27, scope: !8586)
!8590 = !DILocalVariable(name: "__ret_warn_on", scope: !8591, file: !3, line: 1174, type: !97)
!8591 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 1174, column: 3)
!8592 = !DILocation(line: 1174, column: 3, scope: !8591)
!8593 = !DILocation(line: 1174, column: 3, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 1174, column: 3)
!8595 = !DILocation(line: 1174, column: 3, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 1174, column: 3)
!8597 = !DILocation(line: 1174, column: 3, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 1174, column: 3)
!8599 = !DILocation(line: 1174, column: 3, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 1174, column: 3)
!8601 = !{i32 -2138963350, i32 -2138963321, i32 -2138963275, i32 -2138963217, i32 -2138963163, i32 -2138963109, i32 -2138963054, i32 -2138963023}
!8602 = !DILocation(line: 1174, column: 3, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 1174, column: 3)
!8604 = !{i32 -2138962608, i32 -2138962601, i32 -2138962549, i32 -2138962518, i32 -2138962488}
!8605 = !DILocation(line: 1174, column: 3, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 1174, column: 3)
!8607 = !DILocation(line: 1151, column: 14, scope: !8528)
!8608 = !DILabel(scope: !8499, name: "out", file: !3, line: 1177)
!8609 = !DILocation(line: 1177, column: 2, scope: !8499)
!8610 = !DILocation(line: 1178, column: 2, scope: !8499)
!8611 = !DILocation(line: 1179, column: 9, scope: !8499)
!8612 = !DILocation(line: 1179, column: 2, scope: !8499)
!8613 = distinct !DISubprogram(name: "unbind_from_irqhandler", scope: !3, file: !3, line: 1421, type: !8614, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8614 = !DISubroutineType(types: !8615)
!8615 = !{null, !6, !466}
!8616 = !DILocalVariable(name: "irq", arg: 1, scope: !8613, file: !3, line: 1421, type: !6)
!8617 = !DILocation(line: 1421, column: 42, scope: !8613)
!8618 = !DILocalVariable(name: "dev_id", arg: 2, scope: !8613, file: !3, line: 1421, type: !466)
!8619 = !DILocation(line: 1421, column: 53, scope: !8613)
!8620 = !DILocalVariable(name: "info", scope: !8613, file: !3, line: 1423, type: !474)
!8621 = !DILocation(line: 1423, column: 19, scope: !8613)
!8622 = !DILocation(line: 1423, column: 39, scope: !8613)
!8623 = !DILocation(line: 1423, column: 26, scope: !8613)
!8624 = !DILocalVariable(name: "__ret_warn_on", scope: !8625, file: !3, line: 1425, type: !97)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1425, column: 6)
!8626 = distinct !DILexicalBlock(scope: !8613, file: !3, line: 1425, column: 6)
!8627 = !DILocation(line: 1425, column: 6, scope: !8625)
!8628 = !DILocation(line: 1425, column: 6, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 1425, column: 6)
!8630 = !DILocation(line: 1425, column: 6, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 1425, column: 6)
!8632 = !DILocation(line: 1425, column: 6, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 1425, column: 6)
!8634 = !DILocation(line: 1425, column: 6, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 1425, column: 6)
!8636 = !{i32 -2138957970, i32 -2138957941, i32 -2138957895, i32 -2138957837, i32 -2138957783, i32 -2138957729, i32 -2138957674, i32 -2138957643}
!8637 = !DILocation(line: 1425, column: 6, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 1425, column: 6)
!8639 = !{i32 -2138957228, i32 -2138957221, i32 -2138957169, i32 -2138957138, i32 -2138957108}
!8640 = !DILocation(line: 1425, column: 6, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 1425, column: 6)
!8642 = !DILocation(line: 1425, column: 6, scope: !8626)
!8643 = !DILocation(line: 1425, column: 6, scope: !8613)
!8644 = !DILocation(line: 1426, column: 3, scope: !8626)
!8645 = !DILocation(line: 1427, column: 11, scope: !8613)
!8646 = !DILocation(line: 1427, column: 16, scope: !8613)
!8647 = !DILocation(line: 1427, column: 2, scope: !8613)
!8648 = !DILocation(line: 1428, column: 18, scope: !8613)
!8649 = !DILocation(line: 1428, column: 2, scope: !8613)
!8650 = !DILocation(line: 1429, column: 1, scope: !8613)
!8651 = distinct !DISubprogram(name: "xen_set_irq_priority", scope: !3, file: !3, line: 1437, type: !6646, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8652 = !DILocalVariable(name: "irq", arg: 1, scope: !8651, file: !3, line: 1437, type: !6)
!8653 = !DILocation(line: 1437, column: 35, scope: !8651)
!8654 = !DILocalVariable(name: "priority", arg: 2, scope: !8651, file: !3, line: 1437, type: !6)
!8655 = !DILocation(line: 1437, column: 49, scope: !8651)
!8656 = !DILocalVariable(name: "set_priority", scope: !8651, file: !3, line: 1439, type: !8657)
!8657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_set_priority", file: !492, line: 221, size: 64, elements: !8658)
!8658 = !{!8659, !8660}
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8657, file: !492, line: 223, baseType: !491, size: 32)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !8657, file: !492, line: 224, baseType: !493, size: 32, offset: 32)
!8661 = !DILocation(line: 1439, column: 29, scope: !8651)
!8662 = !DILocation(line: 1441, column: 38, scope: !8651)
!8663 = !DILocation(line: 1441, column: 22, scope: !8651)
!8664 = !DILocation(line: 1441, column: 15, scope: !8651)
!8665 = !DILocation(line: 1441, column: 20, scope: !8651)
!8666 = !DILocation(line: 1442, column: 26, scope: !8651)
!8667 = !DILocation(line: 1442, column: 15, scope: !8651)
!8668 = !DILocation(line: 1442, column: 24, scope: !8651)
!8669 = !DILocation(line: 1445, column: 9, scope: !8651)
!8670 = !DILocation(line: 1444, column: 9, scope: !8651)
!8671 = !DILocation(line: 1444, column: 2, scope: !8651)
!8672 = distinct !DISubprogram(name: "evtchn_make_refcounted", scope: !3, file: !3, line: 1449, type: !6481, scopeLine: 1450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8673 = !DILocalVariable(name: "evtchn", arg: 1, scope: !8672, file: !3, line: 1449, type: !491)
!8674 = !DILocation(line: 1449, column: 42, scope: !8672)
!8675 = !DILocalVariable(name: "irq", scope: !8672, file: !3, line: 1451, type: !97)
!8676 = !DILocation(line: 1451, column: 6, scope: !8672)
!8677 = !DILocation(line: 1451, column: 30, scope: !8672)
!8678 = !DILocation(line: 1451, column: 12, scope: !8672)
!8679 = !DILocalVariable(name: "info", scope: !8672, file: !3, line: 1452, type: !474)
!8680 = !DILocation(line: 1452, column: 19, scope: !8672)
!8681 = !DILocation(line: 1454, column: 6, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 1454, column: 6)
!8683 = !DILocation(line: 1454, column: 10, scope: !8682)
!8684 = !DILocation(line: 1454, column: 6, scope: !8672)
!8685 = !DILocation(line: 1455, column: 3, scope: !8682)
!8686 = !DILocation(line: 1457, column: 22, scope: !8672)
!8687 = !DILocation(line: 1457, column: 9, scope: !8672)
!8688 = !DILocation(line: 1457, column: 7, scope: !8672)
!8689 = !DILocation(line: 1459, column: 7, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 1459, column: 6)
!8691 = !DILocation(line: 1459, column: 6, scope: !8672)
!8692 = !DILocation(line: 1460, column: 3, scope: !8690)
!8693 = !DILocalVariable(name: "__ret_warn_on", scope: !8694, file: !3, line: 1462, type: !97)
!8694 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 1462, column: 2)
!8695 = !DILocation(line: 1462, column: 2, scope: !8694)
!8696 = !DILocation(line: 1462, column: 2, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 1462, column: 2)
!8698 = !DILocation(line: 1462, column: 2, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 1462, column: 2)
!8700 = !DILocation(line: 1462, column: 2, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 1462, column: 2)
!8702 = !DILocation(line: 1462, column: 2, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 1462, column: 2)
!8704 = !{i32 -2138956293, i32 -2138956264, i32 -2138956218, i32 -2138956160, i32 -2138956106, i32 -2138956052, i32 -2138955997, i32 -2138955966}
!8705 = !DILocation(line: 1462, column: 2, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 1462, column: 2)
!8707 = !{i32 -2138955551, i32 -2138955544, i32 -2138955492, i32 -2138955461, i32 -2138955431}
!8708 = !DILocation(line: 1462, column: 2, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 1462, column: 2)
!8710 = !DILocation(line: 1464, column: 2, scope: !8672)
!8711 = !DILocation(line: 1464, column: 8, scope: !8672)
!8712 = !DILocation(line: 1464, column: 15, scope: !8672)
!8713 = !DILocation(line: 1466, column: 2, scope: !8672)
!8714 = !DILocation(line: 1467, column: 1, scope: !8672)
!8715 = distinct !DISubprogram(name: "evtchn_get", scope: !3, file: !3, line: 1470, type: !6481, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8716 = !DILocalVariable(name: "evtchn", arg: 1, scope: !8715, file: !3, line: 1470, type: !491)
!8717 = !DILocation(line: 1470, column: 30, scope: !8715)
!8718 = !DILocalVariable(name: "irq", scope: !8715, file: !3, line: 1472, type: !97)
!8719 = !DILocation(line: 1472, column: 6, scope: !8715)
!8720 = !DILocalVariable(name: "info", scope: !8715, file: !3, line: 1473, type: !474)
!8721 = !DILocation(line: 1473, column: 19, scope: !8715)
!8722 = !DILocalVariable(name: "err", scope: !8715, file: !3, line: 1474, type: !97)
!8723 = !DILocation(line: 1474, column: 6, scope: !8715)
!8724 = !DILocation(line: 1476, column: 6, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 1476, column: 6)
!8726 = !DILocation(line: 1476, column: 16, scope: !8725)
!8727 = !DILocation(line: 1476, column: 13, scope: !8725)
!8728 = !DILocation(line: 1476, column: 6, scope: !8715)
!8729 = !DILocation(line: 1477, column: 3, scope: !8725)
!8730 = !DILocation(line: 1479, column: 2, scope: !8715)
!8731 = !DILocation(line: 1481, column: 26, scope: !8715)
!8732 = !DILocation(line: 1481, column: 8, scope: !8715)
!8733 = !DILocation(line: 1481, column: 6, scope: !8715)
!8734 = !DILocation(line: 1482, column: 6, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 1482, column: 6)
!8736 = !DILocation(line: 1482, column: 10, scope: !8735)
!8737 = !DILocation(line: 1482, column: 6, scope: !8715)
!8738 = !DILocation(line: 1483, column: 3, scope: !8735)
!8739 = !DILocation(line: 1485, column: 22, scope: !8715)
!8740 = !DILocation(line: 1485, column: 9, scope: !8715)
!8741 = !DILocation(line: 1485, column: 7, scope: !8715)
!8742 = !DILocation(line: 1487, column: 7, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 1487, column: 6)
!8744 = !DILocation(line: 1487, column: 6, scope: !8715)
!8745 = !DILocation(line: 1488, column: 3, scope: !8743)
!8746 = !DILocation(line: 1490, column: 6, scope: !8715)
!8747 = !DILocation(line: 1491, column: 6, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 1491, column: 6)
!8749 = !DILocation(line: 1491, column: 12, scope: !8748)
!8750 = !DILocation(line: 1491, column: 19, scope: !8748)
!8751 = !DILocation(line: 1491, column: 24, scope: !8748)
!8752 = !DILocation(line: 1491, column: 27, scope: !8748)
!8753 = !DILocation(line: 1491, column: 33, scope: !8748)
!8754 = !DILocation(line: 1491, column: 40, scope: !8748)
!8755 = !DILocation(line: 1491, column: 6, scope: !8715)
!8756 = !DILocation(line: 1492, column: 3, scope: !8748)
!8757 = !DILocation(line: 1494, column: 2, scope: !8715)
!8758 = !DILocation(line: 1494, column: 8, scope: !8715)
!8759 = !DILocation(line: 1494, column: 14, scope: !8715)
!8760 = !DILocation(line: 1495, column: 6, scope: !8715)
!8761 = !DILocation(line: 1495, column: 2, scope: !8715)
!8762 = !DILabel(scope: !8715, name: "done", file: !3, line: 1496)
!8763 = !DILocation(line: 1496, column: 2, scope: !8715)
!8764 = !DILocation(line: 1497, column: 2, scope: !8715)
!8765 = !DILocation(line: 1499, column: 9, scope: !8715)
!8766 = !DILocation(line: 1499, column: 2, scope: !8715)
!8767 = !DILocation(line: 1500, column: 1, scope: !8715)
!8768 = distinct !DISubprogram(name: "evtchn_put", scope: !3, file: !3, line: 1503, type: !6489, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8769 = !DILocalVariable(name: "evtchn", arg: 1, scope: !8768, file: !3, line: 1503, type: !491)
!8770 = !DILocation(line: 1503, column: 31, scope: !8768)
!8771 = !DILocalVariable(name: "irq", scope: !8768, file: !3, line: 1505, type: !97)
!8772 = !DILocation(line: 1505, column: 6, scope: !8768)
!8773 = !DILocation(line: 1505, column: 30, scope: !8768)
!8774 = !DILocation(line: 1505, column: 12, scope: !8768)
!8775 = !DILocalVariable(name: "__ret_warn_on", scope: !8776, file: !3, line: 1506, type: !97)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 1506, column: 6)
!8777 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 1506, column: 6)
!8778 = !DILocation(line: 1506, column: 6, scope: !8776)
!8779 = !DILocation(line: 1506, column: 6, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 1506, column: 6)
!8781 = !DILocation(line: 1506, column: 6, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 1506, column: 6)
!8783 = !DILocation(line: 1506, column: 6, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1506, column: 6)
!8785 = !DILocation(line: 1506, column: 6, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1506, column: 6)
!8787 = !{i32 -2138954596, i32 -2138954567, i32 -2138954521, i32 -2138954463, i32 -2138954409, i32 -2138954355, i32 -2138954300, i32 -2138954269}
!8788 = !DILocation(line: 1506, column: 6, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1506, column: 6)
!8790 = !{i32 -2138953854, i32 -2138953847, i32 -2138953795, i32 -2138953764, i32 -2138953734}
!8791 = !DILocation(line: 1506, column: 6, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1506, column: 6)
!8793 = !DILocation(line: 1506, column: 6, scope: !8777)
!8794 = !DILocation(line: 1506, column: 6, scope: !8768)
!8795 = !DILocation(line: 1507, column: 3, scope: !8777)
!8796 = !DILocation(line: 1508, column: 18, scope: !8768)
!8797 = !DILocation(line: 1508, column: 2, scope: !8768)
!8798 = !DILocation(line: 1509, column: 1, scope: !8768)
!8799 = distinct !DISubprogram(name: "xen_send_IPI_one", scope: !3, file: !3, line: 1512, type: !8800, scopeLine: 1513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8800 = !DISubroutineType(types: !8801)
!8801 = !{null, !6, !13}
!8802 = !DILocalVariable(name: "cpu", arg: 1, scope: !8799, file: !3, line: 1512, type: !6)
!8803 = !DILocation(line: 1512, column: 36, scope: !8799)
!8804 = !DILocalVariable(name: "vector", arg: 2, scope: !8799, file: !3, line: 1512, type: !13)
!8805 = !DILocation(line: 1512, column: 57, scope: !8799)
!8806 = !DILocalVariable(name: "irq", scope: !8799, file: !3, line: 1514, type: !97)
!8807 = !DILocation(line: 1514, column: 6, scope: !8799)
!8808 = !DILocation(line: 1517, column: 6, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 1517, column: 6)
!8810 = !DILocation(line: 1517, column: 6, scope: !8799)
!8811 = !DILocalVariable(name: "rc", scope: !8812, file: !3, line: 1518, type: !97)
!8812 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 1517, column: 42)
!8813 = !DILocation(line: 1518, column: 7, scope: !8812)
!8814 = !DILocation(line: 1518, column: 61, scope: !8812)
!8815 = !DILocation(line: 1518, column: 49, scope: !8812)
!8816 = !DILocation(line: 1518, column: 13, scope: !8812)
!8817 = !DILocation(line: 1520, column: 7, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 1520, column: 7)
!8819 = !DILocation(line: 1520, column: 10, scope: !8818)
!8820 = !DILocation(line: 1520, column: 7, scope: !8812)
!8821 = !DILocation(line: 1521, column: 65, scope: !8818)
!8822 = !DILocation(line: 1521, column: 70, scope: !8818)
!8823 = !DILocation(line: 1521, column: 4, scope: !8818)
!8824 = !DILocation(line: 1522, column: 3, scope: !8812)
!8825 = !DILocation(line: 1525, column: 8, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 1525, column: 8)
!8827 = !DILocation(line: 1525, column: 8, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 1525, column: 8)
!8829 = !DILocalVariable(name: "__vpp_verify", scope: !8830, file: !3, line: 1525, type: !3999)
!8830 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 1525, column: 8)
!8831 = !DILocation(line: 1525, column: 8, scope: !8830)
!8832 = !DILocation(line: 1525, column: 33, scope: !8799)
!8833 = !DILocation(line: 1525, column: 8, scope: !8799)
!8834 = !DILocation(line: 1525, column: 6, scope: !8799)
!8835 = !DILocation(line: 1526, column: 2, scope: !8799)
!8836 = !DILocation(line: 1526, column: 2, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 1526, column: 2)
!8838 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 1526, column: 2)
!8839 = !DILocation(line: 1526, column: 2, scope: !8838)
!8840 = !DILocation(line: 1526, column: 2, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 1526, column: 2)
!8842 = !DILocation(line: 1526, column: 2, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1526, column: 2)
!8844 = !DILocation(line: 1526, column: 2, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1526, column: 2)
!8846 = !{i32 -2138952806, i32 -2138952777, i32 -2138952731, i32 -2138952673, i32 -2138952619, i32 -2138952565, i32 -2138952510, i32 -2138952479}
!8847 = !DILocation(line: 1526, column: 2, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 1526, column: 2)
!8849 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 1526, column: 2)
!8850 = !{i32 -2138952023, i32 -2138952016, i32 -2138951962, i32 -2138951931, i32 -2138951901}
!8851 = !DILocation(line: 1526, column: 2, scope: !8849)
!8852 = !DILocation(line: 1527, column: 24, scope: !8799)
!8853 = !DILocation(line: 1527, column: 2, scope: !8799)
!8854 = !DILocation(line: 1528, column: 1, scope: !8799)
!8855 = distinct !DISubprogram(name: "HYPERVISOR_vcpu_op", scope: !7071, file: !7071, line: 392, type: !8856, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8856 = !DISubroutineType(types: !8857)
!8857 = !{!97, !97, !97, !466}
!8858 = !DILocalVariable(name: "cmd", arg: 1, scope: !8855, file: !7071, line: 392, type: !97)
!8859 = !DILocation(line: 392, column: 24, scope: !8855)
!8860 = !DILocalVariable(name: "vcpuid", arg: 2, scope: !8855, file: !7071, line: 392, type: !97)
!8861 = !DILocation(line: 392, column: 33, scope: !8855)
!8862 = !DILocalVariable(name: "extra_args", arg: 3, scope: !8855, file: !7071, line: 392, type: !466)
!8863 = !DILocation(line: 392, column: 47, scope: !8855)
!8864 = !DILocalVariable(name: "__res", scope: !8865, file: !7071, line: 394, type: !528)
!8865 = distinct !DILexicalBlock(scope: !8855, file: !7071, line: 394, column: 9)
!8866 = !DILocation(line: 394, column: 9, scope: !8865)
!8867 = !DILocalVariable(name: "__arg1", scope: !8865, file: !7071, line: 394, type: !528)
!8868 = !DILocalVariable(name: "__arg2", scope: !8865, file: !7071, line: 394, type: !528)
!8869 = !DILocalVariable(name: "__arg3", scope: !8865, file: !7071, line: 394, type: !528)
!8870 = !DILocalVariable(name: "__arg4", scope: !8865, file: !7071, line: 394, type: !528)
!8871 = !DILocalVariable(name: "__arg5", scope: !8865, file: !7071, line: 394, type: !528)
!8872 = !{i32 -2139407076}
!8873 = !DILocation(line: 394, column: 2, scope: !8855)
!8874 = distinct !DISubprogram(name: "handle_irq_for_port", scope: !3, file: !3, line: 1536, type: !8875, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{null, !491, !6503}
!8877 = !DILocalVariable(name: "port", arg: 1, scope: !8874, file: !3, line: 1536, type: !491)
!8878 = !DILocation(line: 1536, column: 40, scope: !8874)
!8879 = !DILocalVariable(name: "ctrl", arg: 2, scope: !8874, file: !3, line: 1536, type: !6503)
!8880 = !DILocation(line: 1536, column: 71, scope: !8874)
!8881 = !DILocalVariable(name: "irq", scope: !8874, file: !3, line: 1538, type: !97)
!8882 = !DILocation(line: 1538, column: 6, scope: !8874)
!8883 = !DILocalVariable(name: "info", scope: !8874, file: !3, line: 1539, type: !474)
!8884 = !DILocation(line: 1539, column: 19, scope: !8874)
!8885 = !DILocation(line: 1541, column: 26, scope: !8874)
!8886 = !DILocation(line: 1541, column: 8, scope: !8874)
!8887 = !DILocation(line: 1541, column: 6, scope: !8874)
!8888 = !DILocation(line: 1542, column: 6, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 1542, column: 6)
!8890 = !DILocation(line: 1542, column: 10, scope: !8889)
!8891 = !DILocation(line: 1542, column: 6, scope: !8874)
!8892 = !DILocation(line: 1543, column: 3, scope: !8889)
!8893 = !DILocation(line: 1555, column: 7, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 1555, column: 6)
!8895 = !DILocation(line: 1555, column: 13, scope: !8894)
!8896 = !DILocation(line: 1555, column: 23, scope: !8894)
!8897 = !DILocation(line: 1555, column: 30, scope: !8894)
!8898 = !DILocation(line: 1555, column: 36, scope: !8894)
!8899 = !DILocation(line: 1555, column: 28, scope: !8894)
!8900 = !DILocation(line: 1555, column: 42, scope: !8894)
!8901 = !DILocation(line: 1555, column: 6, scope: !8874)
!8902 = !DILocalVariable(name: "kt", scope: !8903, file: !3, line: 1556, type: !1929)
!8903 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 1555, column: 51)
!8904 = !DILocation(line: 1556, column: 11, scope: !8903)
!8905 = !DILocation(line: 1556, column: 16, scope: !8903)
!8906 = !DILocation(line: 1558, column: 8, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8903, file: !3, line: 1558, column: 7)
!8908 = !DILocation(line: 1558, column: 14, scope: !8907)
!8909 = !DILocation(line: 1558, column: 7, scope: !8903)
!8910 = !DILocation(line: 1559, column: 22, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 1558, column: 23)
!8912 = !DILocation(line: 1560, column: 25, scope: !8911)
!8913 = !DILocation(line: 1560, column: 8, scope: !8911)
!8914 = !DILocation(line: 1559, column: 9, scope: !8911)
!8915 = !DILocation(line: 1559, column: 7, scope: !8911)
!8916 = !DILocation(line: 1561, column: 20, scope: !8911)
!8917 = !DILocation(line: 1561, column: 4, scope: !8911)
!8918 = !DILocation(line: 1561, column: 10, scope: !8911)
!8919 = !DILocation(line: 1561, column: 18, scope: !8911)
!8920 = !DILocation(line: 1562, column: 3, scope: !8911)
!8921 = !DILocation(line: 1562, column: 14, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 1562, column: 14)
!8923 = !DILocation(line: 1562, column: 19, scope: !8922)
!8924 = !DILocation(line: 1562, column: 25, scope: !8922)
!8925 = !DILocation(line: 1562, column: 17, scope: !8922)
!8926 = !DILocation(line: 1562, column: 14, scope: !8907)
!8927 = !DILocation(line: 1563, column: 4, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 1562, column: 34)
!8929 = !DILocation(line: 1563, column: 10, scope: !8928)
!8930 = !DILocation(line: 1563, column: 20, scope: !8928)
!8931 = !DILocation(line: 1564, column: 3, scope: !8928)
!8932 = !DILocation(line: 1565, column: 2, scope: !8903)
!8933 = !DILocation(line: 1567, column: 22, scope: !8874)
!8934 = !DILocation(line: 1567, column: 9, scope: !8874)
!8935 = !DILocation(line: 1567, column: 7, scope: !8874)
!8936 = !DILocation(line: 1569, column: 6, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 1569, column: 6)
!8938 = !DILocation(line: 1569, column: 12, scope: !8937)
!8939 = !DILocation(line: 1569, column: 6, scope: !8874)
!8940 = !DILocation(line: 1570, column: 3, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 1569, column: 23)
!8942 = !DILocation(line: 1570, column: 9, scope: !8941)
!8943 = !DILocation(line: 1570, column: 17, scope: !8941)
!8944 = !DILocation(line: 1571, column: 21, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 1571, column: 21)
!8946 = !DILocalVariable(name: "pscr_ret__", scope: !8947, file: !3, line: 1571, type: !6)
!8947 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 1571, column: 21)
!8948 = !DILocation(line: 1571, column: 21, scope: !8947)
!8949 = !DILocalVariable(name: "__vpp_verify", scope: !8950, file: !3, line: 1571, type: !3999)
!8950 = distinct !DILexicalBlock(scope: !8947, file: !3, line: 1571, column: 21)
!8951 = !DILocation(line: 1571, column: 21, scope: !8950)
!8952 = !DILocalVariable(name: "pfo_val__", scope: !8953, file: !3, line: 1571, type: !494)
!8953 = distinct !DILexicalBlock(scope: !8947, file: !3, line: 1571, column: 21)
!8954 = !DILocation(line: 1571, column: 21, scope: !8953)
!8955 = !{i32 -2138949587}
!8956 = !DILocation(line: 1571, column: 3, scope: !8941)
!8957 = !DILocation(line: 1571, column: 9, scope: !8941)
!8958 = !DILocation(line: 1571, column: 19, scope: !8941)
!8959 = !DILocation(line: 1572, column: 20, scope: !8941)
!8960 = !DILocation(line: 1572, column: 39, scope: !8941)
!8961 = !DILocation(line: 1572, column: 37, scope: !8941)
!8962 = !DILocation(line: 1572, column: 3, scope: !8941)
!8963 = !DILocation(line: 1572, column: 9, scope: !8941)
!8964 = !DILocation(line: 1572, column: 18, scope: !8941)
!8965 = !DILocation(line: 1573, column: 2, scope: !8941)
!8966 = !DILocation(line: 1575, column: 21, scope: !8874)
!8967 = !DILocation(line: 1575, column: 2, scope: !8874)
!8968 = !DILocation(line: 1576, column: 1, scope: !8874)
!8969 = distinct !DISubprogram(name: "ktime_add_ms", scope: !1930, file: !1930, line: 184, type: !8970, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{!1929, !8972, !8973}
!8972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1929)
!8973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !503)
!8974 = !DILocalVariable(name: "kt", arg: 1, scope: !8969, file: !1930, line: 184, type: !8972)
!8975 = !DILocation(line: 184, column: 50, scope: !8969)
!8976 = !DILocalVariable(name: "msec", arg: 2, scope: !8969, file: !1930, line: 184, type: !8973)
!8977 = !DILocation(line: 184, column: 64, scope: !8969)
!8978 = !DILocation(line: 186, column: 9, scope: !8969)
!8979 = !DILocation(line: 186, column: 2, scope: !8969)
!8980 = distinct !DISubprogram(name: "__this_cpu_preempt_check", scope: !8981, file: !8981, line: 313, type: !8982, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8981 = !DIFile(filename: "./include/linux/percpu-defs.h", directory: "/home/lizy2001/genbc/linux")
!8982 = !DISubroutineType(types: !8983)
!8983 = !{null, !689}
!8984 = !DILocalVariable(name: "op", arg: 1, scope: !8980, file: !8981, line: 313, type: !689)
!8985 = !DILocation(line: 313, column: 57, scope: !8980)
!8986 = !DILocation(line: 313, column: 63, scope: !8980)
!8987 = distinct !DISubprogram(name: "get_jiffies_64", scope: !8988, file: !8988, line: 85, type: !3970, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8988 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!8989 = !DILocation(line: 87, column: 14, scope: !8987)
!8990 = !DILocation(line: 87, column: 2, scope: !8987)
!8991 = distinct !DISubprogram(name: "xen_evtchn_do_upcall", scope: !3, file: !3, line: 1607, type: !8992, scopeLine: 1608, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!8992 = !DISubroutineType(types: !8993)
!8993 = !{null, !616}
!8994 = !DILocalVariable(name: "regs", arg: 1, scope: !8991, file: !3, line: 1607, type: !616)
!8995 = !DILocation(line: 1607, column: 43, scope: !8991)
!8996 = !DILocalVariable(name: "old_regs", scope: !8991, file: !3, line: 1609, type: !616)
!8997 = !DILocation(line: 1609, column: 18, scope: !8991)
!8998 = !DILocation(line: 1609, column: 42, scope: !8991)
!8999 = !DILocation(line: 1609, column: 29, scope: !8991)
!9000 = !DILocation(line: 1611, column: 2, scope: !8991)
!9001 = !DILocation(line: 1613, column: 2, scope: !8991)
!9002 = !DILocation(line: 1615, column: 2, scope: !8991)
!9003 = !DILocation(line: 1616, column: 15, scope: !8991)
!9004 = !DILocation(line: 1616, column: 2, scope: !8991)
!9005 = !DILocation(line: 1617, column: 1, scope: !8991)
!9006 = distinct !DISubprogram(name: "set_irq_regs", scope: !9007, file: !9007, line: 24, type: !9008, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9007 = !DIFile(filename: "./include/asm-generic/irq_regs.h", directory: "/home/lizy2001/genbc/linux")
!9008 = !DISubroutineType(types: !9009)
!9009 = !{!616, !616}
!9010 = !DILocalVariable(name: "new_regs", arg: 1, scope: !9006, file: !9007, line: 24, type: !616)
!9011 = !DILocation(line: 24, column: 60, scope: !9006)
!9012 = !DILocalVariable(name: "old_regs", scope: !9006, file: !9007, line: 26, type: !616)
!9013 = !DILocation(line: 26, column: 18, scope: !9006)
!9014 = !DILocation(line: 28, column: 13, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9006, file: !9007, line: 28, column: 13)
!9016 = !DILocalVariable(name: "pscr_ret__", scope: !9017, file: !9007, line: 28, type: !616)
!9017 = distinct !DILexicalBlock(scope: !9015, file: !9007, line: 28, column: 13)
!9018 = !DILocation(line: 28, column: 13, scope: !9017)
!9019 = !DILocalVariable(name: "__vpp_verify", scope: !9020, file: !9007, line: 28, type: !3999)
!9020 = distinct !DILexicalBlock(scope: !9017, file: !9007, line: 28, column: 13)
!9021 = !DILocation(line: 28, column: 13, scope: !9020)
!9022 = !DILocalVariable(name: "pfo_val__", scope: !9023, file: !9007, line: 28, type: !503)
!9023 = distinct !DILexicalBlock(scope: !9017, file: !9007, line: 28, column: 13)
!9024 = !DILocation(line: 28, column: 13, scope: !9023)
!9025 = !{i32 -2144327446}
!9026 = !DILocation(line: 28, column: 11, scope: !9006)
!9027 = !DILocation(line: 29, column: 2, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9006, file: !9007, line: 29, column: 2)
!9029 = !DILocation(line: 29, column: 2, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9028, file: !9007, line: 29, column: 2)
!9031 = !DILocalVariable(name: "__vpp_verify", scope: !9032, file: !9007, line: 29, type: !3999)
!9032 = distinct !DILexicalBlock(scope: !9030, file: !9007, line: 29, column: 2)
!9033 = !DILocation(line: 29, column: 2, scope: !9032)
!9034 = !DILocalVariable(name: "pto_val__", scope: !9035, file: !9007, line: 29, type: !503)
!9035 = distinct !DILexicalBlock(scope: !9030, file: !9007, line: 29, column: 2)
!9036 = !DILocation(line: 29, column: 2, scope: !9035)
!9037 = !{i32 -2144323655}
!9038 = !DILocation(line: 30, column: 9, scope: !9006)
!9039 = !DILocation(line: 30, column: 2, scope: !9006)
!9040 = distinct !DISubprogram(name: "__xen_evtchn_do_upcall", scope: !3, file: !3, line: 1578, type: !2697, scopeLine: 1579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9041 = !DILocalVariable(name: "flags", arg: 1, scope: !9042, file: !9043, line: 162, type: !528)
!9042 = distinct !DISubprogram(name: "arch_irqs_disabled_flags", scope: !9043, file: !9043, line: 162, type: !9044, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9043 = !DIFile(filename: "./arch/x86/include/asm/irqflags.h", directory: "/home/lizy2001/genbc/linux")
!9044 = !DISubroutineType(types: !9045)
!9045 = !{!97, !528}
!9046 = !DILocation(line: 162, column: 67, scope: !9042, inlinedAt: !9047)
!9047 = distinct !DILocation(line: 1591, column: 3, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 1591, column: 3)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1591, column: 3)
!9050 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 1591, column: 3)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 1591, column: 3)
!9052 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 1586, column: 5)
!9053 = !DILocalVariable(name: "vcpu_info", scope: !9040, file: !3, line: 1580, type: !642)
!9054 = !DILocation(line: 1580, column: 20, scope: !9040)
!9055 = !DILocation(line: 1580, column: 32, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 1580, column: 32)
!9057 = !DILocalVariable(name: "pscr_ret__", scope: !9058, file: !3, line: 1580, type: !642)
!9058 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1580, column: 32)
!9059 = !DILocation(line: 1580, column: 32, scope: !9058)
!9060 = !DILocalVariable(name: "__vpp_verify", scope: !9061, file: !3, line: 1580, type: !3999)
!9061 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 1580, column: 32)
!9062 = !DILocation(line: 1580, column: 32, scope: !9061)
!9063 = !DILocalVariable(name: "pfo_val__", scope: !9064, file: !3, line: 1580, type: !503)
!9064 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 1580, column: 32)
!9065 = !DILocation(line: 1580, column: 32, scope: !9064)
!9066 = !{i32 -2138946289}
!9067 = !DILocalVariable(name: "cpu", scope: !9040, file: !3, line: 1581, type: !97)
!9068 = !DILocation(line: 1581, column: 6, scope: !9040)
!9069 = !DILocalVariable(name: "ctrl", scope: !9040, file: !3, line: 1582, type: !6504)
!9070 = !DILocation(line: 1582, column: 26, scope: !9040)
!9071 = !DILocation(line: 1584, column: 2, scope: !9040)
!9072 = !DILocation(line: 1584, column: 2, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 1584, column: 2)
!9074 = !{i32 -2138945978}
!9075 = !DILocation(line: 1584, column: 2, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 1584, column: 2)
!9077 = !DILocation(line: 1586, column: 2, scope: !9040)
!9078 = !DILocation(line: 1587, column: 3, scope: !9052)
!9079 = !DILocation(line: 1587, column: 14, scope: !9052)
!9080 = !DILocation(line: 1587, column: 36, scope: !9052)
!9081 = !DILocation(line: 1589, column: 28, scope: !9052)
!9082 = !DILocation(line: 1589, column: 3, scope: !9052)
!9083 = !DILocation(line: 1591, column: 3, scope: !9052)
!9084 = !DILocalVariable(name: "_flags", scope: !9049, file: !3, line: 1591, type: !528)
!9085 = !DILocation(line: 1591, column: 3, scope: !9049)
!9086 = !DILocalVariable(name: "__dummy", scope: !9087, file: !3, line: 1591, type: !528)
!9087 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 1591, column: 3)
!9088 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 1591, column: 3)
!9089 = !DILocation(line: 1591, column: 3, scope: !9087)
!9090 = !DILocalVariable(name: "__dummy2", scope: !9087, file: !3, line: 1591, type: !528)
!9091 = !DILocation(line: 1591, column: 3, scope: !9088)
!9092 = !DILocalVariable(name: "__dummy", scope: !9093, file: !3, line: 1591, type: !528)
!9093 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 1591, column: 3)
!9094 = !DILocation(line: 1591, column: 3, scope: !9093)
!9095 = !DILocalVariable(name: "__dummy2", scope: !9093, file: !3, line: 1591, type: !528)
!9096 = !DILocation(line: 1591, column: 3, scope: !9048)
!9097 = !DILocation(line: 164, column: 11, scope: !9042, inlinedAt: !9047)
!9098 = !DILocation(line: 164, column: 17, scope: !9042, inlinedAt: !9047)
!9099 = !DILocation(line: 164, column: 9, scope: !9042, inlinedAt: !9047)
!9100 = !DILocation(line: 1591, column: 3, scope: !9050)
!9101 = !DILocation(line: 1591, column: 3, scope: !9051)
!9102 = !DILocation(line: 1591, column: 3, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1591, column: 3)
!9104 = !DILocation(line: 1591, column: 3, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 1591, column: 3)
!9106 = !DILocation(line: 1591, column: 3, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 1591, column: 3)
!9108 = !{i32 -2138944369, i32 -2138944340, i32 -2138944294, i32 -2138944236, i32 -2138944182, i32 -2138944128, i32 -2138944073, i32 -2138944042}
!9109 = !DILocation(line: 1591, column: 3, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 1591, column: 3)
!9111 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 1591, column: 3)
!9112 = !{i32 -2138943586, i32 -2138943579, i32 -2138943525, i32 -2138943494, i32 -2138943464}
!9113 = !DILocation(line: 1591, column: 3, scope: !9111)
!9114 = !DILocation(line: 1593, column: 3, scope: !9052)
!9115 = !{i32 -2138943373}
!9116 = !DILocation(line: 1595, column: 2, scope: !9052)
!9117 = !DILocation(line: 1595, column: 11, scope: !9040)
!9118 = !DILocation(line: 1595, column: 22, scope: !9040)
!9119 = distinct !{!9119, !9077, !9120}
!9120 = !DILocation(line: 1595, column: 43, scope: !9040)
!9121 = !DILocation(line: 1597, column: 2, scope: !9040)
!9122 = !DILocation(line: 1597, column: 2, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 1597, column: 2)
!9124 = !{i32 -2138943190}
!9125 = !DILocation(line: 1597, column: 2, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 1597, column: 2)
!9127 = !DILocation(line: 1604, column: 2, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 1604, column: 2)
!9129 = !DILocation(line: 1604, column: 2, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 1604, column: 2)
!9131 = !DILocalVariable(name: "__vpp_verify", scope: !9132, file: !3, line: 1604, type: !3999)
!9132 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 1604, column: 2)
!9133 = !DILocation(line: 1604, column: 2, scope: !9132)
!9134 = !DILocalVariable(name: "pao_ID__", scope: !9135, file: !3, line: 1604, type: !9136)
!9135 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 1604, column: 2)
!9136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !97)
!9137 = !DILocation(line: 1604, column: 2, scope: !9135)
!9138 = !DILocation(line: 1604, column: 2, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 1604, column: 2)
!9140 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 1604, column: 2)
!9141 = !{i32 -2138938150}
!9142 = !DILocation(line: 1605, column: 1, scope: !9040)
!9143 = distinct !DISubprogram(name: "xen_hvm_evtchn_do_upcall", scope: !3, file: !3, line: 1619, type: !2697, scopeLine: 1620, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9144 = !DILocation(line: 1621, column: 2, scope: !9143)
!9145 = !DILocation(line: 1622, column: 1, scope: !9143)
!9146 = distinct !DISubprogram(name: "rebind_evtchn_irq", scope: !3, file: !3, line: 1626, type: !9147, scopeLine: 1627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9147 = !DISubroutineType(types: !9148)
!9148 = !{null, !491, !97}
!9149 = !DILocalVariable(name: "evtchn", arg: 1, scope: !9146, file: !3, line: 1626, type: !491)
!9150 = !DILocation(line: 1626, column: 38, scope: !9146)
!9151 = !DILocalVariable(name: "irq", arg: 2, scope: !9146, file: !3, line: 1626, type: !97)
!9152 = !DILocation(line: 1626, column: 50, scope: !9146)
!9153 = !DILocalVariable(name: "info", scope: !9146, file: !3, line: 1628, type: !474)
!9154 = !DILocation(line: 1628, column: 19, scope: !9146)
!9155 = !DILocation(line: 1628, column: 39, scope: !9146)
!9156 = !DILocation(line: 1628, column: 26, scope: !9146)
!9157 = !DILocalVariable(name: "__ret_warn_on", scope: !9158, file: !3, line: 1630, type: !97)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 1630, column: 6)
!9159 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1630, column: 6)
!9160 = !DILocation(line: 1630, column: 6, scope: !9158)
!9161 = !DILocation(line: 1630, column: 6, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9158, file: !3, line: 1630, column: 6)
!9163 = !DILocation(line: 1630, column: 6, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 1630, column: 6)
!9165 = !DILocation(line: 1630, column: 6, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 1630, column: 6)
!9167 = !DILocation(line: 1630, column: 6, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 1630, column: 6)
!9169 = !{i32 -2138934997, i32 -2138934968, i32 -2138934922, i32 -2138934864, i32 -2138934810, i32 -2138934756, i32 -2138934701, i32 -2138934670}
!9170 = !DILocation(line: 1630, column: 6, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 1630, column: 6)
!9172 = !{i32 -2138934255, i32 -2138934248, i32 -2138934196, i32 -2138934165, i32 -2138934135}
!9173 = !DILocation(line: 1630, column: 6, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 1630, column: 6)
!9175 = !DILocation(line: 1630, column: 6, scope: !9159)
!9176 = !DILocation(line: 1630, column: 6, scope: !9146)
!9177 = !DILocation(line: 1631, column: 3, scope: !9159)
!9178 = !DILocation(line: 1635, column: 14, scope: !9146)
!9179 = !DILocation(line: 1635, column: 2, scope: !9146)
!9180 = !DILocation(line: 1637, column: 2, scope: !9146)
!9181 = !DILocation(line: 1640, column: 2, scope: !9146)
!9182 = !DILocation(line: 1640, column: 2, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1640, column: 2)
!9184 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1640, column: 2)
!9185 = !DILocation(line: 1640, column: 2, scope: !9184)
!9186 = !DILocation(line: 1640, column: 2, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 1640, column: 2)
!9188 = !DILocation(line: 1640, column: 2, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 1640, column: 2)
!9190 = !DILocation(line: 1640, column: 2, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 1640, column: 2)
!9192 = !{i32 -2138933733, i32 -2138933704, i32 -2138933658, i32 -2138933600, i32 -2138933546, i32 -2138933492, i32 -2138933437, i32 -2138933406}
!9193 = !DILocation(line: 1640, column: 2, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 1640, column: 2)
!9195 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 1640, column: 2)
!9196 = !{i32 -2138932950, i32 -2138932943, i32 -2138932889, i32 -2138932858, i32 -2138932828}
!9197 = !DILocation(line: 1640, column: 2, scope: !9195)
!9198 = !DILocation(line: 1643, column: 2, scope: !9146)
!9199 = !DILocation(line: 1643, column: 2, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9201, file: !3, line: 1643, column: 2)
!9201 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1643, column: 2)
!9202 = !DILocation(line: 1643, column: 2, scope: !9201)
!9203 = !DILocation(line: 1643, column: 2, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1643, column: 2)
!9205 = !DILocation(line: 1643, column: 2, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 1643, column: 2)
!9207 = !DILocation(line: 1643, column: 2, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 1643, column: 2)
!9209 = !{i32 -2138932493, i32 -2138932464, i32 -2138932418, i32 -2138932360, i32 -2138932306, i32 -2138932252, i32 -2138932197, i32 -2138932166}
!9210 = !DILocation(line: 1643, column: 2, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 1643, column: 2)
!9212 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 1643, column: 2)
!9213 = !{i32 -2138931710, i32 -2138931703, i32 -2138931649, i32 -2138931618, i32 -2138931588}
!9214 = !DILocation(line: 1643, column: 2, scope: !9212)
!9215 = !DILocation(line: 1645, column: 34, scope: !9146)
!9216 = !DILocation(line: 1645, column: 39, scope: !9146)
!9217 = !DILocation(line: 1645, column: 8, scope: !9146)
!9218 = !DILocation(line: 1647, column: 2, scope: !9146)
!9219 = !DILocation(line: 1649, column: 28, scope: !9146)
!9220 = !DILocation(line: 1649, column: 36, scope: !9146)
!9221 = !DILocation(line: 1649, column: 42, scope: !9146)
!9222 = !DILocation(line: 1649, column: 9, scope: !9146)
!9223 = !DILocation(line: 1651, column: 19, scope: !9146)
!9224 = !DILocation(line: 1651, column: 24, scope: !9146)
!9225 = !DILocation(line: 1651, column: 2, scope: !9146)
!9226 = !DILocation(line: 1654, column: 13, scope: !9146)
!9227 = !DILocation(line: 1654, column: 2, scope: !9146)
!9228 = !DILocation(line: 1655, column: 1, scope: !9146)
!9229 = distinct !DISubprogram(name: "xen_irq_info_evtchn_setup", scope: !3, file: !3, line: 285, type: !7822, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9230 = !DILocalVariable(name: "irq", arg: 1, scope: !9229, file: !3, line: 285, type: !6)
!9231 = !DILocation(line: 285, column: 47, scope: !9229)
!9232 = !DILocalVariable(name: "evtchn", arg: 2, scope: !9229, file: !3, line: 286, type: !491)
!9233 = !DILocation(line: 286, column: 24, scope: !9229)
!9234 = !DILocalVariable(name: "info", scope: !9229, file: !3, line: 288, type: !474)
!9235 = !DILocation(line: 288, column: 19, scope: !9229)
!9236 = !DILocation(line: 288, column: 39, scope: !9229)
!9237 = !DILocation(line: 288, column: 26, scope: !9229)
!9238 = !DILocation(line: 290, column: 35, scope: !9229)
!9239 = !DILocation(line: 290, column: 41, scope: !9229)
!9240 = !DILocation(line: 290, column: 59, scope: !9229)
!9241 = !DILocation(line: 290, column: 9, scope: !9229)
!9242 = !DILocation(line: 290, column: 2, scope: !9229)
!9243 = distinct !DISubprogram(name: "irq_set_affinity", scope: !176, file: !176, line: 367, type: !9244, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9244 = !DISubroutineType(types: !9245)
!9245 = !{!97, !6, !529}
!9246 = !DILocalVariable(name: "irq", arg: 1, scope: !9243, file: !176, line: 367, type: !6)
!9247 = !DILocation(line: 367, column: 49, scope: !9243)
!9248 = !DILocalVariable(name: "m", arg: 2, scope: !9243, file: !176, line: 367, type: !529)
!9249 = !DILocation(line: 367, column: 76, scope: !9243)
!9250 = !DILocation(line: 369, column: 2, scope: !9243)
!9251 = distinct !DISubprogram(name: "get_cpu_mask", scope: !532, file: !532, line: 884, type: !9252, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9252 = !DISubroutineType(types: !9253)
!9253 = !{!529, !6}
!9254 = !DILocalVariable(name: "cpu", arg: 1, scope: !9251, file: !532, line: 884, type: !6)
!9255 = !DILocation(line: 884, column: 63, scope: !9251)
!9256 = !DILocalVariable(name: "p", scope: !9251, file: !532, line: 886, type: !9257)
!9257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 64)
!9258 = !DILocation(line: 886, column: 23, scope: !9251)
!9259 = !DILocation(line: 886, column: 46, scope: !9251)
!9260 = !DILocation(line: 886, column: 50, scope: !9251)
!9261 = !DILocation(line: 886, column: 44, scope: !9251)
!9262 = !DILocation(line: 886, column: 27, scope: !9251)
!9263 = !DILocation(line: 887, column: 7, scope: !9251)
!9264 = !DILocation(line: 887, column: 11, scope: !9251)
!9265 = !DILocation(line: 887, column: 4, scope: !9251)
!9266 = !DILocation(line: 888, column: 9, scope: !9251)
!9267 = !DILocation(line: 888, column: 2, scope: !9251)
!9268 = distinct !DISubprogram(name: "xen_set_affinity_evtchn", scope: !3, file: !3, line: 1706, type: !9269, scopeLine: 1707, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{!97, !6086, !6}
!9271 = !DILocalVariable(name: "desc", arg: 1, scope: !9268, file: !3, line: 1706, type: !6086)
!9272 = !DILocation(line: 1706, column: 46, scope: !9268)
!9273 = !DILocalVariable(name: "tcpu", arg: 2, scope: !9268, file: !3, line: 1706, type: !6)
!9274 = !DILocation(line: 1706, column: 65, scope: !9268)
!9275 = !DILocalVariable(name: "d", scope: !9268, file: !3, line: 1708, type: !5852)
!9276 = !DILocation(line: 1708, column: 19, scope: !9268)
!9277 = !DILocation(line: 1708, column: 45, scope: !9268)
!9278 = !DILocation(line: 1708, column: 23, scope: !9268)
!9279 = !DILocation(line: 1710, column: 26, scope: !9268)
!9280 = !DILocation(line: 1710, column: 29, scope: !9268)
!9281 = !DILocation(line: 1710, column: 9, scope: !9268)
!9282 = !DILocation(line: 1710, column: 2, scope: !9268)
!9283 = distinct !DISubprogram(name: "irq_desc_get_irq_data", scope: !6088, file: !6088, line: 126, type: !9284, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9284 = !DISubroutineType(types: !9285)
!9285 = !{!5852, !6086}
!9286 = !DILocalVariable(name: "desc", arg: 1, scope: !9283, file: !6088, line: 126, type: !6086)
!9287 = !DILocation(line: 126, column: 71, scope: !9283)
!9288 = !DILocation(line: 128, column: 10, scope: !9283)
!9289 = !DILocation(line: 128, column: 16, scope: !9283)
!9290 = !DILocation(line: 128, column: 2, scope: !9283)
!9291 = distinct !DISubprogram(name: "set_affinity_irq", scope: !3, file: !3, line: 1693, type: !5953, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9292 = !DILocalVariable(name: "data", arg: 1, scope: !9291, file: !3, line: 1693, type: !5852)
!9293 = !DILocation(line: 1693, column: 46, scope: !9291)
!9294 = !DILocalVariable(name: "dest", arg: 2, scope: !9291, file: !3, line: 1693, type: !529)
!9295 = !DILocation(line: 1693, column: 74, scope: !9291)
!9296 = !DILocalVariable(name: "force", arg: 3, scope: !9291, file: !3, line: 1694, type: !1066)
!9297 = !DILocation(line: 1694, column: 13, scope: !9291)
!9298 = !DILocalVariable(name: "tcpu", scope: !9291, file: !3, line: 1696, type: !6)
!9299 = !DILocation(line: 1696, column: 11, scope: !9291)
!9300 = !DILocation(line: 1696, column: 18, scope: !9291)
!9301 = !DILocalVariable(name: "ret", scope: !9291, file: !3, line: 1697, type: !97)
!9302 = !DILocation(line: 1697, column: 6, scope: !9291)
!9303 = !DILocation(line: 1697, column: 53, scope: !9291)
!9304 = !DILocation(line: 1697, column: 59, scope: !9291)
!9305 = !DILocation(line: 1697, column: 37, scope: !9291)
!9306 = !DILocation(line: 1697, column: 65, scope: !9291)
!9307 = !DILocation(line: 1697, column: 12, scope: !9291)
!9308 = !DILocation(line: 1699, column: 7, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 1699, column: 6)
!9310 = !DILocation(line: 1699, column: 6, scope: !9291)
!9311 = !DILocation(line: 1700, column: 38, scope: !9309)
!9312 = !DILocation(line: 1700, column: 44, scope: !9309)
!9313 = !DILocation(line: 1700, column: 3, scope: !9309)
!9314 = !DILocation(line: 1702, column: 9, scope: !9291)
!9315 = !DILocation(line: 1702, column: 2, scope: !9291)
!9316 = distinct !DISubprogram(name: "xen_clear_irq_pending", scope: !3, file: !3, line: 1863, type: !2690, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9317 = !DILocalVariable(name: "irq", arg: 1, scope: !9316, file: !3, line: 1863, type: !97)
!9318 = !DILocation(line: 1863, column: 32, scope: !9316)
!9319 = !DILocalVariable(name: "evtchn", scope: !9316, file: !3, line: 1865, type: !491)
!9320 = !DILocation(line: 1865, column: 16, scope: !9316)
!9321 = !DILocation(line: 1865, column: 41, scope: !9316)
!9322 = !DILocation(line: 1865, column: 25, scope: !9316)
!9323 = !DILocation(line: 1867, column: 6, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 1867, column: 6)
!9325 = !DILocation(line: 1867, column: 6, scope: !9316)
!9326 = !DILocation(line: 1868, column: 16, scope: !9324)
!9327 = !DILocation(line: 1868, column: 3, scope: !9324)
!9328 = !DILocation(line: 1869, column: 1, scope: !9316)
!9329 = distinct !DISubprogram(name: "clear_evtchn", scope: !6472, file: !6472, line: 64, type: !6489, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9330 = !DILocalVariable(name: "port", arg: 1, scope: !9329, file: !6472, line: 64, type: !491)
!9331 = !DILocation(line: 64, column: 47, scope: !9329)
!9332 = !DILocation(line: 66, column: 2, scope: !9329)
!9333 = !DILocation(line: 66, column: 14, scope: !9329)
!9334 = !DILocation(line: 66, column: 28, scope: !9329)
!9335 = !DILocation(line: 67, column: 1, scope: !9329)
!9336 = distinct !DISubprogram(name: "xen_set_irq_pending", scope: !3, file: !3, line: 1871, type: !2690, scopeLine: 1872, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9337 = !DILocalVariable(name: "irq", arg: 1, scope: !9336, file: !3, line: 1871, type: !97)
!9338 = !DILocation(line: 1871, column: 30, scope: !9336)
!9339 = !DILocalVariable(name: "evtchn", scope: !9336, file: !3, line: 1873, type: !491)
!9340 = !DILocation(line: 1873, column: 16, scope: !9336)
!9341 = !DILocation(line: 1873, column: 41, scope: !9336)
!9342 = !DILocation(line: 1873, column: 25, scope: !9336)
!9343 = !DILocation(line: 1875, column: 6, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 1875, column: 6)
!9345 = !DILocation(line: 1875, column: 6, scope: !9336)
!9346 = !DILocation(line: 1876, column: 14, scope: !9344)
!9347 = !DILocation(line: 1876, column: 3, scope: !9344)
!9348 = !DILocation(line: 1877, column: 1, scope: !9336)
!9349 = distinct !DISubprogram(name: "set_evtchn", scope: !6472, file: !6472, line: 69, type: !6489, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9350 = !DILocalVariable(name: "port", arg: 1, scope: !9349, file: !6472, line: 69, type: !491)
!9351 = !DILocation(line: 69, column: 45, scope: !9349)
!9352 = !DILocation(line: 71, column: 2, scope: !9349)
!9353 = !DILocation(line: 71, column: 14, scope: !9349)
!9354 = !DILocation(line: 71, column: 26, scope: !9349)
!9355 = !DILocation(line: 72, column: 1, scope: !9349)
!9356 = distinct !DISubprogram(name: "xen_test_irq_pending", scope: !3, file: !3, line: 1879, type: !9357, scopeLine: 1880, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9357 = !DISubroutineType(types: !9358)
!9358 = !{!1066, !97}
!9359 = !DILocalVariable(name: "irq", arg: 1, scope: !9356, file: !3, line: 1879, type: !97)
!9360 = !DILocation(line: 1879, column: 31, scope: !9356)
!9361 = !DILocalVariable(name: "evtchn", scope: !9356, file: !3, line: 1881, type: !491)
!9362 = !DILocation(line: 1881, column: 16, scope: !9356)
!9363 = !DILocation(line: 1881, column: 41, scope: !9356)
!9364 = !DILocation(line: 1881, column: 25, scope: !9356)
!9365 = !DILocalVariable(name: "ret", scope: !9356, file: !3, line: 1882, type: !1066)
!9366 = !DILocation(line: 1882, column: 7, scope: !9356)
!9367 = !DILocation(line: 1884, column: 6, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 1884, column: 6)
!9369 = !DILocation(line: 1884, column: 6, scope: !9356)
!9370 = !DILocation(line: 1885, column: 21, scope: !9368)
!9371 = !DILocation(line: 1885, column: 9, scope: !9368)
!9372 = !DILocation(line: 1885, column: 7, scope: !9368)
!9373 = !DILocation(line: 1885, column: 3, scope: !9368)
!9374 = !DILocation(line: 1887, column: 9, scope: !9356)
!9375 = !DILocation(line: 1887, column: 2, scope: !9356)
!9376 = distinct !DISubprogram(name: "test_evtchn", scope: !6472, file: !6472, line: 74, type: !6494, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9377 = !DILocalVariable(name: "port", arg: 1, scope: !9376, file: !6472, line: 74, type: !491)
!9378 = !DILocation(line: 74, column: 46, scope: !9376)
!9379 = !DILocation(line: 76, column: 9, scope: !9376)
!9380 = !DILocation(line: 76, column: 21, scope: !9376)
!9381 = !DILocation(line: 76, column: 32, scope: !9376)
!9382 = !DILocation(line: 76, column: 2, scope: !9376)
!9383 = distinct !DISubprogram(name: "xen_poll_irq_timeout", scope: !3, file: !3, line: 1892, type: !9384, scopeLine: 1893, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9384 = !DISubroutineType(types: !9385)
!9385 = !{null, !97, !503}
!9386 = !DILocalVariable(name: "irq", arg: 1, scope: !9383, file: !3, line: 1892, type: !97)
!9387 = !DILocation(line: 1892, column: 31, scope: !9383)
!9388 = !DILocalVariable(name: "timeout", arg: 2, scope: !9383, file: !3, line: 1892, type: !503)
!9389 = !DILocation(line: 1892, column: 40, scope: !9383)
!9390 = !DILocalVariable(name: "evtchn", scope: !9383, file: !3, line: 1894, type: !491)
!9391 = !DILocation(line: 1894, column: 16, scope: !9383)
!9392 = !DILocation(line: 1894, column: 41, scope: !9383)
!9393 = !DILocation(line: 1894, column: 25, scope: !9383)
!9394 = !DILocation(line: 1896, column: 6, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 1896, column: 6)
!9396 = !DILocation(line: 1896, column: 6, scope: !9383)
!9397 = !DILocalVariable(name: "poll", scope: !9398, file: !3, line: 1897, type: !9399)
!9398 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 1896, column: 28)
!9399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_poll", file: !9400, line: 138, size: 192, elements: !9401)
!9400 = !DIFile(filename: "./include/xen/interface/sched.h", directory: "/home/lizy2001/genbc/linux")
!9401 = !{!9402, !9404, !9405}
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !9399, file: !9400, line: 139, baseType: !9403, size: 64)
!9403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__guest_handle_evtchn_port_t", file: !492, line: 16, baseType: !8050)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ports", scope: !9399, file: !9400, line: 140, baseType: !6, size: 32, offset: 64)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9399, file: !9400, line: 141, baseType: !538, size: 64, offset: 128)
!9406 = !DILocation(line: 1897, column: 21, scope: !9398)
!9407 = !DILocation(line: 1899, column: 8, scope: !9398)
!9408 = !DILocation(line: 1899, column: 17, scope: !9398)
!9409 = !DILocation(line: 1900, column: 18, scope: !9398)
!9410 = !DILocation(line: 1900, column: 8, scope: !9398)
!9411 = !DILocation(line: 1900, column: 16, scope: !9398)
!9412 = !DILocation(line: 1901, column: 3, scope: !9398)
!9413 = !DILocation(line: 1901, column: 3, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 1901, column: 3)
!9415 = !DILocation(line: 1903, column: 41, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 1903, column: 7)
!9417 = !DILocation(line: 1903, column: 7, scope: !9416)
!9418 = !DILocation(line: 1903, column: 48, scope: !9416)
!9419 = !DILocation(line: 1903, column: 7, scope: !9398)
!9420 = !DILocation(line: 1904, column: 4, scope: !9416)
!9421 = !DILocation(line: 1904, column: 4, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 1904, column: 4)
!9423 = !DILocation(line: 1904, column: 4, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 1904, column: 4)
!9425 = !DILocation(line: 1904, column: 4, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 1904, column: 4)
!9427 = !{i32 -2138920908, i32 -2138920879, i32 -2138920833, i32 -2138920775, i32 -2138920721, i32 -2138920667, i32 -2138920612, i32 -2138920581}
!9428 = !DILocation(line: 1904, column: 4, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 1904, column: 4)
!9430 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 1904, column: 4)
!9431 = !{i32 -2138920125, i32 -2138920118, i32 -2138920064, i32 -2138920033, i32 -2138920003}
!9432 = !DILocation(line: 1904, column: 4, scope: !9430)
!9433 = !DILocation(line: 1905, column: 2, scope: !9398)
!9434 = !DILocation(line: 1906, column: 1, scope: !9383)
!9435 = distinct !DISubprogram(name: "HYPERVISOR_sched_op", scope: !7071, file: !7071, line: 284, type: !7072, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9436 = !DILocalVariable(name: "cmd", arg: 1, scope: !9435, file: !7071, line: 284, type: !97)
!9437 = !DILocation(line: 284, column: 25, scope: !9435)
!9438 = !DILocalVariable(name: "arg", arg: 2, scope: !9435, file: !7071, line: 284, type: !466)
!9439 = !DILocation(line: 284, column: 36, scope: !9435)
!9440 = !DILocalVariable(name: "__res", scope: !9441, file: !7071, line: 286, type: !528)
!9441 = distinct !DILexicalBlock(scope: !9435, file: !7071, line: 286, column: 9)
!9442 = !DILocation(line: 286, column: 9, scope: !9441)
!9443 = !DILocalVariable(name: "__arg1", scope: !9441, file: !7071, line: 286, type: !528)
!9444 = !DILocalVariable(name: "__arg2", scope: !9441, file: !7071, line: 286, type: !528)
!9445 = !DILocalVariable(name: "__arg3", scope: !9441, file: !7071, line: 286, type: !528)
!9446 = !DILocalVariable(name: "__arg4", scope: !9441, file: !7071, line: 286, type: !528)
!9447 = !DILocalVariable(name: "__arg5", scope: !9441, file: !7071, line: 286, type: !528)
!9448 = !{i32 -2139432509}
!9449 = !DILocation(line: 286, column: 2, scope: !9435)
!9450 = distinct !DISubprogram(name: "xen_poll_irq", scope: !3, file: !3, line: 1910, type: !2690, scopeLine: 1911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9451 = !DILocalVariable(name: "irq", arg: 1, scope: !9450, file: !3, line: 1910, type: !97)
!9452 = !DILocation(line: 1910, column: 23, scope: !9450)
!9453 = !DILocation(line: 1912, column: 23, scope: !9450)
!9454 = !DILocation(line: 1912, column: 2, scope: !9450)
!9455 = !DILocation(line: 1913, column: 1, scope: !9450)
!9456 = distinct !DISubprogram(name: "xen_test_irq_shared", scope: !3, file: !3, line: 1916, type: !5116, scopeLine: 1917, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9457 = !DILocalVariable(name: "irq", arg: 1, scope: !9456, file: !3, line: 1916, type: !97)
!9458 = !DILocation(line: 1916, column: 29, scope: !9456)
!9459 = !DILocalVariable(name: "info", scope: !9456, file: !3, line: 1918, type: !474)
!9460 = !DILocation(line: 1918, column: 19, scope: !9456)
!9461 = !DILocation(line: 1918, column: 39, scope: !9456)
!9462 = !DILocation(line: 1918, column: 26, scope: !9456)
!9463 = !DILocalVariable(name: "irq_status", scope: !9456, file: !3, line: 1919, type: !7328)
!9464 = !DILocation(line: 1919, column: 34, scope: !9456)
!9465 = !DILocalVariable(name: "__ret_warn_on", scope: !9466, file: !3, line: 1921, type: !97)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 1921, column: 6)
!9467 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 1921, column: 6)
!9468 = !DILocation(line: 1921, column: 6, scope: !9466)
!9469 = !DILocation(line: 1921, column: 6, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 1921, column: 6)
!9471 = !DILocation(line: 1921, column: 6, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1921, column: 6)
!9473 = !DILocation(line: 1921, column: 6, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 1921, column: 6)
!9475 = !DILocation(line: 1921, column: 6, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 1921, column: 6)
!9477 = !{i32 -2138919384, i32 -2138919355, i32 -2138919309, i32 -2138919251, i32 -2138919197, i32 -2138919143, i32 -2138919088, i32 -2138919057}
!9478 = !DILocation(line: 1921, column: 6, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 1921, column: 6)
!9480 = !{i32 -2138918642, i32 -2138918635, i32 -2138918583, i32 -2138918552, i32 -2138918522}
!9481 = !DILocation(line: 1921, column: 6, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 1921, column: 6)
!9483 = !DILocation(line: 1921, column: 6, scope: !9467)
!9484 = !DILocation(line: 1921, column: 6, scope: !9456)
!9485 = !DILocation(line: 1922, column: 3, scope: !9467)
!9486 = !DILocation(line: 1924, column: 19, scope: !9456)
!9487 = !DILocation(line: 1924, column: 25, scope: !9456)
!9488 = !DILocation(line: 1924, column: 27, scope: !9456)
!9489 = !DILocation(line: 1924, column: 32, scope: !9456)
!9490 = !DILocation(line: 1924, column: 13, scope: !9456)
!9491 = !DILocation(line: 1924, column: 17, scope: !9456)
!9492 = !DILocation(line: 1926, column: 56, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 1926, column: 6)
!9494 = !DILocation(line: 1926, column: 6, scope: !9493)
!9495 = !DILocation(line: 1926, column: 6, scope: !9456)
!9496 = !DILocation(line: 1927, column: 3, scope: !9493)
!9497 = !DILocation(line: 1928, column: 22, scope: !9456)
!9498 = !DILocation(line: 1928, column: 28, scope: !9456)
!9499 = !DILocation(line: 1928, column: 9, scope: !9456)
!9500 = !DILocation(line: 1928, column: 2, scope: !9456)
!9501 = !DILocation(line: 1929, column: 1, scope: !9456)
!9502 = distinct !DISubprogram(name: "xen_irq_resume", scope: !3, file: !3, line: 1932, type: !2697, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9503 = !DILocalVariable(name: "cpu", scope: !9502, file: !3, line: 1934, type: !6)
!9504 = !DILocation(line: 1934, column: 15, scope: !9502)
!9505 = !DILocalVariable(name: "info", scope: !9502, file: !3, line: 1935, type: !474)
!9506 = !DILocation(line: 1935, column: 19, scope: !9502)
!9507 = !DILocation(line: 1938, column: 2, scope: !9502)
!9508 = !DILocalVariable(name: "__mptr", scope: !9509, file: !3, line: 1941, type: !466)
!9509 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 1941, column: 2)
!9510 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 1941, column: 2)
!9511 = !DILocation(line: 1941, column: 2, scope: !9509)
!9512 = !DILocation(line: 1941, column: 2, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 1941, column: 2)
!9514 = !DILocation(line: 1941, column: 2, scope: !9510)
!9515 = !DILocation(line: 1941, column: 2, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 1941, column: 2)
!9517 = !DILocation(line: 1942, column: 3, scope: !9516)
!9518 = !DILocation(line: 1942, column: 9, scope: !9516)
!9519 = !DILocation(line: 1942, column: 16, scope: !9516)
!9520 = !DILocalVariable(name: "__mptr", scope: !9521, file: !3, line: 1941, type: !466)
!9521 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 1941, column: 2)
!9522 = !DILocation(line: 1941, column: 2, scope: !9521)
!9523 = !DILocation(line: 1941, column: 2, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 1941, column: 2)
!9525 = distinct !{!9525, !9514, !9526}
!9526 = !DILocation(line: 1942, column: 18, scope: !9510)
!9527 = !DILocation(line: 1944, column: 2, scope: !9502)
!9528 = !DILocation(line: 1946, column: 2, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 1946, column: 2)
!9530 = !DILocation(line: 1946, column: 2, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 1946, column: 2)
!9532 = !DILocation(line: 1947, column: 21, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 1946, column: 29)
!9534 = !DILocation(line: 1947, column: 3, scope: !9533)
!9535 = !DILocation(line: 1948, column: 20, scope: !9533)
!9536 = !DILocation(line: 1948, column: 3, scope: !9533)
!9537 = !DILocation(line: 1949, column: 2, scope: !9533)
!9538 = distinct !{!9538, !9528, !9539}
!9539 = !DILocation(line: 1949, column: 2, scope: !9529)
!9540 = !DILocation(line: 1951, column: 2, scope: !9502)
!9541 = !DILocation(line: 1952, column: 1, scope: !9502)
!9542 = distinct !DISubprogram(name: "xen_evtchn_resume", scope: !6472, file: !6472, line: 100, type: !2697, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9543 = !DILocation(line: 102, column: 6, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9542, file: !6472, line: 102, column: 6)
!9545 = !DILocation(line: 102, column: 18, scope: !9544)
!9546 = !DILocation(line: 102, column: 6, scope: !9542)
!9547 = !DILocation(line: 103, column: 3, scope: !9544)
!9548 = !DILocation(line: 103, column: 15, scope: !9544)
!9549 = !DILocation(line: 104, column: 1, scope: !9542)
!9550 = distinct !DISubprogram(name: "clear_evtchn_to_irq_all", scope: !3, file: !3, line: 196, type: !2697, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9551 = !DILocalVariable(name: "row", scope: !9550, file: !3, line: 198, type: !6)
!9552 = !DILocation(line: 198, column: 11, scope: !9550)
!9553 = !DILocation(line: 200, column: 11, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 200, column: 2)
!9555 = !DILocation(line: 200, column: 7, scope: !9554)
!9556 = !DILocation(line: 200, column: 16, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9554, file: !3, line: 200, column: 2)
!9558 = !DILocation(line: 200, column: 22, scope: !9557)
!9559 = !DILocation(line: 200, column: 20, scope: !9557)
!9560 = !DILocation(line: 200, column: 2, scope: !9554)
!9561 = !DILocation(line: 201, column: 7, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 201, column: 7)
!9563 = distinct !DILexicalBlock(scope: !9557, file: !3, line: 200, column: 68)
!9564 = !DILocation(line: 201, column: 21, scope: !9562)
!9565 = !DILocation(line: 201, column: 26, scope: !9562)
!9566 = !DILocation(line: 201, column: 7, scope: !9563)
!9567 = !DILocation(line: 202, column: 4, scope: !9562)
!9568 = !DILocation(line: 203, column: 27, scope: !9563)
!9569 = !DILocation(line: 203, column: 3, scope: !9563)
!9570 = !DILocation(line: 204, column: 2, scope: !9563)
!9571 = !DILocation(line: 200, column: 64, scope: !9557)
!9572 = !DILocation(line: 200, column: 2, scope: !9557)
!9573 = distinct !{!9573, !9560, !9574}
!9574 = !DILocation(line: 204, column: 2, scope: !9554)
!9575 = !DILocation(line: 205, column: 1, scope: !9550)
!9576 = distinct !DISubprogram(name: "restore_cpu_virqs", scope: !3, file: !3, line: 1811, type: !7089, scopeLine: 1812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9577 = !DILocalVariable(name: "cpu", arg: 1, scope: !9576, file: !3, line: 1811, type: !6)
!9578 = !DILocation(line: 1811, column: 44, scope: !9576)
!9579 = !DILocalVariable(name: "bind_virq", scope: !9576, file: !3, line: 1813, type: !7878)
!9580 = !DILocation(line: 1813, column: 26, scope: !9576)
!9581 = !DILocalVariable(name: "evtchn", scope: !9576, file: !3, line: 1814, type: !491)
!9582 = !DILocation(line: 1814, column: 16, scope: !9576)
!9583 = !DILocalVariable(name: "virq", scope: !9576, file: !3, line: 1815, type: !97)
!9584 = !DILocation(line: 1815, column: 6, scope: !9576)
!9585 = !DILocalVariable(name: "irq", scope: !9576, file: !3, line: 1815, type: !97)
!9586 = !DILocation(line: 1815, column: 12, scope: !9576)
!9587 = !DILocation(line: 1817, column: 12, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9576, file: !3, line: 1817, column: 2)
!9589 = !DILocation(line: 1817, column: 7, scope: !9588)
!9590 = !DILocation(line: 1817, column: 17, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 1817, column: 2)
!9592 = !DILocation(line: 1817, column: 22, scope: !9591)
!9593 = !DILocation(line: 1817, column: 2, scope: !9588)
!9594 = !DILocation(line: 1818, column: 14, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !3, line: 1818, column: 14)
!9596 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 1818, column: 7)
!9597 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 1817, column: 42)
!9598 = !DILocation(line: 1818, column: 14, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 1818, column: 14)
!9600 = !DILocalVariable(name: "__vpp_verify", scope: !9601, file: !3, line: 1818, type: !3999)
!9601 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 1818, column: 14)
!9602 = !DILocation(line: 1818, column: 14, scope: !9601)
!9603 = !DILocation(line: 1818, column: 40, scope: !9596)
!9604 = !DILocation(line: 1818, column: 14, scope: !9596)
!9605 = !DILocation(line: 1818, column: 12, scope: !9596)
!9606 = !DILocation(line: 1818, column: 47, scope: !9596)
!9607 = !DILocation(line: 1818, column: 7, scope: !9597)
!9608 = !DILocation(line: 1819, column: 4, scope: !9596)
!9609 = !DILocation(line: 1821, column: 3, scope: !9597)
!9610 = !DILocation(line: 1821, column: 3, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 1821, column: 3)
!9612 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 1821, column: 3)
!9613 = !DILocation(line: 1821, column: 3, scope: !9612)
!9614 = !DILocation(line: 1821, column: 3, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 1821, column: 3)
!9616 = !DILocation(line: 1821, column: 3, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 1821, column: 3)
!9618 = !DILocation(line: 1821, column: 3, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 1821, column: 3)
!9620 = !{i32 -2138926110, i32 -2138926081, i32 -2138926035, i32 -2138925977, i32 -2138925923, i32 -2138925869, i32 -2138925814, i32 -2138925783}
!9621 = !DILocation(line: 1821, column: 3, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9623, file: !3, line: 1821, column: 3)
!9623 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 1821, column: 3)
!9624 = !{i32 -2138925327, i32 -2138925320, i32 -2138925266, i32 -2138925235, i32 -2138925205}
!9625 = !DILocation(line: 1821, column: 3, scope: !9623)
!9626 = !DILocation(line: 1824, column: 20, scope: !9597)
!9627 = !DILocation(line: 1824, column: 13, scope: !9597)
!9628 = !DILocation(line: 1824, column: 18, scope: !9597)
!9629 = !DILocation(line: 1825, column: 32, scope: !9597)
!9630 = !DILocation(line: 1825, column: 20, scope: !9597)
!9631 = !DILocation(line: 1825, column: 13, scope: !9597)
!9632 = !DILocation(line: 1825, column: 18, scope: !9597)
!9633 = !DILocation(line: 1827, column: 7, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 1826, column: 7)
!9635 = !DILocation(line: 1826, column: 7, scope: !9634)
!9636 = !DILocation(line: 1827, column: 19, scope: !9634)
!9637 = !DILocation(line: 1826, column: 7, scope: !9597)
!9638 = !DILocation(line: 1828, column: 4, scope: !9634)
!9639 = !DILocation(line: 1828, column: 4, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 1828, column: 4)
!9641 = !DILocation(line: 1828, column: 4, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 1828, column: 4)
!9643 = !DILocation(line: 1828, column: 4, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 1828, column: 4)
!9645 = !{i32 -2138924998, i32 -2138924969, i32 -2138924923, i32 -2138924865, i32 -2138924811, i32 -2138924757, i32 -2138924702, i32 -2138924671}
!9646 = !DILocation(line: 1828, column: 4, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9648, file: !3, line: 1828, column: 4)
!9648 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 1828, column: 4)
!9649 = !{i32 -2138924215, i32 -2138924208, i32 -2138924154, i32 -2138924123, i32 -2138924093}
!9650 = !DILocation(line: 1828, column: 4, scope: !9648)
!9651 = !DILocation(line: 1829, column: 22, scope: !9597)
!9652 = !DILocation(line: 1829, column: 10, scope: !9597)
!9653 = !DILocation(line: 1832, column: 33, scope: !9597)
!9654 = !DILocation(line: 1832, column: 38, scope: !9597)
!9655 = !DILocation(line: 1832, column: 43, scope: !9597)
!9656 = !DILocation(line: 1832, column: 51, scope: !9597)
!9657 = !DILocation(line: 1832, column: 9, scope: !9597)
!9658 = !DILocation(line: 1833, column: 22, scope: !9597)
!9659 = !DILocation(line: 1833, column: 30, scope: !9597)
!9660 = !DILocation(line: 1833, column: 3, scope: !9597)
!9661 = !DILocation(line: 1834, column: 2, scope: !9597)
!9662 = !DILocation(line: 1817, column: 38, scope: !9591)
!9663 = !DILocation(line: 1817, column: 2, scope: !9591)
!9664 = distinct !{!9664, !9593, !9665}
!9665 = !DILocation(line: 1834, column: 2, scope: !9588)
!9666 = !DILocation(line: 1835, column: 1, scope: !9576)
!9667 = distinct !DISubprogram(name: "restore_cpu_ipis", scope: !3, file: !3, line: 1837, type: !7089, scopeLine: 1838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9668 = !DILocalVariable(name: "cpu", arg: 1, scope: !9667, file: !3, line: 1837, type: !6)
!9669 = !DILocation(line: 1837, column: 43, scope: !9667)
!9670 = !DILocalVariable(name: "bind_ipi", scope: !9667, file: !3, line: 1839, type: !8505)
!9671 = !DILocation(line: 1839, column: 25, scope: !9667)
!9672 = !DILocalVariable(name: "evtchn", scope: !9667, file: !3, line: 1840, type: !491)
!9673 = !DILocation(line: 1840, column: 16, scope: !9667)
!9674 = !DILocalVariable(name: "ipi", scope: !9667, file: !3, line: 1841, type: !97)
!9675 = !DILocation(line: 1841, column: 6, scope: !9667)
!9676 = !DILocalVariable(name: "irq", scope: !9667, file: !3, line: 1841, type: !97)
!9677 = !DILocation(line: 1841, column: 11, scope: !9667)
!9678 = !DILocation(line: 1843, column: 11, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 1843, column: 2)
!9680 = !DILocation(line: 1843, column: 7, scope: !9679)
!9681 = !DILocation(line: 1843, column: 16, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 1843, column: 2)
!9683 = !DILocation(line: 1843, column: 20, scope: !9682)
!9684 = !DILocation(line: 1843, column: 2, scope: !9679)
!9685 = !DILocation(line: 1844, column: 14, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 1844, column: 14)
!9687 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 1844, column: 7)
!9688 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 1843, column: 42)
!9689 = !DILocation(line: 1844, column: 14, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 1844, column: 14)
!9691 = !DILocalVariable(name: "__vpp_verify", scope: !9692, file: !3, line: 1844, type: !3999)
!9692 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 1844, column: 14)
!9693 = !DILocation(line: 1844, column: 14, scope: !9692)
!9694 = !DILocation(line: 1844, column: 39, scope: !9687)
!9695 = !DILocation(line: 1844, column: 14, scope: !9687)
!9696 = !DILocation(line: 1844, column: 12, scope: !9687)
!9697 = !DILocation(line: 1844, column: 45, scope: !9687)
!9698 = !DILocation(line: 1844, column: 7, scope: !9688)
!9699 = !DILocation(line: 1845, column: 4, scope: !9687)
!9700 = !DILocation(line: 1847, column: 3, scope: !9688)
!9701 = !DILocation(line: 1847, column: 3, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 1847, column: 3)
!9703 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 1847, column: 3)
!9704 = !DILocation(line: 1847, column: 3, scope: !9703)
!9705 = !DILocation(line: 1847, column: 3, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9702, file: !3, line: 1847, column: 3)
!9707 = !DILocation(line: 1847, column: 3, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 1847, column: 3)
!9709 = !DILocation(line: 1847, column: 3, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 1847, column: 3)
!9711 = !{i32 -2138923362, i32 -2138923333, i32 -2138923287, i32 -2138923229, i32 -2138923175, i32 -2138923121, i32 -2138923066, i32 -2138923035}
!9712 = !DILocation(line: 1847, column: 3, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 1847, column: 3)
!9714 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 1847, column: 3)
!9715 = !{i32 -2138922579, i32 -2138922572, i32 -2138922518, i32 -2138922487, i32 -2138922457}
!9716 = !DILocation(line: 1847, column: 3, scope: !9714)
!9717 = !DILocation(line: 1850, column: 31, scope: !9688)
!9718 = !DILocation(line: 1850, column: 19, scope: !9688)
!9719 = !DILocation(line: 1850, column: 12, scope: !9688)
!9720 = !DILocation(line: 1850, column: 17, scope: !9688)
!9721 = !DILocation(line: 1852, column: 7, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 1851, column: 7)
!9723 = !DILocation(line: 1851, column: 7, scope: !9722)
!9724 = !DILocation(line: 1852, column: 18, scope: !9722)
!9725 = !DILocation(line: 1851, column: 7, scope: !9688)
!9726 = !DILocation(line: 1853, column: 4, scope: !9722)
!9727 = !DILocation(line: 1853, column: 4, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9722, file: !3, line: 1853, column: 4)
!9729 = !DILocation(line: 1853, column: 4, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 1853, column: 4)
!9731 = !DILocation(line: 1853, column: 4, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 1853, column: 4)
!9733 = !{i32 -2138922250, i32 -2138922221, i32 -2138922175, i32 -2138922117, i32 -2138922063, i32 -2138922009, i32 -2138921954, i32 -2138921923}
!9734 = !DILocation(line: 1853, column: 4, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 1853, column: 4)
!9736 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 1853, column: 4)
!9737 = !{i32 -2138921467, i32 -2138921460, i32 -2138921406, i32 -2138921375, i32 -2138921345}
!9738 = !DILocation(line: 1853, column: 4, scope: !9736)
!9739 = !DILocation(line: 1854, column: 21, scope: !9688)
!9740 = !DILocation(line: 1854, column: 10, scope: !9688)
!9741 = !DILocation(line: 1857, column: 32, scope: !9688)
!9742 = !DILocation(line: 1857, column: 37, scope: !9688)
!9743 = !DILocation(line: 1857, column: 42, scope: !9688)
!9744 = !DILocation(line: 1857, column: 50, scope: !9688)
!9745 = !DILocation(line: 1857, column: 9, scope: !9688)
!9746 = !DILocation(line: 1858, column: 22, scope: !9688)
!9747 = !DILocation(line: 1858, column: 30, scope: !9688)
!9748 = !DILocation(line: 1858, column: 3, scope: !9688)
!9749 = !DILocation(line: 1859, column: 2, scope: !9688)
!9750 = !DILocation(line: 1843, column: 38, scope: !9682)
!9751 = !DILocation(line: 1843, column: 2, scope: !9682)
!9752 = distinct !{!9752, !9684, !9753}
!9753 = !DILocation(line: 1859, column: 2, scope: !9679)
!9754 = !DILocation(line: 1860, column: 1, scope: !9667)
!9755 = distinct !DISubprogram(name: "restore_pirqs", scope: !3, file: !3, line: 1773, type: !2697, scopeLine: 1774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9756 = !DILocalVariable(name: "pirq", scope: !9755, file: !3, line: 1775, type: !97)
!9757 = !DILocation(line: 1775, column: 6, scope: !9755)
!9758 = !DILocalVariable(name: "rc", scope: !9755, file: !3, line: 1775, type: !97)
!9759 = !DILocation(line: 1775, column: 12, scope: !9755)
!9760 = !DILocalVariable(name: "irq", scope: !9755, file: !3, line: 1775, type: !97)
!9761 = !DILocation(line: 1775, column: 16, scope: !9755)
!9762 = !DILocalVariable(name: "gsi", scope: !9755, file: !3, line: 1775, type: !97)
!9763 = !DILocation(line: 1775, column: 21, scope: !9755)
!9764 = !DILocalVariable(name: "map_irq", scope: !9755, file: !3, line: 1776, type: !9765)
!9765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "physdev_map_pirq", file: !6969, line: 137, size: 320, elements: !9766)
!9766 = !{!9767, !9768, !9769, !9770, !9771, !9772, !9773, !9774}
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "domid", scope: !9765, file: !6969, line: 138, baseType: !7434, size: 16)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9765, file: !6969, line: 140, baseType: !97, size: 32, offset: 32)
!9769 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9765, file: !6969, line: 142, baseType: !97, size: 32, offset: 64)
!9770 = !DIDerivedType(tag: DW_TAG_member, name: "pirq", scope: !9765, file: !6969, line: 144, baseType: !97, size: 32, offset: 96)
!9771 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9765, file: !6969, line: 146, baseType: !97, size: 32, offset: 128)
!9772 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !9765, file: !6969, line: 148, baseType: !97, size: 32, offset: 160)
!9773 = !DIDerivedType(tag: DW_TAG_member, name: "entry_nr", scope: !9765, file: !6969, line: 155, baseType: !97, size: 32, offset: 192)
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "table_base", scope: !9765, file: !6969, line: 157, baseType: !538, size: 64, offset: 256)
!9775 = !DILocation(line: 1776, column: 26, scope: !9755)
!9776 = !DILocalVariable(name: "info", scope: !9755, file: !3, line: 1777, type: !474)
!9777 = !DILocation(line: 1777, column: 19, scope: !9755)
!9778 = !DILocalVariable(name: "__mptr", scope: !9779, file: !3, line: 1779, type: !466)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 1779, column: 2)
!9780 = distinct !DILexicalBlock(scope: !9755, file: !3, line: 1779, column: 2)
!9781 = !DILocation(line: 1779, column: 2, scope: !9779)
!9782 = !DILocation(line: 1779, column: 2, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 1779, column: 2)
!9784 = !DILocation(line: 1779, column: 2, scope: !9780)
!9785 = !DILocation(line: 1779, column: 2, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 1779, column: 2)
!9787 = !DILocation(line: 1780, column: 7, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 1780, column: 7)
!9789 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 1779, column: 54)
!9790 = !DILocation(line: 1780, column: 13, scope: !9788)
!9791 = !DILocation(line: 1780, column: 18, scope: !9788)
!9792 = !DILocation(line: 1780, column: 7, scope: !9789)
!9793 = !DILocation(line: 1781, column: 4, scope: !9788)
!9794 = !DILocation(line: 1783, column: 10, scope: !9789)
!9795 = !DILocation(line: 1783, column: 16, scope: !9789)
!9796 = !DILocation(line: 1783, column: 18, scope: !9789)
!9797 = !DILocation(line: 1783, column: 23, scope: !9789)
!9798 = !DILocation(line: 1783, column: 8, scope: !9789)
!9799 = !DILocation(line: 1784, column: 9, scope: !9789)
!9800 = !DILocation(line: 1784, column: 15, scope: !9789)
!9801 = !DILocation(line: 1784, column: 17, scope: !9789)
!9802 = !DILocation(line: 1784, column: 22, scope: !9789)
!9803 = !DILocation(line: 1784, column: 7, scope: !9789)
!9804 = !DILocation(line: 1785, column: 9, scope: !9789)
!9805 = !DILocation(line: 1785, column: 15, scope: !9789)
!9806 = !DILocation(line: 1785, column: 7, scope: !9789)
!9807 = !DILocation(line: 1789, column: 8, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 1789, column: 7)
!9809 = !DILocation(line: 1789, column: 7, scope: !9789)
!9810 = !DILocation(line: 1790, column: 4, scope: !9808)
!9811 = !DILocation(line: 1792, column: 11, scope: !9789)
!9812 = !DILocation(line: 1792, column: 17, scope: !9789)
!9813 = !DILocation(line: 1793, column: 11, scope: !9789)
!9814 = !DILocation(line: 1793, column: 16, scope: !9789)
!9815 = !DILocation(line: 1794, column: 19, scope: !9789)
!9816 = !DILocation(line: 1794, column: 11, scope: !9789)
!9817 = !DILocation(line: 1794, column: 17, scope: !9789)
!9818 = !DILocation(line: 1795, column: 18, scope: !9789)
!9819 = !DILocation(line: 1795, column: 11, scope: !9789)
!9820 = !DILocation(line: 1795, column: 16, scope: !9789)
!9821 = !DILocation(line: 1797, column: 50, scope: !9789)
!9822 = !DILocation(line: 1797, column: 8, scope: !9789)
!9823 = !DILocation(line: 1797, column: 6, scope: !9789)
!9824 = !DILocation(line: 1798, column: 7, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 1798, column: 7)
!9826 = !DILocation(line: 1798, column: 7, scope: !9789)
!9827 = !DILocation(line: 1799, column: 4, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 1798, column: 11)
!9829 = !DILocation(line: 1801, column: 17, scope: !9828)
!9830 = !DILocation(line: 1801, column: 4, scope: !9828)
!9831 = !DILocation(line: 1802, column: 4, scope: !9828)
!9832 = !DILocation(line: 1805, column: 51, scope: !9789)
!9833 = !DILocation(line: 1805, column: 64, scope: !9789)
!9834 = !DILocation(line: 1805, column: 3, scope: !9789)
!9835 = !DILocation(line: 1807, column: 18, scope: !9789)
!9836 = !DILocation(line: 1807, column: 3, scope: !9789)
!9837 = !DILocation(line: 1808, column: 2, scope: !9789)
!9838 = !DILocalVariable(name: "__mptr", scope: !9839, file: !3, line: 1779, type: !466)
!9839 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 1779, column: 2)
!9840 = !DILocation(line: 1779, column: 2, scope: !9839)
!9841 = !DILocation(line: 1779, column: 2, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9839, file: !3, line: 1779, column: 2)
!9843 = distinct !{!9843, !9784, !9844}
!9844 = !DILocation(line: 1808, column: 2, scope: !9780)
!9845 = !DILocation(line: 1809, column: 1, scope: !9755)
!9846 = distinct !DISubprogram(name: "xen_set_callback_via", scope: !3, file: !3, line: 2013, type: !9847, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{!97, !538}
!9849 = !DILocalVariable(name: "via", arg: 1, scope: !9846, file: !3, line: 2013, type: !538)
!9850 = !DILocation(line: 2013, column: 35, scope: !9846)
!9851 = !DILocalVariable(name: "a", scope: !9846, file: !3, line: 2015, type: !9852)
!9852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xen_hvm_param", file: !9853, line: 30, size: 128, elements: !9854)
!9853 = !DIFile(filename: "./include/xen/interface/hvm/hvm_op.h", directory: "/home/lizy2001/genbc/linux")
!9854 = !{!9855, !9856, !9857}
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "domid", scope: !9852, file: !9853, line: 31, baseType: !7434, size: 16)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9852, file: !9853, line: 32, baseType: !493, size: 32, offset: 32)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9852, file: !9853, line: 33, baseType: !538, size: 64, offset: 64)
!9858 = !DILocation(line: 2015, column: 23, scope: !9846)
!9859 = !DILocation(line: 2016, column: 4, scope: !9846)
!9860 = !DILocation(line: 2016, column: 10, scope: !9846)
!9861 = !DILocation(line: 2017, column: 4, scope: !9846)
!9862 = !DILocation(line: 2017, column: 10, scope: !9846)
!9863 = !DILocation(line: 2018, column: 12, scope: !9846)
!9864 = !DILocation(line: 2018, column: 4, scope: !9846)
!9865 = !DILocation(line: 2018, column: 10, scope: !9846)
!9866 = !DILocation(line: 2019, column: 44, scope: !9846)
!9867 = !DILocation(line: 2019, column: 9, scope: !9846)
!9868 = !DILocation(line: 2019, column: 2, scope: !9846)
!9869 = distinct !DISubprogram(name: "HYPERVISOR_hvm_op", scope: !7071, file: !7071, line: 420, type: !9870, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9870 = !DISubroutineType(types: !9871)
!9871 = !{!528, !97, !466}
!9872 = !DILocalVariable(name: "op", arg: 1, scope: !9869, file: !7071, line: 420, type: !97)
!9873 = !DILocation(line: 420, column: 23, scope: !9869)
!9874 = !DILocalVariable(name: "arg", arg: 2, scope: !9869, file: !7071, line: 420, type: !466)
!9875 = !DILocation(line: 420, column: 33, scope: !9869)
!9876 = !DILocalVariable(name: "__res", scope: !9877, file: !7071, line: 422, type: !528)
!9877 = distinct !DILexicalBlock(scope: !9869, file: !7071, line: 422, column: 15)
!9878 = !DILocation(line: 422, column: 15, scope: !9877)
!9879 = !DILocalVariable(name: "__arg1", scope: !9877, file: !7071, line: 422, type: !528)
!9880 = !DILocalVariable(name: "__arg2", scope: !9877, file: !7071, line: 422, type: !528)
!9881 = !DILocalVariable(name: "__arg3", scope: !9877, file: !7071, line: 422, type: !528)
!9882 = !DILocalVariable(name: "__arg4", scope: !9877, file: !7071, line: 422, type: !528)
!9883 = !DILocalVariable(name: "__arg5", scope: !9877, file: !7071, line: 422, type: !528)
!9884 = !{i32 -2139402788}
!9885 = !DILocation(line: 422, column: 8, scope: !9869)
!9886 = distinct !DISubprogram(name: "xen_setup_callback_vector", scope: !3, file: !3, line: 2027, type: !2697, scopeLine: 2028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9887 = !DILocalVariable(name: "callback_via", scope: !9886, file: !3, line: 2029, type: !538)
!9888 = !DILocation(line: 2029, column: 11, scope: !9886)
!9889 = !DILocation(line: 2031, column: 6, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9886, file: !3, line: 2031, column: 6)
!9891 = !DILocation(line: 2031, column: 6, scope: !9886)
!9892 = !DILocation(line: 2032, column: 16, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 2031, column: 32)
!9894 = !DILocation(line: 2033, column: 28, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9893, file: !3, line: 2033, column: 7)
!9896 = !DILocation(line: 2033, column: 7, scope: !9895)
!9897 = !DILocation(line: 2033, column: 7, scope: !9893)
!9898 = !DILocation(line: 2034, column: 4, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 2033, column: 43)
!9900 = !DILocation(line: 2035, column: 29, scope: !9899)
!9901 = !DILocation(line: 2036, column: 3, scope: !9899)
!9902 = !DILocation(line: 2037, column: 2, scope: !9893)
!9903 = !DILocation(line: 2038, column: 1, scope: !9886)
!9904 = distinct !DISubprogram(name: "xen_init_IRQ", scope: !3, file: !3, line: 2078, type: !2697, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !606)
!9905 = !DILocalVariable(name: "ret", scope: !9904, file: !3, line: 2080, type: !97)
!9906 = !DILocation(line: 2080, column: 6, scope: !9904)
!9907 = !DILocalVariable(name: "evtchn", scope: !9904, file: !3, line: 2081, type: !491)
!9908 = !DILocation(line: 2081, column: 16, scope: !9904)
!9909 = !DILocation(line: 2083, column: 6, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 2083, column: 6)
!9911 = !DILocation(line: 2083, column: 6, scope: !9904)
!9912 = !DILocation(line: 2084, column: 9, scope: !9910)
!9913 = !DILocation(line: 2084, column: 7, scope: !9910)
!9914 = !DILocation(line: 2084, column: 3, scope: !9910)
!9915 = !DILocation(line: 2085, column: 6, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 2085, column: 6)
!9917 = !DILocation(line: 2085, column: 10, scope: !9916)
!9918 = !DILocation(line: 2085, column: 6, scope: !9904)
!9919 = !DILocation(line: 2086, column: 3, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9916, file: !3, line: 2085, column: 15)
!9921 = !DILocation(line: 2087, column: 19, scope: !9920)
!9922 = !DILocation(line: 2088, column: 2, scope: !9920)
!9923 = !DILocation(line: 2090, column: 2, scope: !9904)
!9924 = !DILocation(line: 2092, column: 2, scope: !9904)
!9925 = !DILocation(line: 2096, column: 26, scope: !9904)
!9926 = !DILocation(line: 2096, column: 18, scope: !9904)
!9927 = !DILocation(line: 2096, column: 16, scope: !9904)
!9928 = !DILocation(line: 2098, column: 2, scope: !9904)
!9929 = !DILocation(line: 2098, column: 2, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 2098, column: 2)
!9931 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 2098, column: 2)
!9932 = !DILocation(line: 2098, column: 2, scope: !9931)
!9933 = !DILocation(line: 2098, column: 2, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 2098, column: 2)
!9935 = !DILocation(line: 2098, column: 2, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 2098, column: 2)
!9937 = !DILocation(line: 2098, column: 2, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 2098, column: 2)
!9939 = !{i32 -2138909184, i32 -2138909155, i32 -2138909109, i32 -2138909051, i32 -2138908997, i32 -2138908943, i32 -2138908888, i32 -2138908857}
!9940 = !DILocation(line: 2098, column: 2, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 2098, column: 2)
!9942 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 2098, column: 2)
!9943 = !{i32 -2138908401, i32 -2138908394, i32 -2138908340, i32 -2138908309, i32 -2138908279}
!9944 = !DILocation(line: 2098, column: 2, scope: !9942)
!9945 = !DILocation(line: 2101, column: 14, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 2101, column: 2)
!9947 = !DILocation(line: 2101, column: 7, scope: !9946)
!9948 = !DILocation(line: 2101, column: 19, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 2101, column: 2)
!9950 = !DILocation(line: 2101, column: 28, scope: !9949)
!9951 = !DILocation(line: 2101, column: 26, scope: !9949)
!9952 = !DILocation(line: 2101, column: 2, scope: !9946)
!9953 = !DILocation(line: 2102, column: 15, scope: !9949)
!9954 = !DILocation(line: 2102, column: 3, scope: !9949)
!9955 = !DILocation(line: 2101, column: 60, scope: !9949)
!9956 = !DILocation(line: 2101, column: 2, scope: !9949)
!9957 = distinct !{!9957, !9952, !9958}
!9958 = !DILocation(line: 2102, column: 21, scope: !9946)
!9959 = !DILocation(line: 2104, column: 17, scope: !9904)
!9960 = !DILocation(line: 2107, column: 6, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 2107, column: 6)
!9962 = !DILocation(line: 2107, column: 6, scope: !9904)
!9963 = !DILocation(line: 2108, column: 7, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 2108, column: 7)
!9965 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 2107, column: 23)
!9966 = !DILocation(line: 2108, column: 7, scope: !9965)
!9967 = !DILocation(line: 2109, column: 4, scope: !9964)
!9968 = !DILocation(line: 2110, column: 2, scope: !9965)
!9969 = !DILocation(line: 2111, column: 6, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 2111, column: 6)
!9971 = !DILocation(line: 2111, column: 6, scope: !9904)
!9972 = !DILocation(line: 2112, column: 3, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 2111, column: 48)
!9974 = !DILocation(line: 2113, column: 3, scope: !9973)
!9975 = !DILocation(line: 2114, column: 2, scope: !9973)
!9976 = !DILocation(line: 2116, column: 6, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 2116, column: 6)
!9978 = !DILocation(line: 2116, column: 6, scope: !9904)
!9979 = !DILocation(line: 2117, column: 3, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 2116, column: 24)
!9981 = !DILocation(line: 2120, column: 3, scope: !9980)
!9982 = !DILocation(line: 2121, column: 2, scope: !9980)
!9983 = !DILocalVariable(name: "rc", scope: !9984, file: !3, line: 2122, type: !97)
!9984 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 2121, column: 9)
!9985 = !DILocation(line: 2122, column: 7, scope: !9984)
!9986 = !DILocalVariable(name: "eoi_gmfn", scope: !9984, file: !3, line: 2123, type: !9987)
!9987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "physdev_pirq_eoi_gmfn", file: !6969, line: 57, size: 64, elements: !9988)
!9988 = !{!9989}
!9989 = !DIDerivedType(tag: DW_TAG_member, name: "gmfn", scope: !9987, file: !6969, line: 59, baseType: !652, size: 64)
!9990 = !DILocation(line: 2123, column: 32, scope: !9984)
!9991 = !DILocation(line: 2125, column: 26, scope: !9984)
!9992 = !DILocation(line: 2125, column: 18, scope: !9984)
!9993 = !DILocation(line: 2125, column: 16, scope: !9984)
!9994 = !DILocation(line: 2126, column: 19, scope: !9984)
!9995 = !DILocation(line: 2126, column: 12, scope: !9984)
!9996 = !DILocation(line: 2126, column: 17, scope: !9984)
!9997 = !DILocation(line: 2127, column: 58, scope: !9984)
!9998 = !DILocation(line: 2127, column: 8, scope: !9984)
!9999 = !DILocation(line: 2127, column: 6, scope: !9984)
!10000 = !DILocation(line: 2128, column: 7, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 2128, column: 7)
!10002 = !DILocation(line: 2128, column: 10, scope: !10001)
!10003 = !DILocation(line: 2128, column: 7, scope: !9984)
!10004 = !DILocation(line: 2129, column: 4, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10001, file: !3, line: 2128, column: 16)
!10006 = !DILocation(line: 2130, column: 17, scope: !10005)
!10007 = !DILocation(line: 2131, column: 3, scope: !10005)
!10008 = !DILocation(line: 2132, column: 19, scope: !10001)
!10009 = !DILocation(line: 2135, column: 1, scope: !9904)
!10010 = distinct !DISubprogram(name: "xen_cpu_init_eoi", scope: !3, file: !3, line: 589, type: !7089, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10011 = !DILocalVariable(name: "lock", arg: 1, scope: !10012, file: !10013, line: 327, type: !1702)
!10012 = distinct !DISubprogram(name: "spinlock_check", scope: !10013, file: !10013, line: 327, type: !10014, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10013 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!10016, !1702}
!10016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!10017 = !DILocation(line: 327, column: 67, scope: !10012, inlinedAt: !10018)
!10018 = distinct !DILocation(line: 594, column: 2, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 594, column: 2)
!10020 = !DILocalVariable(name: "cpu", arg: 1, scope: !10010, file: !3, line: 589, type: !6)
!10021 = !DILocation(line: 589, column: 43, scope: !10010)
!10022 = !DILocalVariable(name: "eoi", scope: !10010, file: !3, line: 591, type: !543)
!10023 = !DILocation(line: 591, column: 23, scope: !10010)
!10024 = !DILocation(line: 591, column: 30, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 591, column: 30)
!10026 = !DILocation(line: 591, column: 30, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 591, column: 30)
!10028 = !DILocalVariable(name: "__vpp_verify", scope: !10029, file: !3, line: 591, type: !3999)
!10029 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 591, column: 30)
!10030 = !DILocation(line: 591, column: 30, scope: !10029)
!10031 = !DILocation(line: 593, column: 2, scope: !10010)
!10032 = !DILocation(line: 593, column: 2, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 593, column: 2)
!10034 = !DILocation(line: 593, column: 2, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 593, column: 2)
!10036 = !DILocation(line: 594, column: 2, scope: !10010)
!10037 = !DILocation(line: 594, column: 2, scope: !10019)
!10038 = !DILocation(line: 329, column: 10, scope: !10012, inlinedAt: !10018)
!10039 = !DILocation(line: 329, column: 16, scope: !10012, inlinedAt: !10018)
!10040 = !DILocation(line: 595, column: 18, scope: !10010)
!10041 = !DILocation(line: 595, column: 23, scope: !10010)
!10042 = !DILocation(line: 595, column: 2, scope: !10010)
!10043 = !DILocation(line: 596, column: 1, scope: !10010)
!10044 = distinct !DISubprogram(name: "cpuhp_setup_state_nocalls", scope: !202, file: !202, line: 246, type: !10045, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10045 = !DISubroutineType(types: !10046)
!10046 = !{!97, !201, !689, !6512, !6512}
!10047 = !DILocalVariable(name: "state", arg: 1, scope: !10044, file: !202, line: 246, type: !201)
!10048 = !DILocation(line: 246, column: 62, scope: !10044)
!10049 = !DILocalVariable(name: "name", arg: 2, scope: !10044, file: !202, line: 247, type: !689)
!10050 = !DILocation(line: 247, column: 22, scope: !10044)
!10051 = !DILocalVariable(name: "startup", arg: 3, scope: !10044, file: !202, line: 248, type: !6512)
!10052 = !DILocation(line: 248, column: 16, scope: !10044)
!10053 = !DILocalVariable(name: "teardown", arg: 4, scope: !10044, file: !202, line: 249, type: !6512)
!10054 = !DILocation(line: 249, column: 16, scope: !10044)
!10055 = !DILocation(line: 251, column: 29, scope: !10044)
!10056 = !DILocation(line: 251, column: 36, scope: !10044)
!10057 = !DILocation(line: 251, column: 49, scope: !10044)
!10058 = !DILocation(line: 251, column: 58, scope: !10044)
!10059 = !DILocation(line: 251, column: 9, scope: !10044)
!10060 = !DILocation(line: 251, column: 2, scope: !10044)
!10061 = distinct !DISubprogram(name: "xen_evtchn_cpu_prepare", scope: !3, file: !3, line: 2056, type: !6513, scopeLine: 2057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10062 = !DILocalVariable(name: "cpu", arg: 1, scope: !10061, file: !3, line: 2056, type: !6)
!10063 = !DILocation(line: 2056, column: 48, scope: !10061)
!10064 = !DILocalVariable(name: "ret", scope: !10061, file: !3, line: 2058, type: !97)
!10065 = !DILocation(line: 2058, column: 6, scope: !10061)
!10066 = !DILocation(line: 2060, column: 19, scope: !10061)
!10067 = !DILocation(line: 2060, column: 2, scope: !10061)
!10068 = !DILocation(line: 2062, column: 6, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 2062, column: 6)
!10070 = !DILocation(line: 2062, column: 18, scope: !10069)
!10071 = !DILocation(line: 2062, column: 6, scope: !10061)
!10072 = !DILocation(line: 2063, column: 9, scope: !10069)
!10073 = !DILocation(line: 2063, column: 21, scope: !10069)
!10074 = !DILocation(line: 2063, column: 33, scope: !10069)
!10075 = !DILocation(line: 2063, column: 7, scope: !10069)
!10076 = !DILocation(line: 2063, column: 3, scope: !10069)
!10077 = !DILocation(line: 2065, column: 9, scope: !10061)
!10078 = !DILocation(line: 2065, column: 2, scope: !10061)
!10079 = distinct !DISubprogram(name: "xen_evtchn_cpu_dead", scope: !3, file: !3, line: 2068, type: !6513, scopeLine: 2069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10080 = !DILocalVariable(name: "cpu", arg: 1, scope: !10079, file: !3, line: 2068, type: !6)
!10081 = !DILocation(line: 2068, column: 45, scope: !10079)
!10082 = !DILocalVariable(name: "ret", scope: !10079, file: !3, line: 2070, type: !97)
!10083 = !DILocation(line: 2070, column: 6, scope: !10079)
!10084 = !DILocation(line: 2072, column: 6, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 2072, column: 6)
!10086 = !DILocation(line: 2072, column: 18, scope: !10085)
!10087 = !DILocation(line: 2072, column: 6, scope: !10079)
!10088 = !DILocation(line: 2073, column: 9, scope: !10085)
!10089 = !DILocation(line: 2073, column: 21, scope: !10085)
!10090 = !DILocation(line: 2073, column: 35, scope: !10085)
!10091 = !DILocation(line: 2073, column: 7, scope: !10085)
!10092 = !DILocation(line: 2073, column: 3, scope: !10085)
!10093 = !DILocation(line: 2075, column: 9, scope: !10079)
!10094 = !DILocation(line: 2075, column: 2, scope: !10079)
!10095 = distinct !DISubprogram(name: "kcalloc", scope: !375, file: !375, line: 601, type: !10096, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10096 = !DISubroutineType(types: !10097)
!10097 = !{!466, !909, !909, !539}
!10098 = !DILocalVariable(name: "n", arg: 1, scope: !10095, file: !375, line: 601, type: !909)
!10099 = !DILocation(line: 601, column: 36, scope: !10095)
!10100 = !DILocalVariable(name: "size", arg: 2, scope: !10095, file: !375, line: 601, type: !909)
!10101 = !DILocation(line: 601, column: 46, scope: !10095)
!10102 = !DILocalVariable(name: "flags", arg: 3, scope: !10095, file: !375, line: 601, type: !539)
!10103 = !DILocation(line: 601, column: 58, scope: !10095)
!10104 = !DILocation(line: 603, column: 23, scope: !10095)
!10105 = !DILocation(line: 603, column: 26, scope: !10095)
!10106 = !DILocation(line: 603, column: 32, scope: !10095)
!10107 = !DILocation(line: 603, column: 38, scope: !10095)
!10108 = !DILocation(line: 603, column: 9, scope: !10095)
!10109 = !DILocation(line: 603, column: 2, scope: !10095)
!10110 = distinct !DISubprogram(name: "mask_evtchn", scope: !6472, file: !6472, line: 84, type: !6489, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10111 = !DILocalVariable(name: "port", arg: 1, scope: !10110, file: !6472, line: 84, type: !491)
!10112 = !DILocation(line: 84, column: 46, scope: !10110)
!10113 = !DILocation(line: 86, column: 9, scope: !10110)
!10114 = !DILocation(line: 86, column: 21, scope: !10110)
!10115 = !DILocation(line: 86, column: 26, scope: !10110)
!10116 = !DILocation(line: 86, column: 2, scope: !10110)
!10117 = distinct !DISubprogram(name: "pirq_needs_eoi_flag", scope: !3, file: !3, line: 428, type: !6524, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10118 = !DILocalVariable(name: "irq", arg: 1, scope: !10117, file: !3, line: 428, type: !6)
!10119 = !DILocation(line: 428, column: 42, scope: !10117)
!10120 = !DILocalVariable(name: "info", scope: !10117, file: !3, line: 430, type: !474)
!10121 = !DILocation(line: 430, column: 19, scope: !10117)
!10122 = !DILocation(line: 430, column: 39, scope: !10117)
!10123 = !DILocation(line: 430, column: 26, scope: !10117)
!10124 = !DILocation(line: 431, column: 2, scope: !10117)
!10125 = !DILocation(line: 431, column: 2, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 431, column: 2)
!10127 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 431, column: 2)
!10128 = !DILocation(line: 431, column: 2, scope: !10127)
!10129 = !DILocation(line: 431, column: 2, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 431, column: 2)
!10131 = !DILocation(line: 431, column: 2, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 431, column: 2)
!10133 = !DILocation(line: 431, column: 2, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 431, column: 2)
!10135 = !{i32 -2139016254, i32 -2139016225, i32 -2139016179, i32 -2139016121, i32 -2139016067, i32 -2139016013, i32 -2139015958, i32 -2139015927}
!10136 = !DILocation(line: 431, column: 2, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10138, file: !3, line: 431, column: 2)
!10138 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 431, column: 2)
!10139 = !{i32 -2139015472, i32 -2139015465, i32 -2139015411, i32 -2139015380, i32 -2139015350}
!10140 = !DILocation(line: 431, column: 2, scope: !10138)
!10141 = !DILocation(line: 433, column: 9, scope: !10117)
!10142 = !DILocation(line: 433, column: 15, scope: !10117)
!10143 = !DILocation(line: 433, column: 17, scope: !10117)
!10144 = !DILocation(line: 433, column: 22, scope: !10117)
!10145 = !DILocation(line: 433, column: 28, scope: !10117)
!10146 = !DILocation(line: 433, column: 2, scope: !10117)
!10147 = distinct !DISubprogram(name: "xen_feature", scope: !10148, file: !10148, line: 19, type: !5116, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10148 = !DIFile(filename: "./include/xen/features.h", directory: "/home/lizy2001/genbc/linux")
!10149 = !DILocalVariable(name: "flag", arg: 1, scope: !10147, file: !10148, line: 19, type: !97)
!10150 = !DILocation(line: 19, column: 35, scope: !10147)
!10151 = !DILocation(line: 21, column: 22, scope: !10147)
!10152 = !DILocation(line: 21, column: 9, scope: !10147)
!10153 = !DILocation(line: 21, column: 2, scope: !10147)
!10154 = distinct !DISubprogram(name: "xen_alloc_callback_vector", scope: !3, file: !3, line: 2040, type: !2697, scopeLine: 2041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10155 = !DILocation(line: 2042, column: 7, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 2042, column: 6)
!10157 = !DILocation(line: 2042, column: 6, scope: !10154)
!10158 = !DILocation(line: 2043, column: 3, scope: !10156)
!10159 = !DILocation(line: 2045, column: 2, scope: !10154)
!10160 = !DILocation(line: 2046, column: 2, scope: !10154)
!10161 = !DILocation(line: 2047, column: 1, scope: !10154)
!10162 = distinct !DISubprogram(name: "pfn_to_gfn", scope: !10163, file: !10163, line: 251, type: !10164, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10163 = !DIFile(filename: "./arch/x86/include/asm/xen/page.h", directory: "/home/lizy2001/genbc/linux")
!10164 = !DISubroutineType(types: !10165)
!10165 = !{!528, !528}
!10166 = !DILocalVariable(name: "pfn", arg: 1, scope: !10162, file: !10163, line: 251, type: !528)
!10167 = !DILocation(line: 251, column: 54, scope: !10162)
!10168 = !DILocation(line: 253, column: 6, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10162, file: !10163, line: 253, column: 6)
!10170 = !DILocation(line: 253, column: 6, scope: !10162)
!10171 = !DILocation(line: 254, column: 10, scope: !10169)
!10172 = !DILocation(line: 254, column: 3, scope: !10169)
!10173 = !DILocation(line: 256, column: 21, scope: !10169)
!10174 = !DILocation(line: 256, column: 10, scope: !10169)
!10175 = !DILocation(line: 256, column: 3, scope: !10169)
!10176 = !DILocation(line: 257, column: 1, scope: !10162)
!10177 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !10178, file: !10178, line: 18, type: !10164, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10178 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!10179 = !DILocalVariable(name: "x", arg: 1, scope: !10177, file: !10178, line: 18, type: !528)
!10180 = !DILocation(line: 18, column: 63, scope: !10177)
!10181 = !DILocalVariable(name: "y", scope: !10177, file: !10178, line: 20, type: !528)
!10182 = !DILocation(line: 20, column: 16, scope: !10177)
!10183 = !DILocation(line: 20, column: 20, scope: !10177)
!10184 = !DILocation(line: 20, column: 22, scope: !10177)
!10185 = !DILocation(line: 23, column: 6, scope: !10177)
!10186 = !DILocation(line: 23, column: 12, scope: !10177)
!10187 = !DILocation(line: 23, column: 16, scope: !10177)
!10188 = !DILocation(line: 23, column: 14, scope: !10177)
!10189 = !DILocation(line: 23, column: 11, scope: !10177)
!10190 = !DILocation(line: 23, column: 21, scope: !10177)
!10191 = !DILocation(line: 23, column: 55, scope: !10177)
!10192 = !DILocation(line: 23, column: 53, scope: !10177)
!10193 = !DILocation(line: 23, column: 8, scope: !10177)
!10194 = !DILocation(line: 23, column: 4, scope: !10177)
!10195 = !DILocation(line: 25, column: 9, scope: !10177)
!10196 = !DILocation(line: 25, column: 2, scope: !10177)
!10197 = distinct !DISubprogram(name: "pirq_check_eoi_map", scope: !3, file: !3, line: 422, type: !6524, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10198 = !DILocalVariable(name: "irq", arg: 1, scope: !10197, file: !3, line: 422, type: !6)
!10199 = !DILocation(line: 422, column: 41, scope: !10197)
!10200 = !DILocation(line: 424, column: 32, scope: !10197)
!10201 = !DILocation(line: 424, column: 18, scope: !10197)
!10202 = !DILocation(line: 424, column: 38, scope: !10197)
!10203 = !DILocation(line: 424, column: 9, scope: !10197)
!10204 = !DILocation(line: 424, column: 2, scope: !10197)
!10205 = distinct !DISubprogram(name: "nr_legacy_irqs", scope: !10206, file: !10206, line: 78, type: !8013, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10206 = !DIFile(filename: "./arch/x86/include/asm/i8259.h", directory: "/home/lizy2001/genbc/linux")
!10207 = !DILocation(line: 80, column: 9, scope: !10205)
!10208 = !DILocation(line: 80, column: 21, scope: !10205)
!10209 = !DILocation(line: 80, column: 2, scope: !10205)
!10210 = distinct !DISubprogram(name: "irq_get_chip_data", scope: !183, file: !183, line: 822, type: !10211, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10211 = !DISubroutineType(types: !10212)
!10212 = !{!466, !6}
!10213 = !DILocalVariable(name: "irq", arg: 1, scope: !10210, file: !183, line: 822, type: !6)
!10214 = !DILocation(line: 822, column: 52, scope: !10210)
!10215 = !DILocalVariable(name: "d", scope: !10210, file: !183, line: 824, type: !5852)
!10216 = !DILocation(line: 824, column: 19, scope: !10210)
!10217 = !DILocation(line: 824, column: 40, scope: !10210)
!10218 = !DILocation(line: 824, column: 23, scope: !10210)
!10219 = !DILocation(line: 825, column: 9, scope: !10210)
!10220 = !DILocation(line: 825, column: 13, scope: !10210)
!10221 = !DILocation(line: 825, column: 16, scope: !10210)
!10222 = !DILocation(line: 825, column: 2, scope: !10210)
!10223 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6784, file: !6784, line: 646, type: !6785, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10224 = !DILocalVariable(name: "__ret", scope: !10225, file: !6784, line: 648, type: !528)
!10225 = distinct !DILexicalBlock(scope: !10223, file: !6784, line: 648, column: 9)
!10226 = !DILocation(line: 648, column: 9, scope: !10225)
!10227 = !DILocalVariable(name: "__edi", scope: !10225, file: !6784, line: 648, type: !528)
!10228 = !DILocalVariable(name: "__esi", scope: !10225, file: !6784, line: 648, type: !528)
!10229 = !DILocalVariable(name: "__edx", scope: !10225, file: !6784, line: 648, type: !528)
!10230 = !DILocalVariable(name: "__ecx", scope: !10225, file: !6784, line: 648, type: !528)
!10231 = !DILocalVariable(name: "__eax", scope: !10225, file: !6784, line: 648, type: !528)
!10232 = !DILocation(line: 648, column: 9, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10234, file: !6784, line: 648, column: 9)
!10234 = distinct !DILexicalBlock(scope: !10225, file: !6784, line: 648, column: 9)
!10235 = !{i32 -2145728821, i32 -2145726506, i32 -2145726272, i32 -2145726221, i32 -2145726193, i32 -2145726168, i32 -2145726484, i32 -2145726471, i32 -2145726033, i32 -2145725914, i32 -2145726379, i32 -2145726352, i32 -2145726324, i32 -2145726294}
!10236 = !DILocalVariable(name: "__mask", scope: !10237, file: !6784, line: 648, type: !528)
!10237 = distinct !DILexicalBlock(scope: !10233, file: !6784, line: 648, column: 9)
!10238 = !DILocation(line: 648, column: 9, scope: !10237)
!10239 = !DILocation(line: 648, column: 9, scope: !10234)
!10240 = !DILocation(line: 648, column: 2, scope: !10223)
!10241 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6784, file: !6784, line: 656, type: !2697, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10242 = !DILocalVariable(name: "__edi", scope: !10243, file: !6784, line: 658, type: !528)
!10243 = distinct !DILexicalBlock(scope: !10241, file: !6784, line: 658, column: 2)
!10244 = !DILocation(line: 658, column: 2, scope: !10243)
!10245 = !DILocalVariable(name: "__esi", scope: !10243, file: !6784, line: 658, type: !528)
!10246 = !DILocalVariable(name: "__edx", scope: !10243, file: !6784, line: 658, type: !528)
!10247 = !DILocalVariable(name: "__ecx", scope: !10243, file: !6784, line: 658, type: !528)
!10248 = !DILocalVariable(name: "__eax", scope: !10243, file: !6784, line: 658, type: !528)
!10249 = !{i32 -2145721727, i32 -2145720995, i32 -2145720761, i32 -2145720710, i32 -2145720682, i32 -2145720657, i32 -2145720973, i32 -2145720960, i32 -2145720522, i32 -2145720403, i32 -2145720868, i32 -2145720841, i32 -2145720813, i32 -2145720783}
!10250 = !DILocation(line: 659, column: 1, scope: !10241)
!10251 = distinct !DISubprogram(name: "list_empty", scope: !10252, file: !10252, line: 280, type: !10253, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10252 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!10253 = !DISubroutineType(types: !10254)
!10254 = !{!97, !10255}
!10255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10256, size: 64)
!10256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!10257 = !DILocalVariable(name: "head", arg: 1, scope: !10251, file: !10252, line: 280, type: !10255)
!10258 = !DILocation(line: 280, column: 54, scope: !10251)
!10259 = !DILocation(line: 282, column: 9, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10251, file: !10252, line: 282, column: 9)
!10261 = !DILocation(line: 282, column: 9, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10260, file: !10252, line: 282, column: 9)
!10263 = !DILocation(line: 282, column: 34, scope: !10251)
!10264 = !DILocation(line: 282, column: 31, scope: !10251)
!10265 = !DILocation(line: 282, column: 2, scope: !10251)
!10266 = distinct !DISubprogram(name: "lateeoi_list_add", scope: !3, file: !3, line: 485, type: !10267, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10267 = !DISubroutineType(types: !10268)
!10268 = !{null, !474}
!10269 = !DILocalVariable(name: "lock", arg: 1, scope: !10270, file: !10013, line: 407, type: !1702)
!10270 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !10013, file: !10013, line: 407, type: !10271, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{null, !1702, !528}
!10273 = !DILocation(line: 407, column: 64, scope: !10270, inlinedAt: !10274)
!10274 = distinct !DILocation(line: 512, column: 2, scope: !10266)
!10275 = !DILocalVariable(name: "flags", arg: 2, scope: !10270, file: !10013, line: 407, type: !528)
!10276 = !DILocation(line: 407, column: 84, scope: !10270, inlinedAt: !10274)
!10277 = !DILocation(line: 327, column: 67, scope: !10012, inlinedAt: !10278)
!10278 = distinct !DILocation(line: 498, column: 2, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10280, file: !3, line: 498, column: 2)
!10280 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 498, column: 2)
!10281 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 498, column: 2)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 498, column: 2)
!10283 = distinct !DILexicalBlock(scope: !10266, file: !3, line: 498, column: 2)
!10284 = !DILocalVariable(name: "info", arg: 1, scope: !10266, file: !3, line: 485, type: !474)
!10285 = !DILocation(line: 485, column: 47, scope: !10266)
!10286 = !DILocalVariable(name: "eoi", scope: !10266, file: !3, line: 487, type: !543)
!10287 = !DILocation(line: 487, column: 23, scope: !10266)
!10288 = !DILocation(line: 487, column: 30, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10266, file: !3, line: 487, column: 30)
!10290 = !DILocation(line: 487, column: 30, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 487, column: 30)
!10292 = !DILocalVariable(name: "__vpp_verify", scope: !10293, file: !3, line: 487, type: !3999)
!10293 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 487, column: 30)
!10294 = !DILocation(line: 487, column: 30, scope: !10293)
!10295 = !DILocalVariable(name: "elem", scope: !10266, file: !3, line: 488, type: !474)
!10296 = !DILocation(line: 488, column: 19, scope: !10266)
!10297 = !DILocalVariable(name: "now", scope: !10266, file: !3, line: 489, type: !503)
!10298 = !DILocation(line: 489, column: 6, scope: !10266)
!10299 = !DILocation(line: 489, column: 12, scope: !10266)
!10300 = !DILocalVariable(name: "delay", scope: !10266, file: !3, line: 490, type: !528)
!10301 = !DILocation(line: 490, column: 16, scope: !10266)
!10302 = !DILocalVariable(name: "flags", scope: !10266, file: !3, line: 491, type: !528)
!10303 = !DILocation(line: 491, column: 16, scope: !10266)
!10304 = !DILocation(line: 493, column: 6, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10266, file: !3, line: 493, column: 6)
!10306 = !DILocation(line: 493, column: 12, scope: !10305)
!10307 = !DILocation(line: 493, column: 18, scope: !10305)
!10308 = !DILocation(line: 493, column: 10, scope: !10305)
!10309 = !DILocation(line: 493, column: 6, scope: !10266)
!10310 = !DILocation(line: 494, column: 11, scope: !10305)
!10311 = !DILocation(line: 494, column: 17, scope: !10305)
!10312 = !DILocation(line: 494, column: 28, scope: !10305)
!10313 = !DILocation(line: 494, column: 26, scope: !10305)
!10314 = !DILocation(line: 494, column: 9, scope: !10305)
!10315 = !DILocation(line: 494, column: 3, scope: !10305)
!10316 = !DILocation(line: 496, column: 9, scope: !10305)
!10317 = !DILocation(line: 498, column: 2, scope: !10266)
!10318 = !DILocation(line: 498, column: 2, scope: !10283)
!10319 = !DILocalVariable(name: "__dummy", scope: !10320, file: !3, line: 498, type: !528)
!10320 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 498, column: 2)
!10321 = !DILocation(line: 498, column: 2, scope: !10320)
!10322 = !DILocalVariable(name: "__dummy2", scope: !10320, file: !3, line: 498, type: !528)
!10323 = !DILocation(line: 498, column: 2, scope: !10282)
!10324 = !DILocation(line: 498, column: 2, scope: !10281)
!10325 = !DILocation(line: 498, column: 2, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 498, column: 2)
!10327 = !DILocalVariable(name: "__dummy", scope: !10328, file: !3, line: 498, type: !528)
!10328 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 498, column: 2)
!10329 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 498, column: 2)
!10330 = !DILocation(line: 498, column: 2, scope: !10328)
!10331 = !DILocalVariable(name: "__dummy2", scope: !10328, file: !3, line: 498, type: !528)
!10332 = !DILocation(line: 498, column: 2, scope: !10329)
!10333 = !DILocation(line: 498, column: 2, scope: !10280)
!10334 = !{i32 -2139010933}
!10335 = !DILocation(line: 498, column: 2, scope: !10279)
!10336 = !DILocation(line: 329, column: 10, scope: !10012, inlinedAt: !10278)
!10337 = !DILocation(line: 329, column: 16, scope: !10012, inlinedAt: !10278)
!10338 = !DILocation(line: 500, column: 18, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10266, file: !3, line: 500, column: 6)
!10340 = !DILocation(line: 500, column: 23, scope: !10339)
!10341 = !DILocation(line: 500, column: 6, scope: !10339)
!10342 = !DILocation(line: 500, column: 6, scope: !10266)
!10343 = !DILocation(line: 501, column: 13, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 500, column: 34)
!10345 = !DILocation(line: 501, column: 19, scope: !10344)
!10346 = !DILocation(line: 501, column: 30, scope: !10344)
!10347 = !DILocation(line: 501, column: 35, scope: !10344)
!10348 = !DILocation(line: 501, column: 3, scope: !10344)
!10349 = !DILocation(line: 502, column: 23, scope: !10344)
!10350 = !DILocation(line: 502, column: 29, scope: !10344)
!10351 = !DILocation(line: 502, column: 38, scope: !10344)
!10352 = !DILocation(line: 503, column: 10, scope: !10344)
!10353 = !DILocation(line: 503, column: 15, scope: !10344)
!10354 = !DILocation(line: 503, column: 24, scope: !10344)
!10355 = !DILocation(line: 502, column: 3, scope: !10344)
!10356 = !DILocation(line: 504, column: 2, scope: !10344)
!10357 = !DILocalVariable(name: "__mptr", scope: !10358, file: !3, line: 505, type: !466)
!10358 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 505, column: 3)
!10359 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 505, column: 3)
!10360 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 504, column: 9)
!10361 = !DILocation(line: 505, column: 3, scope: !10358)
!10362 = !DILocation(line: 505, column: 3, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10358, file: !3, line: 505, column: 3)
!10364 = !DILocation(line: 505, column: 3, scope: !10359)
!10365 = !DILocation(line: 505, column: 3, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 505, column: 3)
!10367 = !DILocation(line: 506, column: 8, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 506, column: 8)
!10369 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 505, column: 63)
!10370 = !DILocation(line: 506, column: 14, scope: !10368)
!10371 = !DILocation(line: 506, column: 26, scope: !10368)
!10372 = !DILocation(line: 506, column: 32, scope: !10368)
!10373 = !DILocation(line: 506, column: 23, scope: !10368)
!10374 = !DILocation(line: 506, column: 8, scope: !10369)
!10375 = !DILocation(line: 507, column: 5, scope: !10368)
!10376 = !DILocation(line: 508, column: 3, scope: !10369)
!10377 = !DILocalVariable(name: "__mptr", scope: !10378, file: !3, line: 505, type: !466)
!10378 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 505, column: 3)
!10379 = !DILocation(line: 505, column: 3, scope: !10378)
!10380 = !DILocation(line: 505, column: 3, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 505, column: 3)
!10382 = distinct !{!10382, !10364, !10383}
!10383 = !DILocation(line: 508, column: 3, scope: !10359)
!10384 = !DILocation(line: 509, column: 13, scope: !10360)
!10385 = !DILocation(line: 509, column: 19, scope: !10360)
!10386 = !DILocation(line: 509, column: 30, scope: !10360)
!10387 = !DILocation(line: 509, column: 36, scope: !10360)
!10388 = !DILocation(line: 509, column: 3, scope: !10360)
!10389 = !DILocation(line: 512, column: 26, scope: !10266)
!10390 = !DILocation(line: 512, column: 31, scope: !10266)
!10391 = !DILocation(line: 512, column: 46, scope: !10266)
!10392 = !DILocalVariable(name: "__dummy", scope: !10393, file: !10013, line: 409, type: !528)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !10013, line: 409, column: 2)
!10394 = distinct !DILexicalBlock(scope: !10270, file: !10013, line: 409, column: 2)
!10395 = !DILocation(line: 409, column: 2, scope: !10393, inlinedAt: !10274)
!10396 = !DILocalVariable(name: "__dummy2", scope: !10393, file: !10013, line: 409, type: !528)
!10397 = !DILocalVariable(name: "__dummy", scope: !10398, file: !10013, line: 409, type: !528)
!10398 = distinct !DILexicalBlock(scope: !10399, file: !10013, line: 409, column: 2)
!10399 = distinct !DILexicalBlock(scope: !10400, file: !10013, line: 409, column: 2)
!10400 = distinct !DILexicalBlock(scope: !10401, file: !10013, line: 409, column: 2)
!10401 = distinct !DILexicalBlock(scope: !10394, file: !10013, line: 409, column: 2)
!10402 = !DILocation(line: 409, column: 2, scope: !10398, inlinedAt: !10274)
!10403 = !DILocalVariable(name: "__dummy2", scope: !10398, file: !10013, line: 409, type: !528)
!10404 = !DILocation(line: 409, column: 2, scope: !10399, inlinedAt: !10274)
!10405 = !DILocation(line: 409, column: 2, scope: !10406, inlinedAt: !10274)
!10406 = distinct !DILexicalBlock(scope: !10401, file: !10013, line: 409, column: 2)
!10407 = !{i32 -2145308432}
!10408 = !DILocation(line: 409, column: 2, scope: !10409, inlinedAt: !10274)
!10409 = distinct !DILexicalBlock(scope: !10406, file: !10013, line: 409, column: 2)
!10410 = !DILocation(line: 513, column: 1, scope: !10266)
!10411 = distinct !DISubprogram(name: "unmask_evtchn", scope: !6472, file: !6472, line: 89, type: !6489, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10412 = !DILocalVariable(name: "port", arg: 1, scope: !10411, file: !6472, line: 89, type: !491)
!10413 = !DILocation(line: 89, column: 48, scope: !10411)
!10414 = !DILocation(line: 91, column: 9, scope: !10411)
!10415 = !DILocation(line: 91, column: 21, scope: !10411)
!10416 = !DILocation(line: 91, column: 28, scope: !10411)
!10417 = !DILocation(line: 91, column: 2, scope: !10411)
!10418 = distinct !DISubprogram(name: "list_add", scope: !10252, file: !10252, line: 84, type: !10419, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10419 = !DISubroutineType(types: !10420)
!10420 = !{null, !482, !482}
!10421 = !DILocalVariable(name: "new", arg: 1, scope: !10418, file: !10252, line: 84, type: !482)
!10422 = !DILocation(line: 84, column: 47, scope: !10418)
!10423 = !DILocalVariable(name: "head", arg: 2, scope: !10418, file: !10252, line: 84, type: !482)
!10424 = !DILocation(line: 84, column: 70, scope: !10418)
!10425 = !DILocation(line: 86, column: 13, scope: !10418)
!10426 = !DILocation(line: 86, column: 18, scope: !10418)
!10427 = !DILocation(line: 86, column: 24, scope: !10418)
!10428 = !DILocation(line: 86, column: 30, scope: !10418)
!10429 = !DILocation(line: 86, column: 2, scope: !10418)
!10430 = !DILocation(line: 87, column: 1, scope: !10418)
!10431 = distinct !DISubprogram(name: "__list_add", scope: !10252, file: !10252, line: 63, type: !10432, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10432 = !DISubroutineType(types: !10433)
!10433 = !{null, !482, !482, !482}
!10434 = !DILocalVariable(name: "new", arg: 1, scope: !10431, file: !10252, line: 63, type: !482)
!10435 = !DILocation(line: 63, column: 49, scope: !10431)
!10436 = !DILocalVariable(name: "prev", arg: 2, scope: !10431, file: !10252, line: 64, type: !482)
!10437 = !DILocation(line: 64, column: 28, scope: !10431)
!10438 = !DILocalVariable(name: "next", arg: 3, scope: !10431, file: !10252, line: 65, type: !482)
!10439 = !DILocation(line: 65, column: 28, scope: !10431)
!10440 = !DILocation(line: 67, column: 24, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10431, file: !10252, line: 67, column: 6)
!10442 = !DILocation(line: 67, column: 29, scope: !10441)
!10443 = !DILocation(line: 67, column: 35, scope: !10441)
!10444 = !DILocation(line: 67, column: 7, scope: !10441)
!10445 = !DILocation(line: 67, column: 6, scope: !10431)
!10446 = !DILocation(line: 68, column: 3, scope: !10441)
!10447 = !DILocation(line: 70, column: 15, scope: !10431)
!10448 = !DILocation(line: 70, column: 2, scope: !10431)
!10449 = !DILocation(line: 70, column: 8, scope: !10431)
!10450 = !DILocation(line: 70, column: 13, scope: !10431)
!10451 = !DILocation(line: 71, column: 14, scope: !10431)
!10452 = !DILocation(line: 71, column: 2, scope: !10431)
!10453 = !DILocation(line: 71, column: 7, scope: !10431)
!10454 = !DILocation(line: 71, column: 12, scope: !10431)
!10455 = !DILocation(line: 72, column: 14, scope: !10431)
!10456 = !DILocation(line: 72, column: 2, scope: !10431)
!10457 = !DILocation(line: 72, column: 7, scope: !10431)
!10458 = !DILocation(line: 72, column: 12, scope: !10431)
!10459 = !DILocation(line: 73, column: 2, scope: !10431)
!10460 = !DILocation(line: 73, column: 2, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10431, file: !10252, line: 73, column: 2)
!10462 = !DILocation(line: 73, column: 2, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10461, file: !10252, line: 73, column: 2)
!10464 = !DILocation(line: 73, column: 2, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10461, file: !10252, line: 73, column: 2)
!10466 = !DILocation(line: 74, column: 1, scope: !10431)
!10467 = distinct !DISubprogram(name: "__list_add_valid", scope: !10252, file: !10252, line: 45, type: !10468, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10468 = !DISubroutineType(types: !10469)
!10469 = !{!1066, !482, !482, !482}
!10470 = !DILocalVariable(name: "new", arg: 1, scope: !10467, file: !10252, line: 45, type: !482)
!10471 = !DILocation(line: 45, column: 55, scope: !10467)
!10472 = !DILocalVariable(name: "prev", arg: 2, scope: !10467, file: !10252, line: 46, type: !482)
!10473 = !DILocation(line: 46, column: 23, scope: !10467)
!10474 = !DILocalVariable(name: "next", arg: 3, scope: !10467, file: !10252, line: 47, type: !482)
!10475 = !DILocation(line: 47, column: 23, scope: !10467)
!10476 = !DILocation(line: 49, column: 2, scope: !10467)
!10477 = distinct !DISubprogram(name: "xen_irq_init", scope: !3, file: !3, line: 614, type: !7089, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10478 = !DILocalVariable(name: "irq", arg: 1, scope: !10477, file: !3, line: 614, type: !6)
!10479 = !DILocation(line: 614, column: 35, scope: !10477)
!10480 = !DILocalVariable(name: "info", scope: !10477, file: !3, line: 616, type: !474)
!10481 = !DILocation(line: 616, column: 19, scope: !10477)
!10482 = !DILocation(line: 623, column: 9, scope: !10477)
!10483 = !DILocation(line: 623, column: 7, scope: !10477)
!10484 = !DILocation(line: 624, column: 6, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10477, file: !3, line: 624, column: 6)
!10486 = !DILocation(line: 624, column: 11, scope: !10485)
!10487 = !DILocation(line: 624, column: 6, scope: !10477)
!10488 = !DILocation(line: 625, column: 52, scope: !10485)
!10489 = !DILocation(line: 625, column: 3, scope: !10485)
!10490 = !DILocation(line: 627, column: 2, scope: !10477)
!10491 = !DILocation(line: 627, column: 8, scope: !10477)
!10492 = !DILocation(line: 627, column: 13, scope: !10477)
!10493 = !DILocation(line: 628, column: 2, scope: !10477)
!10494 = !DILocation(line: 628, column: 8, scope: !10477)
!10495 = !DILocation(line: 628, column: 15, scope: !10477)
!10496 = !DILocation(line: 630, column: 19, scope: !10477)
!10497 = !DILocation(line: 630, column: 24, scope: !10477)
!10498 = !DILocation(line: 630, column: 2, scope: !10477)
!10499 = !DILocation(line: 632, column: 18, scope: !10477)
!10500 = !DILocation(line: 632, column: 24, scope: !10477)
!10501 = !DILocation(line: 632, column: 2, scope: !10477)
!10502 = !DILocation(line: 633, column: 17, scope: !10477)
!10503 = !DILocation(line: 633, column: 23, scope: !10477)
!10504 = !DILocation(line: 633, column: 2, scope: !10477)
!10505 = !DILocation(line: 634, column: 1, scope: !10477)
!10506 = distinct !DISubprogram(name: "kzalloc", scope: !375, file: !375, line: 662, type: !10507, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10507 = !DISubroutineType(types: !10508)
!10508 = !{!466, !909, !539}
!10509 = !DILocalVariable(name: "s", arg: 1, scope: !10510, file: !375, line: 445, type: !1572)
!10510 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !375, file: !375, line: 445, type: !10511, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10511 = !DISubroutineType(types: !10512)
!10512 = !{!466, !1572, !539, !909}
!10513 = !DILocation(line: 445, column: 72, scope: !10510, inlinedAt: !10514)
!10514 = distinct !DILocation(line: 552, column: 10, scope: !10515, inlinedAt: !10518)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !375, line: 540, column: 34)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !375, line: 540, column: 6)
!10517 = distinct !DISubprogram(name: "kmalloc", scope: !375, file: !375, line: 538, type: !10507, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10518 = distinct !DILocation(line: 664, column: 9, scope: !10506)
!10519 = !DILocalVariable(name: "flags", arg: 2, scope: !10510, file: !375, line: 446, type: !539)
!10520 = !DILocation(line: 446, column: 9, scope: !10510, inlinedAt: !10514)
!10521 = !DILocalVariable(name: "size", arg: 3, scope: !10510, file: !375, line: 446, type: !909)
!10522 = !DILocation(line: 446, column: 23, scope: !10510, inlinedAt: !10514)
!10523 = !DILocalVariable(name: "ret", scope: !10510, file: !375, line: 448, type: !466)
!10524 = !DILocation(line: 448, column: 8, scope: !10510, inlinedAt: !10514)
!10525 = !DILocalVariable(name: "flags", arg: 1, scope: !10526, file: !375, line: 318, type: !539)
!10526 = distinct !DISubprogram(name: "kmalloc_type", scope: !375, file: !375, line: 318, type: !10527, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10527 = !DISubroutineType(types: !10528)
!10528 = !{!374, !539}
!10529 = !DILocation(line: 318, column: 67, scope: !10526, inlinedAt: !10530)
!10530 = distinct !DILocation(line: 553, column: 20, scope: !10515, inlinedAt: !10518)
!10531 = !DILocalVariable(name: "size", arg: 1, scope: !10532, file: !375, line: 346, type: !909)
!10532 = distinct !DISubprogram(name: "kmalloc_index", scope: !375, file: !375, line: 346, type: !10533, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10533 = !DISubroutineType(types: !10534)
!10534 = !{!6, !909}
!10535 = !DILocation(line: 346, column: 58, scope: !10532, inlinedAt: !10536)
!10536 = distinct !DILocation(line: 547, column: 11, scope: !10515, inlinedAt: !10518)
!10537 = !DILocalVariable(name: "size", arg: 1, scope: !10538, file: !375, line: 472, type: !909)
!10538 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !375, file: !375, line: 472, type: !10539, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10539 = !DISubroutineType(types: !10540)
!10540 = !{!466, !909, !539, !6}
!10541 = !DILocation(line: 472, column: 28, scope: !10538, inlinedAt: !10542)
!10542 = distinct !DILocation(line: 481, column: 9, scope: !10543, inlinedAt: !10544)
!10543 = distinct !DISubprogram(name: "kmalloc_large", scope: !375, file: !375, line: 478, type: !10507, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10544 = distinct !DILocation(line: 545, column: 11, scope: !10545, inlinedAt: !10518)
!10545 = distinct !DILexicalBlock(scope: !10515, file: !375, line: 544, column: 7)
!10546 = !DILocalVariable(name: "flags", arg: 2, scope: !10538, file: !375, line: 472, type: !539)
!10547 = !DILocation(line: 472, column: 40, scope: !10538, inlinedAt: !10542)
!10548 = !DILocalVariable(name: "order", arg: 3, scope: !10538, file: !375, line: 472, type: !6)
!10549 = !DILocation(line: 472, column: 60, scope: !10538, inlinedAt: !10542)
!10550 = !DILocalVariable(name: "size", arg: 1, scope: !10543, file: !375, line: 478, type: !909)
!10551 = !DILocation(line: 478, column: 51, scope: !10543, inlinedAt: !10544)
!10552 = !DILocalVariable(name: "flags", arg: 2, scope: !10543, file: !375, line: 478, type: !539)
!10553 = !DILocation(line: 478, column: 63, scope: !10543, inlinedAt: !10544)
!10554 = !DILocalVariable(name: "order", scope: !10543, file: !375, line: 480, type: !6)
!10555 = !DILocation(line: 480, column: 15, scope: !10543, inlinedAt: !10544)
!10556 = !DILocalVariable(name: "size", arg: 1, scope: !10517, file: !375, line: 538, type: !909)
!10557 = !DILocation(line: 538, column: 45, scope: !10517, inlinedAt: !10518)
!10558 = !DILocalVariable(name: "flags", arg: 2, scope: !10517, file: !375, line: 538, type: !539)
!10559 = !DILocation(line: 538, column: 57, scope: !10517, inlinedAt: !10518)
!10560 = !DILocalVariable(name: "index", scope: !10515, file: !375, line: 542, type: !6)
!10561 = !DILocation(line: 542, column: 16, scope: !10515, inlinedAt: !10518)
!10562 = !DILocalVariable(name: "size", arg: 1, scope: !10506, file: !375, line: 662, type: !909)
!10563 = !DILocation(line: 662, column: 36, scope: !10506)
!10564 = !DILocalVariable(name: "flags", arg: 2, scope: !10506, file: !375, line: 662, type: !539)
!10565 = !DILocation(line: 662, column: 48, scope: !10506)
!10566 = !DILocation(line: 664, column: 17, scope: !10506)
!10567 = !DILocation(line: 664, column: 23, scope: !10506)
!10568 = !DILocation(line: 664, column: 29, scope: !10506)
!10569 = !DILocation(line: 540, column: 27, scope: !10516, inlinedAt: !10518)
!10570 = !DILocation(line: 540, column: 6, scope: !10516, inlinedAt: !10518)
!10571 = !DILocation(line: 540, column: 6, scope: !10517, inlinedAt: !10518)
!10572 = !DILocation(line: 544, column: 7, scope: !10545, inlinedAt: !10518)
!10573 = !DILocation(line: 544, column: 12, scope: !10545, inlinedAt: !10518)
!10574 = !DILocation(line: 544, column: 7, scope: !10515, inlinedAt: !10518)
!10575 = !DILocation(line: 545, column: 25, scope: !10545, inlinedAt: !10518)
!10576 = !DILocation(line: 545, column: 31, scope: !10545, inlinedAt: !10518)
!10577 = !DILocation(line: 480, column: 33, scope: !10543, inlinedAt: !10544)
!10578 = !DILocation(line: 480, column: 23, scope: !10543, inlinedAt: !10544)
!10579 = !DILocation(line: 481, column: 29, scope: !10543, inlinedAt: !10544)
!10580 = !DILocation(line: 481, column: 35, scope: !10543, inlinedAt: !10544)
!10581 = !DILocation(line: 481, column: 42, scope: !10543, inlinedAt: !10544)
!10582 = !DILocation(line: 474, column: 23, scope: !10538, inlinedAt: !10542)
!10583 = !DILocation(line: 474, column: 29, scope: !10538, inlinedAt: !10542)
!10584 = !DILocation(line: 474, column: 36, scope: !10538, inlinedAt: !10542)
!10585 = !DILocation(line: 474, column: 9, scope: !10538, inlinedAt: !10542)
!10586 = !DILocation(line: 545, column: 4, scope: !10545, inlinedAt: !10518)
!10587 = !DILocation(line: 547, column: 25, scope: !10515, inlinedAt: !10518)
!10588 = !DILocation(line: 348, column: 7, scope: !10589, inlinedAt: !10536)
!10589 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 348, column: 6)
!10590 = !DILocation(line: 348, column: 6, scope: !10532, inlinedAt: !10536)
!10591 = !DILocation(line: 349, column: 3, scope: !10589, inlinedAt: !10536)
!10592 = !DILocation(line: 351, column: 6, scope: !10593, inlinedAt: !10536)
!10593 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 351, column: 6)
!10594 = !DILocation(line: 351, column: 11, scope: !10593, inlinedAt: !10536)
!10595 = !DILocation(line: 351, column: 6, scope: !10532, inlinedAt: !10536)
!10596 = !DILocation(line: 352, column: 3, scope: !10593, inlinedAt: !10536)
!10597 = !DILocation(line: 354, column: 32, scope: !10598, inlinedAt: !10536)
!10598 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 354, column: 6)
!10599 = !DILocation(line: 354, column: 37, scope: !10598, inlinedAt: !10536)
!10600 = !DILocation(line: 354, column: 42, scope: !10598, inlinedAt: !10536)
!10601 = !DILocation(line: 354, column: 45, scope: !10598, inlinedAt: !10536)
!10602 = !DILocation(line: 354, column: 50, scope: !10598, inlinedAt: !10536)
!10603 = !DILocation(line: 354, column: 6, scope: !10532, inlinedAt: !10536)
!10604 = !DILocation(line: 355, column: 3, scope: !10598, inlinedAt: !10536)
!10605 = !DILocation(line: 356, column: 32, scope: !10606, inlinedAt: !10536)
!10606 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 356, column: 6)
!10607 = !DILocation(line: 356, column: 37, scope: !10606, inlinedAt: !10536)
!10608 = !DILocation(line: 356, column: 43, scope: !10606, inlinedAt: !10536)
!10609 = !DILocation(line: 356, column: 46, scope: !10606, inlinedAt: !10536)
!10610 = !DILocation(line: 356, column: 51, scope: !10606, inlinedAt: !10536)
!10611 = !DILocation(line: 356, column: 6, scope: !10532, inlinedAt: !10536)
!10612 = !DILocation(line: 357, column: 3, scope: !10606, inlinedAt: !10536)
!10613 = !DILocation(line: 358, column: 6, scope: !10614, inlinedAt: !10536)
!10614 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 358, column: 6)
!10615 = !DILocation(line: 358, column: 11, scope: !10614, inlinedAt: !10536)
!10616 = !DILocation(line: 358, column: 6, scope: !10532, inlinedAt: !10536)
!10617 = !DILocation(line: 358, column: 26, scope: !10614, inlinedAt: !10536)
!10618 = !DILocation(line: 359, column: 6, scope: !10619, inlinedAt: !10536)
!10619 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 359, column: 6)
!10620 = !DILocation(line: 359, column: 11, scope: !10619, inlinedAt: !10536)
!10621 = !DILocation(line: 359, column: 6, scope: !10532, inlinedAt: !10536)
!10622 = !DILocation(line: 359, column: 26, scope: !10619, inlinedAt: !10536)
!10623 = !DILocation(line: 360, column: 6, scope: !10624, inlinedAt: !10536)
!10624 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 360, column: 6)
!10625 = !DILocation(line: 360, column: 11, scope: !10624, inlinedAt: !10536)
!10626 = !DILocation(line: 360, column: 6, scope: !10532, inlinedAt: !10536)
!10627 = !DILocation(line: 360, column: 26, scope: !10624, inlinedAt: !10536)
!10628 = !DILocation(line: 361, column: 6, scope: !10629, inlinedAt: !10536)
!10629 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 361, column: 6)
!10630 = !DILocation(line: 361, column: 11, scope: !10629, inlinedAt: !10536)
!10631 = !DILocation(line: 361, column: 6, scope: !10532, inlinedAt: !10536)
!10632 = !DILocation(line: 361, column: 26, scope: !10629, inlinedAt: !10536)
!10633 = !DILocation(line: 362, column: 6, scope: !10634, inlinedAt: !10536)
!10634 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 362, column: 6)
!10635 = !DILocation(line: 362, column: 11, scope: !10634, inlinedAt: !10536)
!10636 = !DILocation(line: 362, column: 6, scope: !10532, inlinedAt: !10536)
!10637 = !DILocation(line: 362, column: 26, scope: !10634, inlinedAt: !10536)
!10638 = !DILocation(line: 363, column: 6, scope: !10639, inlinedAt: !10536)
!10639 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 363, column: 6)
!10640 = !DILocation(line: 363, column: 11, scope: !10639, inlinedAt: !10536)
!10641 = !DILocation(line: 363, column: 6, scope: !10532, inlinedAt: !10536)
!10642 = !DILocation(line: 363, column: 26, scope: !10639, inlinedAt: !10536)
!10643 = !DILocation(line: 364, column: 6, scope: !10644, inlinedAt: !10536)
!10644 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 364, column: 6)
!10645 = !DILocation(line: 364, column: 11, scope: !10644, inlinedAt: !10536)
!10646 = !DILocation(line: 364, column: 6, scope: !10532, inlinedAt: !10536)
!10647 = !DILocation(line: 364, column: 26, scope: !10644, inlinedAt: !10536)
!10648 = !DILocation(line: 365, column: 6, scope: !10649, inlinedAt: !10536)
!10649 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 365, column: 6)
!10650 = !DILocation(line: 365, column: 11, scope: !10649, inlinedAt: !10536)
!10651 = !DILocation(line: 365, column: 6, scope: !10532, inlinedAt: !10536)
!10652 = !DILocation(line: 365, column: 26, scope: !10649, inlinedAt: !10536)
!10653 = !DILocation(line: 366, column: 6, scope: !10654, inlinedAt: !10536)
!10654 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 366, column: 6)
!10655 = !DILocation(line: 366, column: 11, scope: !10654, inlinedAt: !10536)
!10656 = !DILocation(line: 366, column: 6, scope: !10532, inlinedAt: !10536)
!10657 = !DILocation(line: 366, column: 26, scope: !10654, inlinedAt: !10536)
!10658 = !DILocation(line: 367, column: 6, scope: !10659, inlinedAt: !10536)
!10659 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 367, column: 6)
!10660 = !DILocation(line: 367, column: 11, scope: !10659, inlinedAt: !10536)
!10661 = !DILocation(line: 367, column: 6, scope: !10532, inlinedAt: !10536)
!10662 = !DILocation(line: 367, column: 26, scope: !10659, inlinedAt: !10536)
!10663 = !DILocation(line: 368, column: 6, scope: !10664, inlinedAt: !10536)
!10664 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 368, column: 6)
!10665 = !DILocation(line: 368, column: 11, scope: !10664, inlinedAt: !10536)
!10666 = !DILocation(line: 368, column: 6, scope: !10532, inlinedAt: !10536)
!10667 = !DILocation(line: 368, column: 26, scope: !10664, inlinedAt: !10536)
!10668 = !DILocation(line: 369, column: 6, scope: !10669, inlinedAt: !10536)
!10669 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 369, column: 6)
!10670 = !DILocation(line: 369, column: 11, scope: !10669, inlinedAt: !10536)
!10671 = !DILocation(line: 369, column: 6, scope: !10532, inlinedAt: !10536)
!10672 = !DILocation(line: 369, column: 26, scope: !10669, inlinedAt: !10536)
!10673 = !DILocation(line: 370, column: 6, scope: !10674, inlinedAt: !10536)
!10674 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 370, column: 6)
!10675 = !DILocation(line: 370, column: 11, scope: !10674, inlinedAt: !10536)
!10676 = !DILocation(line: 370, column: 6, scope: !10532, inlinedAt: !10536)
!10677 = !DILocation(line: 370, column: 26, scope: !10674, inlinedAt: !10536)
!10678 = !DILocation(line: 371, column: 6, scope: !10679, inlinedAt: !10536)
!10679 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 371, column: 6)
!10680 = !DILocation(line: 371, column: 11, scope: !10679, inlinedAt: !10536)
!10681 = !DILocation(line: 371, column: 6, scope: !10532, inlinedAt: !10536)
!10682 = !DILocation(line: 371, column: 26, scope: !10679, inlinedAt: !10536)
!10683 = !DILocation(line: 372, column: 6, scope: !10684, inlinedAt: !10536)
!10684 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 372, column: 6)
!10685 = !DILocation(line: 372, column: 11, scope: !10684, inlinedAt: !10536)
!10686 = !DILocation(line: 372, column: 6, scope: !10532, inlinedAt: !10536)
!10687 = !DILocation(line: 372, column: 26, scope: !10684, inlinedAt: !10536)
!10688 = !DILocation(line: 373, column: 6, scope: !10689, inlinedAt: !10536)
!10689 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 373, column: 6)
!10690 = !DILocation(line: 373, column: 11, scope: !10689, inlinedAt: !10536)
!10691 = !DILocation(line: 373, column: 6, scope: !10532, inlinedAt: !10536)
!10692 = !DILocation(line: 373, column: 26, scope: !10689, inlinedAt: !10536)
!10693 = !DILocation(line: 374, column: 6, scope: !10694, inlinedAt: !10536)
!10694 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 374, column: 6)
!10695 = !DILocation(line: 374, column: 11, scope: !10694, inlinedAt: !10536)
!10696 = !DILocation(line: 374, column: 6, scope: !10532, inlinedAt: !10536)
!10697 = !DILocation(line: 374, column: 26, scope: !10694, inlinedAt: !10536)
!10698 = !DILocation(line: 375, column: 6, scope: !10699, inlinedAt: !10536)
!10699 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 375, column: 6)
!10700 = !DILocation(line: 375, column: 11, scope: !10699, inlinedAt: !10536)
!10701 = !DILocation(line: 375, column: 6, scope: !10532, inlinedAt: !10536)
!10702 = !DILocation(line: 375, column: 27, scope: !10699, inlinedAt: !10536)
!10703 = !DILocation(line: 376, column: 6, scope: !10704, inlinedAt: !10536)
!10704 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 376, column: 6)
!10705 = !DILocation(line: 376, column: 11, scope: !10704, inlinedAt: !10536)
!10706 = !DILocation(line: 376, column: 6, scope: !10532, inlinedAt: !10536)
!10707 = !DILocation(line: 376, column: 32, scope: !10704, inlinedAt: !10536)
!10708 = !DILocation(line: 377, column: 6, scope: !10709, inlinedAt: !10536)
!10709 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 377, column: 6)
!10710 = !DILocation(line: 377, column: 11, scope: !10709, inlinedAt: !10536)
!10711 = !DILocation(line: 377, column: 6, scope: !10532, inlinedAt: !10536)
!10712 = !DILocation(line: 377, column: 32, scope: !10709, inlinedAt: !10536)
!10713 = !DILocation(line: 378, column: 6, scope: !10714, inlinedAt: !10536)
!10714 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 378, column: 6)
!10715 = !DILocation(line: 378, column: 11, scope: !10714, inlinedAt: !10536)
!10716 = !DILocation(line: 378, column: 6, scope: !10532, inlinedAt: !10536)
!10717 = !DILocation(line: 378, column: 32, scope: !10714, inlinedAt: !10536)
!10718 = !DILocation(line: 379, column: 6, scope: !10719, inlinedAt: !10536)
!10719 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 379, column: 6)
!10720 = !DILocation(line: 379, column: 11, scope: !10719, inlinedAt: !10536)
!10721 = !DILocation(line: 379, column: 6, scope: !10532, inlinedAt: !10536)
!10722 = !DILocation(line: 379, column: 33, scope: !10719, inlinedAt: !10536)
!10723 = !DILocation(line: 380, column: 6, scope: !10724, inlinedAt: !10536)
!10724 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 380, column: 6)
!10725 = !DILocation(line: 380, column: 11, scope: !10724, inlinedAt: !10536)
!10726 = !DILocation(line: 380, column: 6, scope: !10532, inlinedAt: !10536)
!10727 = !DILocation(line: 380, column: 33, scope: !10724, inlinedAt: !10536)
!10728 = !DILocation(line: 381, column: 6, scope: !10729, inlinedAt: !10536)
!10729 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 381, column: 6)
!10730 = !DILocation(line: 381, column: 11, scope: !10729, inlinedAt: !10536)
!10731 = !DILocation(line: 381, column: 6, scope: !10532, inlinedAt: !10536)
!10732 = !DILocation(line: 381, column: 33, scope: !10729, inlinedAt: !10536)
!10733 = !DILocation(line: 382, column: 2, scope: !10734, inlinedAt: !10536)
!10734 = distinct !DILexicalBlock(scope: !10735, file: !375, line: 382, column: 2)
!10735 = distinct !DILexicalBlock(scope: !10532, file: !375, line: 382, column: 2)
!10736 = !{i32 -2144340396, i32 -2144340367, i32 -2144340321, i32 -2144340263, i32 -2144340209, i32 -2144340155, i32 -2144340100, i32 -2144340069}
!10737 = !DILocation(line: 382, column: 2, scope: !10738, inlinedAt: !10536)
!10738 = distinct !DILexicalBlock(scope: !10739, file: !375, line: 382, column: 2)
!10739 = distinct !DILexicalBlock(scope: !10735, file: !375, line: 382, column: 2)
!10740 = !{i32 -2144339626, i32 -2144339619, i32 -2144339565, i32 -2144339534, i32 -2144339504}
!10741 = !DILocation(line: 382, column: 2, scope: !10739, inlinedAt: !10536)
!10742 = !DILocation(line: 386, column: 1, scope: !10532, inlinedAt: !10536)
!10743 = !DILocation(line: 547, column: 9, scope: !10515, inlinedAt: !10518)
!10744 = !DILocation(line: 549, column: 8, scope: !10745, inlinedAt: !10518)
!10745 = distinct !DILexicalBlock(scope: !10515, file: !375, line: 549, column: 7)
!10746 = !DILocation(line: 549, column: 7, scope: !10515, inlinedAt: !10518)
!10747 = !DILocation(line: 550, column: 4, scope: !10745, inlinedAt: !10518)
!10748 = !DILocation(line: 553, column: 33, scope: !10515, inlinedAt: !10518)
!10749 = !DILocation(line: 325, column: 6, scope: !10750, inlinedAt: !10530)
!10750 = distinct !DILexicalBlock(scope: !10526, file: !375, line: 325, column: 6)
!10751 = !DILocation(line: 325, column: 6, scope: !10526, inlinedAt: !10530)
!10752 = !DILocation(line: 326, column: 3, scope: !10750, inlinedAt: !10530)
!10753 = !DILocation(line: 332, column: 9, scope: !10526, inlinedAt: !10530)
!10754 = !DILocation(line: 332, column: 15, scope: !10526, inlinedAt: !10530)
!10755 = !DILocation(line: 332, column: 2, scope: !10526, inlinedAt: !10530)
!10756 = !DILocation(line: 336, column: 1, scope: !10526, inlinedAt: !10530)
!10757 = !DILocation(line: 553, column: 5, scope: !10515, inlinedAt: !10518)
!10758 = !DILocation(line: 553, column: 41, scope: !10515, inlinedAt: !10518)
!10759 = !DILocation(line: 554, column: 5, scope: !10515, inlinedAt: !10518)
!10760 = !DILocation(line: 554, column: 12, scope: !10515, inlinedAt: !10518)
!10761 = !DILocation(line: 448, column: 31, scope: !10510, inlinedAt: !10514)
!10762 = !DILocation(line: 448, column: 34, scope: !10510, inlinedAt: !10514)
!10763 = !DILocation(line: 448, column: 14, scope: !10510, inlinedAt: !10514)
!10764 = !DILocation(line: 450, column: 22, scope: !10510, inlinedAt: !10514)
!10765 = !DILocation(line: 450, column: 25, scope: !10510, inlinedAt: !10514)
!10766 = !DILocation(line: 450, column: 30, scope: !10510, inlinedAt: !10514)
!10767 = !DILocation(line: 450, column: 36, scope: !10510, inlinedAt: !10514)
!10768 = !DILocation(line: 450, column: 8, scope: !10510, inlinedAt: !10514)
!10769 = !DILocation(line: 450, column: 6, scope: !10510, inlinedAt: !10514)
!10770 = !DILocation(line: 451, column: 9, scope: !10510, inlinedAt: !10514)
!10771 = !DILocation(line: 552, column: 3, scope: !10515, inlinedAt: !10518)
!10772 = !DILocation(line: 557, column: 19, scope: !10517, inlinedAt: !10518)
!10773 = !DILocation(line: 557, column: 25, scope: !10517, inlinedAt: !10518)
!10774 = !DILocation(line: 557, column: 9, scope: !10517, inlinedAt: !10518)
!10775 = !DILocation(line: 557, column: 2, scope: !10517, inlinedAt: !10518)
!10776 = !DILocation(line: 558, column: 1, scope: !10517, inlinedAt: !10518)
!10777 = !DILocation(line: 664, column: 2, scope: !10506)
!10778 = distinct !DISubprogram(name: "set_info_for_irq", scope: !3, file: !3, line: 252, type: !10779, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10779 = !DISubroutineType(types: !10780)
!10780 = !{null, !6, !474}
!10781 = !DILocalVariable(name: "irq", arg: 1, scope: !10778, file: !3, line: 252, type: !6)
!10782 = !DILocation(line: 252, column: 43, scope: !10778)
!10783 = !DILocalVariable(name: "info", arg: 2, scope: !10778, file: !3, line: 252, type: !474)
!10784 = !DILocation(line: 252, column: 65, scope: !10778)
!10785 = !DILocation(line: 254, column: 6, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10778, file: !3, line: 254, column: 6)
!10787 = !DILocation(line: 254, column: 12, scope: !10786)
!10788 = !DILocation(line: 254, column: 10, scope: !10786)
!10789 = !DILocation(line: 254, column: 6, scope: !10778)
!10790 = !DILocation(line: 255, column: 27, scope: !10786)
!10791 = !DILocation(line: 255, column: 20, scope: !10786)
!10792 = !DILocation(line: 255, column: 3, scope: !10786)
!10793 = !DILocation(line: 255, column: 25, scope: !10786)
!10794 = !DILocation(line: 257, column: 21, scope: !10786)
!10795 = !DILocation(line: 257, column: 26, scope: !10786)
!10796 = !DILocation(line: 257, column: 3, scope: !10786)
!10797 = !DILocation(line: 258, column: 1, scope: !10778)
!10798 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !10252, file: !10252, line: 33, type: !10799, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10799 = !DISubroutineType(types: !10800)
!10800 = !{null, !482}
!10801 = !DILocalVariable(name: "list", arg: 1, scope: !10798, file: !10252, line: 33, type: !482)
!10802 = !DILocation(line: 33, column: 53, scope: !10798)
!10803 = !DILocation(line: 35, column: 2, scope: !10798)
!10804 = !DILocation(line: 35, column: 2, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10798, file: !10252, line: 35, column: 2)
!10806 = !DILocation(line: 35, column: 2, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10805, file: !10252, line: 35, column: 2)
!10808 = !DILocation(line: 35, column: 2, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10805, file: !10252, line: 35, column: 2)
!10810 = !DILocation(line: 36, column: 15, scope: !10798)
!10811 = !DILocation(line: 36, column: 2, scope: !10798)
!10812 = !DILocation(line: 36, column: 8, scope: !10798)
!10813 = !DILocation(line: 36, column: 13, scope: !10798)
!10814 = !DILocation(line: 37, column: 1, scope: !10798)
!10815 = distinct !DISubprogram(name: "list_add_tail", scope: !10252, file: !10252, line: 98, type: !10419, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10816 = !DILocalVariable(name: "new", arg: 1, scope: !10815, file: !10252, line: 98, type: !482)
!10817 = !DILocation(line: 98, column: 52, scope: !10815)
!10818 = !DILocalVariable(name: "head", arg: 2, scope: !10815, file: !10252, line: 98, type: !482)
!10819 = !DILocation(line: 98, column: 75, scope: !10815)
!10820 = !DILocation(line: 100, column: 13, scope: !10815)
!10821 = !DILocation(line: 100, column: 18, scope: !10815)
!10822 = !DILocation(line: 100, column: 24, scope: !10815)
!10823 = !DILocation(line: 100, column: 30, scope: !10815)
!10824 = !DILocation(line: 100, column: 2, scope: !10815)
!10825 = !DILocation(line: 101, column: 1, scope: !10815)
!10826 = distinct !DISubprogram(name: "get_order", scope: !10827, file: !10827, line: 29, type: !9044, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10827 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10828 = !DILocalVariable(name: "x", arg: 1, scope: !10829, file: !10830, line: 366, type: !504)
!10829 = distinct !DISubprogram(name: "fls64", scope: !10830, file: !10830, line: 366, type: !10831, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10830 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!10831 = !DISubroutineType(types: !10832)
!10832 = !{!97, !504}
!10833 = !DILocation(line: 366, column: 40, scope: !10829, inlinedAt: !10834)
!10834 = distinct !DILocation(line: 46, column: 9, scope: !10826)
!10835 = !DILocalVariable(name: "bitpos", scope: !10829, file: !10830, line: 368, type: !97)
!10836 = !DILocation(line: 368, column: 6, scope: !10829, inlinedAt: !10834)
!10837 = !DILocalVariable(name: "size", arg: 1, scope: !10826, file: !10827, line: 29, type: !528)
!10838 = !DILocation(line: 29, column: 63, scope: !10826)
!10839 = !DILocation(line: 31, column: 27, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10826, file: !10827, line: 31, column: 6)
!10841 = !DILocation(line: 31, column: 6, scope: !10840)
!10842 = !DILocation(line: 31, column: 6, scope: !10826)
!10843 = !DILocation(line: 32, column: 8, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !10827, line: 32, column: 7)
!10845 = distinct !DILexicalBlock(scope: !10840, file: !10827, line: 31, column: 34)
!10846 = !DILocation(line: 32, column: 7, scope: !10845)
!10847 = !DILocation(line: 33, column: 4, scope: !10844)
!10848 = !DILocation(line: 35, column: 7, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10845, file: !10827, line: 35, column: 7)
!10850 = !DILocation(line: 35, column: 12, scope: !10849)
!10851 = !DILocation(line: 35, column: 7, scope: !10845)
!10852 = !DILocation(line: 36, column: 4, scope: !10849)
!10853 = !DILocation(line: 38, column: 10, scope: !10845)
!10854 = !DILocation(line: 38, column: 28, scope: !10845)
!10855 = !DILocation(line: 38, column: 41, scope: !10845)
!10856 = !DILocation(line: 38, column: 3, scope: !10845)
!10857 = !DILocation(line: 41, column: 6, scope: !10826)
!10858 = !DILocation(line: 42, column: 7, scope: !10826)
!10859 = !DILocation(line: 46, column: 15, scope: !10826)
!10860 = !DILocation(line: 374, column: 2, scope: !10829, inlinedAt: !10834)
!10861 = !DILocation(line: 376, column: 14, scope: !10829, inlinedAt: !10834)
!10862 = !{i32 312493}
!10863 = !DILocation(line: 377, column: 9, scope: !10829, inlinedAt: !10834)
!10864 = !DILocation(line: 377, column: 16, scope: !10829, inlinedAt: !10834)
!10865 = !DILocation(line: 46, column: 2, scope: !10826)
!10866 = !DILocation(line: 48, column: 1, scope: !10826)
!10867 = distinct !DISubprogram(name: "__ilog2_u64", scope: !10868, file: !10868, line: 30, type: !10869, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10868 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!10869 = !DISubroutineType(types: !10870)
!10870 = !{!97, !503}
!10871 = !DILocation(line: 366, column: 40, scope: !10829, inlinedAt: !10872)
!10872 = distinct !DILocation(line: 32, column: 9, scope: !10867)
!10873 = !DILocation(line: 368, column: 6, scope: !10829, inlinedAt: !10872)
!10874 = !DILocalVariable(name: "n", arg: 1, scope: !10867, file: !10868, line: 30, type: !503)
!10875 = !DILocation(line: 30, column: 21, scope: !10867)
!10876 = !DILocation(line: 32, column: 15, scope: !10867)
!10877 = !DILocation(line: 374, column: 2, scope: !10829, inlinedAt: !10872)
!10878 = !DILocation(line: 376, column: 14, scope: !10829, inlinedAt: !10872)
!10879 = !DILocation(line: 377, column: 9, scope: !10829, inlinedAt: !10872)
!10880 = !DILocation(line: 377, column: 16, scope: !10829, inlinedAt: !10872)
!10881 = !DILocation(line: 32, column: 18, scope: !10867)
!10882 = !DILocation(line: 32, column: 2, scope: !10867)
!10883 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10884, file: !10884, line: 137, type: !10885, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10884 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10885 = !DISubroutineType(types: !10886)
!10886 = !{!466, !1572, !3999, !909, !539}
!10887 = !DILocalVariable(name: "s", arg: 1, scope: !10883, file: !10884, line: 137, type: !1572)
!10888 = !DILocation(line: 137, column: 54, scope: !10883)
!10889 = !DILocalVariable(name: "object", arg: 2, scope: !10883, file: !10884, line: 137, type: !3999)
!10890 = !DILocation(line: 137, column: 69, scope: !10883)
!10891 = !DILocalVariable(name: "size", arg: 3, scope: !10883, file: !10884, line: 138, type: !909)
!10892 = !DILocation(line: 138, column: 12, scope: !10883)
!10893 = !DILocalVariable(name: "flags", arg: 4, scope: !10883, file: !10884, line: 138, type: !539)
!10894 = !DILocation(line: 138, column: 24, scope: !10883)
!10895 = !DILocation(line: 140, column: 17, scope: !10883)
!10896 = !DILocation(line: 140, column: 2, scope: !10883)
!10897 = distinct !DISubprogram(name: "lateeoi_list_del", scope: !3, file: !3, line: 475, type: !10267, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10898 = !DILocation(line: 407, column: 64, scope: !10270, inlinedAt: !10899)
!10899 = distinct !DILocation(line: 482, column: 2, scope: !10897)
!10900 = !DILocation(line: 407, column: 84, scope: !10270, inlinedAt: !10899)
!10901 = !DILocation(line: 327, column: 67, scope: !10012, inlinedAt: !10902)
!10902 = distinct !DILocation(line: 480, column: 2, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 480, column: 2)
!10904 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 480, column: 2)
!10905 = distinct !DILexicalBlock(scope: !10906, file: !3, line: 480, column: 2)
!10906 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 480, column: 2)
!10907 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 480, column: 2)
!10908 = !DILocalVariable(name: "info", arg: 1, scope: !10897, file: !3, line: 475, type: !474)
!10909 = !DILocation(line: 475, column: 47, scope: !10897)
!10910 = !DILocalVariable(name: "eoi", scope: !10897, file: !3, line: 477, type: !543)
!10911 = !DILocation(line: 477, column: 23, scope: !10897)
!10912 = !DILocation(line: 477, column: 30, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 477, column: 30)
!10914 = !DILocation(line: 477, column: 30, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 477, column: 30)
!10916 = !DILocalVariable(name: "__vpp_verify", scope: !10917, file: !3, line: 477, type: !3999)
!10917 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 477, column: 30)
!10918 = !DILocation(line: 477, column: 30, scope: !10917)
!10919 = !DILocalVariable(name: "flags", scope: !10897, file: !3, line: 478, type: !528)
!10920 = !DILocation(line: 478, column: 16, scope: !10897)
!10921 = !DILocation(line: 480, column: 2, scope: !10897)
!10922 = !DILocation(line: 480, column: 2, scope: !10907)
!10923 = !DILocalVariable(name: "__dummy", scope: !10924, file: !3, line: 480, type: !528)
!10924 = distinct !DILexicalBlock(scope: !10906, file: !3, line: 480, column: 2)
!10925 = !DILocation(line: 480, column: 2, scope: !10924)
!10926 = !DILocalVariable(name: "__dummy2", scope: !10924, file: !3, line: 480, type: !528)
!10927 = !DILocation(line: 480, column: 2, scope: !10906)
!10928 = !DILocation(line: 480, column: 2, scope: !10905)
!10929 = !DILocation(line: 480, column: 2, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 480, column: 2)
!10931 = !DILocalVariable(name: "__dummy", scope: !10932, file: !3, line: 480, type: !528)
!10932 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 480, column: 2)
!10933 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 480, column: 2)
!10934 = !DILocation(line: 480, column: 2, scope: !10932)
!10935 = !DILocalVariable(name: "__dummy2", scope: !10932, file: !3, line: 480, type: !528)
!10936 = !DILocation(line: 480, column: 2, scope: !10933)
!10937 = !DILocation(line: 480, column: 2, scope: !10904)
!10938 = !{i32 -2139012410}
!10939 = !DILocation(line: 480, column: 2, scope: !10903)
!10940 = !DILocation(line: 329, column: 10, scope: !10012, inlinedAt: !10902)
!10941 = !DILocation(line: 329, column: 16, scope: !10012, inlinedAt: !10902)
!10942 = !DILocation(line: 481, column: 17, scope: !10897)
!10943 = !DILocation(line: 481, column: 23, scope: !10897)
!10944 = !DILocation(line: 481, column: 2, scope: !10897)
!10945 = !DILocation(line: 482, column: 26, scope: !10897)
!10946 = !DILocation(line: 482, column: 31, scope: !10897)
!10947 = !DILocation(line: 482, column: 46, scope: !10897)
!10948 = !DILocation(line: 409, column: 2, scope: !10393, inlinedAt: !10899)
!10949 = !DILocation(line: 409, column: 2, scope: !10398, inlinedAt: !10899)
!10950 = !DILocation(line: 409, column: 2, scope: !10399, inlinedAt: !10899)
!10951 = !DILocation(line: 409, column: 2, scope: !10406, inlinedAt: !10899)
!10952 = !DILocation(line: 409, column: 2, scope: !10409, inlinedAt: !10899)
!10953 = !DILocation(line: 483, column: 1, scope: !10897)
!10954 = distinct !DISubprogram(name: "list_del", scope: !10252, file: !10252, line: 144, type: !10799, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10955 = !DILocalVariable(name: "entry", arg: 1, scope: !10954, file: !10252, line: 144, type: !482)
!10956 = !DILocation(line: 144, column: 47, scope: !10954)
!10957 = !DILocation(line: 146, column: 19, scope: !10954)
!10958 = !DILocation(line: 146, column: 2, scope: !10954)
!10959 = !DILocation(line: 147, column: 2, scope: !10954)
!10960 = !DILocation(line: 147, column: 9, scope: !10954)
!10961 = !DILocation(line: 147, column: 14, scope: !10954)
!10962 = !DILocation(line: 148, column: 2, scope: !10954)
!10963 = !DILocation(line: 148, column: 9, scope: !10954)
!10964 = !DILocation(line: 148, column: 14, scope: !10954)
!10965 = !DILocation(line: 149, column: 1, scope: !10954)
!10966 = distinct !DISubprogram(name: "irq_free_desc", scope: !183, file: !183, line: 952, type: !7089, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10967 = !DILocalVariable(name: "irq", arg: 1, scope: !10966, file: !183, line: 952, type: !6)
!10968 = !DILocation(line: 952, column: 47, scope: !10966)
!10969 = !DILocation(line: 954, column: 17, scope: !10966)
!10970 = !DILocation(line: 954, column: 2, scope: !10966)
!10971 = !DILocation(line: 955, column: 1, scope: !10966)
!10972 = distinct !DISubprogram(name: "list_del_init", scope: !10252, file: !10252, line: 202, type: !10799, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10973 = !DILocalVariable(name: "entry", arg: 1, scope: !10972, file: !10252, line: 202, type: !482)
!10974 = !DILocation(line: 202, column: 52, scope: !10972)
!10975 = !DILocation(line: 204, column: 19, scope: !10972)
!10976 = !DILocation(line: 204, column: 2, scope: !10972)
!10977 = !DILocation(line: 205, column: 17, scope: !10972)
!10978 = !DILocation(line: 205, column: 2, scope: !10972)
!10979 = !DILocation(line: 206, column: 1, scope: !10972)
!10980 = distinct !DISubprogram(name: "__list_del_entry", scope: !10252, file: !10252, line: 130, type: !10799, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10981 = !DILocalVariable(name: "entry", arg: 1, scope: !10980, file: !10252, line: 130, type: !482)
!10982 = !DILocation(line: 130, column: 55, scope: !10980)
!10983 = !DILocation(line: 132, column: 30, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10980, file: !10252, line: 132, column: 6)
!10985 = !DILocation(line: 132, column: 7, scope: !10984)
!10986 = !DILocation(line: 132, column: 6, scope: !10980)
!10987 = !DILocation(line: 133, column: 3, scope: !10984)
!10988 = !DILocation(line: 135, column: 13, scope: !10980)
!10989 = !DILocation(line: 135, column: 20, scope: !10980)
!10990 = !DILocation(line: 135, column: 26, scope: !10980)
!10991 = !DILocation(line: 135, column: 33, scope: !10980)
!10992 = !DILocation(line: 135, column: 2, scope: !10980)
!10993 = !DILocation(line: 136, column: 1, scope: !10980)
!10994 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !10252, file: !10252, line: 51, type: !10995, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!10995 = !DISubroutineType(types: !10996)
!10996 = !{!1066, !482}
!10997 = !DILocalVariable(name: "entry", arg: 1, scope: !10994, file: !10252, line: 51, type: !482)
!10998 = !DILocation(line: 51, column: 61, scope: !10994)
!10999 = !DILocation(line: 53, column: 2, scope: !10994)
!11000 = distinct !DISubprogram(name: "__list_del", scope: !10252, file: !10252, line: 110, type: !10419, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11001 = !DILocalVariable(name: "prev", arg: 1, scope: !11000, file: !10252, line: 110, type: !482)
!11002 = !DILocation(line: 110, column: 50, scope: !11000)
!11003 = !DILocalVariable(name: "next", arg: 2, scope: !11000, file: !10252, line: 110, type: !482)
!11004 = !DILocation(line: 110, column: 75, scope: !11000)
!11005 = !DILocation(line: 112, column: 15, scope: !11000)
!11006 = !DILocation(line: 112, column: 2, scope: !11000)
!11007 = !DILocation(line: 112, column: 8, scope: !11000)
!11008 = !DILocation(line: 112, column: 13, scope: !11000)
!11009 = !DILocation(line: 113, column: 2, scope: !11000)
!11010 = !DILocation(line: 113, column: 2, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11000, file: !10252, line: 113, column: 2)
!11012 = !DILocation(line: 113, column: 2, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11011, file: !10252, line: 113, column: 2)
!11014 = !DILocation(line: 113, column: 2, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11011, file: !10252, line: 113, column: 2)
!11016 = !DILocation(line: 114, column: 1, scope: !11000)
!11017 = distinct !DISubprogram(name: "xen_irq_info_common_setup", scope: !3, file: !3, line: 261, type: !11018, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11018 = !DISubroutineType(types: !11019)
!11019 = !{!97, !474, !6, !5, !491, !499}
!11020 = !DILocalVariable(name: "info", arg: 1, scope: !11017, file: !3, line: 261, type: !474)
!11021 = !DILocation(line: 261, column: 55, scope: !11017)
!11022 = !DILocalVariable(name: "irq", arg: 2, scope: !11017, file: !3, line: 262, type: !6)
!11023 = !DILocation(line: 262, column: 19, scope: !11017)
!11024 = !DILocalVariable(name: "type", arg: 3, scope: !11017, file: !3, line: 263, type: !5)
!11025 = !DILocation(line: 263, column: 28, scope: !11017)
!11026 = !DILocalVariable(name: "evtchn", arg: 4, scope: !11017, file: !3, line: 264, type: !491)
!11027 = !DILocation(line: 264, column: 24, scope: !11017)
!11028 = !DILocalVariable(name: "cpu", arg: 5, scope: !11017, file: !3, line: 265, type: !499)
!11029 = !DILocation(line: 265, column: 25, scope: !11017)
!11030 = !DILocalVariable(name: "ret", scope: !11017, file: !3, line: 267, type: !97)
!11031 = !DILocation(line: 267, column: 6, scope: !11017)
!11032 = !DILocation(line: 269, column: 2, scope: !11017)
!11033 = !DILocation(line: 269, column: 2, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 269, column: 2)
!11035 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 269, column: 2)
!11036 = !DILocation(line: 0, scope: !11034)
!11037 = !DILocation(line: 269, column: 2, scope: !11035)
!11038 = !DILocation(line: 269, column: 2, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 269, column: 2)
!11040 = !DILocation(line: 269, column: 2, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 269, column: 2)
!11042 = !DILocation(line: 269, column: 2, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 269, column: 2)
!11044 = !{i32 -2139026257, i32 -2139026228, i32 -2139026182, i32 -2139026124, i32 -2139026070, i32 -2139026016, i32 -2139025961, i32 -2139025930}
!11045 = !DILocation(line: 269, column: 2, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11047, file: !3, line: 269, column: 2)
!11047 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 269, column: 2)
!11048 = !{i32 -2139025475, i32 -2139025468, i32 -2139025414, i32 -2139025383, i32 -2139025353}
!11049 = !DILocation(line: 269, column: 2, scope: !11047)
!11050 = !DILocation(line: 271, column: 15, scope: !11017)
!11051 = !DILocation(line: 271, column: 2, scope: !11017)
!11052 = !DILocation(line: 271, column: 8, scope: !11017)
!11053 = !DILocation(line: 271, column: 13, scope: !11017)
!11054 = !DILocation(line: 272, column: 14, scope: !11017)
!11055 = !DILocation(line: 272, column: 2, scope: !11017)
!11056 = !DILocation(line: 272, column: 8, scope: !11017)
!11057 = !DILocation(line: 272, column: 12, scope: !11017)
!11058 = !DILocation(line: 273, column: 17, scope: !11017)
!11059 = !DILocation(line: 273, column: 2, scope: !11017)
!11060 = !DILocation(line: 273, column: 8, scope: !11017)
!11061 = !DILocation(line: 273, column: 15, scope: !11017)
!11062 = !DILocation(line: 274, column: 14, scope: !11017)
!11063 = !DILocation(line: 274, column: 2, scope: !11017)
!11064 = !DILocation(line: 274, column: 8, scope: !11017)
!11065 = !DILocation(line: 274, column: 12, scope: !11017)
!11066 = !DILocation(line: 276, column: 26, scope: !11017)
!11067 = !DILocation(line: 276, column: 34, scope: !11017)
!11068 = !DILocation(line: 276, column: 8, scope: !11017)
!11069 = !DILocation(line: 276, column: 6, scope: !11017)
!11070 = !DILocation(line: 277, column: 6, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 277, column: 6)
!11072 = !DILocation(line: 277, column: 10, scope: !11071)
!11073 = !DILocation(line: 277, column: 6, scope: !11017)
!11074 = !DILocation(line: 278, column: 10, scope: !11071)
!11075 = !DILocation(line: 278, column: 3, scope: !11071)
!11076 = !DILocation(line: 280, column: 25, scope: !11017)
!11077 = !DILocation(line: 280, column: 2, scope: !11017)
!11078 = !DILocation(line: 282, column: 31, scope: !11017)
!11079 = !DILocation(line: 282, column: 9, scope: !11017)
!11080 = !DILocation(line: 282, column: 2, scope: !11017)
!11081 = !DILocation(line: 283, column: 1, scope: !11017)
!11082 = distinct !DISubprogram(name: "set_evtchn_to_irq", scope: !3, file: !3, line: 207, type: !11083, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11083 = !DISubroutineType(types: !11084)
!11084 = !{!97, !491, !6}
!11085 = !DILocalVariable(name: "evtchn", arg: 1, scope: !11082, file: !3, line: 207, type: !491)
!11086 = !DILocation(line: 207, column: 44, scope: !11082)
!11087 = !DILocalVariable(name: "irq", arg: 2, scope: !11082, file: !3, line: 207, type: !6)
!11088 = !DILocation(line: 207, column: 65, scope: !11082)
!11089 = !DILocalVariable(name: "row", scope: !11082, file: !3, line: 209, type: !6)
!11090 = !DILocation(line: 209, column: 11, scope: !11082)
!11091 = !DILocalVariable(name: "col", scope: !11082, file: !3, line: 210, type: !6)
!11092 = !DILocation(line: 210, column: 11, scope: !11082)
!11093 = !DILocation(line: 212, column: 6, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 212, column: 6)
!11095 = !DILocation(line: 212, column: 16, scope: !11094)
!11096 = !DILocation(line: 212, column: 13, scope: !11094)
!11097 = !DILocation(line: 212, column: 6, scope: !11082)
!11098 = !DILocation(line: 213, column: 3, scope: !11094)
!11099 = !DILocation(line: 215, column: 8, scope: !11082)
!11100 = !DILocation(line: 215, column: 6, scope: !11082)
!11101 = !DILocation(line: 216, column: 8, scope: !11082)
!11102 = !DILocation(line: 216, column: 6, scope: !11082)
!11103 = !DILocation(line: 218, column: 6, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 218, column: 6)
!11105 = !DILocation(line: 218, column: 20, scope: !11104)
!11106 = !DILocation(line: 218, column: 25, scope: !11104)
!11107 = !DILocation(line: 218, column: 6, scope: !11082)
!11108 = !DILocation(line: 220, column: 7, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !3, line: 220, column: 7)
!11110 = distinct !DILexicalBlock(scope: !11104, file: !3, line: 218, column: 34)
!11111 = !DILocation(line: 220, column: 11, scope: !11109)
!11112 = !DILocation(line: 220, column: 7, scope: !11110)
!11113 = !DILocation(line: 221, column: 4, scope: !11109)
!11114 = !DILocation(line: 223, column: 31, scope: !11110)
!11115 = !DILocation(line: 223, column: 24, scope: !11110)
!11116 = !DILocation(line: 223, column: 3, scope: !11110)
!11117 = !DILocation(line: 223, column: 17, scope: !11110)
!11118 = !DILocation(line: 223, column: 22, scope: !11110)
!11119 = !DILocation(line: 224, column: 7, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11110, file: !3, line: 224, column: 7)
!11121 = !DILocation(line: 224, column: 21, scope: !11120)
!11122 = !DILocation(line: 224, column: 26, scope: !11120)
!11123 = !DILocation(line: 224, column: 7, scope: !11110)
!11124 = !DILocation(line: 225, column: 4, scope: !11120)
!11125 = !DILocation(line: 227, column: 27, scope: !11110)
!11126 = !DILocation(line: 227, column: 3, scope: !11110)
!11127 = !DILocation(line: 228, column: 2, scope: !11110)
!11128 = !DILocation(line: 230, column: 2, scope: !11082)
!11129 = !DILocation(line: 230, column: 2, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 230, column: 2)
!11131 = !DILocation(line: 230, column: 2, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 230, column: 2)
!11133 = !DILocation(line: 230, column: 2, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 230, column: 2)
!11135 = !DILocation(line: 231, column: 2, scope: !11082)
!11136 = !DILocation(line: 232, column: 1, scope: !11082)
!11137 = distinct !DISubprogram(name: "irq_clear_status_flags", scope: !183, file: !183, line: 761, type: !11138, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11138 = !DISubroutineType(types: !11139)
!11139 = !{null, !6, !528}
!11140 = !DILocalVariable(name: "irq", arg: 1, scope: !11137, file: !183, line: 761, type: !6)
!11141 = !DILocation(line: 761, column: 56, scope: !11137)
!11142 = !DILocalVariable(name: "clr", arg: 2, scope: !11137, file: !183, line: 761, type: !528)
!11143 = !DILocation(line: 761, column: 75, scope: !11137)
!11144 = !DILocation(line: 763, column: 20, scope: !11137)
!11145 = !DILocation(line: 763, column: 25, scope: !11137)
!11146 = !DILocation(line: 763, column: 2, scope: !11137)
!11147 = !DILocation(line: 764, column: 1, scope: !11137)
!11148 = distinct !DISubprogram(name: "xen_evtchn_port_setup", scope: !6472, file: !6472, line: 50, type: !6481, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11149 = !DILocalVariable(name: "evtchn", arg: 1, scope: !11148, file: !6472, line: 50, type: !491)
!11150 = !DILocation(line: 50, column: 55, scope: !11148)
!11151 = !DILocation(line: 52, column: 6, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11148, file: !6472, line: 52, column: 6)
!11153 = !DILocation(line: 52, column: 18, scope: !11152)
!11154 = !DILocation(line: 52, column: 6, scope: !11148)
!11155 = !DILocation(line: 53, column: 10, scope: !11152)
!11156 = !DILocation(line: 53, column: 22, scope: !11152)
!11157 = !DILocation(line: 53, column: 28, scope: !11152)
!11158 = !DILocation(line: 53, column: 3, scope: !11152)
!11159 = !DILocation(line: 54, column: 2, scope: !11148)
!11160 = !DILocation(line: 55, column: 1, scope: !11148)
!11161 = distinct !DISubprogram(name: "clear_evtchn_to_irq_row", scope: !3, file: !3, line: 188, type: !7089, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11162 = !DILocalVariable(name: "row", arg: 1, scope: !11161, file: !3, line: 188, type: !6)
!11163 = !DILocation(line: 188, column: 46, scope: !11161)
!11164 = !DILocalVariable(name: "col", scope: !11161, file: !3, line: 190, type: !6)
!11165 = !DILocation(line: 190, column: 11, scope: !11161)
!11166 = !DILocation(line: 192, column: 11, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11161, file: !3, line: 192, column: 2)
!11168 = !DILocation(line: 192, column: 7, scope: !11167)
!11169 = !DILocation(line: 192, column: 16, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 192, column: 2)
!11171 = !DILocation(line: 192, column: 20, scope: !11170)
!11172 = !DILocation(line: 192, column: 2, scope: !11167)
!11173 = !DILocation(line: 193, column: 3, scope: !11170)
!11174 = !DILocation(line: 193, column: 3, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11170, file: !3, line: 193, column: 3)
!11176 = !DILocation(line: 193, column: 3, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 193, column: 3)
!11178 = !DILocation(line: 193, column: 3, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 193, column: 3)
!11180 = !DILocation(line: 192, column: 41, scope: !11170)
!11181 = !DILocation(line: 192, column: 2, scope: !11170)
!11182 = distinct !{!11182, !11172, !11183}
!11183 = !DILocation(line: 193, column: 3, scope: !11167)
!11184 = !DILocation(line: 194, column: 1, scope: !11161)
!11185 = distinct !DISubprogram(name: "xen_evtchn_close", scope: !3, file: !3, line: 708, type: !6489, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11186 = !DILocalVariable(name: "port", arg: 1, scope: !11185, file: !3, line: 708, type: !491)
!11187 = !DILocation(line: 708, column: 44, scope: !11185)
!11188 = !DILocalVariable(name: "close", scope: !11185, file: !3, line: 710, type: !11189)
!11189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_close", file: !492, line: 104, size: 32, elements: !11190)
!11190 = !{!11191}
!11191 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !11189, file: !492, line: 106, baseType: !491, size: 32)
!11192 = !DILocation(line: 710, column: 22, scope: !11185)
!11193 = !DILocation(line: 712, column: 15, scope: !11185)
!11194 = !DILocation(line: 712, column: 8, scope: !11185)
!11195 = !DILocation(line: 712, column: 13, scope: !11185)
!11196 = !DILocation(line: 713, column: 50, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11185, file: !3, line: 713, column: 6)
!11198 = !DILocation(line: 713, column: 6, scope: !11197)
!11199 = !DILocation(line: 713, column: 58, scope: !11197)
!11200 = !DILocation(line: 713, column: 6, scope: !11185)
!11201 = !DILocation(line: 714, column: 3, scope: !11197)
!11202 = !DILocation(line: 714, column: 3, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11197, file: !3, line: 714, column: 3)
!11204 = !DILocation(line: 714, column: 3, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 714, column: 3)
!11206 = !DILocation(line: 714, column: 3, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 714, column: 3)
!11208 = !{i32 -2138985832, i32 -2138985803, i32 -2138985757, i32 -2138985699, i32 -2138985645, i32 -2138985591, i32 -2138985536, i32 -2138985505}
!11209 = !DILocation(line: 714, column: 3, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 714, column: 3)
!11211 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 714, column: 3)
!11212 = !{i32 -2138985050, i32 -2138985043, i32 -2138984989, i32 -2138984958, i32 -2138984928}
!11213 = !DILocation(line: 714, column: 3, scope: !11211)
!11214 = !DILocation(line: 715, column: 1, scope: !11185)
!11215 = distinct !DISubprogram(name: "type_from_irq", scope: !3, file: !3, line: 400, type: !11216, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11216 = !DISubroutineType(types: !11217)
!11217 = !{!5, !6}
!11218 = !DILocalVariable(name: "irq", arg: 1, scope: !11215, file: !3, line: 400, type: !6)
!11219 = !DILocation(line: 400, column: 49, scope: !11215)
!11220 = !DILocation(line: 402, column: 22, scope: !11215)
!11221 = !DILocation(line: 402, column: 9, scope: !11215)
!11222 = !DILocation(line: 402, column: 28, scope: !11215)
!11223 = !DILocation(line: 402, column: 2, scope: !11215)
!11224 = distinct !DISubprogram(name: "virq_from_irq", scope: !3, file: !3, line: 380, type: !6682, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11225 = !DILocalVariable(name: "irq", arg: 1, scope: !11224, file: !3, line: 380, type: !6)
!11226 = !DILocation(line: 380, column: 40, scope: !11224)
!11227 = !DILocalVariable(name: "info", scope: !11224, file: !3, line: 382, type: !474)
!11228 = !DILocation(line: 382, column: 19, scope: !11224)
!11229 = !DILocation(line: 382, column: 39, scope: !11224)
!11230 = !DILocation(line: 382, column: 26, scope: !11224)
!11231 = !DILocation(line: 384, column: 2, scope: !11224)
!11232 = !DILocation(line: 384, column: 2, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 384, column: 2)
!11234 = distinct !DILexicalBlock(scope: !11224, file: !3, line: 384, column: 2)
!11235 = !DILocation(line: 384, column: 2, scope: !11234)
!11236 = !DILocation(line: 384, column: 2, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11233, file: !3, line: 384, column: 2)
!11238 = !DILocation(line: 384, column: 2, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 384, column: 2)
!11240 = !DILocation(line: 384, column: 2, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 384, column: 2)
!11242 = !{i32 -2139021190, i32 -2139021161, i32 -2139021115, i32 -2139021057, i32 -2139021003, i32 -2139020949, i32 -2139020894, i32 -2139020863}
!11243 = !DILocation(line: 384, column: 2, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 384, column: 2)
!11245 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 384, column: 2)
!11246 = !{i32 -2139020408, i32 -2139020401, i32 -2139020347, i32 -2139020316, i32 -2139020286}
!11247 = !DILocation(line: 384, column: 2, scope: !11245)
!11248 = !DILocation(line: 385, column: 2, scope: !11224)
!11249 = !DILocation(line: 385, column: 2, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 385, column: 2)
!11251 = distinct !DILexicalBlock(scope: !11224, file: !3, line: 385, column: 2)
!11252 = !DILocation(line: 385, column: 2, scope: !11251)
!11253 = !DILocation(line: 385, column: 2, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11250, file: !3, line: 385, column: 2)
!11255 = !DILocation(line: 385, column: 2, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11254, file: !3, line: 385, column: 2)
!11257 = !DILocation(line: 385, column: 2, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11254, file: !3, line: 385, column: 2)
!11259 = !{i32 -2139019957, i32 -2139019928, i32 -2139019882, i32 -2139019824, i32 -2139019770, i32 -2139019716, i32 -2139019661, i32 -2139019630}
!11260 = !DILocation(line: 385, column: 2, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 385, column: 2)
!11262 = distinct !DILexicalBlock(scope: !11254, file: !3, line: 385, column: 2)
!11263 = !{i32 -2139019175, i32 -2139019168, i32 -2139019114, i32 -2139019083, i32 -2139019053}
!11264 = !DILocation(line: 385, column: 2, scope: !11262)
!11265 = !DILocation(line: 387, column: 9, scope: !11224)
!11266 = !DILocation(line: 387, column: 15, scope: !11224)
!11267 = !DILocation(line: 387, column: 17, scope: !11224)
!11268 = !DILocation(line: 387, column: 2, scope: !11224)
!11269 = distinct !DISubprogram(name: "ipi_from_irq", scope: !3, file: !3, line: 370, type: !11270, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11270 = !DISubroutineType(types: !11271)
!11271 = !{!13, !6}
!11272 = !DILocalVariable(name: "irq", arg: 1, scope: !11269, file: !3, line: 370, type: !6)
!11273 = !DILocation(line: 370, column: 46, scope: !11269)
!11274 = !DILocalVariable(name: "info", scope: !11269, file: !3, line: 372, type: !474)
!11275 = !DILocation(line: 372, column: 19, scope: !11269)
!11276 = !DILocation(line: 372, column: 39, scope: !11269)
!11277 = !DILocation(line: 372, column: 26, scope: !11269)
!11278 = !DILocation(line: 374, column: 2, scope: !11269)
!11279 = !DILocation(line: 374, column: 2, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 374, column: 2)
!11281 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 374, column: 2)
!11282 = !DILocation(line: 374, column: 2, scope: !11281)
!11283 = !DILocation(line: 374, column: 2, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11280, file: !3, line: 374, column: 2)
!11285 = !DILocation(line: 374, column: 2, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 374, column: 2)
!11287 = !DILocation(line: 374, column: 2, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 374, column: 2)
!11289 = !{i32 -2139023658, i32 -2139023629, i32 -2139023583, i32 -2139023525, i32 -2139023471, i32 -2139023417, i32 -2139023362, i32 -2139023331}
!11290 = !DILocation(line: 374, column: 2, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 374, column: 2)
!11292 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 374, column: 2)
!11293 = !{i32 -2139022876, i32 -2139022869, i32 -2139022815, i32 -2139022784, i32 -2139022754}
!11294 = !DILocation(line: 374, column: 2, scope: !11292)
!11295 = !DILocation(line: 375, column: 2, scope: !11269)
!11296 = !DILocation(line: 375, column: 2, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11298, file: !3, line: 375, column: 2)
!11298 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 375, column: 2)
!11299 = !DILocation(line: 375, column: 2, scope: !11298)
!11300 = !DILocation(line: 375, column: 2, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 375, column: 2)
!11302 = !DILocation(line: 375, column: 2, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 375, column: 2)
!11304 = !DILocation(line: 375, column: 2, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 375, column: 2)
!11306 = !{i32 -2139022427, i32 -2139022398, i32 -2139022352, i32 -2139022294, i32 -2139022240, i32 -2139022186, i32 -2139022131, i32 -2139022100}
!11307 = !DILocation(line: 375, column: 2, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 375, column: 2)
!11309 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 375, column: 2)
!11310 = !{i32 -2139021645, i32 -2139021638, i32 -2139021584, i32 -2139021553, i32 -2139021523}
!11311 = !DILocation(line: 375, column: 2, scope: !11309)
!11312 = !DILocation(line: 377, column: 9, scope: !11269)
!11313 = !DILocation(line: 377, column: 15, scope: !11269)
!11314 = !DILocation(line: 377, column: 17, scope: !11269)
!11315 = !DILocation(line: 377, column: 2, scope: !11269)
!11316 = distinct !DISubprogram(name: "xen_irq_info_cleanup", scope: !3, file: !3, line: 338, type: !10267, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11317 = !DILocalVariable(name: "info", arg: 1, scope: !11316, file: !3, line: 338, type: !474)
!11318 = !DILocation(line: 338, column: 51, scope: !11316)
!11319 = !DILocation(line: 340, column: 20, scope: !11316)
!11320 = !DILocation(line: 340, column: 26, scope: !11316)
!11321 = !DILocation(line: 340, column: 2, scope: !11316)
!11322 = !DILocation(line: 341, column: 2, scope: !11316)
!11323 = !DILocation(line: 341, column: 8, scope: !11316)
!11324 = !DILocation(line: 341, column: 15, scope: !11316)
!11325 = !DILocation(line: 342, column: 1, scope: !11316)
!11326 = distinct !DISubprogram(name: "xen_evtchn_port_bind_to_cpu", scope: !6472, file: !6472, line: 57, type: !6485, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11327 = !DILocalVariable(name: "evtchn", arg: 1, scope: !11326, file: !6472, line: 57, type: !491)
!11328 = !DILocation(line: 57, column: 62, scope: !11326)
!11329 = !DILocalVariable(name: "cpu", arg: 2, scope: !11326, file: !6472, line: 58, type: !6)
!11330 = !DILocation(line: 58, column: 26, scope: !11326)
!11331 = !DILocalVariable(name: "old_cpu", arg: 3, scope: !11326, file: !6472, line: 59, type: !6)
!11332 = !DILocation(line: 59, column: 26, scope: !11326)
!11333 = !DILocation(line: 61, column: 2, scope: !11326)
!11334 = !DILocation(line: 61, column: 14, scope: !11326)
!11335 = !DILocation(line: 61, column: 26, scope: !11326)
!11336 = !DILocation(line: 61, column: 34, scope: !11326)
!11337 = !DILocation(line: 61, column: 39, scope: !11326)
!11338 = !DILocation(line: 62, column: 1, scope: !11326)
!11339 = distinct !DISubprogram(name: "xen_irq_info_ipi_setup", scope: !3, file: !3, line: 293, type: !11340, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11340 = !DISubroutineType(types: !11341)
!11341 = !{!97, !6, !6, !491, !13}
!11342 = !DILocalVariable(name: "cpu", arg: 1, scope: !11339, file: !3, line: 293, type: !6)
!11343 = !DILocation(line: 293, column: 44, scope: !11339)
!11344 = !DILocalVariable(name: "irq", arg: 2, scope: !11339, file: !3, line: 294, type: !6)
!11345 = !DILocation(line: 294, column: 16, scope: !11339)
!11346 = !DILocalVariable(name: "evtchn", arg: 3, scope: !11339, file: !3, line: 295, type: !491)
!11347 = !DILocation(line: 295, column: 21, scope: !11339)
!11348 = !DILocalVariable(name: "ipi", arg: 4, scope: !11339, file: !3, line: 296, type: !13)
!11349 = !DILocation(line: 296, column: 23, scope: !11339)
!11350 = !DILocalVariable(name: "info", scope: !11339, file: !3, line: 298, type: !474)
!11351 = !DILocation(line: 298, column: 19, scope: !11339)
!11352 = !DILocation(line: 298, column: 39, scope: !11339)
!11353 = !DILocation(line: 298, column: 26, scope: !11339)
!11354 = !DILocation(line: 300, column: 16, scope: !11339)
!11355 = !DILocation(line: 300, column: 2, scope: !11339)
!11356 = !DILocation(line: 300, column: 8, scope: !11339)
!11357 = !DILocation(line: 300, column: 10, scope: !11339)
!11358 = !DILocation(line: 300, column: 14, scope: !11339)
!11359 = !DILocation(line: 302, column: 34, scope: !11339)
!11360 = !DILocation(line: 302, column: 2, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11339, file: !3, line: 302, column: 2)
!11362 = !DILocation(line: 302, column: 2, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11361, file: !3, line: 302, column: 2)
!11364 = !DILocalVariable(name: "__vpp_verify", scope: !11365, file: !3, line: 302, type: !3999)
!11365 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 302, column: 2)
!11366 = !DILocation(line: 302, column: 2, scope: !11365)
!11367 = !DILocation(line: 302, column: 27, scope: !11339)
!11368 = !DILocation(line: 302, column: 2, scope: !11339)
!11369 = !DILocation(line: 302, column: 32, scope: !11339)
!11370 = !DILocation(line: 304, column: 35, scope: !11339)
!11371 = !DILocation(line: 304, column: 41, scope: !11339)
!11372 = !DILocation(line: 304, column: 56, scope: !11339)
!11373 = !DILocation(line: 304, column: 9, scope: !11339)
!11374 = !DILocation(line: 304, column: 2, scope: !11339)
!11375 = distinct !DISubprogram(name: "xen_evtchn_handle_events", scope: !6472, file: !6472, line: 94, type: !6501, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11376 = !DILocalVariable(name: "cpu", arg: 1, scope: !11375, file: !6472, line: 94, type: !6)
!11377 = !DILocation(line: 94, column: 54, scope: !11375)
!11378 = !DILocalVariable(name: "ctrl", arg: 2, scope: !11375, file: !6472, line: 95, type: !6503)
!11379 = !DILocation(line: 95, column: 35, scope: !11375)
!11380 = !DILocation(line: 97, column: 9, scope: !11375)
!11381 = !DILocation(line: 97, column: 21, scope: !11375)
!11382 = !DILocation(line: 97, column: 35, scope: !11375)
!11383 = !DILocation(line: 97, column: 40, scope: !11375)
!11384 = !DILocation(line: 97, column: 2, scope: !11375)
!11385 = distinct !DISubprogram(name: "cpumask_next_and", scope: !532, file: !532, line: 171, type: !11386, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11386 = !DISubroutineType(types: !11387)
!11387 = !{!6, !97, !529, !529}
!11388 = !DILocalVariable(name: "n", arg: 1, scope: !11385, file: !532, line: 171, type: !97)
!11389 = !DILocation(line: 171, column: 49, scope: !11385)
!11390 = !DILocalVariable(name: "srcp", arg: 2, scope: !11385, file: !532, line: 172, type: !529)
!11391 = !DILocation(line: 172, column: 32, scope: !11385)
!11392 = !DILocalVariable(name: "andp", arg: 3, scope: !11385, file: !532, line: 173, type: !529)
!11393 = !DILocation(line: 173, column: 32, scope: !11385)
!11394 = !DILocation(line: 175, column: 9, scope: !11385)
!11395 = !DILocation(line: 175, column: 10, scope: !11385)
!11396 = !DILocation(line: 175, column: 2, scope: !11385)
!11397 = distinct !DISubprogram(name: "xen_rebind_evtchn_to_cpu", scope: !3, file: !3, line: 1658, type: !11083, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11398 = !DILocalVariable(name: "evtchn", arg: 1, scope: !11397, file: !3, line: 1658, type: !491)
!11399 = !DILocation(line: 1658, column: 51, scope: !11397)
!11400 = !DILocalVariable(name: "tcpu", arg: 2, scope: !11397, file: !3, line: 1658, type: !6)
!11401 = !DILocation(line: 1658, column: 72, scope: !11397)
!11402 = !DILocalVariable(name: "bind_vcpu", scope: !11397, file: !3, line: 1660, type: !11403)
!11403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_bind_vcpu", file: !492, line: 165, size: 64, elements: !11404)
!11404 = !{!11405, !11406}
!11405 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !11403, file: !492, line: 167, baseType: !491, size: 32)
!11406 = !DIDerivedType(tag: DW_TAG_member, name: "vcpu", scope: !11403, file: !492, line: 168, baseType: !493, size: 32, offset: 32)
!11407 = !DILocation(line: 1660, column: 26, scope: !11397)
!11408 = !DILocalVariable(name: "masked", scope: !11397, file: !3, line: 1661, type: !97)
!11409 = !DILocation(line: 1661, column: 6, scope: !11397)
!11410 = !DILocation(line: 1663, column: 7, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 1663, column: 6)
!11412 = !DILocation(line: 1663, column: 6, scope: !11397)
!11413 = !DILocation(line: 1664, column: 3, scope: !11411)
!11414 = !DILocation(line: 1666, column: 7, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 1666, column: 6)
!11416 = !DILocation(line: 1666, column: 6, scope: !11397)
!11417 = !DILocation(line: 1667, column: 3, scope: !11415)
!11418 = !DILocation(line: 1670, column: 19, scope: !11397)
!11419 = !DILocation(line: 1670, column: 12, scope: !11397)
!11420 = !DILocation(line: 1670, column: 17, scope: !11397)
!11421 = !DILocation(line: 1671, column: 31, scope: !11397)
!11422 = !DILocation(line: 1671, column: 19, scope: !11397)
!11423 = !DILocation(line: 1671, column: 12, scope: !11397)
!11424 = !DILocation(line: 1671, column: 17, scope: !11397)
!11425 = !DILocation(line: 1677, column: 29, scope: !11397)
!11426 = !DILocation(line: 1677, column: 11, scope: !11397)
!11427 = !DILocation(line: 1677, column: 9, scope: !11397)
!11428 = !DILocation(line: 1684, column: 54, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 1684, column: 6)
!11430 = !DILocation(line: 1684, column: 6, scope: !11429)
!11431 = !DILocation(line: 1684, column: 66, scope: !11429)
!11432 = !DILocation(line: 1684, column: 6, scope: !11397)
!11433 = !DILocation(line: 1685, column: 22, scope: !11429)
!11434 = !DILocation(line: 1685, column: 30, scope: !11429)
!11435 = !DILocation(line: 1685, column: 3, scope: !11429)
!11436 = !DILocation(line: 1687, column: 7, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 1687, column: 6)
!11438 = !DILocation(line: 1687, column: 6, scope: !11397)
!11439 = !DILocation(line: 1688, column: 17, scope: !11437)
!11440 = !DILocation(line: 1688, column: 3, scope: !11437)
!11441 = !DILocation(line: 1690, column: 2, scope: !11397)
!11442 = !DILocation(line: 1691, column: 1, scope: !11397)
!11443 = distinct !DISubprogram(name: "irq_data_update_effective_affinity", scope: !183, file: !183, line: 899, type: !6002, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11444 = !DILocalVariable(name: "d", arg: 1, scope: !11443, file: !183, line: 899, type: !5852)
!11445 = !DILocation(line: 899, column: 72, scope: !11443)
!11446 = !DILocalVariable(name: "m", arg: 2, scope: !11443, file: !183, line: 900, type: !529)
!11447 = !DILocation(line: 900, column: 35, scope: !11443)
!11448 = !DILocation(line: 902, column: 1, scope: !11443)
!11449 = distinct !DISubprogram(name: "xen_support_evtchn_rebind", scope: !14, file: !14, line: 32, type: !5267, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11450 = !DILocation(line: 34, column: 11, scope: !11449)
!11451 = !DILocation(line: 34, column: 28, scope: !11449)
!11452 = !DILocation(line: 34, column: 31, scope: !11449)
!11453 = !DILocation(line: 34, column: 2, scope: !11449)
!11454 = distinct !DISubprogram(name: "test_and_set_mask", scope: !6472, file: !6472, line: 79, type: !6494, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11455 = !DILocalVariable(name: "port", arg: 1, scope: !11454, file: !6472, line: 79, type: !491)
!11456 = !DILocation(line: 79, column: 52, scope: !11454)
!11457 = !DILocation(line: 81, column: 9, scope: !11454)
!11458 = !DILocation(line: 81, column: 21, scope: !11454)
!11459 = !DILocation(line: 81, column: 39, scope: !11454)
!11460 = !DILocation(line: 81, column: 2, scope: !11454)
!11461 = distinct !DISubprogram(name: "__startup_pirq", scope: !3, file: !3, line: 767, type: !6682, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11462 = !DILocalVariable(name: "irq", arg: 1, scope: !11461, file: !3, line: 767, type: !6)
!11463 = !DILocation(line: 767, column: 49, scope: !11461)
!11464 = !DILocalVariable(name: "bind_pirq", scope: !11461, file: !3, line: 769, type: !11465)
!11465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "evtchn_bind_pirq", file: !492, line: 76, size: 96, elements: !11466)
!11466 = !{!11467, !11468, !11469}
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "pirq", scope: !11465, file: !492, line: 78, baseType: !493, size: 32)
!11468 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11465, file: !492, line: 80, baseType: !493, size: 32, offset: 32)
!11469 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !11465, file: !492, line: 82, baseType: !491, size: 32, offset: 64)
!11470 = !DILocation(line: 769, column: 26, scope: !11461)
!11471 = !DILocalVariable(name: "info", scope: !11461, file: !3, line: 770, type: !474)
!11472 = !DILocation(line: 770, column: 19, scope: !11461)
!11473 = !DILocation(line: 770, column: 39, scope: !11461)
!11474 = !DILocation(line: 770, column: 26, scope: !11461)
!11475 = !DILocalVariable(name: "evtchn", scope: !11461, file: !3, line: 771, type: !491)
!11476 = !DILocation(line: 771, column: 16, scope: !11461)
!11477 = !DILocation(line: 771, column: 41, scope: !11461)
!11478 = !DILocation(line: 771, column: 25, scope: !11461)
!11479 = !DILocalVariable(name: "rc", scope: !11461, file: !3, line: 772, type: !97)
!11480 = !DILocation(line: 772, column: 6, scope: !11461)
!11481 = !DILocation(line: 774, column: 2, scope: !11461)
!11482 = !DILocation(line: 774, column: 2, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 774, column: 2)
!11484 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 774, column: 2)
!11485 = !DILocation(line: 774, column: 2, scope: !11484)
!11486 = !DILocation(line: 774, column: 2, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 774, column: 2)
!11488 = !DILocation(line: 774, column: 2, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 774, column: 2)
!11490 = !DILocation(line: 774, column: 2, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 774, column: 2)
!11492 = !{i32 -2138981743, i32 -2138981714, i32 -2138981668, i32 -2138981610, i32 -2138981556, i32 -2138981502, i32 -2138981447, i32 -2138981416}
!11493 = !DILocation(line: 774, column: 2, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11495, file: !3, line: 774, column: 2)
!11495 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 774, column: 2)
!11496 = !{i32 -2138980961, i32 -2138980954, i32 -2138980900, i32 -2138980869, i32 -2138980839}
!11497 = !DILocation(line: 774, column: 2, scope: !11495)
!11498 = !DILocation(line: 776, column: 6, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 776, column: 6)
!11500 = !DILocation(line: 776, column: 6, scope: !11461)
!11501 = !DILocation(line: 777, column: 3, scope: !11499)
!11502 = !DILocation(line: 779, column: 33, scope: !11461)
!11503 = !DILocation(line: 779, column: 19, scope: !11461)
!11504 = !DILocation(line: 779, column: 12, scope: !11461)
!11505 = !DILocation(line: 779, column: 17, scope: !11461)
!11506 = !DILocation(line: 781, column: 20, scope: !11461)
!11507 = !DILocation(line: 781, column: 26, scope: !11461)
!11508 = !DILocation(line: 781, column: 28, scope: !11461)
!11509 = !DILocation(line: 781, column: 33, scope: !11461)
!11510 = !DILocation(line: 781, column: 39, scope: !11461)
!11511 = !DILocation(line: 781, column: 12, scope: !11461)
!11512 = !DILocation(line: 781, column: 18, scope: !11461)
!11513 = !DILocation(line: 783, column: 55, scope: !11461)
!11514 = !DILocation(line: 783, column: 7, scope: !11461)
!11515 = !DILocation(line: 783, column: 5, scope: !11461)
!11516 = !DILocation(line: 784, column: 6, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 784, column: 6)
!11518 = !DILocation(line: 784, column: 9, scope: !11517)
!11519 = !DILocation(line: 784, column: 6, scope: !11461)
!11520 = !DILocation(line: 785, column: 3, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11517, file: !3, line: 784, column: 15)
!11522 = !DILocation(line: 786, column: 3, scope: !11521)
!11523 = !DILocation(line: 788, column: 21, scope: !11461)
!11524 = !DILocation(line: 788, column: 9, scope: !11461)
!11525 = !DILocation(line: 790, column: 20, scope: !11461)
!11526 = !DILocation(line: 790, column: 2, scope: !11461)
!11527 = !DILocation(line: 792, column: 25, scope: !11461)
!11528 = !DILocation(line: 792, column: 33, scope: !11461)
!11529 = !DILocation(line: 792, column: 7, scope: !11461)
!11530 = !DILocation(line: 792, column: 5, scope: !11461)
!11531 = !DILocation(line: 793, column: 6, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 793, column: 6)
!11533 = !DILocation(line: 793, column: 6, scope: !11461)
!11534 = !DILocation(line: 794, column: 3, scope: !11532)
!11535 = !DILocation(line: 796, column: 17, scope: !11461)
!11536 = !DILocation(line: 796, column: 2, scope: !11461)
!11537 = !DILocation(line: 796, column: 8, scope: !11461)
!11538 = !DILocation(line: 796, column: 15, scope: !11461)
!11539 = !DILocation(line: 797, column: 21, scope: !11461)
!11540 = !DILocation(line: 797, column: 2, scope: !11461)
!11541 = !DILocation(line: 799, column: 29, scope: !11461)
!11542 = !DILocation(line: 799, column: 7, scope: !11461)
!11543 = !DILocation(line: 799, column: 5, scope: !11461)
!11544 = !DILocation(line: 800, column: 6, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 800, column: 6)
!11546 = !DILocation(line: 800, column: 6, scope: !11461)
!11547 = !DILocation(line: 801, column: 3, scope: !11545)
!11548 = !DILabel(scope: !11461, name: "out", file: !3, line: 803)
!11549 = !DILocation(line: 803, column: 1, scope: !11461)
!11550 = !DILocation(line: 804, column: 16, scope: !11461)
!11551 = !DILocation(line: 804, column: 2, scope: !11461)
!11552 = !DILocation(line: 805, column: 28, scope: !11461)
!11553 = !DILocation(line: 805, column: 11, scope: !11461)
!11554 = !DILocation(line: 805, column: 2, scope: !11461)
!11555 = !DILocation(line: 807, column: 2, scope: !11461)
!11556 = !DILabel(scope: !11461, name: "err", file: !3, line: 809)
!11557 = !DILocation(line: 809, column: 1, scope: !11461)
!11558 = !DILocation(line: 810, column: 2, scope: !11461)
!11559 = !DILocation(line: 811, column: 19, scope: !11461)
!11560 = !DILocation(line: 811, column: 2, scope: !11461)
!11561 = !DILocation(line: 812, column: 2, scope: !11461)
!11562 = !DILocation(line: 813, column: 1, scope: !11461)
!11563 = distinct !DISubprogram(name: "eoi_pirq", scope: !3, file: !3, line: 733, type: !5942, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11564 = !DILocalVariable(name: "data", arg: 1, scope: !11563, file: !3, line: 733, type: !5852)
!11565 = !DILocation(line: 733, column: 39, scope: !11563)
!11566 = !DILocalVariable(name: "evtchn", scope: !11563, file: !3, line: 735, type: !491)
!11567 = !DILocation(line: 735, column: 16, scope: !11563)
!11568 = !DILocation(line: 735, column: 41, scope: !11563)
!11569 = !DILocation(line: 735, column: 47, scope: !11563)
!11570 = !DILocation(line: 735, column: 25, scope: !11563)
!11571 = !DILocalVariable(name: "eoi", scope: !11563, file: !3, line: 736, type: !11572)
!11572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "physdev_eoi", file: !6969, line: 36, size: 32, elements: !11573)
!11573 = !{!11574}
!11574 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !11572, file: !6969, line: 38, baseType: !493, size: 32)
!11575 = !DILocation(line: 736, column: 21, scope: !11563)
!11576 = !DILocation(line: 736, column: 27, scope: !11563)
!11577 = !DILocation(line: 736, column: 50, scope: !11563)
!11578 = !DILocation(line: 736, column: 56, scope: !11563)
!11579 = !DILocation(line: 736, column: 36, scope: !11563)
!11580 = !DILocalVariable(name: "rc", scope: !11563, file: !3, line: 737, type: !97)
!11581 = !DILocation(line: 737, column: 6, scope: !11563)
!11582 = !DILocation(line: 739, column: 7, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 739, column: 6)
!11584 = !DILocation(line: 739, column: 6, scope: !11563)
!11585 = !DILocation(line: 740, column: 3, scope: !11583)
!11586 = !DILocation(line: 742, column: 6, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 742, column: 6)
!11588 = !DILocation(line: 742, column: 50, scope: !11587)
!11589 = !DILocation(line: 743, column: 6, scope: !11587)
!11590 = !DILocation(line: 742, column: 6, scope: !11563)
!11591 = !DILocalVariable(name: "masked", scope: !11592, file: !3, line: 744, type: !97)
!11592 = distinct !DILexicalBlock(scope: !11587, file: !3, line: 743, column: 40)
!11593 = !DILocation(line: 744, column: 7, scope: !11592)
!11594 = !DILocation(line: 744, column: 34, scope: !11592)
!11595 = !DILocation(line: 744, column: 16, scope: !11592)
!11596 = !DILocation(line: 746, column: 16, scope: !11592)
!11597 = !DILocation(line: 746, column: 3, scope: !11592)
!11598 = !DILocation(line: 748, column: 23, scope: !11592)
!11599 = !DILocation(line: 748, column: 3, scope: !11592)
!11600 = !DILocation(line: 750, column: 8, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11592, file: !3, line: 750, column: 7)
!11602 = !DILocation(line: 750, column: 7, scope: !11592)
!11603 = !DILocation(line: 751, column: 18, scope: !11601)
!11604 = !DILocation(line: 751, column: 4, scope: !11601)
!11605 = !DILocation(line: 752, column: 2, scope: !11592)
!11606 = !DILocation(line: 753, column: 16, scope: !11587)
!11607 = !DILocation(line: 753, column: 3, scope: !11587)
!11608 = !DILocation(line: 755, column: 6, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 755, column: 6)
!11610 = !DILocation(line: 755, column: 21, scope: !11609)
!11611 = !DILocation(line: 755, column: 27, scope: !11609)
!11612 = !DILocation(line: 755, column: 6, scope: !11563)
!11613 = !DILocation(line: 756, column: 45, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11609, file: !3, line: 755, column: 33)
!11615 = !DILocation(line: 756, column: 8, scope: !11614)
!11616 = !DILocation(line: 756, column: 6, scope: !11614)
!11617 = !DILocalVariable(name: "__ret_warn_on", scope: !11618, file: !3, line: 757, type: !97)
!11618 = distinct !DILexicalBlock(scope: !11614, file: !3, line: 757, column: 3)
!11619 = !DILocation(line: 757, column: 3, scope: !11618)
!11620 = !DILocation(line: 757, column: 3, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11618, file: !3, line: 757, column: 3)
!11622 = !DILocation(line: 757, column: 3, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11621, file: !3, line: 757, column: 3)
!11624 = !DILocation(line: 757, column: 3, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 757, column: 3)
!11626 = !DILocation(line: 757, column: 3, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 757, column: 3)
!11628 = !{i32 -2138982990, i32 -2138982961, i32 -2138982915, i32 -2138982857, i32 -2138982803, i32 -2138982749, i32 -2138982694, i32 -2138982663}
!11629 = !DILocation(line: 757, column: 3, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 757, column: 3)
!11631 = !{i32 -2138982249, i32 -2138982242, i32 -2138982190, i32 -2138982159, i32 -2138982129}
!11632 = !DILocation(line: 757, column: 3, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 757, column: 3)
!11634 = !DILocation(line: 758, column: 2, scope: !11614)
!11635 = !DILocation(line: 759, column: 1, scope: !11563)
!11636 = distinct !DISubprogram(name: "irqd_is_setaffinity_pending", scope: !183, file: !183, line: 252, type: !11637, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11637 = !DISubroutineType(types: !11638)
!11638 = !{!1066, !5852}
!11639 = !DILocalVariable(name: "d", arg: 1, scope: !11636, file: !183, line: 252, type: !5852)
!11640 = !DILocation(line: 252, column: 65, scope: !11636)
!11641 = !DILocation(line: 254, column: 9, scope: !11636)
!11642 = !DILocation(line: 254, column: 28, scope: !11636)
!11643 = !DILocation(line: 254, column: 2, scope: !11636)
!11644 = distinct !DISubprogram(name: "irqd_irq_disabled", scope: !183, file: !183, line: 342, type: !11637, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11645 = !DILocalVariable(name: "d", arg: 1, scope: !11644, file: !183, line: 342, type: !5852)
!11646 = !DILocation(line: 342, column: 55, scope: !11644)
!11647 = !DILocation(line: 344, column: 9, scope: !11644)
!11648 = !DILocation(line: 344, column: 28, scope: !11644)
!11649 = !DILocation(line: 344, column: 2, scope: !11644)
!11650 = distinct !DISubprogram(name: "irq_move_masked_irq", scope: !183, file: !183, line: 629, type: !5942, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11651 = !DILocalVariable(name: "data", arg: 1, scope: !11650, file: !183, line: 629, type: !5852)
!11652 = !DILocation(line: 629, column: 57, scope: !11650)
!11653 = !DILocation(line: 629, column: 65, scope: !11650)
!11654 = distinct !DISubprogram(name: "disable_dynirq", scope: !3, file: !3, line: 1722, type: !5942, scopeLine: 1723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11655 = !DILocalVariable(name: "data", arg: 1, scope: !11654, file: !3, line: 1722, type: !5852)
!11656 = !DILocation(line: 1722, column: 45, scope: !11654)
!11657 = !DILocalVariable(name: "evtchn", scope: !11654, file: !3, line: 1724, type: !491)
!11658 = !DILocation(line: 1724, column: 16, scope: !11654)
!11659 = !DILocation(line: 1724, column: 41, scope: !11654)
!11660 = !DILocation(line: 1724, column: 47, scope: !11654)
!11661 = !DILocation(line: 1724, column: 25, scope: !11654)
!11662 = !DILocation(line: 1726, column: 6, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11654, file: !3, line: 1726, column: 6)
!11664 = !DILocation(line: 1726, column: 6, scope: !11654)
!11665 = !DILocation(line: 1727, column: 15, scope: !11663)
!11666 = !DILocation(line: 1727, column: 3, scope: !11663)
!11667 = !DILocation(line: 1728, column: 1, scope: !11654)
!11668 = distinct !DISubprogram(name: "ack_dynirq", scope: !3, file: !3, line: 1730, type: !5942, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11669 = !DILocalVariable(name: "data", arg: 1, scope: !11668, file: !3, line: 1730, type: !5852)
!11670 = !DILocation(line: 1730, column: 41, scope: !11668)
!11671 = !DILocalVariable(name: "evtchn", scope: !11668, file: !3, line: 1732, type: !491)
!11672 = !DILocation(line: 1732, column: 16, scope: !11668)
!11673 = !DILocation(line: 1732, column: 41, scope: !11668)
!11674 = !DILocation(line: 1732, column: 47, scope: !11668)
!11675 = !DILocation(line: 1732, column: 25, scope: !11668)
!11676 = !DILocation(line: 1734, column: 7, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11668, file: !3, line: 1734, column: 6)
!11678 = !DILocation(line: 1734, column: 6, scope: !11668)
!11679 = !DILocation(line: 1735, column: 3, scope: !11677)
!11680 = !DILocation(line: 1737, column: 6, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11668, file: !3, line: 1737, column: 6)
!11682 = !DILocation(line: 1737, column: 50, scope: !11681)
!11683 = !DILocation(line: 1738, column: 6, scope: !11681)
!11684 = !DILocation(line: 1737, column: 6, scope: !11668)
!11685 = !DILocalVariable(name: "masked", scope: !11686, file: !3, line: 1739, type: !97)
!11686 = distinct !DILexicalBlock(scope: !11681, file: !3, line: 1738, column: 40)
!11687 = !DILocation(line: 1739, column: 7, scope: !11686)
!11688 = !DILocation(line: 1739, column: 34, scope: !11686)
!11689 = !DILocation(line: 1739, column: 16, scope: !11686)
!11690 = !DILocation(line: 1741, column: 16, scope: !11686)
!11691 = !DILocation(line: 1741, column: 3, scope: !11686)
!11692 = !DILocation(line: 1743, column: 23, scope: !11686)
!11693 = !DILocation(line: 1743, column: 3, scope: !11686)
!11694 = !DILocation(line: 1745, column: 8, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11686, file: !3, line: 1745, column: 7)
!11696 = !DILocation(line: 1745, column: 7, scope: !11686)
!11697 = !DILocation(line: 1746, column: 18, scope: !11695)
!11698 = !DILocation(line: 1746, column: 4, scope: !11695)
!11699 = !DILocation(line: 1747, column: 2, scope: !11686)
!11700 = !DILocation(line: 1748, column: 16, scope: !11681)
!11701 = !DILocation(line: 1748, column: 3, scope: !11681)
!11702 = !DILocation(line: 1749, column: 1, scope: !11668)
!11703 = distinct !DISubprogram(name: "mask_ack_dynirq", scope: !3, file: !3, line: 1751, type: !5942, scopeLine: 1752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11704 = !DILocalVariable(name: "data", arg: 1, scope: !11703, file: !3, line: 1751, type: !5852)
!11705 = !DILocation(line: 1751, column: 46, scope: !11703)
!11706 = !DILocation(line: 1753, column: 17, scope: !11703)
!11707 = !DILocation(line: 1753, column: 2, scope: !11703)
!11708 = !DILocation(line: 1754, column: 13, scope: !11703)
!11709 = !DILocation(line: 1754, column: 2, scope: !11703)
!11710 = !DILocation(line: 1755, column: 1, scope: !11703)
!11711 = distinct !DISubprogram(name: "enable_dynirq", scope: !3, file: !3, line: 1714, type: !5942, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11712 = !DILocalVariable(name: "data", arg: 1, scope: !11711, file: !3, line: 1714, type: !5852)
!11713 = !DILocation(line: 1714, column: 44, scope: !11711)
!11714 = !DILocalVariable(name: "evtchn", scope: !11711, file: !3, line: 1716, type: !491)
!11715 = !DILocation(line: 1716, column: 16, scope: !11711)
!11716 = !DILocation(line: 1716, column: 41, scope: !11711)
!11717 = !DILocation(line: 1716, column: 47, scope: !11711)
!11718 = !DILocation(line: 1716, column: 25, scope: !11711)
!11719 = !DILocation(line: 1718, column: 6, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 1718, column: 6)
!11721 = !DILocation(line: 1718, column: 6, scope: !11711)
!11722 = !DILocation(line: 1719, column: 17, scope: !11720)
!11723 = !DILocation(line: 1719, column: 3, scope: !11720)
!11724 = !DILocation(line: 1720, column: 1, scope: !11711)
!11725 = distinct !DISubprogram(name: "retrigger_dynirq", scope: !3, file: !3, line: 1757, type: !5957, scopeLine: 1758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11726 = !DILocalVariable(name: "data", arg: 1, scope: !11725, file: !3, line: 1757, type: !5852)
!11727 = !DILocation(line: 1757, column: 46, scope: !11725)
!11728 = !DILocalVariable(name: "evtchn", scope: !11725, file: !3, line: 1759, type: !491)
!11729 = !DILocation(line: 1759, column: 16, scope: !11725)
!11730 = !DILocation(line: 1759, column: 41, scope: !11725)
!11731 = !DILocation(line: 1759, column: 47, scope: !11725)
!11732 = !DILocation(line: 1759, column: 25, scope: !11725)
!11733 = !DILocalVariable(name: "masked", scope: !11725, file: !3, line: 1760, type: !97)
!11734 = !DILocation(line: 1760, column: 6, scope: !11725)
!11735 = !DILocation(line: 1762, column: 7, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11725, file: !3, line: 1762, column: 6)
!11737 = !DILocation(line: 1762, column: 6, scope: !11725)
!11738 = !DILocation(line: 1763, column: 3, scope: !11736)
!11739 = !DILocation(line: 1765, column: 29, scope: !11725)
!11740 = !DILocation(line: 1765, column: 11, scope: !11725)
!11741 = !DILocation(line: 1765, column: 9, scope: !11725)
!11742 = !DILocation(line: 1766, column: 13, scope: !11725)
!11743 = !DILocation(line: 1766, column: 2, scope: !11725)
!11744 = !DILocation(line: 1767, column: 7, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11725, file: !3, line: 1767, column: 6)
!11746 = !DILocation(line: 1767, column: 6, scope: !11725)
!11747 = !DILocation(line: 1768, column: 17, scope: !11745)
!11748 = !DILocation(line: 1768, column: 3, scope: !11745)
!11749 = !DILocation(line: 1770, column: 2, scope: !11725)
!11750 = !DILocation(line: 1771, column: 1, scope: !11725)
!11751 = distinct !DISubprogram(name: "startup_pirq", scope: !3, file: !3, line: 815, type: !5938, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11752 = !DILocalVariable(name: "data", arg: 1, scope: !11751, file: !3, line: 815, type: !5852)
!11753 = !DILocation(line: 815, column: 51, scope: !11751)
!11754 = !DILocation(line: 817, column: 24, scope: !11751)
!11755 = !DILocation(line: 817, column: 30, scope: !11751)
!11756 = !DILocation(line: 817, column: 9, scope: !11751)
!11757 = !DILocation(line: 817, column: 2, scope: !11751)
!11758 = distinct !DISubprogram(name: "shutdown_pirq", scope: !3, file: !3, line: 820, type: !5942, scopeLine: 821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11759 = !DILocalVariable(name: "data", arg: 1, scope: !11758, file: !3, line: 820, type: !5852)
!11760 = !DILocation(line: 820, column: 44, scope: !11758)
!11761 = !DILocalVariable(name: "irq", scope: !11758, file: !3, line: 822, type: !6)
!11762 = !DILocation(line: 822, column: 15, scope: !11758)
!11763 = !DILocation(line: 822, column: 21, scope: !11758)
!11764 = !DILocation(line: 822, column: 27, scope: !11758)
!11765 = !DILocalVariable(name: "info", scope: !11758, file: !3, line: 823, type: !474)
!11766 = !DILocation(line: 823, column: 19, scope: !11758)
!11767 = !DILocation(line: 823, column: 39, scope: !11758)
!11768 = !DILocation(line: 823, column: 26, scope: !11758)
!11769 = !DILocalVariable(name: "evtchn", scope: !11758, file: !3, line: 824, type: !491)
!11770 = !DILocation(line: 824, column: 16, scope: !11758)
!11771 = !DILocation(line: 824, column: 41, scope: !11758)
!11772 = !DILocation(line: 824, column: 25, scope: !11758)
!11773 = !DILocation(line: 826, column: 2, scope: !11758)
!11774 = !DILocation(line: 826, column: 2, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11776, file: !3, line: 826, column: 2)
!11776 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 826, column: 2)
!11777 = !DILocation(line: 826, column: 2, scope: !11776)
!11778 = !DILocation(line: 826, column: 2, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11775, file: !3, line: 826, column: 2)
!11780 = !DILocation(line: 826, column: 2, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11779, file: !3, line: 826, column: 2)
!11782 = !DILocation(line: 826, column: 2, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11779, file: !3, line: 826, column: 2)
!11784 = !{i32 -2138980079, i32 -2138980050, i32 -2138980004, i32 -2138979946, i32 -2138979892, i32 -2138979838, i32 -2138979783, i32 -2138979752}
!11785 = !DILocation(line: 826, column: 2, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 826, column: 2)
!11787 = distinct !DILexicalBlock(scope: !11779, file: !3, line: 826, column: 2)
!11788 = !{i32 -2138979297, i32 -2138979290, i32 -2138979236, i32 -2138979205, i32 -2138979175}
!11789 = !DILocation(line: 826, column: 2, scope: !11787)
!11790 = !DILocation(line: 828, column: 7, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 828, column: 6)
!11792 = !DILocation(line: 828, column: 6, scope: !11758)
!11793 = !DILocation(line: 829, column: 3, scope: !11791)
!11794 = !DILocation(line: 831, column: 14, scope: !11758)
!11795 = !DILocation(line: 831, column: 2, scope: !11758)
!11796 = !DILocation(line: 832, column: 19, scope: !11758)
!11797 = !DILocation(line: 832, column: 2, scope: !11758)
!11798 = !DILocation(line: 833, column: 23, scope: !11758)
!11799 = !DILocation(line: 833, column: 2, scope: !11758)
!11800 = !DILocation(line: 834, column: 1, scope: !11758)
!11801 = distinct !DISubprogram(name: "enable_pirq", scope: !3, file: !3, line: 836, type: !5942, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11802 = !DILocalVariable(name: "data", arg: 1, scope: !11801, file: !3, line: 836, type: !5852)
!11803 = !DILocation(line: 836, column: 42, scope: !11801)
!11804 = !DILocation(line: 838, column: 16, scope: !11801)
!11805 = !DILocation(line: 838, column: 2, scope: !11801)
!11806 = !DILocation(line: 839, column: 1, scope: !11801)
!11807 = distinct !DISubprogram(name: "disable_pirq", scope: !3, file: !3, line: 841, type: !5942, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11808 = !DILocalVariable(name: "data", arg: 1, scope: !11807, file: !3, line: 841, type: !5852)
!11809 = !DILocation(line: 841, column: 43, scope: !11807)
!11810 = !DILocation(line: 843, column: 17, scope: !11807)
!11811 = !DILocation(line: 843, column: 2, scope: !11807)
!11812 = !DILocation(line: 844, column: 1, scope: !11807)
!11813 = distinct !DISubprogram(name: "mask_ack_pirq", scope: !3, file: !3, line: 761, type: !5942, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11814 = !DILocalVariable(name: "data", arg: 1, scope: !11813, file: !3, line: 761, type: !5852)
!11815 = !DILocation(line: 761, column: 44, scope: !11813)
!11816 = !DILocation(line: 763, column: 17, scope: !11813)
!11817 = !DILocation(line: 763, column: 2, scope: !11813)
!11818 = !DILocation(line: 764, column: 11, scope: !11813)
!11819 = !DILocation(line: 764, column: 2, scope: !11813)
!11820 = !DILocation(line: 765, column: 1, scope: !11813)
!11821 = distinct !DISubprogram(name: "__init_work", scope: !433, file: !433, line: 215, type: !11822, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11822 = !DISubroutineType(types: !11823)
!11823 = !{null, !568, !97}
!11824 = !DILocalVariable(name: "work", arg: 1, scope: !11821, file: !433, line: 215, type: !568)
!11825 = !DILocation(line: 215, column: 52, scope: !11821)
!11826 = !DILocalVariable(name: "onstack", arg: 2, scope: !11821, file: !433, line: 215, type: !97)
!11827 = !DILocation(line: 215, column: 62, scope: !11821)
!11828 = !DILocation(line: 215, column: 73, scope: !11821)
!11829 = distinct !DISubprogram(name: "xen_irq_lateeoi_worker", scope: !3, file: !3, line: 551, type: !566, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11830 = !DILocalVariable(name: "lock", arg: 1, scope: !11831, file: !10013, line: 392, type: !1702)
!11831 = distinct !DISubprogram(name: "spin_unlock", scope: !10013, file: !10013, line: 392, type: !11832, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11832 = !DISubroutineType(types: !11833)
!11833 = !{null, !1702}
!11834 = !DILocation(line: 392, column: 53, scope: !11831, inlinedAt: !11835)
!11835 = distinct !DILocation(line: 575, column: 3, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 562, column: 15)
!11837 = !DILocation(line: 392, column: 53, scope: !11831, inlinedAt: !11838)
!11838 = distinct !DILocation(line: 569, column: 4, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11840, file: !3, line: 568, column: 45)
!11840 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 568, column: 7)
!11841 = !DILocalVariable(name: "lock", arg: 1, scope: !11842, file: !10013, line: 352, type: !1702)
!11842 = distinct !DISubprogram(name: "spin_lock", scope: !10013, file: !10013, line: 352, type: !11832, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11843 = !DILocation(line: 352, column: 51, scope: !11842, inlinedAt: !11844)
!11844 = distinct !DILocation(line: 563, column: 3, scope: !11836)
!11845 = !DILocalVariable(name: "work", arg: 1, scope: !11829, file: !3, line: 551, type: !568)
!11846 = !DILocation(line: 551, column: 56, scope: !11829)
!11847 = !DILocalVariable(name: "eoi", scope: !11829, file: !3, line: 553, type: !543)
!11848 = !DILocation(line: 553, column: 23, scope: !11829)
!11849 = !DILocalVariable(name: "info", scope: !11829, file: !3, line: 554, type: !474)
!11850 = !DILocation(line: 554, column: 19, scope: !11829)
!11851 = !DILocalVariable(name: "now", scope: !11829, file: !3, line: 555, type: !503)
!11852 = !DILocation(line: 555, column: 6, scope: !11829)
!11853 = !DILocation(line: 555, column: 12, scope: !11829)
!11854 = !DILocalVariable(name: "flags", scope: !11829, file: !3, line: 556, type: !528)
!11855 = !DILocation(line: 556, column: 16, scope: !11829)
!11856 = !DILocalVariable(name: "__mptr", scope: !11857, file: !3, line: 558, type: !466)
!11857 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 558, column: 8)
!11858 = !DILocation(line: 558, column: 8, scope: !11857)
!11859 = !DILocation(line: 558, column: 8, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11857, file: !3, line: 558, column: 8)
!11861 = !DILocation(line: 558, column: 6, scope: !11829)
!11862 = !DILocation(line: 560, column: 2, scope: !11829)
!11863 = !DILocalVariable(name: "__dummy", scope: !11864, file: !3, line: 560, type: !528)
!11864 = distinct !DILexicalBlock(scope: !11865, file: !3, line: 560, column: 2)
!11865 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 560, column: 2)
!11866 = !DILocation(line: 560, column: 2, scope: !11864)
!11867 = !DILocalVariable(name: "__dummy2", scope: !11864, file: !3, line: 560, type: !528)
!11868 = !DILocation(line: 560, column: 2, scope: !11865)
!11869 = !DILocation(line: 560, column: 2, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11865, file: !3, line: 560, column: 2)
!11871 = !DILocation(line: 560, column: 2, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 560, column: 2)
!11873 = !DILocalVariable(name: "__dummy", scope: !11874, file: !3, line: 560, type: !528)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 560, column: 2)
!11875 = distinct !DILexicalBlock(scope: !11872, file: !3, line: 560, column: 2)
!11876 = !DILocation(line: 560, column: 2, scope: !11874)
!11877 = !DILocalVariable(name: "__dummy2", scope: !11874, file: !3, line: 560, type: !528)
!11878 = !DILocation(line: 560, column: 2, scope: !11875)
!11879 = !DILocation(line: 560, column: 2, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 560, column: 2)
!11881 = !{i32 -2139003867}
!11882 = !DILocation(line: 560, column: 2, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11880, file: !3, line: 560, column: 2)
!11884 = !DILocation(line: 562, column: 2, scope: !11829)
!11885 = !DILocation(line: 563, column: 14, scope: !11836)
!11886 = !DILocation(line: 563, column: 19, scope: !11836)
!11887 = !DILocation(line: 354, column: 2, scope: !11888, inlinedAt: !11844)
!11888 = distinct !DILexicalBlock(scope: !11842, file: !10013, line: 354, column: 2)
!11889 = !{i32 -2145313119}
!11890 = !DILocation(line: 354, column: 2, scope: !11891, inlinedAt: !11844)
!11891 = distinct !DILexicalBlock(scope: !11888, file: !10013, line: 354, column: 2)
!11892 = !DILocalVariable(name: "head__", scope: !11893, file: !3, line: 565, type: !482)
!11893 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 565, column: 10)
!11894 = !DILocation(line: 565, column: 10, scope: !11893)
!11895 = !DILocalVariable(name: "pos__", scope: !11893, file: !3, line: 565, type: !482)
!11896 = !DILocation(line: 565, column: 10, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 565, column: 10)
!11898 = !DILocation(line: 565, column: 10, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 565, column: 10)
!11900 = !DILocalVariable(name: "__mptr", scope: !11901, file: !3, line: 565, type: !466)
!11901 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 565, column: 10)
!11902 = !DILocation(line: 565, column: 10, scope: !11901)
!11903 = !DILocation(line: 565, column: 10, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11901, file: !3, line: 565, column: 10)
!11905 = !DILocation(line: 565, column: 8, scope: !11836)
!11906 = !DILocation(line: 568, column: 7, scope: !11840)
!11907 = !DILocation(line: 568, column: 12, scope: !11840)
!11908 = !DILocation(line: 568, column: 20, scope: !11840)
!11909 = !DILocation(line: 568, column: 23, scope: !11840)
!11910 = !DILocation(line: 568, column: 29, scope: !11840)
!11911 = !DILocation(line: 568, column: 35, scope: !11840)
!11912 = !DILocation(line: 568, column: 27, scope: !11840)
!11913 = !DILocation(line: 568, column: 7, scope: !11836)
!11914 = !DILocation(line: 569, column: 17, scope: !11839)
!11915 = !DILocation(line: 569, column: 22, scope: !11839)
!11916 = !DILocation(line: 394, column: 2, scope: !11917, inlinedAt: !11838)
!11917 = distinct !DILexicalBlock(scope: !11831, file: !10013, line: 394, column: 2)
!11918 = !{i32 -2145310758}
!11919 = !DILocation(line: 394, column: 2, scope: !11920, inlinedAt: !11838)
!11920 = distinct !DILexicalBlock(scope: !11917, file: !10013, line: 394, column: 2)
!11921 = !DILocation(line: 570, column: 4, scope: !11839)
!11922 = !DILocation(line: 573, column: 18, scope: !11836)
!11923 = !DILocation(line: 573, column: 24, scope: !11836)
!11924 = !DILocation(line: 573, column: 3, scope: !11836)
!11925 = !DILocation(line: 575, column: 16, scope: !11836)
!11926 = !DILocation(line: 575, column: 21, scope: !11836)
!11927 = !DILocation(line: 394, column: 2, scope: !11917, inlinedAt: !11835)
!11928 = !DILocation(line: 394, column: 2, scope: !11920, inlinedAt: !11835)
!11929 = !DILocation(line: 577, column: 3, scope: !11836)
!11930 = !DILocation(line: 577, column: 9, scope: !11836)
!11931 = !DILocation(line: 577, column: 18, scope: !11836)
!11932 = !DILocation(line: 579, column: 26, scope: !11836)
!11933 = !DILocation(line: 579, column: 3, scope: !11836)
!11934 = distinct !{!11934, !11884, !11935}
!11935 = !DILocation(line: 580, column: 2, scope: !11829)
!11936 = !DILocation(line: 582, column: 6, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 582, column: 6)
!11938 = !DILocation(line: 582, column: 6, scope: !11829)
!11939 = !DILocation(line: 583, column: 23, scope: !11937)
!11940 = !DILocation(line: 583, column: 29, scope: !11937)
!11941 = !DILocation(line: 583, column: 38, scope: !11937)
!11942 = !DILocation(line: 584, column: 10, scope: !11937)
!11943 = !DILocation(line: 584, column: 15, scope: !11937)
!11944 = !DILocation(line: 584, column: 24, scope: !11937)
!11945 = !DILocation(line: 584, column: 30, scope: !11937)
!11946 = !DILocation(line: 584, column: 41, scope: !11937)
!11947 = !DILocation(line: 584, column: 39, scope: !11937)
!11948 = !DILocation(line: 583, column: 3, scope: !11937)
!11949 = !DILocation(line: 586, column: 2, scope: !11829)
!11950 = !DILocalVariable(name: "__dummy", scope: !11951, file: !3, line: 586, type: !528)
!11951 = distinct !DILexicalBlock(scope: !11952, file: !3, line: 586, column: 2)
!11952 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 586, column: 2)
!11953 = !DILocation(line: 586, column: 2, scope: !11951)
!11954 = !DILocalVariable(name: "__dummy2", scope: !11951, file: !3, line: 586, type: !528)
!11955 = !DILocation(line: 586, column: 2, scope: !11952)
!11956 = !DILocation(line: 586, column: 2, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11952, file: !3, line: 586, column: 2)
!11958 = !DILocation(line: 586, column: 2, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 586, column: 2)
!11960 = !DILocalVariable(name: "__dummy", scope: !11961, file: !3, line: 586, type: !528)
!11961 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 586, column: 2)
!11962 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 586, column: 2)
!11963 = !DILocation(line: 586, column: 2, scope: !11961)
!11964 = !DILocalVariable(name: "__dummy2", scope: !11961, file: !3, line: 586, type: !528)
!11965 = !DILocation(line: 586, column: 2, scope: !11962)
!11966 = !DILocation(line: 586, column: 2, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 586, column: 2)
!11968 = !{i32 -2138999261}
!11969 = !DILocation(line: 586, column: 2, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 586, column: 2)
!11971 = !DILocation(line: 587, column: 1, scope: !11829)
!11972 = distinct !DISubprogram(name: "to_delayed_work", scope: !433, file: !433, line: 158, type: !11973, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11973 = !DISubroutineType(types: !11974)
!11974 = !{!679, !568}
!11975 = !DILocalVariable(name: "work", arg: 1, scope: !11972, file: !433, line: 158, type: !568)
!11976 = !DILocation(line: 158, column: 72, scope: !11972)
!11977 = !DILocalVariable(name: "__mptr", scope: !11978, file: !433, line: 160, type: !466)
!11978 = distinct !DILexicalBlock(scope: !11972, file: !433, line: 160, column: 9)
!11979 = !DILocation(line: 160, column: 9, scope: !11978)
!11980 = !DILocation(line: 160, column: 9, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11978, file: !433, line: 160, column: 9)
!11982 = !DILocation(line: 160, column: 2, scope: !11972)
!11983 = distinct !DISubprogram(name: "kmalloc_array", scope: !375, file: !375, line: 584, type: !10096, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!11984 = !DILocation(line: 445, column: 72, scope: !10510, inlinedAt: !11985)
!11985 = distinct !DILocation(line: 552, column: 10, scope: !10515, inlinedAt: !11986)
!11986 = distinct !DILocation(line: 591, column: 10, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11983, file: !375, line: 590, column: 6)
!11988 = !DILocation(line: 446, column: 9, scope: !10510, inlinedAt: !11985)
!11989 = !DILocation(line: 446, column: 23, scope: !10510, inlinedAt: !11985)
!11990 = !DILocation(line: 448, column: 8, scope: !10510, inlinedAt: !11985)
!11991 = !DILocation(line: 318, column: 67, scope: !10526, inlinedAt: !11992)
!11992 = distinct !DILocation(line: 553, column: 20, scope: !10515, inlinedAt: !11986)
!11993 = !DILocation(line: 346, column: 58, scope: !10532, inlinedAt: !11994)
!11994 = distinct !DILocation(line: 547, column: 11, scope: !10515, inlinedAt: !11986)
!11995 = !DILocation(line: 472, column: 28, scope: !10538, inlinedAt: !11996)
!11996 = distinct !DILocation(line: 481, column: 9, scope: !10543, inlinedAt: !11997)
!11997 = distinct !DILocation(line: 545, column: 11, scope: !10545, inlinedAt: !11986)
!11998 = !DILocation(line: 472, column: 40, scope: !10538, inlinedAt: !11996)
!11999 = !DILocation(line: 472, column: 60, scope: !10538, inlinedAt: !11996)
!12000 = !DILocation(line: 478, column: 51, scope: !10543, inlinedAt: !11997)
!12001 = !DILocation(line: 478, column: 63, scope: !10543, inlinedAt: !11997)
!12002 = !DILocation(line: 480, column: 15, scope: !10543, inlinedAt: !11997)
!12003 = !DILocation(line: 538, column: 45, scope: !10517, inlinedAt: !11986)
!12004 = !DILocation(line: 538, column: 57, scope: !10517, inlinedAt: !11986)
!12005 = !DILocation(line: 542, column: 16, scope: !10515, inlinedAt: !11986)
!12006 = !DILocalVariable(name: "n", arg: 1, scope: !11983, file: !375, line: 584, type: !909)
!12007 = !DILocation(line: 584, column: 42, scope: !11983)
!12008 = !DILocalVariable(name: "size", arg: 2, scope: !11983, file: !375, line: 584, type: !909)
!12009 = !DILocation(line: 584, column: 52, scope: !11983)
!12010 = !DILocalVariable(name: "flags", arg: 3, scope: !11983, file: !375, line: 584, type: !539)
!12011 = !DILocation(line: 584, column: 64, scope: !11983)
!12012 = !DILocalVariable(name: "bytes", scope: !11983, file: !375, line: 586, type: !909)
!12013 = !DILocation(line: 586, column: 9, scope: !11983)
!12014 = !DILocalVariable(name: "__a", scope: !12015, file: !375, line: 588, type: !909)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !375, line: 588, column: 6)
!12016 = distinct !DILexicalBlock(scope: !11983, file: !375, line: 588, column: 6)
!12017 = !DILocation(line: 588, column: 6, scope: !12015)
!12018 = !DILocalVariable(name: "__b", scope: !12015, file: !375, line: 588, type: !909)
!12019 = !DILocalVariable(name: "__d", scope: !12015, file: !375, line: 588, type: !2327)
!12020 = !DILocation(line: 588, column: 6, scope: !12016)
!12021 = !DILocation(line: 588, column: 6, scope: !11983)
!12022 = !DILocation(line: 589, column: 3, scope: !12016)
!12023 = !DILocation(line: 590, column: 27, scope: !11987)
!12024 = !DILocation(line: 590, column: 6, scope: !11987)
!12025 = !DILocation(line: 590, column: 30, scope: !11987)
!12026 = !DILocation(line: 590, column: 54, scope: !11987)
!12027 = !DILocation(line: 590, column: 33, scope: !11987)
!12028 = !DILocation(line: 590, column: 6, scope: !11983)
!12029 = !DILocation(line: 591, column: 18, scope: !11987)
!12030 = !DILocation(line: 591, column: 25, scope: !11987)
!12031 = !DILocation(line: 540, column: 27, scope: !10516, inlinedAt: !11986)
!12032 = !DILocation(line: 540, column: 6, scope: !10516, inlinedAt: !11986)
!12033 = !DILocation(line: 540, column: 6, scope: !10517, inlinedAt: !11986)
!12034 = !DILocation(line: 544, column: 7, scope: !10545, inlinedAt: !11986)
!12035 = !DILocation(line: 544, column: 12, scope: !10545, inlinedAt: !11986)
!12036 = !DILocation(line: 544, column: 7, scope: !10515, inlinedAt: !11986)
!12037 = !DILocation(line: 545, column: 25, scope: !10545, inlinedAt: !11986)
!12038 = !DILocation(line: 545, column: 31, scope: !10545, inlinedAt: !11986)
!12039 = !DILocation(line: 480, column: 33, scope: !10543, inlinedAt: !11997)
!12040 = !DILocation(line: 480, column: 23, scope: !10543, inlinedAt: !11997)
!12041 = !DILocation(line: 481, column: 29, scope: !10543, inlinedAt: !11997)
!12042 = !DILocation(line: 481, column: 35, scope: !10543, inlinedAt: !11997)
!12043 = !DILocation(line: 481, column: 42, scope: !10543, inlinedAt: !11997)
!12044 = !DILocation(line: 474, column: 23, scope: !10538, inlinedAt: !11996)
!12045 = !DILocation(line: 474, column: 29, scope: !10538, inlinedAt: !11996)
!12046 = !DILocation(line: 474, column: 36, scope: !10538, inlinedAt: !11996)
!12047 = !DILocation(line: 474, column: 9, scope: !10538, inlinedAt: !11996)
!12048 = !DILocation(line: 545, column: 4, scope: !10545, inlinedAt: !11986)
!12049 = !DILocation(line: 547, column: 25, scope: !10515, inlinedAt: !11986)
!12050 = !DILocation(line: 348, column: 7, scope: !10589, inlinedAt: !11994)
!12051 = !DILocation(line: 348, column: 6, scope: !10532, inlinedAt: !11994)
!12052 = !DILocation(line: 349, column: 3, scope: !10589, inlinedAt: !11994)
!12053 = !DILocation(line: 351, column: 6, scope: !10593, inlinedAt: !11994)
!12054 = !DILocation(line: 351, column: 11, scope: !10593, inlinedAt: !11994)
!12055 = !DILocation(line: 351, column: 6, scope: !10532, inlinedAt: !11994)
!12056 = !DILocation(line: 352, column: 3, scope: !10593, inlinedAt: !11994)
!12057 = !DILocation(line: 354, column: 32, scope: !10598, inlinedAt: !11994)
!12058 = !DILocation(line: 354, column: 37, scope: !10598, inlinedAt: !11994)
!12059 = !DILocation(line: 354, column: 42, scope: !10598, inlinedAt: !11994)
!12060 = !DILocation(line: 354, column: 45, scope: !10598, inlinedAt: !11994)
!12061 = !DILocation(line: 354, column: 50, scope: !10598, inlinedAt: !11994)
!12062 = !DILocation(line: 354, column: 6, scope: !10532, inlinedAt: !11994)
!12063 = !DILocation(line: 355, column: 3, scope: !10598, inlinedAt: !11994)
!12064 = !DILocation(line: 356, column: 32, scope: !10606, inlinedAt: !11994)
!12065 = !DILocation(line: 356, column: 37, scope: !10606, inlinedAt: !11994)
!12066 = !DILocation(line: 356, column: 43, scope: !10606, inlinedAt: !11994)
!12067 = !DILocation(line: 356, column: 46, scope: !10606, inlinedAt: !11994)
!12068 = !DILocation(line: 356, column: 51, scope: !10606, inlinedAt: !11994)
!12069 = !DILocation(line: 356, column: 6, scope: !10532, inlinedAt: !11994)
!12070 = !DILocation(line: 357, column: 3, scope: !10606, inlinedAt: !11994)
!12071 = !DILocation(line: 358, column: 6, scope: !10614, inlinedAt: !11994)
!12072 = !DILocation(line: 358, column: 11, scope: !10614, inlinedAt: !11994)
!12073 = !DILocation(line: 358, column: 6, scope: !10532, inlinedAt: !11994)
!12074 = !DILocation(line: 358, column: 26, scope: !10614, inlinedAt: !11994)
!12075 = !DILocation(line: 359, column: 6, scope: !10619, inlinedAt: !11994)
!12076 = !DILocation(line: 359, column: 11, scope: !10619, inlinedAt: !11994)
!12077 = !DILocation(line: 359, column: 6, scope: !10532, inlinedAt: !11994)
!12078 = !DILocation(line: 359, column: 26, scope: !10619, inlinedAt: !11994)
!12079 = !DILocation(line: 360, column: 6, scope: !10624, inlinedAt: !11994)
!12080 = !DILocation(line: 360, column: 11, scope: !10624, inlinedAt: !11994)
!12081 = !DILocation(line: 360, column: 6, scope: !10532, inlinedAt: !11994)
!12082 = !DILocation(line: 360, column: 26, scope: !10624, inlinedAt: !11994)
!12083 = !DILocation(line: 361, column: 6, scope: !10629, inlinedAt: !11994)
!12084 = !DILocation(line: 361, column: 11, scope: !10629, inlinedAt: !11994)
!12085 = !DILocation(line: 361, column: 6, scope: !10532, inlinedAt: !11994)
!12086 = !DILocation(line: 361, column: 26, scope: !10629, inlinedAt: !11994)
!12087 = !DILocation(line: 362, column: 6, scope: !10634, inlinedAt: !11994)
!12088 = !DILocation(line: 362, column: 11, scope: !10634, inlinedAt: !11994)
!12089 = !DILocation(line: 362, column: 6, scope: !10532, inlinedAt: !11994)
!12090 = !DILocation(line: 362, column: 26, scope: !10634, inlinedAt: !11994)
!12091 = !DILocation(line: 363, column: 6, scope: !10639, inlinedAt: !11994)
!12092 = !DILocation(line: 363, column: 11, scope: !10639, inlinedAt: !11994)
!12093 = !DILocation(line: 363, column: 6, scope: !10532, inlinedAt: !11994)
!12094 = !DILocation(line: 363, column: 26, scope: !10639, inlinedAt: !11994)
!12095 = !DILocation(line: 364, column: 6, scope: !10644, inlinedAt: !11994)
!12096 = !DILocation(line: 364, column: 11, scope: !10644, inlinedAt: !11994)
!12097 = !DILocation(line: 364, column: 6, scope: !10532, inlinedAt: !11994)
!12098 = !DILocation(line: 364, column: 26, scope: !10644, inlinedAt: !11994)
!12099 = !DILocation(line: 365, column: 6, scope: !10649, inlinedAt: !11994)
!12100 = !DILocation(line: 365, column: 11, scope: !10649, inlinedAt: !11994)
!12101 = !DILocation(line: 365, column: 6, scope: !10532, inlinedAt: !11994)
!12102 = !DILocation(line: 365, column: 26, scope: !10649, inlinedAt: !11994)
!12103 = !DILocation(line: 366, column: 6, scope: !10654, inlinedAt: !11994)
!12104 = !DILocation(line: 366, column: 11, scope: !10654, inlinedAt: !11994)
!12105 = !DILocation(line: 366, column: 6, scope: !10532, inlinedAt: !11994)
!12106 = !DILocation(line: 366, column: 26, scope: !10654, inlinedAt: !11994)
!12107 = !DILocation(line: 367, column: 6, scope: !10659, inlinedAt: !11994)
!12108 = !DILocation(line: 367, column: 11, scope: !10659, inlinedAt: !11994)
!12109 = !DILocation(line: 367, column: 6, scope: !10532, inlinedAt: !11994)
!12110 = !DILocation(line: 367, column: 26, scope: !10659, inlinedAt: !11994)
!12111 = !DILocation(line: 368, column: 6, scope: !10664, inlinedAt: !11994)
!12112 = !DILocation(line: 368, column: 11, scope: !10664, inlinedAt: !11994)
!12113 = !DILocation(line: 368, column: 6, scope: !10532, inlinedAt: !11994)
!12114 = !DILocation(line: 368, column: 26, scope: !10664, inlinedAt: !11994)
!12115 = !DILocation(line: 369, column: 6, scope: !10669, inlinedAt: !11994)
!12116 = !DILocation(line: 369, column: 11, scope: !10669, inlinedAt: !11994)
!12117 = !DILocation(line: 369, column: 6, scope: !10532, inlinedAt: !11994)
!12118 = !DILocation(line: 369, column: 26, scope: !10669, inlinedAt: !11994)
!12119 = !DILocation(line: 370, column: 6, scope: !10674, inlinedAt: !11994)
!12120 = !DILocation(line: 370, column: 11, scope: !10674, inlinedAt: !11994)
!12121 = !DILocation(line: 370, column: 6, scope: !10532, inlinedAt: !11994)
!12122 = !DILocation(line: 370, column: 26, scope: !10674, inlinedAt: !11994)
!12123 = !DILocation(line: 371, column: 6, scope: !10679, inlinedAt: !11994)
!12124 = !DILocation(line: 371, column: 11, scope: !10679, inlinedAt: !11994)
!12125 = !DILocation(line: 371, column: 6, scope: !10532, inlinedAt: !11994)
!12126 = !DILocation(line: 371, column: 26, scope: !10679, inlinedAt: !11994)
!12127 = !DILocation(line: 372, column: 6, scope: !10684, inlinedAt: !11994)
!12128 = !DILocation(line: 372, column: 11, scope: !10684, inlinedAt: !11994)
!12129 = !DILocation(line: 372, column: 6, scope: !10532, inlinedAt: !11994)
!12130 = !DILocation(line: 372, column: 26, scope: !10684, inlinedAt: !11994)
!12131 = !DILocation(line: 373, column: 6, scope: !10689, inlinedAt: !11994)
!12132 = !DILocation(line: 373, column: 11, scope: !10689, inlinedAt: !11994)
!12133 = !DILocation(line: 373, column: 6, scope: !10532, inlinedAt: !11994)
!12134 = !DILocation(line: 373, column: 26, scope: !10689, inlinedAt: !11994)
!12135 = !DILocation(line: 374, column: 6, scope: !10694, inlinedAt: !11994)
!12136 = !DILocation(line: 374, column: 11, scope: !10694, inlinedAt: !11994)
!12137 = !DILocation(line: 374, column: 6, scope: !10532, inlinedAt: !11994)
!12138 = !DILocation(line: 374, column: 26, scope: !10694, inlinedAt: !11994)
!12139 = !DILocation(line: 375, column: 6, scope: !10699, inlinedAt: !11994)
!12140 = !DILocation(line: 375, column: 11, scope: !10699, inlinedAt: !11994)
!12141 = !DILocation(line: 375, column: 6, scope: !10532, inlinedAt: !11994)
!12142 = !DILocation(line: 375, column: 27, scope: !10699, inlinedAt: !11994)
!12143 = !DILocation(line: 376, column: 6, scope: !10704, inlinedAt: !11994)
!12144 = !DILocation(line: 376, column: 11, scope: !10704, inlinedAt: !11994)
!12145 = !DILocation(line: 376, column: 6, scope: !10532, inlinedAt: !11994)
!12146 = !DILocation(line: 376, column: 32, scope: !10704, inlinedAt: !11994)
!12147 = !DILocation(line: 377, column: 6, scope: !10709, inlinedAt: !11994)
!12148 = !DILocation(line: 377, column: 11, scope: !10709, inlinedAt: !11994)
!12149 = !DILocation(line: 377, column: 6, scope: !10532, inlinedAt: !11994)
!12150 = !DILocation(line: 377, column: 32, scope: !10709, inlinedAt: !11994)
!12151 = !DILocation(line: 378, column: 6, scope: !10714, inlinedAt: !11994)
!12152 = !DILocation(line: 378, column: 11, scope: !10714, inlinedAt: !11994)
!12153 = !DILocation(line: 378, column: 6, scope: !10532, inlinedAt: !11994)
!12154 = !DILocation(line: 378, column: 32, scope: !10714, inlinedAt: !11994)
!12155 = !DILocation(line: 379, column: 6, scope: !10719, inlinedAt: !11994)
!12156 = !DILocation(line: 379, column: 11, scope: !10719, inlinedAt: !11994)
!12157 = !DILocation(line: 379, column: 6, scope: !10532, inlinedAt: !11994)
!12158 = !DILocation(line: 379, column: 33, scope: !10719, inlinedAt: !11994)
!12159 = !DILocation(line: 380, column: 6, scope: !10724, inlinedAt: !11994)
!12160 = !DILocation(line: 380, column: 11, scope: !10724, inlinedAt: !11994)
!12161 = !DILocation(line: 380, column: 6, scope: !10532, inlinedAt: !11994)
!12162 = !DILocation(line: 380, column: 33, scope: !10724, inlinedAt: !11994)
!12163 = !DILocation(line: 381, column: 6, scope: !10729, inlinedAt: !11994)
!12164 = !DILocation(line: 381, column: 11, scope: !10729, inlinedAt: !11994)
!12165 = !DILocation(line: 381, column: 6, scope: !10532, inlinedAt: !11994)
!12166 = !DILocation(line: 381, column: 33, scope: !10729, inlinedAt: !11994)
!12167 = !DILocation(line: 382, column: 2, scope: !10734, inlinedAt: !11994)
!12168 = !DILocation(line: 382, column: 2, scope: !10738, inlinedAt: !11994)
!12169 = !DILocation(line: 382, column: 2, scope: !10739, inlinedAt: !11994)
!12170 = !DILocation(line: 386, column: 1, scope: !10532, inlinedAt: !11994)
!12171 = !DILocation(line: 547, column: 9, scope: !10515, inlinedAt: !11986)
!12172 = !DILocation(line: 549, column: 8, scope: !10745, inlinedAt: !11986)
!12173 = !DILocation(line: 549, column: 7, scope: !10515, inlinedAt: !11986)
!12174 = !DILocation(line: 550, column: 4, scope: !10745, inlinedAt: !11986)
!12175 = !DILocation(line: 553, column: 33, scope: !10515, inlinedAt: !11986)
!12176 = !DILocation(line: 325, column: 6, scope: !10750, inlinedAt: !11992)
!12177 = !DILocation(line: 325, column: 6, scope: !10526, inlinedAt: !11992)
!12178 = !DILocation(line: 326, column: 3, scope: !10750, inlinedAt: !11992)
!12179 = !DILocation(line: 332, column: 9, scope: !10526, inlinedAt: !11992)
!12180 = !DILocation(line: 332, column: 15, scope: !10526, inlinedAt: !11992)
!12181 = !DILocation(line: 332, column: 2, scope: !10526, inlinedAt: !11992)
!12182 = !DILocation(line: 336, column: 1, scope: !10526, inlinedAt: !11992)
!12183 = !DILocation(line: 553, column: 5, scope: !10515, inlinedAt: !11986)
!12184 = !DILocation(line: 553, column: 41, scope: !10515, inlinedAt: !11986)
!12185 = !DILocation(line: 554, column: 5, scope: !10515, inlinedAt: !11986)
!12186 = !DILocation(line: 554, column: 12, scope: !10515, inlinedAt: !11986)
!12187 = !DILocation(line: 448, column: 31, scope: !10510, inlinedAt: !11985)
!12188 = !DILocation(line: 448, column: 34, scope: !10510, inlinedAt: !11985)
!12189 = !DILocation(line: 448, column: 14, scope: !10510, inlinedAt: !11985)
!12190 = !DILocation(line: 450, column: 22, scope: !10510, inlinedAt: !11985)
!12191 = !DILocation(line: 450, column: 25, scope: !10510, inlinedAt: !11985)
!12192 = !DILocation(line: 450, column: 30, scope: !10510, inlinedAt: !11985)
!12193 = !DILocation(line: 450, column: 36, scope: !10510, inlinedAt: !11985)
!12194 = !DILocation(line: 450, column: 8, scope: !10510, inlinedAt: !11985)
!12195 = !DILocation(line: 450, column: 6, scope: !10510, inlinedAt: !11985)
!12196 = !DILocation(line: 451, column: 9, scope: !10510, inlinedAt: !11985)
!12197 = !DILocation(line: 552, column: 3, scope: !10515, inlinedAt: !11986)
!12198 = !DILocation(line: 557, column: 19, scope: !10517, inlinedAt: !11986)
!12199 = !DILocation(line: 557, column: 25, scope: !10517, inlinedAt: !11986)
!12200 = !DILocation(line: 557, column: 9, scope: !10517, inlinedAt: !11986)
!12201 = !DILocation(line: 557, column: 2, scope: !10517, inlinedAt: !11986)
!12202 = !DILocation(line: 558, column: 1, scope: !10517, inlinedAt: !11986)
!12203 = !DILocation(line: 591, column: 3, scope: !11987)
!12204 = !DILocation(line: 592, column: 19, scope: !11983)
!12205 = !DILocation(line: 592, column: 26, scope: !11983)
!12206 = !DILocation(line: 592, column: 9, scope: !11983)
!12207 = !DILocation(line: 592, column: 2, scope: !11983)
!12208 = !DILocation(line: 593, column: 1, scope: !11983)
!12209 = distinct !DISubprogram(name: "__must_check_overflow", scope: !12210, file: !12210, line: 52, type: !12211, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!12210 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!12211 = !DISubroutineType(types: !12212)
!12212 = !{!1066, !1066}
!12213 = !DILocalVariable(name: "overflow", arg: 1, scope: !12209, file: !12210, line: 52, type: !1066)
!12214 = !DILocation(line: 52, column: 60, scope: !12209)
!12215 = !DILocation(line: 54, column: 9, scope: !12209)
!12216 = !DILocation(line: 54, column: 2, scope: !12209)
!12217 = distinct !DISubprogram(name: "pfn_to_mfn", scope: !10163, file: !10163, line: 164, type: !10164, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!12218 = !DILocalVariable(name: "pfn", arg: 1, scope: !12217, file: !10163, line: 164, type: !528)
!12219 = !DILocation(line: 164, column: 54, scope: !12217)
!12220 = !DILocalVariable(name: "mfn", scope: !12217, file: !10163, line: 166, type: !528)
!12221 = !DILocation(line: 166, column: 16, scope: !12217)
!12222 = !DILocation(line: 173, column: 6, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12217, file: !10163, line: 173, column: 6)
!12224 = !DILocation(line: 173, column: 6, scope: !12217)
!12225 = !DILocation(line: 174, column: 10, scope: !12223)
!12226 = !DILocation(line: 174, column: 3, scope: !12223)
!12227 = !DILocation(line: 176, column: 21, scope: !12217)
!12228 = !DILocation(line: 176, column: 8, scope: !12217)
!12229 = !DILocation(line: 176, column: 6, scope: !12217)
!12230 = !DILocation(line: 178, column: 6, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12217, file: !10163, line: 178, column: 6)
!12232 = !DILocation(line: 178, column: 10, scope: !12231)
!12233 = !DILocation(line: 178, column: 6, scope: !12217)
!12234 = !DILocation(line: 179, column: 7, scope: !12231)
!12235 = !DILocation(line: 179, column: 3, scope: !12231)
!12236 = !DILocation(line: 181, column: 9, scope: !12217)
!12237 = !DILocation(line: 181, column: 2, scope: !12217)
!12238 = !DILocation(line: 182, column: 1, scope: !12217)
!12239 = distinct !DISubprogram(name: "__pfn_to_mfn", scope: !10163, file: !10163, line: 141, type: !10164, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!12240 = !DILocalVariable(name: "pfn", arg: 1, scope: !12239, file: !10163, line: 141, type: !528)
!12241 = !DILocation(line: 141, column: 56, scope: !12239)
!12242 = !DILocalVariable(name: "mfn", scope: !12239, file: !10163, line: 143, type: !528)
!12243 = !DILocation(line: 143, column: 16, scope: !12239)
!12244 = !DILocation(line: 145, column: 6, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12239, file: !10163, line: 145, column: 6)
!12246 = !DILocation(line: 145, column: 12, scope: !12245)
!12247 = !DILocation(line: 145, column: 10, scope: !12245)
!12248 = !DILocation(line: 145, column: 6, scope: !12239)
!12249 = !DILocation(line: 146, column: 9, scope: !12245)
!12250 = !DILocation(line: 146, column: 22, scope: !12245)
!12251 = !DILocation(line: 146, column: 7, scope: !12245)
!12252 = !DILocation(line: 146, column: 3, scope: !12245)
!12253 = !DILocation(line: 147, column: 11, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12245, file: !10163, line: 147, column: 11)
!12255 = !DILocation(line: 147, column: 11, scope: !12245)
!12256 = !DILocation(line: 148, column: 30, scope: !12254)
!12257 = !DILocation(line: 148, column: 10, scope: !12254)
!12258 = !DILocation(line: 148, column: 3, scope: !12254)
!12259 = !DILocation(line: 150, column: 10, scope: !12254)
!12260 = !DILocation(line: 150, column: 3, scope: !12254)
!12261 = !DILocation(line: 152, column: 6, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12239, file: !10163, line: 152, column: 6)
!12263 = !DILocation(line: 152, column: 6, scope: !12239)
!12264 = !DILocation(line: 153, column: 30, scope: !12262)
!12265 = !DILocation(line: 153, column: 10, scope: !12262)
!12266 = !DILocation(line: 153, column: 3, scope: !12262)
!12267 = !DILocation(line: 155, column: 9, scope: !12239)
!12268 = !DILocation(line: 155, column: 2, scope: !12239)
!12269 = !DILocation(line: 156, column: 1, scope: !12239)
!12270 = distinct !DISubprogram(name: "test_bit", scope: !12271, file: !12271, line: 132, type: !12272, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!12271 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12272 = !DISubroutineType(types: !12273)
!12273 = !{!1066, !434, !12274}
!12274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12275, size: 64)
!12275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12276)
!12276 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !528)
!12277 = !DILocalVariable(name: "nr", arg: 1, scope: !12278, file: !10830, line: 210, type: !434)
!12278 = distinct !DISubprogram(name: "variable_test_bit", scope: !10830, file: !10830, line: 210, type: !12272, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!12279 = !DILocation(line: 210, column: 52, scope: !12278, inlinedAt: !12280)
!12280 = distinct !DILocation(line: 135, column: 9, scope: !12270)
!12281 = !DILocalVariable(name: "addr", arg: 2, scope: !12278, file: !10830, line: 210, type: !12274)
!12282 = !DILocation(line: 210, column: 86, scope: !12278, inlinedAt: !12280)
!12283 = !DILocalVariable(name: "oldbit", scope: !12278, file: !10830, line: 212, type: !1066)
!12284 = !DILocation(line: 212, column: 7, scope: !12278, inlinedAt: !12280)
!12285 = !DILocalVariable(name: "nr", arg: 1, scope: !12286, file: !10830, line: 204, type: !434)
!12286 = distinct !DISubprogram(name: "constant_test_bit", scope: !10830, file: !10830, line: 204, type: !12272, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!12287 = !DILocation(line: 204, column: 52, scope: !12286, inlinedAt: !12288)
!12288 = distinct !DILocation(line: 135, column: 9, scope: !12270)
!12289 = !DILocalVariable(name: "addr", arg: 2, scope: !12286, file: !10830, line: 204, type: !12274)
!12290 = !DILocation(line: 204, column: 86, scope: !12286, inlinedAt: !12288)
!12291 = !DILocalVariable(name: "v", arg: 1, scope: !12292, file: !12293, line: 69, type: !12296)
!12292 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !12293, file: !12293, line: 69, type: !12294, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!12293 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12294 = !DISubroutineType(types: !12295)
!12295 = !{null, !12296, !909}
!12296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12297, size: 64)
!12297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12298)
!12298 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!12299 = !DILocation(line: 69, column: 73, scope: !12292, inlinedAt: !12300)
!12300 = distinct !DILocation(line: 134, column: 2, scope: !12270)
!12301 = !DILocalVariable(name: "size", arg: 2, scope: !12292, file: !12293, line: 69, type: !909)
!12302 = !DILocation(line: 69, column: 83, scope: !12292, inlinedAt: !12300)
!12303 = !DILocalVariable(name: "nr", arg: 1, scope: !12270, file: !12271, line: 132, type: !434)
!12304 = !DILocation(line: 132, column: 34, scope: !12270)
!12305 = !DILocalVariable(name: "addr", arg: 2, scope: !12270, file: !12271, line: 132, type: !12274)
!12306 = !DILocation(line: 132, column: 68, scope: !12270)
!12307 = !DILocation(line: 134, column: 25, scope: !12270)
!12308 = !DILocation(line: 134, column: 32, scope: !12270)
!12309 = !DILocation(line: 134, column: 30, scope: !12270)
!12310 = !DILocation(line: 71, column: 19, scope: !12292, inlinedAt: !12300)
!12311 = !DILocation(line: 71, column: 22, scope: !12292, inlinedAt: !12300)
!12312 = !DILocation(line: 71, column: 2, scope: !12292, inlinedAt: !12300)
!12313 = !DILocation(line: 72, column: 2, scope: !12292, inlinedAt: !12300)
!12314 = !DILocation(line: 135, column: 9, scope: !12270)
!12315 = !DILocation(line: 206, column: 19, scope: !12286, inlinedAt: !12288)
!12316 = !DILocation(line: 206, column: 22, scope: !12286, inlinedAt: !12288)
!12317 = !DILocation(line: 206, column: 15, scope: !12286, inlinedAt: !12288)
!12318 = !DILocation(line: 207, column: 4, scope: !12286, inlinedAt: !12288)
!12319 = !DILocation(line: 207, column: 9, scope: !12286, inlinedAt: !12288)
!12320 = !DILocation(line: 207, column: 12, scope: !12286, inlinedAt: !12288)
!12321 = !DILocation(line: 206, column: 44, scope: !12286, inlinedAt: !12288)
!12322 = !DILocation(line: 207, column: 37, scope: !12286, inlinedAt: !12288)
!12323 = !DILocation(line: 217, column: 33, scope: !12278, inlinedAt: !12280)
!12324 = !DILocation(line: 217, column: 46, scope: !12278, inlinedAt: !12280)
!12325 = !DILocation(line: 214, column: 2, scope: !12278, inlinedAt: !12280)
!12326 = !{i32 -2147130480, i32 -2147130420}
!12327 = !DILocation(line: 219, column: 9, scope: !12278, inlinedAt: !12280)
!12328 = !DILocation(line: 135, column: 2, scope: !12270)
!12329 = distinct !DISubprogram(name: "kasan_check_read", scope: !12330, file: !12330, line: 34, type: !12331, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!12330 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12331 = !DISubroutineType(types: !12332)
!12332 = !{!1066, !12296, !6}
!12333 = !DILocalVariable(name: "p", arg: 1, scope: !12329, file: !12330, line: 34, type: !12296)
!12334 = !DILocation(line: 34, column: 58, scope: !12329)
!12335 = !DILocalVariable(name: "size", arg: 2, scope: !12329, file: !12330, line: 34, type: !6)
!12336 = !DILocation(line: 34, column: 74, scope: !12329)
!12337 = !DILocation(line: 36, column: 2, scope: !12329)
!12338 = distinct !DISubprogram(name: "kcsan_check_access", scope: !12339, file: !12339, line: 178, type: !12340, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !606)
!12339 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12340 = !DISubroutineType(types: !12341)
!12341 = !{null, !12296, !909, !97}
!12342 = !DILocalVariable(name: "ptr", arg: 1, scope: !12338, file: !12339, line: 178, type: !12296)
!12343 = !DILocation(line: 178, column: 60, scope: !12338)
!12344 = !DILocalVariable(name: "size", arg: 2, scope: !12338, file: !12339, line: 178, type: !909)
!12345 = !DILocation(line: 178, column: 72, scope: !12338)
!12346 = !DILocalVariable(name: "type", arg: 3, scope: !12338, file: !12339, line: 179, type: !97)
!12347 = !DILocation(line: 179, column: 15, scope: !12338)
!12348 = !DILocation(line: 179, column: 23, scope: !12338)
