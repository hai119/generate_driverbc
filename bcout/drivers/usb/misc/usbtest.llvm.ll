; ModuleID = '../bcout/drivers/usb/misc/usbtest.llvm.bc'
source_filename = "drivers/usb/misc/usbtest.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_usbtest_init6:\09\09\09"
module asm ".long\09usbtest_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.usb_driver = type { i8*, i32 (%struct.usb_interface*, %struct.usb_device_id*)*, void (%struct.usb_interface*)*, i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, %struct.usb_device_id*, %struct.attribute_group**, %struct.usb_dynids, %struct.usbdrv_wrap, i8 }
%struct.usb_interface = type { %struct.usb_host_interface*, %struct.usb_host_interface*, i32, %struct.usb_interface_assoc_descriptor*, i32, i32, i8, %struct.device, %struct.device*, %struct.work_struct }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, i8*, %struct.usb_host_endpoint*, i8* }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, %struct.usb_ssp_isoc_ep_comp_descriptor, i8, %struct.list_head, i8*, %struct.ep_device*, i8*, i32, i32, i32, [4 x i8] }>
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ssp_isoc_ep_comp_descriptor = type { i8, i8, i16, i32 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.ep_device = type opaque
%struct.usb_interface_assoc_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.spinlock = type { %union.anon.4 }
%union.anon.4 = type { %struct.raw_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.usb_device_id = type { i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i64 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.usb_dynids = type { %struct.spinlock, %struct.list_head }
%struct.usbdrv_wrap = type { %struct.device_driver, i32 }
%struct.kmem_cache = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.usbtest_info = type { i8*, i8, i8, i8, i32 }
%struct.usb_device = type <{ i32, [16 x i8], i32, i32, i32, i32, i32, %struct.usb_tt*, i32, [2 x i32], [4 x i8], %struct.usb_device*, %struct.usb_bus*, %struct.usb_host_endpoint, %struct.device, %struct.usb_device_descriptor, [6 x i8], %struct.usb_host_bos*, %struct.usb_host_config*, %struct.usb_host_config*, [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*], i8**, i16, i8, i8, i8, i16, i8, i32, [4 x i8], i8*, i8*, i8*, %struct.list_head, i32, i32, %struct.atomic_t, [4 x i8], i64, i64, i8, [7 x i8], %struct.wusb_dev*, i32, i32, %struct.usb2_lpm_parameters, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32, i16, i8, i8 }>
%struct.usb_tt = type opaque
%struct.usb_bus = type { %struct.device*, %struct.device*, i32, i8*, i8, i8, i8, i32, i32, %struct.mutex, %struct.usb_devmap, %struct.usb_device*, %struct.usb_bus*, i32, i32, i32, i32 }
%struct.usb_devmap = type { [2 x i64] }
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb_host_bos = type { %struct.usb_bos_descriptor*, %struct.usb_ext_cap_descriptor*, %struct.usb_ss_cap_descriptor*, %struct.usb_ssp_cap_descriptor*, %struct.usb_ss_container_id_descriptor*, %struct.usb_ptm_cap_descriptor* }
%struct.usb_bos_descriptor = type <{ i8, i8, i16, i8 }>
%struct.usb_ext_cap_descriptor = type <{ i8, i8, i8, i32 }>
%struct.usb_ss_cap_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i16 }
%struct.usb_ssp_cap_descriptor = type { i8, i8, i8, i8, i32, i16, i16, [1 x i32] }
%struct.usb_ss_container_id_descriptor = type { i8, i8, i8, i8, [16 x i8] }
%struct.usb_ptm_cap_descriptor = type { i8, i8, i8 }
%struct.usb_host_config = type { %struct.usb_config_descriptor, i8*, [16 x %struct.usb_interface_assoc_descriptor*], [32 x %struct.usb_interface*], [32 x %struct.usb_interface_cache*], i8*, i32 }
%struct.usb_config_descriptor = type <{ i8, i8, i16, i8, i8, i8, i8, i8 }>
%struct.usb_interface_cache = type { i32, %struct.kref, [0 x %struct.usb_host_interface] }
%struct.wusb_dev = type opaque
%struct.usb2_lpm_parameters = type { i32, i32 }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.usbtest_dev = type { %struct.usb_interface*, %struct.usbtest_info*, i32, i32, i32, i32, i32, i32, %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor*, %struct.mutex, i8* }
%struct.usbtest_param_64 = type { i32, i32, i32, i32, i32, i64, i64 }
%struct.usbtest_param_32 = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.urb = type { %struct.kref, i32, i8*, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.usb_anchor*, %struct.usb_device*, %struct.usb_host_endpoint*, i32, i32, i32, i32, i8*, i64, %struct.scatterlist*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, i8*, void (%struct.urb*)*, [0 x %struct.usb_iso_packet_descriptor] }
%struct.usb_anchor = type { %struct.list_head, %struct.wait_queue_head, %struct.spinlock, %struct.atomic_t, i8 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.usb_iso_packet_descriptor = type { i32, i32, i32, i32 }
%struct.usb_sg_request = type { i32, i64, %struct.spinlock, %struct.usb_device*, i32, i32, %struct.urb**, i32, %struct.completion }
%struct.sg_timeout = type { %struct.timer_list, %struct.usb_sg_request* }
%struct.usb_dev_cap_header = type { i8, i8, i8 }
%struct.usb_qualifier_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i8, i8 }
%struct.ctrl_ctx = type { %struct.spinlock, %struct.usbtest_dev*, %struct.completion, i32, i32, i32, %struct.urb**, %struct.usbtest_param_32*, i32 }
%struct.usb_ctrlrequest = type { i8, i8, i16, i16, i16 }
%struct.subcase = type { %struct.usb_ctrlrequest, i32, i32 }
%struct.transfer_context = type { i32, i32, %struct.spinlock, %struct.completion, i32, i64, i64, %struct.usbtest_dev*, i8 }
%struct.queued_ctx = type { %struct.completion, %struct.atomic_t, i32, i32, %struct.urb** }

@__param_str_alt = internal constant [12 x i8] c"usbtest.alt\00", align 1, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@override_alt = internal global i32 -1, align 4, !dbg !4325
@__param_alt = internal constant %struct.kernel_param { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__param_str_alt, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @override_alt to i8*) } }, section "__param", align 8, !dbg !4188
@__UNIQUE_ID_alttype236 = internal constant [25 x i8] c"usbtest.parmtype=alt:int\00", section ".modinfo", align 1, !dbg !4240
@__UNIQUE_ID_alt237 = internal constant [55 x i8] c"usbtest.parm=alt:>= 0 to override altsetting selection\00", section ".modinfo", align 1, !dbg !4245
@__param_str_pattern = internal constant [16 x i8] c"usbtest.pattern\00", align 16, !dbg !4327
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@mod_pattern = internal global i32 0, align 4, !dbg !4317
@__param_pattern = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_pattern, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @mod_pattern to i8*) } }, section "__param", align 8, !dbg !4250
@__UNIQUE_ID_patterntype238 = internal constant [30 x i8] c"usbtest.parmtype=pattern:uint\00", section ".modinfo", align 1, !dbg !4252
@__UNIQUE_ID_mod_pattern239 = internal constant [51 x i8] c"usbtest.parm=mod_pattern:i/o pattern (0 == zeroes)\00", section ".modinfo", align 1, !dbg !4257
@__param_str_realworld = internal constant [18 x i8] c"usbtest.realworld\00", align 16, !dbg !4330
@realworld = internal global i32 1, align 4, !dbg !4335
@__param_realworld = internal constant %struct.kernel_param { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__param_str_realworld, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @realworld to i8*) } }, section "__param", align 8, !dbg !4262
@__UNIQUE_ID_realworldtype241 = internal constant [32 x i8] c"usbtest.parmtype=realworld:uint\00", section ".modinfo", align 1, !dbg !4264
@__UNIQUE_ID_realworld242 = internal constant [64 x i8] c"usbtest.parm=realworld:clear to demand stricter spec compliance\00", section ".modinfo", align 1, !dbg !4267
@__param_str_force_interrupt = internal constant [24 x i8] c"usbtest.force_interrupt\00", align 16, !dbg !4337
@force_interrupt = internal global i32 0, align 4, !dbg !4319
@__param_force_interrupt = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_force_interrupt, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @force_interrupt to i8*) } }, section "__param", align 8, !dbg !4270
@__UNIQUE_ID_force_interrupttype246 = internal constant [38 x i8] c"usbtest.parmtype=force_interrupt:uint\00", section ".modinfo", align 1, !dbg !4272
@__UNIQUE_ID_force_interrupt247 = internal constant [62 x i8] c"usbtest.parm=force_interrupt:0 = test default; else interrupt\00", section ".modinfo", align 1, !dbg !4277
@__param_str_vendor = internal constant [15 x i8] c"usbtest.vendor\00", align 1, !dbg !4342
@param_ops_ushort = external dso_local constant %struct.kernel_param_ops, align 8
@vendor = internal global i16 0, align 2, !dbg !4321
@__param_vendor = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_vendor, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_ushort, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i16* @vendor to i8*) } }, section "__param", align 8, !dbg !4282
@__UNIQUE_ID_vendortype248 = internal constant [31 x i8] c"usbtest.parmtype=vendor:ushort\00", section ".modinfo", align 1, !dbg !4284
@__UNIQUE_ID_vendor249 = internal constant [46 x i8] c"usbtest.parm=vendor:vendor code (from usb-if)\00", section ".modinfo", align 1, !dbg !4289
@__param_str_product = internal constant [16 x i8] c"usbtest.product\00", align 16, !dbg !4347
@product = internal global i16 0, align 2, !dbg !4323
@__param_product = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_product, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_ushort, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i16* @product to i8*) } }, section "__param", align 8, !dbg !4294
@__UNIQUE_ID_producttype250 = internal constant [32 x i8] c"usbtest.parmtype=product:ushort\00", section ".modinfo", align 1, !dbg !4296
@__UNIQUE_ID_product251 = internal constant [48 x i8] c"usbtest.parm=product:product code (from vendor)\00", section ".modinfo", align 1, !dbg !4298
@__UNIQUE_ID___addressable_usbtest_init252 = internal global i8* bitcast (i32 ()* @usbtest_init to i8*), section ".discard.addressable", align 8, !dbg !4303
@usbtest_driver = internal global %struct.usb_driver { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 (%struct.usb_interface*, %struct.usb_device_id*)* @usbtest_probe, void (%struct.usb_interface*)* @usbtest_disconnect, i32 (%struct.usb_interface*, i32, i8*)* @usbtest_ioctl, i32 (%struct.usb_interface*, i32)* @usbtest_suspend, i32 (%struct.usb_interface*)* @usbtest_resume, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, %struct.usb_device_id* getelementptr inbounds ([9 x %struct.usb_device_id], [9 x %struct.usb_device_id]* @id_table, i32 0, i32 0), %struct.attribute_group** null, %struct.usb_dynids zeroinitializer, %struct.usbdrv_wrap zeroinitializer, i8 0 }, align 8, !dbg !4349
@__exitcall_usbtest_exit = internal global void ()* @usbtest_exit, section ".exitcall.exit", align 8, !dbg !4305
@__UNIQUE_ID_description253 = internal constant [48 x i8] c"usbtest.description=USB Core/HCD Testing Driver\00", section ".modinfo", align 1, !dbg !4310
@__UNIQUE_ID_file254 = internal constant [38 x i8] c"usbtest.file=drivers/usb/misc/usbtest\00", section ".modinfo", align 1, !dbg !4312
@__UNIQUE_ID_license255 = internal constant [20 x i8] c"usbtest.license=GPL\00", section ".modinfo", align 1, !dbg !4314
@.str = private unnamed_addr constant [8 x i8] c"usbtest\00", align 1
@id_table = internal constant [9 x %struct.usb_device_id] [%struct.usb_device_id { i16 3, i16 1351, i16 8757, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 ptrtoint (%struct.usbtest_info* @ez1_info to i64) }, %struct.usb_device_id { i16 3, i16 1351, i16 128, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 ptrtoint (%struct.usbtest_info* @ez1_info to i64) }, %struct.usb_device_id { i16 3, i16 1204, i16 -31213, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 ptrtoint (%struct.usbtest_info* @ez2_info to i64) }, %struct.usb_device_id { i16 3, i16 -16, i16 -16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 ptrtoint (%struct.usbtest_info* @fw_info to i64) }, %struct.usb_device_id { i16 3, i16 1317, i16 -23392, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 ptrtoint (%struct.usbtest_info* @gz_info to i64) }, %struct.usb_device_id { i16 3, i16 1317, i16 -23388, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 ptrtoint (%struct.usbtest_info* @um_info to i64) }, %struct.usb_device_id { i16 3, i16 1317, i16 -23389, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 ptrtoint (%struct.usbtest_info* @um2_info to i64) }, %struct.usb_device_id { i16 0, i16 0, i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 ptrtoint (%struct.usbtest_info* @generic_info to i64) }, %struct.usb_device_id zeroinitializer], align 16, !dbg !4420
@.str.1 = private unnamed_addr constant [48 x i8] c"matched module params, vend=0x%04x prod=0x%04x\0A\00", align 1
@usbtest_probe.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4410
@.str.2 = private unnamed_addr constant [11 x i8] c"&dev->lock\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [9 x i8] c" intr-in\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c" intr-out\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"couldn't get endpoints, %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c" bulk-in\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c" bulk-out\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c" iso-in\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c" iso-out\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c" int-in\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c" int-out\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.14 = private unnamed_addr constant [36 x i8] c"%s {control%s%s%s%s%s%s%s} tests%s\0A\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c" in/out\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c" (+alt)\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.17 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@pattern = internal global i32 0, align 4, !dbg !4413
@.str.18 = private unnamed_addr constant [33 x i8] c"set altsetting to %d failed, %d\0A\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"TEST 0:  NOP\0A\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"TEST 1:  write %d bytes %u times\0A\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"test1\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"TEST 2:  read %d bytes %u times\0A\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"test2\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"TEST 3:  write/%d 0..%d bytes %u times\0A\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"test3\00", align 1
@.str.26 = private unnamed_addr constant [39 x i8] c"TEST 4:  read/%d 0..%d bytes %u times\0A\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"test4\00", align 1
@.str.28 = private unnamed_addr constant [50 x i8] c"TEST 5:  write %d sglists %d entries of %d bytes\0A\00", align 1
@.str.29 = private unnamed_addr constant [49 x i8] c"TEST 6:  read %d sglists %d entries of %d bytes\0A\00", align 1
@.str.30 = private unnamed_addr constant [53 x i8] c"TEST 7:  write/%d %d sglists %d entries 0..%d bytes\0A\00", align 1
@.str.31 = private unnamed_addr constant [52 x i8] c"TEST 8:  read/%d %d sglists %d entries 0..%d bytes\0A\00", align 1
@.str.32 = private unnamed_addr constant [47 x i8] c"TEST 9:  ch9 (subset) control tests, %d times\0A\00", align 1
@.str.33 = private unnamed_addr constant [39 x i8] c"ch9 subset failed, iterations left %d\0A\00", align 1
@.str.34 = private unnamed_addr constant [44 x i8] c"TEST 10:  queue %d control calls, %d times\0A\00", align 1
@.str.35 = private unnamed_addr constant [33 x i8] c"TEST 11:  unlink %d reads of %d\0A\00", align 1
@.str.36 = private unnamed_addr constant [44 x i8] c"unlink reads failed %d, iterations left %d\0A\00", align 1
@.str.37 = private unnamed_addr constant [34 x i8] c"TEST 12:  unlink %d writes of %d\0A\00", align 1
@.str.38 = private unnamed_addr constant [45 x i8] c"unlink writes failed %d, iterations left %d\0A\00", align 1
@.str.39 = private unnamed_addr constant [30 x i8] c"TEST 13:  set/clear %d halts\0A\00", align 1
@.str.40 = private unnamed_addr constant [34 x i8] c"halts failed, iterations left %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [37 x i8] c"TEST 14:  %d ep0out, %d..%d vary %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [48 x i8] c"TEST 15:  write %d iso, %d entries of %d bytes\0A\00", align 1
@.str.43 = private unnamed_addr constant [47 x i8] c"TEST 16:  read %d iso, %d entries of %d bytes\0A\00", align 1
@.str.44 = private unnamed_addr constant [53 x i8] c"TEST 17:  write odd addr %d bytes %u times core map\0A\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"test17\00", align 1
@.str.46 = private unnamed_addr constant [52 x i8] c"TEST 18:  read odd addr %d bytes %u times core map\0A\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"test18\00", align 1
@.str.48 = private unnamed_addr constant [54 x i8] c"TEST 19:  write odd addr %d bytes %u times premapped\0A\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"test19\00", align 1
@.str.50 = private unnamed_addr constant [53 x i8] c"TEST 20:  read odd addr %d bytes %u times premapped\0A\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"test20\00", align 1
@.str.52 = private unnamed_addr constant [46 x i8] c"TEST 21:  %d ep0out odd addr, %d..%d vary %d\0A\00", align 1
@.str.53 = private unnamed_addr constant [52 x i8] c"TEST 22:  write %d iso odd, %d entries of %d bytes\0A\00", align 1
@.str.54 = private unnamed_addr constant [51 x i8] c"TEST 23:  read %d iso odd, %d entries of %d bytes\0A\00", align 1
@.str.55 = private unnamed_addr constant [54 x i8] c"TEST 24:  unlink from %d queues of %d %d-byte writes\0A\00", align 1
@.str.56 = private unnamed_addr constant [52 x i8] c"unlink queued writes failed %d, iterations left %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [34 x i8] c"TEST 25: write %d bytes %u times\0A\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"test25\00", align 1
@.str.59 = private unnamed_addr constant [33 x i8] c"TEST 26: read %d bytes %u times\0A\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"test26\00", align 1
@.str.61 = private unnamed_addr constant [30 x i8] c"TEST 27: bulk write %dMbytes\0A\00", align 1
@.str.62 = private unnamed_addr constant [29 x i8] c"TEST 28: bulk read %dMbytes\0A\00", align 1
@.str.63 = private unnamed_addr constant [52 x i8] c"TEST 29: Clear toggle between bulk writes %d times\0A\00", align 1
@.str.64 = private unnamed_addr constant [40 x i8] c"toggle sync failed, iterations left %d\0A\00", align 1
@.str.65 = private unnamed_addr constant [51 x i8] c"%s failed, iterations left %d, status %d (not %d)\0A\00", align 1
@__init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4415
@.str.66 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@.str.67 = private unnamed_addr constant [23 x i8] c"buf[%d] = %d (not %d)\0A\00", align 1
@.str.68 = private unnamed_addr constant [28 x i8] c"guard byte[%d] %d (not %d)\0A\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@.str.69 = private unnamed_addr constant [28 x i8] c"include/linux/scatterlist.h\00", align 1
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@jiffies = external dso_local global i64, align 8
@.str.70 = private unnamed_addr constant [54 x i8] c"perform_sglist failed, iterations left %d, status %d\0A\00", align 1
@.str.71 = private unnamed_addr constant [35 x i8] c"invalid alt [%d].bAltSetting = %d\0A\00", align 1
@.str.72 = private unnamed_addr constant [30 x i8] c"can't set_interface = %d, %d\0A\00", align 1
@.str.73 = private unnamed_addr constant [30 x i8] c"get alt should be %d, was %d\0A\00", align 1
@.str.74 = private unnamed_addr constant [29 x i8] c"get config --> %d %d (1 %d)\0A\00", align 1
@.str.75 = private unnamed_addr constant [23 x i8] c"dev descriptor --> %d\0A\00", align 1
@.str.76 = private unnamed_addr constant [23 x i8] c"bos descriptor --> %d\0A\00", align 1
@.str.77 = private unnamed_addr constant [27 x i8] c"bos descriptor set --> %d\0A\00", align 1
@.str.78 = private unnamed_addr constant [40 x i8] c"not device capability descriptor, skip\0A\00", align 1
@.str.79 = private unnamed_addr constant [36 x i8] c"bogus usb 2.0 extension descriptor\0A\00", align 1
@.str.80 = private unnamed_addr constant [47 x i8] c"bogus superspeed device capability descriptor\0A\00", align 1
@.str.81 = private unnamed_addr constant [31 x i8] c"bogus container id descriptor\0A\00", align 1
@.str.82 = private unnamed_addr constant [31 x i8] c"config [%d] descriptor --> %d\0A\00", align 1
@.str.83 = private unnamed_addr constant [25 x i8] c"hs dev qualifier --> %d\0A\00", align 1
@.str.84 = private unnamed_addr constant [22 x i8] c"dev qualifier --> %d\0A\00", align 1
@.str.85 = private unnamed_addr constant [27 x i8] c"other speed config --> %d\0A\00", align 1
@.str.86 = private unnamed_addr constant [23 x i8] c"get dev status --> %d\0A\00", align 1
@.str.87 = private unnamed_addr constant [29 x i8] c"get interface status --> %d\0A\00", align 1
@.str.88 = private unnamed_addr constant [43 x i8] c"bogus usb 2.0 extension descriptor length\0A\00", align 1
@.str.89 = private unnamed_addr constant [19 x i8] c"reserved bits set\0A\00", align 1
@.str.90 = private unnamed_addr constant [54 x i8] c"bogus superspeed device capability descriptor length\0A\00", align 1
@.str.91 = private unnamed_addr constant [35 x i8] c"reserved bits set in bmAttributes\0A\00", align 1
@.str.92 = private unnamed_addr constant [38 x i8] c"reserved bits set in wSpeedSupported\0A\00", align 1
@.str.93 = private unnamed_addr constant [38 x i8] c"bogus container id descriptor length\0A\00", align 1
@.str.94 = private unnamed_addr constant [32 x i8] c"bogus config descriptor length\0A\00", align 1
@.str.95 = private unnamed_addr constant [39 x i8] c"high bit of config attributes not set\0A\00", align 1
@.str.96 = private unnamed_addr constant [26 x i8] c"reserved config bits set\0A\00", align 1
@.str.97 = private unnamed_addr constant [35 x i8] c"bogus config descriptor read size\0A\00", align 1
@.str.98 = private unnamed_addr constant [39 x i8] c"bogus number of ctrl queue testcases!\0A\00", align 1
@.str.99 = private unnamed_addr constant [33 x i8] c"can't submit urb[%d], status %d\0A\00", align 1
@.str.100 = private unnamed_addr constant [44 x i8] c"subcase %d completed out of order, last %d\0A\00", align 1
@.str.101 = private unnamed_addr constant [29 x i8] c"subtest %d error, status %d\0A\00", align 1
@.str.102 = private unnamed_addr constant [65 x i8] c"control queue %02x.%02x, err %d, %d left, subcase %d, len %d/%d\0A\00", align 1
@.str.103 = private unnamed_addr constant [19 x i8] c"urb unlink --> %d\0A\00", align 1
@.str.104 = private unnamed_addr constant [39 x i8] c"can't resubmit ctrl %02x.%02x, err %d\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.105 = private unnamed_addr constant [16 x i8] c"submit fail %d\0A\00", align 1
@.str.106 = private unnamed_addr constant [14 x i8] c"unlink retry\0A\00", align 1
@.str.107 = private unnamed_addr constant [16 x i8] c"unlink fail %d\0A\00", align 1
@.str.108 = private unnamed_addr constant [31 x i8] c"ep %02x couldn't set halt, %d\0A\00", align 1
@.str.109 = private unnamed_addr constant [33 x i8] c"ep %02x couldn't clear halt, %d\0A\00", align 1
@.str.110 = private unnamed_addr constant [41 x i8] c"ep %02x couldn't get no-halt status, %d\0A\00", align 1
@.str.111 = private unnamed_addr constant [33 x i8] c"ep %02x bogus status: %04x != 0\0A\00", align 1
@__func__.verify_not_halted = private unnamed_addr constant [18 x i8] c"verify_not_halted\00", align 1
@.str.112 = private unnamed_addr constant [38 x i8] c"ep %02x couldn't get halt status, %d\0A\00", align 1
@.str.113 = private unnamed_addr constant [33 x i8] c"ep %02x bogus status: %04x != 1\0A\00", align 1
@__func__.verify_halted = private unnamed_addr constant [14 x i8] c"verify_halted\00", align 1
@.str.114 = private unnamed_addr constant [20 x i8] c"verify_still_halted\00", align 1
@.str.115 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.116 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.117 = private unnamed_addr constant [33 x i8] c"ctrl_out, wlen %d (expected %d)\0A\00", align 1
@.str.118 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.119 = private unnamed_addr constant [33 x i8] c"ctrl_out, rlen %d (expected %d)\0A\00", align 1
@.str.120 = private unnamed_addr constant [32 x i8] c"ctrl_out, byte %d is %d not %d\0A\00", align 1
@.str.121 = private unnamed_addr constant [7 x i8] c"verify\00", align 1
@.str.122 = private unnamed_addr constant [39 x i8] c"ctrl_out %s failed, code %d, count %d\0A\00", align 1
@.str.123 = private unnamed_addr constant [57 x i8] c"iso period %d %sframes, wMaxPacket %d, transactions: %d\0A\00", align 1
@.str.124 = private unnamed_addr constant [6 x i8] c"micro\00", align 1
@.str.125 = private unnamed_addr constant [30 x i8] c"total %lu msec (%lu packets)\0A\00", align 1
@.str.126 = private unnamed_addr constant [26 x i8] c"submit iso[%d], error %d\0A\00", align 1
@.str.127 = private unnamed_addr constant [17 x i8] c"resubmit err %d\0A\00", align 1
@.str.128 = private unnamed_addr constant [40 x i8] c"during the test, %lu errors out of %lu\0A\00", align 1
@.str.129 = private unnamed_addr constant [25 x i8] c"submit urbs[%d] fail %d\0A\00", align 1
@__func__.test_toggle_sync = private unnamed_addr constant [17 x i8] c"test_toggle_sync\00", align 1
@ez1_info = internal global %struct.usbtest_info { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.130, i32 0, i32 0), i8 2, i8 2, i8 0, i32 1 }, align 8, !dbg !4423
@ez2_info = internal global %struct.usbtest_info { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.131, i32 0, i32 0), i8 6, i8 2, i8 0, i32 1 }, align 8, !dbg !4425
@fw_info = internal global %struct.usbtest_info { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.132, i32 0, i32 0), i8 2, i8 2, i8 7, i32 1 }, align 8, !dbg !4427
@gz_info = internal global %struct.usbtest_info { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.133, i32 0, i32 0), i8 0, i8 0, i8 15, i32 0 }, align 8, !dbg !4429
@um_info = internal global %struct.usbtest_info { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.134, i32 0, i32 0), i8 0, i8 0, i8 1, i32 -1 }, align 8, !dbg !4431
@um2_info = internal global %struct.usbtest_info { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.135, i32 0, i32 0), i8 0, i8 0, i8 5, i32 -1 }, align 8, !dbg !4433
@generic_info = internal global %struct.usbtest_info { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.136, i32 0, i32 0), i8 0, i8 0, i8 0, i32 -1 }, align 8, !dbg !4435
@.str.130 = private unnamed_addr constant [14 x i8] c"EZ-USB device\00", align 1
@.str.131 = private unnamed_addr constant [11 x i8] c"FX2 device\00", align 1
@.str.132 = private unnamed_addr constant [16 x i8] c"usb test device\00", align 1
@.str.133 = private unnamed_addr constant [18 x i8] c"Linux gadget zero\00", align 1
@.str.134 = private unnamed_addr constant [28 x i8] c"Linux user mode test driver\00", align 1
@.str.135 = private unnamed_addr constant [32 x i8] c"Linux user mode ISO test driver\00", align 1
@.str.136 = private unnamed_addr constant [19 x i8] c"Generic USB device\00", align 1
@llvm.used = appending global [24 x i8*] [i8* bitcast (%struct.kernel_param* @__param_alt to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__UNIQUE_ID_alttype236, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__UNIQUE_ID_alt237, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_pattern to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_patterntype238, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_mod_pattern239, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_realworld to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_realworldtype241, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_realworld242, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_force_interrupt to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_force_interrupttype246, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__UNIQUE_ID_force_interrupt247, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_vendor to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_vendortype248, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__UNIQUE_ID_vendor249, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_product to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_producttype250, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_product251, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_usbtest_init252 to i8*), i8* bitcast (void ()* @usbtest_exit to i8*), i8* bitcast (void ()** @__exitcall_usbtest_exit to i8*), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_description253, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_file254, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_license255, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @usbtest_init() #0 section ".init.text" !dbg !4444 {
entry:
  %tmp = alloca i32, align 4
  %0 = load i16, i16* @vendor, align 2, !dbg !4447
  %tobool = icmp ne i16 %0, 0, !dbg !4447
  br i1 %tobool, label %if.then, label %if.end, !dbg !4449

if.then:                                          ; preds = %entry
  store i32 0, i32* %tmp, align 4, !dbg !4450
  %1 = load i32, i32* %tmp, align 4, !dbg !4453
  br label %if.end, !dbg !4454

if.end:                                           ; preds = %if.then, %entry
  %call = call i32 @usb_register_driver(%struct.usb_driver* @usbtest_driver, %struct.module* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #11, !dbg !4455
  ret i32 %call, !dbg !4456
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @usbtest_exit() #0 section ".exit.text" !dbg !4457 {
entry:
  call void @usb_deregister(%struct.usb_driver* @usbtest_driver) #11, !dbg !4458
  ret void, !dbg !4459
}

; Function Attrs: noredzone
declare dso_local void @usb_deregister(%struct.usb_driver*) #1

; Function Attrs: noredzone
declare dso_local i32 @usb_register_driver(%struct.usb_driver*, %struct.module*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbtest_probe(%struct.usb_interface* %intf, %struct.usb_device_id* %id) #2 !dbg !4412 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4460, metadata !DIExpression()), !dbg !4464
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4472, metadata !DIExpression()), !dbg !4473
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4474, metadata !DIExpression()), !dbg !4475
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4476, metadata !DIExpression()), !dbg !4477
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4478, metadata !DIExpression()), !dbg !4482
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4484, metadata !DIExpression()), !dbg !4488
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4490, metadata !DIExpression()), !dbg !4494
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4499, metadata !DIExpression()), !dbg !4500
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4501, metadata !DIExpression()), !dbg !4502
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4503, metadata !DIExpression()), !dbg !4504
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4505, metadata !DIExpression()), !dbg !4506
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4507, metadata !DIExpression()), !dbg !4508
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4509, metadata !DIExpression()), !dbg !4510
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4511, metadata !DIExpression()), !dbg !4512
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4513, metadata !DIExpression()), !dbg !4514
  %retval = alloca i32, align 4
  %intf.addr = alloca %struct.usb_interface*, align 8
  %id.addr = alloca %struct.usb_device_id*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %dev = alloca %struct.usbtest_dev*, align 8
  %info = alloca %struct.usbtest_info*, align 8
  %rtest = alloca i8*, align 8
  %wtest = alloca i8*, align 8
  %irtest = alloca i8*, align 8
  %iwtest = alloca i8*, align 8
  %intrtest = alloca i8*, align 8
  %intwtest = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !4515, metadata !DIExpression()), !dbg !4516
  store %struct.usb_device_id* %id, %struct.usb_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device_id** %id.addr, metadata !4517, metadata !DIExpression()), !dbg !4518
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !4519, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev, metadata !4521, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.declare(metadata %struct.usbtest_info** %info, metadata !4542, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.declare(metadata i8** %rtest, metadata !4544, metadata !DIExpression()), !dbg !4545
  call void @llvm.dbg.declare(metadata i8** %wtest, metadata !4546, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.declare(metadata i8** %irtest, metadata !4548, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.declare(metadata i8** %iwtest, metadata !4550, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.declare(metadata i8** %intrtest, metadata !4552, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.declare(metadata i8** %intwtest, metadata !4554, metadata !DIExpression()), !dbg !4555
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !4556
  %call = call %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %0) #11, !dbg !4557
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !4558
  %1 = load %struct.usb_device_id*, %struct.usb_device_id** %id.addr, align 8, !dbg !4559
  %match_flags = getelementptr inbounds %struct.usb_device_id, %struct.usb_device_id* %1, i32 0, i32 0, !dbg !4561
  %2 = load i16, i16* %match_flags, align 8, !dbg !4561
  %conv = zext i16 %2 to i32, !dbg !4559
  %cmp = icmp eq i32 %conv, 0, !dbg !4562
  br i1 %cmp, label %if.then, label %if.end23, !dbg !4563

if.then:                                          ; preds = %entry
  %3 = load i16, i16* @vendor, align 2, !dbg !4564
  %tobool = icmp ne i16 %3, 0, !dbg !4564
  br i1 %tobool, label %lor.lhs.false, label %if.then6, !dbg !4567

lor.lhs.false:                                    ; preds = %if.then
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !4568
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 15, !dbg !4568
  %idVendor = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 7, !dbg !4568
  %5 = load i16, i16* %idVendor, align 8, !dbg !4568
  %conv2 = zext i16 %5 to i32, !dbg !4568
  %6 = load i16, i16* @vendor, align 2, !dbg !4569
  %conv3 = zext i16 %6 to i32, !dbg !4570
  %cmp4 = icmp ne i32 %conv2, %conv3, !dbg !4571
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !4572

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  store i32 -19, i32* %retval, align 4, !dbg !4573
  br label %return, !dbg !4573

if.end:                                           ; preds = %lor.lhs.false
  %7 = load i16, i16* @product, align 2, !dbg !4574
  %conv7 = zext i16 %7 to i32, !dbg !4574
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !4574
  br i1 %tobool8, label %land.lhs.true, label %if.end15, !dbg !4576

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !4577
  %descriptor9 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 15, !dbg !4577
  %idProduct = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor9, i32 0, i32 8, !dbg !4577
  %9 = load i16, i16* %idProduct, align 2, !dbg !4577
  %conv10 = zext i16 %9 to i32, !dbg !4577
  %10 = load i16, i16* @product, align 2, !dbg !4578
  %conv11 = zext i16 %10 to i32, !dbg !4579
  %cmp12 = icmp ne i32 %conv10, %conv11, !dbg !4580
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !4581

if.then14:                                        ; preds = %land.lhs.true
  store i32 -19, i32* %retval, align 4, !dbg !4582
  br label %return, !dbg !4582

if.end15:                                         ; preds = %land.lhs.true, %if.end
  %11 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !4583
  %dev16 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %11, i32 0, i32 7, !dbg !4583
  %12 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !4583
  %descriptor17 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 15, !dbg !4583
  %idVendor18 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor17, i32 0, i32 7, !dbg !4583
  %13 = load i16, i16* %idVendor18, align 8, !dbg !4583
  %conv19 = zext i16 %13 to i32, !dbg !4583
  %14 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !4583
  %descriptor20 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %14, i32 0, i32 15, !dbg !4583
  %idProduct21 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor20, i32 0, i32 8, !dbg !4583
  %15 = load i16, i16* %idProduct21, align 2, !dbg !4583
  %conv22 = zext i16 %15 to i32, !dbg !4583
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 %conv19, i32 %conv22) #12, !dbg !4583
  br label %if.end23, !dbg !4584

if.end23:                                         ; preds = %if.end15, %entry
  %call24 = call i8* @kzalloc(i64 104, i32 3264) #11, !dbg !4585
  %16 = bitcast i8* %call24 to %struct.usbtest_dev*, !dbg !4585
  store %struct.usbtest_dev* %16, %struct.usbtest_dev** %dev, align 8, !dbg !4586
  %17 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4587
  %tobool25 = icmp ne %struct.usbtest_dev* %17, null, !dbg !4587
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !4589

if.then26:                                        ; preds = %if.end23
  store i32 -12, i32* %retval, align 4, !dbg !4590
  br label %return, !dbg !4590

if.end27:                                         ; preds = %if.end23
  %18 = load %struct.usb_device_id*, %struct.usb_device_id** %id.addr, align 8, !dbg !4591
  %driver_info = getelementptr inbounds %struct.usb_device_id, %struct.usb_device_id* %18, i32 0, i32 12, !dbg !4592
  %19 = load i64, i64* %driver_info, align 8, !dbg !4592
  %20 = inttoptr i64 %19 to %struct.usbtest_info*, !dbg !4593
  store %struct.usbtest_info* %20, %struct.usbtest_info** %info, align 8, !dbg !4594
  %21 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4595
  %22 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4596
  %info28 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %22, i32 0, i32 1, !dbg !4597
  store %struct.usbtest_info* %21, %struct.usbtest_info** %info28, align 8, !dbg !4598
  br label %do.body, !dbg !4599

do.body:                                          ; preds = %if.end27
  %23 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4600
  %lock = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %23, i32 0, i32 12, !dbg !4600
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), %struct.lock_class_key* @usbtest_probe.__key) #11, !dbg !4600
  br label %do.end, !dbg !4600

do.end:                                           ; preds = %do.body
  %24 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !4602
  %25 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4603
  %intf29 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %25, i32 0, i32 0, !dbg !4604
  store %struct.usb_interface* %24, %struct.usb_interface** %intf29, align 8, !dbg !4605
  store i64 256, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %26 = load i64, i64* %size.addr.i, align 8, !dbg !4606
  %27 = call i1 @llvm.is.constant.i64(i64 %26) #10, !dbg !4607
  br i1 %27, label %if.then.i, label %if.end9.i, !dbg !4608

if.then.i:                                        ; preds = %do.end
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !4609
  %cmp.i = icmp ugt i64 %28, 8192, !dbg !4610
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4611

if.then1.i:                                       ; preds = %if.then.i
  %29 = load i64, i64* %size.addr.i, align 8, !dbg !4612
  %30 = load i32, i32* %flags.addr.i, align 4, !dbg !4613
  store i64 %29, i64* %size.addr.i.i, align 8
  store i32 %30, i32* %flags.addr.i.i, align 4
  %31 = load i64, i64* %size.addr.i.i, align 8, !dbg !4614
  %call.i.i = call i32 @get_order(i64 %31) #13, !dbg !4615
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !4508
  %32 = load i64, i64* %size.addr.i.i, align 8, !dbg !4616
  %33 = load i32, i32* %flags.addr.i.i, align 4, !dbg !4617
  %34 = load i32, i32* %order.i.i, align 4, !dbg !4618
  store i64 %32, i64* %size.addr.i.i.i, align 8
  store i32 %33, i32* %flags.addr.i.i.i, align 4
  store i32 %34, i32* %order.addr.i.i.i, align 4
  %35 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !4619
  %36 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !4620
  %37 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !4621
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %35, i32 %36, i32 %37) #14, !dbg !4622
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !4622
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !4622
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !4622
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !4622
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !4623
  br label %kmalloc.exit, !dbg !4623

if.end.i:                                         ; preds = %if.then.i
  %38 = load i64, i64* %size.addr.i, align 8, !dbg !4624
  store i64 %38, i64* %size.addr.i11.i, align 8
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4625
  %tobool.i.i = icmp ne i64 %39, 0, !dbg !4625
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !4627

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !4628
  br label %kmalloc_index.exit.i, !dbg !4628

if.end.i.i:                                       ; preds = %if.end.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4629
  %cmp.i.i = icmp ule i64 %40, 8, !dbg !4631
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !4632

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4633
  br label %kmalloc_index.exit.i, !dbg !4633

if.end2.i.i:                                      ; preds = %if.end.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4634
  %cmp3.i.i = icmp ugt i64 %41, 64, !dbg !4636
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !4637

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4638
  %cmp4.i.i = icmp ule i64 %42, 96, !dbg !4639
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !4640

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !4641
  br label %kmalloc_index.exit.i, !dbg !4641

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4642
  %cmp7.i.i = icmp ugt i64 %43, 128, !dbg !4644
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !4645

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4646
  %cmp9.i.i = icmp ule i64 %44, 192, !dbg !4647
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !4648

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !4649
  br label %kmalloc_index.exit.i, !dbg !4649

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4650
  %cmp12.i.i = icmp ule i64 %45, 8, !dbg !4652
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !4653

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4654
  br label %kmalloc_index.exit.i, !dbg !4654

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4655
  %cmp15.i.i = icmp ule i64 %46, 16, !dbg !4657
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !4658

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !4659
  br label %kmalloc_index.exit.i, !dbg !4659

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4660
  %cmp18.i.i = icmp ule i64 %47, 32, !dbg !4662
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !4663

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !4664
  br label %kmalloc_index.exit.i, !dbg !4664

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4665
  %cmp21.i.i = icmp ule i64 %48, 64, !dbg !4667
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !4668

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !4669
  br label %kmalloc_index.exit.i, !dbg !4669

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4670
  %cmp24.i.i = icmp ule i64 %49, 128, !dbg !4672
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !4673

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !4674
  br label %kmalloc_index.exit.i, !dbg !4674

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4675
  %cmp27.i.i = icmp ule i64 %50, 256, !dbg !4677
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !4678

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !4679
  br label %kmalloc_index.exit.i, !dbg !4679

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4680
  %cmp30.i.i = icmp ule i64 %51, 512, !dbg !4682
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !4683

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !4684
  br label %kmalloc_index.exit.i, !dbg !4684

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4685
  %cmp33.i.i = icmp ule i64 %52, 1024, !dbg !4687
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !4688

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !4689
  br label %kmalloc_index.exit.i, !dbg !4689

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4690
  %cmp36.i.i = icmp ule i64 %53, 2048, !dbg !4692
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !4693

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !4694
  br label %kmalloc_index.exit.i, !dbg !4694

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4695
  %cmp39.i.i = icmp ule i64 %54, 4096, !dbg !4697
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !4698

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !4699
  br label %kmalloc_index.exit.i, !dbg !4699

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4700
  %cmp42.i.i = icmp ule i64 %55, 8192, !dbg !4702
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !4703

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !4704
  br label %kmalloc_index.exit.i, !dbg !4704

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4705
  %cmp45.i.i = icmp ule i64 %56, 16384, !dbg !4707
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !4708

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !4709
  br label %kmalloc_index.exit.i, !dbg !4709

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4710
  %cmp48.i.i = icmp ule i64 %57, 32768, !dbg !4712
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !4713

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !4714
  br label %kmalloc_index.exit.i, !dbg !4714

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4715
  %cmp51.i.i = icmp ule i64 %58, 65536, !dbg !4717
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !4718

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !4719
  br label %kmalloc_index.exit.i, !dbg !4719

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4720
  %cmp54.i.i = icmp ule i64 %59, 131072, !dbg !4722
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !4723

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !4724
  br label %kmalloc_index.exit.i, !dbg !4724

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4725
  %cmp57.i.i = icmp ule i64 %60, 262144, !dbg !4727
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !4728

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !4729
  br label %kmalloc_index.exit.i, !dbg !4729

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4730
  %cmp60.i.i = icmp ule i64 %61, 524288, !dbg !4732
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !4733

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !4734
  br label %kmalloc_index.exit.i, !dbg !4734

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4735
  %cmp63.i.i = icmp ule i64 %62, 1048576, !dbg !4737
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !4738

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !4739
  br label %kmalloc_index.exit.i, !dbg !4739

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4740
  %cmp66.i.i = icmp ule i64 %63, 2097152, !dbg !4742
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !4743

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !4744
  br label %kmalloc_index.exit.i, !dbg !4744

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4745
  %cmp69.i.i = icmp ule i64 %64, 4194304, !dbg !4747
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !4748

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !4749
  br label %kmalloc_index.exit.i, !dbg !4749

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %65 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4750
  %cmp72.i.i = icmp ule i64 %65, 8388608, !dbg !4752
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !4753

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !4754
  br label %kmalloc_index.exit.i, !dbg !4754

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %66 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4755
  %cmp75.i.i = icmp ule i64 %66, 16777216, !dbg !4757
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !4758

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !4759
  br label %kmalloc_index.exit.i, !dbg !4759

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %67 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4760
  %cmp78.i.i = icmp ule i64 %67, 33554432, !dbg !4762
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !4763

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !4764
  br label %kmalloc_index.exit.i, !dbg !4764

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %68 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4765
  %cmp81.i.i = icmp ule i64 %68, 67108864, !dbg !4767
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !4768

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !4769
  br label %kmalloc_index.exit.i, !dbg !4769

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !4770, !srcloc !4773
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !4774, !srcloc !4777
  unreachable, !dbg !4778

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %69 = load i32, i32* %retval.i.i, align 4, !dbg !4779
  store i32 %69, i32* %index.i, align 4, !dbg !4780
  %70 = load i32, i32* %index.i, align 4, !dbg !4781
  %tobool.i = icmp ne i32 %70, 0, !dbg !4781
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !4783

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !4784
  br label %kmalloc.exit, !dbg !4784

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %71 = load i32, i32* %flags.addr.i, align 4, !dbg !4785
  store i32 %71, i32* %flags.addr.i13.i, align 4
  %72 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4786
  %and.i.i = and i32 %72, 17, !dbg !4786
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !4786
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !4786
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !4786
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !4786
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !4788

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !4789
  br label %kmalloc_type.exit.i, !dbg !4789

if.end.i16.i:                                     ; preds = %if.end4.i
  %73 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4790
  %and2.i.i = and i32 %73, 1, !dbg !4791
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !4790
  %74 = zext i1 %tobool3.i.i to i64, !dbg !4790
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !4790
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !4792
  br label %kmalloc_type.exit.i, !dbg !4792

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %75 = load i32, i32* %retval.i12.i, align 4, !dbg !4793
  %idxprom.i = zext i32 %75 to i64, !dbg !4794
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !4794
  %76 = load i32, i32* %index.i, align 4, !dbg !4795
  %idxprom6.i = zext i32 %76 to i64, !dbg !4794
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !4794
  %77 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !4794
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !4796
  %79 = load i64, i64* %size.addr.i, align 8, !dbg !4797
  store %struct.kmem_cache* %77, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %78, i32* %flags.addr.i17.i, align 4
  store i64 %79, i64* %size.addr.i18.i, align 8
  %80 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4798
  %81 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4799
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %80, i32 %81) #14, !dbg !4800
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !4800
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !4800
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !4800
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !4800
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !4477
  %82 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4801
  %83 = load i8*, i8** %ret.i.i, align 8, !dbg !4802
  %84 = load i64, i64* %size.addr.i18.i, align 8, !dbg !4803
  %85 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4804
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %82, i8* %83, i64 %84, i32 %85) #14, !dbg !4805
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !4806
  %86 = load i8*, i8** %ret.i.i, align 8, !dbg !4807
  store i8* %86, i8** %retval.i, align 8, !dbg !4808
  br label %kmalloc.exit, !dbg !4808

if.end9.i:                                        ; preds = %do.end
  %87 = load i64, i64* %size.addr.i, align 8, !dbg !4809
  %88 = load i32, i32* %flags.addr.i, align 4, !dbg !4810
  %call10.i = call noalias i8* @__kmalloc(i64 %87, i32 %88) #14, !dbg !4811
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !4811
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !4811
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !4811
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !4811
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !4812
  br label %kmalloc.exit, !dbg !4812

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %89 = load i8*, i8** %retval.i, align 8, !dbg !4813
  %90 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4814
  %buf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %90, i32 0, i32 13, !dbg !4815
  store i8* %89, i8** %buf, align 8, !dbg !4816
  %91 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4817
  %buf31 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %91, i32 0, i32 13, !dbg !4819
  %92 = load i8*, i8** %buf31, align 8, !dbg !4819
  %cmp32 = icmp eq i8* %92, null, !dbg !4820
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !4821

if.then34:                                        ; preds = %kmalloc.exit
  %93 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4822
  %94 = bitcast %struct.usbtest_dev* %93 to i8*, !dbg !4822
  call void @kfree(i8* %94) #11, !dbg !4824
  store i32 -12, i32* %retval, align 4, !dbg !4825
  br label %return, !dbg !4825

if.end35:                                         ; preds = %kmalloc.exit
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %wtest, align 8, !dbg !4826
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %rtest, align 8, !dbg !4827
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %iwtest, align 8, !dbg !4828
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %irtest, align 8, !dbg !4829
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %intwtest, align 8, !dbg !4830
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8** %intrtest, align 8, !dbg !4831
  %95 = load i32, i32* @force_interrupt, align 4, !dbg !4832
  %tobool36 = icmp ne i32 %95, 0, !dbg !4832
  br i1 %tobool36, label %if.then40, label %lor.lhs.false37, !dbg !4834

lor.lhs.false37:                                  ; preds = %if.end35
  %96 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !4835
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %96, i32 0, i32 4, !dbg !4836
  %97 = load i32, i32* %speed, align 4, !dbg !4836
  %cmp38 = icmp eq i32 %97, 1, !dbg !4837
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !4838

if.then40:                                        ; preds = %lor.lhs.false37, %if.end35
  %98 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4839
  %ep_in = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %98, i32 0, i32 1, !dbg !4842
  %99 = load i8, i8* %ep_in, align 8, !dbg !4842
  %tobool41 = icmp ne i8 %99, 0, !dbg !4839
  br i1 %tobool41, label %if.then42, label %if.end47, !dbg !4843

if.then42:                                        ; preds = %if.then40
  %100 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !4844
  %101 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4844
  %ep_in43 = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %101, i32 0, i32 1, !dbg !4844
  %102 = load i8, i8* %ep_in43, align 8, !dbg !4844
  %conv44 = zext i8 %102 to i32, !dbg !4844
  %call45 = call i32 @__create_pipe(%struct.usb_device* %100, i32 %conv44) #11, !dbg !4844
  %or = or i32 1073741824, %call45, !dbg !4844
  %or46 = or i32 %or, 128, !dbg !4844
  %103 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4846
  %in_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %103, i32 0, i32 2, !dbg !4847
  store i32 %or46, i32* %in_pipe, align 8, !dbg !4848
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8** %rtest, align 8, !dbg !4849
  br label %if.end47, !dbg !4850

if.end47:                                         ; preds = %if.then42, %if.then40
  %104 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4851
  %ep_out = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %104, i32 0, i32 2, !dbg !4853
  %105 = load i8, i8* %ep_out, align 1, !dbg !4853
  %tobool48 = icmp ne i8 %105, 0, !dbg !4851
  br i1 %tobool48, label %if.then49, label %if.end54, !dbg !4854

if.then49:                                        ; preds = %if.end47
  %106 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !4855
  %107 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4855
  %ep_out50 = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %107, i32 0, i32 2, !dbg !4855
  %108 = load i8, i8* %ep_out50, align 1, !dbg !4855
  %conv51 = zext i8 %108 to i32, !dbg !4855
  %call52 = call i32 @__create_pipe(%struct.usb_device* %106, i32 %conv51) #11, !dbg !4855
  %or53 = or i32 1073741824, %call52, !dbg !4855
  %109 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4857
  %out_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %109, i32 0, i32 3, !dbg !4858
  store i32 %or53, i32* %out_pipe, align 4, !dbg !4859
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8** %wtest, align 8, !dbg !4860
  br label %if.end54, !dbg !4861

if.end54:                                         ; preds = %if.then49, %if.end47
  br label %if.end109, !dbg !4862

if.else:                                          ; preds = %lor.lhs.false37
  %110 = load i32, i32* @override_alt, align 4, !dbg !4863
  %cmp55 = icmp sge i32 %110, 0, !dbg !4866
  br i1 %cmp55, label %if.then59, label %lor.lhs.false57, !dbg !4867

lor.lhs.false57:                                  ; preds = %if.else
  %111 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4868
  %autoconf = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %111, i32 0, i32 3, !dbg !4869
  %bf.load = load i8, i8* %autoconf, align 2, !dbg !4869
  %bf.clear = and i8 %bf.load, 1, !dbg !4869
  %bf.cast = zext i8 %bf.clear to i32, !dbg !4869
  %tobool58 = icmp ne i32 %bf.cast, 0, !dbg !4868
  br i1 %tobool58, label %if.then59, label %if.else68, !dbg !4870

if.then59:                                        ; preds = %lor.lhs.false57, %if.else
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4871, metadata !DIExpression()), !dbg !4873
  %112 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4874
  %113 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !4875
  %call60 = call i32 @get_endpoints(%struct.usbtest_dev* %112, %struct.usb_interface* %113) #11, !dbg !4876
  store i32 %call60, i32* %status, align 4, !dbg !4877
  %114 = load i32, i32* %status, align 4, !dbg !4878
  %cmp61 = icmp slt i32 %114, 0, !dbg !4880
  br i1 %cmp61, label %if.then63, label %if.end67, !dbg !4881

if.then63:                                        ; preds = %if.then59
  %115 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4882
  %intf64 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %115, i32 0, i32 0, !dbg !4882
  %116 = load %struct.usb_interface*, %struct.usb_interface** %intf64, align 8, !dbg !4882
  %dev65 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %116, i32 0, i32 7, !dbg !4882
  %117 = load i32, i32* %status, align 4, !dbg !4882
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev65, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i32 %117) #12, !dbg !4882
  %118 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4884
  %buf66 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %118, i32 0, i32 13, !dbg !4885
  %119 = load i8*, i8** %buf66, align 8, !dbg !4885
  call void @kfree(i8* %119) #11, !dbg !4886
  %120 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4887
  %121 = bitcast %struct.usbtest_dev* %120 to i8*, !dbg !4887
  call void @kfree(i8* %121) #11, !dbg !4888
  %122 = load i32, i32* %status, align 4, !dbg !4889
  store i32 %122, i32* %retval, align 4, !dbg !4890
  br label %return, !dbg !4890

if.end67:                                         ; preds = %if.then59
  br label %if.end88, !dbg !4891

if.else68:                                        ; preds = %lor.lhs.false57
  %123 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4892
  %ep_in69 = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %123, i32 0, i32 1, !dbg !4895
  %124 = load i8, i8* %ep_in69, align 8, !dbg !4895
  %tobool70 = icmp ne i8 %124, 0, !dbg !4892
  br i1 %tobool70, label %if.then71, label %if.end78, !dbg !4896

if.then71:                                        ; preds = %if.else68
  %125 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !4897
  %126 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4897
  %ep_in72 = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %126, i32 0, i32 1, !dbg !4897
  %127 = load i8, i8* %ep_in72, align 8, !dbg !4897
  %conv73 = zext i8 %127 to i32, !dbg !4897
  %call74 = call i32 @__create_pipe(%struct.usb_device* %125, i32 %conv73) #11, !dbg !4897
  %or75 = or i32 -1073741824, %call74, !dbg !4897
  %or76 = or i32 %or75, 128, !dbg !4897
  %128 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4898
  %in_pipe77 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %128, i32 0, i32 2, !dbg !4899
  store i32 %or76, i32* %in_pipe77, align 8, !dbg !4900
  br label %if.end78, !dbg !4898

if.end78:                                         ; preds = %if.then71, %if.else68
  %129 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4901
  %ep_out79 = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %129, i32 0, i32 2, !dbg !4903
  %130 = load i8, i8* %ep_out79, align 1, !dbg !4903
  %tobool80 = icmp ne i8 %130, 0, !dbg !4901
  br i1 %tobool80, label %if.then81, label %if.end87, !dbg !4904

if.then81:                                        ; preds = %if.end78
  %131 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !4905
  %132 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4905
  %ep_out82 = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %132, i32 0, i32 2, !dbg !4905
  %133 = load i8, i8* %ep_out82, align 1, !dbg !4905
  %conv83 = zext i8 %133 to i32, !dbg !4905
  %call84 = call i32 @__create_pipe(%struct.usb_device* %131, i32 %conv83) #11, !dbg !4905
  %or85 = or i32 -1073741824, %call84, !dbg !4905
  %134 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4906
  %out_pipe86 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %134, i32 0, i32 3, !dbg !4907
  store i32 %or85, i32* %out_pipe86, align 4, !dbg !4908
  br label %if.end87, !dbg !4906

if.end87:                                         ; preds = %if.then81, %if.end78
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end67
  %135 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4909
  %in_pipe89 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %135, i32 0, i32 2, !dbg !4911
  %136 = load i32, i32* %in_pipe89, align 8, !dbg !4911
  %tobool90 = icmp ne i32 %136, 0, !dbg !4909
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !4912

if.then91:                                        ; preds = %if.end88
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8** %rtest, align 8, !dbg !4913
  br label %if.end92, !dbg !4914

if.end92:                                         ; preds = %if.then91, %if.end88
  %137 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4915
  %out_pipe93 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %137, i32 0, i32 3, !dbg !4917
  %138 = load i32, i32* %out_pipe93, align 4, !dbg !4917
  %tobool94 = icmp ne i32 %138, 0, !dbg !4915
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !4918

if.then95:                                        ; preds = %if.end92
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8** %wtest, align 8, !dbg !4919
  br label %if.end96, !dbg !4920

if.end96:                                         ; preds = %if.then95, %if.end92
  %139 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4921
  %in_iso_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %139, i32 0, i32 4, !dbg !4923
  %140 = load i32, i32* %in_iso_pipe, align 8, !dbg !4923
  %tobool97 = icmp ne i32 %140, 0, !dbg !4921
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !4924

if.then98:                                        ; preds = %if.end96
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %irtest, align 8, !dbg !4925
  br label %if.end99, !dbg !4926

if.end99:                                         ; preds = %if.then98, %if.end96
  %141 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4927
  %out_iso_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %141, i32 0, i32 5, !dbg !4929
  %142 = load i32, i32* %out_iso_pipe, align 4, !dbg !4929
  %tobool100 = icmp ne i32 %142, 0, !dbg !4927
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !4930

if.then101:                                       ; preds = %if.end99
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8** %iwtest, align 8, !dbg !4931
  br label %if.end102, !dbg !4932

if.end102:                                        ; preds = %if.then101, %if.end99
  %143 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4933
  %in_int_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %143, i32 0, i32 6, !dbg !4935
  %144 = load i32, i32* %in_int_pipe, align 8, !dbg !4935
  %tobool103 = icmp ne i32 %144, 0, !dbg !4933
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !4936

if.then104:                                       ; preds = %if.end102
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %intrtest, align 8, !dbg !4937
  br label %if.end105, !dbg !4938

if.end105:                                        ; preds = %if.then104, %if.end102
  %145 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4939
  %out_int_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %145, i32 0, i32 7, !dbg !4941
  %146 = load i32, i32* %out_int_pipe, align 4, !dbg !4941
  %tobool106 = icmp ne i32 %146, 0, !dbg !4939
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !4942

if.then107:                                       ; preds = %if.end105
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i8** %intwtest, align 8, !dbg !4943
  br label %if.end108, !dbg !4944

if.end108:                                        ; preds = %if.then107, %if.end105
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end54
  %147 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !4945
  %148 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4946
  %149 = bitcast %struct.usbtest_dev* %148 to i8*, !dbg !4946
  call void @usb_set_intfdata(%struct.usb_interface* %147, i8* %149) #11, !dbg !4947
  %150 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !4948
  %dev110 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %150, i32 0, i32 7, !dbg !4948
  %151 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4948
  %name = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %151, i32 0, i32 0, !dbg !4948
  %152 = load i8*, i8** %name, align 8, !dbg !4948
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev110, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* %152) #12, !dbg !4948
  %153 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !4949
  %dev111 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %153, i32 0, i32 7, !dbg !4949
  %154 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !4949
  %speed112 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %154, i32 0, i32 4, !dbg !4949
  %155 = load i32, i32* %speed112, align 4, !dbg !4949
  %call113 = call i8* @usb_speed_string(i32 %155) #11, !dbg !4949
  %156 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4949
  %ctrl_out = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %156, i32 0, i32 3, !dbg !4949
  %bf.load114 = load i8, i8* %ctrl_out, align 2, !dbg !4949
  %bf.lshr = lshr i8 %bf.load114, 1, !dbg !4949
  %bf.clear115 = and i8 %bf.lshr, 1, !dbg !4949
  %bf.cast116 = zext i8 %bf.clear115 to i32, !dbg !4949
  %tobool117 = icmp ne i32 %bf.cast116, 0, !dbg !4949
  %157 = zext i1 %tobool117 to i64, !dbg !4949
  %cond = select i1 %tobool117, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !4949
  %158 = load i8*, i8** %rtest, align 8, !dbg !4949
  %159 = load i8*, i8** %wtest, align 8, !dbg !4949
  %160 = load i8*, i8** %irtest, align 8, !dbg !4949
  %161 = load i8*, i8** %iwtest, align 8, !dbg !4949
  %162 = load i8*, i8** %intrtest, align 8, !dbg !4949
  %163 = load i8*, i8** %intwtest, align 8, !dbg !4949
  %164 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !4949
  %alt = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %164, i32 0, i32 4, !dbg !4949
  %165 = load i32, i32* %alt, align 4, !dbg !4949
  %cmp118 = icmp sge i32 %165, 0, !dbg !4949
  %166 = zext i1 %cmp118 to i64, !dbg !4949
  %cond120 = select i1 %cmp118, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !4949
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev111, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14, i64 0, i64 0), i8* %call113, i8* %cond, i8* %158, i8* %159, i8* %160, i8* %161, i8* %162, i8* %163, i8* %cond120) #12, !dbg !4949
  store i32 0, i32* %retval, align 4, !dbg !4950
  br label %return, !dbg !4950

return:                                           ; preds = %if.end109, %if.then63, %if.then34, %if.then26, %if.then14, %if.then6
  %167 = load i32, i32* %retval, align 4, !dbg !4951
  ret i32 %167, !dbg !4951
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usbtest_disconnect(%struct.usb_interface* %intf) #2 !dbg !4952 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %dev = alloca %struct.usbtest_dev*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !4953, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev, metadata !4955, metadata !DIExpression()), !dbg !4956
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !4957
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #11, !dbg !4958
  %1 = bitcast i8* %call to %struct.usbtest_dev*, !dbg !4958
  store %struct.usbtest_dev* %1, %struct.usbtest_dev** %dev, align 8, !dbg !4956
  %2 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !4959
  call void @usb_set_intfdata(%struct.usb_interface* %2, i8* null) #11, !dbg !4960
  %3 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4961
  %buf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %3, i32 0, i32 13, !dbg !4962
  %4 = load i8*, i8** %buf, align 8, !dbg !4962
  call void @kfree(i8* %4) #11, !dbg !4963
  %5 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !4964
  %6 = bitcast %struct.usbtest_dev* %5 to i8*, !dbg !4964
  call void @kfree(i8* %6) #11, !dbg !4965
  ret void, !dbg !4966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbtest_ioctl(%struct.usb_interface* %intf, i32 %code, i8* %buf) #2 !dbg !4967 {
entry:
  %retval = alloca i32, align 4
  %intf.addr = alloca %struct.usb_interface*, align 8
  %code.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %dev = alloca %struct.usbtest_dev*, align 8
  %param_64 = alloca %struct.usbtest_param_64*, align 8
  %temp = alloca %struct.usbtest_param_32, align 4
  %param_32 = alloca %struct.usbtest_param_32*, align 8
  %start = alloca %struct.timespec64, align 8
  %end = alloca %struct.timespec64, align 8
  %duration = alloca %struct.timespec64, align 8
  %retval1 = alloca i32, align 4
  %tmp = alloca %struct.timespec64, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !4968, metadata !DIExpression()), !dbg !4969
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !4970, metadata !DIExpression()), !dbg !4971
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4972, metadata !DIExpression()), !dbg !4973
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev, metadata !4974, metadata !DIExpression()), !dbg !4975
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !4976
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #11, !dbg !4977
  %1 = bitcast i8* %call to %struct.usbtest_dev*, !dbg !4977
  store %struct.usbtest_dev* %1, %struct.usbtest_dev** %dev, align 8, !dbg !4975
  call void @llvm.dbg.declare(metadata %struct.usbtest_param_64** %param_64, metadata !4978, metadata !DIExpression()), !dbg !4989
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !4990
  %3 = bitcast i8* %2 to %struct.usbtest_param_64*, !dbg !4990
  store %struct.usbtest_param_64* %3, %struct.usbtest_param_64** %param_64, align 8, !dbg !4989
  call void @llvm.dbg.declare(metadata %struct.usbtest_param_32* %temp, metadata !4991, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.declare(metadata %struct.usbtest_param_32** %param_32, metadata !5002, metadata !DIExpression()), !dbg !5004
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !5005
  %5 = bitcast i8* %4 to %struct.usbtest_param_32*, !dbg !5005
  store %struct.usbtest_param_32* %5, %struct.usbtest_param_32** %param_32, align 8, !dbg !5004
  call void @llvm.dbg.declare(metadata %struct.timespec64* %start, metadata !5006, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.declare(metadata %struct.timespec64* %end, metadata !5008, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.declare(metadata %struct.timespec64* %duration, metadata !5010, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5012, metadata !DIExpression()), !dbg !5013
  store i32 -95, i32* %retval1, align 4, !dbg !5013
  %6 = load i32, i32* @mod_pattern, align 4, !dbg !5014
  store i32 %6, i32* @pattern, align 4, !dbg !5015
  %7 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5016
  %lock = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %7, i32 0, i32 12, !dbg !5018
  %call2 = call i32 @mutex_lock_interruptible(%struct.mutex* %lock) #11, !dbg !5019
  %tobool = icmp ne i32 %call2, 0, !dbg !5019
  br i1 %tobool, label %if.then, label %if.end, !dbg !5020

if.then:                                          ; preds = %entry
  store i32 -512, i32* %retval, align 4, !dbg !5021
  br label %return, !dbg !5021

if.end:                                           ; preds = %entry
  %8 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5022
  %info = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %8, i32 0, i32 1, !dbg !5024
  %9 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !5024
  %alt = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %9, i32 0, i32 4, !dbg !5025
  %10 = load i32, i32* %alt, align 4, !dbg !5025
  %cmp = icmp sge i32 %10, 0, !dbg !5026
  br i1 %cmp, label %if.then3, label %if.end16, !dbg !5027

if.then3:                                         ; preds = %if.end
  %11 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5028
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %11, i32 0, i32 0, !dbg !5031
  %12 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !dbg !5031
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %12, i32 0, i32 0, !dbg !5032
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2, !dbg !5033
  %13 = load i8, i8* %bInterfaceNumber, align 2, !dbg !5033
  %tobool4 = icmp ne i8 %13, 0, !dbg !5028
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5034

if.then5:                                         ; preds = %if.then3
  store i32 -19, i32* %retval1, align 4, !dbg !5035
  br label %free_mutex, !dbg !5037

if.end6:                                          ; preds = %if.then3
  %14 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5038
  %15 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5039
  %info7 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %15, i32 0, i32 1, !dbg !5040
  %16 = load %struct.usbtest_info*, %struct.usbtest_info** %info7, align 8, !dbg !5040
  %alt8 = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %16, i32 0, i32 4, !dbg !5041
  %17 = load i32, i32* %alt8, align 4, !dbg !5041
  %call9 = call i32 @set_altsetting(%struct.usbtest_dev* %14, i32 %17) #11, !dbg !5042
  store i32 %call9, i32* %retval1, align 4, !dbg !5043
  %18 = load i32, i32* %retval1, align 4, !dbg !5044
  %tobool10 = icmp ne i32 %18, 0, !dbg !5044
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !5046

if.then11:                                        ; preds = %if.end6
  %19 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5047
  %dev12 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %19, i32 0, i32 7, !dbg !5047
  %20 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5047
  %info13 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %20, i32 0, i32 1, !dbg !5047
  %21 = load %struct.usbtest_info*, %struct.usbtest_info** %info13, align 8, !dbg !5047
  %alt14 = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %21, i32 0, i32 4, !dbg !5047
  %22 = load i32, i32* %alt14, align 4, !dbg !5047
  %23 = load i32, i32* %retval1, align 4, !dbg !5047
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i32 %22, i32 %23) #12, !dbg !5047
  br label %free_mutex, !dbg !5049

if.end15:                                         ; preds = %if.end6
  br label %if.end16, !dbg !5050

if.end16:                                         ; preds = %if.end15, %if.end
  %24 = load i32, i32* %code.addr, align 4, !dbg !5051
  switch i32 %24, label %sw.default [
    i32 -1071098524, label %sw.bb
    i32 -1071884956, label %sw.bb22
  ], !dbg !5052

sw.bb:                                            ; preds = %if.end16
  %25 = load %struct.usbtest_param_64*, %struct.usbtest_param_64** %param_64, align 8, !dbg !5053
  %test_num = getelementptr inbounds %struct.usbtest_param_64, %struct.usbtest_param_64* %25, i32 0, i32 0, !dbg !5055
  %26 = load i32, i32* %test_num, align 8, !dbg !5055
  %test_num17 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 0, !dbg !5056
  store i32 %26, i32* %test_num17, align 4, !dbg !5057
  %27 = load %struct.usbtest_param_64*, %struct.usbtest_param_64** %param_64, align 8, !dbg !5058
  %iterations = getelementptr inbounds %struct.usbtest_param_64, %struct.usbtest_param_64* %27, i32 0, i32 1, !dbg !5059
  %28 = load i32, i32* %iterations, align 4, !dbg !5059
  %iterations18 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 1, !dbg !5060
  store i32 %28, i32* %iterations18, align 4, !dbg !5061
  %29 = load %struct.usbtest_param_64*, %struct.usbtest_param_64** %param_64, align 8, !dbg !5062
  %length = getelementptr inbounds %struct.usbtest_param_64, %struct.usbtest_param_64* %29, i32 0, i32 2, !dbg !5063
  %30 = load i32, i32* %length, align 8, !dbg !5063
  %length19 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 2, !dbg !5064
  store i32 %30, i32* %length19, align 4, !dbg !5065
  %31 = load %struct.usbtest_param_64*, %struct.usbtest_param_64** %param_64, align 8, !dbg !5066
  %sglen = getelementptr inbounds %struct.usbtest_param_64, %struct.usbtest_param_64* %31, i32 0, i32 4, !dbg !5067
  %32 = load i32, i32* %sglen, align 8, !dbg !5067
  %sglen20 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 4, !dbg !5068
  store i32 %32, i32* %sglen20, align 4, !dbg !5069
  %33 = load %struct.usbtest_param_64*, %struct.usbtest_param_64** %param_64, align 8, !dbg !5070
  %vary = getelementptr inbounds %struct.usbtest_param_64, %struct.usbtest_param_64* %33, i32 0, i32 3, !dbg !5071
  %34 = load i32, i32* %vary, align 4, !dbg !5071
  %vary21 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 3, !dbg !5072
  store i32 %34, i32* %vary21, align 4, !dbg !5073
  store %struct.usbtest_param_32* %temp, %struct.usbtest_param_32** %param_32, align 8, !dbg !5074
  br label %sw.epilog, !dbg !5075

sw.bb22:                                          ; preds = %if.end16
  br label %sw.epilog, !dbg !5076

sw.default:                                       ; preds = %if.end16
  store i32 -95, i32* %retval1, align 4, !dbg !5077
  br label %free_mutex, !dbg !5078

sw.epilog:                                        ; preds = %sw.bb22, %sw.bb
  call void @ktime_get_ts64(%struct.timespec64* %start) #11, !dbg !5079
  %35 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5080
  %36 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param_32, align 8, !dbg !5081
  %call23 = call i32 @usbtest_do_ioctl(%struct.usb_interface* %35, %struct.usbtest_param_32* %36) #11, !dbg !5082
  store i32 %call23, i32* %retval1, align 4, !dbg !5083
  %37 = load i32, i32* %retval1, align 4, !dbg !5084
  %cmp24 = icmp slt i32 %37, 0, !dbg !5086
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !5087

if.then25:                                        ; preds = %sw.epilog
  br label %free_mutex, !dbg !5088

if.end26:                                         ; preds = %sw.epilog
  call void @ktime_get_ts64(%struct.timespec64* %end) #11, !dbg !5089
  %38 = bitcast %struct.timespec64* %end to { i64, i64 }*, !dbg !5090
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %38, i32 0, i32 0, !dbg !5090
  %40 = load i64, i64* %39, align 8, !dbg !5090
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %38, i32 0, i32 1, !dbg !5090
  %42 = load i64, i64* %41, align 8, !dbg !5090
  %43 = bitcast %struct.timespec64* %start to { i64, i64 }*, !dbg !5090
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %43, i32 0, i32 0, !dbg !5090
  %45 = load i64, i64* %44, align 8, !dbg !5090
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %43, i32 0, i32 1, !dbg !5090
  %47 = load i64, i64* %46, align 8, !dbg !5090
  %call27 = call { i64, i64 } @timespec64_sub(i64 %40, i64 %42, i64 %45, i64 %47) #11, !dbg !5090
  %48 = bitcast %struct.timespec64* %tmp to { i64, i64 }*, !dbg !5090
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %48, i32 0, i32 0, !dbg !5090
  %50 = extractvalue { i64, i64 } %call27, 0, !dbg !5090
  store i64 %50, i64* %49, align 8, !dbg !5090
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %48, i32 0, i32 1, !dbg !5090
  %52 = extractvalue { i64, i64 } %call27, 1, !dbg !5090
  store i64 %52, i64* %51, align 8, !dbg !5090
  %53 = bitcast %struct.timespec64* %duration to i8*, !dbg !5090
  %54 = bitcast %struct.timespec64* %tmp to i8*, !dbg !5090
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false), !dbg !5090
  %tv_sec = getelementptr inbounds %struct.timespec64, %struct.timespec64* %duration, i32 0, i32 0, !dbg !5091
  %55 = load i64, i64* %tv_sec, align 8, !dbg !5091
  %conv = trunc i64 %55 to i32, !dbg !5092
  %duration_sec = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 5, !dbg !5093
  store i32 %conv, i32* %duration_sec, align 4, !dbg !5094
  %tv_nsec = getelementptr inbounds %struct.timespec64, %struct.timespec64* %duration, i32 0, i32 1, !dbg !5095
  %56 = load i64, i64* %tv_nsec, align 8, !dbg !5095
  %div = sdiv i64 %56, 1000, !dbg !5096
  %conv28 = trunc i64 %div to i32, !dbg !5097
  %duration_usec = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 6, !dbg !5098
  store i32 %conv28, i32* %duration_usec, align 4, !dbg !5099
  %57 = load i32, i32* %code.addr, align 4, !dbg !5100
  switch i32 %57, label %sw.epilog41 [
    i32 -1071884956, label %sw.bb29
    i32 -1071098524, label %sw.bb34
  ], !dbg !5101

sw.bb29:                                          ; preds = %if.end26
  %duration_sec30 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 5, !dbg !5102
  %58 = load i32, i32* %duration_sec30, align 4, !dbg !5102
  %59 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param_32, align 8, !dbg !5104
  %duration_sec31 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %59, i32 0, i32 5, !dbg !5105
  store i32 %58, i32* %duration_sec31, align 4, !dbg !5106
  %duration_usec32 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 6, !dbg !5107
  %60 = load i32, i32* %duration_usec32, align 4, !dbg !5107
  %61 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param_32, align 8, !dbg !5108
  %duration_usec33 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %61, i32 0, i32 6, !dbg !5109
  store i32 %60, i32* %duration_usec33, align 4, !dbg !5110
  br label %sw.epilog41, !dbg !5111

sw.bb34:                                          ; preds = %if.end26
  %duration_sec35 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 5, !dbg !5112
  %62 = load i32, i32* %duration_sec35, align 4, !dbg !5112
  %conv36 = sext i32 %62 to i64, !dbg !5113
  %63 = load %struct.usbtest_param_64*, %struct.usbtest_param_64** %param_64, align 8, !dbg !5114
  %duration_sec37 = getelementptr inbounds %struct.usbtest_param_64, %struct.usbtest_param_64* %63, i32 0, i32 5, !dbg !5115
  store i64 %conv36, i64* %duration_sec37, align 8, !dbg !5116
  %duration_usec38 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %temp, i32 0, i32 6, !dbg !5117
  %64 = load i32, i32* %duration_usec38, align 4, !dbg !5117
  %conv39 = sext i32 %64 to i64, !dbg !5118
  %65 = load %struct.usbtest_param_64*, %struct.usbtest_param_64** %param_64, align 8, !dbg !5119
  %duration_usec40 = getelementptr inbounds %struct.usbtest_param_64, %struct.usbtest_param_64* %65, i32 0, i32 6, !dbg !5120
  store i64 %conv39, i64* %duration_usec40, align 8, !dbg !5121
  br label %sw.epilog41, !dbg !5122

sw.epilog41:                                      ; preds = %if.end26, %sw.bb34, %sw.bb29
  br label %free_mutex, !dbg !5123

free_mutex:                                       ; preds = %sw.epilog41, %if.then25, %sw.default, %if.then11, %if.then5
  call void @llvm.dbg.label(metadata !5124), !dbg !5125
  %66 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5126
  %lock42 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %66, i32 0, i32 12, !dbg !5127
  call void @mutex_unlock(%struct.mutex* %lock42) #11, !dbg !5128
  %67 = load i32, i32* %retval1, align 4, !dbg !5129
  store i32 %67, i32* %retval, align 4, !dbg !5130
  br label %return, !dbg !5130

return:                                           ; preds = %free_mutex, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !5131
  ret i32 %68, !dbg !5131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbtest_suspend(%struct.usb_interface* %intf, i32 %message.coerce) #2 !dbg !5132 {
entry:
  %message = alloca %struct.pm_message, align 4
  %intf.addr = alloca %struct.usb_interface*, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %message, i32 0, i32 0
  store i32 %message.coerce, i32* %coerce.dive, align 4
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5133, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.declare(metadata %struct.pm_message* %message, metadata !5135, metadata !DIExpression()), !dbg !5136
  ret i32 0, !dbg !5137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbtest_resume(%struct.usb_interface* %intf) #2 !dbg !5138 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5139, metadata !DIExpression()), !dbg !5140
  ret i32 0, !dbg !5141
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %intf) #2 !dbg !5142 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_device*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5145, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5147, metadata !DIExpression()), !dbg !5149
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5149
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !5149
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !5149
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5149
  %2 = bitcast %struct.device* %1 to i8*, !dbg !5149
  store i8* %2, i8** %__mptr, align 8, !dbg !5149
  br label %do.body, !dbg !5149

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5150

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5149
  %add.ptr = getelementptr i8, i8* %3, i64 -160, !dbg !5149
  %4 = bitcast i8* %add.ptr to %struct.usb_device*, !dbg !5149
  store %struct.usb_device* %4, %struct.usb_device** %tmp, align 8, !dbg !5150
  %5 = load %struct.usb_device*, %struct.usb_device** %tmp, align 8, !dbg !5149
  ret %struct.usb_device* %5, !dbg !5152
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !5153 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4460, metadata !DIExpression()), !dbg !5154
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4472, metadata !DIExpression()), !dbg !5157
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4474, metadata !DIExpression()), !dbg !5158
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4476, metadata !DIExpression()), !dbg !5159
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4478, metadata !DIExpression()), !dbg !5160
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4484, metadata !DIExpression()), !dbg !5162
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4490, metadata !DIExpression()), !dbg !5164
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4499, metadata !DIExpression()), !dbg !5167
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4501, metadata !DIExpression()), !dbg !5168
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4503, metadata !DIExpression()), !dbg !5169
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4505, metadata !DIExpression()), !dbg !5170
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4507, metadata !DIExpression()), !dbg !5171
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4509, metadata !DIExpression()), !dbg !5172
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4511, metadata !DIExpression()), !dbg !5173
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4513, metadata !DIExpression()), !dbg !5174
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5175, metadata !DIExpression()), !dbg !5176
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5177, metadata !DIExpression()), !dbg !5178
  %0 = load i64, i64* %size.addr, align 8, !dbg !5179
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5180
  %or = or i32 %1, 256, !dbg !5181
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5182
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !5183
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5184

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5185
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5186
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5187

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5188
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5189
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5190
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !5191
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5171
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5192
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5193
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5194
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5195
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5196
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5197
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !5198
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5198
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5198
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5198
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5198
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5199
  br label %kmalloc.exit, !dbg !5199

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5200
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5201
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5201
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5202

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5203
  br label %kmalloc_index.exit.i, !dbg !5203

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5204
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5205
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5206

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5207
  br label %kmalloc_index.exit.i, !dbg !5207

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5208
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5209
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5210

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5211
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5212
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5213

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5214
  br label %kmalloc_index.exit.i, !dbg !5214

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5215
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5216
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5217

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5218
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5219
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5220

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5221
  br label %kmalloc_index.exit.i, !dbg !5221

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5222
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5223
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5224

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5225
  br label %kmalloc_index.exit.i, !dbg !5225

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5226
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5227
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5228

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5229
  br label %kmalloc_index.exit.i, !dbg !5229

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5230
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5231
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5232

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5233
  br label %kmalloc_index.exit.i, !dbg !5233

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5234
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5235
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5236

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5237
  br label %kmalloc_index.exit.i, !dbg !5237

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5238
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5239
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5240

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5241
  br label %kmalloc_index.exit.i, !dbg !5241

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5242
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5243
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5244

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5245
  br label %kmalloc_index.exit.i, !dbg !5245

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5246
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5247
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5248

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5249
  br label %kmalloc_index.exit.i, !dbg !5249

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5250
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5251
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5252

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5253
  br label %kmalloc_index.exit.i, !dbg !5253

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5254
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5255
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5256

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5257
  br label %kmalloc_index.exit.i, !dbg !5257

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5258
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5259
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5260

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5261
  br label %kmalloc_index.exit.i, !dbg !5261

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5262
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5263
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5264

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5265
  br label %kmalloc_index.exit.i, !dbg !5265

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5266
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5267
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5268

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5269
  br label %kmalloc_index.exit.i, !dbg !5269

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5270
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5271
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5272

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5273
  br label %kmalloc_index.exit.i, !dbg !5273

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5274
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5275
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5276

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5277
  br label %kmalloc_index.exit.i, !dbg !5277

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5278
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5279
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5280

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5281
  br label %kmalloc_index.exit.i, !dbg !5281

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5282
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5283
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5284

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5285
  br label %kmalloc_index.exit.i, !dbg !5285

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5286
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5287
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5288

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5289
  br label %kmalloc_index.exit.i, !dbg !5289

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5290
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5291
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5292

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5293
  br label %kmalloc_index.exit.i, !dbg !5293

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5294
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5295
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5296

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5297
  br label %kmalloc_index.exit.i, !dbg !5297

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5298
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5299
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5300

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5301
  br label %kmalloc_index.exit.i, !dbg !5301

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5302
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5303
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5304

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5305
  br label %kmalloc_index.exit.i, !dbg !5305

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5306
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5307
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5308

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5309
  br label %kmalloc_index.exit.i, !dbg !5309

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5310
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5311
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5312

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5313
  br label %kmalloc_index.exit.i, !dbg !5313

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5314
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5315
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5316

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5317
  br label %kmalloc_index.exit.i, !dbg !5317

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5318, !srcloc !4773
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !5319, !srcloc !4777
  unreachable, !dbg !5320

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5321
  store i32 %45, i32* %index.i, align 4, !dbg !5322
  %46 = load i32, i32* %index.i, align 4, !dbg !5323
  %tobool.i = icmp ne i32 %46, 0, !dbg !5323
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5324

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5325
  br label %kmalloc.exit, !dbg !5325

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5326
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5327
  %and.i.i = and i32 %48, 17, !dbg !5327
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5327
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5327
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5327
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5327
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5328

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5329
  br label %kmalloc_type.exit.i, !dbg !5329

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5330
  %and2.i.i = and i32 %49, 1, !dbg !5331
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5330
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5330
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5330
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5332
  br label %kmalloc_type.exit.i, !dbg !5332

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5333
  %idxprom.i = zext i32 %51 to i64, !dbg !5334
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5334
  %52 = load i32, i32* %index.i, align 4, !dbg !5335
  %idxprom6.i = zext i32 %52 to i64, !dbg !5334
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5334
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5334
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5336
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5337
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5338
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5339
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !5340
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5340
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5340
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5340
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5340
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5159
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5341
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5342
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5343
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5344
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !5345
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5346
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5347
  store i8* %62, i8** %retval.i, align 8, !dbg !5348
  br label %kmalloc.exit, !dbg !5348

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5349
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5350
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !5351
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5351
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5351
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5351
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5351
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5352
  br label %kmalloc.exit, !dbg !5352

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5353
  ret i8* %65, !dbg !5354
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__create_pipe(%struct.usb_device* %dev, i32 %endpoint) #2 !dbg !5355 {
entry:
  %dev.addr = alloca %struct.usb_device*, align 8
  %endpoint.addr = alloca i32, align 4
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !5358, metadata !DIExpression()), !dbg !5359
  store i32 %endpoint, i32* %endpoint.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endpoint.addr, metadata !5360, metadata !DIExpression()), !dbg !5361
  %0 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !5362
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0, !dbg !5363
  %1 = load i32, i32* %devnum, align 8, !dbg !5363
  %shl = shl i32 %1, 8, !dbg !5364
  %2 = load i32, i32* %endpoint.addr, align 4, !dbg !5365
  %shl1 = shl i32 %2, 15, !dbg !5366
  %or = or i32 %shl, %shl1, !dbg !5367
  ret i32 %or, !dbg !5368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_endpoints(%struct.usbtest_dev* %dev, %struct.usb_interface* %intf) #2 !dbg !5369 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %intf.addr = alloca %struct.usb_interface*, align 8
  %tmp = alloca i32, align 4
  %alt = alloca %struct.usb_host_interface*, align 8
  %in = alloca %struct.usb_host_endpoint*, align 8
  %out = alloca %struct.usb_host_endpoint*, align 8
  %iso_in = alloca %struct.usb_host_endpoint*, align 8
  %iso_out = alloca %struct.usb_host_endpoint*, align 8
  %int_in = alloca %struct.usb_host_endpoint*, align 8
  %int_out = alloca %struct.usb_host_endpoint*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %ep = alloca i32, align 4
  %e = alloca %struct.usb_host_endpoint*, align 8
  %edi = alloca i32, align 4
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !5372, metadata !DIExpression()), !dbg !5373
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5374, metadata !DIExpression()), !dbg !5375
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5376, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.declare(metadata %struct.usb_host_interface** %alt, metadata !5378, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %in, metadata !5380, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %out, metadata !5382, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %iso_in, metadata !5384, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %iso_out, metadata !5386, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %int_in, metadata !5388, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %int_out, metadata !5390, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !5392, metadata !DIExpression()), !dbg !5393
  store i32 0, i32* %tmp, align 4, !dbg !5394
  br label %for.cond, !dbg !5396

for.cond:                                         ; preds = %for.inc39, %entry
  %0 = load i32, i32* %tmp, align 4, !dbg !5397
  %1 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5399
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %1, i32 0, i32 2, !dbg !5400
  %2 = load i32, i32* %num_altsetting, align 8, !dbg !5400
  %cmp = icmp ult i32 %0, %2, !dbg !5401
  br i1 %cmp, label %for.body, label %for.end41, !dbg !5402

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ep, metadata !5403, metadata !DIExpression()), !dbg !5405
  store %struct.usb_host_endpoint* null, %struct.usb_host_endpoint** %out, align 8, !dbg !5406
  store %struct.usb_host_endpoint* null, %struct.usb_host_endpoint** %in, align 8, !dbg !5407
  store %struct.usb_host_endpoint* null, %struct.usb_host_endpoint** %iso_out, align 8, !dbg !5408
  store %struct.usb_host_endpoint* null, %struct.usb_host_endpoint** %iso_in, align 8, !dbg !5409
  store %struct.usb_host_endpoint* null, %struct.usb_host_endpoint** %int_out, align 8, !dbg !5410
  store %struct.usb_host_endpoint* null, %struct.usb_host_endpoint** %int_in, align 8, !dbg !5411
  %3 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5412
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %3, i32 0, i32 0, !dbg !5413
  %4 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !dbg !5413
  %5 = load i32, i32* %tmp, align 4, !dbg !5414
  %idx.ext = sext i32 %5 to i64, !dbg !5415
  %add.ptr = getelementptr %struct.usb_host_interface, %struct.usb_host_interface* %4, i64 %idx.ext, !dbg !5415
  store %struct.usb_host_interface* %add.ptr, %struct.usb_host_interface** %alt, align 8, !dbg !5416
  %6 = load i32, i32* @override_alt, align 4, !dbg !5417
  %cmp1 = icmp sge i32 %6, 0, !dbg !5419
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !5420

land.lhs.true:                                    ; preds = %for.body
  %7 = load i32, i32* @override_alt, align 4, !dbg !5421
  %8 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt, align 8, !dbg !5422
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %8, i32 0, i32 0, !dbg !5423
  %bAlternateSetting = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 3, !dbg !5424
  %9 = load i8, i8* %bAlternateSetting, align 1, !dbg !5424
  %conv = zext i8 %9 to i32, !dbg !5422
  %cmp2 = icmp ne i32 %7, %conv, !dbg !5425
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5426

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc39, !dbg !5427

if.end:                                           ; preds = %land.lhs.true, %for.body
  store i32 0, i32* %ep, align 4, !dbg !5428
  br label %for.cond4, !dbg !5430

for.cond4:                                        ; preds = %for.inc, %if.end
  %10 = load i32, i32* %ep, align 4, !dbg !5431
  %11 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt, align 8, !dbg !5433
  %desc5 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %11, i32 0, i32 0, !dbg !5434
  %bNumEndpoints = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc5, i32 0, i32 4, !dbg !5435
  %12 = load i8, i8* %bNumEndpoints, align 4, !dbg !5435
  %conv6 = zext i8 %12 to i32, !dbg !5433
  %cmp7 = icmp ult i32 %10, %conv6, !dbg !5436
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !5437

for.body9:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %e, metadata !5438, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.declare(metadata i32* %edi, metadata !5441, metadata !DIExpression()), !dbg !5442
  %13 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt, align 8, !dbg !5443
  %endpoint = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %13, i32 0, i32 3, !dbg !5444
  %14 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint, align 8, !dbg !5444
  %15 = load i32, i32* %ep, align 4, !dbg !5445
  %idx.ext10 = zext i32 %15 to i64, !dbg !5446
  %add.ptr11 = getelementptr %struct.usb_host_endpoint, %struct.usb_host_endpoint* %14, i64 %idx.ext10, !dbg !5446
  store %struct.usb_host_endpoint* %add.ptr11, %struct.usb_host_endpoint** %e, align 8, !dbg !5447
  %16 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %e, align 8, !dbg !5448
  %desc12 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %16, i32 0, i32 0, !dbg !5449
  %call = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %desc12) #11, !dbg !5450
  store i32 %call, i32* %edi, align 4, !dbg !5451
  %17 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %e, align 8, !dbg !5452
  %desc13 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %17, i32 0, i32 0, !dbg !5453
  %call14 = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %desc13) #11, !dbg !5454
  switch i32 %call14, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb15
    i32 1, label %sw.bb18
  ], !dbg !5455

sw.bb:                                            ; preds = %for.body9
  %18 = load i32, i32* %edi, align 4, !dbg !5456
  %19 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %e, align 8, !dbg !5458
  call void @endpoint_update(i32 %18, %struct.usb_host_endpoint** %in, %struct.usb_host_endpoint** %out, %struct.usb_host_endpoint* %19) #11, !dbg !5459
  br label %for.inc, !dbg !5460

sw.bb15:                                          ; preds = %for.body9
  %20 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5461
  %info = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %20, i32 0, i32 1, !dbg !5463
  %21 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !5463
  %intr = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %21, i32 0, i32 3, !dbg !5464
  %bf.load = load i8, i8* %intr, align 2, !dbg !5464
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !5464
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5464
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5464
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5461
  br i1 %tobool, label %if.then16, label %if.end17, !dbg !5465

if.then16:                                        ; preds = %sw.bb15
  %22 = load i32, i32* %edi, align 4, !dbg !5466
  %23 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %e, align 8, !dbg !5467
  call void @endpoint_update(i32 %22, %struct.usb_host_endpoint** %int_in, %struct.usb_host_endpoint** %int_out, %struct.usb_host_endpoint* %23) #11, !dbg !5468
  br label %if.end17, !dbg !5468

if.end17:                                         ; preds = %if.then16, %sw.bb15
  br label %for.inc, !dbg !5469

sw.bb18:                                          ; preds = %for.body9
  %24 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5470
  %info19 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %24, i32 0, i32 1, !dbg !5472
  %25 = load %struct.usbtest_info*, %struct.usbtest_info** %info19, align 8, !dbg !5472
  %iso = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %25, i32 0, i32 3, !dbg !5473
  %bf.load20 = load i8, i8* %iso, align 2, !dbg !5473
  %bf.lshr21 = lshr i8 %bf.load20, 2, !dbg !5473
  %bf.clear22 = and i8 %bf.lshr21, 1, !dbg !5473
  %bf.cast23 = zext i8 %bf.clear22 to i32, !dbg !5473
  %tobool24 = icmp ne i32 %bf.cast23, 0, !dbg !5470
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !5474

if.then25:                                        ; preds = %sw.bb18
  %26 = load i32, i32* %edi, align 4, !dbg !5475
  %27 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %e, align 8, !dbg !5476
  call void @endpoint_update(i32 %26, %struct.usb_host_endpoint** %iso_in, %struct.usb_host_endpoint** %iso_out, %struct.usb_host_endpoint* %27) #11, !dbg !5477
  br label %if.end26, !dbg !5477

if.end26:                                         ; preds = %if.then25, %sw.bb18
  br label %sw.default, !dbg !5473

sw.default:                                       ; preds = %for.body9, %if.end26
  br label %for.inc, !dbg !5478

for.inc:                                          ; preds = %sw.default, %if.end17, %sw.bb
  %28 = load i32, i32* %ep, align 4, !dbg !5479
  %inc = add i32 %28, 1, !dbg !5479
  store i32 %inc, i32* %ep, align 4, !dbg !5479
  br label %for.cond4, !dbg !5480, !llvm.loop !5481

for.end:                                          ; preds = %for.cond4
  %29 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %in, align 8, !dbg !5483
  %tobool27 = icmp ne %struct.usb_host_endpoint* %29, null, !dbg !5483
  br i1 %tobool27, label %land.lhs.true28, label %lor.lhs.false, !dbg !5485

land.lhs.true28:                                  ; preds = %for.end
  %30 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %out, align 8, !dbg !5486
  %tobool29 = icmp ne %struct.usb_host_endpoint* %30, null, !dbg !5486
  br i1 %tobool29, label %if.then37, label %lor.lhs.false, !dbg !5487

lor.lhs.false:                                    ; preds = %land.lhs.true28, %for.end
  %31 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %iso_in, align 8, !dbg !5488
  %tobool30 = icmp ne %struct.usb_host_endpoint* %31, null, !dbg !5488
  br i1 %tobool30, label %if.then37, label %lor.lhs.false31, !dbg !5489

lor.lhs.false31:                                  ; preds = %lor.lhs.false
  %32 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %iso_out, align 8, !dbg !5490
  %tobool32 = icmp ne %struct.usb_host_endpoint* %32, null, !dbg !5490
  br i1 %tobool32, label %if.then37, label %lor.lhs.false33, !dbg !5491

lor.lhs.false33:                                  ; preds = %lor.lhs.false31
  %33 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_in, align 8, !dbg !5492
  %tobool34 = icmp ne %struct.usb_host_endpoint* %33, null, !dbg !5492
  br i1 %tobool34, label %if.then37, label %lor.lhs.false35, !dbg !5493

lor.lhs.false35:                                  ; preds = %lor.lhs.false33
  %34 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_out, align 8, !dbg !5494
  %tobool36 = icmp ne %struct.usb_host_endpoint* %34, null, !dbg !5494
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !5495

if.then37:                                        ; preds = %lor.lhs.false35, %lor.lhs.false33, %lor.lhs.false31, %lor.lhs.false, %land.lhs.true28
  br label %found, !dbg !5496

if.end38:                                         ; preds = %lor.lhs.false35
  br label %for.inc39, !dbg !5497

for.inc39:                                        ; preds = %if.end38, %if.then
  %35 = load i32, i32* %tmp, align 4, !dbg !5498
  %inc40 = add i32 %35, 1, !dbg !5498
  store i32 %inc40, i32* %tmp, align 4, !dbg !5498
  br label %for.cond, !dbg !5499, !llvm.loop !5500

for.end41:                                        ; preds = %for.cond
  store i32 -22, i32* %retval, align 4, !dbg !5502
  br label %return, !dbg !5502

found:                                            ; preds = %if.then37
  call void @llvm.dbg.label(metadata !5503), !dbg !5504
  %36 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5505
  %call42 = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %36) #11, !dbg !5506
  store %struct.usb_device* %call42, %struct.usb_device** %udev, align 8, !dbg !5507
  %37 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt, align 8, !dbg !5508
  %desc43 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %37, i32 0, i32 0, !dbg !5509
  %bAlternateSetting44 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc43, i32 0, i32 3, !dbg !5510
  %38 = load i8, i8* %bAlternateSetting44, align 1, !dbg !5510
  %conv45 = zext i8 %38 to i32, !dbg !5508
  %39 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5511
  %info46 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %39, i32 0, i32 1, !dbg !5512
  %40 = load %struct.usbtest_info*, %struct.usbtest_info** %info46, align 8, !dbg !5512
  %alt47 = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %40, i32 0, i32 4, !dbg !5513
  store i32 %conv45, i32* %alt47, align 4, !dbg !5514
  %41 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt, align 8, !dbg !5515
  %desc48 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %41, i32 0, i32 0, !dbg !5517
  %bAlternateSetting49 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc48, i32 0, i32 3, !dbg !5518
  %42 = load i8, i8* %bAlternateSetting49, align 1, !dbg !5518
  %conv50 = zext i8 %42 to i32, !dbg !5515
  %cmp51 = icmp ne i32 %conv50, 0, !dbg !5519
  br i1 %cmp51, label %if.then53, label %if.end64, !dbg !5520

if.then53:                                        ; preds = %found
  %43 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5521
  %44 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt, align 8, !dbg !5523
  %desc54 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %44, i32 0, i32 0, !dbg !5524
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc54, i32 0, i32 2, !dbg !5525
  %45 = load i8, i8* %bInterfaceNumber, align 2, !dbg !5525
  %conv55 = zext i8 %45 to i32, !dbg !5523
  %46 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt, align 8, !dbg !5526
  %desc56 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %46, i32 0, i32 0, !dbg !5527
  %bAlternateSetting57 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc56, i32 0, i32 3, !dbg !5528
  %47 = load i8, i8* %bAlternateSetting57, align 1, !dbg !5528
  %conv58 = zext i8 %47 to i32, !dbg !5526
  %call59 = call i32 @usb_set_interface(%struct.usb_device* %43, i32 %conv55, i32 %conv58) #11, !dbg !5529
  store i32 %call59, i32* %tmp, align 4, !dbg !5530
  %48 = load i32, i32* %tmp, align 4, !dbg !5531
  %cmp60 = icmp slt i32 %48, 0, !dbg !5533
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !5534

if.then62:                                        ; preds = %if.then53
  %49 = load i32, i32* %tmp, align 4, !dbg !5535
  store i32 %49, i32* %retval, align 4, !dbg !5536
  br label %return, !dbg !5536

if.end63:                                         ; preds = %if.then53
  br label %if.end64, !dbg !5537

if.end64:                                         ; preds = %if.end63, %found
  %50 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %in, align 8, !dbg !5538
  %tobool65 = icmp ne %struct.usb_host_endpoint* %50, null, !dbg !5538
  br i1 %tobool65, label %if.then66, label %if.end71, !dbg !5540

if.then66:                                        ; preds = %if.end64
  %51 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5541
  %52 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %in, align 8, !dbg !5541
  %desc67 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %52, i32 0, i32 0, !dbg !5541
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc67, i32 0, i32 2, !dbg !5541
  %53 = load i8, i8* %bEndpointAddress, align 2, !dbg !5541
  %conv68 = zext i8 %53 to i32, !dbg !5541
  %and = and i32 %conv68, 15, !dbg !5541
  %call69 = call i32 @__create_pipe(%struct.usb_device* %51, i32 %and) #11, !dbg !5541
  %or = or i32 -1073741824, %call69, !dbg !5541
  %or70 = or i32 %or, 128, !dbg !5541
  %54 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5542
  %in_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %54, i32 0, i32 2, !dbg !5543
  store i32 %or70, i32* %in_pipe, align 8, !dbg !5544
  br label %if.end71, !dbg !5542

if.end71:                                         ; preds = %if.then66, %if.end64
  %55 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %out, align 8, !dbg !5545
  %tobool72 = icmp ne %struct.usb_host_endpoint* %55, null, !dbg !5545
  br i1 %tobool72, label %if.then73, label %if.end80, !dbg !5547

if.then73:                                        ; preds = %if.end71
  %56 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5548
  %57 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %out, align 8, !dbg !5548
  %desc74 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %57, i32 0, i32 0, !dbg !5548
  %bEndpointAddress75 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc74, i32 0, i32 2, !dbg !5548
  %58 = load i8, i8* %bEndpointAddress75, align 2, !dbg !5548
  %conv76 = zext i8 %58 to i32, !dbg !5548
  %and77 = and i32 %conv76, 15, !dbg !5548
  %call78 = call i32 @__create_pipe(%struct.usb_device* %56, i32 %and77) #11, !dbg !5548
  %or79 = or i32 -1073741824, %call78, !dbg !5548
  %59 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5549
  %out_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %59, i32 0, i32 3, !dbg !5550
  store i32 %or79, i32* %out_pipe, align 4, !dbg !5551
  br label %if.end80, !dbg !5549

if.end80:                                         ; preds = %if.then73, %if.end71
  %60 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %iso_in, align 8, !dbg !5552
  %tobool81 = icmp ne %struct.usb_host_endpoint* %60, null, !dbg !5552
  br i1 %tobool81, label %if.then82, label %if.end92, !dbg !5554

if.then82:                                        ; preds = %if.end80
  %61 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %iso_in, align 8, !dbg !5555
  %desc83 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %61, i32 0, i32 0, !dbg !5557
  %62 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5558
  %iso_in84 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %62, i32 0, i32 8, !dbg !5559
  store %struct.usb_endpoint_descriptor* %desc83, %struct.usb_endpoint_descriptor** %iso_in84, align 8, !dbg !5560
  %63 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5561
  %64 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %iso_in, align 8, !dbg !5561
  %desc85 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %64, i32 0, i32 0, !dbg !5561
  %bEndpointAddress86 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc85, i32 0, i32 2, !dbg !5561
  %65 = load i8, i8* %bEndpointAddress86, align 2, !dbg !5561
  %conv87 = zext i8 %65 to i32, !dbg !5561
  %and88 = and i32 %conv87, 15, !dbg !5561
  %call89 = call i32 @__create_pipe(%struct.usb_device* %63, i32 %and88) #11, !dbg !5561
  %or90 = or i32 0, %call89, !dbg !5561
  %or91 = or i32 %or90, 128, !dbg !5561
  %66 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5562
  %in_iso_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %66, i32 0, i32 4, !dbg !5563
  store i32 %or91, i32* %in_iso_pipe, align 8, !dbg !5564
  br label %if.end92, !dbg !5565

if.end92:                                         ; preds = %if.then82, %if.end80
  %67 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %iso_out, align 8, !dbg !5566
  %tobool93 = icmp ne %struct.usb_host_endpoint* %67, null, !dbg !5566
  br i1 %tobool93, label %if.then94, label %if.end103, !dbg !5568

if.then94:                                        ; preds = %if.end92
  %68 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %iso_out, align 8, !dbg !5569
  %desc95 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %68, i32 0, i32 0, !dbg !5571
  %69 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5572
  %iso_out96 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %69, i32 0, i32 9, !dbg !5573
  store %struct.usb_endpoint_descriptor* %desc95, %struct.usb_endpoint_descriptor** %iso_out96, align 8, !dbg !5574
  %70 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5575
  %71 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %iso_out, align 8, !dbg !5575
  %desc97 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %71, i32 0, i32 0, !dbg !5575
  %bEndpointAddress98 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc97, i32 0, i32 2, !dbg !5575
  %72 = load i8, i8* %bEndpointAddress98, align 2, !dbg !5575
  %conv99 = zext i8 %72 to i32, !dbg !5575
  %and100 = and i32 %conv99, 15, !dbg !5575
  %call101 = call i32 @__create_pipe(%struct.usb_device* %70, i32 %and100) #11, !dbg !5575
  %or102 = or i32 0, %call101, !dbg !5575
  %73 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5576
  %out_iso_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %73, i32 0, i32 5, !dbg !5577
  store i32 %or102, i32* %out_iso_pipe, align 4, !dbg !5578
  br label %if.end103, !dbg !5579

if.end103:                                        ; preds = %if.then94, %if.end92
  %74 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_in, align 8, !dbg !5580
  %tobool104 = icmp ne %struct.usb_host_endpoint* %74, null, !dbg !5580
  br i1 %tobool104, label %if.then105, label %if.end115, !dbg !5582

if.then105:                                       ; preds = %if.end103
  %75 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_in, align 8, !dbg !5583
  %desc106 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %75, i32 0, i32 0, !dbg !5585
  %76 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5586
  %int_in107 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %76, i32 0, i32 10, !dbg !5587
  store %struct.usb_endpoint_descriptor* %desc106, %struct.usb_endpoint_descriptor** %int_in107, align 8, !dbg !5588
  %77 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5589
  %78 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_in, align 8, !dbg !5589
  %desc108 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %78, i32 0, i32 0, !dbg !5589
  %bEndpointAddress109 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc108, i32 0, i32 2, !dbg !5589
  %79 = load i8, i8* %bEndpointAddress109, align 2, !dbg !5589
  %conv110 = zext i8 %79 to i32, !dbg !5589
  %and111 = and i32 %conv110, 15, !dbg !5589
  %call112 = call i32 @__create_pipe(%struct.usb_device* %77, i32 %and111) #11, !dbg !5589
  %or113 = or i32 1073741824, %call112, !dbg !5589
  %or114 = or i32 %or113, 128, !dbg !5589
  %80 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5590
  %in_int_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %80, i32 0, i32 6, !dbg !5591
  store i32 %or114, i32* %in_int_pipe, align 8, !dbg !5592
  br label %if.end115, !dbg !5593

if.end115:                                        ; preds = %if.then105, %if.end103
  %81 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_out, align 8, !dbg !5594
  %tobool116 = icmp ne %struct.usb_host_endpoint* %81, null, !dbg !5594
  br i1 %tobool116, label %if.then117, label %if.end126, !dbg !5596

if.then117:                                       ; preds = %if.end115
  %82 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_out, align 8, !dbg !5597
  %desc118 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %82, i32 0, i32 0, !dbg !5599
  %83 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5600
  %int_out119 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %83, i32 0, i32 11, !dbg !5601
  store %struct.usb_endpoint_descriptor* %desc118, %struct.usb_endpoint_descriptor** %int_out119, align 8, !dbg !5602
  %84 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5603
  %85 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_out, align 8, !dbg !5603
  %desc120 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %85, i32 0, i32 0, !dbg !5603
  %bEndpointAddress121 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc120, i32 0, i32 2, !dbg !5603
  %86 = load i8, i8* %bEndpointAddress121, align 2, !dbg !5603
  %conv122 = zext i8 %86 to i32, !dbg !5603
  %and123 = and i32 %conv122, 15, !dbg !5603
  %call124 = call i32 @__create_pipe(%struct.usb_device* %84, i32 %and123) #11, !dbg !5603
  %or125 = or i32 1073741824, %call124, !dbg !5603
  %87 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5604
  %out_int_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %87, i32 0, i32 7, !dbg !5605
  store i32 %or125, i32* %out_int_pipe, align 4, !dbg !5606
  br label %if.end126, !dbg !5607

if.end126:                                        ; preds = %if.then117, %if.end115
  store i32 0, i32* %retval, align 4, !dbg !5608
  br label %return, !dbg !5608

return:                                           ; preds = %if.end126, %if.then62, %for.end41
  %88 = load i32, i32* %retval, align 4, !dbg !5609
  ret i32 %88, !dbg !5609
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_set_intfdata(%struct.usb_interface* %intf, i8* %data) #2 !dbg !5610 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5613, metadata !DIExpression()), !dbg !5614
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5615, metadata !DIExpression()), !dbg !5616
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5617
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !5618
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5619
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !5620
  ret void, !dbg !5621
}

; Function Attrs: noredzone
declare dso_local i8* @usb_speed_string(i32) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !5622 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5626, metadata !DIExpression()), !dbg !5631
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5633, metadata !DIExpression()), !dbg !5634
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5635, metadata !DIExpression()), !dbg !5636
  %0 = load i64, i64* %size.addr, align 8, !dbg !5637
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !5639
  br i1 %1, label %if.then, label %if.end447, !dbg !5640

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !5641
  %tobool = icmp ne i64 %2, 0, !dbg !5641
  br i1 %tobool, label %if.end, label %if.then1, !dbg !5644

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !5645
  br label %return, !dbg !5645

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !5646
  %cmp = icmp ult i64 %3, 4096, !dbg !5648
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5649

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5650
  br label %return, !dbg !5650

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub = sub i64 %4, 1, !dbg !5651
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !5651
  br i1 %5, label %cond.true, label %cond.false442, !dbg !5651

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub4 = sub i64 %6, 1, !dbg !5651
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !5651
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !5651

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub6 = sub i64 %8, 1, !dbg !5651
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !5651
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !5651

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !5651

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub9 = sub i64 %9, 1, !dbg !5651
  %and = and i64 %sub9, -9223372036854775808, !dbg !5651
  %tobool10 = icmp ne i64 %and, 0, !dbg !5651
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !5651

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !5651

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub13 = sub i64 %10, 1, !dbg !5651
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !5651
  %tobool15 = icmp ne i64 %and14, 0, !dbg !5651
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !5651

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !5651

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub18 = sub i64 %11, 1, !dbg !5651
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !5651
  %tobool20 = icmp ne i64 %and19, 0, !dbg !5651
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5651

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !5651

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub23 = sub i64 %12, 1, !dbg !5651
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !5651
  %tobool25 = icmp ne i64 %and24, 0, !dbg !5651
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !5651

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !5651

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub28 = sub i64 %13, 1, !dbg !5651
  %and29 = and i64 %sub28, 576460752303423488, !dbg !5651
  %tobool30 = icmp ne i64 %and29, 0, !dbg !5651
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !5651

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !5651

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub33 = sub i64 %14, 1, !dbg !5651
  %and34 = and i64 %sub33, 288230376151711744, !dbg !5651
  %tobool35 = icmp ne i64 %and34, 0, !dbg !5651
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !5651

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !5651

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub38 = sub i64 %15, 1, !dbg !5651
  %and39 = and i64 %sub38, 144115188075855872, !dbg !5651
  %tobool40 = icmp ne i64 %and39, 0, !dbg !5651
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !5651

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !5651

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub43 = sub i64 %16, 1, !dbg !5651
  %and44 = and i64 %sub43, 72057594037927936, !dbg !5651
  %tobool45 = icmp ne i64 %and44, 0, !dbg !5651
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !5651

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !5651

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub48 = sub i64 %17, 1, !dbg !5651
  %and49 = and i64 %sub48, 36028797018963968, !dbg !5651
  %tobool50 = icmp ne i64 %and49, 0, !dbg !5651
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !5651

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !5651

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub53 = sub i64 %18, 1, !dbg !5651
  %and54 = and i64 %sub53, 18014398509481984, !dbg !5651
  %tobool55 = icmp ne i64 %and54, 0, !dbg !5651
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !5651

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !5651

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub58 = sub i64 %19, 1, !dbg !5651
  %and59 = and i64 %sub58, 9007199254740992, !dbg !5651
  %tobool60 = icmp ne i64 %and59, 0, !dbg !5651
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !5651

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !5651

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub63 = sub i64 %20, 1, !dbg !5651
  %and64 = and i64 %sub63, 4503599627370496, !dbg !5651
  %tobool65 = icmp ne i64 %and64, 0, !dbg !5651
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !5651

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !5651

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub68 = sub i64 %21, 1, !dbg !5651
  %and69 = and i64 %sub68, 2251799813685248, !dbg !5651
  %tobool70 = icmp ne i64 %and69, 0, !dbg !5651
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !5651

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !5651

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub73 = sub i64 %22, 1, !dbg !5651
  %and74 = and i64 %sub73, 1125899906842624, !dbg !5651
  %tobool75 = icmp ne i64 %and74, 0, !dbg !5651
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !5651

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !5651

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub78 = sub i64 %23, 1, !dbg !5651
  %and79 = and i64 %sub78, 562949953421312, !dbg !5651
  %tobool80 = icmp ne i64 %and79, 0, !dbg !5651
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !5651

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !5651

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub83 = sub i64 %24, 1, !dbg !5651
  %and84 = and i64 %sub83, 281474976710656, !dbg !5651
  %tobool85 = icmp ne i64 %and84, 0, !dbg !5651
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !5651

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !5651

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub88 = sub i64 %25, 1, !dbg !5651
  %and89 = and i64 %sub88, 140737488355328, !dbg !5651
  %tobool90 = icmp ne i64 %and89, 0, !dbg !5651
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !5651

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !5651

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub93 = sub i64 %26, 1, !dbg !5651
  %and94 = and i64 %sub93, 70368744177664, !dbg !5651
  %tobool95 = icmp ne i64 %and94, 0, !dbg !5651
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !5651

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !5651

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub98 = sub i64 %27, 1, !dbg !5651
  %and99 = and i64 %sub98, 35184372088832, !dbg !5651
  %tobool100 = icmp ne i64 %and99, 0, !dbg !5651
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !5651

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !5651

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub103 = sub i64 %28, 1, !dbg !5651
  %and104 = and i64 %sub103, 17592186044416, !dbg !5651
  %tobool105 = icmp ne i64 %and104, 0, !dbg !5651
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !5651

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !5651

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub108 = sub i64 %29, 1, !dbg !5651
  %and109 = and i64 %sub108, 8796093022208, !dbg !5651
  %tobool110 = icmp ne i64 %and109, 0, !dbg !5651
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !5651

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !5651

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub113 = sub i64 %30, 1, !dbg !5651
  %and114 = and i64 %sub113, 4398046511104, !dbg !5651
  %tobool115 = icmp ne i64 %and114, 0, !dbg !5651
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !5651

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !5651

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub118 = sub i64 %31, 1, !dbg !5651
  %and119 = and i64 %sub118, 2199023255552, !dbg !5651
  %tobool120 = icmp ne i64 %and119, 0, !dbg !5651
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !5651

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !5651

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub123 = sub i64 %32, 1, !dbg !5651
  %and124 = and i64 %sub123, 1099511627776, !dbg !5651
  %tobool125 = icmp ne i64 %and124, 0, !dbg !5651
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !5651

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !5651

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub128 = sub i64 %33, 1, !dbg !5651
  %and129 = and i64 %sub128, 549755813888, !dbg !5651
  %tobool130 = icmp ne i64 %and129, 0, !dbg !5651
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !5651

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !5651

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub133 = sub i64 %34, 1, !dbg !5651
  %and134 = and i64 %sub133, 274877906944, !dbg !5651
  %tobool135 = icmp ne i64 %and134, 0, !dbg !5651
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !5651

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !5651

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub138 = sub i64 %35, 1, !dbg !5651
  %and139 = and i64 %sub138, 137438953472, !dbg !5651
  %tobool140 = icmp ne i64 %and139, 0, !dbg !5651
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !5651

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !5651

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub143 = sub i64 %36, 1, !dbg !5651
  %and144 = and i64 %sub143, 68719476736, !dbg !5651
  %tobool145 = icmp ne i64 %and144, 0, !dbg !5651
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !5651

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !5651

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub148 = sub i64 %37, 1, !dbg !5651
  %and149 = and i64 %sub148, 34359738368, !dbg !5651
  %tobool150 = icmp ne i64 %and149, 0, !dbg !5651
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !5651

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !5651

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub153 = sub i64 %38, 1, !dbg !5651
  %and154 = and i64 %sub153, 17179869184, !dbg !5651
  %tobool155 = icmp ne i64 %and154, 0, !dbg !5651
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !5651

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !5651

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub158 = sub i64 %39, 1, !dbg !5651
  %and159 = and i64 %sub158, 8589934592, !dbg !5651
  %tobool160 = icmp ne i64 %and159, 0, !dbg !5651
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !5651

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !5651

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub163 = sub i64 %40, 1, !dbg !5651
  %and164 = and i64 %sub163, 4294967296, !dbg !5651
  %tobool165 = icmp ne i64 %and164, 0, !dbg !5651
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !5651

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !5651

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub168 = sub i64 %41, 1, !dbg !5651
  %and169 = and i64 %sub168, 2147483648, !dbg !5651
  %tobool170 = icmp ne i64 %and169, 0, !dbg !5651
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !5651

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !5651

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub173 = sub i64 %42, 1, !dbg !5651
  %and174 = and i64 %sub173, 1073741824, !dbg !5651
  %tobool175 = icmp ne i64 %and174, 0, !dbg !5651
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !5651

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !5651

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub178 = sub i64 %43, 1, !dbg !5651
  %and179 = and i64 %sub178, 536870912, !dbg !5651
  %tobool180 = icmp ne i64 %and179, 0, !dbg !5651
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !5651

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !5651

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub183 = sub i64 %44, 1, !dbg !5651
  %and184 = and i64 %sub183, 268435456, !dbg !5651
  %tobool185 = icmp ne i64 %and184, 0, !dbg !5651
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !5651

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !5651

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub188 = sub i64 %45, 1, !dbg !5651
  %and189 = and i64 %sub188, 134217728, !dbg !5651
  %tobool190 = icmp ne i64 %and189, 0, !dbg !5651
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !5651

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !5651

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub193 = sub i64 %46, 1, !dbg !5651
  %and194 = and i64 %sub193, 67108864, !dbg !5651
  %tobool195 = icmp ne i64 %and194, 0, !dbg !5651
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !5651

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !5651

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub198 = sub i64 %47, 1, !dbg !5651
  %and199 = and i64 %sub198, 33554432, !dbg !5651
  %tobool200 = icmp ne i64 %and199, 0, !dbg !5651
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !5651

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !5651

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub203 = sub i64 %48, 1, !dbg !5651
  %and204 = and i64 %sub203, 16777216, !dbg !5651
  %tobool205 = icmp ne i64 %and204, 0, !dbg !5651
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !5651

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !5651

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub208 = sub i64 %49, 1, !dbg !5651
  %and209 = and i64 %sub208, 8388608, !dbg !5651
  %tobool210 = icmp ne i64 %and209, 0, !dbg !5651
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !5651

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !5651

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub213 = sub i64 %50, 1, !dbg !5651
  %and214 = and i64 %sub213, 4194304, !dbg !5651
  %tobool215 = icmp ne i64 %and214, 0, !dbg !5651
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !5651

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !5651

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub218 = sub i64 %51, 1, !dbg !5651
  %and219 = and i64 %sub218, 2097152, !dbg !5651
  %tobool220 = icmp ne i64 %and219, 0, !dbg !5651
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !5651

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !5651

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub223 = sub i64 %52, 1, !dbg !5651
  %and224 = and i64 %sub223, 1048576, !dbg !5651
  %tobool225 = icmp ne i64 %and224, 0, !dbg !5651
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !5651

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !5651

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub228 = sub i64 %53, 1, !dbg !5651
  %and229 = and i64 %sub228, 524288, !dbg !5651
  %tobool230 = icmp ne i64 %and229, 0, !dbg !5651
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !5651

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !5651

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub233 = sub i64 %54, 1, !dbg !5651
  %and234 = and i64 %sub233, 262144, !dbg !5651
  %tobool235 = icmp ne i64 %and234, 0, !dbg !5651
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !5651

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !5651

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub238 = sub i64 %55, 1, !dbg !5651
  %and239 = and i64 %sub238, 131072, !dbg !5651
  %tobool240 = icmp ne i64 %and239, 0, !dbg !5651
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !5651

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !5651

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub243 = sub i64 %56, 1, !dbg !5651
  %and244 = and i64 %sub243, 65536, !dbg !5651
  %tobool245 = icmp ne i64 %and244, 0, !dbg !5651
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !5651

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !5651

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub248 = sub i64 %57, 1, !dbg !5651
  %and249 = and i64 %sub248, 32768, !dbg !5651
  %tobool250 = icmp ne i64 %and249, 0, !dbg !5651
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !5651

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !5651

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub253 = sub i64 %58, 1, !dbg !5651
  %and254 = and i64 %sub253, 16384, !dbg !5651
  %tobool255 = icmp ne i64 %and254, 0, !dbg !5651
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !5651

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !5651

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub258 = sub i64 %59, 1, !dbg !5651
  %and259 = and i64 %sub258, 8192, !dbg !5651
  %tobool260 = icmp ne i64 %and259, 0, !dbg !5651
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !5651

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !5651

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub263 = sub i64 %60, 1, !dbg !5651
  %and264 = and i64 %sub263, 4096, !dbg !5651
  %tobool265 = icmp ne i64 %and264, 0, !dbg !5651
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !5651

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !5651

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub268 = sub i64 %61, 1, !dbg !5651
  %and269 = and i64 %sub268, 2048, !dbg !5651
  %tobool270 = icmp ne i64 %and269, 0, !dbg !5651
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !5651

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !5651

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub273 = sub i64 %62, 1, !dbg !5651
  %and274 = and i64 %sub273, 1024, !dbg !5651
  %tobool275 = icmp ne i64 %and274, 0, !dbg !5651
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !5651

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !5651

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub278 = sub i64 %63, 1, !dbg !5651
  %and279 = and i64 %sub278, 512, !dbg !5651
  %tobool280 = icmp ne i64 %and279, 0, !dbg !5651
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !5651

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !5651

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub283 = sub i64 %64, 1, !dbg !5651
  %and284 = and i64 %sub283, 256, !dbg !5651
  %tobool285 = icmp ne i64 %and284, 0, !dbg !5651
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !5651

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !5651

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub288 = sub i64 %65, 1, !dbg !5651
  %and289 = and i64 %sub288, 128, !dbg !5651
  %tobool290 = icmp ne i64 %and289, 0, !dbg !5651
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !5651

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !5651

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub293 = sub i64 %66, 1, !dbg !5651
  %and294 = and i64 %sub293, 64, !dbg !5651
  %tobool295 = icmp ne i64 %and294, 0, !dbg !5651
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !5651

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !5651

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub298 = sub i64 %67, 1, !dbg !5651
  %and299 = and i64 %sub298, 32, !dbg !5651
  %tobool300 = icmp ne i64 %and299, 0, !dbg !5651
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !5651

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !5651

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub303 = sub i64 %68, 1, !dbg !5651
  %and304 = and i64 %sub303, 16, !dbg !5651
  %tobool305 = icmp ne i64 %and304, 0, !dbg !5651
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !5651

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !5651

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub308 = sub i64 %69, 1, !dbg !5651
  %and309 = and i64 %sub308, 8, !dbg !5651
  %tobool310 = icmp ne i64 %and309, 0, !dbg !5651
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !5651

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !5651

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub313 = sub i64 %70, 1, !dbg !5651
  %and314 = and i64 %sub313, 4, !dbg !5651
  %tobool315 = icmp ne i64 %and314, 0, !dbg !5651
  %71 = zext i1 %tobool315 to i64, !dbg !5651
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !5651
  br label %cond.end, !dbg !5651

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !5651
  br label %cond.end317, !dbg !5651

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !5651
  br label %cond.end319, !dbg !5651

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !5651
  br label %cond.end321, !dbg !5651

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !5651
  br label %cond.end323, !dbg !5651

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !5651
  br label %cond.end325, !dbg !5651

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !5651
  br label %cond.end327, !dbg !5651

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !5651
  br label %cond.end329, !dbg !5651

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !5651
  br label %cond.end331, !dbg !5651

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !5651
  br label %cond.end333, !dbg !5651

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !5651
  br label %cond.end335, !dbg !5651

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !5651
  br label %cond.end337, !dbg !5651

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !5651
  br label %cond.end339, !dbg !5651

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !5651
  br label %cond.end341, !dbg !5651

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !5651
  br label %cond.end343, !dbg !5651

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !5651
  br label %cond.end345, !dbg !5651

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !5651
  br label %cond.end347, !dbg !5651

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !5651
  br label %cond.end349, !dbg !5651

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !5651
  br label %cond.end351, !dbg !5651

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !5651
  br label %cond.end353, !dbg !5651

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !5651
  br label %cond.end355, !dbg !5651

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !5651
  br label %cond.end357, !dbg !5651

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !5651
  br label %cond.end359, !dbg !5651

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !5651
  br label %cond.end361, !dbg !5651

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !5651
  br label %cond.end363, !dbg !5651

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !5651
  br label %cond.end365, !dbg !5651

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !5651
  br label %cond.end367, !dbg !5651

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !5651
  br label %cond.end369, !dbg !5651

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !5651
  br label %cond.end371, !dbg !5651

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !5651
  br label %cond.end373, !dbg !5651

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !5651
  br label %cond.end375, !dbg !5651

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !5651
  br label %cond.end377, !dbg !5651

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !5651
  br label %cond.end379, !dbg !5651

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !5651
  br label %cond.end381, !dbg !5651

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !5651
  br label %cond.end383, !dbg !5651

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !5651
  br label %cond.end385, !dbg !5651

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !5651
  br label %cond.end387, !dbg !5651

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !5651
  br label %cond.end389, !dbg !5651

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !5651
  br label %cond.end391, !dbg !5651

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !5651
  br label %cond.end393, !dbg !5651

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !5651
  br label %cond.end395, !dbg !5651

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !5651
  br label %cond.end397, !dbg !5651

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !5651
  br label %cond.end399, !dbg !5651

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !5651
  br label %cond.end401, !dbg !5651

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !5651
  br label %cond.end403, !dbg !5651

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !5651
  br label %cond.end405, !dbg !5651

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !5651
  br label %cond.end407, !dbg !5651

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !5651
  br label %cond.end409, !dbg !5651

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !5651
  br label %cond.end411, !dbg !5651

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !5651
  br label %cond.end413, !dbg !5651

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !5651
  br label %cond.end415, !dbg !5651

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !5651
  br label %cond.end417, !dbg !5651

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !5651
  br label %cond.end419, !dbg !5651

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !5651
  br label %cond.end421, !dbg !5651

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !5651
  br label %cond.end423, !dbg !5651

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !5651
  br label %cond.end425, !dbg !5651

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !5651
  br label %cond.end427, !dbg !5651

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !5651
  br label %cond.end429, !dbg !5651

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !5651
  br label %cond.end431, !dbg !5651

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !5651
  br label %cond.end433, !dbg !5651

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !5651
  br label %cond.end435, !dbg !5651

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !5651
  br label %cond.end437, !dbg !5651

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !5651
  br label %cond.end440, !dbg !5651

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !5651

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !5651
  br label %cond.end444, !dbg !5651

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !5651
  %sub443 = sub i64 %72, 1, !dbg !5651
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !5651
  br label %cond.end444, !dbg !5651

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !5651
  %sub446 = sub i32 %cond445, 12, !dbg !5652
  %add = add i32 %sub446, 1, !dbg !5653
  store i32 %add, i32* %retval, align 4, !dbg !5654
  br label %return, !dbg !5654

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !5655
  %dec = add i64 %73, -1, !dbg !5655
  store i64 %dec, i64* %size.addr, align 8, !dbg !5655
  %74 = load i64, i64* %size.addr, align 8, !dbg !5656
  %shr = lshr i64 %74, 12, !dbg !5656
  store i64 %shr, i64* %size.addr, align 8, !dbg !5656
  %75 = load i64, i64* %size.addr, align 8, !dbg !5657
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5634
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !5658
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !5659
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !5658, !srcloc !5660
  store i32 %78, i32* %bitpos.i, align 4, !dbg !5658
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !5661
  %add.i = add i32 %79, 1, !dbg !5662
  store i32 %add.i, i32* %retval, align 4, !dbg !5663
  br label %return, !dbg !5663

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !5664
  ret i32 %80, !dbg !5664
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !5665 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5626, metadata !DIExpression()), !dbg !5669
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5633, metadata !DIExpression()), !dbg !5671
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5672, metadata !DIExpression()), !dbg !5673
  %0 = load i64, i64* %n.addr, align 8, !dbg !5674
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5671
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !5675
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !5676
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !5675, !srcloc !5660
  store i32 %3, i32* %bitpos.i, align 4, !dbg !5675
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !5677
  %add.i = add i32 %4, 1, !dbg !5678
  %sub = sub i32 %add.i, 1, !dbg !5679
  ret i32 %sub, !dbg !5680
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !5681 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !5685, metadata !DIExpression()), !dbg !5686
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !5687, metadata !DIExpression()), !dbg !5688
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5689, metadata !DIExpression()), !dbg !5690
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5691, metadata !DIExpression()), !dbg !5692
  %0 = load i8*, i8** %object.addr, align 8, !dbg !5693
  ret i8* %0, !dbg !5694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %epd) #2 !dbg !5695 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !5700, metadata !DIExpression()), !dbg !5701
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !5702
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 2, !dbg !5703
  %1 = load i8, i8* %bEndpointAddress, align 1, !dbg !5703
  %conv = zext i8 %1 to i32, !dbg !5702
  %and = and i32 %conv, 128, !dbg !5704
  %cmp = icmp eq i32 %and, 128, !dbg !5705
  %conv1 = zext i1 %cmp to i32, !dbg !5705
  ret i32 %conv1, !dbg !5706
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %epd) #2 !dbg !5707 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !5708, metadata !DIExpression()), !dbg !5709
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !5710
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !5711
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !5711
  %conv = zext i8 %1 to i32, !dbg !5710
  %and = and i32 %conv, 3, !dbg !5712
  ret i32 %and, !dbg !5713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @endpoint_update(i32 %edi, %struct.usb_host_endpoint** %in, %struct.usb_host_endpoint** %out, %struct.usb_host_endpoint* %e) #2 !dbg !5714 {
entry:
  %edi.addr = alloca i32, align 4
  %in.addr = alloca %struct.usb_host_endpoint**, align 8
  %out.addr = alloca %struct.usb_host_endpoint**, align 8
  %e.addr = alloca %struct.usb_host_endpoint*, align 8
  store i32 %edi, i32* %edi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edi.addr, metadata !5718, metadata !DIExpression()), !dbg !5719
  store %struct.usb_host_endpoint** %in, %struct.usb_host_endpoint*** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %in.addr, metadata !5720, metadata !DIExpression()), !dbg !5721
  store %struct.usb_host_endpoint** %out, %struct.usb_host_endpoint*** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %out.addr, metadata !5722, metadata !DIExpression()), !dbg !5723
  store %struct.usb_host_endpoint* %e, %struct.usb_host_endpoint** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %e.addr, metadata !5724, metadata !DIExpression()), !dbg !5725
  %0 = load i32, i32* %edi.addr, align 4, !dbg !5726
  %tobool = icmp ne i32 %0, 0, !dbg !5726
  br i1 %tobool, label %if.then, label %if.else, !dbg !5728

if.then:                                          ; preds = %entry
  %1 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %in.addr, align 8, !dbg !5729
  %2 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %1, align 8, !dbg !5732
  %tobool1 = icmp ne %struct.usb_host_endpoint* %2, null, !dbg !5732
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !5733

if.then2:                                         ; preds = %if.then
  %3 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %e.addr, align 8, !dbg !5734
  %4 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %in.addr, align 8, !dbg !5735
  store %struct.usb_host_endpoint* %3, %struct.usb_host_endpoint** %4, align 8, !dbg !5736
  br label %if.end, !dbg !5737

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6, !dbg !5738

if.else:                                          ; preds = %entry
  %5 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %out.addr, align 8, !dbg !5739
  %6 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %5, align 8, !dbg !5742
  %tobool3 = icmp ne %struct.usb_host_endpoint* %6, null, !dbg !5742
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !5743

if.then4:                                         ; preds = %if.else
  %7 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %e.addr, align 8, !dbg !5744
  %8 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %out.addr, align 8, !dbg !5745
  store %struct.usb_host_endpoint* %7, %struct.usb_host_endpoint** %8, align 8, !dbg !5746
  br label %if.end5, !dbg !5747

if.end5:                                          ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.end
  ret void, !dbg !5748
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %test) #2 !dbg !5749 {
entry:
  %test.addr = alloca %struct.usbtest_dev*, align 8
  store %struct.usbtest_dev* %test, %struct.usbtest_dev** %test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %test.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %test.addr, align 8, !dbg !5754
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %0, i32 0, i32 0, !dbg !5755
  %1 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !5755
  %call = call %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %1) #11, !dbg !5756
  ret %struct.usb_device* %call, !dbg !5757
}

; Function Attrs: noredzone
declare dso_local i32 @usb_set_interface(%struct.usb_device*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !5758 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5761, metadata !DIExpression()), !dbg !5762
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5763, metadata !DIExpression()), !dbg !5764
  %0 = load i8*, i8** %data.addr, align 8, !dbg !5765
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5766
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !5767
  store i8* %0, i8** %driver_data, align 8, !dbg !5768
  ret void, !dbg !5769
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @usb_get_intfdata(%struct.usb_interface* %intf) #2 !dbg !5770 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5773, metadata !DIExpression()), !dbg !5774
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5775
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !5776
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !5777
  ret i8* %call, !dbg !5778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !5779 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5782, metadata !DIExpression()), !dbg !5783
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5784
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !5785
  %1 = load i8*, i8** %driver_data, align 8, !dbg !5785
  ret i8* %1, !dbg !5786
}

; Function Attrs: noredzone
declare dso_local i32 @mutex_lock_interruptible(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_altsetting(%struct.usbtest_dev* %dev, i32 %alternate) #2 !dbg !5787 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %alternate.addr = alloca i32, align 4
  %iface = alloca %struct.usb_interface*, align 8
  %udev = alloca %struct.usb_device*, align 8
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !5790, metadata !DIExpression()), !dbg !5791
  store i32 %alternate, i32* %alternate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alternate.addr, metadata !5792, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %iface, metadata !5794, metadata !DIExpression()), !dbg !5795
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !5796
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %0, i32 0, i32 0, !dbg !5797
  %1 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !5797
  store %struct.usb_interface* %1, %struct.usb_interface** %iface, align 8, !dbg !5795
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !5798, metadata !DIExpression()), !dbg !5799
  %2 = load i32, i32* %alternate.addr, align 4, !dbg !5800
  %cmp = icmp slt i32 %2, 0, !dbg !5802
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5803

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %alternate.addr, align 4, !dbg !5804
  %cmp1 = icmp sge i32 %3, 256, !dbg !5805
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5806

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !5807
  br label %return, !dbg !5807

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !5808
  %call = call %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %4) #11, !dbg !5809
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !5810
  %5 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5811
  %6 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !5812
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %6, i32 0, i32 0, !dbg !5813
  %7 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !dbg !5813
  %arrayidx = getelementptr %struct.usb_host_interface, %struct.usb_host_interface* %7, i64 0, !dbg !5812
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0, !dbg !5814
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2, !dbg !5815
  %8 = load i8, i8* %bInterfaceNumber, align 2, !dbg !5815
  %conv = zext i8 %8 to i32, !dbg !5812
  %9 = load i32, i32* %alternate.addr, align 4, !dbg !5816
  %call2 = call i32 @usb_set_interface(%struct.usb_device* %5, i32 %conv, i32 %9) #11, !dbg !5817
  store i32 %call2, i32* %retval, align 4, !dbg !5818
  br label %return, !dbg !5818

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !5819
  ret i32 %10, !dbg !5819
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @ktime_get_ts64(%struct.timespec64*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbtest_do_ioctl(%struct.usb_interface* %intf, %struct.usbtest_param_32* %param) #2 !dbg !5820 {
entry:
  %retval = alloca i32, align 4
  %intf.addr = alloca %struct.usb_interface*, align 8
  %param.addr = alloca %struct.usbtest_param_32*, align 8
  %dev = alloca %struct.usbtest_dev*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %urb = alloca %struct.urb*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %req = alloca %struct.usb_sg_request, align 8
  %i = alloca i32, align 4
  %retval2 = alloca i32, align 4
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5823, metadata !DIExpression()), !dbg !5824
  store %struct.usbtest_param_32* %param, %struct.usbtest_param_32** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_param_32** %param.addr, metadata !5825, metadata !DIExpression()), !dbg !5826
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev, metadata !5827, metadata !DIExpression()), !dbg !5828
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5829
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #11, !dbg !5830
  %1 = bitcast i8* %call to %struct.usbtest_dev*, !dbg !5830
  store %struct.usbtest_dev* %1, %struct.usbtest_dev** %dev, align 8, !dbg !5828
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !5831, metadata !DIExpression()), !dbg !5832
  %2 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5833
  %call1 = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %2) #11, !dbg !5834
  store %struct.usb_device* %call1, %struct.usb_device** %udev, align 8, !dbg !5832
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !5835, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !5837, metadata !DIExpression()), !dbg !5838
  call void @llvm.dbg.declare(metadata %struct.usb_sg_request* %req, metadata !5839, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5841, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !5843, metadata !DIExpression()), !dbg !5844
  store i32 -95, i32* %retval2, align 4, !dbg !5844
  %3 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5845
  %iterations = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %3, i32 0, i32 1, !dbg !5847
  %4 = load i32, i32* %iterations, align 4, !dbg !5847
  %cmp = icmp ule i32 %4, 0, !dbg !5848
  br i1 %cmp, label %if.then, label %if.end, !dbg !5849

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5850
  br label %return, !dbg !5850

if.end:                                           ; preds = %entry
  %5 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5851
  %sglen = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %5, i32 0, i32 4, !dbg !5853
  %6 = load i32, i32* %sglen, align 4, !dbg !5853
  %cmp3 = icmp ugt i32 %6, 128, !dbg !5854
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5855

if.then4:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !5856
  br label %return, !dbg !5856

if.end5:                                          ; preds = %if.end
  %7 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5857
  %test_num = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %7, i32 0, i32 0, !dbg !5858
  %8 = load i32, i32* %test_num, align 4, !dbg !5858
  switch i32 %8, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
    i32 2, label %sw.bb20
    i32 3, label %sw.bb37
    i32 4, label %sw.bb59
    i32 5, label %sw.bb83
    i32 6, label %sw.bb109
    i32 7, label %sw.bb135
    i32 8, label %sw.bb167
    i32 9, label %sw.bb199
    i32 10, label %sw.bb211
    i32 11, label %sw.bb216
    i32 12, label %sw.bb245
    i32 13, label %sw.bb274
    i32 14, label %sw.bb301
    i32 15, label %sw.bb314
    i32 16, label %sw.bb329
    i32 17, label %sw.bb344
    i32 18, label %sw.bb357
    i32 19, label %sw.bb370
    i32 20, label %sw.bb383
    i32 21, label %sw.bb396
    i32 22, label %sw.bb416
    i32 23, label %sw.bb433
    i32 24, label %sw.bb450
    i32 25, label %sw.bb486
    i32 26, label %sw.bb503
    i32 27, label %sw.bb521
    i32 28, label %sw.bb541
    i32 29, label %sw.bb563
  ], !dbg !5859

sw.bb:                                            ; preds = %if.end5
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5860
  %dev6 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %9, i32 0, i32 7, !dbg !5860
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0)) #12, !dbg !5860
  store i32 0, i32* %retval2, align 4, !dbg !5862
  br label %sw.epilog, !dbg !5863

sw.bb7:                                           ; preds = %if.end5
  %10 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5864
  %out_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %10, i32 0, i32 3, !dbg !5866
  %11 = load i32, i32* %out_pipe, align 4, !dbg !5866
  %cmp8 = icmp eq i32 %11, 0, !dbg !5867
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5868

if.then9:                                         ; preds = %sw.bb7
  br label %sw.epilog, !dbg !5869

if.end10:                                         ; preds = %sw.bb7
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5870
  %dev11 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 7, !dbg !5870
  %13 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5870
  %length = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %13, i32 0, i32 2, !dbg !5870
  %14 = load i32, i32* %length, align 4, !dbg !5870
  %15 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5870
  %iterations12 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %15, i32 0, i32 1, !dbg !5870
  %16 = load i32, i32* %iterations12, align 4, !dbg !5870
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0), i32 %14, i32 %16) #12, !dbg !5870
  %17 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5871
  %18 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5872
  %out_pipe13 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %18, i32 0, i32 3, !dbg !5873
  %19 = load i32, i32* %out_pipe13, align 4, !dbg !5873
  %20 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5874
  %length14 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %20, i32 0, i32 2, !dbg !5875
  %21 = load i32, i32* %length14, align 4, !dbg !5875
  %conv = zext i32 %21 to i64, !dbg !5874
  %call15 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %17, i32 %19, i64 %conv, i8 zeroext 0) #11, !dbg !5876
  store %struct.urb* %call15, %struct.urb** %urb, align 8, !dbg !5877
  %22 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5878
  %tobool = icmp ne %struct.urb* %22, null, !dbg !5878
  br i1 %tobool, label %if.end17, label %if.then16, !dbg !5880

if.then16:                                        ; preds = %if.end10
  store i32 -12, i32* %retval2, align 4, !dbg !5881
  br label %sw.epilog, !dbg !5883

if.end17:                                         ; preds = %if.end10
  %23 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5884
  %24 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5885
  %25 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5886
  %iterations18 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %25, i32 0, i32 1, !dbg !5887
  %26 = load i32, i32* %iterations18, align 4, !dbg !5887
  %call19 = call i32 @simple_io(%struct.usbtest_dev* %23, %struct.urb* %24, i32 %26, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0)) #11, !dbg !5888
  store i32 %call19, i32* %retval2, align 4, !dbg !5889
  %27 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5890
  call void @simple_free_urb(%struct.urb* %27) #11, !dbg !5891
  br label %sw.epilog, !dbg !5892

sw.bb20:                                          ; preds = %if.end5
  %28 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5893
  %in_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %28, i32 0, i32 2, !dbg !5895
  %29 = load i32, i32* %in_pipe, align 8, !dbg !5895
  %cmp21 = icmp eq i32 %29, 0, !dbg !5896
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !5897

if.then23:                                        ; preds = %sw.bb20
  br label %sw.epilog, !dbg !5898

if.end24:                                         ; preds = %sw.bb20
  %30 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5899
  %dev25 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %30, i32 0, i32 7, !dbg !5899
  %31 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5899
  %length26 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %31, i32 0, i32 2, !dbg !5899
  %32 = load i32, i32* %length26, align 4, !dbg !5899
  %33 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5899
  %iterations27 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %33, i32 0, i32 1, !dbg !5899
  %34 = load i32, i32* %iterations27, align 4, !dbg !5899
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev25, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i32 %32, i32 %34) #12, !dbg !5899
  %35 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5900
  %36 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5901
  %in_pipe28 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %36, i32 0, i32 2, !dbg !5902
  %37 = load i32, i32* %in_pipe28, align 8, !dbg !5902
  %38 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5903
  %length29 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %38, i32 0, i32 2, !dbg !5904
  %39 = load i32, i32* %length29, align 4, !dbg !5904
  %conv30 = zext i32 %39 to i64, !dbg !5903
  %call31 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %35, i32 %37, i64 %conv30, i8 zeroext 0) #11, !dbg !5905
  store %struct.urb* %call31, %struct.urb** %urb, align 8, !dbg !5906
  %40 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5907
  %tobool32 = icmp ne %struct.urb* %40, null, !dbg !5907
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !5909

if.then33:                                        ; preds = %if.end24
  store i32 -12, i32* %retval2, align 4, !dbg !5910
  br label %sw.epilog, !dbg !5912

if.end34:                                         ; preds = %if.end24
  %41 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5913
  %42 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5914
  %43 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5915
  %iterations35 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %43, i32 0, i32 1, !dbg !5916
  %44 = load i32, i32* %iterations35, align 4, !dbg !5916
  %call36 = call i32 @simple_io(%struct.usbtest_dev* %41, %struct.urb* %42, i32 %44, i32 0, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0)) #11, !dbg !5917
  store i32 %call36, i32* %retval2, align 4, !dbg !5918
  %45 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5919
  call void @simple_free_urb(%struct.urb* %45) #11, !dbg !5920
  br label %sw.epilog, !dbg !5921

sw.bb37:                                          ; preds = %if.end5
  %46 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5922
  %out_pipe38 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %46, i32 0, i32 3, !dbg !5924
  %47 = load i32, i32* %out_pipe38, align 4, !dbg !5924
  %cmp39 = icmp eq i32 %47, 0, !dbg !5925
  br i1 %cmp39, label %if.then43, label %lor.lhs.false, !dbg !5926

lor.lhs.false:                                    ; preds = %sw.bb37
  %48 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5927
  %vary = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %48, i32 0, i32 3, !dbg !5928
  %49 = load i32, i32* %vary, align 4, !dbg !5928
  %cmp41 = icmp eq i32 %49, 0, !dbg !5929
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !5930

if.then43:                                        ; preds = %lor.lhs.false, %sw.bb37
  br label %sw.epilog, !dbg !5931

if.end44:                                         ; preds = %lor.lhs.false
  %50 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5932
  %dev45 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %50, i32 0, i32 7, !dbg !5932
  %51 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5932
  %vary46 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %51, i32 0, i32 3, !dbg !5932
  %52 = load i32, i32* %vary46, align 4, !dbg !5932
  %53 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5932
  %length47 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %53, i32 0, i32 2, !dbg !5932
  %54 = load i32, i32* %length47, align 4, !dbg !5932
  %55 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5932
  %iterations48 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %55, i32 0, i32 1, !dbg !5932
  %56 = load i32, i32* %iterations48, align 4, !dbg !5932
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev45, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i64 0, i64 0), i32 %52, i32 %54, i32 %56) #12, !dbg !5932
  %57 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5933
  %58 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5934
  %out_pipe49 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %58, i32 0, i32 3, !dbg !5935
  %59 = load i32, i32* %out_pipe49, align 4, !dbg !5935
  %60 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5936
  %length50 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %60, i32 0, i32 2, !dbg !5937
  %61 = load i32, i32* %length50, align 4, !dbg !5937
  %conv51 = zext i32 %61 to i64, !dbg !5936
  %call52 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %57, i32 %59, i64 %conv51, i8 zeroext 0) #11, !dbg !5938
  store %struct.urb* %call52, %struct.urb** %urb, align 8, !dbg !5939
  %62 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5940
  %tobool53 = icmp ne %struct.urb* %62, null, !dbg !5940
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !5942

if.then54:                                        ; preds = %if.end44
  store i32 -12, i32* %retval2, align 4, !dbg !5943
  br label %sw.epilog, !dbg !5945

if.end55:                                         ; preds = %if.end44
  %63 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5946
  %64 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5947
  %65 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5948
  %iterations56 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %65, i32 0, i32 1, !dbg !5949
  %66 = load i32, i32* %iterations56, align 4, !dbg !5949
  %67 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5950
  %vary57 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %67, i32 0, i32 3, !dbg !5951
  %68 = load i32, i32* %vary57, align 4, !dbg !5951
  %call58 = call i32 @simple_io(%struct.usbtest_dev* %63, %struct.urb* %64, i32 %66, i32 %68, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #11, !dbg !5952
  store i32 %call58, i32* %retval2, align 4, !dbg !5953
  %69 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5954
  call void @simple_free_urb(%struct.urb* %69) #11, !dbg !5955
  br label %sw.epilog, !dbg !5956

sw.bb59:                                          ; preds = %if.end5
  %70 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5957
  %in_pipe60 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %70, i32 0, i32 2, !dbg !5959
  %71 = load i32, i32* %in_pipe60, align 8, !dbg !5959
  %cmp61 = icmp eq i32 %71, 0, !dbg !5960
  br i1 %cmp61, label %if.then67, label %lor.lhs.false63, !dbg !5961

lor.lhs.false63:                                  ; preds = %sw.bb59
  %72 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5962
  %vary64 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %72, i32 0, i32 3, !dbg !5963
  %73 = load i32, i32* %vary64, align 4, !dbg !5963
  %cmp65 = icmp eq i32 %73, 0, !dbg !5964
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !5965

if.then67:                                        ; preds = %lor.lhs.false63, %sw.bb59
  br label %sw.epilog, !dbg !5966

if.end68:                                         ; preds = %lor.lhs.false63
  %74 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5967
  %dev69 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %74, i32 0, i32 7, !dbg !5967
  %75 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5967
  %vary70 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %75, i32 0, i32 3, !dbg !5967
  %76 = load i32, i32* %vary70, align 4, !dbg !5967
  %77 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5967
  %length71 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %77, i32 0, i32 2, !dbg !5967
  %78 = load i32, i32* %length71, align 4, !dbg !5967
  %79 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5967
  %iterations72 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %79, i32 0, i32 1, !dbg !5967
  %80 = load i32, i32* %iterations72, align 4, !dbg !5967
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev69, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0), i32 %76, i32 %78, i32 %80) #12, !dbg !5967
  %81 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5968
  %82 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5969
  %in_pipe73 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %82, i32 0, i32 2, !dbg !5970
  %83 = load i32, i32* %in_pipe73, align 8, !dbg !5970
  %84 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5971
  %length74 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %84, i32 0, i32 2, !dbg !5972
  %85 = load i32, i32* %length74, align 4, !dbg !5972
  %conv75 = zext i32 %85 to i64, !dbg !5971
  %call76 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %81, i32 %83, i64 %conv75, i8 zeroext 0) #11, !dbg !5973
  store %struct.urb* %call76, %struct.urb** %urb, align 8, !dbg !5974
  %86 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5975
  %tobool77 = icmp ne %struct.urb* %86, null, !dbg !5975
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !5977

if.then78:                                        ; preds = %if.end68
  store i32 -12, i32* %retval2, align 4, !dbg !5978
  br label %sw.epilog, !dbg !5980

if.end79:                                         ; preds = %if.end68
  %87 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5981
  %88 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5982
  %89 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5983
  %iterations80 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %89, i32 0, i32 1, !dbg !5984
  %90 = load i32, i32* %iterations80, align 4, !dbg !5984
  %91 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5985
  %vary81 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %91, i32 0, i32 3, !dbg !5986
  %92 = load i32, i32* %vary81, align 4, !dbg !5986
  %call82 = call i32 @simple_io(%struct.usbtest_dev* %87, %struct.urb* %88, i32 %90, i32 %92, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0)) #11, !dbg !5987
  store i32 %call82, i32* %retval2, align 4, !dbg !5988
  %93 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5989
  call void @simple_free_urb(%struct.urb* %93) #11, !dbg !5990
  br label %sw.epilog, !dbg !5991

sw.bb83:                                          ; preds = %if.end5
  %94 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !5992
  %out_pipe84 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %94, i32 0, i32 3, !dbg !5994
  %95 = load i32, i32* %out_pipe84, align 4, !dbg !5994
  %cmp85 = icmp eq i32 %95, 0, !dbg !5995
  br i1 %cmp85, label %if.then91, label %lor.lhs.false87, !dbg !5996

lor.lhs.false87:                                  ; preds = %sw.bb83
  %96 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !5997
  %sglen88 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %96, i32 0, i32 4, !dbg !5998
  %97 = load i32, i32* %sglen88, align 4, !dbg !5998
  %cmp89 = icmp eq i32 %97, 0, !dbg !5999
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !6000

if.then91:                                        ; preds = %lor.lhs.false87, %sw.bb83
  br label %sw.epilog, !dbg !6001

if.end92:                                         ; preds = %lor.lhs.false87
  %98 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6002
  %dev93 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %98, i32 0, i32 7, !dbg !6002
  %99 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6002
  %iterations94 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %99, i32 0, i32 1, !dbg !6002
  %100 = load i32, i32* %iterations94, align 4, !dbg !6002
  %101 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6002
  %sglen95 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %101, i32 0, i32 4, !dbg !6002
  %102 = load i32, i32* %sglen95, align 4, !dbg !6002
  %103 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6002
  %length96 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %103, i32 0, i32 2, !dbg !6002
  %104 = load i32, i32* %length96, align 4, !dbg !6002
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev93, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.28, i64 0, i64 0), i32 %100, i32 %102, i32 %104) #12, !dbg !6002
  %105 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6003
  %sglen97 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %105, i32 0, i32 4, !dbg !6004
  %106 = load i32, i32* %sglen97, align 4, !dbg !6004
  %107 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6005
  %length98 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %107, i32 0, i32 2, !dbg !6006
  %108 = load i32, i32* %length98, align 4, !dbg !6006
  %109 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6007
  %110 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6008
  %out_pipe99 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %110, i32 0, i32 3, !dbg !6009
  %111 = load i32, i32* %out_pipe99, align 4, !dbg !6009
  %call100 = call %struct.scatterlist* @alloc_sglist(i32 %106, i32 %108, i32 0, %struct.usbtest_dev* %109, i32 %111) #11, !dbg !6010
  store %struct.scatterlist* %call100, %struct.scatterlist** %sg, align 8, !dbg !6011
  %112 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6012
  %tobool101 = icmp ne %struct.scatterlist* %112, null, !dbg !6012
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !6014

if.then102:                                       ; preds = %if.end92
  store i32 -12, i32* %retval2, align 4, !dbg !6015
  br label %sw.epilog, !dbg !6017

if.end103:                                        ; preds = %if.end92
  %113 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6018
  %114 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6019
  %iterations104 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %114, i32 0, i32 1, !dbg !6020
  %115 = load i32, i32* %iterations104, align 4, !dbg !6020
  %116 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6021
  %out_pipe105 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %116, i32 0, i32 3, !dbg !6022
  %117 = load i32, i32* %out_pipe105, align 4, !dbg !6022
  %118 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6023
  %119 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6024
  %sglen106 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %119, i32 0, i32 4, !dbg !6025
  %120 = load i32, i32* %sglen106, align 4, !dbg !6025
  %call107 = call i32 @perform_sglist(%struct.usbtest_dev* %113, i32 %115, i32 %117, %struct.usb_sg_request* %req, %struct.scatterlist* %118, i32 %120) #11, !dbg !6026
  store i32 %call107, i32* %retval2, align 4, !dbg !6027
  %121 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6028
  %122 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6029
  %sglen108 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %122, i32 0, i32 4, !dbg !6030
  %123 = load i32, i32* %sglen108, align 4, !dbg !6030
  call void @free_sglist(%struct.scatterlist* %121, i32 %123) #11, !dbg !6031
  br label %sw.epilog, !dbg !6032

sw.bb109:                                         ; preds = %if.end5
  %124 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6033
  %in_pipe110 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %124, i32 0, i32 2, !dbg !6035
  %125 = load i32, i32* %in_pipe110, align 8, !dbg !6035
  %cmp111 = icmp eq i32 %125, 0, !dbg !6036
  br i1 %cmp111, label %if.then117, label %lor.lhs.false113, !dbg !6037

lor.lhs.false113:                                 ; preds = %sw.bb109
  %126 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6038
  %sglen114 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %126, i32 0, i32 4, !dbg !6039
  %127 = load i32, i32* %sglen114, align 4, !dbg !6039
  %cmp115 = icmp eq i32 %127, 0, !dbg !6040
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !6041

if.then117:                                       ; preds = %lor.lhs.false113, %sw.bb109
  br label %sw.epilog, !dbg !6042

if.end118:                                        ; preds = %lor.lhs.false113
  %128 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6043
  %dev119 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %128, i32 0, i32 7, !dbg !6043
  %129 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6043
  %iterations120 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %129, i32 0, i32 1, !dbg !6043
  %130 = load i32, i32* %iterations120, align 4, !dbg !6043
  %131 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6043
  %sglen121 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %131, i32 0, i32 4, !dbg !6043
  %132 = load i32, i32* %sglen121, align 4, !dbg !6043
  %133 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6043
  %length122 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %133, i32 0, i32 2, !dbg !6043
  %134 = load i32, i32* %length122, align 4, !dbg !6043
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev119, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.29, i64 0, i64 0), i32 %130, i32 %132, i32 %134) #12, !dbg !6043
  %135 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6044
  %sglen123 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %135, i32 0, i32 4, !dbg !6045
  %136 = load i32, i32* %sglen123, align 4, !dbg !6045
  %137 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6046
  %length124 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %137, i32 0, i32 2, !dbg !6047
  %138 = load i32, i32* %length124, align 4, !dbg !6047
  %139 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6048
  %140 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6049
  %in_pipe125 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %140, i32 0, i32 2, !dbg !6050
  %141 = load i32, i32* %in_pipe125, align 8, !dbg !6050
  %call126 = call %struct.scatterlist* @alloc_sglist(i32 %136, i32 %138, i32 0, %struct.usbtest_dev* %139, i32 %141) #11, !dbg !6051
  store %struct.scatterlist* %call126, %struct.scatterlist** %sg, align 8, !dbg !6052
  %142 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6053
  %tobool127 = icmp ne %struct.scatterlist* %142, null, !dbg !6053
  br i1 %tobool127, label %if.end129, label %if.then128, !dbg !6055

if.then128:                                       ; preds = %if.end118
  store i32 -12, i32* %retval2, align 4, !dbg !6056
  br label %sw.epilog, !dbg !6058

if.end129:                                        ; preds = %if.end118
  %143 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6059
  %144 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6060
  %iterations130 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %144, i32 0, i32 1, !dbg !6061
  %145 = load i32, i32* %iterations130, align 4, !dbg !6061
  %146 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6062
  %in_pipe131 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %146, i32 0, i32 2, !dbg !6063
  %147 = load i32, i32* %in_pipe131, align 8, !dbg !6063
  %148 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6064
  %149 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6065
  %sglen132 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %149, i32 0, i32 4, !dbg !6066
  %150 = load i32, i32* %sglen132, align 4, !dbg !6066
  %call133 = call i32 @perform_sglist(%struct.usbtest_dev* %143, i32 %145, i32 %147, %struct.usb_sg_request* %req, %struct.scatterlist* %148, i32 %150) #11, !dbg !6067
  store i32 %call133, i32* %retval2, align 4, !dbg !6068
  %151 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6069
  %152 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6070
  %sglen134 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %152, i32 0, i32 4, !dbg !6071
  %153 = load i32, i32* %sglen134, align 4, !dbg !6071
  call void @free_sglist(%struct.scatterlist* %151, i32 %153) #11, !dbg !6072
  br label %sw.epilog, !dbg !6073

sw.bb135:                                         ; preds = %if.end5
  %154 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6074
  %out_pipe136 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %154, i32 0, i32 3, !dbg !6076
  %155 = load i32, i32* %out_pipe136, align 4, !dbg !6076
  %cmp137 = icmp eq i32 %155, 0, !dbg !6077
  br i1 %cmp137, label %if.then147, label %lor.lhs.false139, !dbg !6078

lor.lhs.false139:                                 ; preds = %sw.bb135
  %156 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6079
  %sglen140 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %156, i32 0, i32 4, !dbg !6080
  %157 = load i32, i32* %sglen140, align 4, !dbg !6080
  %cmp141 = icmp eq i32 %157, 0, !dbg !6081
  br i1 %cmp141, label %if.then147, label %lor.lhs.false143, !dbg !6082

lor.lhs.false143:                                 ; preds = %lor.lhs.false139
  %158 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6083
  %vary144 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %158, i32 0, i32 3, !dbg !6084
  %159 = load i32, i32* %vary144, align 4, !dbg !6084
  %cmp145 = icmp eq i32 %159, 0, !dbg !6085
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !6086

if.then147:                                       ; preds = %lor.lhs.false143, %lor.lhs.false139, %sw.bb135
  br label %sw.epilog, !dbg !6087

if.end148:                                        ; preds = %lor.lhs.false143
  %160 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6088
  %dev149 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %160, i32 0, i32 7, !dbg !6088
  %161 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6088
  %vary150 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %161, i32 0, i32 3, !dbg !6088
  %162 = load i32, i32* %vary150, align 4, !dbg !6088
  %163 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6088
  %iterations151 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %163, i32 0, i32 1, !dbg !6088
  %164 = load i32, i32* %iterations151, align 4, !dbg !6088
  %165 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6088
  %sglen152 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %165, i32 0, i32 4, !dbg !6088
  %166 = load i32, i32* %sglen152, align 4, !dbg !6088
  %167 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6088
  %length153 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %167, i32 0, i32 2, !dbg !6088
  %168 = load i32, i32* %length153, align 4, !dbg !6088
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev149, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30, i64 0, i64 0), i32 %162, i32 %164, i32 %166, i32 %168) #12, !dbg !6088
  %169 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6089
  %sglen154 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %169, i32 0, i32 4, !dbg !6090
  %170 = load i32, i32* %sglen154, align 4, !dbg !6090
  %171 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6091
  %length155 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %171, i32 0, i32 2, !dbg !6092
  %172 = load i32, i32* %length155, align 4, !dbg !6092
  %173 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6093
  %vary156 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %173, i32 0, i32 3, !dbg !6094
  %174 = load i32, i32* %vary156, align 4, !dbg !6094
  %175 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6095
  %176 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6096
  %out_pipe157 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %176, i32 0, i32 3, !dbg !6097
  %177 = load i32, i32* %out_pipe157, align 4, !dbg !6097
  %call158 = call %struct.scatterlist* @alloc_sglist(i32 %170, i32 %172, i32 %174, %struct.usbtest_dev* %175, i32 %177) #11, !dbg !6098
  store %struct.scatterlist* %call158, %struct.scatterlist** %sg, align 8, !dbg !6099
  %178 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6100
  %tobool159 = icmp ne %struct.scatterlist* %178, null, !dbg !6100
  br i1 %tobool159, label %if.end161, label %if.then160, !dbg !6102

if.then160:                                       ; preds = %if.end148
  store i32 -12, i32* %retval2, align 4, !dbg !6103
  br label %sw.epilog, !dbg !6105

if.end161:                                        ; preds = %if.end148
  %179 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6106
  %180 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6107
  %iterations162 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %180, i32 0, i32 1, !dbg !6108
  %181 = load i32, i32* %iterations162, align 4, !dbg !6108
  %182 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6109
  %out_pipe163 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %182, i32 0, i32 3, !dbg !6110
  %183 = load i32, i32* %out_pipe163, align 4, !dbg !6110
  %184 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6111
  %185 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6112
  %sglen164 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %185, i32 0, i32 4, !dbg !6113
  %186 = load i32, i32* %sglen164, align 4, !dbg !6113
  %call165 = call i32 @perform_sglist(%struct.usbtest_dev* %179, i32 %181, i32 %183, %struct.usb_sg_request* %req, %struct.scatterlist* %184, i32 %186) #11, !dbg !6114
  store i32 %call165, i32* %retval2, align 4, !dbg !6115
  %187 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6116
  %188 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6117
  %sglen166 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %188, i32 0, i32 4, !dbg !6118
  %189 = load i32, i32* %sglen166, align 4, !dbg !6118
  call void @free_sglist(%struct.scatterlist* %187, i32 %189) #11, !dbg !6119
  br label %sw.epilog, !dbg !6120

sw.bb167:                                         ; preds = %if.end5
  %190 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6121
  %in_pipe168 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %190, i32 0, i32 2, !dbg !6123
  %191 = load i32, i32* %in_pipe168, align 8, !dbg !6123
  %cmp169 = icmp eq i32 %191, 0, !dbg !6124
  br i1 %cmp169, label %if.then179, label %lor.lhs.false171, !dbg !6125

lor.lhs.false171:                                 ; preds = %sw.bb167
  %192 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6126
  %sglen172 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %192, i32 0, i32 4, !dbg !6127
  %193 = load i32, i32* %sglen172, align 4, !dbg !6127
  %cmp173 = icmp eq i32 %193, 0, !dbg !6128
  br i1 %cmp173, label %if.then179, label %lor.lhs.false175, !dbg !6129

lor.lhs.false175:                                 ; preds = %lor.lhs.false171
  %194 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6130
  %vary176 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %194, i32 0, i32 3, !dbg !6131
  %195 = load i32, i32* %vary176, align 4, !dbg !6131
  %cmp177 = icmp eq i32 %195, 0, !dbg !6132
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !6133

if.then179:                                       ; preds = %lor.lhs.false175, %lor.lhs.false171, %sw.bb167
  br label %sw.epilog, !dbg !6134

if.end180:                                        ; preds = %lor.lhs.false175
  %196 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6135
  %dev181 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %196, i32 0, i32 7, !dbg !6135
  %197 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6135
  %vary182 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %197, i32 0, i32 3, !dbg !6135
  %198 = load i32, i32* %vary182, align 4, !dbg !6135
  %199 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6135
  %iterations183 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %199, i32 0, i32 1, !dbg !6135
  %200 = load i32, i32* %iterations183, align 4, !dbg !6135
  %201 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6135
  %sglen184 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %201, i32 0, i32 4, !dbg !6135
  %202 = load i32, i32* %sglen184, align 4, !dbg !6135
  %203 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6135
  %length185 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %203, i32 0, i32 2, !dbg !6135
  %204 = load i32, i32* %length185, align 4, !dbg !6135
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev181, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.31, i64 0, i64 0), i32 %198, i32 %200, i32 %202, i32 %204) #12, !dbg !6135
  %205 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6136
  %sglen186 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %205, i32 0, i32 4, !dbg !6137
  %206 = load i32, i32* %sglen186, align 4, !dbg !6137
  %207 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6138
  %length187 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %207, i32 0, i32 2, !dbg !6139
  %208 = load i32, i32* %length187, align 4, !dbg !6139
  %209 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6140
  %vary188 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %209, i32 0, i32 3, !dbg !6141
  %210 = load i32, i32* %vary188, align 4, !dbg !6141
  %211 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6142
  %212 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6143
  %in_pipe189 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %212, i32 0, i32 2, !dbg !6144
  %213 = load i32, i32* %in_pipe189, align 8, !dbg !6144
  %call190 = call %struct.scatterlist* @alloc_sglist(i32 %206, i32 %208, i32 %210, %struct.usbtest_dev* %211, i32 %213) #11, !dbg !6145
  store %struct.scatterlist* %call190, %struct.scatterlist** %sg, align 8, !dbg !6146
  %214 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6147
  %tobool191 = icmp ne %struct.scatterlist* %214, null, !dbg !6147
  br i1 %tobool191, label %if.end193, label %if.then192, !dbg !6149

if.then192:                                       ; preds = %if.end180
  store i32 -12, i32* %retval2, align 4, !dbg !6150
  br label %sw.epilog, !dbg !6152

if.end193:                                        ; preds = %if.end180
  %215 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6153
  %216 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6154
  %iterations194 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %216, i32 0, i32 1, !dbg !6155
  %217 = load i32, i32* %iterations194, align 4, !dbg !6155
  %218 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6156
  %in_pipe195 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %218, i32 0, i32 2, !dbg !6157
  %219 = load i32, i32* %in_pipe195, align 8, !dbg !6157
  %220 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6158
  %221 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6159
  %sglen196 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %221, i32 0, i32 4, !dbg !6160
  %222 = load i32, i32* %sglen196, align 4, !dbg !6160
  %call197 = call i32 @perform_sglist(%struct.usbtest_dev* %215, i32 %217, i32 %219, %struct.usb_sg_request* %req, %struct.scatterlist* %220, i32 %222) #11, !dbg !6161
  store i32 %call197, i32* %retval2, align 4, !dbg !6162
  %223 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6163
  %224 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6164
  %sglen198 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %224, i32 0, i32 4, !dbg !6165
  %225 = load i32, i32* %sglen198, align 4, !dbg !6165
  call void @free_sglist(%struct.scatterlist* %223, i32 %225) #11, !dbg !6166
  br label %sw.epilog, !dbg !6167

sw.bb199:                                         ; preds = %if.end5
  store i32 0, i32* %retval2, align 4, !dbg !6168
  %226 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6169
  %dev200 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %226, i32 0, i32 7, !dbg !6169
  %227 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6169
  %iterations201 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %227, i32 0, i32 1, !dbg !6169
  %228 = load i32, i32* %iterations201, align 4, !dbg !6169
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev200, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.32, i64 0, i64 0), i32 %228) #12, !dbg !6169
  %229 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6170
  %iterations202 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %229, i32 0, i32 1, !dbg !6172
  %230 = load i32, i32* %iterations202, align 4, !dbg !6172
  store i32 %230, i32* %i, align 4, !dbg !6173
  br label %for.cond, !dbg !6174

for.cond:                                         ; preds = %for.body, %sw.bb199
  %231 = load i32, i32* %retval2, align 4, !dbg !6175
  %cmp203 = icmp eq i32 %231, 0, !dbg !6177
  br i1 %cmp203, label %land.rhs, label %land.end, !dbg !6178

land.rhs:                                         ; preds = %for.cond
  %232 = load i32, i32* %i, align 4, !dbg !6179
  %dec = add i32 %232, -1, !dbg !6179
  store i32 %dec, i32* %i, align 4, !dbg !6179
  %tobool205 = icmp ne i32 %232, 0, !dbg !6178
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %233 = phi i1 [ false, %for.cond ], [ %tobool205, %land.rhs ], !dbg !6180
  br i1 %233, label %for.body, label %for.end, !dbg !6181

for.body:                                         ; preds = %land.end
  %234 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6182
  %call206 = call i32 @ch9_postconfig(%struct.usbtest_dev* %234) #11, !dbg !6183
  store i32 %call206, i32* %retval2, align 4, !dbg !6184
  br label %for.cond, !dbg !6185, !llvm.loop !6186

for.end:                                          ; preds = %land.end
  %235 = load i32, i32* %retval2, align 4, !dbg !6188
  %tobool207 = icmp ne i32 %235, 0, !dbg !6188
  br i1 %tobool207, label %if.then208, label %if.end210, !dbg !6190

if.then208:                                       ; preds = %for.end
  %236 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6191
  %dev209 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %236, i32 0, i32 7, !dbg !6191
  %237 = load i32, i32* %i, align 4, !dbg !6191
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev209, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i64 0, i64 0), i32 %237) #12, !dbg !6191
  br label %if.end210, !dbg !6191

if.end210:                                        ; preds = %if.then208, %for.end
  br label %sw.epilog, !dbg !6192

sw.bb211:                                         ; preds = %if.end5
  store i32 0, i32* %retval2, align 4, !dbg !6193
  %238 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6194
  %dev212 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %238, i32 0, i32 7, !dbg !6194
  %239 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6194
  %sglen213 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %239, i32 0, i32 4, !dbg !6194
  %240 = load i32, i32* %sglen213, align 4, !dbg !6194
  %241 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6194
  %iterations214 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %241, i32 0, i32 1, !dbg !6194
  %242 = load i32, i32* %iterations214, align 4, !dbg !6194
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev212, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i64 0, i64 0), i32 %240, i32 %242) #12, !dbg !6194
  %243 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6195
  %244 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6196
  %call215 = call i32 @test_ctrl_queue(%struct.usbtest_dev* %243, %struct.usbtest_param_32* %244) #11, !dbg !6197
  store i32 %call215, i32* %retval2, align 4, !dbg !6198
  br label %sw.epilog, !dbg !6199

sw.bb216:                                         ; preds = %if.end5
  %245 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6200
  %in_pipe217 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %245, i32 0, i32 2, !dbg !6202
  %246 = load i32, i32* %in_pipe217, align 8, !dbg !6202
  %cmp218 = icmp eq i32 %246, 0, !dbg !6203
  br i1 %cmp218, label %if.then223, label %lor.lhs.false220, !dbg !6204

lor.lhs.false220:                                 ; preds = %sw.bb216
  %247 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6205
  %length221 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %247, i32 0, i32 2, !dbg !6206
  %248 = load i32, i32* %length221, align 4, !dbg !6206
  %tobool222 = icmp ne i32 %248, 0, !dbg !6205
  br i1 %tobool222, label %if.end224, label %if.then223, !dbg !6207

if.then223:                                       ; preds = %lor.lhs.false220, %sw.bb216
  br label %sw.epilog, !dbg !6208

if.end224:                                        ; preds = %lor.lhs.false220
  store i32 0, i32* %retval2, align 4, !dbg !6209
  %249 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6210
  %dev225 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %249, i32 0, i32 7, !dbg !6210
  %250 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6210
  %iterations226 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %250, i32 0, i32 1, !dbg !6210
  %251 = load i32, i32* %iterations226, align 4, !dbg !6210
  %252 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6210
  %length227 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %252, i32 0, i32 2, !dbg !6210
  %253 = load i32, i32* %length227, align 4, !dbg !6210
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev225, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.35, i64 0, i64 0), i32 %251, i32 %253) #12, !dbg !6210
  %254 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6211
  %iterations228 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %254, i32 0, i32 1, !dbg !6213
  %255 = load i32, i32* %iterations228, align 4, !dbg !6213
  store i32 %255, i32* %i, align 4, !dbg !6214
  br label %for.cond229, !dbg !6215

for.cond229:                                      ; preds = %for.body236, %if.end224
  %256 = load i32, i32* %retval2, align 4, !dbg !6216
  %cmp230 = icmp eq i32 %256, 0, !dbg !6218
  br i1 %cmp230, label %land.rhs232, label %land.end235, !dbg !6219

land.rhs232:                                      ; preds = %for.cond229
  %257 = load i32, i32* %i, align 4, !dbg !6220
  %dec233 = add i32 %257, -1, !dbg !6220
  store i32 %dec233, i32* %i, align 4, !dbg !6220
  %tobool234 = icmp ne i32 %257, 0, !dbg !6219
  br label %land.end235

land.end235:                                      ; preds = %land.rhs232, %for.cond229
  %258 = phi i1 [ false, %for.cond229 ], [ %tobool234, %land.rhs232 ], !dbg !6221
  br i1 %258, label %for.body236, label %for.end240, !dbg !6222

for.body236:                                      ; preds = %land.end235
  %259 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6223
  %260 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6224
  %in_pipe237 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %260, i32 0, i32 2, !dbg !6225
  %261 = load i32, i32* %in_pipe237, align 8, !dbg !6225
  %262 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6226
  %length238 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %262, i32 0, i32 2, !dbg !6227
  %263 = load i32, i32* %length238, align 4, !dbg !6227
  %call239 = call i32 @unlink_simple(%struct.usbtest_dev* %259, i32 %261, i32 %263) #11, !dbg !6228
  store i32 %call239, i32* %retval2, align 4, !dbg !6229
  br label %for.cond229, !dbg !6230, !llvm.loop !6231

for.end240:                                       ; preds = %land.end235
  %264 = load i32, i32* %retval2, align 4, !dbg !6233
  %tobool241 = icmp ne i32 %264, 0, !dbg !6233
  br i1 %tobool241, label %if.then242, label %if.end244, !dbg !6235

if.then242:                                       ; preds = %for.end240
  %265 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6236
  %dev243 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %265, i32 0, i32 7, !dbg !6236
  %266 = load i32, i32* %retval2, align 4, !dbg !6236
  %267 = load i32, i32* %i, align 4, !dbg !6236
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev243, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i64 0, i64 0), i32 %266, i32 %267) #12, !dbg !6236
  br label %if.end244, !dbg !6236

if.end244:                                        ; preds = %if.then242, %for.end240
  br label %sw.epilog, !dbg !6237

sw.bb245:                                         ; preds = %if.end5
  %268 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6238
  %out_pipe246 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %268, i32 0, i32 3, !dbg !6240
  %269 = load i32, i32* %out_pipe246, align 4, !dbg !6240
  %cmp247 = icmp eq i32 %269, 0, !dbg !6241
  br i1 %cmp247, label %if.then252, label %lor.lhs.false249, !dbg !6242

lor.lhs.false249:                                 ; preds = %sw.bb245
  %270 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6243
  %length250 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %270, i32 0, i32 2, !dbg !6244
  %271 = load i32, i32* %length250, align 4, !dbg !6244
  %tobool251 = icmp ne i32 %271, 0, !dbg !6243
  br i1 %tobool251, label %if.end253, label %if.then252, !dbg !6245

if.then252:                                       ; preds = %lor.lhs.false249, %sw.bb245
  br label %sw.epilog, !dbg !6246

if.end253:                                        ; preds = %lor.lhs.false249
  store i32 0, i32* %retval2, align 4, !dbg !6247
  %272 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6248
  %dev254 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %272, i32 0, i32 7, !dbg !6248
  %273 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6248
  %iterations255 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %273, i32 0, i32 1, !dbg !6248
  %274 = load i32, i32* %iterations255, align 4, !dbg !6248
  %275 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6248
  %length256 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %275, i32 0, i32 2, !dbg !6248
  %276 = load i32, i32* %length256, align 4, !dbg !6248
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev254, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i64 0, i64 0), i32 %274, i32 %276) #12, !dbg !6248
  %277 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6249
  %iterations257 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %277, i32 0, i32 1, !dbg !6251
  %278 = load i32, i32* %iterations257, align 4, !dbg !6251
  store i32 %278, i32* %i, align 4, !dbg !6252
  br label %for.cond258, !dbg !6253

for.cond258:                                      ; preds = %for.body265, %if.end253
  %279 = load i32, i32* %retval2, align 4, !dbg !6254
  %cmp259 = icmp eq i32 %279, 0, !dbg !6256
  br i1 %cmp259, label %land.rhs261, label %land.end264, !dbg !6257

land.rhs261:                                      ; preds = %for.cond258
  %280 = load i32, i32* %i, align 4, !dbg !6258
  %dec262 = add i32 %280, -1, !dbg !6258
  store i32 %dec262, i32* %i, align 4, !dbg !6258
  %tobool263 = icmp ne i32 %280, 0, !dbg !6257
  br label %land.end264

land.end264:                                      ; preds = %land.rhs261, %for.cond258
  %281 = phi i1 [ false, %for.cond258 ], [ %tobool263, %land.rhs261 ], !dbg !6259
  br i1 %281, label %for.body265, label %for.end269, !dbg !6260

for.body265:                                      ; preds = %land.end264
  %282 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6261
  %283 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6262
  %out_pipe266 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %283, i32 0, i32 3, !dbg !6263
  %284 = load i32, i32* %out_pipe266, align 4, !dbg !6263
  %285 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6264
  %length267 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %285, i32 0, i32 2, !dbg !6265
  %286 = load i32, i32* %length267, align 4, !dbg !6265
  %call268 = call i32 @unlink_simple(%struct.usbtest_dev* %282, i32 %284, i32 %286) #11, !dbg !6266
  store i32 %call268, i32* %retval2, align 4, !dbg !6267
  br label %for.cond258, !dbg !6268, !llvm.loop !6269

for.end269:                                       ; preds = %land.end264
  %287 = load i32, i32* %retval2, align 4, !dbg !6271
  %tobool270 = icmp ne i32 %287, 0, !dbg !6271
  br i1 %tobool270, label %if.then271, label %if.end273, !dbg !6273

if.then271:                                       ; preds = %for.end269
  %288 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6274
  %dev272 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %288, i32 0, i32 7, !dbg !6274
  %289 = load i32, i32* %retval2, align 4, !dbg !6274
  %290 = load i32, i32* %i, align 4, !dbg !6274
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev272, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.38, i64 0, i64 0), i32 %289, i32 %290) #12, !dbg !6274
  br label %if.end273, !dbg !6274

if.end273:                                        ; preds = %if.then271, %for.end269
  br label %sw.epilog, !dbg !6275

sw.bb274:                                         ; preds = %if.end5
  %291 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6276
  %out_pipe275 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %291, i32 0, i32 3, !dbg !6278
  %292 = load i32, i32* %out_pipe275, align 4, !dbg !6278
  %cmp276 = icmp eq i32 %292, 0, !dbg !6279
  br i1 %cmp276, label %land.lhs.true, label %if.end282, !dbg !6280

land.lhs.true:                                    ; preds = %sw.bb274
  %293 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6281
  %in_pipe278 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %293, i32 0, i32 2, !dbg !6282
  %294 = load i32, i32* %in_pipe278, align 8, !dbg !6282
  %cmp279 = icmp eq i32 %294, 0, !dbg !6283
  br i1 %cmp279, label %if.then281, label %if.end282, !dbg !6284

if.then281:                                       ; preds = %land.lhs.true
  br label %sw.epilog, !dbg !6285

if.end282:                                        ; preds = %land.lhs.true, %sw.bb274
  store i32 0, i32* %retval2, align 4, !dbg !6286
  %295 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6287
  %dev283 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %295, i32 0, i32 7, !dbg !6287
  %296 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6287
  %iterations284 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %296, i32 0, i32 1, !dbg !6287
  %297 = load i32, i32* %iterations284, align 4, !dbg !6287
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev283, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i64 0, i64 0), i32 %297) #12, !dbg !6287
  %298 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6288
  %iterations285 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %298, i32 0, i32 1, !dbg !6290
  %299 = load i32, i32* %iterations285, align 4, !dbg !6290
  store i32 %299, i32* %i, align 4, !dbg !6291
  br label %for.cond286, !dbg !6292

for.cond286:                                      ; preds = %for.body293, %if.end282
  %300 = load i32, i32* %retval2, align 4, !dbg !6293
  %cmp287 = icmp eq i32 %300, 0, !dbg !6295
  br i1 %cmp287, label %land.rhs289, label %land.end292, !dbg !6296

land.rhs289:                                      ; preds = %for.cond286
  %301 = load i32, i32* %i, align 4, !dbg !6297
  %dec290 = add i32 %301, -1, !dbg !6297
  store i32 %dec290, i32* %i, align 4, !dbg !6297
  %tobool291 = icmp ne i32 %301, 0, !dbg !6296
  br label %land.end292

land.end292:                                      ; preds = %land.rhs289, %for.cond286
  %302 = phi i1 [ false, %for.cond286 ], [ %tobool291, %land.rhs289 ], !dbg !6298
  br i1 %302, label %for.body293, label %for.end295, !dbg !6299

for.body293:                                      ; preds = %land.end292
  %303 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6300
  %call294 = call i32 @halt_simple(%struct.usbtest_dev* %303) #11, !dbg !6301
  store i32 %call294, i32* %retval2, align 4, !dbg !6302
  br label %for.cond286, !dbg !6303, !llvm.loop !6304

for.end295:                                       ; preds = %land.end292
  %304 = load i32, i32* %retval2, align 4, !dbg !6306
  %tobool296 = icmp ne i32 %304, 0, !dbg !6306
  br i1 %tobool296, label %if.then297, label %if.end300, !dbg !6308

if.then297:                                       ; preds = %for.end295
  %305 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6309
  %intf298 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %305, i32 0, i32 0, !dbg !6309
  %306 = load %struct.usb_interface*, %struct.usb_interface** %intf298, align 8, !dbg !6309
  %dev299 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %306, i32 0, i32 7, !dbg !6309
  %307 = load i32, i32* %i, align 4, !dbg !6309
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev299, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.40, i64 0, i64 0), i32 %307) #12, !dbg !6309
  br label %if.end300, !dbg !6309

if.end300:                                        ; preds = %if.then297, %for.end295
  br label %sw.epilog, !dbg !6310

sw.bb301:                                         ; preds = %if.end5
  %308 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6311
  %info = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %308, i32 0, i32 1, !dbg !6313
  %309 = load %struct.usbtest_info*, %struct.usbtest_info** %info, align 8, !dbg !6313
  %ctrl_out = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %309, i32 0, i32 3, !dbg !6314
  %bf.load = load i8, i8* %ctrl_out, align 2, !dbg !6314
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !6314
  %bf.clear = and i8 %bf.lshr, 1, !dbg !6314
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6314
  %tobool302 = icmp ne i32 %bf.cast, 0, !dbg !6311
  br i1 %tobool302, label %if.end304, label %if.then303, !dbg !6315

if.then303:                                       ; preds = %sw.bb301
  br label %sw.epilog, !dbg !6316

if.end304:                                        ; preds = %sw.bb301
  %310 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6317
  %dev305 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %310, i32 0, i32 7, !dbg !6317
  %311 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6317
  %iterations306 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %311, i32 0, i32 1, !dbg !6317
  %312 = load i32, i32* %iterations306, align 4, !dbg !6317
  %313 = load i32, i32* @realworld, align 4, !dbg !6317
  %tobool307 = icmp ne i32 %313, 0, !dbg !6317
  %314 = zext i1 %tobool307 to i64, !dbg !6317
  %cond = select i1 %tobool307, i32 1, i32 0, !dbg !6317
  %315 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6317
  %length308 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %315, i32 0, i32 2, !dbg !6317
  %316 = load i32, i32* %length308, align 4, !dbg !6317
  %317 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6317
  %vary309 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %317, i32 0, i32 3, !dbg !6317
  %318 = load i32, i32* %vary309, align 4, !dbg !6317
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev305, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41, i64 0, i64 0), i32 %312, i32 %cond, i32 %316, i32 %318) #12, !dbg !6317
  %319 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6318
  %320 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6319
  %iterations310 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %320, i32 0, i32 1, !dbg !6320
  %321 = load i32, i32* %iterations310, align 4, !dbg !6320
  %322 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6321
  %length311 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %322, i32 0, i32 2, !dbg !6322
  %323 = load i32, i32* %length311, align 4, !dbg !6322
  %324 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6323
  %vary312 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %324, i32 0, i32 3, !dbg !6324
  %325 = load i32, i32* %vary312, align 4, !dbg !6324
  %call313 = call i32 @ctrl_out(%struct.usbtest_dev* %319, i32 %321, i32 %323, i32 %325, i32 0) #11, !dbg !6325
  store i32 %call313, i32* %retval2, align 4, !dbg !6326
  br label %sw.epilog, !dbg !6327

sw.bb314:                                         ; preds = %if.end5
  %326 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6328
  %out_iso_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %326, i32 0, i32 5, !dbg !6330
  %327 = load i32, i32* %out_iso_pipe, align 4, !dbg !6330
  %cmp315 = icmp eq i32 %327, 0, !dbg !6331
  br i1 %cmp315, label %if.then321, label %lor.lhs.false317, !dbg !6332

lor.lhs.false317:                                 ; preds = %sw.bb314
  %328 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6333
  %sglen318 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %328, i32 0, i32 4, !dbg !6334
  %329 = load i32, i32* %sglen318, align 4, !dbg !6334
  %cmp319 = icmp eq i32 %329, 0, !dbg !6335
  br i1 %cmp319, label %if.then321, label %if.end322, !dbg !6336

if.then321:                                       ; preds = %lor.lhs.false317, %sw.bb314
  br label %sw.epilog, !dbg !6337

if.end322:                                        ; preds = %lor.lhs.false317
  %330 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6338
  %dev323 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %330, i32 0, i32 7, !dbg !6338
  %331 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6338
  %iterations324 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %331, i32 0, i32 1, !dbg !6338
  %332 = load i32, i32* %iterations324, align 4, !dbg !6338
  %333 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6338
  %sglen325 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %333, i32 0, i32 4, !dbg !6338
  %334 = load i32, i32* %sglen325, align 4, !dbg !6338
  %335 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6338
  %length326 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %335, i32 0, i32 2, !dbg !6338
  %336 = load i32, i32* %length326, align 4, !dbg !6338
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev323, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.42, i64 0, i64 0), i32 %332, i32 %334, i32 %336) #12, !dbg !6338
  %337 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6339
  %338 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6340
  %339 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6341
  %out_iso_pipe327 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %339, i32 0, i32 5, !dbg !6342
  %340 = load i32, i32* %out_iso_pipe327, align 4, !dbg !6342
  %341 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6343
  %iso_out = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %341, i32 0, i32 9, !dbg !6344
  %342 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %iso_out, align 8, !dbg !6344
  %call328 = call i32 @test_queue(%struct.usbtest_dev* %337, %struct.usbtest_param_32* %338, i32 %340, %struct.usb_endpoint_descriptor* %342, i32 0) #11, !dbg !6345
  store i32 %call328, i32* %retval2, align 4, !dbg !6346
  br label %sw.epilog, !dbg !6347

sw.bb329:                                         ; preds = %if.end5
  %343 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6348
  %in_iso_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %343, i32 0, i32 4, !dbg !6350
  %344 = load i32, i32* %in_iso_pipe, align 8, !dbg !6350
  %cmp330 = icmp eq i32 %344, 0, !dbg !6351
  br i1 %cmp330, label %if.then336, label %lor.lhs.false332, !dbg !6352

lor.lhs.false332:                                 ; preds = %sw.bb329
  %345 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6353
  %sglen333 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %345, i32 0, i32 4, !dbg !6354
  %346 = load i32, i32* %sglen333, align 4, !dbg !6354
  %cmp334 = icmp eq i32 %346, 0, !dbg !6355
  br i1 %cmp334, label %if.then336, label %if.end337, !dbg !6356

if.then336:                                       ; preds = %lor.lhs.false332, %sw.bb329
  br label %sw.epilog, !dbg !6357

if.end337:                                        ; preds = %lor.lhs.false332
  %347 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6358
  %dev338 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %347, i32 0, i32 7, !dbg !6358
  %348 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6358
  %iterations339 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %348, i32 0, i32 1, !dbg !6358
  %349 = load i32, i32* %iterations339, align 4, !dbg !6358
  %350 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6358
  %sglen340 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %350, i32 0, i32 4, !dbg !6358
  %351 = load i32, i32* %sglen340, align 4, !dbg !6358
  %352 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6358
  %length341 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %352, i32 0, i32 2, !dbg !6358
  %353 = load i32, i32* %length341, align 4, !dbg !6358
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev338, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.43, i64 0, i64 0), i32 %349, i32 %351, i32 %353) #12, !dbg !6358
  %354 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6359
  %355 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6360
  %356 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6361
  %in_iso_pipe342 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %356, i32 0, i32 4, !dbg !6362
  %357 = load i32, i32* %in_iso_pipe342, align 8, !dbg !6362
  %358 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6363
  %iso_in = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %358, i32 0, i32 8, !dbg !6364
  %359 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %iso_in, align 8, !dbg !6364
  %call343 = call i32 @test_queue(%struct.usbtest_dev* %354, %struct.usbtest_param_32* %355, i32 %357, %struct.usb_endpoint_descriptor* %359, i32 0) #11, !dbg !6365
  store i32 %call343, i32* %retval2, align 4, !dbg !6366
  br label %sw.epilog, !dbg !6367

sw.bb344:                                         ; preds = %if.end5
  %360 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6368
  %out_pipe345 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %360, i32 0, i32 3, !dbg !6370
  %361 = load i32, i32* %out_pipe345, align 4, !dbg !6370
  %cmp346 = icmp eq i32 %361, 0, !dbg !6371
  br i1 %cmp346, label %if.then348, label %if.end349, !dbg !6372

if.then348:                                       ; preds = %sw.bb344
  br label %sw.epilog, !dbg !6373

if.end349:                                        ; preds = %sw.bb344
  %362 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6374
  %dev350 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %362, i32 0, i32 7, !dbg !6374
  %363 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6374
  %length351 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %363, i32 0, i32 2, !dbg !6374
  %364 = load i32, i32* %length351, align 4, !dbg !6374
  %365 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6374
  %iterations352 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %365, i32 0, i32 1, !dbg !6374
  %366 = load i32, i32* %iterations352, align 4, !dbg !6374
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev350, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.44, i64 0, i64 0), i32 %364, i32 %366) #12, !dbg !6374
  %367 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6375
  %368 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6376
  %out_pipe353 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %368, i32 0, i32 3, !dbg !6377
  %369 = load i32, i32* %out_pipe353, align 4, !dbg !6377
  %370 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6378
  %length354 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %370, i32 0, i32 2, !dbg !6379
  %371 = load i32, i32* %length354, align 4, !dbg !6379
  %372 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6380
  %iterations355 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %372, i32 0, i32 1, !dbg !6381
  %373 = load i32, i32* %iterations355, align 4, !dbg !6381
  %call356 = call i32 @test_unaligned_bulk(%struct.usbtest_dev* %367, i32 %369, i32 %371, i32 %373, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0)) #11, !dbg !6382
  store i32 %call356, i32* %retval2, align 4, !dbg !6383
  br label %sw.epilog, !dbg !6384

sw.bb357:                                         ; preds = %if.end5
  %374 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6385
  %in_pipe358 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %374, i32 0, i32 2, !dbg !6387
  %375 = load i32, i32* %in_pipe358, align 8, !dbg !6387
  %cmp359 = icmp eq i32 %375, 0, !dbg !6388
  br i1 %cmp359, label %if.then361, label %if.end362, !dbg !6389

if.then361:                                       ; preds = %sw.bb357
  br label %sw.epilog, !dbg !6390

if.end362:                                        ; preds = %sw.bb357
  %376 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6391
  %dev363 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %376, i32 0, i32 7, !dbg !6391
  %377 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6391
  %length364 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %377, i32 0, i32 2, !dbg !6391
  %378 = load i32, i32* %length364, align 4, !dbg !6391
  %379 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6391
  %iterations365 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %379, i32 0, i32 1, !dbg !6391
  %380 = load i32, i32* %iterations365, align 4, !dbg !6391
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev363, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.46, i64 0, i64 0), i32 %378, i32 %380) #12, !dbg !6391
  %381 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6392
  %382 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6393
  %in_pipe366 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %382, i32 0, i32 2, !dbg !6394
  %383 = load i32, i32* %in_pipe366, align 8, !dbg !6394
  %384 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6395
  %length367 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %384, i32 0, i32 2, !dbg !6396
  %385 = load i32, i32* %length367, align 4, !dbg !6396
  %386 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6397
  %iterations368 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %386, i32 0, i32 1, !dbg !6398
  %387 = load i32, i32* %iterations368, align 4, !dbg !6398
  %call369 = call i32 @test_unaligned_bulk(%struct.usbtest_dev* %381, i32 %383, i32 %385, i32 %387, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)) #11, !dbg !6399
  store i32 %call369, i32* %retval2, align 4, !dbg !6400
  br label %sw.epilog, !dbg !6401

sw.bb370:                                         ; preds = %if.end5
  %388 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6402
  %out_pipe371 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %388, i32 0, i32 3, !dbg !6404
  %389 = load i32, i32* %out_pipe371, align 4, !dbg !6404
  %cmp372 = icmp eq i32 %389, 0, !dbg !6405
  br i1 %cmp372, label %if.then374, label %if.end375, !dbg !6406

if.then374:                                       ; preds = %sw.bb370
  br label %sw.epilog, !dbg !6407

if.end375:                                        ; preds = %sw.bb370
  %390 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6408
  %dev376 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %390, i32 0, i32 7, !dbg !6408
  %391 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6408
  %length377 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %391, i32 0, i32 2, !dbg !6408
  %392 = load i32, i32* %length377, align 4, !dbg !6408
  %393 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6408
  %iterations378 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %393, i32 0, i32 1, !dbg !6408
  %394 = load i32, i32* %iterations378, align 4, !dbg !6408
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev376, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.48, i64 0, i64 0), i32 %392, i32 %394) #12, !dbg !6408
  %395 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6409
  %396 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6410
  %out_pipe379 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %396, i32 0, i32 3, !dbg !6411
  %397 = load i32, i32* %out_pipe379, align 4, !dbg !6411
  %398 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6412
  %length380 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %398, i32 0, i32 2, !dbg !6413
  %399 = load i32, i32* %length380, align 4, !dbg !6413
  %400 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6414
  %iterations381 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %400, i32 0, i32 1, !dbg !6415
  %401 = load i32, i32* %iterations381, align 4, !dbg !6415
  %call382 = call i32 @test_unaligned_bulk(%struct.usbtest_dev* %395, i32 %397, i32 %399, i32 %401, i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0)) #11, !dbg !6416
  store i32 %call382, i32* %retval2, align 4, !dbg !6417
  br label %sw.epilog, !dbg !6418

sw.bb383:                                         ; preds = %if.end5
  %402 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6419
  %in_pipe384 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %402, i32 0, i32 2, !dbg !6421
  %403 = load i32, i32* %in_pipe384, align 8, !dbg !6421
  %cmp385 = icmp eq i32 %403, 0, !dbg !6422
  br i1 %cmp385, label %if.then387, label %if.end388, !dbg !6423

if.then387:                                       ; preds = %sw.bb383
  br label %sw.epilog, !dbg !6424

if.end388:                                        ; preds = %sw.bb383
  %404 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6425
  %dev389 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %404, i32 0, i32 7, !dbg !6425
  %405 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6425
  %length390 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %405, i32 0, i32 2, !dbg !6425
  %406 = load i32, i32* %length390, align 4, !dbg !6425
  %407 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6425
  %iterations391 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %407, i32 0, i32 1, !dbg !6425
  %408 = load i32, i32* %iterations391, align 4, !dbg !6425
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev389, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.50, i64 0, i64 0), i32 %406, i32 %408) #12, !dbg !6425
  %409 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6426
  %410 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6427
  %in_pipe392 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %410, i32 0, i32 2, !dbg !6428
  %411 = load i32, i32* %in_pipe392, align 8, !dbg !6428
  %412 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6429
  %length393 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %412, i32 0, i32 2, !dbg !6430
  %413 = load i32, i32* %length393, align 4, !dbg !6430
  %414 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6431
  %iterations394 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %414, i32 0, i32 1, !dbg !6432
  %415 = load i32, i32* %iterations394, align 4, !dbg !6432
  %call395 = call i32 @test_unaligned_bulk(%struct.usbtest_dev* %409, i32 %411, i32 %413, i32 %415, i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0)) #11, !dbg !6433
  store i32 %call395, i32* %retval2, align 4, !dbg !6434
  br label %sw.epilog, !dbg !6435

sw.bb396:                                         ; preds = %if.end5
  %416 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6436
  %info397 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %416, i32 0, i32 1, !dbg !6438
  %417 = load %struct.usbtest_info*, %struct.usbtest_info** %info397, align 8, !dbg !6438
  %ctrl_out398 = getelementptr inbounds %struct.usbtest_info, %struct.usbtest_info* %417, i32 0, i32 3, !dbg !6439
  %bf.load399 = load i8, i8* %ctrl_out398, align 2, !dbg !6439
  %bf.lshr400 = lshr i8 %bf.load399, 1, !dbg !6439
  %bf.clear401 = and i8 %bf.lshr400, 1, !dbg !6439
  %bf.cast402 = zext i8 %bf.clear401 to i32, !dbg !6439
  %tobool403 = icmp ne i32 %bf.cast402, 0, !dbg !6436
  br i1 %tobool403, label %if.end405, label %if.then404, !dbg !6440

if.then404:                                       ; preds = %sw.bb396
  br label %sw.epilog, !dbg !6441

if.end405:                                        ; preds = %sw.bb396
  %418 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6442
  %dev406 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %418, i32 0, i32 7, !dbg !6442
  %419 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6442
  %iterations407 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %419, i32 0, i32 1, !dbg !6442
  %420 = load i32, i32* %iterations407, align 4, !dbg !6442
  %421 = load i32, i32* @realworld, align 4, !dbg !6442
  %tobool408 = icmp ne i32 %421, 0, !dbg !6442
  %422 = zext i1 %tobool408 to i64, !dbg !6442
  %cond409 = select i1 %tobool408, i32 1, i32 0, !dbg !6442
  %423 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6442
  %length410 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %423, i32 0, i32 2, !dbg !6442
  %424 = load i32, i32* %length410, align 4, !dbg !6442
  %425 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6442
  %vary411 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %425, i32 0, i32 3, !dbg !6442
  %426 = load i32, i32* %vary411, align 4, !dbg !6442
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev406, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.52, i64 0, i64 0), i32 %420, i32 %cond409, i32 %424, i32 %426) #12, !dbg !6442
  %427 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6443
  %428 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6444
  %iterations412 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %428, i32 0, i32 1, !dbg !6445
  %429 = load i32, i32* %iterations412, align 4, !dbg !6445
  %430 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6446
  %length413 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %430, i32 0, i32 2, !dbg !6447
  %431 = load i32, i32* %length413, align 4, !dbg !6447
  %432 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6448
  %vary414 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %432, i32 0, i32 3, !dbg !6449
  %433 = load i32, i32* %vary414, align 4, !dbg !6449
  %call415 = call i32 @ctrl_out(%struct.usbtest_dev* %427, i32 %429, i32 %431, i32 %433, i32 1) #11, !dbg !6450
  store i32 %call415, i32* %retval2, align 4, !dbg !6451
  br label %sw.epilog, !dbg !6452

sw.bb416:                                         ; preds = %if.end5
  %434 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6453
  %out_iso_pipe417 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %434, i32 0, i32 5, !dbg !6455
  %435 = load i32, i32* %out_iso_pipe417, align 4, !dbg !6455
  %cmp418 = icmp eq i32 %435, 0, !dbg !6456
  br i1 %cmp418, label %if.then424, label %lor.lhs.false420, !dbg !6457

lor.lhs.false420:                                 ; preds = %sw.bb416
  %436 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6458
  %sglen421 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %436, i32 0, i32 4, !dbg !6459
  %437 = load i32, i32* %sglen421, align 4, !dbg !6459
  %cmp422 = icmp eq i32 %437, 0, !dbg !6460
  br i1 %cmp422, label %if.then424, label %if.end425, !dbg !6461

if.then424:                                       ; preds = %lor.lhs.false420, %sw.bb416
  br label %sw.epilog, !dbg !6462

if.end425:                                        ; preds = %lor.lhs.false420
  %438 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6463
  %dev426 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %438, i32 0, i32 7, !dbg !6463
  %439 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6463
  %iterations427 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %439, i32 0, i32 1, !dbg !6463
  %440 = load i32, i32* %iterations427, align 4, !dbg !6463
  %441 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6463
  %sglen428 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %441, i32 0, i32 4, !dbg !6463
  %442 = load i32, i32* %sglen428, align 4, !dbg !6463
  %443 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6463
  %length429 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %443, i32 0, i32 2, !dbg !6463
  %444 = load i32, i32* %length429, align 4, !dbg !6463
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev426, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.53, i64 0, i64 0), i32 %440, i32 %442, i32 %444) #12, !dbg !6463
  %445 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6464
  %446 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6465
  %447 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6466
  %out_iso_pipe430 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %447, i32 0, i32 5, !dbg !6467
  %448 = load i32, i32* %out_iso_pipe430, align 4, !dbg !6467
  %449 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6468
  %iso_out431 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %449, i32 0, i32 9, !dbg !6469
  %450 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %iso_out431, align 8, !dbg !6469
  %call432 = call i32 @test_queue(%struct.usbtest_dev* %445, %struct.usbtest_param_32* %446, i32 %448, %struct.usb_endpoint_descriptor* %450, i32 1) #11, !dbg !6470
  store i32 %call432, i32* %retval2, align 4, !dbg !6471
  br label %sw.epilog, !dbg !6472

sw.bb433:                                         ; preds = %if.end5
  %451 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6473
  %in_iso_pipe434 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %451, i32 0, i32 4, !dbg !6475
  %452 = load i32, i32* %in_iso_pipe434, align 8, !dbg !6475
  %cmp435 = icmp eq i32 %452, 0, !dbg !6476
  br i1 %cmp435, label %if.then441, label %lor.lhs.false437, !dbg !6477

lor.lhs.false437:                                 ; preds = %sw.bb433
  %453 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6478
  %sglen438 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %453, i32 0, i32 4, !dbg !6479
  %454 = load i32, i32* %sglen438, align 4, !dbg !6479
  %cmp439 = icmp eq i32 %454, 0, !dbg !6480
  br i1 %cmp439, label %if.then441, label %if.end442, !dbg !6481

if.then441:                                       ; preds = %lor.lhs.false437, %sw.bb433
  br label %sw.epilog, !dbg !6482

if.end442:                                        ; preds = %lor.lhs.false437
  %455 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6483
  %dev443 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %455, i32 0, i32 7, !dbg !6483
  %456 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6483
  %iterations444 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %456, i32 0, i32 1, !dbg !6483
  %457 = load i32, i32* %iterations444, align 4, !dbg !6483
  %458 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6483
  %sglen445 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %458, i32 0, i32 4, !dbg !6483
  %459 = load i32, i32* %sglen445, align 4, !dbg !6483
  %460 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6483
  %length446 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %460, i32 0, i32 2, !dbg !6483
  %461 = load i32, i32* %length446, align 4, !dbg !6483
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev443, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.54, i64 0, i64 0), i32 %457, i32 %459, i32 %461) #12, !dbg !6483
  %462 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6484
  %463 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6485
  %464 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6486
  %in_iso_pipe447 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %464, i32 0, i32 4, !dbg !6487
  %465 = load i32, i32* %in_iso_pipe447, align 8, !dbg !6487
  %466 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6488
  %iso_in448 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %466, i32 0, i32 8, !dbg !6489
  %467 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %iso_in448, align 8, !dbg !6489
  %call449 = call i32 @test_queue(%struct.usbtest_dev* %462, %struct.usbtest_param_32* %463, i32 %465, %struct.usb_endpoint_descriptor* %467, i32 1) #11, !dbg !6490
  store i32 %call449, i32* %retval2, align 4, !dbg !6491
  br label %sw.epilog, !dbg !6492

sw.bb450:                                         ; preds = %if.end5
  %468 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6493
  %out_pipe451 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %468, i32 0, i32 3, !dbg !6495
  %469 = load i32, i32* %out_pipe451, align 4, !dbg !6495
  %cmp452 = icmp eq i32 %469, 0, !dbg !6496
  br i1 %cmp452, label %if.then461, label %lor.lhs.false454, !dbg !6497

lor.lhs.false454:                                 ; preds = %sw.bb450
  %470 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6498
  %length455 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %470, i32 0, i32 2, !dbg !6499
  %471 = load i32, i32* %length455, align 4, !dbg !6499
  %tobool456 = icmp ne i32 %471, 0, !dbg !6498
  br i1 %tobool456, label %lor.lhs.false457, label %if.then461, !dbg !6500

lor.lhs.false457:                                 ; preds = %lor.lhs.false454
  %472 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6501
  %sglen458 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %472, i32 0, i32 4, !dbg !6502
  %473 = load i32, i32* %sglen458, align 4, !dbg !6502
  %cmp459 = icmp ult i32 %473, 4, !dbg !6503
  br i1 %cmp459, label %if.then461, label %if.end462, !dbg !6504

if.then461:                                       ; preds = %lor.lhs.false457, %lor.lhs.false454, %sw.bb450
  br label %sw.epilog, !dbg !6505

if.end462:                                        ; preds = %lor.lhs.false457
  store i32 0, i32* %retval2, align 4, !dbg !6506
  %474 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6507
  %dev463 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %474, i32 0, i32 7, !dbg !6507
  %475 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6507
  %iterations464 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %475, i32 0, i32 1, !dbg !6507
  %476 = load i32, i32* %iterations464, align 4, !dbg !6507
  %477 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6507
  %sglen465 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %477, i32 0, i32 4, !dbg !6507
  %478 = load i32, i32* %sglen465, align 4, !dbg !6507
  %479 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6507
  %length466 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %479, i32 0, i32 2, !dbg !6507
  %480 = load i32, i32* %length466, align 4, !dbg !6507
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev463, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.55, i64 0, i64 0), i32 %476, i32 %478, i32 %480) #12, !dbg !6507
  %481 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6508
  %iterations467 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %481, i32 0, i32 1, !dbg !6510
  %482 = load i32, i32* %iterations467, align 4, !dbg !6510
  store i32 %482, i32* %i, align 4, !dbg !6511
  br label %for.cond468, !dbg !6512

for.cond468:                                      ; preds = %for.inc, %if.end462
  %483 = load i32, i32* %retval2, align 4, !dbg !6513
  %cmp469 = icmp eq i32 %483, 0, !dbg !6515
  br i1 %cmp469, label %land.rhs471, label %land.end474, !dbg !6516

land.rhs471:                                      ; preds = %for.cond468
  %484 = load i32, i32* %i, align 4, !dbg !6517
  %cmp472 = icmp ugt i32 %484, 0, !dbg !6518
  br label %land.end474

land.end474:                                      ; preds = %land.rhs471, %for.cond468
  %485 = phi i1 [ false, %for.cond468 ], [ %cmp472, %land.rhs471 ], !dbg !6519
  br i1 %485, label %for.body475, label %for.end485, !dbg !6520

for.body475:                                      ; preds = %land.end474
  %486 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6521
  %487 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6523
  %out_pipe476 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %487, i32 0, i32 3, !dbg !6524
  %488 = load i32, i32* %out_pipe476, align 4, !dbg !6524
  %489 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6525
  %sglen477 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %489, i32 0, i32 4, !dbg !6526
  %490 = load i32, i32* %sglen477, align 4, !dbg !6526
  %491 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6527
  %length478 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %491, i32 0, i32 2, !dbg !6528
  %492 = load i32, i32* %length478, align 4, !dbg !6528
  %call479 = call i32 @unlink_queued(%struct.usbtest_dev* %486, i32 %488, i32 %490, i32 %492) #11, !dbg !6529
  store i32 %call479, i32* %retval2, align 4, !dbg !6530
  %493 = load i32, i32* %retval2, align 4, !dbg !6531
  %tobool480 = icmp ne i32 %493, 0, !dbg !6531
  br i1 %tobool480, label %if.then481, label %if.end483, !dbg !6533

if.then481:                                       ; preds = %for.body475
  %494 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6534
  %dev482 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %494, i32 0, i32 7, !dbg !6534
  %495 = load i32, i32* %retval2, align 4, !dbg !6534
  %496 = load i32, i32* %i, align 4, !dbg !6534
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev482, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.56, i64 0, i64 0), i32 %495, i32 %496) #12, !dbg !6534
  br label %for.end485, !dbg !6536

if.end483:                                        ; preds = %for.body475
  br label %for.inc, !dbg !6537

for.inc:                                          ; preds = %if.end483
  %497 = load i32, i32* %i, align 4, !dbg !6538
  %dec484 = add i32 %497, -1, !dbg !6538
  store i32 %dec484, i32* %i, align 4, !dbg !6538
  br label %for.cond468, !dbg !6539, !llvm.loop !6540

for.end485:                                       ; preds = %if.then481, %land.end474
  br label %sw.epilog, !dbg !6542

sw.bb486:                                         ; preds = %if.end5
  %498 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6543
  %out_int_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %498, i32 0, i32 7, !dbg !6545
  %499 = load i32, i32* %out_int_pipe, align 4, !dbg !6545
  %cmp487 = icmp eq i32 %499, 0, !dbg !6546
  br i1 %cmp487, label %if.then489, label %if.end490, !dbg !6547

if.then489:                                       ; preds = %sw.bb486
  br label %sw.epilog, !dbg !6548

if.end490:                                        ; preds = %sw.bb486
  %500 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6549
  %dev491 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %500, i32 0, i32 7, !dbg !6549
  %501 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6549
  %length492 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %501, i32 0, i32 2, !dbg !6549
  %502 = load i32, i32* %length492, align 4, !dbg !6549
  %503 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6549
  %iterations493 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %503, i32 0, i32 1, !dbg !6549
  %504 = load i32, i32* %iterations493, align 4, !dbg !6549
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev491, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.57, i64 0, i64 0), i32 %502, i32 %504) #12, !dbg !6549
  %505 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !6550
  %506 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6551
  %out_int_pipe494 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %506, i32 0, i32 7, !dbg !6552
  %507 = load i32, i32* %out_int_pipe494, align 4, !dbg !6552
  %508 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6553
  %length495 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %508, i32 0, i32 2, !dbg !6554
  %509 = load i32, i32* %length495, align 4, !dbg !6554
  %conv496 = zext i32 %509 to i64, !dbg !6553
  %510 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6555
  %int_out = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %510, i32 0, i32 11, !dbg !6556
  %511 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %int_out, align 8, !dbg !6556
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %511, i32 0, i32 5, !dbg !6557
  %512 = load i8, i8* %bInterval, align 1, !dbg !6557
  %call497 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %505, i32 %507, i64 %conv496, i8 zeroext %512) #11, !dbg !6558
  store %struct.urb* %call497, %struct.urb** %urb, align 8, !dbg !6559
  %513 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !6560
  %tobool498 = icmp ne %struct.urb* %513, null, !dbg !6560
  br i1 %tobool498, label %if.end500, label %if.then499, !dbg !6562

if.then499:                                       ; preds = %if.end490
  store i32 -12, i32* %retval2, align 4, !dbg !6563
  br label %sw.epilog, !dbg !6565

if.end500:                                        ; preds = %if.end490
  %514 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6566
  %515 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !6567
  %516 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6568
  %iterations501 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %516, i32 0, i32 1, !dbg !6569
  %517 = load i32, i32* %iterations501, align 4, !dbg !6569
  %call502 = call i32 @simple_io(%struct.usbtest_dev* %514, %struct.urb* %515, i32 %517, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0)) #11, !dbg !6570
  store i32 %call502, i32* %retval2, align 4, !dbg !6571
  %518 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !6572
  call void @simple_free_urb(%struct.urb* %518) #11, !dbg !6573
  br label %sw.epilog, !dbg !6574

sw.bb503:                                         ; preds = %if.end5
  %519 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6575
  %in_int_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %519, i32 0, i32 6, !dbg !6577
  %520 = load i32, i32* %in_int_pipe, align 8, !dbg !6577
  %cmp504 = icmp eq i32 %520, 0, !dbg !6578
  br i1 %cmp504, label %if.then506, label %if.end507, !dbg !6579

if.then506:                                       ; preds = %sw.bb503
  br label %sw.epilog, !dbg !6580

if.end507:                                        ; preds = %sw.bb503
  %521 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6581
  %dev508 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %521, i32 0, i32 7, !dbg !6581
  %522 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6581
  %length509 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %522, i32 0, i32 2, !dbg !6581
  %523 = load i32, i32* %length509, align 4, !dbg !6581
  %524 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6581
  %iterations510 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %524, i32 0, i32 1, !dbg !6581
  %525 = load i32, i32* %iterations510, align 4, !dbg !6581
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev508, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.59, i64 0, i64 0), i32 %523, i32 %525) #12, !dbg !6581
  %526 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !6582
  %527 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6583
  %in_int_pipe511 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %527, i32 0, i32 6, !dbg !6584
  %528 = load i32, i32* %in_int_pipe511, align 8, !dbg !6584
  %529 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6585
  %length512 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %529, i32 0, i32 2, !dbg !6586
  %530 = load i32, i32* %length512, align 4, !dbg !6586
  %conv513 = zext i32 %530 to i64, !dbg !6585
  %531 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6587
  %int_in = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %531, i32 0, i32 10, !dbg !6588
  %532 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %int_in, align 8, !dbg !6588
  %bInterval514 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %532, i32 0, i32 5, !dbg !6589
  %533 = load i8, i8* %bInterval514, align 1, !dbg !6589
  %call515 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %526, i32 %528, i64 %conv513, i8 zeroext %533) #11, !dbg !6590
  store %struct.urb* %call515, %struct.urb** %urb, align 8, !dbg !6591
  %534 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !6592
  %tobool516 = icmp ne %struct.urb* %534, null, !dbg !6592
  br i1 %tobool516, label %if.end518, label %if.then517, !dbg !6594

if.then517:                                       ; preds = %if.end507
  store i32 -12, i32* %retval2, align 4, !dbg !6595
  br label %sw.epilog, !dbg !6597

if.end518:                                        ; preds = %if.end507
  %535 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6598
  %536 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !6599
  %537 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6600
  %iterations519 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %537, i32 0, i32 1, !dbg !6601
  %538 = load i32, i32* %iterations519, align 4, !dbg !6601
  %call520 = call i32 @simple_io(%struct.usbtest_dev* %535, %struct.urb* %536, i32 %538, i32 0, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i64 0, i64 0)) #11, !dbg !6602
  store i32 %call520, i32* %retval2, align 4, !dbg !6603
  %539 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !6604
  call void @simple_free_urb(%struct.urb* %539) #11, !dbg !6605
  br label %sw.epilog, !dbg !6606

sw.bb521:                                         ; preds = %if.end5
  %540 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6607
  %out_pipe522 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %540, i32 0, i32 3, !dbg !6609
  %541 = load i32, i32* %out_pipe522, align 4, !dbg !6609
  %cmp523 = icmp eq i32 %541, 0, !dbg !6610
  br i1 %cmp523, label %if.then532, label %lor.lhs.false525, !dbg !6611

lor.lhs.false525:                                 ; preds = %sw.bb521
  %542 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6612
  %sglen526 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %542, i32 0, i32 4, !dbg !6613
  %543 = load i32, i32* %sglen526, align 4, !dbg !6613
  %cmp527 = icmp eq i32 %543, 0, !dbg !6614
  br i1 %cmp527, label %if.then532, label %lor.lhs.false529, !dbg !6615

lor.lhs.false529:                                 ; preds = %lor.lhs.false525
  %544 = load i32, i32* @pattern, align 4, !dbg !6616
  %cmp530 = icmp ne i32 %544, 0, !dbg !6617
  br i1 %cmp530, label %if.then532, label %if.end533, !dbg !6618

if.then532:                                       ; preds = %lor.lhs.false529, %lor.lhs.false525, %sw.bb521
  br label %sw.epilog, !dbg !6619

if.end533:                                        ; preds = %lor.lhs.false529
  %545 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6620
  %dev534 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %545, i32 0, i32 7, !dbg !6620
  %546 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6620
  %iterations535 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %546, i32 0, i32 1, !dbg !6620
  %547 = load i32, i32* %iterations535, align 4, !dbg !6620
  %548 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6620
  %sglen536 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %548, i32 0, i32 4, !dbg !6620
  %549 = load i32, i32* %sglen536, align 4, !dbg !6620
  %mul = mul i32 %547, %549, !dbg !6620
  %550 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6620
  %length537 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %550, i32 0, i32 2, !dbg !6620
  %551 = load i32, i32* %length537, align 4, !dbg !6620
  %mul538 = mul i32 %mul, %551, !dbg !6620
  %div = udiv i32 %mul538, 1048576, !dbg !6620
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev534, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i32 %div) #12, !dbg !6620
  %552 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6621
  %553 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6622
  %554 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6623
  %out_pipe539 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %554, i32 0, i32 3, !dbg !6624
  %555 = load i32, i32* %out_pipe539, align 4, !dbg !6624
  %call540 = call i32 @test_queue(%struct.usbtest_dev* %552, %struct.usbtest_param_32* %553, i32 %555, %struct.usb_endpoint_descriptor* null, i32 0) #11, !dbg !6625
  store i32 %call540, i32* %retval2, align 4, !dbg !6626
  br label %sw.epilog, !dbg !6627

sw.bb541:                                         ; preds = %if.end5
  %556 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6628
  %in_pipe542 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %556, i32 0, i32 2, !dbg !6630
  %557 = load i32, i32* %in_pipe542, align 8, !dbg !6630
  %cmp543 = icmp eq i32 %557, 0, !dbg !6631
  br i1 %cmp543, label %if.then552, label %lor.lhs.false545, !dbg !6632

lor.lhs.false545:                                 ; preds = %sw.bb541
  %558 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6633
  %sglen546 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %558, i32 0, i32 4, !dbg !6634
  %559 = load i32, i32* %sglen546, align 4, !dbg !6634
  %cmp547 = icmp eq i32 %559, 0, !dbg !6635
  br i1 %cmp547, label %if.then552, label %lor.lhs.false549, !dbg !6636

lor.lhs.false549:                                 ; preds = %lor.lhs.false545
  %560 = load i32, i32* @pattern, align 4, !dbg !6637
  %cmp550 = icmp ne i32 %560, 0, !dbg !6638
  br i1 %cmp550, label %if.then552, label %if.end553, !dbg !6639

if.then552:                                       ; preds = %lor.lhs.false549, %lor.lhs.false545, %sw.bb541
  br label %sw.epilog, !dbg !6640

if.end553:                                        ; preds = %lor.lhs.false549
  %561 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6641
  %dev554 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %561, i32 0, i32 7, !dbg !6641
  %562 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6641
  %iterations555 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %562, i32 0, i32 1, !dbg !6641
  %563 = load i32, i32* %iterations555, align 4, !dbg !6641
  %564 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6641
  %sglen556 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %564, i32 0, i32 4, !dbg !6641
  %565 = load i32, i32* %sglen556, align 4, !dbg !6641
  %mul557 = mul i32 %563, %565, !dbg !6641
  %566 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6641
  %length558 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %566, i32 0, i32 2, !dbg !6641
  %567 = load i32, i32* %length558, align 4, !dbg !6641
  %mul559 = mul i32 %mul557, %567, !dbg !6641
  %div560 = udiv i32 %mul559, 1048576, !dbg !6641
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev554, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i64 0, i64 0), i32 %div560) #12, !dbg !6641
  %568 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6642
  %569 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6643
  %570 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6644
  %in_pipe561 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %570, i32 0, i32 2, !dbg !6645
  %571 = load i32, i32* %in_pipe561, align 8, !dbg !6645
  %call562 = call i32 @test_queue(%struct.usbtest_dev* %568, %struct.usbtest_param_32* %569, i32 %571, %struct.usb_endpoint_descriptor* null, i32 0) #11, !dbg !6646
  store i32 %call562, i32* %retval2, align 4, !dbg !6647
  br label %sw.epilog, !dbg !6648

sw.bb563:                                         ; preds = %if.end5
  %572 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6649
  %out_pipe564 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %572, i32 0, i32 3, !dbg !6651
  %573 = load i32, i32* %out_pipe564, align 4, !dbg !6651
  %cmp565 = icmp eq i32 %573, 0, !dbg !6652
  br i1 %cmp565, label %if.then567, label %if.end568, !dbg !6653

if.then567:                                       ; preds = %sw.bb563
  br label %sw.epilog, !dbg !6654

if.end568:                                        ; preds = %sw.bb563
  store i32 0, i32* %retval2, align 4, !dbg !6655
  %574 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6656
  %dev569 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %574, i32 0, i32 7, !dbg !6656
  %575 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6656
  %iterations570 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %575, i32 0, i32 1, !dbg !6656
  %576 = load i32, i32* %iterations570, align 4, !dbg !6656
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev569, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.63, i64 0, i64 0), i32 %576) #12, !dbg !6656
  %577 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !6657
  %iterations571 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %577, i32 0, i32 1, !dbg !6659
  %578 = load i32, i32* %iterations571, align 4, !dbg !6659
  store i32 %578, i32* %i, align 4, !dbg !6660
  br label %for.cond572, !dbg !6661

for.cond572:                                      ; preds = %for.inc581, %if.end568
  %579 = load i32, i32* %retval2, align 4, !dbg !6662
  %cmp573 = icmp eq i32 %579, 0, !dbg !6664
  br i1 %cmp573, label %land.rhs575, label %land.end578, !dbg !6665

land.rhs575:                                      ; preds = %for.cond572
  %580 = load i32, i32* %i, align 4, !dbg !6666
  %cmp576 = icmp ugt i32 %580, 0, !dbg !6667
  br label %land.end578

land.end578:                                      ; preds = %land.rhs575, %for.cond572
  %581 = phi i1 [ false, %for.cond572 ], [ %cmp576, %land.rhs575 ], !dbg !6668
  br i1 %581, label %for.body579, label %for.end583, !dbg !6669

for.body579:                                      ; preds = %land.end578
  %582 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6670
  %call580 = call i32 @toggle_sync_simple(%struct.usbtest_dev* %582) #11, !dbg !6671
  store i32 %call580, i32* %retval2, align 4, !dbg !6672
  br label %for.inc581, !dbg !6673

for.inc581:                                       ; preds = %for.body579
  %583 = load i32, i32* %i, align 4, !dbg !6674
  %dec582 = add i32 %583, -1, !dbg !6674
  store i32 %dec582, i32* %i, align 4, !dbg !6674
  br label %for.cond572, !dbg !6675, !llvm.loop !6676

for.end583:                                       ; preds = %land.end578
  %584 = load i32, i32* %retval2, align 4, !dbg !6678
  %tobool584 = icmp ne i32 %584, 0, !dbg !6678
  br i1 %tobool584, label %if.then585, label %if.end588, !dbg !6680

if.then585:                                       ; preds = %for.end583
  %585 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !6681
  %intf586 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %585, i32 0, i32 0, !dbg !6681
  %586 = load %struct.usb_interface*, %struct.usb_interface** %intf586, align 8, !dbg !6681
  %dev587 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %586, i32 0, i32 7, !dbg !6681
  %587 = load i32, i32* %i, align 4, !dbg !6681
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev587, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.64, i64 0, i64 0), i32 %587) #12, !dbg !6681
  br label %if.end588, !dbg !6681

if.end588:                                        ; preds = %if.then585, %for.end583
  br label %sw.epilog, !dbg !6682

sw.epilog:                                        ; preds = %if.end5, %if.end588, %if.then567, %if.end553, %if.then552, %if.end533, %if.then532, %if.end518, %if.then517, %if.then506, %if.end500, %if.then499, %if.then489, %for.end485, %if.then461, %if.end442, %if.then441, %if.end425, %if.then424, %if.end405, %if.then404, %if.end388, %if.then387, %if.end375, %if.then374, %if.end362, %if.then361, %if.end349, %if.then348, %if.end337, %if.then336, %if.end322, %if.then321, %if.end304, %if.then303, %if.end300, %if.then281, %if.end273, %if.then252, %if.end244, %if.then223, %sw.bb211, %if.end210, %if.end193, %if.then192, %if.then179, %if.end161, %if.then160, %if.then147, %if.end129, %if.then128, %if.then117, %if.end103, %if.then102, %if.then91, %if.end79, %if.then78, %if.then67, %if.end55, %if.then54, %if.then43, %if.end34, %if.then33, %if.then23, %if.end17, %if.then16, %if.then9, %sw.bb
  %588 = load i32, i32* %retval2, align 4, !dbg !6683
  store i32 %588, i32* %retval, align 4, !dbg !6684
  br label %return, !dbg !6684

return:                                           ; preds = %sw.epilog, %if.then4, %if.then
  %589 = load i32, i32* %retval, align 4, !dbg !6685
  ret i32 %589, !dbg !6685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal { i64, i64 } @timespec64_sub(i64 %lhs.coerce0, i64 %lhs.coerce1, i64 %rhs.coerce0, i64 %rhs.coerce1) #2 !dbg !6686 {
entry:
  %retval = alloca %struct.timespec64, align 8
  %lhs = alloca %struct.timespec64, align 8
  %rhs = alloca %struct.timespec64, align 8
  %0 = bitcast %struct.timespec64* %lhs to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %lhs.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %lhs.coerce1, i64* %2, align 8
  %3 = bitcast %struct.timespec64* %rhs to { i64, i64 }*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %rhs.coerce0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %rhs.coerce1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec64* %lhs, metadata !6689, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.declare(metadata %struct.timespec64* %rhs, metadata !6691, metadata !DIExpression()), !dbg !6692
  call void @llvm.dbg.declare(metadata %struct.timespec64* %retval, metadata !6693, metadata !DIExpression()), !dbg !6694
  %tv_sec = getelementptr inbounds %struct.timespec64, %struct.timespec64* %lhs, i32 0, i32 0, !dbg !6695
  %6 = load i64, i64* %tv_sec, align 8, !dbg !6695
  %tv_sec1 = getelementptr inbounds %struct.timespec64, %struct.timespec64* %rhs, i32 0, i32 0, !dbg !6696
  %7 = load i64, i64* %tv_sec1, align 8, !dbg !6696
  %sub = sub i64 %6, %7, !dbg !6697
  %tv_nsec = getelementptr inbounds %struct.timespec64, %struct.timespec64* %lhs, i32 0, i32 1, !dbg !6698
  %8 = load i64, i64* %tv_nsec, align 8, !dbg !6698
  %tv_nsec2 = getelementptr inbounds %struct.timespec64, %struct.timespec64* %rhs, i32 0, i32 1, !dbg !6699
  %9 = load i64, i64* %tv_nsec2, align 8, !dbg !6699
  %sub3 = sub i64 %8, %9, !dbg !6700
  call void @set_normalized_timespec64(%struct.timespec64* %retval, i64 %sub, i64 %sub3) #11, !dbg !6701
  %10 = bitcast %struct.timespec64* %retval to { i64, i64 }*, !dbg !6702
  %11 = load { i64, i64 }, { i64, i64 }* %10, align 8, !dbg !6702
  ret { i64, i64 } %11, !dbg !6702
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.urb* @simple_alloc_urb(%struct.usb_device* %udev, i32 %pipe, i64 %bytes, i8 zeroext %bInterval) #2 !dbg !6703 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %bytes.addr = alloca i64, align 8
  %bInterval.addr = alloca i8, align 1
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !6706, metadata !DIExpression()), !dbg !6707
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !6708, metadata !DIExpression()), !dbg !6709
  store i64 %bytes, i64* %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr, metadata !6710, metadata !DIExpression()), !dbg !6711
  store i8 %bInterval, i8* %bInterval.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bInterval.addr, metadata !6712, metadata !DIExpression()), !dbg !6713
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !6714
  %1 = load i32, i32* %pipe.addr, align 4, !dbg !6715
  %2 = load i64, i64* %bytes.addr, align 8, !dbg !6716
  %3 = load i8, i8* %bInterval.addr, align 1, !dbg !6717
  %call = call %struct.urb* @usbtest_alloc_urb(%struct.usb_device* %0, i32 %1, i64 %2, i32 4, i32 0, i8 zeroext %3, void (%struct.urb*)* @simple_callback) #11, !dbg !6718
  ret %struct.urb* %call, !dbg !6719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @simple_io(%struct.usbtest_dev* %tdev, %struct.urb* %urb, i32 %iterations, i32 %vary, i32 %expected, i8* %label) #2 !dbg !6720 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !6723, metadata !DIExpression()), !dbg !6728
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %iterations.addr = alloca i32, align 4
  %vary.addr = alloca i32, align 4
  %expected.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %max = alloca i32, align 4
  %completion = alloca %struct.completion, align 8
  %retval1 = alloca i32, align 4
  %expire = alloca i64, align 8
  %len = alloca i32, align 4
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !6731, metadata !DIExpression()), !dbg !6732
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !6733, metadata !DIExpression()), !dbg !6734
  store i32 %iterations, i32* %iterations.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iterations.addr, metadata !6735, metadata !DIExpression()), !dbg !6736
  store i32 %vary, i32* %vary.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vary.addr, metadata !6737, metadata !DIExpression()), !dbg !6738
  store i32 %expected, i32* %expected.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %expected.addr, metadata !6739, metadata !DIExpression()), !dbg !6740
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !6741, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !6743, metadata !DIExpression()), !dbg !6744
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6745
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 8, !dbg !6746
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6746
  store %struct.usb_device* %1, %struct.usb_device** %udev, align 8, !dbg !6744
  call void @llvm.dbg.declare(metadata i32* %max, metadata !6747, metadata !DIExpression()), !dbg !6748
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6749
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 19, !dbg !6750
  %3 = load i32, i32* %transfer_buffer_length, align 8, !dbg !6750
  store i32 %3, i32* %max, align 4, !dbg !6748
  call void @llvm.dbg.declare(metadata %struct.completion* %completion, metadata !6751, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6753, metadata !DIExpression()), !dbg !6754
  store i32 0, i32* %retval1, align 4, !dbg !6754
  call void @llvm.dbg.declare(metadata i64* %expire, metadata !6755, metadata !DIExpression()), !dbg !6756
  %4 = bitcast %struct.completion* %completion to i8*, !dbg !6757
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6758
  %context = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 27, !dbg !6759
  store i8* %4, i8** %context, align 8, !dbg !6760
  br label %while.cond, !dbg !6761

while.cond:                                       ; preds = %if.end34, %entry
  %6 = load i32, i32* %retval1, align 4, !dbg !6762
  %cmp = icmp eq i32 %6, 0, !dbg !6763
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6764

land.rhs:                                         ; preds = %while.cond
  %7 = load i32, i32* %iterations.addr, align 4, !dbg !6765
  %dec = add i32 %7, -1, !dbg !6765
  store i32 %dec, i32* %iterations.addr, align 4, !dbg !6765
  %cmp2 = icmp sgt i32 %7, 0, !dbg !6766
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ], !dbg !6767
  br i1 %8, label %while.body, label %while.end, !dbg !6761

while.body:                                       ; preds = %land.end
  call void @__init_completion(%struct.completion* %completion) #11, !dbg !6768
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6769
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 10, !dbg !6769
  %10 = load i32, i32* %pipe, align 8, !dbg !6769
  %and = and i32 %10, 128, !dbg !6769
  %tobool = icmp ne i32 %and, 0, !dbg !6769
  br i1 %tobool, label %if.end, label %if.then, !dbg !6771

if.then:                                          ; preds = %while.body
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6772
  call void @simple_fill_buf(%struct.urb* %11) #11, !dbg !6774
  %12 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6775
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 13, !dbg !6776
  %13 = load i32, i32* %transfer_flags, align 4, !dbg !6777
  %or = or i32 %13, 64, !dbg !6777
  store i32 %or, i32* %transfer_flags, align 4, !dbg !6777
  br label %if.end, !dbg !6778

if.end:                                           ; preds = %if.then, %while.body
  %14 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6779
  %call = call i32 @usb_submit_urb(%struct.urb* %14, i32 3264) #11, !dbg !6780
  store i32 %call, i32* %retval1, align 4, !dbg !6781
  %15 = load i32, i32* %retval1, align 4, !dbg !6782
  %cmp3 = icmp ne i32 %15, 0, !dbg !6784
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6785

if.then4:                                         ; preds = %if.end
  br label %while.end, !dbg !6786

if.end5:                                          ; preds = %if.end
  store i32 10000, i32* %m.addr.i, align 4
  %16 = load i32, i32* %m.addr.i, align 4, !dbg !6787
  %17 = call i1 @llvm.is.constant.i32(i32 %16) #10, !dbg !6789
  br i1 %17, label %if.then.i, label %if.else.i, !dbg !6790

if.then.i:                                        ; preds = %if.end5
  %18 = load i32, i32* %m.addr.i, align 4, !dbg !6791
  %cmp.i = icmp slt i32 %18, 0, !dbg !6794
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6795

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !6796
  br label %msecs_to_jiffies.exit, !dbg !6796

if.end.i:                                         ; preds = %if.then.i
  %19 = load i32, i32* %m.addr.i, align 4, !dbg !6797
  %call.i = call i64 @_msecs_to_jiffies(i32 %19) #14, !dbg !6798
  store i64 %call.i, i64* %retval.i, align 8, !dbg !6799
  br label %msecs_to_jiffies.exit, !dbg !6799

if.else.i:                                        ; preds = %if.end5
  %20 = load i32, i32* %m.addr.i, align 4, !dbg !6800
  %call2.i = call i64 @__msecs_to_jiffies(i32 %20) #14, !dbg !6802
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !6803
  br label %msecs_to_jiffies.exit, !dbg !6803

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %21 = load i64, i64* %retval.i, align 8, !dbg !6804
  store i64 %21, i64* %expire, align 8, !dbg !6805
  %22 = load i64, i64* %expire, align 8, !dbg !6806
  %call7 = call i64 @wait_for_completion_timeout(%struct.completion* %completion, i64 %22) #11, !dbg !6808
  %tobool8 = icmp ne i64 %call7, 0, !dbg !6808
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !6809

if.then9:                                         ; preds = %msecs_to_jiffies.exit
  %23 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6810
  call void @usb_kill_urb(%struct.urb* %23) #11, !dbg !6812
  %24 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6813
  %status = getelementptr inbounds %struct.urb, %struct.urb* %24, i32 0, i32 12, !dbg !6814
  %25 = load i32, i32* %status, align 8, !dbg !6814
  %cmp10 = icmp eq i32 %25, -2, !dbg !6815
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !6813

cond.true:                                        ; preds = %if.then9
  br label %cond.end, !dbg !6813

cond.false:                                       ; preds = %if.then9
  %26 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6816
  %status11 = getelementptr inbounds %struct.urb, %struct.urb* %26, i32 0, i32 12, !dbg !6817
  %27 = load i32, i32* %status11, align 8, !dbg !6817
  br label %cond.end, !dbg !6813

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -110, %cond.true ], [ %27, %cond.false ], !dbg !6813
  store i32 %cond, i32* %retval1, align 4, !dbg !6818
  br label %if.end13, !dbg !6819

if.else:                                          ; preds = %msecs_to_jiffies.exit
  %28 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6820
  %status12 = getelementptr inbounds %struct.urb, %struct.urb* %28, i32 0, i32 12, !dbg !6822
  %29 = load i32, i32* %status12, align 8, !dbg !6822
  store i32 %29, i32* %retval1, align 4, !dbg !6823
  br label %if.end13

if.end13:                                         ; preds = %if.else, %cond.end
  %30 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !6824
  %31 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6825
  %dev14 = getelementptr inbounds %struct.urb, %struct.urb* %31, i32 0, i32 8, !dbg !6826
  store %struct.usb_device* %30, %struct.usb_device** %dev14, align 8, !dbg !6827
  %32 = load i32, i32* %retval1, align 4, !dbg !6828
  %cmp15 = icmp eq i32 %32, 0, !dbg !6830
  br i1 %cmp15, label %land.lhs.true, label %if.end21, !dbg !6831

land.lhs.true:                                    ; preds = %if.end13
  %33 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6832
  %pipe16 = getelementptr inbounds %struct.urb, %struct.urb* %33, i32 0, i32 10, !dbg !6832
  %34 = load i32, i32* %pipe16, align 8, !dbg !6832
  %and17 = and i32 %34, 128, !dbg !6832
  %tobool18 = icmp ne i32 %and17, 0, !dbg !6832
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !6833

if.then19:                                        ; preds = %land.lhs.true
  %35 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !6834
  %36 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6835
  %call20 = call i32 @simple_check_buf(%struct.usbtest_dev* %35, %struct.urb* %36) #11, !dbg !6836
  store i32 %call20, i32* %retval1, align 4, !dbg !6837
  br label %if.end21, !dbg !6838

if.end21:                                         ; preds = %if.then19, %land.lhs.true, %if.end13
  %37 = load i32, i32* %vary.addr, align 4, !dbg !6839
  %tobool22 = icmp ne i32 %37, 0, !dbg !6839
  br i1 %tobool22, label %if.then23, label %if.end34, !dbg !6841

if.then23:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6842, metadata !DIExpression()), !dbg !6844
  %38 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6845
  %transfer_buffer_length24 = getelementptr inbounds %struct.urb, %struct.urb* %38, i32 0, i32 19, !dbg !6846
  %39 = load i32, i32* %transfer_buffer_length24, align 8, !dbg !6846
  store i32 %39, i32* %len, align 4, !dbg !6844
  %40 = load i32, i32* %vary.addr, align 4, !dbg !6847
  %41 = load i32, i32* %len, align 4, !dbg !6848
  %add = add i32 %41, %40, !dbg !6848
  store i32 %add, i32* %len, align 4, !dbg !6848
  %42 = load i32, i32* %max, align 4, !dbg !6849
  %43 = load i32, i32* %len, align 4, !dbg !6850
  %rem = srem i32 %43, %42, !dbg !6850
  store i32 %rem, i32* %len, align 4, !dbg !6850
  %44 = load i32, i32* %len, align 4, !dbg !6851
  %cmp25 = icmp eq i32 %44, 0, !dbg !6853
  br i1 %cmp25, label %if.then26, label %if.end32, !dbg !6854

if.then26:                                        ; preds = %if.then23
  %45 = load i32, i32* %vary.addr, align 4, !dbg !6855
  %46 = load i32, i32* %max, align 4, !dbg !6856
  %cmp27 = icmp slt i32 %45, %46, !dbg !6857
  br i1 %cmp27, label %cond.true28, label %cond.false29, !dbg !6858

cond.true28:                                      ; preds = %if.then26
  %47 = load i32, i32* %vary.addr, align 4, !dbg !6859
  br label %cond.end30, !dbg !6858

cond.false29:                                     ; preds = %if.then26
  %48 = load i32, i32* %max, align 4, !dbg !6860
  br label %cond.end30, !dbg !6858

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ %47, %cond.true28 ], [ %48, %cond.false29 ], !dbg !6858
  store i32 %cond31, i32* %len, align 4, !dbg !6861
  br label %if.end32, !dbg !6862

if.end32:                                         ; preds = %cond.end30, %if.then23
  %49 = load i32, i32* %len, align 4, !dbg !6863
  %50 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6864
  %transfer_buffer_length33 = getelementptr inbounds %struct.urb, %struct.urb* %50, i32 0, i32 19, !dbg !6865
  store i32 %49, i32* %transfer_buffer_length33, align 8, !dbg !6866
  br label %if.end34, !dbg !6867

if.end34:                                         ; preds = %if.end32, %if.end21
  br label %while.cond, !dbg !6761, !llvm.loop !6868

while.end:                                        ; preds = %if.then4, %land.end
  %51 = load i32, i32* %max, align 4, !dbg !6870
  %52 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6871
  %transfer_buffer_length35 = getelementptr inbounds %struct.urb, %struct.urb* %52, i32 0, i32 19, !dbg !6872
  store i32 %51, i32* %transfer_buffer_length35, align 8, !dbg !6873
  %53 = load i32, i32* %expected.addr, align 4, !dbg !6874
  %54 = load i32, i32* %retval1, align 4, !dbg !6876
  %cmp36 = icmp ne i32 %53, %54, !dbg !6877
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !6878

if.then37:                                        ; preds = %while.end
  %55 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !6879
  %dev38 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %55, i32 0, i32 14, !dbg !6879
  %56 = load i8*, i8** %label.addr, align 8, !dbg !6879
  %57 = load i32, i32* %iterations.addr, align 4, !dbg !6879
  %58 = load i32, i32* %retval1, align 4, !dbg !6879
  %59 = load i32, i32* %expected.addr, align 4, !dbg !6879
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev38, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.65, i64 0, i64 0), i8* %56, i32 %57, i32 %58, i32 %59) #12, !dbg !6879
  br label %if.end39, !dbg !6879

if.end39:                                         ; preds = %if.then37, %while.end
  %60 = load i32, i32* %retval1, align 4, !dbg !6880
  ret i32 %60, !dbg !6881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @simple_free_urb(%struct.urb* %urb) #2 !dbg !6882 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %offset = alloca i64, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !6883, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !6885, metadata !DIExpression()), !dbg !6886
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6887
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 14, !dbg !6888
  %1 = load i8*, i8** %transfer_buffer, align 8, !dbg !6888
  %call = call i64 @buffer_offset(i8* %1) #11, !dbg !6889
  store i64 %call, i64* %offset, align 8, !dbg !6886
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6890
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 13, !dbg !6892
  %3 = load i32, i32* %transfer_flags, align 4, !dbg !6892
  %and = and i32 %3, 4, !dbg !6893
  %tobool = icmp ne i32 %and, 0, !dbg !6893
  br i1 %tobool, label %if.then, label %if.else, !dbg !6894

if.then:                                          ; preds = %entry
  %4 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6895
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 8, !dbg !6896
  %5 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6896
  %6 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6897
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %6, i32 0, i32 19, !dbg !6898
  %7 = load i32, i32* %transfer_buffer_length, align 8, !dbg !6898
  %conv = zext i32 %7 to i64, !dbg !6897
  %8 = load i64, i64* %offset, align 8, !dbg !6899
  %add = add i64 %conv, %8, !dbg !6900
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6901
  %transfer_buffer1 = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 14, !dbg !6902
  %10 = load i8*, i8** %transfer_buffer1, align 8, !dbg !6902
  %11 = load i64, i64* %offset, align 8, !dbg !6903
  %idx.neg = sub i64 0, %11, !dbg !6904
  %add.ptr = getelementptr i8, i8* %10, i64 %idx.neg, !dbg !6904
  %12 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6905
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 15, !dbg !6906
  %13 = load i64, i64* %transfer_dma, align 8, !dbg !6906
  %14 = load i64, i64* %offset, align 8, !dbg !6907
  %sub = sub i64 %13, %14, !dbg !6908
  call void @usb_free_coherent(%struct.usb_device* %5, i64 %add, i8* %add.ptr, i64 %sub) #11, !dbg !6909
  br label %if.end, !dbg !6909

if.else:                                          ; preds = %entry
  %15 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6910
  %transfer_buffer2 = getelementptr inbounds %struct.urb, %struct.urb* %15, i32 0, i32 14, !dbg !6911
  %16 = load i8*, i8** %transfer_buffer2, align 8, !dbg !6911
  %17 = load i64, i64* %offset, align 8, !dbg !6912
  %idx.neg3 = sub i64 0, %17, !dbg !6913
  %add.ptr4 = getelementptr i8, i8* %16, i64 %idx.neg3, !dbg !6913
  call void @kfree(i8* %add.ptr4) #11, !dbg !6914
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !6915
  call void @usb_free_urb(%struct.urb* %18) #11, !dbg !6916
  ret void, !dbg !6917
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.scatterlist* @alloc_sglist(i32 %nents, i32 %max, i32 %vary, %struct.usbtest_dev* %dev, i32 %pipe) #2 !dbg !6918 {
entry:
  %retval = alloca %struct.scatterlist*, align 8
  %nents.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %vary.addr = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %pipe.addr = alloca i32, align 4
  %sg = alloca %struct.scatterlist*, align 8
  %n_size = alloca i32, align 4
  %i = alloca i32, align 4
  %size = alloca i32, align 4
  %maxpacket = alloca i32, align 4
  %buf = alloca i8*, align 8
  %j = alloca i32, align 4
  store i32 %nents, i32* %nents.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nents.addr, metadata !6921, metadata !DIExpression()), !dbg !6922
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !6923, metadata !DIExpression()), !dbg !6924
  store i32 %vary, i32* %vary.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vary.addr, metadata !6925, metadata !DIExpression()), !dbg !6926
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !6927, metadata !DIExpression()), !dbg !6928
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !6929, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !6931, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.declare(metadata i32* %n_size, metadata !6933, metadata !DIExpression()), !dbg !6934
  store i32 0, i32* %n_size, align 4, !dbg !6934
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6935, metadata !DIExpression()), !dbg !6936
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6937, metadata !DIExpression()), !dbg !6938
  %0 = load i32, i32* %max.addr, align 4, !dbg !6939
  store i32 %0, i32* %size, align 4, !dbg !6938
  call void @llvm.dbg.declare(metadata i32* %maxpacket, metadata !6940, metadata !DIExpression()), !dbg !6941
  %1 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !6942
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %1, i32 0, i32 0, !dbg !6943
  %2 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !6943
  %call = call %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %2) #11, !dbg !6944
  %3 = load i32, i32* %pipe.addr, align 4, !dbg !6945
  %call1 = call i32 @get_maxpacket(%struct.usb_device* %call, i32 %3) #11, !dbg !6946
  store i32 %call1, i32* %maxpacket, align 4, !dbg !6941
  %4 = load i32, i32* %max.addr, align 4, !dbg !6947
  %cmp = icmp eq i32 %4, 0, !dbg !6949
  br i1 %cmp, label %if.then, label %if.end, !dbg !6950

if.then:                                          ; preds = %entry
  store %struct.scatterlist* null, %struct.scatterlist** %retval, align 8, !dbg !6951
  br label %return, !dbg !6951

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %nents.addr, align 4, !dbg !6952
  %conv = sext i32 %5 to i64, !dbg !6952
  %call2 = call i8* @kmalloc_array(i64 %conv, i64 32, i32 3264) #11, !dbg !6953
  %6 = bitcast i8* %call2 to %struct.scatterlist*, !dbg !6953
  store %struct.scatterlist* %6, %struct.scatterlist** %sg, align 8, !dbg !6954
  %7 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6955
  %tobool = icmp ne %struct.scatterlist* %7, null, !dbg !6955
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !6957

if.then3:                                         ; preds = %if.end
  store %struct.scatterlist* null, %struct.scatterlist** %retval, align 8, !dbg !6958
  br label %return, !dbg !6958

if.end4:                                          ; preds = %if.end
  %8 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6959
  %9 = load i32, i32* %nents.addr, align 4, !dbg !6960
  call void @sg_init_table(%struct.scatterlist* %8, i32 %9) #11, !dbg !6961
  store i32 0, i32* %i, align 4, !dbg !6962
  br label %for.cond, !dbg !6964

for.cond:                                         ; preds = %for.inc31, %if.end4
  %10 = load i32, i32* %i, align 4, !dbg !6965
  %11 = load i32, i32* %nents.addr, align 4, !dbg !6967
  %cmp5 = icmp ult i32 %10, %11, !dbg !6968
  br i1 %cmp5, label %for.body, label %for.end33, !dbg !6969

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6970, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6973, metadata !DIExpression()), !dbg !6974
  %12 = load i32, i32* %size, align 4, !dbg !6975
  %conv7 = zext i32 %12 to i64, !dbg !6975
  %call8 = call i8* @kzalloc(i64 %conv7, i32 3264) #11, !dbg !6976
  store i8* %call8, i8** %buf, align 8, !dbg !6977
  %13 = load i8*, i8** %buf, align 8, !dbg !6978
  %tobool9 = icmp ne i8* %13, null, !dbg !6978
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6980

if.then10:                                        ; preds = %for.body
  %14 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6981
  %15 = load i32, i32* %i, align 4, !dbg !6983
  call void @free_sglist(%struct.scatterlist* %14, i32 %15) #11, !dbg !6984
  store %struct.scatterlist* null, %struct.scatterlist** %retval, align 8, !dbg !6985
  br label %return, !dbg !6985

if.end11:                                         ; preds = %for.body
  %16 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !6986
  %17 = load i32, i32* %i, align 4, !dbg !6987
  %idxprom = zext i32 %17 to i64, !dbg !6986
  %arrayidx = getelementptr %struct.scatterlist, %struct.scatterlist* %16, i64 %idxprom, !dbg !6986
  %18 = load i8*, i8** %buf, align 8, !dbg !6988
  %19 = load i32, i32* %size, align 4, !dbg !6989
  call void @sg_set_buf(%struct.scatterlist* %arrayidx, i8* %18, i32 %19) #11, !dbg !6990
  %20 = load i32, i32* @pattern, align 4, !dbg !6991
  switch i32 %20, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb12
  ], !dbg !6992

sw.bb:                                            ; preds = %if.end11
  br label %sw.epilog, !dbg !6993

sw.bb12:                                          ; preds = %if.end11
  store i32 0, i32* %j, align 4, !dbg !6995
  br label %for.cond13, !dbg !6997

for.cond13:                                       ; preds = %for.inc, %sw.bb12
  %21 = load i32, i32* %j, align 4, !dbg !6998
  %22 = load i32, i32* %size, align 4, !dbg !7000
  %cmp14 = icmp ult i32 %21, %22, !dbg !7001
  br i1 %cmp14, label %for.body16, label %for.end, !dbg !7002

for.body16:                                       ; preds = %for.cond13
  %23 = load i32, i32* %j, align 4, !dbg !7003
  %24 = load i32, i32* %n_size, align 4, !dbg !7004
  %add = add i32 %23, %24, !dbg !7005
  %25 = load i32, i32* %maxpacket, align 4, !dbg !7006
  %rem = urem i32 %add, %25, !dbg !7007
  %rem17 = urem i32 %rem, 63, !dbg !7008
  %conv18 = trunc i32 %rem17 to i8, !dbg !7009
  %26 = load i8*, i8** %buf, align 8, !dbg !7010
  %incdec.ptr = getelementptr i8, i8* %26, i32 1, !dbg !7010
  store i8* %incdec.ptr, i8** %buf, align 8, !dbg !7010
  store i8 %conv18, i8* %26, align 1, !dbg !7011
  br label %for.inc, !dbg !7012

for.inc:                                          ; preds = %for.body16
  %27 = load i32, i32* %j, align 4, !dbg !7013
  %inc = add i32 %27, 1, !dbg !7013
  store i32 %inc, i32* %j, align 4, !dbg !7013
  br label %for.cond13, !dbg !7014, !llvm.loop !7015

for.end:                                          ; preds = %for.cond13
  %28 = load i32, i32* %size, align 4, !dbg !7017
  %29 = load i32, i32* %n_size, align 4, !dbg !7018
  %add19 = add i32 %29, %28, !dbg !7018
  store i32 %add19, i32* %n_size, align 4, !dbg !7018
  br label %sw.epilog, !dbg !7019

sw.epilog:                                        ; preds = %if.end11, %for.end, %sw.bb
  %30 = load i32, i32* %vary.addr, align 4, !dbg !7020
  %tobool20 = icmp ne i32 %30, 0, !dbg !7020
  br i1 %tobool20, label %if.then21, label %if.end30, !dbg !7022

if.then21:                                        ; preds = %sw.epilog
  %31 = load i32, i32* %vary.addr, align 4, !dbg !7023
  %32 = load i32, i32* %size, align 4, !dbg !7025
  %add22 = add i32 %32, %31, !dbg !7025
  store i32 %add22, i32* %size, align 4, !dbg !7025
  %33 = load i32, i32* %max.addr, align 4, !dbg !7026
  %34 = load i32, i32* %size, align 4, !dbg !7027
  %rem23 = urem i32 %34, %33, !dbg !7027
  store i32 %rem23, i32* %size, align 4, !dbg !7027
  %35 = load i32, i32* %size, align 4, !dbg !7028
  %cmp24 = icmp eq i32 %35, 0, !dbg !7030
  br i1 %cmp24, label %if.then26, label %if.end29, !dbg !7031

if.then26:                                        ; preds = %if.then21
  %36 = load i32, i32* %vary.addr, align 4, !dbg !7032
  %37 = load i32, i32* %max.addr, align 4, !dbg !7033
  %cmp27 = icmp slt i32 %36, %37, !dbg !7034
  br i1 %cmp27, label %cond.true, label %cond.false, !dbg !7035

cond.true:                                        ; preds = %if.then26
  %38 = load i32, i32* %vary.addr, align 4, !dbg !7036
  br label %cond.end, !dbg !7035

cond.false:                                       ; preds = %if.then26
  %39 = load i32, i32* %max.addr, align 4, !dbg !7037
  br label %cond.end, !dbg !7035

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %38, %cond.true ], [ %39, %cond.false ], !dbg !7035
  store i32 %cond, i32* %size, align 4, !dbg !7038
  br label %if.end29, !dbg !7039

if.end29:                                         ; preds = %cond.end, %if.then21
  br label %if.end30, !dbg !7040

if.end30:                                         ; preds = %if.end29, %sw.epilog
  br label %for.inc31, !dbg !7041

for.inc31:                                        ; preds = %if.end30
  %40 = load i32, i32* %i, align 4, !dbg !7042
  %inc32 = add i32 %40, 1, !dbg !7042
  store i32 %inc32, i32* %i, align 4, !dbg !7042
  br label %for.cond, !dbg !7043, !llvm.loop !7044

for.end33:                                        ; preds = %for.cond
  %41 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7046
  store %struct.scatterlist* %41, %struct.scatterlist** %retval, align 8, !dbg !7047
  br label %return, !dbg !7047

return:                                           ; preds = %for.end33, %if.then10, %if.then3, %if.then
  %42 = load %struct.scatterlist*, %struct.scatterlist** %retval, align 8, !dbg !7048
  ret %struct.scatterlist* %42, !dbg !7048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @perform_sglist(%struct.usbtest_dev* %tdev, i32 %iterations, i32 %pipe, %struct.usb_sg_request* %req, %struct.scatterlist* %sg, i32 %nents) #2 !dbg !7049 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !6723, metadata !DIExpression()), !dbg !7052
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %iterations.addr = alloca i32, align 4
  %pipe.addr = alloca i32, align 4
  %req.addr = alloca %struct.usb_sg_request*, align 8
  %sg.addr = alloca %struct.scatterlist*, align 8
  %nents.addr = alloca i32, align 4
  %udev = alloca %struct.usb_device*, align 8
  %retval1 = alloca i32, align 4
  %timeout = alloca %struct.sg_timeout, align 8
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !7055, metadata !DIExpression()), !dbg !7056
  store i32 %iterations, i32* %iterations.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iterations.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !7059, metadata !DIExpression()), !dbg !7060
  store %struct.usb_sg_request* %req, %struct.usb_sg_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_sg_request** %req.addr, metadata !7061, metadata !DIExpression()), !dbg !7062
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !7063, metadata !DIExpression()), !dbg !7064
  store i32 %nents, i32* %nents.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nents.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !7067, metadata !DIExpression()), !dbg !7068
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !7069
  %call = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %0) #11, !dbg !7070
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !7068
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7071, metadata !DIExpression()), !dbg !7072
  store i32 0, i32* %retval1, align 4, !dbg !7072
  call void @llvm.dbg.declare(metadata %struct.sg_timeout* %timeout, metadata !7073, metadata !DIExpression()), !dbg !7074
  %1 = bitcast %struct.sg_timeout* %timeout to i8*, !dbg !7074
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 48, i1 false), !dbg !7074
  %req2 = getelementptr inbounds %struct.sg_timeout, %struct.sg_timeout* %timeout, i32 0, i32 1, !dbg !7075
  %2 = load %struct.usb_sg_request*, %struct.usb_sg_request** %req.addr, align 8, !dbg !7076
  store %struct.usb_sg_request* %2, %struct.usb_sg_request** %req2, align 8, !dbg !7075
  %timer = getelementptr inbounds %struct.sg_timeout, %struct.sg_timeout* %timeout, i32 0, i32 0, !dbg !7077
  call void @init_timer_on_stack_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @sg_timeout, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !7077
  br label %while.cond, !dbg !7078

while.cond:                                       ; preds = %if.end13, %entry
  %3 = load i32, i32* %retval1, align 4, !dbg !7079
  %cmp = icmp eq i32 %3, 0, !dbg !7080
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7081

land.rhs:                                         ; preds = %while.cond
  %4 = load i32, i32* %iterations.addr, align 4, !dbg !7082
  %dec = add i32 %4, -1, !dbg !7082
  store i32 %dec, i32* %iterations.addr, align 4, !dbg !7082
  %cmp3 = icmp ugt i32 %4, 0, !dbg !7083
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ], !dbg !7084
  br i1 %5, label %while.body, label %while.end, !dbg !7078

while.body:                                       ; preds = %land.end
  %6 = load %struct.usb_sg_request*, %struct.usb_sg_request** %req.addr, align 8, !dbg !7085
  %7 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7086
  %8 = load i32, i32* %pipe.addr, align 4, !dbg !7087
  %9 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7088
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 4, !dbg !7089
  %10 = load i32, i32* %speed, align 4, !dbg !7089
  %cmp4 = icmp eq i32 %10, 3, !dbg !7090
  %11 = zext i1 %cmp4 to i64, !dbg !7091
  %cond = select i1 %cmp4, i32 8, i32 1, !dbg !7091
  %12 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !7092
  %13 = load i32, i32* %nents.addr, align 4, !dbg !7093
  %call5 = call i32 @usb_sg_init(%struct.usb_sg_request* %6, %struct.usb_device* %7, i32 %8, i32 %cond, %struct.scatterlist* %12, i32 %13, i64 0, i32 3264) #11, !dbg !7094
  store i32 %call5, i32* %retval1, align 4, !dbg !7095
  %14 = load i32, i32* %retval1, align 4, !dbg !7096
  %tobool = icmp ne i32 %14, 0, !dbg !7096
  br i1 %tobool, label %if.then, label %if.end, !dbg !7098

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !7099

if.end:                                           ; preds = %while.body
  %timer6 = getelementptr inbounds %struct.sg_timeout, %struct.sg_timeout* %timeout, i32 0, i32 0, !dbg !7100
  %15 = load volatile i64, i64* @jiffies, align 8, !dbg !7101
  store i32 10000, i32* %m.addr.i, align 4
  %16 = load i32, i32* %m.addr.i, align 4, !dbg !7102
  %17 = call i1 @llvm.is.constant.i32(i32 %16) #10, !dbg !7103
  br i1 %17, label %if.then.i, label %if.else.i, !dbg !7104

if.then.i:                                        ; preds = %if.end
  %18 = load i32, i32* %m.addr.i, align 4, !dbg !7105
  %cmp.i = icmp slt i32 %18, 0, !dbg !7106
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7107

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !7108
  br label %msecs_to_jiffies.exit, !dbg !7108

if.end.i:                                         ; preds = %if.then.i
  %19 = load i32, i32* %m.addr.i, align 4, !dbg !7109
  %call.i = call i64 @_msecs_to_jiffies(i32 %19) #14, !dbg !7110
  store i64 %call.i, i64* %retval.i, align 8, !dbg !7111
  br label %msecs_to_jiffies.exit, !dbg !7111

if.else.i:                                        ; preds = %if.end
  %20 = load i32, i32* %m.addr.i, align 4, !dbg !7112
  %call2.i = call i64 @__msecs_to_jiffies(i32 %20) #14, !dbg !7113
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !7114
  br label %msecs_to_jiffies.exit, !dbg !7114

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %21 = load i64, i64* %retval.i, align 8, !dbg !7115
  %add = add i64 %15, %21, !dbg !7116
  %call8 = call i32 @mod_timer(%struct.timer_list* %timer6, i64 %add) #11, !dbg !7117
  %22 = load %struct.usb_sg_request*, %struct.usb_sg_request** %req.addr, align 8, !dbg !7118
  call void @usb_sg_wait(%struct.usb_sg_request* %22) #11, !dbg !7119
  %timer9 = getelementptr inbounds %struct.sg_timeout, %struct.sg_timeout* %timeout, i32 0, i32 0, !dbg !7120
  %call10 = call i32 @del_timer(%struct.timer_list* %timer9) #11, !dbg !7120
  %tobool11 = icmp ne i32 %call10, 0, !dbg !7120
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !7122

if.then12:                                        ; preds = %msecs_to_jiffies.exit
  store i32 -110, i32* %retval1, align 4, !dbg !7123
  br label %if.end13, !dbg !7124

if.else:                                          ; preds = %msecs_to_jiffies.exit
  %23 = load %struct.usb_sg_request*, %struct.usb_sg_request** %req.addr, align 8, !dbg !7125
  %status = getelementptr inbounds %struct.usb_sg_request, %struct.usb_sg_request* %23, i32 0, i32 0, !dbg !7126
  %24 = load i32, i32* %status, align 8, !dbg !7126
  store i32 %24, i32* %retval1, align 4, !dbg !7127
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  %timer14 = getelementptr inbounds %struct.sg_timeout, %struct.sg_timeout* %timeout, i32 0, i32 0, !dbg !7128
  call void @destroy_timer_on_stack(%struct.timer_list* %timer14) #11, !dbg !7129
  br label %while.cond, !dbg !7078, !llvm.loop !7130

while.end:                                        ; preds = %if.then, %land.end
  %25 = load i32, i32* %retval1, align 4, !dbg !7132
  %tobool15 = icmp ne i32 %25, 0, !dbg !7132
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7134

if.then16:                                        ; preds = %while.end
  %26 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !7135
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %26, i32 0, i32 0, !dbg !7135
  %27 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !7135
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %27, i32 0, i32 7, !dbg !7135
  %28 = load i32, i32* %iterations.addr, align 4, !dbg !7135
  %29 = load i32, i32* %retval1, align 4, !dbg !7135
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.70, i64 0, i64 0), i32 %28, i32 %29) #12, !dbg !7135
  br label %if.end17, !dbg !7135

if.end17:                                         ; preds = %if.then16, %while.end
  %30 = load i32, i32* %retval1, align 4, !dbg !7136
  ret i32 %30, !dbg !7137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_sglist(%struct.scatterlist* %sg, i32 %nents) #2 !dbg !7138 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %nents.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !7141, metadata !DIExpression()), !dbg !7142
  store i32 %nents, i32* %nents.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nents.addr, metadata !7143, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7145, metadata !DIExpression()), !dbg !7146
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !7147
  %tobool = icmp ne %struct.scatterlist* %0, null, !dbg !7147
  br i1 %tobool, label %if.end, label %if.then, !dbg !7149

if.then:                                          ; preds = %entry
  br label %return, !dbg !7150

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !7151
  br label %for.cond, !dbg !7153

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !7154
  %2 = load i32, i32* %nents.addr, align 4, !dbg !7156
  %cmp = icmp ult i32 %1, %2, !dbg !7157
  br i1 %cmp, label %for.body, label %for.end, !dbg !7158

for.body:                                         ; preds = %for.cond
  %3 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !7159
  %4 = load i32, i32* %i, align 4, !dbg !7162
  %idxprom = zext i32 %4 to i64, !dbg !7159
  %arrayidx = getelementptr %struct.scatterlist, %struct.scatterlist* %3, i64 %idxprom, !dbg !7159
  %call = call %struct.page* @sg_page(%struct.scatterlist* %arrayidx) #11, !dbg !7163
  %tobool1 = icmp ne %struct.page* %call, null, !dbg !7163
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !7164

if.then2:                                         ; preds = %for.body
  br label %for.inc, !dbg !7165

if.end3:                                          ; preds = %for.body
  %5 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !7166
  %6 = load i32, i32* %i, align 4, !dbg !7167
  %idxprom4 = zext i32 %6 to i64, !dbg !7166
  %arrayidx5 = getelementptr %struct.scatterlist, %struct.scatterlist* %5, i64 %idxprom4, !dbg !7166
  %call6 = call i8* @sg_virt(%struct.scatterlist* %arrayidx5) #11, !dbg !7168
  call void @kfree(i8* %call6) #11, !dbg !7169
  br label %for.inc, !dbg !7170

for.inc:                                          ; preds = %if.end3, %if.then2
  %7 = load i32, i32* %i, align 4, !dbg !7171
  %inc = add i32 %7, 1, !dbg !7171
  store i32 %inc, i32* %i, align 4, !dbg !7171
  br label %for.cond, !dbg !7172, !llvm.loop !7173

for.end:                                          ; preds = %for.cond
  %8 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !7175
  %9 = bitcast %struct.scatterlist* %8 to i8*, !dbg !7175
  call void @kfree(i8* %9) #11, !dbg !7176
  br label %return, !dbg !7177

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !7177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ch9_postconfig(%struct.usbtest_dev* %dev) #2 !dbg !7178 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %iface = alloca %struct.usb_interface*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %i = alloca i32, align 4
  %alt = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %expected = alloca i32, align 4
  %bos = alloca %struct.usb_bos_descriptor*, align 8
  %header = alloca %struct.usb_dev_cap_header*, align 8
  %total = alloca i32, align 4
  %num = alloca i32, align 4
  %length = alloca i32, align 4
  %buf77 = alloca i8*, align 8
  %d = alloca %struct.usb_qualifier_descriptor*, align 8
  %max = alloca i32, align 4
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !7181, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %iface, metadata !7183, metadata !DIExpression()), !dbg !7184
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7185
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %0, i32 0, i32 0, !dbg !7186
  %1 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !7186
  store %struct.usb_interface* %1, %struct.usb_interface** %iface, align 8, !dbg !7184
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !7187, metadata !DIExpression()), !dbg !7188
  %2 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7189
  %call = call %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %2) #11, !dbg !7190
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !7188
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7191, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.declare(metadata i32* %alt, metadata !7193, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7195, metadata !DIExpression()), !dbg !7196
  store i32 0, i32* %i, align 4, !dbg !7197
  br label %for.cond, !dbg !7199

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !7200
  %4 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7202
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %4, i32 0, i32 2, !dbg !7203
  %5 = load i32, i32* %num_altsetting, align 8, !dbg !7203
  %cmp = icmp ult i32 %3, %5, !dbg !7204
  br i1 %cmp, label %for.body, label %for.end, !dbg !7205

for.body:                                         ; preds = %for.cond
  %6 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7206
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %6, i32 0, i32 0, !dbg !7208
  %7 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !dbg !7208
  %8 = load i32, i32* %i, align 4, !dbg !7209
  %idxprom = sext i32 %8 to i64, !dbg !7206
  %arrayidx = getelementptr %struct.usb_host_interface, %struct.usb_host_interface* %7, i64 %idxprom, !dbg !7206
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0, !dbg !7210
  %bAlternateSetting = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 3, !dbg !7211
  %9 = load i8, i8* %bAlternateSetting, align 1, !dbg !7211
  %conv = zext i8 %9 to i32, !dbg !7206
  store i32 %conv, i32* %alt, align 4, !dbg !7212
  %10 = load i32, i32* %alt, align 4, !dbg !7213
  %cmp2 = icmp slt i32 %10, 0, !dbg !7215
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !7216

lor.lhs.false:                                    ; preds = %for.body
  %11 = load i32, i32* %alt, align 4, !dbg !7217
  %12 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7218
  %num_altsetting4 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 2, !dbg !7219
  %13 = load i32, i32* %num_altsetting4, align 8, !dbg !7219
  %cmp5 = icmp uge i32 %11, %13, !dbg !7220
  br i1 %cmp5, label %if.then, label %if.end, !dbg !7221

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7222
  %dev7 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %14, i32 0, i32 7, !dbg !7222
  %15 = load i32, i32* %i, align 4, !dbg !7222
  %16 = load i32, i32* %alt, align 4, !dbg !7222
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev7, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.71, i64 0, i64 0), i32 %15, i32 %16) #12, !dbg !7222
  br label %if.end, !dbg !7224

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %17 = load i32, i32* @realworld, align 4, !dbg !7225
  %tobool = icmp ne i32 %17, 0, !dbg !7225
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !7227

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7228
  %num_altsetting8 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %18, i32 0, i32 2, !dbg !7229
  %19 = load i32, i32* %num_altsetting8, align 8, !dbg !7229
  %cmp9 = icmp eq i32 %19, 1, !dbg !7230
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !7231

if.then11:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !7232

if.end12:                                         ; preds = %land.lhs.true, %if.end
  %20 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7233
  %21 = load i32, i32* %alt, align 4, !dbg !7234
  %call13 = call i32 @set_altsetting(%struct.usbtest_dev* %20, i32 %21) #11, !dbg !7235
  store i32 %call13, i32* %retval1, align 4, !dbg !7236
  %22 = load i32, i32* %retval1, align 4, !dbg !7237
  %tobool14 = icmp ne i32 %22, 0, !dbg !7237
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !7239

if.then15:                                        ; preds = %if.end12
  %23 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7240
  %dev16 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %23, i32 0, i32 7, !dbg !7240
  %24 = load i32, i32* %alt, align 4, !dbg !7240
  %25 = load i32, i32* %retval1, align 4, !dbg !7240
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.72, i64 0, i64 0), i32 %24, i32 %25) #12, !dbg !7240
  %26 = load i32, i32* %retval1, align 4, !dbg !7242
  store i32 %26, i32* %retval, align 4, !dbg !7243
  br label %return, !dbg !7243

if.end17:                                         ; preds = %if.end12
  %27 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7244
  %call18 = call i32 @get_altsetting(%struct.usbtest_dev* %27) #11, !dbg !7245
  store i32 %call18, i32* %retval1, align 4, !dbg !7246
  %28 = load i32, i32* %retval1, align 4, !dbg !7247
  %29 = load i32, i32* %alt, align 4, !dbg !7249
  %cmp19 = icmp ne i32 %28, %29, !dbg !7250
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !7251

if.then21:                                        ; preds = %if.end17
  %30 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7252
  %dev22 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %30, i32 0, i32 7, !dbg !7252
  %31 = load i32, i32* %alt, align 4, !dbg !7252
  %32 = load i32, i32* %retval1, align 4, !dbg !7252
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev22, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.73, i64 0, i64 0), i32 %31, i32 %32) #12, !dbg !7252
  %33 = load i32, i32* %retval1, align 4, !dbg !7254
  %cmp23 = icmp slt i32 %33, 0, !dbg !7255
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !7256

cond.true:                                        ; preds = %if.then21
  %34 = load i32, i32* %retval1, align 4, !dbg !7257
  br label %cond.end, !dbg !7256

cond.false:                                       ; preds = %if.then21
  br label %cond.end, !dbg !7256

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ -33, %cond.false ], !dbg !7256
  store i32 %cond, i32* %retval, align 4, !dbg !7258
  br label %return, !dbg !7258

if.end25:                                         ; preds = %if.end17
  br label %for.inc, !dbg !7259

for.inc:                                          ; preds = %if.end25, %if.then11
  %35 = load i32, i32* %i, align 4, !dbg !7260
  %inc = add i32 %35, 1, !dbg !7260
  store i32 %inc, i32* %i, align 4, !dbg !7260
  br label %for.cond, !dbg !7261, !llvm.loop !7262

for.end:                                          ; preds = %for.cond
  %36 = load i32, i32* @realworld, align 4, !dbg !7264
  %tobool26 = icmp ne i32 %36, 0, !dbg !7264
  br i1 %tobool26, label %lor.lhs.false27, label %if.then31, !dbg !7266

lor.lhs.false27:                                  ; preds = %for.end
  %37 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7267
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %37, i32 0, i32 15, !dbg !7268
  %bNumConfigurations = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 13, !dbg !7269
  %38 = load i8, i8* %bNumConfigurations, align 1, !dbg !7269
  %conv28 = zext i8 %38 to i32, !dbg !7267
  %cmp29 = icmp ne i32 %conv28, 1, !dbg !7270
  br i1 %cmp29, label %if.then31, label %if.end57, !dbg !7271

if.then31:                                        ; preds = %lor.lhs.false27, %for.end
  call void @llvm.dbg.declare(metadata i32* %expected, metadata !7272, metadata !DIExpression()), !dbg !7274
  %39 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7275
  %actconfig = getelementptr inbounds %struct.usb_device, %struct.usb_device* %39, i32 0, i32 19, !dbg !7276
  %40 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7276
  %desc32 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %40, i32 0, i32 0, !dbg !7277
  %bConfigurationValue = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %desc32, i32 0, i32 4, !dbg !7278
  %41 = load i8, i8* %bConfigurationValue, align 1, !dbg !7278
  %conv33 = zext i8 %41 to i32, !dbg !7275
  store i32 %conv33, i32* %expected, align 4, !dbg !7274
  %42 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7279
  %43 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7280
  %call34 = call i32 @__create_pipe(%struct.usb_device* %43, i32 0) #11, !dbg !7280
  %or = or i32 -2147483648, %call34, !dbg !7280
  %or35 = or i32 %or, 128, !dbg !7280
  %44 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7281
  %buf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %44, i32 0, i32 13, !dbg !7282
  %45 = load i8*, i8** %buf, align 8, !dbg !7282
  %call36 = call i32 @usb_control_msg(%struct.usb_device* %42, i32 %or35, i8 zeroext 8, i8 zeroext -128, i16 zeroext 0, i16 zeroext 0, i8* %45, i16 zeroext 1, i32 5000) #11, !dbg !7283
  store i32 %call36, i32* %retval1, align 4, !dbg !7284
  %46 = load i32, i32* %retval1, align 4, !dbg !7285
  %cmp37 = icmp ne i32 %46, 1, !dbg !7287
  br i1 %cmp37, label %if.then45, label %lor.lhs.false39, !dbg !7288

lor.lhs.false39:                                  ; preds = %if.then31
  %47 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7289
  %buf40 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %47, i32 0, i32 13, !dbg !7290
  %48 = load i8*, i8** %buf40, align 8, !dbg !7290
  %arrayidx41 = getelementptr i8, i8* %48, i64 0, !dbg !7289
  %49 = load i8, i8* %arrayidx41, align 1, !dbg !7289
  %conv42 = zext i8 %49 to i32, !dbg !7289
  %50 = load i32, i32* %expected, align 4, !dbg !7291
  %cmp43 = icmp ne i32 %conv42, %50, !dbg !7292
  br i1 %cmp43, label %if.then45, label %if.end56, !dbg !7293

if.then45:                                        ; preds = %lor.lhs.false39, %if.then31
  %51 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7294
  %dev46 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %51, i32 0, i32 7, !dbg !7294
  %52 = load i32, i32* %retval1, align 4, !dbg !7294
  %53 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7294
  %buf47 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %53, i32 0, i32 13, !dbg !7294
  %54 = load i8*, i8** %buf47, align 8, !dbg !7294
  %arrayidx48 = getelementptr i8, i8* %54, i64 0, !dbg !7294
  %55 = load i8, i8* %arrayidx48, align 1, !dbg !7294
  %conv49 = zext i8 %55 to i32, !dbg !7294
  %56 = load i32, i32* %expected, align 4, !dbg !7294
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev46, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.74, i64 0, i64 0), i32 %52, i32 %conv49, i32 %56) #12, !dbg !7294
  %57 = load i32, i32* %retval1, align 4, !dbg !7296
  %cmp50 = icmp slt i32 %57, 0, !dbg !7297
  br i1 %cmp50, label %cond.true52, label %cond.false53, !dbg !7298

cond.true52:                                      ; preds = %if.then45
  %58 = load i32, i32* %retval1, align 4, !dbg !7299
  br label %cond.end54, !dbg !7298

cond.false53:                                     ; preds = %if.then45
  br label %cond.end54, !dbg !7298

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i32 [ %58, %cond.true52 ], [ -33, %cond.false53 ], !dbg !7298
  store i32 %cond55, i32* %retval, align 4, !dbg !7300
  br label %return, !dbg !7300

if.end56:                                         ; preds = %lor.lhs.false39
  br label %if.end57, !dbg !7301

if.end57:                                         ; preds = %if.end56, %lor.lhs.false27
  %59 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7302
  %60 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7303
  %buf58 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %60, i32 0, i32 13, !dbg !7304
  %61 = load i8*, i8** %buf58, align 8, !dbg !7304
  %call59 = call i32 @usb_get_descriptor(%struct.usb_device* %59, i8 zeroext 1, i8 zeroext 0, i8* %61, i32 18) #11, !dbg !7305
  store i32 %call59, i32* %retval1, align 4, !dbg !7306
  %62 = load i32, i32* %retval1, align 4, !dbg !7307
  %conv60 = sext i32 %62 to i64, !dbg !7307
  %cmp61 = icmp ne i64 %conv60, 18, !dbg !7309
  br i1 %cmp61, label %if.then63, label %if.end71, !dbg !7310

if.then63:                                        ; preds = %if.end57
  %63 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7311
  %dev64 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %63, i32 0, i32 7, !dbg !7311
  %64 = load i32, i32* %retval1, align 4, !dbg !7311
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.75, i64 0, i64 0), i32 %64) #12, !dbg !7311
  %65 = load i32, i32* %retval1, align 4, !dbg !7313
  %cmp65 = icmp slt i32 %65, 0, !dbg !7314
  br i1 %cmp65, label %cond.true67, label %cond.false68, !dbg !7315

cond.true67:                                      ; preds = %if.then63
  %66 = load i32, i32* %retval1, align 4, !dbg !7316
  br label %cond.end69, !dbg !7315

cond.false68:                                     ; preds = %if.then63
  br label %cond.end69, !dbg !7315

cond.end69:                                       ; preds = %cond.false68, %cond.true67
  %cond70 = phi i32 [ %66, %cond.true67 ], [ -33, %cond.false68 ], !dbg !7315
  store i32 %cond70, i32* %retval, align 4, !dbg !7317
  br label %return, !dbg !7317

if.end71:                                         ; preds = %if.end57
  %67 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7318
  %descriptor72 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %67, i32 0, i32 15, !dbg !7318
  %bcdUSB = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor72, i32 0, i32 2, !dbg !7318
  %68 = load i16, i16* %bcdUSB, align 2, !dbg !7318
  %conv73 = zext i16 %68 to i32, !dbg !7318
  %cmp74 = icmp sge i32 %conv73, 528, !dbg !7320
  br i1 %cmp74, label %if.then76, label %if.end174, !dbg !7321

if.then76:                                        ; preds = %if.end71
  call void @llvm.dbg.declare(metadata %struct.usb_bos_descriptor** %bos, metadata !7322, metadata !DIExpression()), !dbg !7324
  store %struct.usb_bos_descriptor* null, %struct.usb_bos_descriptor** %bos, align 8, !dbg !7324
  call void @llvm.dbg.declare(metadata %struct.usb_dev_cap_header** %header, metadata !7325, metadata !DIExpression()), !dbg !7326
  store %struct.usb_dev_cap_header* null, %struct.usb_dev_cap_header** %header, align 8, !dbg !7326
  call void @llvm.dbg.declare(metadata i32* %total, metadata !7327, metadata !DIExpression()), !dbg !7328
  call void @llvm.dbg.declare(metadata i32* %num, metadata !7329, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.declare(metadata i32* %length, metadata !7331, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.declare(metadata i8** %buf77, metadata !7333, metadata !DIExpression()), !dbg !7334
  %69 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7335
  %70 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7336
  %buf78 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %70, i32 0, i32 13, !dbg !7337
  %71 = load i8*, i8** %buf78, align 8, !dbg !7337
  %call79 = call i32 @usb_get_descriptor(%struct.usb_device* %69, i8 zeroext 15, i8 zeroext 0, i8* %71, i32 5) #11, !dbg !7338
  store i32 %call79, i32* %retval1, align 4, !dbg !7339
  %72 = load i32, i32* %retval1, align 4, !dbg !7340
  %conv80 = sext i32 %72 to i64, !dbg !7340
  %cmp81 = icmp ne i64 %conv80, 5, !dbg !7342
  br i1 %cmp81, label %if.then83, label %if.end91, !dbg !7343

if.then83:                                        ; preds = %if.then76
  %73 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7344
  %dev84 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %73, i32 0, i32 7, !dbg !7344
  %74 = load i32, i32* %retval1, align 4, !dbg !7344
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev84, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76, i64 0, i64 0), i32 %74) #12, !dbg !7344
  %75 = load i32, i32* %retval1, align 4, !dbg !7346
  %cmp85 = icmp slt i32 %75, 0, !dbg !7347
  br i1 %cmp85, label %cond.true87, label %cond.false88, !dbg !7348

cond.true87:                                      ; preds = %if.then83
  %76 = load i32, i32* %retval1, align 4, !dbg !7349
  br label %cond.end89, !dbg !7348

cond.false88:                                     ; preds = %if.then83
  br label %cond.end89, !dbg !7348

cond.end89:                                       ; preds = %cond.false88, %cond.true87
  %cond90 = phi i32 [ %76, %cond.true87 ], [ -33, %cond.false88 ], !dbg !7348
  store i32 %cond90, i32* %retval, align 4, !dbg !7350
  br label %return, !dbg !7350

if.end91:                                         ; preds = %if.then76
  %77 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7351
  %buf92 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %77, i32 0, i32 13, !dbg !7352
  %78 = load i8*, i8** %buf92, align 8, !dbg !7352
  %79 = bitcast i8* %78 to %struct.usb_bos_descriptor*, !dbg !7353
  store %struct.usb_bos_descriptor* %79, %struct.usb_bos_descriptor** %bos, align 8, !dbg !7354
  %80 = load %struct.usb_bos_descriptor*, %struct.usb_bos_descriptor** %bos, align 8, !dbg !7355
  %wTotalLength = getelementptr inbounds %struct.usb_bos_descriptor, %struct.usb_bos_descriptor* %80, i32 0, i32 2, !dbg !7355
  %81 = load i16, i16* %wTotalLength, align 1, !dbg !7355
  %conv93 = zext i16 %81 to i32, !dbg !7355
  store i32 %conv93, i32* %total, align 4, !dbg !7356
  %82 = load %struct.usb_bos_descriptor*, %struct.usb_bos_descriptor** %bos, align 8, !dbg !7357
  %bNumDeviceCaps = getelementptr inbounds %struct.usb_bos_descriptor, %struct.usb_bos_descriptor* %82, i32 0, i32 3, !dbg !7358
  %83 = load i8, i8* %bNumDeviceCaps, align 1, !dbg !7358
  %conv94 = zext i8 %83 to i32, !dbg !7357
  store i32 %conv94, i32* %num, align 4, !dbg !7359
  %84 = load i32, i32* %total, align 4, !dbg !7360
  %cmp95 = icmp ugt i32 %84, 256, !dbg !7362
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !7363

if.then97:                                        ; preds = %if.end91
  store i32 256, i32* %total, align 4, !dbg !7364
  br label %if.end98, !dbg !7365

if.end98:                                         ; preds = %if.then97, %if.end91
  %85 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7366
  %86 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7367
  %buf99 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %86, i32 0, i32 13, !dbg !7368
  %87 = load i8*, i8** %buf99, align 8, !dbg !7368
  %88 = load i32, i32* %total, align 4, !dbg !7369
  %call100 = call i32 @usb_get_descriptor(%struct.usb_device* %85, i8 zeroext 15, i8 zeroext 0, i8* %87, i32 %88) #11, !dbg !7370
  store i32 %call100, i32* %retval1, align 4, !dbg !7371
  %89 = load i32, i32* %retval1, align 4, !dbg !7372
  %90 = load i32, i32* %total, align 4, !dbg !7374
  %cmp101 = icmp ne i32 %89, %90, !dbg !7375
  br i1 %cmp101, label %if.then103, label %if.end111, !dbg !7376

if.then103:                                       ; preds = %if.end98
  %91 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7377
  %dev104 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %91, i32 0, i32 7, !dbg !7377
  %92 = load i32, i32* %retval1, align 4, !dbg !7377
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev104, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.77, i64 0, i64 0), i32 %92) #12, !dbg !7377
  %93 = load i32, i32* %retval1, align 4, !dbg !7379
  %cmp105 = icmp slt i32 %93, 0, !dbg !7380
  br i1 %cmp105, label %cond.true107, label %cond.false108, !dbg !7381

cond.true107:                                     ; preds = %if.then103
  %94 = load i32, i32* %retval1, align 4, !dbg !7382
  br label %cond.end109, !dbg !7381

cond.false108:                                    ; preds = %if.then103
  br label %cond.end109, !dbg !7381

cond.end109:                                      ; preds = %cond.false108, %cond.true107
  %cond110 = phi i32 [ %94, %cond.true107 ], [ -33, %cond.false108 ], !dbg !7381
  store i32 %cond110, i32* %retval, align 4, !dbg !7383
  br label %return, !dbg !7383

if.end111:                                        ; preds = %if.end98
  store i32 5, i32* %length, align 4, !dbg !7384
  %95 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7385
  %buf112 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %95, i32 0, i32 13, !dbg !7386
  %96 = load i8*, i8** %buf112, align 8, !dbg !7386
  store i8* %96, i8** %buf77, align 8, !dbg !7387
  store i32 0, i32* %i, align 4, !dbg !7388
  br label %for.cond113, !dbg !7390

for.cond113:                                      ; preds = %for.inc171, %if.end111
  %97 = load i32, i32* %i, align 4, !dbg !7391
  %98 = load i32, i32* %num, align 4, !dbg !7393
  %cmp114 = icmp ult i32 %97, %98, !dbg !7394
  br i1 %cmp114, label %for.body116, label %for.end173, !dbg !7395

for.body116:                                      ; preds = %for.cond113
  %99 = load i32, i32* %length, align 4, !dbg !7396
  %100 = load i8*, i8** %buf77, align 8, !dbg !7398
  %idx.ext = zext i32 %99 to i64, !dbg !7398
  %add.ptr = getelementptr i8, i8* %100, i64 %idx.ext, !dbg !7398
  store i8* %add.ptr, i8** %buf77, align 8, !dbg !7398
  %101 = load i8*, i8** %buf77, align 8, !dbg !7399
  %add.ptr117 = getelementptr i8, i8* %101, i64 3, !dbg !7401
  %102 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7402
  %buf118 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %102, i32 0, i32 13, !dbg !7403
  %103 = load i8*, i8** %buf118, align 8, !dbg !7403
  %104 = load i32, i32* %total, align 4, !dbg !7404
  %idx.ext119 = zext i32 %104 to i64, !dbg !7405
  %add.ptr120 = getelementptr i8, i8* %103, i64 %idx.ext119, !dbg !7405
  %cmp121 = icmp ugt i8* %add.ptr117, %add.ptr120, !dbg !7406
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !7407

if.then123:                                       ; preds = %for.body116
  br label %for.end173, !dbg !7408

if.end124:                                        ; preds = %for.body116
  %105 = load i8*, i8** %buf77, align 8, !dbg !7409
  %106 = bitcast i8* %105 to %struct.usb_dev_cap_header*, !dbg !7410
  store %struct.usb_dev_cap_header* %106, %struct.usb_dev_cap_header** %header, align 8, !dbg !7411
  %107 = load %struct.usb_dev_cap_header*, %struct.usb_dev_cap_header** %header, align 8, !dbg !7412
  %bLength = getelementptr inbounds %struct.usb_dev_cap_header, %struct.usb_dev_cap_header* %107, i32 0, i32 0, !dbg !7413
  %108 = load i8, i8* %bLength, align 1, !dbg !7413
  %conv125 = zext i8 %108 to i32, !dbg !7412
  store i32 %conv125, i32* %length, align 4, !dbg !7414
  %109 = load %struct.usb_dev_cap_header*, %struct.usb_dev_cap_header** %header, align 8, !dbg !7415
  %bDescriptorType = getelementptr inbounds %struct.usb_dev_cap_header, %struct.usb_dev_cap_header* %109, i32 0, i32 1, !dbg !7417
  %110 = load i8, i8* %bDescriptorType, align 1, !dbg !7417
  %conv126 = zext i8 %110 to i32, !dbg !7415
  %cmp127 = icmp ne i32 %conv126, 16, !dbg !7418
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !7419

if.then129:                                       ; preds = %if.end124
  %111 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7420
  %dev130 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %111, i32 0, i32 14, !dbg !7420
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev130, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.78, i64 0, i64 0)) #12, !dbg !7420
  br label %for.inc171, !dbg !7422

if.end131:                                        ; preds = %if.end124
  %112 = load %struct.usb_dev_cap_header*, %struct.usb_dev_cap_header** %header, align 8, !dbg !7423
  %bDevCapabilityType = getelementptr inbounds %struct.usb_dev_cap_header, %struct.usb_dev_cap_header* %112, i32 0, i32 2, !dbg !7424
  %113 = load i8, i8* %bDevCapabilityType, align 1, !dbg !7424
  %conv132 = zext i8 %113 to i32, !dbg !7423
  switch i32 %conv132, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb145
    i32 4, label %sw.bb158
  ], !dbg !7425

sw.bb:                                            ; preds = %if.end131
  %114 = load i8*, i8** %buf77, align 8, !dbg !7426
  %add.ptr133 = getelementptr i8, i8* %114, i64 7, !dbg !7429
  %115 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7430
  %buf134 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %115, i32 0, i32 13, !dbg !7431
  %116 = load i8*, i8** %buf134, align 8, !dbg !7431
  %117 = load i32, i32* %total, align 4, !dbg !7432
  %idx.ext135 = zext i32 %117 to i64, !dbg !7433
  %add.ptr136 = getelementptr i8, i8* %116, i64 %idx.ext135, !dbg !7433
  %cmp137 = icmp ugt i8* %add.ptr133, %add.ptr136, !dbg !7434
  br i1 %cmp137, label %if.then142, label %lor.lhs.false139, !dbg !7435

lor.lhs.false139:                                 ; preds = %sw.bb
  %118 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7436
  %119 = load i8*, i8** %buf77, align 8, !dbg !7437
  %call140 = call i32 @is_good_ext(%struct.usbtest_dev* %118, i8* %119) #11, !dbg !7438
  %tobool141 = icmp ne i32 %call140, 0, !dbg !7438
  br i1 %tobool141, label %if.end144, label %if.then142, !dbg !7439

if.then142:                                       ; preds = %lor.lhs.false139, %sw.bb
  %120 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7440
  %dev143 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %120, i32 0, i32 7, !dbg !7440
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev143, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.79, i64 0, i64 0)) #12, !dbg !7440
  store i32 -33, i32* %retval, align 4, !dbg !7442
  br label %return, !dbg !7442

if.end144:                                        ; preds = %lor.lhs.false139
  br label %sw.epilog, !dbg !7443

sw.bb145:                                         ; preds = %if.end131
  %121 = load i8*, i8** %buf77, align 8, !dbg !7444
  %add.ptr146 = getelementptr i8, i8* %121, i64 10, !dbg !7446
  %122 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7447
  %buf147 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %122, i32 0, i32 13, !dbg !7448
  %123 = load i8*, i8** %buf147, align 8, !dbg !7448
  %124 = load i32, i32* %total, align 4, !dbg !7449
  %idx.ext148 = zext i32 %124 to i64, !dbg !7450
  %add.ptr149 = getelementptr i8, i8* %123, i64 %idx.ext148, !dbg !7450
  %cmp150 = icmp ugt i8* %add.ptr146, %add.ptr149, !dbg !7451
  br i1 %cmp150, label %if.then155, label %lor.lhs.false152, !dbg !7452

lor.lhs.false152:                                 ; preds = %sw.bb145
  %125 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7453
  %126 = load i8*, i8** %buf77, align 8, !dbg !7454
  %call153 = call i32 @is_good_ss_cap(%struct.usbtest_dev* %125, i8* %126) #11, !dbg !7455
  %tobool154 = icmp ne i32 %call153, 0, !dbg !7455
  br i1 %tobool154, label %if.end157, label %if.then155, !dbg !7456

if.then155:                                       ; preds = %lor.lhs.false152, %sw.bb145
  %127 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7457
  %dev156 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %127, i32 0, i32 7, !dbg !7457
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev156, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.80, i64 0, i64 0)) #12, !dbg !7457
  store i32 -33, i32* %retval, align 4, !dbg !7459
  br label %return, !dbg !7459

if.end157:                                        ; preds = %lor.lhs.false152
  br label %sw.epilog, !dbg !7460

sw.bb158:                                         ; preds = %if.end131
  %128 = load i8*, i8** %buf77, align 8, !dbg !7461
  %add.ptr159 = getelementptr i8, i8* %128, i64 20, !dbg !7463
  %129 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7464
  %buf160 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %129, i32 0, i32 13, !dbg !7465
  %130 = load i8*, i8** %buf160, align 8, !dbg !7465
  %131 = load i32, i32* %total, align 4, !dbg !7466
  %idx.ext161 = zext i32 %131 to i64, !dbg !7467
  %add.ptr162 = getelementptr i8, i8* %130, i64 %idx.ext161, !dbg !7467
  %cmp163 = icmp ugt i8* %add.ptr159, %add.ptr162, !dbg !7468
  br i1 %cmp163, label %if.then168, label %lor.lhs.false165, !dbg !7469

lor.lhs.false165:                                 ; preds = %sw.bb158
  %132 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7470
  %133 = load i8*, i8** %buf77, align 8, !dbg !7471
  %call166 = call i32 @is_good_con_id(%struct.usbtest_dev* %132, i8* %133) #11, !dbg !7472
  %tobool167 = icmp ne i32 %call166, 0, !dbg !7472
  br i1 %tobool167, label %if.end170, label %if.then168, !dbg !7473

if.then168:                                       ; preds = %lor.lhs.false165, %sw.bb158
  %134 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7474
  %dev169 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %134, i32 0, i32 7, !dbg !7474
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev169, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.81, i64 0, i64 0)) #12, !dbg !7474
  store i32 -33, i32* %retval, align 4, !dbg !7476
  br label %return, !dbg !7476

if.end170:                                        ; preds = %lor.lhs.false165
  br label %sw.epilog, !dbg !7477

sw.default:                                       ; preds = %if.end131
  br label %sw.epilog, !dbg !7478

sw.epilog:                                        ; preds = %sw.default, %if.end170, %if.end157, %if.end144
  br label %for.inc171, !dbg !7479

for.inc171:                                       ; preds = %sw.epilog, %if.then129
  %135 = load i32, i32* %i, align 4, !dbg !7480
  %inc172 = add i32 %135, 1, !dbg !7480
  store i32 %inc172, i32* %i, align 4, !dbg !7480
  br label %for.cond113, !dbg !7481, !llvm.loop !7482

for.end173:                                       ; preds = %if.then123, %for.cond113
  br label %if.end174, !dbg !7484

if.end174:                                        ; preds = %for.end173, %if.end71
  store i32 0, i32* %i, align 4, !dbg !7485
  br label %for.cond175, !dbg !7487

for.cond175:                                      ; preds = %for.inc196, %if.end174
  %136 = load i32, i32* %i, align 4, !dbg !7488
  %137 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7490
  %descriptor176 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %137, i32 0, i32 15, !dbg !7491
  %bNumConfigurations177 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor176, i32 0, i32 13, !dbg !7492
  %138 = load i8, i8* %bNumConfigurations177, align 1, !dbg !7492
  %conv178 = zext i8 %138 to i32, !dbg !7490
  %cmp179 = icmp slt i32 %136, %conv178, !dbg !7493
  br i1 %cmp179, label %for.body181, label %for.end198, !dbg !7494

for.body181:                                      ; preds = %for.cond175
  %139 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7495
  %140 = load i32, i32* %i, align 4, !dbg !7497
  %conv182 = trunc i32 %140 to i8, !dbg !7497
  %141 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7498
  %buf183 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %141, i32 0, i32 13, !dbg !7499
  %142 = load i8*, i8** %buf183, align 8, !dbg !7499
  %call184 = call i32 @usb_get_descriptor(%struct.usb_device* %139, i8 zeroext 2, i8 zeroext %conv182, i8* %142, i32 256) #11, !dbg !7500
  store i32 %call184, i32* %retval1, align 4, !dbg !7501
  %143 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7502
  %144 = load i32, i32* %retval1, align 4, !dbg !7504
  %call185 = call i32 @is_good_config(%struct.usbtest_dev* %143, i32 %144) #11, !dbg !7505
  %tobool186 = icmp ne i32 %call185, 0, !dbg !7505
  br i1 %tobool186, label %if.end195, label %if.then187, !dbg !7506

if.then187:                                       ; preds = %for.body181
  %145 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7507
  %dev188 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %145, i32 0, i32 7, !dbg !7507
  %146 = load i32, i32* %i, align 4, !dbg !7507
  %147 = load i32, i32* %retval1, align 4, !dbg !7507
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev188, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.82, i64 0, i64 0), i32 %146, i32 %147) #12, !dbg !7507
  %148 = load i32, i32* %retval1, align 4, !dbg !7509
  %cmp189 = icmp slt i32 %148, 0, !dbg !7510
  br i1 %cmp189, label %cond.true191, label %cond.false192, !dbg !7511

cond.true191:                                     ; preds = %if.then187
  %149 = load i32, i32* %retval1, align 4, !dbg !7512
  br label %cond.end193, !dbg !7511

cond.false192:                                    ; preds = %if.then187
  br label %cond.end193, !dbg !7511

cond.end193:                                      ; preds = %cond.false192, %cond.true191
  %cond194 = phi i32 [ %149, %cond.true191 ], [ -33, %cond.false192 ], !dbg !7511
  store i32 %cond194, i32* %retval, align 4, !dbg !7513
  br label %return, !dbg !7513

if.end195:                                        ; preds = %for.body181
  br label %for.inc196, !dbg !7514

for.inc196:                                       ; preds = %if.end195
  %150 = load i32, i32* %i, align 4, !dbg !7515
  %inc197 = add i32 %150, 1, !dbg !7515
  store i32 %inc197, i32* %i, align 4, !dbg !7515
  br label %for.cond175, !dbg !7516, !llvm.loop !7517

for.end198:                                       ; preds = %for.cond175
  %151 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7519
  %descriptor199 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %151, i32 0, i32 15, !dbg !7519
  %bcdUSB200 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor199, i32 0, i32 2, !dbg !7519
  %152 = load i16, i16* %bcdUSB200, align 2, !dbg !7519
  %conv201 = zext i16 %152 to i32, !dbg !7519
  %cmp202 = icmp eq i32 %conv201, 512, !dbg !7521
  br i1 %cmp202, label %if.then204, label %if.end256, !dbg !7522

if.then204:                                       ; preds = %for.end198
  call void @llvm.dbg.declare(metadata %struct.usb_qualifier_descriptor** %d, metadata !7523, metadata !DIExpression()), !dbg !7525
  store %struct.usb_qualifier_descriptor* null, %struct.usb_qualifier_descriptor** %d, align 8, !dbg !7525
  %153 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7526
  %154 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7527
  %buf205 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %154, i32 0, i32 13, !dbg !7528
  %155 = load i8*, i8** %buf205, align 8, !dbg !7528
  %call206 = call i32 @usb_get_descriptor(%struct.usb_device* %153, i8 zeroext 6, i8 zeroext 0, i8* %155, i32 10) #11, !dbg !7529
  store i32 %call206, i32* %retval1, align 4, !dbg !7530
  %156 = load i32, i32* %retval1, align 4, !dbg !7531
  %cmp207 = icmp eq i32 %156, -32, !dbg !7533
  br i1 %cmp207, label %if.then209, label %if.else, !dbg !7534

if.then209:                                       ; preds = %if.then204
  %157 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7535
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %157, i32 0, i32 4, !dbg !7538
  %158 = load i32, i32* %speed, align 4, !dbg !7538
  %cmp210 = icmp eq i32 %158, 3, !dbg !7539
  br i1 %cmp210, label %if.then212, label %if.end214, !dbg !7540

if.then212:                                       ; preds = %if.then209
  %159 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7541
  %dev213 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %159, i32 0, i32 7, !dbg !7541
  %160 = load i32, i32* %retval1, align 4, !dbg !7541
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev213, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.83, i64 0, i64 0), i32 %160) #12, !dbg !7541
  %161 = load i32, i32* %retval1, align 4, !dbg !7543
  store i32 %161, i32* %retval, align 4, !dbg !7544
  br label %return, !dbg !7544

if.end214:                                        ; preds = %if.then209
  br label %if.end229, !dbg !7545

if.else:                                          ; preds = %if.then204
  %162 = load i32, i32* %retval1, align 4, !dbg !7546
  %conv215 = sext i32 %162 to i64, !dbg !7546
  %cmp216 = icmp ne i64 %conv215, 10, !dbg !7548
  br i1 %cmp216, label %if.then218, label %if.else226, !dbg !7549

if.then218:                                       ; preds = %if.else
  %163 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7550
  %dev219 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %163, i32 0, i32 7, !dbg !7550
  %164 = load i32, i32* %retval1, align 4, !dbg !7550
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev219, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.84, i64 0, i64 0), i32 %164) #12, !dbg !7550
  %165 = load i32, i32* %retval1, align 4, !dbg !7552
  %cmp220 = icmp slt i32 %165, 0, !dbg !7553
  br i1 %cmp220, label %cond.true222, label %cond.false223, !dbg !7554

cond.true222:                                     ; preds = %if.then218
  %166 = load i32, i32* %retval1, align 4, !dbg !7555
  br label %cond.end224, !dbg !7554

cond.false223:                                    ; preds = %if.then218
  br label %cond.end224, !dbg !7554

cond.end224:                                      ; preds = %cond.false223, %cond.true222
  %cond225 = phi i32 [ %166, %cond.true222 ], [ -33, %cond.false223 ], !dbg !7554
  store i32 %cond225, i32* %retval, align 4, !dbg !7556
  br label %return, !dbg !7556

if.else226:                                       ; preds = %if.else
  %167 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7557
  %buf227 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %167, i32 0, i32 13, !dbg !7558
  %168 = load i8*, i8** %buf227, align 8, !dbg !7558
  %169 = bitcast i8* %168 to %struct.usb_qualifier_descriptor*, !dbg !7559
  store %struct.usb_qualifier_descriptor* %169, %struct.usb_qualifier_descriptor** %d, align 8, !dbg !7560
  br label %if.end228

if.end228:                                        ; preds = %if.else226
  br label %if.end229

if.end229:                                        ; preds = %if.end228, %if.end214
  %170 = load %struct.usb_qualifier_descriptor*, %struct.usb_qualifier_descriptor** %d, align 8, !dbg !7561
  %tobool230 = icmp ne %struct.usb_qualifier_descriptor* %170, null, !dbg !7561
  br i1 %tobool230, label %if.then231, label %if.end255, !dbg !7563

if.then231:                                       ; preds = %if.end229
  call void @llvm.dbg.declare(metadata i32* %max, metadata !7564, metadata !DIExpression()), !dbg !7566
  %171 = load %struct.usb_qualifier_descriptor*, %struct.usb_qualifier_descriptor** %d, align 8, !dbg !7567
  %bNumConfigurations232 = getelementptr inbounds %struct.usb_qualifier_descriptor, %struct.usb_qualifier_descriptor* %171, i32 0, i32 7, !dbg !7568
  %172 = load i8, i8* %bNumConfigurations232, align 1, !dbg !7568
  %conv233 = zext i8 %172 to i32, !dbg !7567
  store i32 %conv233, i32* %max, align 4, !dbg !7566
  store i32 0, i32* %i, align 4, !dbg !7569
  br label %for.cond234, !dbg !7571

for.cond234:                                      ; preds = %for.inc252, %if.then231
  %173 = load i32, i32* %i, align 4, !dbg !7572
  %174 = load i32, i32* %max, align 4, !dbg !7574
  %cmp235 = icmp ult i32 %173, %174, !dbg !7575
  br i1 %cmp235, label %for.body237, label %for.end254, !dbg !7576

for.body237:                                      ; preds = %for.cond234
  %175 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7577
  %176 = load i32, i32* %i, align 4, !dbg !7579
  %conv238 = trunc i32 %176 to i8, !dbg !7579
  %177 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7580
  %buf239 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %177, i32 0, i32 13, !dbg !7581
  %178 = load i8*, i8** %buf239, align 8, !dbg !7581
  %call240 = call i32 @usb_get_descriptor(%struct.usb_device* %175, i8 zeroext 7, i8 zeroext %conv238, i8* %178, i32 256) #11, !dbg !7582
  store i32 %call240, i32* %retval1, align 4, !dbg !7583
  %179 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7584
  %180 = load i32, i32* %retval1, align 4, !dbg !7586
  %call241 = call i32 @is_good_config(%struct.usbtest_dev* %179, i32 %180) #11, !dbg !7587
  %tobool242 = icmp ne i32 %call241, 0, !dbg !7587
  br i1 %tobool242, label %if.end251, label %if.then243, !dbg !7588

if.then243:                                       ; preds = %for.body237
  %181 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7589
  %dev244 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %181, i32 0, i32 7, !dbg !7589
  %182 = load i32, i32* %retval1, align 4, !dbg !7589
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev244, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.85, i64 0, i64 0), i32 %182) #12, !dbg !7589
  %183 = load i32, i32* %retval1, align 4, !dbg !7591
  %cmp245 = icmp slt i32 %183, 0, !dbg !7592
  br i1 %cmp245, label %cond.true247, label %cond.false248, !dbg !7593

cond.true247:                                     ; preds = %if.then243
  %184 = load i32, i32* %retval1, align 4, !dbg !7594
  br label %cond.end249, !dbg !7593

cond.false248:                                    ; preds = %if.then243
  br label %cond.end249, !dbg !7593

cond.end249:                                      ; preds = %cond.false248, %cond.true247
  %cond250 = phi i32 [ %184, %cond.true247 ], [ -33, %cond.false248 ], !dbg !7593
  store i32 %cond250, i32* %retval, align 4, !dbg !7595
  br label %return, !dbg !7595

if.end251:                                        ; preds = %for.body237
  br label %for.inc252, !dbg !7596

for.inc252:                                       ; preds = %if.end251
  %185 = load i32, i32* %i, align 4, !dbg !7597
  %inc253 = add i32 %185, 1, !dbg !7597
  store i32 %inc253, i32* %i, align 4, !dbg !7597
  br label %for.cond234, !dbg !7598, !llvm.loop !7599

for.end254:                                       ; preds = %for.cond234
  br label %if.end255, !dbg !7601

if.end255:                                        ; preds = %for.end254, %if.end229
  br label %if.end256, !dbg !7602

if.end256:                                        ; preds = %if.end255, %for.end198
  %186 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7603
  %187 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7604
  %buf257 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %187, i32 0, i32 13, !dbg !7605
  %188 = load i8*, i8** %buf257, align 8, !dbg !7605
  %call258 = call i32 @usb_get_std_status(%struct.usb_device* %186, i32 0, i32 0, i8* %188) #11, !dbg !7606
  store i32 %call258, i32* %retval1, align 4, !dbg !7607
  %189 = load i32, i32* %retval1, align 4, !dbg !7608
  %tobool259 = icmp ne i32 %189, 0, !dbg !7608
  br i1 %tobool259, label %if.then260, label %if.end262, !dbg !7610

if.then260:                                       ; preds = %if.end256
  %190 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7611
  %dev261 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %190, i32 0, i32 7, !dbg !7611
  %191 = load i32, i32* %retval1, align 4, !dbg !7611
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev261, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.86, i64 0, i64 0), i32 %191) #12, !dbg !7611
  %192 = load i32, i32* %retval1, align 4, !dbg !7613
  store i32 %192, i32* %retval, align 4, !dbg !7614
  br label %return, !dbg !7614

if.end262:                                        ; preds = %if.end256
  %193 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7615
  %194 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7616
  %altsetting263 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %194, i32 0, i32 0, !dbg !7617
  %195 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting263, align 8, !dbg !7617
  %arrayidx264 = getelementptr %struct.usb_host_interface, %struct.usb_host_interface* %195, i64 0, !dbg !7616
  %desc265 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx264, i32 0, i32 0, !dbg !7618
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc265, i32 0, i32 2, !dbg !7619
  %196 = load i8, i8* %bInterfaceNumber, align 2, !dbg !7619
  %conv266 = zext i8 %196 to i32, !dbg !7616
  %197 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7620
  %buf267 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %197, i32 0, i32 13, !dbg !7621
  %198 = load i8*, i8** %buf267, align 8, !dbg !7621
  %call268 = call i32 @usb_get_std_status(%struct.usb_device* %193, i32 1, i32 %conv266, i8* %198) #11, !dbg !7622
  store i32 %call268, i32* %retval1, align 4, !dbg !7623
  %199 = load i32, i32* %retval1, align 4, !dbg !7624
  %tobool269 = icmp ne i32 %199, 0, !dbg !7624
  br i1 %tobool269, label %if.then270, label %if.end272, !dbg !7626

if.then270:                                       ; preds = %if.end262
  %200 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !7627
  %dev271 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %200, i32 0, i32 7, !dbg !7627
  %201 = load i32, i32* %retval1, align 4, !dbg !7627
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev271, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.87, i64 0, i64 0), i32 %201) #12, !dbg !7627
  %202 = load i32, i32* %retval1, align 4, !dbg !7629
  store i32 %202, i32* %retval, align 4, !dbg !7630
  br label %return, !dbg !7630

if.end272:                                        ; preds = %if.end262
  store i32 0, i32* %retval, align 4, !dbg !7631
  br label %return, !dbg !7631

return:                                           ; preds = %if.end272, %if.then270, %if.then260, %cond.end249, %cond.end224, %if.then212, %cond.end193, %if.then168, %if.then155, %if.then142, %cond.end109, %cond.end89, %cond.end69, %cond.end54, %cond.end, %if.then15
  %203 = load i32, i32* %retval, align 4, !dbg !7632
  ret i32 %203, !dbg !7632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_ctrl_queue(%struct.usbtest_dev* %dev, %struct.usbtest_param_32* %param) #2 !dbg !7633 {
entry:
  %lock.addr.i164 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i164, metadata !7636, metadata !DIExpression()), !dbg !7641
  %lock.addr.i162 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i162, metadata !7643, metadata !DIExpression()), !dbg !7645
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4460, metadata !DIExpression()), !dbg !7647
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4472, metadata !DIExpression()), !dbg !7653
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4474, metadata !DIExpression()), !dbg !7654
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4476, metadata !DIExpression()), !dbg !7655
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4478, metadata !DIExpression()), !dbg !7656
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4484, metadata !DIExpression()), !dbg !7658
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4490, metadata !DIExpression()), !dbg !7660
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4499, metadata !DIExpression()), !dbg !7663
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4501, metadata !DIExpression()), !dbg !7664
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4503, metadata !DIExpression()), !dbg !7665
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4505, metadata !DIExpression()), !dbg !7666
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4507, metadata !DIExpression()), !dbg !7667
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4509, metadata !DIExpression()), !dbg !7668
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4511, metadata !DIExpression()), !dbg !7669
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4513, metadata !DIExpression()), !dbg !7670
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7671, metadata !DIExpression()), !dbg !7676
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %param.addr = alloca %struct.usbtest_param_32*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %urb = alloca %struct.urb**, align 8
  %context = alloca %struct.ctrl_ctx, align 8
  %i = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %pipe = alloca i32, align 4
  %len = alloca i32, align 4
  %u = alloca %struct.urb*, align 8
  %req = alloca %struct.usb_ctrlrequest, align 1
  %reqp = alloca %struct.subcase*, align 8
  %expected = alloca i32, align 4
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !7679, metadata !DIExpression()), !dbg !7680
  store %struct.usbtest_param_32* %param, %struct.usbtest_param_32** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_param_32** %param.addr, metadata !7681, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !7683, metadata !DIExpression()), !dbg !7684
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7685
  %call = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %0) #11, !dbg !7686
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !7684
  call void @llvm.dbg.declare(metadata %struct.urb*** %urb, metadata !7687, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.declare(metadata %struct.ctrl_ctx* %context, metadata !7689, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7702, metadata !DIExpression()), !dbg !7703
  %1 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !7704
  %sglen = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %1, i32 0, i32 4, !dbg !7706
  %2 = load i32, i32* %sglen, align 4, !dbg !7706
  %cmp = icmp eq i32 %2, 0, !dbg !7707
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7708

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !7709
  %iterations = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %3, i32 0, i32 1, !dbg !7710
  %4 = load i32, i32* %iterations, align 4, !dbg !7710
  %5 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !7711
  %sglen1 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %5, i32 0, i32 4, !dbg !7712
  %6 = load i32, i32* %sglen1, align 4, !dbg !7712
  %div = udiv i32 -1, %6, !dbg !7713
  %cmp2 = icmp ugt i32 %4, %div, !dbg !7714
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7715

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -95, i32* %retval, align 4, !dbg !7716
  br label %return, !dbg !7716

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !7717

do.body:                                          ; preds = %if.end
  %lock = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 0, !dbg !7718
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7719
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !7720
  %rlock.i = bitcast %union.anon.4* %8 to %struct.raw_spinlock*, !dbg !7720
  %lock4 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 0, !dbg !7718
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !7718
  %rlock = bitcast %union.anon.4* %9 to %struct.raw_spinlock*, !dbg !7718
  %10 = bitcast %struct.spinlock* %lock4 to i8*, !dbg !7718
  %11 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !7718
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 1 %11, i64 0, i1 false), !dbg !7718
  br label %do.end, !dbg !7718

do.end:                                           ; preds = %do.body
  %12 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7721
  %dev5 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 1, !dbg !7722
  store %struct.usbtest_dev* %12, %struct.usbtest_dev** %dev5, align 8, !dbg !7723
  %complete = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 2, !dbg !7724
  call void @__init_completion(%struct.completion* %complete) #11, !dbg !7724
  %13 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !7725
  %sglen6 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %13, i32 0, i32 4, !dbg !7726
  %14 = load i32, i32* %sglen6, align 4, !dbg !7726
  %15 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !7727
  %iterations7 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %15, i32 0, i32 1, !dbg !7728
  %16 = load i32, i32* %iterations7, align 4, !dbg !7728
  %mul = mul i32 %14, %16, !dbg !7729
  %count = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 3, !dbg !7730
  store i32 %mul, i32* %count, align 8, !dbg !7731
  %pending = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 4, !dbg !7732
  store i32 0, i32* %pending, align 4, !dbg !7733
  %status = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 5, !dbg !7734
  store i32 -12, i32* %status, align 8, !dbg !7735
  %17 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !7736
  %param8 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 7, !dbg !7737
  store %struct.usbtest_param_32* %17, %struct.usbtest_param_32** %param8, align 8, !dbg !7738
  %last = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 8, !dbg !7739
  store i32 -1, i32* %last, align 8, !dbg !7740
  %18 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !7741
  %sglen9 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %18, i32 0, i32 4, !dbg !7742
  %19 = load i32, i32* %sglen9, align 4, !dbg !7742
  %conv = zext i32 %19 to i64, !dbg !7741
  %call10 = call i8* @kcalloc(i64 %conv, i64 8, i32 3264) #11, !dbg !7743
  %20 = bitcast i8* %call10 to %struct.urb**, !dbg !7743
  store %struct.urb** %20, %struct.urb*** %urb, align 8, !dbg !7744
  %21 = load %struct.urb**, %struct.urb*** %urb, align 8, !dbg !7745
  %tobool = icmp ne %struct.urb** %21, null, !dbg !7745
  br i1 %tobool, label %if.end12, label %if.then11, !dbg !7747

if.then11:                                        ; preds = %do.end
  store i32 -12, i32* %retval, align 4, !dbg !7748
  br label %return, !dbg !7748

if.end12:                                         ; preds = %do.end
  store i32 0, i32* %i, align 4, !dbg !7749
  br label %for.cond, !dbg !7750

for.cond:                                         ; preds = %for.inc, %if.end12
  %22 = load i32, i32* %i, align 4, !dbg !7751
  %23 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !7752
  %sglen13 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %23, i32 0, i32 4, !dbg !7753
  %24 = load i32, i32* %sglen13, align 4, !dbg !7753
  %cmp14 = icmp ult i32 %22, %24, !dbg !7754
  br i1 %cmp14, label %for.body, label %for.end, !dbg !7755

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %pipe, metadata !7756, metadata !DIExpression()), !dbg !7757
  %25 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7758
  %call16 = call i32 @__create_pipe(%struct.usb_device* %25, i32 0) #11, !dbg !7758
  %or = or i32 -2147483648, %call16, !dbg !7758
  %or17 = or i32 %or, 128, !dbg !7758
  store i32 %or17, i32* %pipe, align 4, !dbg !7757
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7759, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.declare(metadata %struct.urb** %u, metadata !7761, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.declare(metadata %struct.usb_ctrlrequest* %req, metadata !7763, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.declare(metadata %struct.subcase** %reqp, metadata !7765, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.declare(metadata i32* %expected, metadata !7767, metadata !DIExpression()), !dbg !7768
  store i32 0, i32* %expected, align 4, !dbg !7768
  %26 = bitcast %struct.usb_ctrlrequest* %req to i8*, !dbg !7769
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 8, i1 false), !dbg !7769
  %bRequest = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 1, !dbg !7770
  store i8 6, i8* %bRequest, align 1, !dbg !7771
  %bRequestType = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 0, !dbg !7772
  store i8 -128, i8* %bRequestType, align 1, !dbg !7773
  %27 = load i32, i32* %i, align 4, !dbg !7774
  %rem = srem i32 %27, 16, !dbg !7775
  switch i32 %rem, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb18
    i32 2, label %sw.bb20
    i32 3, label %sw.bb23
    i32 4, label %sw.bb26
    i32 5, label %sw.bb29
    i32 6, label %sw.bb35
    i32 7, label %sw.bb39
    i32 8, label %sw.bb41
    i32 9, label %sw.bb46
    i32 10, label %sw.bb49
    i32 11, label %sw.bb51
    i32 12, label %sw.bb53
    i32 13, label %sw.bb55
    i32 14, label %sw.bb63
    i32 15, label %sw.bb75
  ], !dbg !7776

sw.bb:                                            ; preds = %for.body
  %wValue = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7777
  store i16 256, i16* %wValue, align 1, !dbg !7779
  store i32 18, i32* %len, align 4, !dbg !7780
  br label %sw.epilog91, !dbg !7781

sw.bb18:                                          ; preds = %for.body
  %wValue19 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7782
  store i16 512, i16* %wValue19, align 1, !dbg !7783
  store i32 9, i32* %len, align 4, !dbg !7784
  br label %sw.epilog91, !dbg !7785

sw.bb20:                                          ; preds = %for.body
  %bRequest21 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 1, !dbg !7786
  store i8 10, i8* %bRequest21, align 1, !dbg !7787
  %bRequestType22 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 0, !dbg !7788
  store i8 -127, i8* %bRequestType22, align 1, !dbg !7789
  store i32 1, i32* %len, align 4, !dbg !7790
  store i32 32, i32* %expected, align 4, !dbg !7791
  br label %sw.epilog91, !dbg !7792

sw.bb23:                                          ; preds = %for.body
  %bRequest24 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 1, !dbg !7793
  store i8 0, i8* %bRequest24, align 1, !dbg !7794
  %bRequestType25 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 0, !dbg !7795
  store i8 -127, i8* %bRequestType25, align 1, !dbg !7796
  store i32 2, i32* %len, align 4, !dbg !7797
  br label %sw.epilog91, !dbg !7798

sw.bb26:                                          ; preds = %for.body
  %bRequest27 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 1, !dbg !7799
  store i8 0, i8* %bRequest27, align 1, !dbg !7800
  %bRequestType28 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 0, !dbg !7801
  store i8 -128, i8* %bRequestType28, align 1, !dbg !7802
  store i32 2, i32* %len, align 4, !dbg !7803
  br label %sw.epilog91, !dbg !7804

sw.bb29:                                          ; preds = %for.body
  %wValue30 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7805
  store i16 1536, i16* %wValue30, align 1, !dbg !7806
  store i32 10, i32* %len, align 4, !dbg !7807
  %28 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7808
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %28, i32 0, i32 4, !dbg !7810
  %29 = load i32, i32* %speed, align 4, !dbg !7810
  %cmp31 = icmp ne i32 %29, 3, !dbg !7811
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7812

if.then33:                                        ; preds = %sw.bb29
  store i32 32, i32* %expected, align 4, !dbg !7813
  br label %if.end34, !dbg !7814

if.end34:                                         ; preds = %if.then33, %sw.bb29
  br label %sw.epilog91, !dbg !7815

sw.bb35:                                          ; preds = %for.body
  %wValue36 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7816
  store i16 512, i16* %wValue36, align 1, !dbg !7817
  store i32 9, i32* %len, align 4, !dbg !7818
  %30 = load i32, i32* %len, align 4, !dbg !7819
  %conv37 = zext i32 %30 to i64, !dbg !7819
  %add = add i64 %conv37, 9, !dbg !7819
  %conv38 = trunc i64 %add to i32, !dbg !7819
  store i32 %conv38, i32* %len, align 4, !dbg !7819
  br label %sw.epilog91, !dbg !7820

sw.bb39:                                          ; preds = %for.body
  %wValue40 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7821
  store i16 1024, i16* %wValue40, align 1, !dbg !7822
  store i32 9, i32* %len, align 4, !dbg !7823
  store i32 -32, i32* %expected, align 4, !dbg !7824
  br label %sw.epilog91, !dbg !7825

sw.bb41:                                          ; preds = %for.body
  %bRequest42 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 1, !dbg !7826
  store i8 1, i8* %bRequest42, align 1, !dbg !7827
  %bRequestType43 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 0, !dbg !7828
  store i8 2, i8* %bRequestType43, align 1, !dbg !7829
  store i32 0, i32* %len, align 4, !dbg !7830
  %31 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7831
  %call44 = call i32 @__create_pipe(%struct.usb_device* %31, i32 0) #11, !dbg !7831
  %or45 = or i32 -2147483648, %call44, !dbg !7831
  store i32 %or45, i32* %pipe, align 4, !dbg !7832
  store i32 32, i32* %expected, align 4, !dbg !7833
  br label %sw.epilog91, !dbg !7834

sw.bb46:                                          ; preds = %for.body
  %bRequest47 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 1, !dbg !7835
  store i8 0, i8* %bRequest47, align 1, !dbg !7836
  %bRequestType48 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 0, !dbg !7837
  store i8 -126, i8* %bRequestType48, align 1, !dbg !7838
  store i32 2, i32* %len, align 4, !dbg !7839
  br label %sw.epilog91, !dbg !7840

sw.bb49:                                          ; preds = %for.body
  %wValue50 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7841
  store i16 512, i16* %wValue50, align 1, !dbg !7842
  store i32 1024, i32* %len, align 4, !dbg !7843
  store i32 -121, i32* %expected, align 4, !dbg !7844
  br label %sw.epilog91, !dbg !7845

sw.bb51:                                          ; preds = %for.body
  %wValue52 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7846
  store i16 1280, i16* %wValue52, align 1, !dbg !7847
  store i32 9, i32* %len, align 4, !dbg !7848
  store i32 32, i32* %expected, align 4, !dbg !7849
  br label %sw.epilog91, !dbg !7850

sw.bb53:                                          ; preds = %for.body
  %wValue54 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7851
  store i16 768, i16* %wValue54, align 1, !dbg !7852
  store i32 9, i32* %len, align 4, !dbg !7853
  store i32 121, i32* %expected, align 4, !dbg !7854
  br label %sw.epilog91, !dbg !7855

sw.bb55:                                          ; preds = %for.body
  %wValue56 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7856
  store i16 512, i16* %wValue56, align 1, !dbg !7857
  %32 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7858
  %speed57 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %32, i32 0, i32 4, !dbg !7860
  %33 = load i32, i32* %speed57, align 4, !dbg !7860
  %cmp58 = icmp eq i32 %33, 5, !dbg !7861
  br i1 %cmp58, label %if.then60, label %if.else, !dbg !7862

if.then60:                                        ; preds = %sw.bb55
  store i32 512, i32* %len, align 4, !dbg !7863
  br label %if.end62, !dbg !7864

if.else:                                          ; preds = %sw.bb55
  %34 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7865
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %34, i32 0, i32 15, !dbg !7866
  %bMaxPacketSize0 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 6, !dbg !7867
  %35 = load i8, i8* %bMaxPacketSize0, align 1, !dbg !7867
  %conv61 = zext i8 %35 to i32, !dbg !7865
  %sub = sub i32 1024, %conv61, !dbg !7868
  store i32 %sub, i32* %len, align 4, !dbg !7869
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then60
  store i32 -121, i32* %expected, align 4, !dbg !7870
  br label %sw.epilog91, !dbg !7871

sw.bb63:                                          ; preds = %for.body
  %wValue64 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7872
  store i16 256, i16* %wValue64, align 1, !dbg !7873
  %36 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7874
  %descriptor65 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %36, i32 0, i32 15, !dbg !7875
  %bMaxPacketSize066 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor65, i32 0, i32 6, !dbg !7876
  %37 = load i8, i8* %bMaxPacketSize066, align 1, !dbg !7876
  %conv67 = zext i8 %37 to i32, !dbg !7874
  store i32 %conv67, i32* %len, align 4, !dbg !7877
  %38 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7878
  %speed68 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %38, i32 0, i32 4, !dbg !7880
  %39 = load i32, i32* %speed68, align 4, !dbg !7880
  %cmp69 = icmp eq i32 %39, 5, !dbg !7881
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !7882

if.then71:                                        ; preds = %sw.bb63
  store i32 512, i32* %len, align 4, !dbg !7883
  br label %if.end72, !dbg !7884

if.end72:                                         ; preds = %if.then71, %sw.bb63
  %40 = load i32, i32* %len, align 4, !dbg !7885
  switch i32 %40, label %sw.epilog [
    i32 8, label %sw.bb73
    i32 16, label %sw.bb74
  ], !dbg !7886

sw.bb73:                                          ; preds = %if.end72
  store i32 24, i32* %len, align 4, !dbg !7887
  br label %sw.epilog, !dbg !7889

sw.bb74:                                          ; preds = %if.end72
  store i32 32, i32* %len, align 4, !dbg !7890
  br label %sw.epilog, !dbg !7891

sw.epilog:                                        ; preds = %if.end72, %sw.bb74, %sw.bb73
  store i32 -121, i32* %expected, align 4, !dbg !7892
  br label %sw.epilog91, !dbg !7893

sw.bb75:                                          ; preds = %for.body
  %wValue76 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 2, !dbg !7894
  store i16 3840, i16* %wValue76, align 1, !dbg !7895
  %41 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7896
  %bos = getelementptr inbounds %struct.usb_device, %struct.usb_device* %41, i32 0, i32 17, !dbg !7898
  %42 = load %struct.usb_host_bos*, %struct.usb_host_bos** %bos, align 8, !dbg !7898
  %tobool77 = icmp ne %struct.usb_host_bos* %42, null, !dbg !7896
  br i1 %tobool77, label %if.then78, label %if.else81, !dbg !7899

if.then78:                                        ; preds = %sw.bb75
  %43 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7900
  %bos79 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %43, i32 0, i32 17, !dbg !7900
  %44 = load %struct.usb_host_bos*, %struct.usb_host_bos** %bos79, align 8, !dbg !7900
  %desc = getelementptr inbounds %struct.usb_host_bos, %struct.usb_host_bos* %44, i32 0, i32 0, !dbg !7900
  %45 = load %struct.usb_bos_descriptor*, %struct.usb_bos_descriptor** %desc, align 8, !dbg !7900
  %wTotalLength = getelementptr inbounds %struct.usb_bos_descriptor, %struct.usb_bos_descriptor* %45, i32 0, i32 2, !dbg !7900
  %46 = load i16, i16* %wTotalLength, align 1, !dbg !7900
  %conv80 = zext i16 %46 to i32, !dbg !7900
  store i32 %conv80, i32* %len, align 4, !dbg !7901
  br label %if.end82, !dbg !7902

if.else81:                                        ; preds = %sw.bb75
  store i32 5, i32* %len, align 4, !dbg !7903
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.then78
  %47 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7904
  %descriptor83 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %47, i32 0, i32 15, !dbg !7904
  %bcdUSB = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor83, i32 0, i32 2, !dbg !7904
  %48 = load i16, i16* %bcdUSB, align 2, !dbg !7904
  %conv84 = zext i16 %48 to i32, !dbg !7904
  %cmp85 = icmp slt i32 %conv84, 513, !dbg !7906
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !7907

if.then87:                                        ; preds = %if.end82
  store i32 -32, i32* %expected, align 4, !dbg !7908
  br label %if.end88, !dbg !7909

if.end88:                                         ; preds = %if.then87, %if.end82
  br label %sw.epilog91, !dbg !7910

sw.default:                                       ; preds = %for.body
  %49 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !7911
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %49, i32 0, i32 0, !dbg !7911
  %50 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !7911
  %dev89 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %50, i32 0, i32 7, !dbg !7911
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev89, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.98, i64 0, i64 0)) #12, !dbg !7911
  %status90 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 5, !dbg !7912
  store i32 -22, i32* %status90, align 8, !dbg !7913
  br label %cleanup, !dbg !7914

sw.epilog91:                                      ; preds = %if.end88, %sw.epilog, %if.end62, %sw.bb53, %sw.bb51, %sw.bb49, %sw.bb46, %sw.bb41, %sw.bb39, %sw.bb35, %if.end34, %sw.bb26, %sw.bb23, %sw.bb20, %sw.bb18, %sw.bb
  %51 = load i32, i32* %len, align 4, !dbg !7915
  %conv92 = trunc i32 %51 to i16, !dbg !7915
  %wLength = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %req, i32 0, i32 4, !dbg !7916
  store i16 %conv92, i16* %wLength, align 1, !dbg !7917
  %52 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !7918
  %53 = load i32, i32* %pipe, align 4, !dbg !7919
  %54 = load i32, i32* %len, align 4, !dbg !7920
  %conv93 = zext i32 %54 to i64, !dbg !7920
  %call94 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %52, i32 %53, i64 %conv93, i8 zeroext 0) #11, !dbg !7921
  store %struct.urb* %call94, %struct.urb** %u, align 8, !dbg !7922
  %55 = load %struct.urb**, %struct.urb*** %urb, align 8, !dbg !7923
  %56 = load i32, i32* %i, align 4, !dbg !7924
  %idxprom = sext i32 %56 to i64, !dbg !7923
  %arrayidx = getelementptr %struct.urb*, %struct.urb** %55, i64 %idxprom, !dbg !7923
  store %struct.urb* %call94, %struct.urb** %arrayidx, align 8, !dbg !7925
  %57 = load %struct.urb*, %struct.urb** %u, align 8, !dbg !7926
  %tobool95 = icmp ne %struct.urb* %57, null, !dbg !7926
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !7928

if.then96:                                        ; preds = %sw.epilog91
  br label %cleanup, !dbg !7929

if.end97:                                         ; preds = %sw.epilog91
  store i64 16, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %58 = load i64, i64* %size.addr.i, align 8, !dbg !7930
  %59 = call i1 @llvm.is.constant.i64(i64 %58) #10, !dbg !7931
  br i1 %59, label %if.then.i, label %if.end9.i, !dbg !7932

if.then.i:                                        ; preds = %if.end97
  %60 = load i64, i64* %size.addr.i, align 8, !dbg !7933
  %cmp.i = icmp ugt i64 %60, 8192, !dbg !7934
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7935

if.then1.i:                                       ; preds = %if.then.i
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !7936
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !7937
  store i64 %61, i64* %size.addr.i.i, align 8
  store i32 %62, i32* %flags.addr.i.i, align 4
  %63 = load i64, i64* %size.addr.i.i, align 8, !dbg !7938
  %call.i.i = call i32 @get_order(i64 %63) #13, !dbg !7939
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7667
  %64 = load i64, i64* %size.addr.i.i, align 8, !dbg !7940
  %65 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7941
  %66 = load i32, i32* %order.i.i, align 4, !dbg !7942
  store i64 %64, i64* %size.addr.i.i.i, align 8
  store i32 %65, i32* %flags.addr.i.i.i, align 4
  store i32 %66, i32* %order.addr.i.i.i, align 4
  %67 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7943
  %68 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7944
  %69 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7945
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %67, i32 %68, i32 %69) #14, !dbg !7946
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7946
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7946
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7946
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !7946
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7947
  br label %kmalloc.exit, !dbg !7947

if.end.i:                                         ; preds = %if.then.i
  %70 = load i64, i64* %size.addr.i, align 8, !dbg !7948
  store i64 %70, i64* %size.addr.i11.i, align 8
  %71 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7949
  %tobool.i.i = icmp ne i64 %71, 0, !dbg !7949
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7950

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7951
  br label %kmalloc_index.exit.i, !dbg !7951

if.end.i.i:                                       ; preds = %if.end.i
  %72 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7952
  %cmp.i.i = icmp ule i64 %72, 8, !dbg !7953
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7954

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7955
  br label %kmalloc_index.exit.i, !dbg !7955

if.end2.i.i:                                      ; preds = %if.end.i.i
  %73 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7956
  %cmp3.i.i = icmp ugt i64 %73, 64, !dbg !7957
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7958

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %74 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7959
  %cmp4.i.i = icmp ule i64 %74, 96, !dbg !7960
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7961

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7962
  br label %kmalloc_index.exit.i, !dbg !7962

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %75 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7963
  %cmp7.i.i = icmp ugt i64 %75, 128, !dbg !7964
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7965

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %76 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7966
  %cmp9.i.i = icmp ule i64 %76, 192, !dbg !7967
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7968

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7969
  br label %kmalloc_index.exit.i, !dbg !7969

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %77 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7970
  %cmp12.i.i = icmp ule i64 %77, 8, !dbg !7971
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7972

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7973
  br label %kmalloc_index.exit.i, !dbg !7973

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %78 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7974
  %cmp15.i.i = icmp ule i64 %78, 16, !dbg !7975
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7976

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7977
  br label %kmalloc_index.exit.i, !dbg !7977

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %79 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7978
  %cmp18.i.i = icmp ule i64 %79, 32, !dbg !7979
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7980

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7981
  br label %kmalloc_index.exit.i, !dbg !7981

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %80 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7982
  %cmp21.i.i = icmp ule i64 %80, 64, !dbg !7983
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7984

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7985
  br label %kmalloc_index.exit.i, !dbg !7985

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %81 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7986
  %cmp24.i.i = icmp ule i64 %81, 128, !dbg !7987
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7988

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7989
  br label %kmalloc_index.exit.i, !dbg !7989

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %82 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7990
  %cmp27.i.i = icmp ule i64 %82, 256, !dbg !7991
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7992

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7993
  br label %kmalloc_index.exit.i, !dbg !7993

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %83 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7994
  %cmp30.i.i = icmp ule i64 %83, 512, !dbg !7995
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7996

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7997
  br label %kmalloc_index.exit.i, !dbg !7997

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %84 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7998
  %cmp33.i.i = icmp ule i64 %84, 1024, !dbg !7999
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8000

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8001
  br label %kmalloc_index.exit.i, !dbg !8001

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %85 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8002
  %cmp36.i.i = icmp ule i64 %85, 2048, !dbg !8003
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8004

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8005
  br label %kmalloc_index.exit.i, !dbg !8005

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %86 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8006
  %cmp39.i.i = icmp ule i64 %86, 4096, !dbg !8007
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8008

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8009
  br label %kmalloc_index.exit.i, !dbg !8009

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %87 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8010
  %cmp42.i.i = icmp ule i64 %87, 8192, !dbg !8011
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8012

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8013
  br label %kmalloc_index.exit.i, !dbg !8013

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %88 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8014
  %cmp45.i.i = icmp ule i64 %88, 16384, !dbg !8015
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8016

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8017
  br label %kmalloc_index.exit.i, !dbg !8017

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %89 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8018
  %cmp48.i.i = icmp ule i64 %89, 32768, !dbg !8019
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8020

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8021
  br label %kmalloc_index.exit.i, !dbg !8021

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %90 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8022
  %cmp51.i.i = icmp ule i64 %90, 65536, !dbg !8023
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8024

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8025
  br label %kmalloc_index.exit.i, !dbg !8025

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %91 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8026
  %cmp54.i.i = icmp ule i64 %91, 131072, !dbg !8027
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8028

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8029
  br label %kmalloc_index.exit.i, !dbg !8029

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %92 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8030
  %cmp57.i.i = icmp ule i64 %92, 262144, !dbg !8031
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8032

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8033
  br label %kmalloc_index.exit.i, !dbg !8033

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %93 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8034
  %cmp60.i.i = icmp ule i64 %93, 524288, !dbg !8035
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8036

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8037
  br label %kmalloc_index.exit.i, !dbg !8037

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %94 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8038
  %cmp63.i.i = icmp ule i64 %94, 1048576, !dbg !8039
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8040

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8041
  br label %kmalloc_index.exit.i, !dbg !8041

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %95 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8042
  %cmp66.i.i = icmp ule i64 %95, 2097152, !dbg !8043
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8044

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8045
  br label %kmalloc_index.exit.i, !dbg !8045

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %96 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8046
  %cmp69.i.i = icmp ule i64 %96, 4194304, !dbg !8047
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8048

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8049
  br label %kmalloc_index.exit.i, !dbg !8049

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %97 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8050
  %cmp72.i.i = icmp ule i64 %97, 8388608, !dbg !8051
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8052

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8053
  br label %kmalloc_index.exit.i, !dbg !8053

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %98 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8054
  %cmp75.i.i = icmp ule i64 %98, 16777216, !dbg !8055
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8056

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8057
  br label %kmalloc_index.exit.i, !dbg !8057

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %99 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8058
  %cmp78.i.i = icmp ule i64 %99, 33554432, !dbg !8059
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8060

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8061
  br label %kmalloc_index.exit.i, !dbg !8061

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %100 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8062
  %cmp81.i.i = icmp ule i64 %100, 67108864, !dbg !8063
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8064

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8065
  br label %kmalloc_index.exit.i, !dbg !8065

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !8066, !srcloc !4773
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !8067, !srcloc !4777
  unreachable, !dbg !8068

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %101 = load i32, i32* %retval.i.i, align 4, !dbg !8069
  store i32 %101, i32* %index.i, align 4, !dbg !8070
  %102 = load i32, i32* %index.i, align 4, !dbg !8071
  %tobool.i = icmp ne i32 %102, 0, !dbg !8071
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8072

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8073
  br label %kmalloc.exit, !dbg !8073

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %103 = load i32, i32* %flags.addr.i, align 4, !dbg !8074
  store i32 %103, i32* %flags.addr.i13.i, align 4
  %104 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8075
  %and.i.i = and i32 %104, 17, !dbg !8075
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8075
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8075
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8075
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8075
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8076

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8077
  br label %kmalloc_type.exit.i, !dbg !8077

if.end.i16.i:                                     ; preds = %if.end4.i
  %105 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8078
  %and2.i.i = and i32 %105, 1, !dbg !8079
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8078
  %106 = zext i1 %tobool3.i.i to i64, !dbg !8078
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8078
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8080
  br label %kmalloc_type.exit.i, !dbg !8080

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %107 = load i32, i32* %retval.i12.i, align 4, !dbg !8081
  %idxprom.i = zext i32 %107 to i64, !dbg !8082
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8082
  %108 = load i32, i32* %index.i, align 4, !dbg !8083
  %idxprom6.i = zext i32 %108 to i64, !dbg !8082
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8082
  %109 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8082
  %110 = load i32, i32* %flags.addr.i, align 4, !dbg !8084
  %111 = load i64, i64* %size.addr.i, align 8, !dbg !8085
  store %struct.kmem_cache* %109, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %110, i32* %flags.addr.i17.i, align 4
  store i64 %111, i64* %size.addr.i18.i, align 8
  %112 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8086
  %113 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8087
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %112, i32 %113) #14, !dbg !8088
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8088
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8088
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8088
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !8088
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7655
  %114 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8089
  %115 = load i8*, i8** %ret.i.i, align 8, !dbg !8090
  %116 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8091
  %117 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8092
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %114, i8* %115, i64 %116, i32 %117) #14, !dbg !8093
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8094
  %118 = load i8*, i8** %ret.i.i, align 8, !dbg !8095
  store i8* %118, i8** %retval.i, align 8, !dbg !8096
  br label %kmalloc.exit, !dbg !8096

if.end9.i:                                        ; preds = %if.end97
  %119 = load i64, i64* %size.addr.i, align 8, !dbg !8097
  %120 = load i32, i32* %flags.addr.i, align 4, !dbg !8098
  %call10.i = call noalias i8* @__kmalloc(i64 %119, i32 %120) #14, !dbg !8099
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8099
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8099
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8099
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !8099
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8100
  br label %kmalloc.exit, !dbg !8100

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %121 = load i8*, i8** %retval.i, align 8, !dbg !8101
  %122 = bitcast i8* %121 to %struct.subcase*, !dbg !8102
  store %struct.subcase* %122, %struct.subcase** %reqp, align 8, !dbg !8103
  %123 = load %struct.subcase*, %struct.subcase** %reqp, align 8, !dbg !8104
  %tobool99 = icmp ne %struct.subcase* %123, null, !dbg !8104
  br i1 %tobool99, label %if.end101, label %if.then100, !dbg !8106

if.then100:                                       ; preds = %kmalloc.exit
  br label %cleanup, !dbg !8107

if.end101:                                        ; preds = %kmalloc.exit
  %124 = load %struct.subcase*, %struct.subcase** %reqp, align 8, !dbg !8108
  %setup = getelementptr inbounds %struct.subcase, %struct.subcase* %124, i32 0, i32 0, !dbg !8109
  %125 = bitcast %struct.usb_ctrlrequest* %setup to i8*, !dbg !8110
  %126 = bitcast %struct.usb_ctrlrequest* %req to i8*, !dbg !8110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* align 1 %126, i64 8, i1 false), !dbg !8110
  %127 = load i32, i32* %i, align 4, !dbg !8111
  %rem102 = srem i32 %127, 16, !dbg !8112
  %128 = load %struct.subcase*, %struct.subcase** %reqp, align 8, !dbg !8113
  %number = getelementptr inbounds %struct.subcase, %struct.subcase* %128, i32 0, i32 1, !dbg !8114
  store i32 %rem102, i32* %number, align 4, !dbg !8115
  %129 = load i32, i32* %expected, align 4, !dbg !8116
  %130 = load %struct.subcase*, %struct.subcase** %reqp, align 8, !dbg !8117
  %expected103 = getelementptr inbounds %struct.subcase, %struct.subcase* %130, i32 0, i32 2, !dbg !8118
  store i32 %129, i32* %expected103, align 4, !dbg !8119
  %131 = load %struct.subcase*, %struct.subcase** %reqp, align 8, !dbg !8120
  %setup104 = getelementptr inbounds %struct.subcase, %struct.subcase* %131, i32 0, i32 0, !dbg !8121
  %132 = bitcast %struct.usb_ctrlrequest* %setup104 to i8*, !dbg !8122
  %133 = load %struct.urb*, %struct.urb** %u, align 8, !dbg !8123
  %setup_packet = getelementptr inbounds %struct.urb, %struct.urb* %133, i32 0, i32 21, !dbg !8124
  store i8* %132, i8** %setup_packet, align 8, !dbg !8125
  %134 = bitcast %struct.ctrl_ctx* %context to i8*, !dbg !8126
  %135 = load %struct.urb*, %struct.urb** %u, align 8, !dbg !8127
  %context105 = getelementptr inbounds %struct.urb, %struct.urb* %135, i32 0, i32 27, !dbg !8128
  store i8* %134, i8** %context105, align 8, !dbg !8129
  %136 = load %struct.urb*, %struct.urb** %u, align 8, !dbg !8130
  %complete106 = getelementptr inbounds %struct.urb, %struct.urb* %136, i32 0, i32 28, !dbg !8131
  store void (%struct.urb*)* @ctrl_complete, void (%struct.urb*)** %complete106, align 8, !dbg !8132
  br label %for.inc, !dbg !8133

for.inc:                                          ; preds = %if.end101
  %137 = load i32, i32* %i, align 4, !dbg !8134
  %inc = add i32 %137, 1, !dbg !8134
  store i32 %inc, i32* %i, align 4, !dbg !8134
  br label %for.cond, !dbg !8135, !llvm.loop !8136

for.end:                                          ; preds = %for.cond
  %138 = load %struct.urb**, %struct.urb*** %urb, align 8, !dbg !8138
  %urb107 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 6, !dbg !8139
  store %struct.urb** %138, %struct.urb*** %urb107, align 8, !dbg !8140
  %lock108 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 0, !dbg !8141
  store %struct.spinlock* %lock108, %struct.spinlock** %lock.addr.i162, align 8
  call void @arch_local_irq_disable() #14, !dbg !8142
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8145, !srcloc !8147
  %139 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i162, align 8, !dbg !8148
  %140 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %139, i32 0, i32 0, !dbg !8148
  %rlock.i163 = bitcast %union.anon.4* %140 to %struct.raw_spinlock*, !dbg !8148
  store i32 0, i32* %i, align 4, !dbg !8150
  br label %for.cond109, !dbg !8152

for.cond109:                                      ; preds = %for.inc130, %for.end
  %141 = load i32, i32* %i, align 4, !dbg !8153
  %142 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8155
  %sglen110 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %142, i32 0, i32 4, !dbg !8156
  %143 = load i32, i32* %sglen110, align 4, !dbg !8156
  %cmp111 = icmp ult i32 %141, %143, !dbg !8157
  br i1 %cmp111, label %for.body113, label %for.end132, !dbg !8158

for.body113:                                      ; preds = %for.cond109
  %144 = load %struct.urb**, %struct.urb*** %urb, align 8, !dbg !8159
  %145 = load i32, i32* %i, align 4, !dbg !8161
  %idxprom114 = sext i32 %145 to i64, !dbg !8159
  %arrayidx115 = getelementptr %struct.urb*, %struct.urb** %144, i64 %idxprom114, !dbg !8159
  %146 = load %struct.urb*, %struct.urb** %arrayidx115, align 8, !dbg !8159
  %call116 = call i32 @usb_submit_urb(%struct.urb* %146, i32 2592) #11, !dbg !8162
  %status117 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 5, !dbg !8163
  store i32 %call116, i32* %status117, align 8, !dbg !8164
  %status118 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 5, !dbg !8165
  %147 = load i32, i32* %status118, align 8, !dbg !8165
  %cmp119 = icmp ne i32 %147, 0, !dbg !8167
  br i1 %cmp119, label %if.then121, label %if.end127, !dbg !8168

if.then121:                                       ; preds = %for.body113
  %148 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8169
  %intf122 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %148, i32 0, i32 0, !dbg !8169
  %149 = load %struct.usb_interface*, %struct.usb_interface** %intf122, align 8, !dbg !8169
  %dev123 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %149, i32 0, i32 7, !dbg !8169
  %150 = load i32, i32* %i, align 4, !dbg !8169
  %status124 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 5, !dbg !8169
  %151 = load i32, i32* %status124, align 8, !dbg !8169
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev123, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.99, i64 0, i64 0), i32 %150, i32 %151) #12, !dbg !8169
  %pending125 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 4, !dbg !8171
  %152 = load i32, i32* %pending125, align 4, !dbg !8171
  %count126 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 3, !dbg !8172
  store i32 %152, i32* %count126, align 8, !dbg !8173
  br label %for.end132, !dbg !8174

if.end127:                                        ; preds = %for.body113
  %pending128 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 4, !dbg !8175
  %153 = load i32, i32* %pending128, align 4, !dbg !8176
  %inc129 = add i32 %153, 1, !dbg !8176
  store i32 %inc129, i32* %pending128, align 4, !dbg !8176
  br label %for.inc130, !dbg !8177

for.inc130:                                       ; preds = %if.end127
  %154 = load i32, i32* %i, align 4, !dbg !8178
  %inc131 = add i32 %154, 1, !dbg !8178
  store i32 %inc131, i32* %i, align 4, !dbg !8178
  br label %for.cond109, !dbg !8179, !llvm.loop !8180

for.end132:                                       ; preds = %if.then121, %for.cond109
  %lock133 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 0, !dbg !8182
  store %struct.spinlock* %lock133, %struct.spinlock** %lock.addr.i164, align 8
  call void @arch_local_irq_enable() #14, !dbg !8183
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8186, !srcloc !8188
  %155 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i164, align 8, !dbg !8189
  %156 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %155, i32 0, i32 0, !dbg !8189
  %rlock.i165 = bitcast %union.anon.4* %156 to %struct.raw_spinlock*, !dbg !8189
  %pending134 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 4, !dbg !8191
  %157 = load i32, i32* %pending134, align 4, !dbg !8191
  %cmp135 = icmp ugt i32 %157, 0, !dbg !8193
  br i1 %cmp135, label %if.then137, label %if.end139, !dbg !8194

if.then137:                                       ; preds = %for.end132
  %complete138 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 2, !dbg !8195
  call void @wait_for_completion(%struct.completion* %complete138) #11, !dbg !8196
  br label %if.end139, !dbg !8196

if.end139:                                        ; preds = %if.then137, %for.end132
  br label %cleanup, !dbg !8197

cleanup:                                          ; preds = %if.end139, %if.then100, %if.then96, %sw.default
  call void @llvm.dbg.label(metadata !8198), !dbg !8199
  store i32 0, i32* %i, align 4, !dbg !8200
  br label %for.cond140, !dbg !8202

for.cond140:                                      ; preds = %for.inc158, %cleanup
  %158 = load i32, i32* %i, align 4, !dbg !8203
  %159 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8205
  %sglen141 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %159, i32 0, i32 4, !dbg !8206
  %160 = load i32, i32* %sglen141, align 4, !dbg !8206
  %cmp142 = icmp ult i32 %158, %160, !dbg !8207
  br i1 %cmp142, label %for.body144, label %for.end160, !dbg !8208

for.body144:                                      ; preds = %for.cond140
  %161 = load %struct.urb**, %struct.urb*** %urb, align 8, !dbg !8209
  %162 = load i32, i32* %i, align 4, !dbg !8212
  %idxprom145 = sext i32 %162 to i64, !dbg !8209
  %arrayidx146 = getelementptr %struct.urb*, %struct.urb** %161, i64 %idxprom145, !dbg !8209
  %163 = load %struct.urb*, %struct.urb** %arrayidx146, align 8, !dbg !8209
  %tobool147 = icmp ne %struct.urb* %163, null, !dbg !8209
  br i1 %tobool147, label %if.end149, label %if.then148, !dbg !8213

if.then148:                                       ; preds = %for.body144
  br label %for.inc158, !dbg !8214

if.end149:                                        ; preds = %for.body144
  %164 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8215
  %165 = load %struct.urb**, %struct.urb*** %urb, align 8, !dbg !8216
  %166 = load i32, i32* %i, align 4, !dbg !8217
  %idxprom150 = sext i32 %166 to i64, !dbg !8216
  %arrayidx151 = getelementptr %struct.urb*, %struct.urb** %165, i64 %idxprom150, !dbg !8216
  %167 = load %struct.urb*, %struct.urb** %arrayidx151, align 8, !dbg !8216
  %dev152 = getelementptr inbounds %struct.urb, %struct.urb* %167, i32 0, i32 8, !dbg !8218
  store %struct.usb_device* %164, %struct.usb_device** %dev152, align 8, !dbg !8219
  %168 = load %struct.urb**, %struct.urb*** %urb, align 8, !dbg !8220
  %169 = load i32, i32* %i, align 4, !dbg !8221
  %idxprom153 = sext i32 %169 to i64, !dbg !8220
  %arrayidx154 = getelementptr %struct.urb*, %struct.urb** %168, i64 %idxprom153, !dbg !8220
  %170 = load %struct.urb*, %struct.urb** %arrayidx154, align 8, !dbg !8220
  %setup_packet155 = getelementptr inbounds %struct.urb, %struct.urb* %170, i32 0, i32 21, !dbg !8222
  %171 = load i8*, i8** %setup_packet155, align 8, !dbg !8222
  call void @kfree(i8* %171) #11, !dbg !8223
  %172 = load %struct.urb**, %struct.urb*** %urb, align 8, !dbg !8224
  %173 = load i32, i32* %i, align 4, !dbg !8225
  %idxprom156 = sext i32 %173 to i64, !dbg !8224
  %arrayidx157 = getelementptr %struct.urb*, %struct.urb** %172, i64 %idxprom156, !dbg !8224
  %174 = load %struct.urb*, %struct.urb** %arrayidx157, align 8, !dbg !8224
  call void @simple_free_urb(%struct.urb* %174) #11, !dbg !8226
  br label %for.inc158, !dbg !8227

for.inc158:                                       ; preds = %if.end149, %if.then148
  %175 = load i32, i32* %i, align 4, !dbg !8228
  %inc159 = add i32 %175, 1, !dbg !8228
  store i32 %inc159, i32* %i, align 4, !dbg !8228
  br label %for.cond140, !dbg !8229, !llvm.loop !8230

for.end160:                                       ; preds = %for.cond140
  %176 = load %struct.urb**, %struct.urb*** %urb, align 8, !dbg !8232
  %177 = bitcast %struct.urb** %176 to i8*, !dbg !8232
  call void @kfree(i8* %177) #11, !dbg !8233
  %status161 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %context, i32 0, i32 5, !dbg !8234
  %178 = load i32, i32* %status161, align 8, !dbg !8234
  store i32 %178, i32* %retval, align 4, !dbg !8235
  br label %return, !dbg !8235

return:                                           ; preds = %for.end160, %if.then11, %if.then
  %179 = load i32, i32* %retval, align 4, !dbg !8236
  ret i32 %179, !dbg !8236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @unlink_simple(%struct.usbtest_dev* %dev, i32 %pipe, i32 %len) #2 !dbg !8237 {
entry:
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %pipe.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !8240, metadata !DIExpression()), !dbg !8241
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !8242, metadata !DIExpression()), !dbg !8243
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !8244, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8246, metadata !DIExpression()), !dbg !8247
  store i32 0, i32* %retval1, align 4, !dbg !8247
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8248
  %1 = load i32, i32* %pipe.addr, align 4, !dbg !8249
  %2 = load i32, i32* %len.addr, align 4, !dbg !8250
  %call = call i32 @unlink1(%struct.usbtest_dev* %0, i32 %1, i32 %2, i32 1) #11, !dbg !8251
  store i32 %call, i32* %retval1, align 4, !dbg !8252
  %3 = load i32, i32* %retval1, align 4, !dbg !8253
  %tobool = icmp ne i32 %3, 0, !dbg !8253
  br i1 %tobool, label %if.end, label %if.then, !dbg !8255

if.then:                                          ; preds = %entry
  %4 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8256
  %5 = load i32, i32* %pipe.addr, align 4, !dbg !8257
  %6 = load i32, i32* %len.addr, align 4, !dbg !8258
  %call2 = call i32 @unlink1(%struct.usbtest_dev* %4, i32 %5, i32 %6, i32 0) #11, !dbg !8259
  store i32 %call2, i32* %retval1, align 4, !dbg !8260
  br label %if.end, !dbg !8261

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %retval1, align 4, !dbg !8262
  ret i32 %7, !dbg !8263
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @halt_simple(%struct.usbtest_dev* %dev) #2 !dbg !8264 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %ep = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %urb = alloca %struct.urb*, align 8
  %udev = alloca %struct.usb_device*, align 8
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.declare(metadata i32* %ep, metadata !8267, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8269, metadata !DIExpression()), !dbg !8270
  store i32 0, i32* %retval1, align 4, !dbg !8270
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !8271, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !8273, metadata !DIExpression()), !dbg !8274
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8275
  %call = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %0) #11, !dbg !8276
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !8274
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8277
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 4, !dbg !8279
  %2 = load i32, i32* %speed, align 4, !dbg !8279
  %cmp = icmp eq i32 %2, 5, !dbg !8280
  br i1 %cmp, label %if.then, label %if.else, !dbg !8281

if.then:                                          ; preds = %entry
  %3 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8282
  %call2 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %3, i32 0, i64 1024, i8 zeroext 0) #11, !dbg !8283
  store %struct.urb* %call2, %struct.urb** %urb, align 8, !dbg !8284
  br label %if.end, !dbg !8285

if.else:                                          ; preds = %entry
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8286
  %call3 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %4, i32 0, i64 512, i8 zeroext 0) #11, !dbg !8287
  store %struct.urb* %call3, %struct.urb** %urb, align 8, !dbg !8288
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8289
  %cmp4 = icmp eq %struct.urb* %5, null, !dbg !8291
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8292

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !8293
  br label %return, !dbg !8293

if.end6:                                          ; preds = %if.end
  %6 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8294
  %in_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %6, i32 0, i32 2, !dbg !8296
  %7 = load i32, i32* %in_pipe, align 8, !dbg !8296
  %tobool = icmp ne i32 %7, 0, !dbg !8294
  br i1 %tobool, label %if.then7, label %if.end14, !dbg !8297

if.then7:                                         ; preds = %if.end6
  %8 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8298
  %in_pipe8 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %8, i32 0, i32 2, !dbg !8298
  %9 = load i32, i32* %in_pipe8, align 8, !dbg !8298
  %shr = ashr i32 %9, 15, !dbg !8298
  %and = and i32 %shr, 15, !dbg !8298
  %or = or i32 %and, 128, !dbg !8300
  store i32 %or, i32* %ep, align 4, !dbg !8301
  %10 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8302
  %in_pipe9 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %10, i32 0, i32 2, !dbg !8303
  %11 = load i32, i32* %in_pipe9, align 8, !dbg !8303
  %12 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8304
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 10, !dbg !8305
  store i32 %11, i32* %pipe, align 8, !dbg !8306
  %13 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8307
  %14 = load i32, i32* %ep, align 4, !dbg !8308
  %15 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8309
  %call10 = call i32 @test_halt(%struct.usbtest_dev* %13, i32 %14, %struct.urb* %15) #11, !dbg !8310
  store i32 %call10, i32* %retval1, align 4, !dbg !8311
  %16 = load i32, i32* %retval1, align 4, !dbg !8312
  %cmp11 = icmp slt i32 %16, 0, !dbg !8314
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8315

if.then12:                                        ; preds = %if.then7
  br label %done, !dbg !8316

if.end13:                                         ; preds = %if.then7
  br label %if.end14, !dbg !8317

if.end14:                                         ; preds = %if.end13, %if.end6
  %17 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8318
  %out_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %17, i32 0, i32 3, !dbg !8320
  %18 = load i32, i32* %out_pipe, align 4, !dbg !8320
  %tobool15 = icmp ne i32 %18, 0, !dbg !8318
  br i1 %tobool15, label %if.then16, label %if.end23, !dbg !8321

if.then16:                                        ; preds = %if.end14
  %19 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8322
  %out_pipe17 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %19, i32 0, i32 3, !dbg !8322
  %20 = load i32, i32* %out_pipe17, align 4, !dbg !8322
  %shr18 = ashr i32 %20, 15, !dbg !8322
  %and19 = and i32 %shr18, 15, !dbg !8322
  store i32 %and19, i32* %ep, align 4, !dbg !8324
  %21 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8325
  %out_pipe20 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %21, i32 0, i32 3, !dbg !8326
  %22 = load i32, i32* %out_pipe20, align 4, !dbg !8326
  %23 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8327
  %pipe21 = getelementptr inbounds %struct.urb, %struct.urb* %23, i32 0, i32 10, !dbg !8328
  store i32 %22, i32* %pipe21, align 8, !dbg !8329
  %24 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8330
  %25 = load i32, i32* %ep, align 4, !dbg !8331
  %26 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8332
  %call22 = call i32 @test_halt(%struct.usbtest_dev* %24, i32 %25, %struct.urb* %26) #11, !dbg !8333
  store i32 %call22, i32* %retval1, align 4, !dbg !8334
  br label %if.end23, !dbg !8335

if.end23:                                         ; preds = %if.then16, %if.end14
  br label %done, !dbg !8320

done:                                             ; preds = %if.end23, %if.then12
  call void @llvm.dbg.label(metadata !8336), !dbg !8337
  %27 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8338
  call void @simple_free_urb(%struct.urb* %27) #11, !dbg !8339
  %28 = load i32, i32* %retval1, align 4, !dbg !8340
  store i32 %28, i32* %retval, align 4, !dbg !8341
  br label %return, !dbg !8341

return:                                           ; preds = %done, %if.then5
  %29 = load i32, i32* %retval, align 4, !dbg !8342
  ret i32 %29, !dbg !8342
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ctrl_out(%struct.usbtest_dev* %dev, i32 %count, i32 %length, i32 %vary, i32 %offset) #2 !dbg !8343 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4460, metadata !DIExpression()), !dbg !8346
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4472, metadata !DIExpression()), !dbg !8349
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4474, metadata !DIExpression()), !dbg !8350
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4476, metadata !DIExpression()), !dbg !8351
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4478, metadata !DIExpression()), !dbg !8352
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4484, metadata !DIExpression()), !dbg !8354
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4490, metadata !DIExpression()), !dbg !8356
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4499, metadata !DIExpression()), !dbg !8359
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4501, metadata !DIExpression()), !dbg !8360
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4503, metadata !DIExpression()), !dbg !8361
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4505, metadata !DIExpression()), !dbg !8362
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4507, metadata !DIExpression()), !dbg !8363
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4509, metadata !DIExpression()), !dbg !8364
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4511, metadata !DIExpression()), !dbg !8365
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4513, metadata !DIExpression()), !dbg !8366
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %count.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %vary.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %len = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %buf = alloca i8*, align 8
  %what = alloca i8*, align 8
  %udev = alloca %struct.usb_device*, align 8
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !8367, metadata !DIExpression()), !dbg !8368
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !8369, metadata !DIExpression()), !dbg !8370
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !8371, metadata !DIExpression()), !dbg !8372
  store i32 %vary, i32* %vary.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vary.addr, metadata !8373, metadata !DIExpression()), !dbg !8374
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8377, metadata !DIExpression()), !dbg !8378
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8379, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8381, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8383, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8385, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.declare(metadata i8** %what, metadata !8387, metadata !DIExpression()), !dbg !8388
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.115, i64 0, i64 0), i8** %what, align 8, !dbg !8388
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !8389, metadata !DIExpression()), !dbg !8390
  %0 = load i32, i32* %length.addr, align 4, !dbg !8391
  %cmp = icmp ult i32 %0, 1, !dbg !8393
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8394

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %length.addr, align 4, !dbg !8395
  %cmp2 = icmp ugt i32 %1, 65535, !dbg !8396
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !8397

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %vary.addr, align 4, !dbg !8398
  %3 = load i32, i32* %length.addr, align 4, !dbg !8399
  %cmp4 = icmp uge i32 %2, %3, !dbg !8400
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8401

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !8402
  br label %return, !dbg !8402

if.end:                                           ; preds = %lor.lhs.false3
  %4 = load i32, i32* %length.addr, align 4, !dbg !8403
  %5 = load i32, i32* %offset.addr, align 4, !dbg !8404
  %add = add i32 %4, %5, !dbg !8405
  %conv = zext i32 %add to i64, !dbg !8403
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8406
  %7 = call i1 @llvm.is.constant.i64(i64 %6) #10, !dbg !8407
  br i1 %7, label %if.then.i, label %if.end9.i, !dbg !8408

if.then.i:                                        ; preds = %if.end
  %8 = load i64, i64* %size.addr.i, align 8, !dbg !8409
  %cmp.i = icmp ugt i64 %8, 8192, !dbg !8410
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8411

if.then1.i:                                       ; preds = %if.then.i
  %9 = load i64, i64* %size.addr.i, align 8, !dbg !8412
  %10 = load i32, i32* %flags.addr.i, align 4, !dbg !8413
  store i64 %9, i64* %size.addr.i.i, align 8
  store i32 %10, i32* %flags.addr.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !8414
  %call.i.i = call i32 @get_order(i64 %11) #13, !dbg !8415
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8363
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !8416
  %13 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8417
  %14 = load i32, i32* %order.i.i, align 4, !dbg !8418
  store i64 %12, i64* %size.addr.i.i.i, align 8
  store i32 %13, i32* %flags.addr.i.i.i, align 4
  store i32 %14, i32* %order.addr.i.i.i, align 4
  %15 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8419
  %16 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8420
  %17 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8421
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %15, i32 %16, i32 %17) #14, !dbg !8422
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8422
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8422
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8422
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !8422
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8423
  br label %kmalloc.exit, !dbg !8423

if.end.i:                                         ; preds = %if.then.i
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !8424
  store i64 %18, i64* %size.addr.i11.i, align 8
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8425
  %tobool.i.i = icmp ne i64 %19, 0, !dbg !8425
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8426

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8427
  br label %kmalloc_index.exit.i, !dbg !8427

if.end.i.i:                                       ; preds = %if.end.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8428
  %cmp.i.i = icmp ule i64 %20, 8, !dbg !8429
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8430

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8431
  br label %kmalloc_index.exit.i, !dbg !8431

if.end2.i.i:                                      ; preds = %if.end.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8432
  %cmp3.i.i = icmp ugt i64 %21, 64, !dbg !8433
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8434

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8435
  %cmp4.i.i = icmp ule i64 %22, 96, !dbg !8436
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8437

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8438
  br label %kmalloc_index.exit.i, !dbg !8438

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8439
  %cmp7.i.i = icmp ugt i64 %23, 128, !dbg !8440
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8441

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8442
  %cmp9.i.i = icmp ule i64 %24, 192, !dbg !8443
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8444

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8445
  br label %kmalloc_index.exit.i, !dbg !8445

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8446
  %cmp12.i.i = icmp ule i64 %25, 8, !dbg !8447
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8448

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8449
  br label %kmalloc_index.exit.i, !dbg !8449

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8450
  %cmp15.i.i = icmp ule i64 %26, 16, !dbg !8451
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8452

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8453
  br label %kmalloc_index.exit.i, !dbg !8453

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8454
  %cmp18.i.i = icmp ule i64 %27, 32, !dbg !8455
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8456

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8457
  br label %kmalloc_index.exit.i, !dbg !8457

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8458
  %cmp21.i.i = icmp ule i64 %28, 64, !dbg !8459
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8460

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8461
  br label %kmalloc_index.exit.i, !dbg !8461

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8462
  %cmp24.i.i = icmp ule i64 %29, 128, !dbg !8463
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8464

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8465
  br label %kmalloc_index.exit.i, !dbg !8465

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8466
  %cmp27.i.i = icmp ule i64 %30, 256, !dbg !8467
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8468

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8469
  br label %kmalloc_index.exit.i, !dbg !8469

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8470
  %cmp30.i.i = icmp ule i64 %31, 512, !dbg !8471
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8472

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8473
  br label %kmalloc_index.exit.i, !dbg !8473

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8474
  %cmp33.i.i = icmp ule i64 %32, 1024, !dbg !8475
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8476

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8477
  br label %kmalloc_index.exit.i, !dbg !8477

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8478
  %cmp36.i.i = icmp ule i64 %33, 2048, !dbg !8479
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8480

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8481
  br label %kmalloc_index.exit.i, !dbg !8481

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8482
  %cmp39.i.i = icmp ule i64 %34, 4096, !dbg !8483
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8484

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8485
  br label %kmalloc_index.exit.i, !dbg !8485

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8486
  %cmp42.i.i = icmp ule i64 %35, 8192, !dbg !8487
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8488

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8489
  br label %kmalloc_index.exit.i, !dbg !8489

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8490
  %cmp45.i.i = icmp ule i64 %36, 16384, !dbg !8491
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8492

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8493
  br label %kmalloc_index.exit.i, !dbg !8493

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8494
  %cmp48.i.i = icmp ule i64 %37, 32768, !dbg !8495
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8496

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8497
  br label %kmalloc_index.exit.i, !dbg !8497

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8498
  %cmp51.i.i = icmp ule i64 %38, 65536, !dbg !8499
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8500

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8501
  br label %kmalloc_index.exit.i, !dbg !8501

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8502
  %cmp54.i.i = icmp ule i64 %39, 131072, !dbg !8503
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8504

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8505
  br label %kmalloc_index.exit.i, !dbg !8505

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8506
  %cmp57.i.i = icmp ule i64 %40, 262144, !dbg !8507
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8508

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8509
  br label %kmalloc_index.exit.i, !dbg !8509

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8510
  %cmp60.i.i = icmp ule i64 %41, 524288, !dbg !8511
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8512

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8513
  br label %kmalloc_index.exit.i, !dbg !8513

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8514
  %cmp63.i.i = icmp ule i64 %42, 1048576, !dbg !8515
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8516

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8517
  br label %kmalloc_index.exit.i, !dbg !8517

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8518
  %cmp66.i.i = icmp ule i64 %43, 2097152, !dbg !8519
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8520

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8521
  br label %kmalloc_index.exit.i, !dbg !8521

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8522
  %cmp69.i.i = icmp ule i64 %44, 4194304, !dbg !8523
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8524

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8525
  br label %kmalloc_index.exit.i, !dbg !8525

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8526
  %cmp72.i.i = icmp ule i64 %45, 8388608, !dbg !8527
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8528

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8529
  br label %kmalloc_index.exit.i, !dbg !8529

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8530
  %cmp75.i.i = icmp ule i64 %46, 16777216, !dbg !8531
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8532

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8533
  br label %kmalloc_index.exit.i, !dbg !8533

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8534
  %cmp78.i.i = icmp ule i64 %47, 33554432, !dbg !8535
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8536

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8537
  br label %kmalloc_index.exit.i, !dbg !8537

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8538
  %cmp81.i.i = icmp ule i64 %48, 67108864, !dbg !8539
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8540

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8541
  br label %kmalloc_index.exit.i, !dbg !8541

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !8542, !srcloc !4773
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !8543, !srcloc !4777
  unreachable, !dbg !8544

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %49 = load i32, i32* %retval.i.i, align 4, !dbg !8545
  store i32 %49, i32* %index.i, align 4, !dbg !8546
  %50 = load i32, i32* %index.i, align 4, !dbg !8547
  %tobool.i = icmp ne i32 %50, 0, !dbg !8547
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8548

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8549
  br label %kmalloc.exit, !dbg !8549

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %51 = load i32, i32* %flags.addr.i, align 4, !dbg !8550
  store i32 %51, i32* %flags.addr.i13.i, align 4
  %52 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8551
  %and.i.i = and i32 %52, 17, !dbg !8551
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8551
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8551
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8551
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8551
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8552

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8553
  br label %kmalloc_type.exit.i, !dbg !8553

if.end.i16.i:                                     ; preds = %if.end4.i
  %53 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8554
  %and2.i.i = and i32 %53, 1, !dbg !8555
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8554
  %54 = zext i1 %tobool3.i.i to i64, !dbg !8554
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8554
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8556
  br label %kmalloc_type.exit.i, !dbg !8556

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %55 = load i32, i32* %retval.i12.i, align 4, !dbg !8557
  %idxprom.i = zext i32 %55 to i64, !dbg !8558
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8558
  %56 = load i32, i32* %index.i, align 4, !dbg !8559
  %idxprom6.i = zext i32 %56 to i64, !dbg !8558
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8558
  %57 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8558
  %58 = load i32, i32* %flags.addr.i, align 4, !dbg !8560
  %59 = load i64, i64* %size.addr.i, align 8, !dbg !8561
  store %struct.kmem_cache* %57, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %58, i32* %flags.addr.i17.i, align 4
  store i64 %59, i64* %size.addr.i18.i, align 8
  %60 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8562
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8563
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %60, i32 %61) #14, !dbg !8564
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8564
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8564
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8564
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !8564
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8351
  %62 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8565
  %63 = load i8*, i8** %ret.i.i, align 8, !dbg !8566
  %64 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8567
  %65 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8568
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %62, i8* %63, i64 %64, i32 %65) #14, !dbg !8569
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8570
  %66 = load i8*, i8** %ret.i.i, align 8, !dbg !8571
  store i8* %66, i8** %retval.i, align 8, !dbg !8572
  br label %kmalloc.exit, !dbg !8572

if.end9.i:                                        ; preds = %if.end
  %67 = load i64, i64* %size.addr.i, align 8, !dbg !8573
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !8574
  %call10.i = call noalias i8* @__kmalloc(i64 %67, i32 %68) #14, !dbg !8575
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8575
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8575
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8575
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !8575
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8576
  br label %kmalloc.exit, !dbg !8576

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %69 = load i8*, i8** %retval.i, align 8, !dbg !8577
  store i8* %69, i8** %buf, align 8, !dbg !8578
  %70 = load i8*, i8** %buf, align 8, !dbg !8579
  %tobool = icmp ne i8* %70, null, !dbg !8579
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !8581

if.then5:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !8582
  br label %return, !dbg !8582

if.end6:                                          ; preds = %kmalloc.exit
  %71 = load i32, i32* %offset.addr, align 4, !dbg !8583
  %72 = load i8*, i8** %buf, align 8, !dbg !8584
  %idx.ext = zext i32 %71 to i64, !dbg !8584
  %add.ptr = getelementptr i8, i8* %72, i64 %idx.ext, !dbg !8584
  store i8* %add.ptr, i8** %buf, align 8, !dbg !8584
  %73 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8585
  %call7 = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %73) #11, !dbg !8586
  store %struct.usb_device* %call7, %struct.usb_device** %udev, align 8, !dbg !8587
  %74 = load i32, i32* %length.addr, align 4, !dbg !8588
  store i32 %74, i32* %len, align 4, !dbg !8589
  store i32 0, i32* %retval1, align 4, !dbg !8590
  store i32 0, i32* %i, align 4, !dbg !8591
  br label %for.cond, !dbg !8593

for.cond:                                         ; preds = %for.inc78, %if.end6
  %75 = load i32, i32* %i, align 4, !dbg !8594
  %76 = load i32, i32* %count.addr, align 4, !dbg !8596
  %cmp8 = icmp ult i32 %75, %76, !dbg !8597
  br i1 %cmp8, label %for.body, label %for.end80, !dbg !8598

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8599
  br label %for.cond10, !dbg !8602

for.cond10:                                       ; preds = %for.inc, %for.body
  %77 = load i32, i32* %j, align 4, !dbg !8603
  %78 = load i32, i32* %len, align 4, !dbg !8605
  %cmp11 = icmp ult i32 %77, %78, !dbg !8606
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !8607

for.body13:                                       ; preds = %for.cond10
  %79 = load i32, i32* %i, align 4, !dbg !8608
  %80 = load i32, i32* %j, align 4, !dbg !8609
  %add14 = add i32 %79, %80, !dbg !8610
  %conv15 = trunc i32 %add14 to i8, !dbg !8611
  %81 = load i8*, i8** %buf, align 8, !dbg !8612
  %82 = load i32, i32* %j, align 4, !dbg !8613
  %idxprom = zext i32 %82 to i64, !dbg !8612
  %arrayidx = getelementptr i8, i8* %81, i64 %idxprom, !dbg !8612
  store i8 %conv15, i8* %arrayidx, align 1, !dbg !8614
  br label %for.inc, !dbg !8612

for.inc:                                          ; preds = %for.body13
  %83 = load i32, i32* %j, align 4, !dbg !8615
  %inc = add i32 %83, 1, !dbg !8615
  store i32 %inc, i32* %j, align 4, !dbg !8615
  br label %for.cond10, !dbg !8616, !llvm.loop !8617

for.end:                                          ; preds = %for.cond10
  %84 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8619
  %85 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8620
  %call16 = call i32 @__create_pipe(%struct.usb_device* %85, i32 0) #11, !dbg !8620
  %or = or i32 -2147483648, %call16, !dbg !8620
  %86 = load i8*, i8** %buf, align 8, !dbg !8621
  %87 = load i32, i32* %len, align 4, !dbg !8622
  %conv17 = trunc i32 %87 to i16, !dbg !8622
  %call18 = call i32 @usb_control_msg(%struct.usb_device* %84, i32 %or, i8 zeroext 91, i8 zeroext 64, i16 zeroext 0, i16 zeroext 0, i8* %86, i16 zeroext %conv17, i32 5000) #11, !dbg !8623
  store i32 %call18, i32* %retval1, align 4, !dbg !8624
  %88 = load i32, i32* %retval1, align 4, !dbg !8625
  %89 = load i32, i32* %len, align 4, !dbg !8627
  %cmp19 = icmp ne i32 %88, %89, !dbg !8628
  br i1 %cmp19, label %if.then21, label %if.end27, !dbg !8629

if.then21:                                        ; preds = %for.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0), i8** %what, align 8, !dbg !8630
  %90 = load i32, i32* %retval1, align 4, !dbg !8632
  %cmp22 = icmp sge i32 %90, 0, !dbg !8634
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !8635

if.then24:                                        ; preds = %if.then21
  %91 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8636
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %91, i32 0, i32 0, !dbg !8636
  %92 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8636
  %dev25 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %92, i32 0, i32 7, !dbg !8636
  %93 = load i32, i32* %retval1, align 4, !dbg !8636
  %94 = load i32, i32* %len, align 4, !dbg !8636
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev25, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.117, i64 0, i64 0), i32 %93, i32 %94) #12, !dbg !8636
  store i32 -74, i32* %retval1, align 4, !dbg !8638
  br label %if.end26, !dbg !8639

if.end26:                                         ; preds = %if.then24, %if.then21
  br label %for.end80, !dbg !8640

if.end27:                                         ; preds = %for.end
  %95 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8641
  %96 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8642
  %call28 = call i32 @__create_pipe(%struct.usb_device* %96, i32 0) #11, !dbg !8642
  %or29 = or i32 -2147483648, %call28, !dbg !8642
  %or30 = or i32 %or29, 128, !dbg !8642
  %97 = load i8*, i8** %buf, align 8, !dbg !8643
  %98 = load i32, i32* %len, align 4, !dbg !8644
  %conv31 = trunc i32 %98 to i16, !dbg !8644
  %call32 = call i32 @usb_control_msg(%struct.usb_device* %95, i32 %or30, i8 zeroext 92, i8 zeroext -64, i16 zeroext 0, i16 zeroext 0, i8* %97, i16 zeroext %conv31, i32 5000) #11, !dbg !8645
  store i32 %call32, i32* %retval1, align 4, !dbg !8646
  %99 = load i32, i32* %retval1, align 4, !dbg !8647
  %100 = load i32, i32* %len, align 4, !dbg !8649
  %cmp33 = icmp ne i32 %99, %100, !dbg !8650
  br i1 %cmp33, label %if.then35, label %if.end42, !dbg !8651

if.then35:                                        ; preds = %if.end27
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i64 0, i64 0), i8** %what, align 8, !dbg !8652
  %101 = load i32, i32* %retval1, align 4, !dbg !8654
  %cmp36 = icmp sge i32 %101, 0, !dbg !8656
  br i1 %cmp36, label %if.then38, label %if.end41, !dbg !8657

if.then38:                                        ; preds = %if.then35
  %102 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8658
  %intf39 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %102, i32 0, i32 0, !dbg !8658
  %103 = load %struct.usb_interface*, %struct.usb_interface** %intf39, align 8, !dbg !8658
  %dev40 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %103, i32 0, i32 7, !dbg !8658
  %104 = load i32, i32* %retval1, align 4, !dbg !8658
  %105 = load i32, i32* %len, align 4, !dbg !8658
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev40, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.119, i64 0, i64 0), i32 %104, i32 %105) #12, !dbg !8658
  store i32 -74, i32* %retval1, align 4, !dbg !8660
  br label %if.end41, !dbg !8661

if.end41:                                         ; preds = %if.then38, %if.then35
  br label %for.end80, !dbg !8662

if.end42:                                         ; preds = %if.end27
  store i32 0, i32* %j, align 4, !dbg !8663
  br label %for.cond43, !dbg !8665

for.cond43:                                       ; preds = %for.inc65, %if.end42
  %106 = load i32, i32* %j, align 4, !dbg !8666
  %107 = load i32, i32* %len, align 4, !dbg !8668
  %cmp44 = icmp ult i32 %106, %107, !dbg !8669
  br i1 %cmp44, label %for.body46, label %for.end67, !dbg !8670

for.body46:                                       ; preds = %for.cond43
  %108 = load i8*, i8** %buf, align 8, !dbg !8671
  %109 = load i32, i32* %j, align 4, !dbg !8674
  %idxprom47 = zext i32 %109 to i64, !dbg !8671
  %arrayidx48 = getelementptr i8, i8* %108, i64 %idxprom47, !dbg !8671
  %110 = load i8, i8* %arrayidx48, align 1, !dbg !8671
  %conv49 = zext i8 %110 to i32, !dbg !8671
  %111 = load i32, i32* %i, align 4, !dbg !8675
  %112 = load i32, i32* %j, align 4, !dbg !8676
  %add50 = add i32 %111, %112, !dbg !8677
  %conv51 = trunc i32 %add50 to i8, !dbg !8678
  %conv52 = zext i8 %conv51 to i32, !dbg !8678
  %cmp53 = icmp ne i32 %conv49, %conv52, !dbg !8679
  br i1 %cmp53, label %if.then55, label %if.end64, !dbg !8680

if.then55:                                        ; preds = %for.body46
  %113 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8681
  %intf56 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %113, i32 0, i32 0, !dbg !8681
  %114 = load %struct.usb_interface*, %struct.usb_interface** %intf56, align 8, !dbg !8681
  %dev57 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %114, i32 0, i32 7, !dbg !8681
  %115 = load i32, i32* %j, align 4, !dbg !8681
  %116 = load i8*, i8** %buf, align 8, !dbg !8681
  %117 = load i32, i32* %j, align 4, !dbg !8681
  %idxprom58 = zext i32 %117 to i64, !dbg !8681
  %arrayidx59 = getelementptr i8, i8* %116, i64 %idxprom58, !dbg !8681
  %118 = load i8, i8* %arrayidx59, align 1, !dbg !8681
  %conv60 = zext i8 %118 to i32, !dbg !8681
  %119 = load i32, i32* %i, align 4, !dbg !8681
  %120 = load i32, i32* %j, align 4, !dbg !8681
  %add61 = add i32 %119, %120, !dbg !8681
  %conv62 = trunc i32 %add61 to i8, !dbg !8681
  %conv63 = zext i8 %conv62 to i32, !dbg !8681
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev57, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.120, i64 0, i64 0), i32 %115, i32 %conv60, i32 %conv63) #12, !dbg !8681
  store i32 -74, i32* %retval1, align 4, !dbg !8683
  br label %for.end67, !dbg !8684

if.end64:                                         ; preds = %for.body46
  br label %for.inc65, !dbg !8685

for.inc65:                                        ; preds = %if.end64
  %121 = load i32, i32* %j, align 4, !dbg !8686
  %inc66 = add i32 %121, 1, !dbg !8686
  store i32 %inc66, i32* %j, align 4, !dbg !8686
  br label %for.cond43, !dbg !8687, !llvm.loop !8688

for.end67:                                        ; preds = %if.then55, %for.cond43
  %122 = load i32, i32* %retval1, align 4, !dbg !8690
  %cmp68 = icmp slt i32 %122, 0, !dbg !8692
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !8693

if.then70:                                        ; preds = %for.end67
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i64 0, i64 0), i8** %what, align 8, !dbg !8694
  br label %for.end80, !dbg !8696

if.end71:                                         ; preds = %for.end67
  %123 = load i32, i32* %vary.addr, align 4, !dbg !8697
  %124 = load i32, i32* %len, align 4, !dbg !8698
  %add72 = add i32 %124, %123, !dbg !8698
  store i32 %add72, i32* %len, align 4, !dbg !8698
  %125 = load i32, i32* %len, align 4, !dbg !8699
  %126 = load i32, i32* %length.addr, align 4, !dbg !8701
  %cmp73 = icmp ugt i32 %125, %126, !dbg !8702
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !8703

if.then75:                                        ; preds = %if.end71
  %127 = load i32, i32* @realworld, align 4, !dbg !8704
  %tobool76 = icmp ne i32 %127, 0, !dbg !8704
  %128 = zext i1 %tobool76 to i64, !dbg !8704
  %cond = select i1 %tobool76, i32 1, i32 0, !dbg !8704
  store i32 %cond, i32* %len, align 4, !dbg !8705
  br label %if.end77, !dbg !8706

if.end77:                                         ; preds = %if.then75, %if.end71
  br label %for.inc78, !dbg !8707

for.inc78:                                        ; preds = %if.end77
  %129 = load i32, i32* %i, align 4, !dbg !8708
  %inc79 = add i32 %129, 1, !dbg !8708
  store i32 %inc79, i32* %i, align 4, !dbg !8708
  br label %for.cond, !dbg !8709, !llvm.loop !8710

for.end80:                                        ; preds = %if.then70, %if.end41, %if.end26, %for.cond
  %130 = load i32, i32* %retval1, align 4, !dbg !8712
  %cmp81 = icmp slt i32 %130, 0, !dbg !8714
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !8715

if.then83:                                        ; preds = %for.end80
  %131 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8716
  %intf84 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %131, i32 0, i32 0, !dbg !8716
  %132 = load %struct.usb_interface*, %struct.usb_interface** %intf84, align 8, !dbg !8716
  %dev85 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %132, i32 0, i32 7, !dbg !8716
  %133 = load i8*, i8** %what, align 8, !dbg !8716
  %134 = load i32, i32* %retval1, align 4, !dbg !8716
  %135 = load i32, i32* %i, align 4, !dbg !8716
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev85, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.122, i64 0, i64 0), i8* %133, i32 %134, i32 %135) #12, !dbg !8716
  br label %if.end86, !dbg !8716

if.end86:                                         ; preds = %if.then83, %for.end80
  %136 = load i8*, i8** %buf, align 8, !dbg !8717
  %137 = load i32, i32* %offset.addr, align 4, !dbg !8718
  %idx.ext87 = zext i32 %137 to i64, !dbg !8719
  %idx.neg = sub i64 0, %idx.ext87, !dbg !8719
  %add.ptr88 = getelementptr i8, i8* %136, i64 %idx.neg, !dbg !8719
  call void @kfree(i8* %add.ptr88) #11, !dbg !8720
  %138 = load i32, i32* %retval1, align 4, !dbg !8721
  store i32 %138, i32* %retval, align 4, !dbg !8722
  br label %return, !dbg !8722

return:                                           ; preds = %if.end86, %if.then5, %if.then
  %139 = load i32, i32* %retval, align 4, !dbg !8723
  ret i32 %139, !dbg !8723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_queue(%struct.usbtest_dev* %dev, %struct.usbtest_param_32* %param, i32 %pipe, %struct.usb_endpoint_descriptor* %desc, i32 %offset) #2 !dbg !8724 {
entry:
  %lock.addr.i161 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i161, metadata !7636, metadata !DIExpression()), !dbg !8727
  %lock.addr.i159 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i159, metadata !7636, metadata !DIExpression()), !dbg !8729
  %lock.addr.i157 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i157, metadata !7643, metadata !DIExpression()), !dbg !8738
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7671, metadata !DIExpression()), !dbg !8740
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %param.addr = alloca %struct.usbtest_param_32*, align 8
  %pipe.addr = alloca i32, align 4
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %offset.addr = alloca i32, align 4
  %context = alloca %struct.transfer_context, align 8
  %udev = alloca %struct.usb_device*, align 8
  %i = alloca i32, align 4
  %packets = alloca i64, align 8
  %status = alloca i32, align 4
  %urbs = alloca %struct.urb**, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %transaction_num = alloca i32, align 4
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !8743, metadata !DIExpression()), !dbg !8744
  store %struct.usbtest_param_32* %param, %struct.usbtest_param_32** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_param_32** %param.addr, metadata !8745, metadata !DIExpression()), !dbg !8746
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !8747, metadata !DIExpression()), !dbg !8748
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !8749, metadata !DIExpression()), !dbg !8750
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8751, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.declare(metadata %struct.transfer_context* %context, metadata !8753, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !8766, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8768, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.declare(metadata i64* %packets, metadata !8770, metadata !DIExpression()), !dbg !8771
  store i64 0, i64* %packets, align 8, !dbg !8771
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8772, metadata !DIExpression()), !dbg !8773
  store i32 0, i32* %status, align 4, !dbg !8773
  call void @llvm.dbg.declare(metadata %struct.urb*** %urbs, metadata !8774, metadata !DIExpression()), !dbg !8775
  %0 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8776
  %sglen = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %0, i32 0, i32 4, !dbg !8778
  %1 = load i32, i32* %sglen, align 4, !dbg !8778
  %tobool = icmp ne i32 %1, 0, !dbg !8776
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8779

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8780
  %iterations = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %2, i32 0, i32 1, !dbg !8781
  %3 = load i32, i32* %iterations, align 4, !dbg !8781
  %4 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8782
  %sglen1 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %4, i32 0, i32 4, !dbg !8783
  %5 = load i32, i32* %sglen1, align 4, !dbg !8783
  %div = udiv i32 -1, %5, !dbg !8784
  %cmp = icmp ugt i32 %3, %div, !dbg !8785
  br i1 %cmp, label %if.then, label %if.end, !dbg !8786

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !8787
  br label %return, !dbg !8787

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8788
  %sglen2 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %6, i32 0, i32 4, !dbg !8790
  %7 = load i32, i32* %sglen2, align 4, !dbg !8790
  %cmp3 = icmp ugt i32 %7, 128, !dbg !8791
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8792

if.then4:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8793
  br label %return, !dbg !8793

if.end5:                                          ; preds = %if.end
  %8 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8794
  %sglen6 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %8, i32 0, i32 4, !dbg !8795
  %9 = load i32, i32* %sglen6, align 4, !dbg !8795
  %conv = zext i32 %9 to i64, !dbg !8794
  %call = call i8* @kcalloc(i64 %conv, i64 8, i32 3264) #11, !dbg !8796
  %10 = bitcast i8* %call to %struct.urb**, !dbg !8796
  store %struct.urb** %10, %struct.urb*** %urbs, align 8, !dbg !8797
  %11 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8798
  %tobool7 = icmp ne %struct.urb** %11, null, !dbg !8798
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !8800

if.then8:                                         ; preds = %if.end5
  store i32 -12, i32* %retval, align 4, !dbg !8801
  br label %return, !dbg !8801

if.end9:                                          ; preds = %if.end5
  %12 = bitcast %struct.transfer_context* %context to i8*, !dbg !8802
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 72, i1 false), !dbg !8802
  %13 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8803
  %iterations10 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %13, i32 0, i32 1, !dbg !8804
  %14 = load i32, i32* %iterations10, align 4, !dbg !8804
  %15 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8805
  %sglen11 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %15, i32 0, i32 4, !dbg !8806
  %16 = load i32, i32* %sglen11, align 4, !dbg !8806
  %mul = mul i32 %14, %16, !dbg !8807
  %count = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 0, !dbg !8808
  store i32 %mul, i32* %count, align 8, !dbg !8809
  %17 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8810
  %dev12 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 7, !dbg !8811
  store %struct.usbtest_dev* %17, %struct.usbtest_dev** %dev12, align 8, !dbg !8812
  %18 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8813
  %tobool13 = icmp ne %struct.usb_endpoint_descriptor* %18, null, !dbg !8814
  %lnot = xor i1 %tobool13, true, !dbg !8814
  %lnot14 = xor i1 %lnot, true, !dbg !8815
  %is_iso = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 8, !dbg !8816
  %frombool = zext i1 %lnot14 to i8, !dbg !8817
  store i8 %frombool, i8* %is_iso, align 8, !dbg !8817
  %done = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 3, !dbg !8818
  call void @__init_completion(%struct.completion* %done) #11, !dbg !8818
  br label %do.body, !dbg !8819

do.body:                                          ; preds = %if.end9
  %lock = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 2, !dbg !8820
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8821
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !8822
  %rlock.i = bitcast %union.anon.4* %20 to %struct.raw_spinlock*, !dbg !8822
  %lock16 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 2, !dbg !8820
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8820
  %rlock = bitcast %union.anon.4* %21 to %struct.raw_spinlock*, !dbg !8820
  %22 = bitcast %struct.spinlock* %lock16 to i8*, !dbg !8820
  %23 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 1 %23, i64 0, i1 false), !dbg !8820
  br label %do.end, !dbg !8820

do.end:                                           ; preds = %do.body
  %24 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8823
  %call17 = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %24) #11, !dbg !8824
  store %struct.usb_device* %call17, %struct.usb_device** %udev, align 8, !dbg !8825
  store i32 0, i32* %i, align 4, !dbg !8826
  br label %for.cond, !dbg !8828

for.cond:                                         ; preds = %for.inc, %do.end
  %25 = load i32, i32* %i, align 4, !dbg !8829
  %26 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8831
  %sglen18 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %26, i32 0, i32 4, !dbg !8832
  %27 = load i32, i32* %sglen18, align 4, !dbg !8832
  %cmp19 = icmp ult i32 %25, %27, !dbg !8833
  br i1 %cmp19, label %for.body, label %for.end, !dbg !8834

for.body:                                         ; preds = %for.cond
  %is_iso21 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 8, !dbg !8835
  %28 = load i8, i8* %is_iso21, align 8, !dbg !8835
  %tobool22 = trunc i8 %28 to i1, !dbg !8835
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !8838

if.then23:                                        ; preds = %for.body
  %29 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8839
  %30 = load i32, i32* %pipe.addr, align 4, !dbg !8840
  %31 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8841
  %32 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8842
  %length = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %32, i32 0, i32 2, !dbg !8843
  %33 = load i32, i32* %length, align 4, !dbg !8843
  %conv24 = zext i32 %33 to i64, !dbg !8842
  %34 = load i32, i32* %offset.addr, align 4, !dbg !8844
  %call25 = call %struct.urb* @iso_alloc_urb(%struct.usb_device* %29, i32 %30, %struct.usb_endpoint_descriptor* %31, i64 %conv24, i32 %34) #11, !dbg !8845
  %35 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8846
  %36 = load i32, i32* %i, align 4, !dbg !8847
  %idxprom = zext i32 %36 to i64, !dbg !8846
  %arrayidx = getelementptr %struct.urb*, %struct.urb** %35, i64 %idxprom, !dbg !8846
  store %struct.urb* %call25, %struct.urb** %arrayidx, align 8, !dbg !8848
  br label %if.end31, !dbg !8846

if.else:                                          ; preds = %for.body
  %37 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8849
  %38 = load i32, i32* %pipe.addr, align 4, !dbg !8850
  %39 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8851
  %length26 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %39, i32 0, i32 2, !dbg !8852
  %40 = load i32, i32* %length26, align 4, !dbg !8852
  %conv27 = zext i32 %40 to i64, !dbg !8851
  %call28 = call %struct.urb* @complicated_alloc_urb(%struct.usb_device* %37, i32 %38, i64 %conv27, i8 zeroext 0) #11, !dbg !8853
  %41 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8854
  %42 = load i32, i32* %i, align 4, !dbg !8855
  %idxprom29 = zext i32 %42 to i64, !dbg !8854
  %arrayidx30 = getelementptr %struct.urb*, %struct.urb** %41, i64 %idxprom29, !dbg !8854
  store %struct.urb* %call28, %struct.urb** %arrayidx30, align 8, !dbg !8856
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then23
  %43 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8857
  %44 = load i32, i32* %i, align 4, !dbg !8859
  %idxprom32 = zext i32 %44 to i64, !dbg !8857
  %arrayidx33 = getelementptr %struct.urb*, %struct.urb** %43, i64 %idxprom32, !dbg !8857
  %45 = load %struct.urb*, %struct.urb** %arrayidx33, align 8, !dbg !8857
  %tobool34 = icmp ne %struct.urb* %45, null, !dbg !8857
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !8860

if.then35:                                        ; preds = %if.end31
  store i32 -12, i32* %status, align 4, !dbg !8861
  br label %fail, !dbg !8863

if.end36:                                         ; preds = %if.end31
  %46 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8864
  %47 = load i32, i32* %i, align 4, !dbg !8865
  %idxprom37 = zext i32 %47 to i64, !dbg !8864
  %arrayidx38 = getelementptr %struct.urb*, %struct.urb** %46, i64 %idxprom37, !dbg !8864
  %48 = load %struct.urb*, %struct.urb** %arrayidx38, align 8, !dbg !8864
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %48, i32 0, i32 24, !dbg !8866
  %49 = load i32, i32* %number_of_packets, align 4, !dbg !8866
  %conv39 = sext i32 %49 to i64, !dbg !8864
  %50 = load i64, i64* %packets, align 8, !dbg !8867
  %add = add i64 %50, %conv39, !dbg !8867
  store i64 %add, i64* %packets, align 8, !dbg !8867
  %51 = bitcast %struct.transfer_context* %context to i8*, !dbg !8868
  %52 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8869
  %53 = load i32, i32* %i, align 4, !dbg !8870
  %idxprom40 = zext i32 %53 to i64, !dbg !8869
  %arrayidx41 = getelementptr %struct.urb*, %struct.urb** %52, i64 %idxprom40, !dbg !8869
  %54 = load %struct.urb*, %struct.urb** %arrayidx41, align 8, !dbg !8869
  %context42 = getelementptr inbounds %struct.urb, %struct.urb* %54, i32 0, i32 27, !dbg !8871
  store i8* %51, i8** %context42, align 8, !dbg !8872
  br label %for.inc, !dbg !8873

for.inc:                                          ; preds = %if.end36
  %55 = load i32, i32* %i, align 4, !dbg !8874
  %inc = add i32 %55, 1, !dbg !8874
  store i32 %inc, i32* %i, align 4, !dbg !8874
  br label %for.cond, !dbg !8875, !llvm.loop !8876

for.end:                                          ; preds = %for.cond
  %56 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8878
  %iterations43 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %56, i32 0, i32 1, !dbg !8879
  %57 = load i32, i32* %iterations43, align 4, !dbg !8879
  %conv44 = zext i32 %57 to i64, !dbg !8878
  %58 = load i64, i64* %packets, align 8, !dbg !8880
  %mul45 = mul i64 %58, %conv44, !dbg !8880
  store i64 %mul45, i64* %packets, align 8, !dbg !8880
  %is_iso46 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 8, !dbg !8881
  %59 = load i8, i8* %is_iso46, align 8, !dbg !8881
  %tobool47 = trunc i8 %59 to i1, !dbg !8881
  br i1 %tobool47, label %if.then48, label %if.end76, !dbg !8883

if.then48:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %transaction_num, metadata !8884, metadata !DIExpression()), !dbg !8886
  %60 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8887
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %60, i32 0, i32 4, !dbg !8889
  %61 = load i32, i32* %speed, align 4, !dbg !8889
  %cmp49 = icmp uge i32 %61, 5, !dbg !8890
  br i1 %cmp49, label %if.then51, label %if.else53, !dbg !8891

if.then51:                                        ; preds = %if.then48
  %62 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8892
  %63 = load i32, i32* %pipe.addr, align 4, !dbg !8893
  %call52 = call i32 @ss_isoc_get_packet_num(%struct.usb_device* %62, i32 %63) #11, !dbg !8894
  store i32 %call52, i32* %transaction_num, align 4, !dbg !8895
  br label %if.end55, !dbg !8896

if.else53:                                        ; preds = %if.then48
  %64 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8897
  %call54 = call i32 @usb_endpoint_maxp_mult(%struct.usb_endpoint_descriptor* %64) #11, !dbg !8898
  store i32 %call54, i32* %transaction_num, align 4, !dbg !8899
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.then51
  %65 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8900
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %65, i32 0, i32 0, !dbg !8900
  %66 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8900
  %dev56 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %66, i32 0, i32 7, !dbg !8900
  %67 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8900
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %67, i32 0, i32 5, !dbg !8900
  %68 = load i8, i8* %bInterval, align 1, !dbg !8900
  %conv57 = zext i8 %68 to i32, !dbg !8900
  %sub = sub i32 %conv57, 1, !dbg !8900
  %shl = shl i32 1, %sub, !dbg !8900
  %69 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8900
  %speed58 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %69, i32 0, i32 4, !dbg !8900
  %70 = load i32, i32* %speed58, align 4, !dbg !8900
  %cmp59 = icmp uge i32 %70, 3, !dbg !8900
  %71 = zext i1 %cmp59 to i64, !dbg !8900
  %cond = select i1 %cmp59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), !dbg !8900
  %72 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8900
  %call61 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %72) #11, !dbg !8900
  %73 = load i32, i32* %transaction_num, align 4, !dbg !8900
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev56, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.123, i64 0, i64 0), i32 %shl, i8* %cond, i32 %call61, i32 %73) #12, !dbg !8900
  %74 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8901
  %intf62 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %74, i32 0, i32 0, !dbg !8901
  %75 = load %struct.usb_interface*, %struct.usb_interface** %intf62, align 8, !dbg !8901
  %dev63 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %75, i32 0, i32 7, !dbg !8901
  %76 = load i64, i64* %packets, align 8, !dbg !8901
  %77 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !8901
  %bInterval64 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %77, i32 0, i32 5, !dbg !8901
  %78 = load i8, i8* %bInterval64, align 1, !dbg !8901
  %conv65 = zext i8 %78 to i32, !dbg !8901
  %sub66 = sub i32 %conv65, 1, !dbg !8901
  %shl67 = shl i32 1, %sub66, !dbg !8901
  %conv68 = sext i32 %shl67 to i64, !dbg !8901
  %mul69 = mul i64 %76, %conv68, !dbg !8901
  %79 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8901
  %speed70 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %79, i32 0, i32 4, !dbg !8901
  %80 = load i32, i32* %speed70, align 4, !dbg !8901
  %cmp71 = icmp uge i32 %80, 3, !dbg !8901
  %81 = zext i1 %cmp71 to i64, !dbg !8901
  %cond73 = select i1 %cmp71, i32 8, i32 1, !dbg !8901
  %conv74 = sext i32 %cond73 to i64, !dbg !8901
  %div75 = udiv i64 %mul69, %conv74, !dbg !8901
  %82 = load i64, i64* %packets, align 8, !dbg !8901
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev63, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.125, i64 0, i64 0), i64 %div75, i64 %82) #12, !dbg !8901
  br label %if.end76, !dbg !8902

if.end76:                                         ; preds = %if.end55, %for.end
  %lock77 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 2, !dbg !8903
  store %struct.spinlock* %lock77, %struct.spinlock** %lock.addr.i157, align 8
  call void @arch_local_irq_disable() #14, !dbg !8904
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8905, !srcloc !8147
  %83 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i157, align 8, !dbg !8906
  %84 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %83, i32 0, i32 0, !dbg !8906
  %rlock.i158 = bitcast %union.anon.4* %84 to %struct.raw_spinlock*, !dbg !8906
  store i32 0, i32* %i, align 4, !dbg !8907
  br label %for.cond78, !dbg !8908

for.cond78:                                       ; preds = %for.inc103, %if.end76
  %85 = load i32, i32* %i, align 4, !dbg !8909
  %86 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8910
  %sglen79 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %86, i32 0, i32 4, !dbg !8911
  %87 = load i32, i32* %sglen79, align 4, !dbg !8911
  %cmp80 = icmp ult i32 %85, %87, !dbg !8912
  br i1 %cmp80, label %for.body82, label %for.end105, !dbg !8913

for.body82:                                       ; preds = %for.cond78
  %pending = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 1, !dbg !8914
  %88 = load i32, i32* %pending, align 4, !dbg !8915
  %inc83 = add i32 %88, 1, !dbg !8915
  store i32 %inc83, i32* %pending, align 4, !dbg !8915
  %89 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8916
  %90 = load i32, i32* %i, align 4, !dbg !8917
  %idxprom84 = zext i32 %90 to i64, !dbg !8916
  %arrayidx85 = getelementptr %struct.urb*, %struct.urb** %89, i64 %idxprom84, !dbg !8916
  %91 = load %struct.urb*, %struct.urb** %arrayidx85, align 8, !dbg !8916
  %call86 = call i32 @usb_submit_urb(%struct.urb* %91, i32 2592) #11, !dbg !8918
  store i32 %call86, i32* %status, align 4, !dbg !8919
  %92 = load i32, i32* %status, align 4, !dbg !8920
  %cmp87 = icmp slt i32 %92, 0, !dbg !8921
  br i1 %cmp87, label %if.then89, label %if.end102, !dbg !8922

if.then89:                                        ; preds = %for.body82
  %93 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !8923
  %intf90 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %93, i32 0, i32 0, !dbg !8923
  %94 = load %struct.usb_interface*, %struct.usb_interface** %intf90, align 8, !dbg !8923
  %dev91 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %94, i32 0, i32 7, !dbg !8923
  %95 = load i32, i32* %i, align 4, !dbg !8923
  %96 = load i32, i32* %status, align 4, !dbg !8923
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev91, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.126, i64 0, i64 0), i32 %95, i32 %96) #12, !dbg !8923
  %97 = load i32, i32* %i, align 4, !dbg !8924
  %cmp92 = icmp eq i32 %97, 0, !dbg !8925
  br i1 %cmp92, label %if.then94, label %if.end96, !dbg !8926

if.then94:                                        ; preds = %if.then89
  %lock95 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 2, !dbg !8927
  store %struct.spinlock* %lock95, %struct.spinlock** %lock.addr.i159, align 8
  call void @arch_local_irq_enable() #14, !dbg !8928
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8929, !srcloc !8188
  %98 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i159, align 8, !dbg !8930
  %99 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %98, i32 0, i32 0, !dbg !8930
  %rlock.i160 = bitcast %union.anon.4* %99 to %struct.raw_spinlock*, !dbg !8930
  br label %fail, !dbg !8931

if.end96:                                         ; preds = %if.then89
  %100 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8932
  %101 = load i32, i32* %i, align 4, !dbg !8933
  %idxprom97 = zext i32 %101 to i64, !dbg !8932
  %arrayidx98 = getelementptr %struct.urb*, %struct.urb** %100, i64 %idxprom97, !dbg !8932
  %102 = load %struct.urb*, %struct.urb** %arrayidx98, align 8, !dbg !8932
  call void @simple_free_urb(%struct.urb* %102) #11, !dbg !8934
  %103 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8935
  %104 = load i32, i32* %i, align 4, !dbg !8936
  %idxprom99 = zext i32 %104 to i64, !dbg !8935
  %arrayidx100 = getelementptr %struct.urb*, %struct.urb** %103, i64 %idxprom99, !dbg !8935
  store %struct.urb* null, %struct.urb** %arrayidx100, align 8, !dbg !8937
  %pending101 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 1, !dbg !8938
  %105 = load i32, i32* %pending101, align 4, !dbg !8939
  %dec = add i32 %105, -1, !dbg !8939
  store i32 %dec, i32* %pending101, align 4, !dbg !8939
  %submit_error = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 4, !dbg !8940
  store i32 1, i32* %submit_error, align 8, !dbg !8941
  br label %for.end105, !dbg !8942

if.end102:                                        ; preds = %for.body82
  br label %for.inc103, !dbg !8943

for.inc103:                                       ; preds = %if.end102
  %106 = load i32, i32* %i, align 4, !dbg !8944
  %inc104 = add i32 %106, 1, !dbg !8944
  store i32 %inc104, i32* %i, align 4, !dbg !8944
  br label %for.cond78, !dbg !8945, !llvm.loop !8946

for.end105:                                       ; preds = %if.end96, %for.cond78
  %lock106 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 2, !dbg !8948
  store %struct.spinlock* %lock106, %struct.spinlock** %lock.addr.i161, align 8
  call void @arch_local_irq_enable() #14, !dbg !8949
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8950, !srcloc !8188
  %107 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i161, align 8, !dbg !8951
  %108 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %107, i32 0, i32 0, !dbg !8951
  %rlock.i162 = bitcast %union.anon.4* %108 to %struct.raw_spinlock*, !dbg !8951
  %done107 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 3, !dbg !8952
  call void @wait_for_completion(%struct.completion* %done107) #11, !dbg !8953
  store i32 0, i32* %i, align 4, !dbg !8954
  br label %for.cond108, !dbg !8956

for.cond108:                                      ; preds = %for.inc120, %for.end105
  %109 = load i32, i32* %i, align 4, !dbg !8957
  %110 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !8959
  %sglen109 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %110, i32 0, i32 4, !dbg !8960
  %111 = load i32, i32* %sglen109, align 4, !dbg !8960
  %cmp110 = icmp ult i32 %109, %111, !dbg !8961
  br i1 %cmp110, label %for.body112, label %for.end122, !dbg !8962

for.body112:                                      ; preds = %for.cond108
  %112 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8963
  %113 = load i32, i32* %i, align 4, !dbg !8966
  %idxprom113 = zext i32 %113 to i64, !dbg !8963
  %arrayidx114 = getelementptr %struct.urb*, %struct.urb** %112, i64 %idxprom113, !dbg !8963
  %114 = load %struct.urb*, %struct.urb** %arrayidx114, align 8, !dbg !8963
  %tobool115 = icmp ne %struct.urb* %114, null, !dbg !8963
  br i1 %tobool115, label %if.then116, label %if.end119, !dbg !8967

if.then116:                                       ; preds = %for.body112
  %115 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8968
  %116 = load i32, i32* %i, align 4, !dbg !8969
  %idxprom117 = zext i32 %116 to i64, !dbg !8968
  %arrayidx118 = getelementptr %struct.urb*, %struct.urb** %115, i64 %idxprom117, !dbg !8968
  %117 = load %struct.urb*, %struct.urb** %arrayidx118, align 8, !dbg !8968
  call void @simple_free_urb(%struct.urb* %117) #11, !dbg !8970
  br label %if.end119, !dbg !8970

if.end119:                                        ; preds = %if.then116, %for.body112
  br label %for.inc120, !dbg !8971

for.inc120:                                       ; preds = %if.end119
  %118 = load i32, i32* %i, align 4, !dbg !8972
  %inc121 = add i32 %118, 1, !dbg !8972
  store i32 %inc121, i32* %i, align 4, !dbg !8972
  br label %for.cond108, !dbg !8973, !llvm.loop !8974

for.end122:                                       ; preds = %for.cond108
  %119 = load i32, i32* %status, align 4, !dbg !8976
  %cmp123 = icmp ne i32 %119, 0, !dbg !8978
  br i1 %cmp123, label %if.then125, label %if.else126, !dbg !8979

if.then125:                                       ; preds = %for.end122
  br label %if.end141, !dbg !8979

if.else126:                                       ; preds = %for.end122
  %submit_error127 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 4, !dbg !8980
  %120 = load i32, i32* %submit_error127, align 8, !dbg !8980
  %tobool128 = icmp ne i32 %120, 0, !dbg !8982
  br i1 %tobool128, label %if.then129, label %if.else130, !dbg !8983

if.then129:                                       ; preds = %if.else126
  store i32 -13, i32* %status, align 4, !dbg !8984
  br label %if.end140, !dbg !8985

if.else130:                                       ; preds = %if.else126
  %errors = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 5, !dbg !8986
  %121 = load i64, i64* %errors, align 8, !dbg !8986
  %is_iso131 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 8, !dbg !8988
  %122 = load i8, i8* %is_iso131, align 8, !dbg !8988
  %tobool132 = trunc i8 %122 to i1, !dbg !8988
  br i1 %tobool132, label %cond.true, label %cond.false, !dbg !8989

cond.true:                                        ; preds = %if.else130
  %packet_count = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %context, i32 0, i32 6, !dbg !8990
  %123 = load i64, i64* %packet_count, align 8, !dbg !8990
  %div134 = udiv i64 %123, 10, !dbg !8991
  br label %cond.end, !dbg !8989

cond.false:                                       ; preds = %if.else130
  br label %cond.end, !dbg !8989

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond135 = phi i64 [ %div134, %cond.true ], [ 0, %cond.false ], !dbg !8989
  %cmp136 = icmp ugt i64 %121, %cond135, !dbg !8992
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !8993

if.then138:                                       ; preds = %cond.end
  store i32 -5, i32* %status, align 4, !dbg !8994
  br label %if.end139, !dbg !8995

if.end139:                                        ; preds = %if.then138, %cond.end
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then129
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.then125
  %124 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !8996
  %125 = bitcast %struct.urb** %124 to i8*, !dbg !8996
  call void @kfree(i8* %125) #11, !dbg !8997
  %126 = load i32, i32* %status, align 4, !dbg !8998
  store i32 %126, i32* %retval, align 4, !dbg !8999
  br label %return, !dbg !8999

fail:                                             ; preds = %if.then94, %if.then35
  call void @llvm.dbg.label(metadata !9000), !dbg !9001
  store i32 0, i32* %i, align 4, !dbg !9002
  br label %for.cond142, !dbg !9004

for.cond142:                                      ; preds = %for.inc154, %fail
  %127 = load i32, i32* %i, align 4, !dbg !9005
  %128 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param.addr, align 8, !dbg !9007
  %sglen143 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %128, i32 0, i32 4, !dbg !9008
  %129 = load i32, i32* %sglen143, align 4, !dbg !9008
  %cmp144 = icmp ult i32 %127, %129, !dbg !9009
  br i1 %cmp144, label %for.body146, label %for.end156, !dbg !9010

for.body146:                                      ; preds = %for.cond142
  %130 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !9011
  %131 = load i32, i32* %i, align 4, !dbg !9014
  %idxprom147 = zext i32 %131 to i64, !dbg !9011
  %arrayidx148 = getelementptr %struct.urb*, %struct.urb** %130, i64 %idxprom147, !dbg !9011
  %132 = load %struct.urb*, %struct.urb** %arrayidx148, align 8, !dbg !9011
  %tobool149 = icmp ne %struct.urb* %132, null, !dbg !9011
  br i1 %tobool149, label %if.then150, label %if.end153, !dbg !9015

if.then150:                                       ; preds = %for.body146
  %133 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !9016
  %134 = load i32, i32* %i, align 4, !dbg !9017
  %idxprom151 = zext i32 %134 to i64, !dbg !9016
  %arrayidx152 = getelementptr %struct.urb*, %struct.urb** %133, i64 %idxprom151, !dbg !9016
  %135 = load %struct.urb*, %struct.urb** %arrayidx152, align 8, !dbg !9016
  call void @simple_free_urb(%struct.urb* %135) #11, !dbg !9018
  br label %if.end153, !dbg !9018

if.end153:                                        ; preds = %if.then150, %for.body146
  br label %for.inc154, !dbg !9019

for.inc154:                                       ; preds = %if.end153
  %136 = load i32, i32* %i, align 4, !dbg !9020
  %inc155 = add i32 %136, 1, !dbg !9020
  store i32 %inc155, i32* %i, align 4, !dbg !9020
  br label %for.cond142, !dbg !9021, !llvm.loop !9022

for.end156:                                       ; preds = %for.cond142
  %137 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !9024
  %138 = bitcast %struct.urb** %137 to i8*, !dbg !9024
  call void @kfree(i8* %138) #11, !dbg !9025
  %139 = load i32, i32* %status, align 4, !dbg !9026
  store i32 %139, i32* %retval, align 4, !dbg !9027
  br label %return, !dbg !9027

return:                                           ; preds = %for.end156, %if.end141, %if.then8, %if.then4, %if.then
  %140 = load i32, i32* %retval, align 4, !dbg !9028
  ret i32 %140, !dbg !9028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_unaligned_bulk(%struct.usbtest_dev* %tdev, i32 %pipe, i32 %length, i32 %iterations, i32 %transfer_flags, i8* %label) #2 !dbg !9029 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %pipe.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %iterations.addr = alloca i32, align 4
  %transfer_flags.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %retval1 = alloca i32, align 4
  %urb = alloca %struct.urb*, align 8
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !9032, metadata !DIExpression()), !dbg !9033
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !9034, metadata !DIExpression()), !dbg !9035
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !9036, metadata !DIExpression()), !dbg !9037
  store i32 %iterations, i32* %iterations.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iterations.addr, metadata !9038, metadata !DIExpression()), !dbg !9039
  store i32 %transfer_flags, i32* %transfer_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %transfer_flags.addr, metadata !9040, metadata !DIExpression()), !dbg !9041
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !9042, metadata !DIExpression()), !dbg !9043
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9044, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !9046, metadata !DIExpression()), !dbg !9047
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !9048
  %call = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %0) #11, !dbg !9049
  %1 = load i32, i32* %pipe.addr, align 4, !dbg !9050
  %2 = load i32, i32* %length.addr, align 4, !dbg !9051
  %conv = zext i32 %2 to i64, !dbg !9051
  %3 = load i32, i32* %transfer_flags.addr, align 4, !dbg !9052
  %call2 = call %struct.urb* @usbtest_alloc_urb(%struct.usb_device* %call, i32 %1, i64 %conv, i32 %3, i32 1, i8 zeroext 0, void (%struct.urb*)* @simple_callback) #11, !dbg !9053
  store %struct.urb* %call2, %struct.urb** %urb, align 8, !dbg !9047
  %4 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9054
  %tobool = icmp ne %struct.urb* %4, null, !dbg !9054
  br i1 %tobool, label %if.end, label %if.then, !dbg !9056

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9057
  br label %return, !dbg !9057

if.end:                                           ; preds = %entry
  %5 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !9058
  %6 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9059
  %7 = load i32, i32* %iterations.addr, align 4, !dbg !9060
  %8 = load i8*, i8** %label.addr, align 8, !dbg !9061
  %call3 = call i32 @simple_io(%struct.usbtest_dev* %5, %struct.urb* %6, i32 %7, i32 0, i32 0, i8* %8) #11, !dbg !9062
  store i32 %call3, i32* %retval1, align 4, !dbg !9063
  %9 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9064
  call void @simple_free_urb(%struct.urb* %9) #11, !dbg !9065
  %10 = load i32, i32* %retval1, align 4, !dbg !9066
  store i32 %10, i32* %retval, align 4, !dbg !9067
  br label %return, !dbg !9067

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !9068
  ret i32 %11, !dbg !9068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @unlink_queued(%struct.usbtest_dev* %dev, i32 %pipe, i32 %num, i32 %size) #2 !dbg !9069 {
entry:
  %v.addr.i1.i114 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i114, metadata !9072, metadata !DIExpression()), !dbg !9078
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !9084, metadata !DIExpression()), !dbg !9086
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i115 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i115, metadata !9087, metadata !DIExpression()), !dbg !9095
  %size.addr.i.i116 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i116, metadata !9097, metadata !DIExpression()), !dbg !9098
  %v.addr.i117 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i117, metadata !9099, metadata !DIExpression()), !dbg !9100
  %v.addr.i1.i107 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i107, metadata !9101, metadata !DIExpression()), !dbg !9105
  %v.addr.i.i108 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i108, metadata !9087, metadata !DIExpression()), !dbg !9114
  %size.addr.i.i109 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i109, metadata !9097, metadata !DIExpression()), !dbg !9116
  %v.addr.i110 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i110, metadata !9117, metadata !DIExpression()), !dbg !9118
  %v.addr.i1.i100 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i100, metadata !9119, metadata !DIExpression()), !dbg !9121
  %v.addr.i.i101 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i101, metadata !9087, metadata !DIExpression()), !dbg !9125
  %size.addr.i.i102 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i102, metadata !9097, metadata !DIExpression()), !dbg !9127
  %v.addr.i103 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i103, metadata !9128, metadata !DIExpression()), !dbg !9129
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9130, metadata !DIExpression()), !dbg !9134
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !9138, metadata !DIExpression()), !dbg !9139
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9140, metadata !DIExpression()), !dbg !9142
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9144, metadata !DIExpression()), !dbg !9145
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9146, metadata !DIExpression()), !dbg !9147
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !9148, metadata !DIExpression()), !dbg !9149
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %pipe.addr = alloca i32, align 4
  %num.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %ctx = alloca %struct.queued_ctx, align 8
  %udev = alloca %struct.usb_device*, align 8
  %buf = alloca i8*, align 8
  %buf_dma = alloca i64, align 8
  %i = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !9150, metadata !DIExpression()), !dbg !9151
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !9152, metadata !DIExpression()), !dbg !9153
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !9154, metadata !DIExpression()), !dbg !9155
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9156, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.declare(metadata %struct.queued_ctx* %ctx, metadata !9158, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !9167, metadata !DIExpression()), !dbg !9168
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !9169
  %call = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %0) #11, !dbg !9170
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !9168
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9171, metadata !DIExpression()), !dbg !9172
  call void @llvm.dbg.declare(metadata i64* %buf_dma, metadata !9173, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9175, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9177, metadata !DIExpression()), !dbg !9178
  store i32 -12, i32* %retval1, align 4, !dbg !9178
  %complete = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 0, !dbg !9179
  call void @__init_completion(%struct.completion* %complete) #11, !dbg !9179
  %pending = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 1, !dbg !9180
  store %struct.atomic_t* %pending, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %i.addr.i, align 4
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9181
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !9181
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9182
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !9183
  %conv.i.i = trunc i64 %4 to i32, !dbg !9183
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #14, !dbg !9184
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9185
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !9185
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !9185
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9186
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !9187
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %8, i32* %i.addr.i.i, align 4
  %9 = load i32, i32* %i.addr.i.i, align 4, !dbg !9188
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9188
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %10, i32 0, i32 0, !dbg !9188
  store volatile i32 %9, i32* %counter.i.i, align 4, !dbg !9188
  %11 = load i32, i32* %num.addr, align 4, !dbg !9190
  %num2 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 2, !dbg !9191
  store i32 %11, i32* %num2, align 4, !dbg !9192
  %status = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 3, !dbg !9193
  store i32 0, i32* %status, align 8, !dbg !9194
  %12 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !9195
  %13 = load i32, i32* %size.addr, align 4, !dbg !9196
  %conv = zext i32 %13 to i64, !dbg !9196
  %call3 = call i8* @usb_alloc_coherent(%struct.usb_device* %12, i64 %conv, i32 3264, i64* %buf_dma) #11, !dbg !9197
  store i8* %call3, i8** %buf, align 8, !dbg !9198
  %14 = load i8*, i8** %buf, align 8, !dbg !9199
  %tobool = icmp ne i8* %14, null, !dbg !9199
  br i1 %tobool, label %if.end, label %if.then, !dbg !9201

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %retval1, align 4, !dbg !9202
  store i32 %15, i32* %retval, align 4, !dbg !9203
  br label %return, !dbg !9203

if.end:                                           ; preds = %entry
  %16 = load i8*, i8** %buf, align 8, !dbg !9204
  %17 = load i32, i32* %size.addr, align 4, !dbg !9205
  %conv4 = zext i32 %17 to i64, !dbg !9205
  call void @llvm.memset.p0i8.i64(i8* align 1 %16, i8 0, i64 %conv4, i1 false), !dbg !9206
  %18 = load i32, i32* %num.addr, align 4, !dbg !9207
  %conv5 = zext i32 %18 to i64, !dbg !9207
  %call6 = call i8* @kcalloc(i64 %conv5, i64 8, i32 3264) #11, !dbg !9208
  %19 = bitcast i8* %call6 to %struct.urb**, !dbg !9208
  %urbs = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9209
  store %struct.urb** %19, %struct.urb*** %urbs, align 8, !dbg !9210
  %urbs7 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9211
  %20 = load %struct.urb**, %struct.urb*** %urbs7, align 8, !dbg !9211
  %tobool8 = icmp ne %struct.urb** %20, null, !dbg !9213
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !9214

if.then9:                                         ; preds = %if.end
  br label %free_buf, !dbg !9215

if.end10:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !9216
  br label %for.cond, !dbg !9218

for.cond:                                         ; preds = %for.inc, %if.end10
  %21 = load i32, i32* %i, align 4, !dbg !9219
  %22 = load i32, i32* %num.addr, align 4, !dbg !9221
  %cmp = icmp ult i32 %21, %22, !dbg !9222
  br i1 %cmp, label %for.body, label %for.end, !dbg !9223

for.body:                                         ; preds = %for.cond
  %call12 = call %struct.urb* @usb_alloc_urb(i32 0, i32 3264) #11, !dbg !9224
  %urbs13 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9226
  %23 = load %struct.urb**, %struct.urb*** %urbs13, align 8, !dbg !9226
  %24 = load i32, i32* %i, align 4, !dbg !9227
  %idxprom = sext i32 %24 to i64, !dbg !9228
  %arrayidx = getelementptr %struct.urb*, %struct.urb** %23, i64 %idxprom, !dbg !9228
  store %struct.urb* %call12, %struct.urb** %arrayidx, align 8, !dbg !9229
  %urbs14 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9230
  %25 = load %struct.urb**, %struct.urb*** %urbs14, align 8, !dbg !9230
  %26 = load i32, i32* %i, align 4, !dbg !9232
  %idxprom15 = sext i32 %26 to i64, !dbg !9233
  %arrayidx16 = getelementptr %struct.urb*, %struct.urb** %25, i64 %idxprom15, !dbg !9233
  %27 = load %struct.urb*, %struct.urb** %arrayidx16, align 8, !dbg !9233
  %tobool17 = icmp ne %struct.urb* %27, null, !dbg !9233
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !9234

if.then18:                                        ; preds = %for.body
  br label %free_urbs, !dbg !9235

if.end19:                                         ; preds = %for.body
  %urbs20 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9236
  %28 = load %struct.urb**, %struct.urb*** %urbs20, align 8, !dbg !9236
  %29 = load i32, i32* %i, align 4, !dbg !9237
  %idxprom21 = sext i32 %29 to i64, !dbg !9238
  %arrayidx22 = getelementptr %struct.urb*, %struct.urb** %28, i64 %idxprom21, !dbg !9238
  %30 = load %struct.urb*, %struct.urb** %arrayidx22, align 8, !dbg !9238
  %31 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !9239
  %32 = load i32, i32* %pipe.addr, align 4, !dbg !9240
  %33 = load i8*, i8** %buf, align 8, !dbg !9241
  %34 = load i32, i32* %size.addr, align 4, !dbg !9242
  %35 = bitcast %struct.queued_ctx* %ctx to i8*, !dbg !9243
  call void @usb_fill_bulk_urb(%struct.urb* %30, %struct.usb_device* %31, i32 %32, i8* %33, i32 %34, void (%struct.urb*)* @unlink_queued_callback, i8* %35) #11, !dbg !9244
  %36 = load i64, i64* %buf_dma, align 8, !dbg !9245
  %urbs23 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9246
  %37 = load %struct.urb**, %struct.urb*** %urbs23, align 8, !dbg !9246
  %38 = load i32, i32* %i, align 4, !dbg !9247
  %idxprom24 = sext i32 %38 to i64, !dbg !9248
  %arrayidx25 = getelementptr %struct.urb*, %struct.urb** %37, i64 %idxprom24, !dbg !9248
  %39 = load %struct.urb*, %struct.urb** %arrayidx25, align 8, !dbg !9248
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %39, i32 0, i32 15, !dbg !9249
  store i64 %36, i64* %transfer_dma, align 8, !dbg !9250
  %urbs26 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9251
  %40 = load %struct.urb**, %struct.urb*** %urbs26, align 8, !dbg !9251
  %41 = load i32, i32* %i, align 4, !dbg !9252
  %idxprom27 = sext i32 %41 to i64, !dbg !9253
  %arrayidx28 = getelementptr %struct.urb*, %struct.urb** %40, i64 %idxprom27, !dbg !9253
  %42 = load %struct.urb*, %struct.urb** %arrayidx28, align 8, !dbg !9253
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %42, i32 0, i32 13, !dbg !9254
  store i32 4, i32* %transfer_flags, align 4, !dbg !9255
  %urbs29 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9256
  %43 = load %struct.urb**, %struct.urb*** %urbs29, align 8, !dbg !9256
  %44 = load i32, i32* %i, align 4, !dbg !9256
  %idxprom30 = sext i32 %44 to i64, !dbg !9256
  %arrayidx31 = getelementptr %struct.urb*, %struct.urb** %43, i64 %idxprom30, !dbg !9256
  %45 = load %struct.urb*, %struct.urb** %arrayidx31, align 8, !dbg !9256
  %pipe32 = getelementptr inbounds %struct.urb, %struct.urb* %45, i32 0, i32 10, !dbg !9256
  %46 = load i32, i32* %pipe32, align 8, !dbg !9256
  %and = and i32 %46, 128, !dbg !9256
  %tobool33 = icmp ne i32 %and, 0, !dbg !9256
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !9258

if.then34:                                        ; preds = %if.end19
  %urbs35 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9259
  %47 = load %struct.urb**, %struct.urb*** %urbs35, align 8, !dbg !9259
  %48 = load i32, i32* %i, align 4, !dbg !9261
  %idxprom36 = sext i32 %48 to i64, !dbg !9262
  %arrayidx37 = getelementptr %struct.urb*, %struct.urb** %47, i64 %idxprom36, !dbg !9262
  %49 = load %struct.urb*, %struct.urb** %arrayidx37, align 8, !dbg !9262
  call void @simple_fill_buf(%struct.urb* %49) #11, !dbg !9263
  %urbs38 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9264
  %50 = load %struct.urb**, %struct.urb*** %urbs38, align 8, !dbg !9264
  %51 = load i32, i32* %i, align 4, !dbg !9265
  %idxprom39 = sext i32 %51 to i64, !dbg !9266
  %arrayidx40 = getelementptr %struct.urb*, %struct.urb** %50, i64 %idxprom39, !dbg !9266
  %52 = load %struct.urb*, %struct.urb** %arrayidx40, align 8, !dbg !9266
  %transfer_flags41 = getelementptr inbounds %struct.urb, %struct.urb* %52, i32 0, i32 13, !dbg !9267
  %53 = load i32, i32* %transfer_flags41, align 4, !dbg !9268
  %or = or i32 %53, 64, !dbg !9268
  store i32 %or, i32* %transfer_flags41, align 4, !dbg !9268
  br label %if.end42, !dbg !9269

if.end42:                                         ; preds = %if.then34, %if.end19
  br label %for.inc, !dbg !9270

for.inc:                                          ; preds = %if.end42
  %54 = load i32, i32* %i, align 4, !dbg !9271
  %inc = add i32 %54, 1, !dbg !9271
  store i32 %inc, i32* %i, align 4, !dbg !9271
  br label %for.cond, !dbg !9272, !llvm.loop !9273

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9275
  br label %for.cond43, !dbg !9276

for.cond43:                                       ; preds = %for.inc59, %for.end
  %55 = load i32, i32* %i, align 4, !dbg !9277
  %56 = load i32, i32* %num.addr, align 4, !dbg !9278
  %cmp44 = icmp ult i32 %55, %56, !dbg !9279
  br i1 %cmp44, label %for.body46, label %for.end61, !dbg !9280

for.body46:                                       ; preds = %for.cond43
  %pending47 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 1, !dbg !9281
  store %struct.atomic_t* %pending47, %struct.atomic_t** %v.addr.i103, align 8
  %57 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i103, align 8, !dbg !9282
  %58 = bitcast %struct.atomic_t* %57 to i8*, !dbg !9282
  store i8* %58, i8** %v.addr.i.i101, align 8
  store i64 4, i64* %size.addr.i.i102, align 8
  %59 = load i8*, i8** %v.addr.i.i101, align 8, !dbg !9283
  %60 = load i64, i64* %size.addr.i.i102, align 8, !dbg !9284
  %conv.i.i104 = trunc i64 %60 to i32, !dbg !9284
  %call.i.i105 = call zeroext i1 @kasan_check_write(i8* %59, i32 %conv.i.i104) #14, !dbg !9285
  %61 = load i8*, i8** %v.addr.i.i101, align 8, !dbg !9286
  %62 = load i64, i64* %size.addr.i.i102, align 8, !dbg !9286
  call void @kcsan_check_access(i8* %61, i64 %62, i32 7) #14, !dbg !9286
  %63 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i103, align 8, !dbg !9287
  store %struct.atomic_t* %63, %struct.atomic_t** %v.addr.i1.i100, align 8
  %64 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i100, align 8, !dbg !9288
  %counter.i.i106 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %64, i32 0, i32 0, !dbg !9289
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i106, i32* %counter.i.i106) #10, !dbg !9290, !srcloc !9291
  %urbs48 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9292
  %65 = load %struct.urb**, %struct.urb*** %urbs48, align 8, !dbg !9292
  %66 = load i32, i32* %i, align 4, !dbg !9293
  %idxprom49 = sext i32 %66 to i64, !dbg !9294
  %arrayidx50 = getelementptr %struct.urb*, %struct.urb** %65, i64 %idxprom49, !dbg !9294
  %67 = load %struct.urb*, %struct.urb** %arrayidx50, align 8, !dbg !9294
  %call51 = call i32 @usb_submit_urb(%struct.urb* %67, i32 3264) #11, !dbg !9295
  store i32 %call51, i32* %retval1, align 4, !dbg !9296
  %68 = load i32, i32* %retval1, align 4, !dbg !9297
  %cmp52 = icmp ne i32 %68, 0, !dbg !9298
  br i1 %cmp52, label %if.then54, label %if.end58, !dbg !9299

if.then54:                                        ; preds = %for.body46
  %69 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !9300
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %69, i32 0, i32 0, !dbg !9300
  %70 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !9300
  %dev55 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %70, i32 0, i32 7, !dbg !9300
  %71 = load i32, i32* %i, align 4, !dbg !9300
  %72 = load i32, i32* %retval1, align 4, !dbg !9300
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev55, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.129, i64 0, i64 0), i32 %71, i32 %72) #12, !dbg !9300
  %pending56 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 1, !dbg !9301
  store %struct.atomic_t* %pending56, %struct.atomic_t** %v.addr.i110, align 8
  %73 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i110, align 8, !dbg !9302
  %74 = bitcast %struct.atomic_t* %73 to i8*, !dbg !9302
  store i8* %74, i8** %v.addr.i.i108, align 8
  store i64 4, i64* %size.addr.i.i109, align 8
  %75 = load i8*, i8** %v.addr.i.i108, align 8, !dbg !9303
  %76 = load i64, i64* %size.addr.i.i109, align 8, !dbg !9304
  %conv.i.i111 = trunc i64 %76 to i32, !dbg !9304
  %call.i.i112 = call zeroext i1 @kasan_check_write(i8* %75, i32 %conv.i.i111) #14, !dbg !9305
  %77 = load i8*, i8** %v.addr.i.i108, align 8, !dbg !9306
  %78 = load i64, i64* %size.addr.i.i109, align 8, !dbg !9306
  call void @kcsan_check_access(i8* %77, i64 %78, i32 7) #14, !dbg !9306
  %79 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i110, align 8, !dbg !9307
  store %struct.atomic_t* %79, %struct.atomic_t** %v.addr.i1.i107, align 8
  %80 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i107, align 8, !dbg !9308
  %counter.i.i113 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %80, i32 0, i32 0, !dbg !9309
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i113, i32* %counter.i.i113) #10, !dbg !9310, !srcloc !9311
  %81 = load i32, i32* %retval1, align 4, !dbg !9312
  %status57 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 3, !dbg !9313
  store i32 %81, i32* %status57, align 8, !dbg !9314
  br label %for.end61, !dbg !9315

if.end58:                                         ; preds = %for.body46
  br label %for.inc59, !dbg !9316

for.inc59:                                        ; preds = %if.end58
  %82 = load i32, i32* %i, align 4, !dbg !9317
  %inc60 = add i32 %82, 1, !dbg !9317
  store i32 %inc60, i32* %i, align 4, !dbg !9317
  br label %for.cond43, !dbg !9318, !llvm.loop !9319

for.end61:                                        ; preds = %if.then54, %for.cond43
  %83 = load i32, i32* %i, align 4, !dbg !9321
  %84 = load i32, i32* %num.addr, align 4, !dbg !9323
  %cmp62 = icmp eq i32 %83, %84, !dbg !9324
  br i1 %cmp62, label %if.then64, label %if.else, !dbg !9325

if.then64:                                        ; preds = %for.end61
  %urbs65 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9326
  %85 = load %struct.urb**, %struct.urb*** %urbs65, align 8, !dbg !9326
  %86 = load i32, i32* %num.addr, align 4, !dbg !9328
  %sub = sub i32 %86, 4, !dbg !9329
  %idxprom66 = zext i32 %sub to i64, !dbg !9330
  %arrayidx67 = getelementptr %struct.urb*, %struct.urb** %85, i64 %idxprom66, !dbg !9330
  %87 = load %struct.urb*, %struct.urb** %arrayidx67, align 8, !dbg !9330
  %call68 = call i32 @usb_unlink_urb(%struct.urb* %87) #11, !dbg !9331
  %urbs69 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9332
  %88 = load %struct.urb**, %struct.urb*** %urbs69, align 8, !dbg !9332
  %89 = load i32, i32* %num.addr, align 4, !dbg !9333
  %sub70 = sub i32 %89, 2, !dbg !9334
  %idxprom71 = zext i32 %sub70 to i64, !dbg !9335
  %arrayidx72 = getelementptr %struct.urb*, %struct.urb** %88, i64 %idxprom71, !dbg !9335
  %90 = load %struct.urb*, %struct.urb** %arrayidx72, align 8, !dbg !9335
  %call73 = call i32 @usb_unlink_urb(%struct.urb* %90) #11, !dbg !9336
  br label %if.end80, !dbg !9337

if.else:                                          ; preds = %for.end61
  br label %while.cond, !dbg !9338

while.cond:                                       ; preds = %while.body, %if.else
  %91 = load i32, i32* %i, align 4, !dbg !9340
  %dec = add i32 %91, -1, !dbg !9340
  store i32 %dec, i32* %i, align 4, !dbg !9340
  %cmp74 = icmp sge i32 %dec, 0, !dbg !9341
  br i1 %cmp74, label %while.body, label %while.end, !dbg !9338

while.body:                                       ; preds = %while.cond
  %urbs76 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9342
  %92 = load %struct.urb**, %struct.urb*** %urbs76, align 8, !dbg !9342
  %93 = load i32, i32* %i, align 4, !dbg !9343
  %idxprom77 = sext i32 %93 to i64, !dbg !9344
  %arrayidx78 = getelementptr %struct.urb*, %struct.urb** %92, i64 %idxprom77, !dbg !9344
  %94 = load %struct.urb*, %struct.urb** %arrayidx78, align 8, !dbg !9344
  %call79 = call i32 @usb_unlink_urb(%struct.urb* %94) #11, !dbg !9345
  br label %while.cond, !dbg !9338, !llvm.loop !9346

while.end:                                        ; preds = %while.cond
  br label %if.end80

if.end80:                                         ; preds = %while.end, %if.then64
  %pending81 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 1, !dbg !9348
  store %struct.atomic_t* %pending81, %struct.atomic_t** %v.addr.i117, align 8
  %95 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i117, align 8, !dbg !9349
  %96 = bitcast %struct.atomic_t* %95 to i8*, !dbg !9349
  store i8* %96, i8** %v.addr.i.i115, align 8
  store i64 4, i64* %size.addr.i.i116, align 8
  %97 = load i8*, i8** %v.addr.i.i115, align 8, !dbg !9350
  %98 = load i64, i64* %size.addr.i.i116, align 8, !dbg !9351
  %conv.i.i118 = trunc i64 %98 to i32, !dbg !9351
  %call.i.i119 = call zeroext i1 @kasan_check_write(i8* %97, i32 %conv.i.i118) #14, !dbg !9352
  %99 = load i8*, i8** %v.addr.i.i115, align 8, !dbg !9353
  %100 = load i64, i64* %size.addr.i.i116, align 8, !dbg !9353
  call void @kcsan_check_access(i8* %99, i64 %100, i32 7) #14, !dbg !9353
  %101 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i117, align 8, !dbg !9354
  store %struct.atomic_t* %101, %struct.atomic_t** %v.addr.i1.i114, align 8
  %102 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i114, align 8, !dbg !9086
  %counter.i.i120 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %102, i32 0, i32 0, !dbg !9086
  %103 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i120, i32* %counter.i.i120) #10, !dbg !9086, !srcloc !9355
  store i8 %103, i8* %c.i.i, align 1, !dbg !9086
  %104 = load i8, i8* %c.i.i, align 1, !dbg !9086
  %tobool.i.i = trunc i8 %104 to i1, !dbg !9086
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !9086
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !9086
  %105 = load i8, i8* %tmp.i.i, align 1, !dbg !9086
  %tobool1.i.i = trunc i8 %105 to i1, !dbg !9086
  br i1 %tobool1.i.i, label %if.then83, label %if.end85, !dbg !9356

if.then83:                                        ; preds = %if.end80
  %complete84 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 0, !dbg !9357
  call void @complete(%struct.completion* %complete84) #11, !dbg !9358
  br label %if.end85, !dbg !9358

if.end85:                                         ; preds = %if.then83, %if.end80
  %complete86 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 0, !dbg !9359
  call void @wait_for_completion(%struct.completion* %complete86) #11, !dbg !9360
  %status87 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 3, !dbg !9361
  %106 = load i32, i32* %status87, align 8, !dbg !9361
  store i32 %106, i32* %retval1, align 4, !dbg !9362
  br label %free_urbs, !dbg !9363

free_urbs:                                        ; preds = %if.end85, %if.then18
  call void @llvm.dbg.label(metadata !9364), !dbg !9365
  store i32 0, i32* %i, align 4, !dbg !9366
  br label %for.cond88, !dbg !9368

for.cond88:                                       ; preds = %for.inc95, %free_urbs
  %107 = load i32, i32* %i, align 4, !dbg !9369
  %108 = load i32, i32* %num.addr, align 4, !dbg !9371
  %cmp89 = icmp ult i32 %107, %108, !dbg !9372
  br i1 %cmp89, label %for.body91, label %for.end97, !dbg !9373

for.body91:                                       ; preds = %for.cond88
  %urbs92 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9374
  %109 = load %struct.urb**, %struct.urb*** %urbs92, align 8, !dbg !9374
  %110 = load i32, i32* %i, align 4, !dbg !9375
  %idxprom93 = sext i32 %110 to i64, !dbg !9376
  %arrayidx94 = getelementptr %struct.urb*, %struct.urb** %109, i64 %idxprom93, !dbg !9376
  %111 = load %struct.urb*, %struct.urb** %arrayidx94, align 8, !dbg !9376
  call void @usb_free_urb(%struct.urb* %111) #11, !dbg !9377
  br label %for.inc95, !dbg !9377

for.inc95:                                        ; preds = %for.body91
  %112 = load i32, i32* %i, align 4, !dbg !9378
  %inc96 = add i32 %112, 1, !dbg !9378
  store i32 %inc96, i32* %i, align 4, !dbg !9378
  br label %for.cond88, !dbg !9379, !llvm.loop !9380

for.end97:                                        ; preds = %for.cond88
  %urbs98 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %ctx, i32 0, i32 4, !dbg !9382
  %113 = load %struct.urb**, %struct.urb*** %urbs98, align 8, !dbg !9382
  %114 = bitcast %struct.urb** %113 to i8*, !dbg !9383
  call void @kfree(i8* %114) #11, !dbg !9384
  br label %free_buf, !dbg !9384

free_buf:                                         ; preds = %for.end97, %if.then9
  call void @llvm.dbg.label(metadata !9385), !dbg !9386
  %115 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !9387
  %116 = load i32, i32* %size.addr, align 4, !dbg !9388
  %conv99 = zext i32 %116 to i64, !dbg !9388
  %117 = load i8*, i8** %buf, align 8, !dbg !9389
  %118 = load i64, i64* %buf_dma, align 8, !dbg !9390
  call void @usb_free_coherent(%struct.usb_device* %115, i64 %conv99, i8* %117, i64 %118) #11, !dbg !9391
  %119 = load i32, i32* %retval1, align 4, !dbg !9392
  store i32 %119, i32* %retval, align 4, !dbg !9393
  br label %return, !dbg !9393

return:                                           ; preds = %free_buf, %if.then
  %120 = load i32, i32* %retval, align 4, !dbg !9394
  ret i32 %120, !dbg !9394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @toggle_sync_simple(%struct.usbtest_dev* %dev) #2 !dbg !9395 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %ep = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %urb = alloca %struct.urb*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %maxp = alloca i32, align 4
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !9396, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.declare(metadata i32* %ep, metadata !9398, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9400, metadata !DIExpression()), !dbg !9401
  store i32 0, i32* %retval1, align 4, !dbg !9401
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !9402, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !9404, metadata !DIExpression()), !dbg !9405
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !9406
  %call = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %0) #11, !dbg !9407
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !9405
  call void @llvm.dbg.declare(metadata i32* %maxp, metadata !9408, metadata !DIExpression()), !dbg !9409
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !9410
  %2 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !9411
  %out_pipe = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %2, i32 0, i32 3, !dbg !9412
  %3 = load i32, i32* %out_pipe, align 4, !dbg !9412
  %call2 = call i32 @get_maxpacket(%struct.usb_device* %1, i32 %3) #11, !dbg !9413
  store i32 %call2, i32* %maxp, align 4, !dbg !9409
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !9414
  %5 = load i32, i32* %maxp, align 4, !dbg !9415
  %mul = mul i32 2, %5, !dbg !9416
  %conv = zext i32 %mul to i64, !dbg !9417
  %call3 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %4, i32 0, i64 %conv, i8 zeroext 0) #11, !dbg !9418
  store %struct.urb* %call3, %struct.urb** %urb, align 8, !dbg !9419
  %6 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9420
  %cmp = icmp eq %struct.urb* %6, null, !dbg !9422
  br i1 %cmp, label %if.then, label %if.end, !dbg !9423

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9424
  br label %return, !dbg !9424

if.end:                                           ; preds = %entry
  %7 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9425
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 13, !dbg !9426
  %8 = load i32, i32* %transfer_flags, align 4, !dbg !9427
  %or = or i32 %8, 64, !dbg !9427
  store i32 %or, i32* %transfer_flags, align 4, !dbg !9427
  %9 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !9428
  %out_pipe5 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %9, i32 0, i32 3, !dbg !9428
  %10 = load i32, i32* %out_pipe5, align 4, !dbg !9428
  %shr = ashr i32 %10, 15, !dbg !9428
  %and = and i32 %shr, 15, !dbg !9428
  store i32 %and, i32* %ep, align 4, !dbg !9429
  %11 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !9430
  %out_pipe6 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %11, i32 0, i32 3, !dbg !9431
  %12 = load i32, i32* %out_pipe6, align 4, !dbg !9431
  %13 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9432
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %13, i32 0, i32 10, !dbg !9433
  store i32 %12, i32* %pipe, align 8, !dbg !9434
  %14 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !9435
  %15 = load i32, i32* %ep, align 4, !dbg !9436
  %16 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9437
  %call7 = call i32 @test_toggle_sync(%struct.usbtest_dev* %14, i32 %15, %struct.urb* %16) #11, !dbg !9438
  store i32 %call7, i32* %retval1, align 4, !dbg !9439
  %17 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9440
  call void @simple_free_urb(%struct.urb* %17) #11, !dbg !9441
  %18 = load i32, i32* %retval1, align 4, !dbg !9442
  store i32 %18, i32* %retval, align 4, !dbg !9443
  br label %return, !dbg !9443

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !9444
  ret i32 %19, !dbg !9444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.urb* @usbtest_alloc_urb(%struct.usb_device* %udev, i32 %pipe, i64 %bytes, i32 %transfer_flags, i32 %offset, i8 zeroext %bInterval, void (%struct.urb*)* %complete_fn) #2 !dbg !9445 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4460, metadata !DIExpression()), !dbg !9448
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4472, metadata !DIExpression()), !dbg !9452
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4474, metadata !DIExpression()), !dbg !9453
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4476, metadata !DIExpression()), !dbg !9454
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4478, metadata !DIExpression()), !dbg !9455
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4484, metadata !DIExpression()), !dbg !9457
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4490, metadata !DIExpression()), !dbg !9459
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4499, metadata !DIExpression()), !dbg !9462
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4501, metadata !DIExpression()), !dbg !9463
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4503, metadata !DIExpression()), !dbg !9464
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4505, metadata !DIExpression()), !dbg !9465
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4507, metadata !DIExpression()), !dbg !9466
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4509, metadata !DIExpression()), !dbg !9467
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4511, metadata !DIExpression()), !dbg !9468
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4513, metadata !DIExpression()), !dbg !9469
  %retval = alloca %struct.urb*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %bytes.addr = alloca i64, align 8
  %transfer_flags.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %bInterval.addr = alloca i8, align 1
  %complete_fn.addr = alloca void (%struct.urb*)*, align 8
  %urb = alloca %struct.urb*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !9470, metadata !DIExpression()), !dbg !9471
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !9472, metadata !DIExpression()), !dbg !9473
  store i64 %bytes, i64* %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr, metadata !9474, metadata !DIExpression()), !dbg !9475
  store i32 %transfer_flags, i32* %transfer_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %transfer_flags.addr, metadata !9476, metadata !DIExpression()), !dbg !9477
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9478, metadata !DIExpression()), !dbg !9479
  store i8 %bInterval, i8* %bInterval.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bInterval.addr, metadata !9480, metadata !DIExpression()), !dbg !9481
  store void (%struct.urb*)* %complete_fn, void (%struct.urb*)** %complete_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.urb*)** %complete_fn.addr, metadata !9482, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !9484, metadata !DIExpression()), !dbg !9485
  %call = call %struct.urb* @usb_alloc_urb(i32 0, i32 3264) #11, !dbg !9486
  store %struct.urb* %call, %struct.urb** %urb, align 8, !dbg !9487
  %0 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9488
  %tobool = icmp ne %struct.urb* %0, null, !dbg !9488
  br i1 %tobool, label %if.end, label %if.then, !dbg !9490

if.then:                                          ; preds = %entry
  %1 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9491
  store %struct.urb* %1, %struct.urb** %retval, align 8, !dbg !9492
  br label %return, !dbg !9492

if.end:                                           ; preds = %entry
  %2 = load i8, i8* %bInterval.addr, align 1, !dbg !9493
  %tobool1 = icmp ne i8 %2, 0, !dbg !9493
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !9495

if.then2:                                         ; preds = %if.end
  %3 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9496
  %4 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !9497
  %5 = load i32, i32* %pipe.addr, align 4, !dbg !9498
  %6 = load i64, i64* %bytes.addr, align 8, !dbg !9499
  %conv = trunc i64 %6 to i32, !dbg !9499
  %7 = load void (%struct.urb*)*, void (%struct.urb*)** %complete_fn.addr, align 8, !dbg !9500
  %8 = load i8, i8* %bInterval.addr, align 1, !dbg !9501
  %conv3 = zext i8 %8 to i32, !dbg !9501
  call void @usb_fill_int_urb(%struct.urb* %3, %struct.usb_device* %4, i32 %5, i8* null, i32 %conv, void (%struct.urb*)* %7, i8* null, i32 %conv3) #11, !dbg !9502
  br label %if.end5, !dbg !9502

if.else:                                          ; preds = %if.end
  %9 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9503
  %10 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !9504
  %11 = load i32, i32* %pipe.addr, align 4, !dbg !9505
  %12 = load i64, i64* %bytes.addr, align 8, !dbg !9506
  %conv4 = trunc i64 %12 to i32, !dbg !9506
  %13 = load void (%struct.urb*)*, void (%struct.urb*)** %complete_fn.addr, align 8, !dbg !9507
  call void @usb_fill_bulk_urb(%struct.urb* %9, %struct.usb_device* %10, i32 %11, i8* null, i32 %conv4, void (%struct.urb*)* %13, i8* null) #11, !dbg !9508
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %14 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !9509
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %14, i32 0, i32 4, !dbg !9510
  %15 = load i32, i32* %speed, align 4, !dbg !9510
  %cmp = icmp eq i32 %15, 3, !dbg !9511
  %16 = zext i1 %cmp to i64, !dbg !9512
  %cond = select i1 %cmp, i32 8, i32 1, !dbg !9512
  %17 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9513
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %17, i32 0, i32 25, !dbg !9514
  store i32 %cond, i32* %interval, align 8, !dbg !9515
  %18 = load i32, i32* %transfer_flags.addr, align 4, !dbg !9516
  %19 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9517
  %transfer_flags7 = getelementptr inbounds %struct.urb, %struct.urb* %19, i32 0, i32 13, !dbg !9518
  store i32 %18, i32* %transfer_flags7, align 4, !dbg !9519
  %20 = load i32, i32* %pipe.addr, align 4, !dbg !9520
  %and = and i32 %20, 128, !dbg !9520
  %tobool8 = icmp ne i32 %and, 0, !dbg !9520
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !9522

if.then9:                                         ; preds = %if.end5
  %21 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9523
  %transfer_flags10 = getelementptr inbounds %struct.urb, %struct.urb* %21, i32 0, i32 13, !dbg !9524
  %22 = load i32, i32* %transfer_flags10, align 4, !dbg !9525
  %or = or i32 %22, 1, !dbg !9525
  store i32 %or, i32* %transfer_flags10, align 4, !dbg !9525
  br label %if.end11, !dbg !9523

if.end11:                                         ; preds = %if.then9, %if.end5
  %23 = load i64, i64* %bytes.addr, align 8, !dbg !9526
  %24 = load i32, i32* %offset.addr, align 4, !dbg !9528
  %conv12 = zext i32 %24 to i64, !dbg !9528
  %add = add i64 %23, %conv12, !dbg !9529
  %cmp13 = icmp eq i64 %add, 0, !dbg !9530
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !9531

if.then15:                                        ; preds = %if.end11
  %25 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9532
  store %struct.urb* %25, %struct.urb** %retval, align 8, !dbg !9533
  br label %return, !dbg !9533

if.end16:                                         ; preds = %if.end11
  %26 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9534
  %transfer_flags17 = getelementptr inbounds %struct.urb, %struct.urb* %26, i32 0, i32 13, !dbg !9535
  %27 = load i32, i32* %transfer_flags17, align 4, !dbg !9535
  %and18 = and i32 %27, 4, !dbg !9536
  %tobool19 = icmp ne i32 %and18, 0, !dbg !9536
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !9537

if.then20:                                        ; preds = %if.end16
  %28 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !9538
  %29 = load i64, i64* %bytes.addr, align 8, !dbg !9539
  %30 = load i32, i32* %offset.addr, align 4, !dbg !9540
  %conv21 = zext i32 %30 to i64, !dbg !9540
  %add22 = add i64 %29, %conv21, !dbg !9541
  %31 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9542
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %31, i32 0, i32 15, !dbg !9543
  %call23 = call i8* @usb_alloc_coherent(%struct.usb_device* %28, i64 %add22, i32 3264, i64* %transfer_dma) #11, !dbg !9544
  %32 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9545
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %32, i32 0, i32 14, !dbg !9546
  store i8* %call23, i8** %transfer_buffer, align 8, !dbg !9547
  br label %if.end29, !dbg !9545

if.else24:                                        ; preds = %if.end16
  %33 = load i64, i64* %bytes.addr, align 8, !dbg !9548
  %34 = load i32, i32* %offset.addr, align 4, !dbg !9549
  %conv25 = zext i32 %34 to i64, !dbg !9549
  %add26 = add i64 %33, %conv25, !dbg !9550
  store i64 %add26, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %35 = load i64, i64* %size.addr.i, align 8, !dbg !9551
  %36 = call i1 @llvm.is.constant.i64(i64 %35) #10, !dbg !9552
  br i1 %36, label %if.then.i, label %if.end9.i, !dbg !9553

if.then.i:                                        ; preds = %if.else24
  %37 = load i64, i64* %size.addr.i, align 8, !dbg !9554
  %cmp.i = icmp ugt i64 %37, 8192, !dbg !9555
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9556

if.then1.i:                                       ; preds = %if.then.i
  %38 = load i64, i64* %size.addr.i, align 8, !dbg !9557
  %39 = load i32, i32* %flags.addr.i, align 4, !dbg !9558
  store i64 %38, i64* %size.addr.i.i, align 8
  store i32 %39, i32* %flags.addr.i.i, align 4
  %40 = load i64, i64* %size.addr.i.i, align 8, !dbg !9559
  %call.i.i = call i32 @get_order(i64 %40) #13, !dbg !9560
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9466
  %41 = load i64, i64* %size.addr.i.i, align 8, !dbg !9561
  %42 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9562
  %43 = load i32, i32* %order.i.i, align 4, !dbg !9563
  store i64 %41, i64* %size.addr.i.i.i, align 8
  store i32 %42, i32* %flags.addr.i.i.i, align 4
  store i32 %43, i32* %order.addr.i.i.i, align 4
  %44 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9564
  %45 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9565
  %46 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9566
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %44, i32 %45, i32 %46) #14, !dbg !9567
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9567
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9567
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9567
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !9567
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9568
  br label %kmalloc.exit, !dbg !9568

if.end.i:                                         ; preds = %if.then.i
  %47 = load i64, i64* %size.addr.i, align 8, !dbg !9569
  store i64 %47, i64* %size.addr.i11.i, align 8
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9570
  %tobool.i.i = icmp ne i64 %48, 0, !dbg !9570
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9571

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9572
  br label %kmalloc_index.exit.i, !dbg !9572

if.end.i.i:                                       ; preds = %if.end.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9573
  %cmp.i.i = icmp ule i64 %49, 8, !dbg !9574
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9575

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9576
  br label %kmalloc_index.exit.i, !dbg !9576

if.end2.i.i:                                      ; preds = %if.end.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9577
  %cmp3.i.i = icmp ugt i64 %50, 64, !dbg !9578
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9579

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9580
  %cmp4.i.i = icmp ule i64 %51, 96, !dbg !9581
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9582

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9583
  br label %kmalloc_index.exit.i, !dbg !9583

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9584
  %cmp7.i.i = icmp ugt i64 %52, 128, !dbg !9585
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9586

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9587
  %cmp9.i.i = icmp ule i64 %53, 192, !dbg !9588
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9589

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9590
  br label %kmalloc_index.exit.i, !dbg !9590

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9591
  %cmp12.i.i = icmp ule i64 %54, 8, !dbg !9592
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9593

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9594
  br label %kmalloc_index.exit.i, !dbg !9594

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9595
  %cmp15.i.i = icmp ule i64 %55, 16, !dbg !9596
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9597

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9598
  br label %kmalloc_index.exit.i, !dbg !9598

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9599
  %cmp18.i.i = icmp ule i64 %56, 32, !dbg !9600
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9601

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9602
  br label %kmalloc_index.exit.i, !dbg !9602

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9603
  %cmp21.i.i = icmp ule i64 %57, 64, !dbg !9604
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9605

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9606
  br label %kmalloc_index.exit.i, !dbg !9606

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9607
  %cmp24.i.i = icmp ule i64 %58, 128, !dbg !9608
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9609

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9610
  br label %kmalloc_index.exit.i, !dbg !9610

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9611
  %cmp27.i.i = icmp ule i64 %59, 256, !dbg !9612
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9613

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9614
  br label %kmalloc_index.exit.i, !dbg !9614

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9615
  %cmp30.i.i = icmp ule i64 %60, 512, !dbg !9616
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9617

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9618
  br label %kmalloc_index.exit.i, !dbg !9618

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9619
  %cmp33.i.i = icmp ule i64 %61, 1024, !dbg !9620
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9621

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9622
  br label %kmalloc_index.exit.i, !dbg !9622

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9623
  %cmp36.i.i = icmp ule i64 %62, 2048, !dbg !9624
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9625

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9626
  br label %kmalloc_index.exit.i, !dbg !9626

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9627
  %cmp39.i.i = icmp ule i64 %63, 4096, !dbg !9628
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9629

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9630
  br label %kmalloc_index.exit.i, !dbg !9630

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9631
  %cmp42.i.i = icmp ule i64 %64, 8192, !dbg !9632
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9633

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9634
  br label %kmalloc_index.exit.i, !dbg !9634

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %65 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9635
  %cmp45.i.i = icmp ule i64 %65, 16384, !dbg !9636
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9637

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9638
  br label %kmalloc_index.exit.i, !dbg !9638

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %66 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9639
  %cmp48.i.i = icmp ule i64 %66, 32768, !dbg !9640
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9641

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9642
  br label %kmalloc_index.exit.i, !dbg !9642

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %67 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9643
  %cmp51.i.i = icmp ule i64 %67, 65536, !dbg !9644
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9645

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9646
  br label %kmalloc_index.exit.i, !dbg !9646

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %68 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9647
  %cmp54.i.i = icmp ule i64 %68, 131072, !dbg !9648
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9649

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9650
  br label %kmalloc_index.exit.i, !dbg !9650

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %69 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9651
  %cmp57.i.i = icmp ule i64 %69, 262144, !dbg !9652
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9653

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9654
  br label %kmalloc_index.exit.i, !dbg !9654

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %70 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9655
  %cmp60.i.i = icmp ule i64 %70, 524288, !dbg !9656
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9657

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9658
  br label %kmalloc_index.exit.i, !dbg !9658

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %71 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9659
  %cmp63.i.i = icmp ule i64 %71, 1048576, !dbg !9660
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9661

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9662
  br label %kmalloc_index.exit.i, !dbg !9662

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %72 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9663
  %cmp66.i.i = icmp ule i64 %72, 2097152, !dbg !9664
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9665

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9666
  br label %kmalloc_index.exit.i, !dbg !9666

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %73 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9667
  %cmp69.i.i = icmp ule i64 %73, 4194304, !dbg !9668
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9669

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9670
  br label %kmalloc_index.exit.i, !dbg !9670

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %74 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9671
  %cmp72.i.i = icmp ule i64 %74, 8388608, !dbg !9672
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9673

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9674
  br label %kmalloc_index.exit.i, !dbg !9674

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %75 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9675
  %cmp75.i.i = icmp ule i64 %75, 16777216, !dbg !9676
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9677

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9678
  br label %kmalloc_index.exit.i, !dbg !9678

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %76 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9679
  %cmp78.i.i = icmp ule i64 %76, 33554432, !dbg !9680
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9681

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9682
  br label %kmalloc_index.exit.i, !dbg !9682

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %77 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9683
  %cmp81.i.i = icmp ule i64 %77, 67108864, !dbg !9684
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9685

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9686
  br label %kmalloc_index.exit.i, !dbg !9686

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !9687, !srcloc !4773
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !9688, !srcloc !4777
  unreachable, !dbg !9689

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %78 = load i32, i32* %retval.i.i, align 4, !dbg !9690
  store i32 %78, i32* %index.i, align 4, !dbg !9691
  %79 = load i32, i32* %index.i, align 4, !dbg !9692
  %tobool.i = icmp ne i32 %79, 0, !dbg !9692
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9693

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9694
  br label %kmalloc.exit, !dbg !9694

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %80 = load i32, i32* %flags.addr.i, align 4, !dbg !9695
  store i32 %80, i32* %flags.addr.i13.i, align 4
  %81 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9696
  %and.i.i = and i32 %81, 17, !dbg !9696
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9696
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9696
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9696
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9696
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9697

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9698
  br label %kmalloc_type.exit.i, !dbg !9698

if.end.i16.i:                                     ; preds = %if.end4.i
  %82 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9699
  %and2.i.i = and i32 %82, 1, !dbg !9700
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9699
  %83 = zext i1 %tobool3.i.i to i64, !dbg !9699
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9699
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9701
  br label %kmalloc_type.exit.i, !dbg !9701

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %84 = load i32, i32* %retval.i12.i, align 4, !dbg !9702
  %idxprom.i = zext i32 %84 to i64, !dbg !9703
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9703
  %85 = load i32, i32* %index.i, align 4, !dbg !9704
  %idxprom6.i = zext i32 %85 to i64, !dbg !9703
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9703
  %86 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9703
  %87 = load i32, i32* %flags.addr.i, align 4, !dbg !9705
  %88 = load i64, i64* %size.addr.i, align 8, !dbg !9706
  store %struct.kmem_cache* %86, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %87, i32* %flags.addr.i17.i, align 4
  store i64 %88, i64* %size.addr.i18.i, align 8
  %89 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9707
  %90 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9708
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %89, i32 %90) #14, !dbg !9709
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9709
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9709
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9709
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !9709
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9454
  %91 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9710
  %92 = load i8*, i8** %ret.i.i, align 8, !dbg !9711
  %93 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9712
  %94 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9713
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %91, i8* %92, i64 %93, i32 %94) #14, !dbg !9714
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9715
  %95 = load i8*, i8** %ret.i.i, align 8, !dbg !9716
  store i8* %95, i8** %retval.i, align 8, !dbg !9717
  br label %kmalloc.exit, !dbg !9717

if.end9.i:                                        ; preds = %if.else24
  %96 = load i64, i64* %size.addr.i, align 8, !dbg !9718
  %97 = load i32, i32* %flags.addr.i, align 4, !dbg !9719
  %call10.i = call noalias i8* @__kmalloc(i64 %96, i32 %97) #14, !dbg !9720
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9720
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9720
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9720
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !9720
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9721
  br label %kmalloc.exit, !dbg !9721

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %98 = load i8*, i8** %retval.i, align 8, !dbg !9722
  %99 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9723
  %transfer_buffer28 = getelementptr inbounds %struct.urb, %struct.urb* %99, i32 0, i32 14, !dbg !9724
  store i8* %98, i8** %transfer_buffer28, align 8, !dbg !9725
  br label %if.end29

if.end29:                                         ; preds = %kmalloc.exit, %if.then20
  %100 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9726
  %transfer_buffer30 = getelementptr inbounds %struct.urb, %struct.urb* %100, i32 0, i32 14, !dbg !9728
  %101 = load i8*, i8** %transfer_buffer30, align 8, !dbg !9728
  %tobool31 = icmp ne i8* %101, null, !dbg !9726
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !9729

if.then32:                                        ; preds = %if.end29
  %102 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9730
  call void @usb_free_urb(%struct.urb* %102) #11, !dbg !9732
  store %struct.urb* null, %struct.urb** %retval, align 8, !dbg !9733
  br label %return, !dbg !9733

if.end33:                                         ; preds = %if.end29
  %103 = load i32, i32* %offset.addr, align 4, !dbg !9734
  %tobool34 = icmp ne i32 %103, 0, !dbg !9734
  br i1 %tobool34, label %if.then35, label %if.end47, !dbg !9736

if.then35:                                        ; preds = %if.end33
  %104 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9737
  %transfer_buffer36 = getelementptr inbounds %struct.urb, %struct.urb* %104, i32 0, i32 14, !dbg !9739
  %105 = load i8*, i8** %transfer_buffer36, align 8, !dbg !9739
  %106 = load i32, i32* %offset.addr, align 4, !dbg !9740
  %conv37 = zext i32 %106 to i64, !dbg !9740
  call void @llvm.memset.p0i8.i64(i8* align 1 %105, i8 -91, i64 %conv37, i1 false), !dbg !9741
  %107 = load i32, i32* %offset.addr, align 4, !dbg !9742
  %108 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9743
  %transfer_buffer38 = getelementptr inbounds %struct.urb, %struct.urb* %108, i32 0, i32 14, !dbg !9744
  %109 = load i8*, i8** %transfer_buffer38, align 8, !dbg !9745
  %idx.ext = zext i32 %107 to i64, !dbg !9745
  %add.ptr = getelementptr i8, i8* %109, i64 %idx.ext, !dbg !9745
  store i8* %add.ptr, i8** %transfer_buffer38, align 8, !dbg !9745
  %110 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9746
  %transfer_flags39 = getelementptr inbounds %struct.urb, %struct.urb* %110, i32 0, i32 13, !dbg !9748
  %111 = load i32, i32* %transfer_flags39, align 4, !dbg !9748
  %and40 = and i32 %111, 4, !dbg !9749
  %tobool41 = icmp ne i32 %and40, 0, !dbg !9749
  br i1 %tobool41, label %if.then42, label %if.end46, !dbg !9750

if.then42:                                        ; preds = %if.then35
  %112 = load i32, i32* %offset.addr, align 4, !dbg !9751
  %conv43 = zext i32 %112 to i64, !dbg !9751
  %113 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9752
  %transfer_dma44 = getelementptr inbounds %struct.urb, %struct.urb* %113, i32 0, i32 15, !dbg !9753
  %114 = load i64, i64* %transfer_dma44, align 8, !dbg !9754
  %add45 = add i64 %114, %conv43, !dbg !9754
  store i64 %add45, i64* %transfer_dma44, align 8, !dbg !9754
  br label %if.end46, !dbg !9752

if.end46:                                         ; preds = %if.then42, %if.then35
  br label %if.end47, !dbg !9755

if.end47:                                         ; preds = %if.end46, %if.end33
  %115 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9756
  %transfer_buffer48 = getelementptr inbounds %struct.urb, %struct.urb* %115, i32 0, i32 14, !dbg !9757
  %116 = load i8*, i8** %transfer_buffer48, align 8, !dbg !9757
  %117 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9758
  %pipe49 = getelementptr inbounds %struct.urb, %struct.urb* %117, i32 0, i32 10, !dbg !9758
  %118 = load i32, i32* %pipe49, align 8, !dbg !9758
  %and50 = and i32 %118, 128, !dbg !9758
  %tobool51 = icmp ne i32 %and50, 0, !dbg !9758
  %119 = zext i1 %tobool51 to i64, !dbg !9758
  %cond52 = select i1 %tobool51, i32 165, i32 0, !dbg !9758
  %120 = trunc i32 %cond52 to i8, !dbg !9759
  %121 = load i64, i64* %bytes.addr, align 8, !dbg !9760
  call void @llvm.memset.p0i8.i64(i8* align 1 %116, i8 %120, i64 %121, i1 false), !dbg !9759
  %122 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !9761
  store %struct.urb* %122, %struct.urb** %retval, align 8, !dbg !9762
  br label %return, !dbg !9762

return:                                           ; preds = %if.end47, %if.then32, %if.then15, %if.then
  %123 = load %struct.urb*, %struct.urb** %retval, align 8, !dbg !9763
  ret %struct.urb* %123, !dbg !9763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @simple_callback(%struct.urb* %urb) #2 !dbg !9764 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9767
  %context = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 27, !dbg !9768
  %1 = load i8*, i8** %context, align 8, !dbg !9768
  %2 = bitcast i8* %1 to %struct.completion*, !dbg !9767
  call void @complete(%struct.completion* %2) #11, !dbg !9769
  ret void, !dbg !9770
}

; Function Attrs: noredzone
declare dso_local %struct.urb* @usb_alloc_urb(i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_fill_int_urb(%struct.urb* %urb, %struct.usb_device* %dev, i32 %pipe, i8* %transfer_buffer, i32 %buffer_length, void (%struct.urb*)* %complete_fn, i8* %context, i32 %interval) #2 !dbg !9771 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %dev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %transfer_buffer.addr = alloca i8*, align 8
  %buffer_length.addr = alloca i32, align 4
  %complete_fn.addr = alloca void (%struct.urb*)*, align 8
  %context.addr = alloca i8*, align 8
  %interval.addr = alloca i32, align 4
  %__UNIQUE_ID___x232 = alloca i32, align 4
  %__UNIQUE_ID___x230 = alloca i32, align 4
  %__UNIQUE_ID___y231 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___y233 = alloca i32, align 4
  %tmp8 = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !9774, metadata !DIExpression()), !dbg !9775
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !9776, metadata !DIExpression()), !dbg !9777
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !9778, metadata !DIExpression()), !dbg !9779
  store i8* %transfer_buffer, i8** %transfer_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %transfer_buffer.addr, metadata !9780, metadata !DIExpression()), !dbg !9781
  store i32 %buffer_length, i32* %buffer_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_length.addr, metadata !9782, metadata !DIExpression()), !dbg !9783
  store void (%struct.urb*)* %complete_fn, void (%struct.urb*)** %complete_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.urb*)** %complete_fn.addr, metadata !9784, metadata !DIExpression()), !dbg !9785
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9786, metadata !DIExpression()), !dbg !9787
  store i32 %interval, i32* %interval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interval.addr, metadata !9788, metadata !DIExpression()), !dbg !9789
  %0 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !9790
  %1 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9791
  %dev1 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 8, !dbg !9792
  store %struct.usb_device* %0, %struct.usb_device** %dev1, align 8, !dbg !9793
  %2 = load i32, i32* %pipe.addr, align 4, !dbg !9794
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9795
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 10, !dbg !9796
  store i32 %2, i32* %pipe2, align 8, !dbg !9797
  %4 = load i8*, i8** %transfer_buffer.addr, align 8, !dbg !9798
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9799
  %transfer_buffer3 = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 14, !dbg !9800
  store i8* %4, i8** %transfer_buffer3, align 8, !dbg !9801
  %6 = load i32, i32* %buffer_length.addr, align 4, !dbg !9802
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9803
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 19, !dbg !9804
  store i32 %6, i32* %transfer_buffer_length, align 8, !dbg !9805
  %8 = load void (%struct.urb*)*, void (%struct.urb*)** %complete_fn.addr, align 8, !dbg !9806
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9807
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 28, !dbg !9808
  store void (%struct.urb*)* %8, void (%struct.urb*)** %complete, align 8, !dbg !9809
  %10 = load i8*, i8** %context.addr, align 8, !dbg !9810
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9811
  %context4 = getelementptr inbounds %struct.urb, %struct.urb* %11, i32 0, i32 27, !dbg !9812
  store i8* %10, i8** %context4, align 8, !dbg !9813
  %12 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !9814
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 4, !dbg !9816
  %13 = load i32, i32* %speed, align 4, !dbg !9816
  %cmp = icmp eq i32 %13, 3, !dbg !9817
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9818

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !9819
  %speed5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %14, i32 0, i32 4, !dbg !9820
  %15 = load i32, i32* %speed5, align 4, !dbg !9820
  %cmp6 = icmp uge i32 %15, 5, !dbg !9821
  br i1 %cmp6, label %if.then, label %if.else, !dbg !9822

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x232, metadata !9823, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x230, metadata !9827, metadata !DIExpression()), !dbg !9829
  %16 = load i32, i32* %interval.addr, align 4, !dbg !9829
  store i32 %16, i32* %__UNIQUE_ID___x230, align 4, !dbg !9829
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y231, metadata !9830, metadata !DIExpression()), !dbg !9829
  store i32 1, i32* %__UNIQUE_ID___y231, align 4, !dbg !9829
  %17 = load i32, i32* %__UNIQUE_ID___x230, align 4, !dbg !9829
  %18 = load i32, i32* %__UNIQUE_ID___y231, align 4, !dbg !9829
  %cmp7 = icmp sgt i32 %17, %18, !dbg !9829
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !9829

cond.true:                                        ; preds = %if.then
  %19 = load i32, i32* %__UNIQUE_ID___x230, align 4, !dbg !9829
  br label %cond.end, !dbg !9829

cond.false:                                       ; preds = %if.then
  %20 = load i32, i32* %__UNIQUE_ID___y231, align 4, !dbg !9829
  br label %cond.end, !dbg !9829

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %19, %cond.true ], [ %20, %cond.false ], !dbg !9829
  store i32 %cond, i32* %tmp, align 4, !dbg !9829
  %21 = load i32, i32* %tmp, align 4, !dbg !9829
  store i32 %21, i32* %__UNIQUE_ID___x232, align 4, !dbg !9826
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y233, metadata !9831, metadata !DIExpression()), !dbg !9826
  store i32 16, i32* %__UNIQUE_ID___y233, align 4, !dbg !9826
  %22 = load i32, i32* %__UNIQUE_ID___x232, align 4, !dbg !9826
  %23 = load i32, i32* %__UNIQUE_ID___y233, align 4, !dbg !9826
  %cmp9 = icmp slt i32 %22, %23, !dbg !9826
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !9826

cond.true10:                                      ; preds = %cond.end
  %24 = load i32, i32* %__UNIQUE_ID___x232, align 4, !dbg !9826
  br label %cond.end12, !dbg !9826

cond.false11:                                     ; preds = %cond.end
  %25 = load i32, i32* %__UNIQUE_ID___y233, align 4, !dbg !9826
  br label %cond.end12, !dbg !9826

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond13 = phi i32 [ %24, %cond.true10 ], [ %25, %cond.false11 ], !dbg !9826
  store i32 %cond13, i32* %tmp8, align 4, !dbg !9826
  %26 = load i32, i32* %tmp8, align 4, !dbg !9826
  store i32 %26, i32* %interval.addr, align 4, !dbg !9832
  %27 = load i32, i32* %interval.addr, align 4, !dbg !9833
  %sub = sub i32 %27, 1, !dbg !9834
  %shl = shl i32 1, %sub, !dbg !9835
  %28 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9836
  %interval14 = getelementptr inbounds %struct.urb, %struct.urb* %28, i32 0, i32 25, !dbg !9837
  store i32 %shl, i32* %interval14, align 8, !dbg !9838
  br label %if.end, !dbg !9839

if.else:                                          ; preds = %lor.lhs.false
  %29 = load i32, i32* %interval.addr, align 4, !dbg !9840
  %30 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9842
  %interval15 = getelementptr inbounds %struct.urb, %struct.urb* %30, i32 0, i32 25, !dbg !9843
  store i32 %29, i32* %interval15, align 8, !dbg !9844
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end12
  %31 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9845
  %start_frame = getelementptr inbounds %struct.urb, %struct.urb* %31, i32 0, i32 23, !dbg !9846
  store i32 -1, i32* %start_frame, align 8, !dbg !9847
  ret void, !dbg !9848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_fill_bulk_urb(%struct.urb* %urb, %struct.usb_device* %dev, i32 %pipe, i8* %transfer_buffer, i32 %buffer_length, void (%struct.urb*)* %complete_fn, i8* %context) #2 !dbg !9849 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %dev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %transfer_buffer.addr = alloca i8*, align 8
  %buffer_length.addr = alloca i32, align 4
  %complete_fn.addr = alloca void (%struct.urb*)*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !9852, metadata !DIExpression()), !dbg !9853
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !9854, metadata !DIExpression()), !dbg !9855
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !9856, metadata !DIExpression()), !dbg !9857
  store i8* %transfer_buffer, i8** %transfer_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %transfer_buffer.addr, metadata !9858, metadata !DIExpression()), !dbg !9859
  store i32 %buffer_length, i32* %buffer_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_length.addr, metadata !9860, metadata !DIExpression()), !dbg !9861
  store void (%struct.urb*)* %complete_fn, void (%struct.urb*)** %complete_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.urb*)** %complete_fn.addr, metadata !9862, metadata !DIExpression()), !dbg !9863
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9864, metadata !DIExpression()), !dbg !9865
  %0 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !9866
  %1 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9867
  %dev1 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 8, !dbg !9868
  store %struct.usb_device* %0, %struct.usb_device** %dev1, align 8, !dbg !9869
  %2 = load i32, i32* %pipe.addr, align 4, !dbg !9870
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9871
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 10, !dbg !9872
  store i32 %2, i32* %pipe2, align 8, !dbg !9873
  %4 = load i8*, i8** %transfer_buffer.addr, align 8, !dbg !9874
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9875
  %transfer_buffer3 = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 14, !dbg !9876
  store i8* %4, i8** %transfer_buffer3, align 8, !dbg !9877
  %6 = load i32, i32* %buffer_length.addr, align 4, !dbg !9878
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9879
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 19, !dbg !9880
  store i32 %6, i32* %transfer_buffer_length, align 8, !dbg !9881
  %8 = load void (%struct.urb*)*, void (%struct.urb*)** %complete_fn.addr, align 8, !dbg !9882
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9883
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 28, !dbg !9884
  store void (%struct.urb*)* %8, void (%struct.urb*)** %complete, align 8, !dbg !9885
  %10 = load i8*, i8** %context.addr, align 8, !dbg !9886
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9887
  %context4 = getelementptr inbounds %struct.urb, %struct.urb* %11, i32 0, i32 27, !dbg !9888
  store i8* %10, i8** %context4, align 8, !dbg !9889
  ret void, !dbg !9890
}

; Function Attrs: noredzone
declare dso_local i8* @usb_alloc_coherent(%struct.usb_device*, i64, i32, i64*) #1

; Function Attrs: noredzone
declare dso_local void @usb_free_urb(%struct.urb*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_completion(%struct.completion* %x) #2 !dbg !4417 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !9891, metadata !DIExpression()), !dbg !9892
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !9893
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !9894
  store i32 0, i32* %done, align 8, !dbg !9895
  br label %do.body, !dbg !9896

do.body:                                          ; preds = %entry
  %1 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !9897
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %1, i32 0, i32 1, !dbg !9897
  call void @__init_swait_queue_head(%struct.swait_queue_head* %wait, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i64 0, i64 0), %struct.lock_class_key* @__init_completion.__key) #11, !dbg !9897
  br label %do.end, !dbg !9897

do.end:                                           ; preds = %do.body
  ret void, !dbg !9899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @simple_fill_buf(%struct.urb* %urb) #2 !dbg !9900 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %i = alloca i32, align 4
  %buf = alloca i8*, align 8
  %len = alloca i32, align 4
  %maxpacket = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9903, metadata !DIExpression()), !dbg !9904
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9905, metadata !DIExpression()), !dbg !9906
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9907
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 14, !dbg !9908
  %1 = load i8*, i8** %transfer_buffer, align 8, !dbg !9908
  store i8* %1, i8** %buf, align 8, !dbg !9906
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9909, metadata !DIExpression()), !dbg !9910
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9911
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 19, !dbg !9912
  %3 = load i32, i32* %transfer_buffer_length, align 8, !dbg !9912
  store i32 %3, i32* %len, align 4, !dbg !9910
  call void @llvm.dbg.declare(metadata i32* %maxpacket, metadata !9913, metadata !DIExpression()), !dbg !9914
  %4 = load i32, i32* @pattern, align 4, !dbg !9915
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !9916

sw.default:                                       ; preds = %entry
  br label %sw.bb, !dbg !9917

sw.bb:                                            ; preds = %entry, %sw.default
  %5 = load i8*, i8** %buf, align 8, !dbg !9918
  %6 = load i32, i32* %len, align 4, !dbg !9920
  %conv = zext i32 %6 to i64, !dbg !9920
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 %conv, i1 false), !dbg !9921
  br label %sw.epilog, !dbg !9922

sw.bb1:                                           ; preds = %entry
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9923
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 8, !dbg !9924
  %8 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9924
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9925
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 10, !dbg !9926
  %10 = load i32, i32* %pipe, align 8, !dbg !9926
  %call = call i32 @get_maxpacket(%struct.usb_device* %8, i32 %10) #11, !dbg !9927
  store i32 %call, i32* %maxpacket, align 4, !dbg !9928
  store i32 0, i32* %i, align 4, !dbg !9929
  br label %for.cond, !dbg !9931

for.cond:                                         ; preds = %for.inc, %sw.bb1
  %11 = load i32, i32* %i, align 4, !dbg !9932
  %12 = load i32, i32* %len, align 4, !dbg !9934
  %cmp = icmp ult i32 %11, %12, !dbg !9935
  br i1 %cmp, label %for.body, label %for.end, !dbg !9936

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !9937
  %14 = load i32, i32* %maxpacket, align 4, !dbg !9938
  %rem = urem i32 %13, %14, !dbg !9939
  %rem3 = urem i32 %rem, 63, !dbg !9940
  %conv4 = trunc i32 %rem3 to i8, !dbg !9941
  %15 = load i8*, i8** %buf, align 8, !dbg !9942
  %incdec.ptr = getelementptr i8, i8* %15, i32 1, !dbg !9942
  store i8* %incdec.ptr, i8** %buf, align 8, !dbg !9942
  store i8 %conv4, i8* %15, align 1, !dbg !9943
  br label %for.inc, !dbg !9944

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !9945
  %inc = add i32 %16, 1, !dbg !9945
  store i32 %inc, i32* %i, align 4, !dbg !9945
  br label %for.cond, !dbg !9946, !llvm.loop !9947

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !9949

sw.epilog:                                        ; preds = %for.end, %sw.bb
  ret void, !dbg !9950
}

; Function Attrs: noredzone
declare dso_local i32 @usb_submit_urb(%struct.urb*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @wait_for_completion_timeout(%struct.completion*, i64) #1

; Function Attrs: noredzone
declare dso_local void @usb_kill_urb(%struct.urb*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @simple_check_buf(%struct.usbtest_dev* %tdev, %struct.urb* %urb) #2 !dbg !9951 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %i = alloca i32, align 4
  %expected = alloca i8, align 1
  %buf = alloca i8*, align 8
  %len = alloca i32, align 4
  %maxpacket = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !9954, metadata !DIExpression()), !dbg !9955
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !9956, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9958, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.declare(metadata i8* %expected, metadata !9960, metadata !DIExpression()), !dbg !9961
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9962, metadata !DIExpression()), !dbg !9963
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9964
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 14, !dbg !9965
  %1 = load i8*, i8** %transfer_buffer, align 8, !dbg !9965
  store i8* %1, i8** %buf, align 8, !dbg !9963
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9966, metadata !DIExpression()), !dbg !9967
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9968
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 20, !dbg !9969
  %3 = load i32, i32* %actual_length, align 4, !dbg !9969
  store i32 %3, i32* %len, align 4, !dbg !9967
  call void @llvm.dbg.declare(metadata i32* %maxpacket, metadata !9970, metadata !DIExpression()), !dbg !9971
  %4 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9972
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 8, !dbg !9973
  %5 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9973
  %6 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9974
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %6, i32 0, i32 10, !dbg !9975
  %7 = load i32, i32* %pipe, align 8, !dbg !9975
  %call = call i32 @get_maxpacket(%struct.usb_device* %5, i32 %7) #11, !dbg !9976
  store i32 %call, i32* %maxpacket, align 4, !dbg !9971
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9977, metadata !DIExpression()), !dbg !9978
  %8 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !9979
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9980
  %call1 = call i32 @check_guard_bytes(%struct.usbtest_dev* %8, %struct.urb* %9) #11, !dbg !9981
  store i32 %call1, i32* %ret, align 4, !dbg !9978
  %10 = load i32, i32* %ret, align 4, !dbg !9982
  %tobool = icmp ne i32 %10, 0, !dbg !9982
  br i1 %tobool, label %if.then, label %if.end, !dbg !9984

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %ret, align 4, !dbg !9985
  store i32 %11, i32* %retval, align 4, !dbg !9986
  br label %return, !dbg !9986

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9987
  br label %for.cond, !dbg !9989

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !9990
  %13 = load i32, i32* %len, align 4, !dbg !9992
  %cmp = icmp ult i32 %12, %13, !dbg !9993
  br i1 %cmp, label %for.body, label %for.end, !dbg !9994

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* @pattern, align 4, !dbg !9995
  switch i32 %14, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
  ], !dbg !9997

sw.bb:                                            ; preds = %for.body
  store i8 0, i8* %expected, align 1, !dbg !9998
  br label %sw.epilog, !dbg !10000

sw.bb2:                                           ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !10001
  %16 = load i32, i32* %maxpacket, align 4, !dbg !10002
  %rem = urem i32 %15, %16, !dbg !10003
  %rem3 = urem i32 %rem, 63, !dbg !10004
  %conv = trunc i32 %rem3 to i8, !dbg !10005
  store i8 %conv, i8* %expected, align 1, !dbg !10006
  br label %sw.epilog, !dbg !10007

sw.default:                                       ; preds = %for.body
  %17 = load i8*, i8** %buf, align 8, !dbg !10008
  %18 = load i8, i8* %17, align 1, !dbg !10009
  %tobool4 = icmp ne i8 %18, 0, !dbg !10010
  %lnot = xor i1 %tobool4, true, !dbg !10010
  %lnot.ext = zext i1 %lnot to i32, !dbg !10010
  %conv5 = trunc i32 %lnot.ext to i8, !dbg !10010
  store i8 %conv5, i8* %expected, align 1, !dbg !10011
  br label %sw.epilog, !dbg !10012

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  %19 = load i8*, i8** %buf, align 8, !dbg !10013
  %20 = load i8, i8* %19, align 1, !dbg !10015
  %conv6 = zext i8 %20 to i32, !dbg !10015
  %21 = load i8, i8* %expected, align 1, !dbg !10016
  %conv7 = zext i8 %21 to i32, !dbg !10016
  %cmp8 = icmp eq i32 %conv6, %conv7, !dbg !10017
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !10018

if.then10:                                        ; preds = %sw.epilog
  br label %for.inc, !dbg !10019

if.end11:                                         ; preds = %sw.epilog
  %22 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10020
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %22, i32 0, i32 0, !dbg !10020
  %23 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10020
  %dev12 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %23, i32 0, i32 7, !dbg !10020
  %24 = load i32, i32* %i, align 4, !dbg !10020
  %25 = load i8*, i8** %buf, align 8, !dbg !10020
  %26 = load i8, i8* %25, align 1, !dbg !10020
  %conv13 = zext i8 %26 to i32, !dbg !10020
  %27 = load i8, i8* %expected, align 1, !dbg !10020
  %conv14 = zext i8 %27 to i32, !dbg !10020
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i64 0, i64 0), i32 %24, i32 %conv13, i32 %conv14) #12, !dbg !10020
  store i32 -22, i32* %retval, align 4, !dbg !10021
  br label %return, !dbg !10021

for.inc:                                          ; preds = %if.then10
  %28 = load i32, i32* %i, align 4, !dbg !10022
  %inc = add i32 %28, 1, !dbg !10022
  store i32 %inc, i32* %i, align 4, !dbg !10022
  %29 = load i8*, i8** %buf, align 8, !dbg !10023
  %incdec.ptr = getelementptr i8, i8* %29, i32 1, !dbg !10023
  store i8* %incdec.ptr, i8** %buf, align 8, !dbg !10023
  br label %for.cond, !dbg !10024, !llvm.loop !10025

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10027
  br label %return, !dbg !10027

return:                                           ; preds = %for.end, %if.end11, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !10028
  ret i32 %30, !dbg !10028
}

; Function Attrs: noredzone
declare dso_local void @__init_swait_queue_head(%struct.swait_queue_head*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_maxpacket(%struct.usb_device* %udev, i32 %pipe) #2 !dbg !10029 {
entry:
  %p.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i, metadata !10032, metadata !DIExpression()), !dbg !10039
  %udev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %ep = alloca %struct.usb_host_endpoint*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !10041, metadata !DIExpression()), !dbg !10042
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !10043, metadata !DIExpression()), !dbg !10044
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep, metadata !10045, metadata !DIExpression()), !dbg !10046
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !10047
  %1 = load i32, i32* %pipe.addr, align 4, !dbg !10048
  %call = call %struct.usb_host_endpoint* @usb_pipe_endpoint(%struct.usb_device* %0, i32 %1) #11, !dbg !10049
  store %struct.usb_host_endpoint* %call, %struct.usb_host_endpoint** %ep, align 8, !dbg !10050
  %2 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !10051
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %2, i32 0, i32 0, !dbg !10052
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 4, !dbg !10053
  store i16* %wMaxPacketSize, i16** %p.addr.i, align 8
  %3 = load i16*, i16** %p.addr.i, align 8, !dbg !10054
  %4 = load i16, i16* %3, align 2, !dbg !10055
  %conv = zext i16 %4 to i32, !dbg !10056
  ret i32 %conv, !dbg !10057
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_host_endpoint* @usb_pipe_endpoint(%struct.usb_device* %dev, i32 %pipe) #2 !dbg !10058 {
entry:
  %dev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %eps = alloca %struct.usb_host_endpoint**, align 8
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !10061, metadata !DIExpression()), !dbg !10062
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %eps, metadata !10065, metadata !DIExpression()), !dbg !10066
  %0 = load i32, i32* %pipe.addr, align 4, !dbg !10067
  %and = and i32 %0, 128, !dbg !10067
  %tobool = icmp ne i32 %and, 0, !dbg !10067
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10067

cond.true:                                        ; preds = %entry
  %1 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !10068
  %ep_in = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 20, !dbg !10069
  %arraydecay = getelementptr inbounds [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_in, i64 0, i64 0, !dbg !10068
  br label %cond.end, !dbg !10067

cond.false:                                       ; preds = %entry
  %2 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !10070
  %ep_out = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 21, !dbg !10071
  %arraydecay1 = getelementptr inbounds [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_out, i64 0, i64 0, !dbg !10070
  br label %cond.end, !dbg !10067

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.usb_host_endpoint** [ %arraydecay, %cond.true ], [ %arraydecay1, %cond.false ], !dbg !10067
  store %struct.usb_host_endpoint** %cond, %struct.usb_host_endpoint*** %eps, align 8, !dbg !10072
  %3 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !10073
  %4 = load i32, i32* %pipe.addr, align 4, !dbg !10074
  %shr = lshr i32 %4, 15, !dbg !10074
  %and2 = and i32 %shr, 15, !dbg !10074
  %idxprom = zext i32 %and2 to i64, !dbg !10073
  %arrayidx = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %3, i64 %idxprom, !dbg !10073
  %5 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx, align 8, !dbg !10073
  ret %struct.usb_host_endpoint* %5, !dbg !10075
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #2 !dbg !10076 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !10077, metadata !DIExpression()), !dbg !10078
  %0 = load i32, i32* %m.addr, align 4, !dbg !10079
  %conv = zext i32 %0 to i64, !dbg !10079
  %add = add i64 %conv, 4, !dbg !10080
  %sub = sub i64 %add, 1, !dbg !10081
  %div = sdiv i64 %sub, 4, !dbg !10082
  ret i64 %div, !dbg !10083
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @check_guard_bytes(%struct.usbtest_dev* %tdev, %struct.urb* %urb) #2 !dbg !10084 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %buf = alloca i8*, align 8
  %guard = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !10085, metadata !DIExpression()), !dbg !10086
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !10087, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10089, metadata !DIExpression()), !dbg !10090
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10091
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 14, !dbg !10092
  %1 = load i8*, i8** %transfer_buffer, align 8, !dbg !10092
  store i8* %1, i8** %buf, align 8, !dbg !10090
  call void @llvm.dbg.declare(metadata i8** %guard, metadata !10093, metadata !DIExpression()), !dbg !10094
  %2 = load i8*, i8** %buf, align 8, !dbg !10095
  %3 = load i8*, i8** %buf, align 8, !dbg !10096
  %call = call i64 @buffer_offset(i8* %3) #11, !dbg !10097
  %idx.neg = sub i64 0, %call, !dbg !10098
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.neg, !dbg !10098
  store i8* %add.ptr, i8** %guard, align 8, !dbg !10094
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10099, metadata !DIExpression()), !dbg !10100
  store i32 0, i32* %i, align 4, !dbg !10101
  br label %for.cond, !dbg !10103

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i8*, i8** %guard, align 8, !dbg !10104
  %5 = load i8*, i8** %buf, align 8, !dbg !10106
  %cmp = icmp ult i8* %4, %5, !dbg !10107
  br i1 %cmp, label %for.body, label %for.end, !dbg !10108

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %guard, align 8, !dbg !10109
  %7 = load i8, i8* %6, align 1, !dbg !10112
  %conv = zext i8 %7 to i32, !dbg !10112
  %cmp1 = icmp ne i32 %conv, 165, !dbg !10113
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10114

if.then:                                          ; preds = %for.body
  %8 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10115
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %8, i32 0, i32 0, !dbg !10115
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10115
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %9, i32 0, i32 7, !dbg !10115
  %10 = load i32, i32* %i, align 4, !dbg !10115
  %11 = load i8*, i8** %guard, align 8, !dbg !10115
  %12 = load i8, i8* %11, align 1, !dbg !10115
  %conv3 = zext i8 %12 to i32, !dbg !10115
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68, i64 0, i64 0), i32 %10, i32 %conv3, i32 165) #12, !dbg !10115
  store i32 -22, i32* %retval, align 4, !dbg !10117
  br label %return, !dbg !10117

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10118

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !10119
  %inc = add i32 %13, 1, !dbg !10119
  store i32 %inc, i32* %i, align 4, !dbg !10119
  %14 = load i8*, i8** %guard, align 8, !dbg !10120
  %incdec.ptr = getelementptr i8, i8* %14, i32 1, !dbg !10120
  store i8* %incdec.ptr, i8** %guard, align 8, !dbg !10120
  br label %for.cond, !dbg !10121, !llvm.loop !10122

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10124
  br label %return, !dbg !10124

return:                                           ; preds = %for.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !10125
  ret i32 %15, !dbg !10125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @buffer_offset(i8* %buf) #2 !dbg !10126 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10129, metadata !DIExpression()), !dbg !10130
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10131
  %1 = ptrtoint i8* %0 to i64, !dbg !10132
  %and = and i64 %1, 7, !dbg !10133
  ret i64 %and, !dbg !10134
}

; Function Attrs: noredzone
declare dso_local void @usb_free_coherent(%struct.usb_device*, i64, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #2 !dbg !10135 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4460, metadata !DIExpression()), !dbg !10138
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4472, metadata !DIExpression()), !dbg !10142
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4474, metadata !DIExpression()), !dbg !10143
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4476, metadata !DIExpression()), !dbg !10144
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4478, metadata !DIExpression()), !dbg !10145
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4484, metadata !DIExpression()), !dbg !10147
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4490, metadata !DIExpression()), !dbg !10149
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4499, metadata !DIExpression()), !dbg !10152
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4501, metadata !DIExpression()), !dbg !10153
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4503, metadata !DIExpression()), !dbg !10154
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4505, metadata !DIExpression()), !dbg !10155
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4507, metadata !DIExpression()), !dbg !10156
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4509, metadata !DIExpression()), !dbg !10157
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4511, metadata !DIExpression()), !dbg !10158
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4513, metadata !DIExpression()), !dbg !10159
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10160, metadata !DIExpression()), !dbg !10161
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10162, metadata !DIExpression()), !dbg !10163
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10164, metadata !DIExpression()), !dbg !10165
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !10166, metadata !DIExpression()), !dbg !10167
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !10168, metadata !DIExpression()), !dbg !10171
  %0 = load i64, i64* %n.addr, align 8, !dbg !10171
  store i64 %0, i64* %__a, align 8, !dbg !10171
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !10172, metadata !DIExpression()), !dbg !10171
  %1 = load i64, i64* %size.addr, align 8, !dbg !10171
  store i64 %1, i64* %__b, align 8, !dbg !10171
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !10173, metadata !DIExpression()), !dbg !10171
  store i64* %bytes, i64** %__d, align 8, !dbg !10171
  %cmp = icmp eq i64* %__a, %__b, !dbg !10171
  %conv = zext i1 %cmp to i32, !dbg !10171
  %2 = load i64*, i64** %__d, align 8, !dbg !10171
  %cmp1 = icmp eq i64* %__a, %2, !dbg !10171
  %conv2 = zext i1 %cmp1 to i32, !dbg !10171
  %3 = load i64, i64* %__a, align 8, !dbg !10171
  %4 = load i64, i64* %__b, align 8, !dbg !10171
  %5 = load i64*, i64** %__d, align 8, !dbg !10171
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !10171
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !10171
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !10171
  store i64 %8, i64* %5, align 8, !dbg !10171
  %frombool = zext i1 %7 to i8, !dbg !10171
  store i8 %frombool, i8* %tmp, align 1, !dbg !10171
  %9 = load i8, i8* %tmp, align 1, !dbg !10171
  %tobool = trunc i8 %9 to i1, !dbg !10171
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !10175
  %lnot = xor i1 %call, true, !dbg !10175
  %lnot3 = xor i1 %lnot, true, !dbg !10175
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10175
  %conv4 = sext i32 %lnot.ext to i64, !dbg !10175
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !10175
  br i1 %tobool5, label %if.then, label %if.end, !dbg !10176

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10177
  br label %return, !dbg !10177

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !10178
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !10179
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !10180

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !10181
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !10182
  br i1 %13, label %if.then6, label %if.end8, !dbg !10183

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !10184
  %15 = load i32, i32* %flags.addr, align 4, !dbg !10185
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !10186
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !10187
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !10188

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !10189
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !10190
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10191

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !10192
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !10193
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !10194
  %call.i.i = call i32 @get_order(i64 %21) #13, !dbg !10195
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10156
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !10196
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10197
  %24 = load i32, i32* %order.i.i, align 4, !dbg !10198
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10199
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10200
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10201
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #14, !dbg !10202
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10202
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10202
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10202
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !10202
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10203
  br label %kmalloc.exit, !dbg !10203

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !10204
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10205
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !10205
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10206

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10207
  br label %kmalloc_index.exit.i, !dbg !10207

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10208
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !10209
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10210

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10211
  br label %kmalloc_index.exit.i, !dbg !10211

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10212
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !10213
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10214

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10215
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !10216
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10217

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10218
  br label %kmalloc_index.exit.i, !dbg !10218

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10219
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !10220
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10221

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10222
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !10223
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10224

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10225
  br label %kmalloc_index.exit.i, !dbg !10225

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10226
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !10227
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10228

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10229
  br label %kmalloc_index.exit.i, !dbg !10229

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10230
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !10231
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10232

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10233
  br label %kmalloc_index.exit.i, !dbg !10233

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10234
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !10235
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10236

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10237
  br label %kmalloc_index.exit.i, !dbg !10237

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10238
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !10239
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10240

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10241
  br label %kmalloc_index.exit.i, !dbg !10241

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10242
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !10243
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10244

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10245
  br label %kmalloc_index.exit.i, !dbg !10245

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10246
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !10247
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10248

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10249
  br label %kmalloc_index.exit.i, !dbg !10249

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10250
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !10251
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10252

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10253
  br label %kmalloc_index.exit.i, !dbg !10253

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10254
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !10255
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10256

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10257
  br label %kmalloc_index.exit.i, !dbg !10257

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10258
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !10259
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10260

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10261
  br label %kmalloc_index.exit.i, !dbg !10261

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10262
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !10263
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10264

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10265
  br label %kmalloc_index.exit.i, !dbg !10265

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10266
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !10267
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10268

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10269
  br label %kmalloc_index.exit.i, !dbg !10269

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10270
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !10271
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10272

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10273
  br label %kmalloc_index.exit.i, !dbg !10273

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10274
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !10275
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10276

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10277
  br label %kmalloc_index.exit.i, !dbg !10277

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10278
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !10279
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10280

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10281
  br label %kmalloc_index.exit.i, !dbg !10281

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10282
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !10283
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10284

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10285
  br label %kmalloc_index.exit.i, !dbg !10285

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10286
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !10287
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10288

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10289
  br label %kmalloc_index.exit.i, !dbg !10289

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10290
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !10291
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10292

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10293
  br label %kmalloc_index.exit.i, !dbg !10293

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10294
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !10295
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10296

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10297
  br label %kmalloc_index.exit.i, !dbg !10297

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10298
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !10299
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10300

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10301
  br label %kmalloc_index.exit.i, !dbg !10301

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10302
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !10303
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10304

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10305
  br label %kmalloc_index.exit.i, !dbg !10305

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10306
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !10307
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10308

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10309
  br label %kmalloc_index.exit.i, !dbg !10309

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10310
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !10311
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10312

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10313
  br label %kmalloc_index.exit.i, !dbg !10313

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10314
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !10315
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10316

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10317
  br label %kmalloc_index.exit.i, !dbg !10317

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10318
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !10319
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10320

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10321
  br label %kmalloc_index.exit.i, !dbg !10321

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !10322, !srcloc !4773
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !10323, !srcloc !4777
  unreachable, !dbg !10324

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !10325
  store i32 %59, i32* %index.i, align 4, !dbg !10326
  %60 = load i32, i32* %index.i, align 4, !dbg !10327
  %tobool.i = icmp ne i32 %60, 0, !dbg !10327
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10328

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10329
  br label %kmalloc.exit, !dbg !10329

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !10330
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10331
  %and.i.i = and i32 %62, 17, !dbg !10331
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10331
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10331
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10331
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10331
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10332

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10333
  br label %kmalloc_type.exit.i, !dbg !10333

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10334
  %and2.i.i = and i32 %63, 1, !dbg !10335
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10334
  %64 = zext i1 %tobool3.i.i to i64, !dbg !10334
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10334
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10336
  br label %kmalloc_type.exit.i, !dbg !10336

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !10337
  %idxprom.i = zext i32 %65 to i64, !dbg !10338
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10338
  %66 = load i32, i32* %index.i, align 4, !dbg !10339
  %idxprom6.i = zext i32 %66 to i64, !dbg !10338
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10338
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10338
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !10340
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !10341
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10342
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10343
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #14, !dbg !10344
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10344
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10344
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10344
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !10344
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10144
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10345
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !10346
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10347
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10348
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #14, !dbg !10349
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10350
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !10351
  store i8* %76, i8** %retval.i, align 8, !dbg !10352
  br label %kmalloc.exit, !dbg !10352

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !10353
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !10354
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #14, !dbg !10355
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10355
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10355
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10355
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !10355
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10356
  br label %kmalloc.exit, !dbg !10356

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !10357
  store i8* %79, i8** %retval, align 8, !dbg !10358
  br label %return, !dbg !10358

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !10359
  %81 = load i32, i32* %flags.addr, align 4, !dbg !10360
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !10361
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !10361
  %maskedptr = and i64 %ptrint, 7, !dbg !10361
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !10361
  call void @llvm.assume(i1 %maskcond), !dbg !10361
  store i8* %call9, i8** %retval, align 8, !dbg !10362
  br label %return, !dbg !10362

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !10363
  ret i8* %82, !dbg !10363
}

; Function Attrs: noredzone
declare dso_local void @sg_init_table(%struct.scatterlist*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_set_buf(%struct.scatterlist* %sg, i8* %buf, i32 %buflen) #2 !dbg !10364 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !10367, metadata !DIExpression()), !dbg !10368
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10369, metadata !DIExpression()), !dbg !10370
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !10371, metadata !DIExpression()), !dbg !10372
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10373
  %1 = load i64, i64* @vmemmap_base, align 8, !dbg !10374
  %2 = inttoptr i64 %1 to %struct.page*, !dbg !10374
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !10374
  %4 = ptrtoint i8* %3 to i64, !dbg !10374
  %call = call i64 @__phys_addr_nodebug(i64 %4) #11, !dbg !10374
  %shr = lshr i64 %call, 12, !dbg !10374
  %add.ptr = getelementptr %struct.page, %struct.page* %2, i64 %shr, !dbg !10374
  %5 = load i32, i32* %buflen.addr, align 4, !dbg !10375
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !10376
  %7 = ptrtoint i8* %6 to i64, !dbg !10376
  %and = and i64 %7, 4095, !dbg !10376
  %conv = trunc i64 %and to i32, !dbg !10376
  call void @sg_set_page(%struct.scatterlist* %0, %struct.page* %add.ptr, i32 %5, i32 %conv) #11, !dbg !10377
  ret void, !dbg !10378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #2 !dbg !10379 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !10383, metadata !DIExpression()), !dbg !10384
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !10385
  %tobool = trunc i8 %0 to i1, !dbg !10385
  %lnot = xor i1 %tobool, true, !dbg !10385
  %lnot1 = xor i1 %lnot, true, !dbg !10385
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10385
  %conv = sext i32 %lnot.ext to i64, !dbg !10385
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10385
  ret i1 %tobool2, !dbg !10386
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_set_page(%struct.scatterlist* %sg, %struct.page* %page, i32 %len, i32 %offset) #2 !dbg !10387 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %page.addr = alloca %struct.page*, align 8
  %len.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !10390, metadata !DIExpression()), !dbg !10391
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !10392, metadata !DIExpression()), !dbg !10393
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !10394, metadata !DIExpression()), !dbg !10395
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10396, metadata !DIExpression()), !dbg !10397
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10398
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !10399
  call void @sg_assign_page(%struct.scatterlist* %0, %struct.page* %1) #11, !dbg !10400
  %2 = load i32, i32* %offset.addr, align 4, !dbg !10401
  %3 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10402
  %offset1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %3, i32 0, i32 1, !dbg !10403
  store i32 %2, i32* %offset1, align 8, !dbg !10404
  %4 = load i32, i32* %len.addr, align 4, !dbg !10405
  %5 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10406
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %5, i32 0, i32 2, !dbg !10407
  store i32 %4, i32* %length, align 4, !dbg !10408
  ret void, !dbg !10409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !10410 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !10414, metadata !DIExpression()), !dbg !10415
  call void @llvm.dbg.declare(metadata i64* %y, metadata !10416, metadata !DIExpression()), !dbg !10417
  %0 = load i64, i64* %x.addr, align 8, !dbg !10418
  %sub = sub i64 %0, -2147483648, !dbg !10419
  store i64 %sub, i64* %y, align 8, !dbg !10417
  %1 = load i64, i64* %y, align 8, !dbg !10420
  %2 = load i64, i64* %x.addr, align 8, !dbg !10421
  %3 = load i64, i64* %y, align 8, !dbg !10422
  %cmp = icmp ugt i64 %2, %3, !dbg !10423
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10424

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !10425
  br label %cond.end, !dbg !10424

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !10426
  %sub1 = sub i64 -2147483648, %5, !dbg !10427
  br label %cond.end, !dbg !10424

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !10424
  %add = add i64 %1, %cond, !dbg !10428
  store i64 %add, i64* %x.addr, align 8, !dbg !10429
  %6 = load i64, i64* %x.addr, align 8, !dbg !10430
  ret i64 %6, !dbg !10431
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_assign_page(%struct.scatterlist* %sg, %struct.page* %page) #2 !dbg !10432 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %page.addr = alloca %struct.page*, align 8
  %page_link = alloca i64, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !10435, metadata !DIExpression()), !dbg !10436
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !10437, metadata !DIExpression()), !dbg !10438
  call void @llvm.dbg.declare(metadata i64* %page_link, metadata !10439, metadata !DIExpression()), !dbg !10440
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10441
  %page_link1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !10442
  %1 = load i64, i64* %page_link1, align 8, !dbg !10442
  %and = and i64 %1, 3, !dbg !10443
  store i64 %and, i64* %page_link, align 8, !dbg !10440
  br label %do.body, !dbg !10444

do.body:                                          ; preds = %entry
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !10445
  %3 = ptrtoint %struct.page* %2 to i64, !dbg !10445
  %and2 = and i64 %3, 3, !dbg !10445
  %tobool = icmp ne i64 %and2, 0, !dbg !10445
  %lnot = xor i1 %tobool, true, !dbg !10445
  %lnot3 = xor i1 %lnot, true, !dbg !10445
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10445
  %conv = sext i32 %lnot.ext to i64, !dbg !10445
  %tobool4 = icmp ne i64 %conv, 0, !dbg !10445
  br i1 %tobool4, label %if.then, label %if.end, !dbg !10448

if.then:                                          ; preds = %do.body
  br label %do.body5, !dbg !10445

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !10449

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !10451

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !10449

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.69, i64 0, i64 0), i32 95, i32 0, i64 12) #10, !dbg !10453, !srcloc !10455
  br label %do.end8, !dbg !10453

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !10449

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 226) #10, !dbg !10456, !srcloc !10459
  unreachable, !dbg !10460

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !10449

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !10449

if.end:                                           ; preds = %do.end11, %do.body
  br label %do.end12, !dbg !10448

do.end12:                                         ; preds = %if.end
  %4 = load i64, i64* %page_link, align 8, !dbg !10461
  %5 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !10462
  %6 = ptrtoint %struct.page* %5 to i64, !dbg !10463
  %or = or i64 %4, %6, !dbg !10464
  %7 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10465
  %page_link13 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %7, i32 0, i32 0, !dbg !10466
  store i64 %or, i64* %page_link13, align 8, !dbg !10467
  ret void, !dbg !10468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_timer_on_stack_key(%struct.timer_list* %timer, void (%struct.timer_list*)* %func, i32 %flags, i8* %name, %struct.lock_class_key* %key) #2 !dbg !10469 {
entry:
  %timer.addr = alloca %struct.timer_list*, align 8
  %func.addr = alloca void (%struct.timer_list*)*, align 8
  %flags.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %key.addr = alloca %struct.lock_class_key*, align 8
  store %struct.timer_list* %timer, %struct.timer_list** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %timer.addr, metadata !10473, metadata !DIExpression()), !dbg !10474
  store void (%struct.timer_list*)* %func, void (%struct.timer_list*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.timer_list*)** %func.addr, metadata !10475, metadata !DIExpression()), !dbg !10476
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10477, metadata !DIExpression()), !dbg !10478
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10479, metadata !DIExpression()), !dbg !10480
  store %struct.lock_class_key* %key, %struct.lock_class_key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lock_class_key** %key.addr, metadata !10481, metadata !DIExpression()), !dbg !10482
  %0 = load %struct.timer_list*, %struct.timer_list** %timer.addr, align 8, !dbg !10483
  %1 = load void (%struct.timer_list*)*, void (%struct.timer_list*)** %func.addr, align 8, !dbg !10484
  %2 = load i32, i32* %flags.addr, align 4, !dbg !10485
  %3 = load i8*, i8** %name.addr, align 8, !dbg !10486
  %4 = load %struct.lock_class_key*, %struct.lock_class_key** %key.addr, align 8, !dbg !10487
  call void @init_timer_key(%struct.timer_list* %0, void (%struct.timer_list*)* %1, i32 %2, i8* %3, %struct.lock_class_key* %4) #11, !dbg !10488
  ret void, !dbg !10489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_timeout(%struct.timer_list* %t) #2 !dbg !10490 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  %timeout = alloca %struct.sg_timeout*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.sg_timeout*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !10491, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.declare(metadata %struct.sg_timeout** %timeout, metadata !10493, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10495, metadata !DIExpression()), !dbg !10497
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !10497
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !10497
  store i8* %1, i8** %__mptr, align 8, !dbg !10497
  br label %do.body, !dbg !10497

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10498

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10497
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10497
  %3 = bitcast i8* %add.ptr to %struct.sg_timeout*, !dbg !10497
  store %struct.sg_timeout* %3, %struct.sg_timeout** %tmp, align 8, !dbg !10498
  %4 = load %struct.sg_timeout*, %struct.sg_timeout** %tmp, align 8, !dbg !10497
  store %struct.sg_timeout* %4, %struct.sg_timeout** %timeout, align 8, !dbg !10494
  %5 = load %struct.sg_timeout*, %struct.sg_timeout** %timeout, align 8, !dbg !10500
  %req = getelementptr inbounds %struct.sg_timeout, %struct.sg_timeout* %5, i32 0, i32 1, !dbg !10501
  %6 = load %struct.usb_sg_request*, %struct.usb_sg_request** %req, align 8, !dbg !10501
  call void @usb_sg_cancel(%struct.usb_sg_request* %6) #11, !dbg !10502
  ret void, !dbg !10503
}

; Function Attrs: noredzone
declare dso_local i32 @usb_sg_init(%struct.usb_sg_request*, %struct.usb_device*, i32, i32, %struct.scatterlist*, i32, i64, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #1

; Function Attrs: noredzone
declare dso_local void @usb_sg_wait(%struct.usb_sg_request*) #1

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @destroy_timer_on_stack(%struct.timer_list* %timer) #2 !dbg !10504 {
entry:
  %timer.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %timer, %struct.timer_list** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %timer.addr, metadata !10505, metadata !DIExpression()), !dbg !10506
  ret void, !dbg !10507
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local void @usb_sg_cancel(%struct.usb_sg_request*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @sg_page(%struct.scatterlist* %sg) #2 !dbg !10508 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !10511, metadata !DIExpression()), !dbg !10512
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10513
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !10514
  %1 = load i64, i64* %page_link, align 8, !dbg !10514
  %and = and i64 %1, -4, !dbg !10515
  %2 = inttoptr i64 %and to %struct.page*, !dbg !10516
  ret %struct.page* %2, !dbg !10517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @sg_virt(%struct.scatterlist* %sg) #2 !dbg !10518 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !10521, metadata !DIExpression()), !dbg !10527
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !10529, metadata !DIExpression()), !dbg !10530
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10531
  %call = call %struct.page* @sg_page(%struct.scatterlist* %0) #11, !dbg !10531
  store %struct.page* %call, %struct.page** %page.addr.i, align 8
  %1 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !10532
  %2 = load i64, i64* @vmemmap_base, align 8, !dbg !10532
  %3 = inttoptr i64 %2 to %struct.page*, !dbg !10532
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %1 to i64, !dbg !10532
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %2, !dbg !10532
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !10532
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !10532
  %4 = load i64, i64* @page_offset_base, align 8, !dbg !10532
  %add.i = add i64 %shl.i, %4, !dbg !10532
  %5 = inttoptr i64 %add.i to i8*, !dbg !10532
  %6 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10533
  %offset = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %6, i32 0, i32 1, !dbg !10534
  %7 = load i32, i32* %offset, align 8, !dbg !10534
  %idx.ext = zext i32 %7 to i64, !dbg !10535
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !10535
  ret i8* %add.ptr, !dbg !10536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_altsetting(%struct.usbtest_dev* %dev) #2 !dbg !10537 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %iface = alloca %struct.usb_interface*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %retval1 = alloca i32, align 4
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !10538, metadata !DIExpression()), !dbg !10539
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %iface, metadata !10540, metadata !DIExpression()), !dbg !10541
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !10542
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %0, i32 0, i32 0, !dbg !10543
  %1 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10543
  store %struct.usb_interface* %1, %struct.usb_interface** %iface, align 8, !dbg !10541
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !10544, metadata !DIExpression()), !dbg !10545
  %2 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !10546
  %call = call %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %2) #11, !dbg !10547
  store %struct.usb_device* %call, %struct.usb_device** %udev, align 8, !dbg !10545
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !10548, metadata !DIExpression()), !dbg !10549
  %3 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10550
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10551
  %call2 = call i32 @__create_pipe(%struct.usb_device* %4, i32 0) #11, !dbg !10551
  %or = or i32 -2147483648, %call2, !dbg !10551
  %or3 = or i32 %or, 128, !dbg !10551
  %5 = load %struct.usb_interface*, %struct.usb_interface** %iface, align 8, !dbg !10552
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %5, i32 0, i32 0, !dbg !10553
  %6 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !dbg !10553
  %arrayidx = getelementptr %struct.usb_host_interface, %struct.usb_host_interface* %6, i64 0, !dbg !10552
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0, !dbg !10554
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2, !dbg !10555
  %7 = load i8, i8* %bInterfaceNumber, align 2, !dbg !10555
  %conv = zext i8 %7 to i16, !dbg !10552
  %8 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !10556
  %buf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %8, i32 0, i32 13, !dbg !10557
  %9 = load i8*, i8** %buf, align 8, !dbg !10557
  %call4 = call i32 @usb_control_msg(%struct.usb_device* %3, i32 %or3, i8 zeroext 10, i8 zeroext -127, i16 zeroext 0, i16 zeroext %conv, i8* %9, i16 zeroext 1, i32 5000) #11, !dbg !10558
  store i32 %call4, i32* %retval1, align 4, !dbg !10559
  %10 = load i32, i32* %retval1, align 4, !dbg !10560
  switch i32 %10, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb8
  ], !dbg !10561

sw.bb:                                            ; preds = %entry
  %11 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !10562
  %buf5 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %11, i32 0, i32 13, !dbg !10564
  %12 = load i8*, i8** %buf5, align 8, !dbg !10564
  %arrayidx6 = getelementptr i8, i8* %12, i64 0, !dbg !10562
  %13 = load i8, i8* %arrayidx6, align 1, !dbg !10562
  %conv7 = zext i8 %13 to i32, !dbg !10562
  store i32 %conv7, i32* %retval, align 4, !dbg !10565
  br label %return, !dbg !10565

sw.bb8:                                           ; preds = %entry
  store i32 -34, i32* %retval1, align 4, !dbg !10566
  br label %sw.default, !dbg !10567

sw.default:                                       ; preds = %entry, %sw.bb8
  %14 = load i32, i32* %retval1, align 4, !dbg !10568
  store i32 %14, i32* %retval, align 4, !dbg !10569
  br label %return, !dbg !10569

return:                                           ; preds = %sw.default, %sw.bb
  %15 = load i32, i32* %retval, align 4, !dbg !10570
  ret i32 %15, !dbg !10570
}

; Function Attrs: noredzone
declare dso_local i32 @usb_control_msg(%struct.usb_device*, i32, i8 zeroext, i8 zeroext, i16 zeroext, i16 zeroext, i8*, i16 zeroext, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @usb_get_descriptor(%struct.usb_device*, i8 zeroext, i8 zeroext, i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_good_ext(%struct.usbtest_dev* %tdev, i8* %buf) #2 !dbg !10571 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %buf.addr = alloca i8*, align 8
  %ext = alloca %struct.usb_ext_cap_descriptor*, align 8
  %attr = alloca i32, align 4
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !10574, metadata !DIExpression()), !dbg !10575
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10576, metadata !DIExpression()), !dbg !10577
  call void @llvm.dbg.declare(metadata %struct.usb_ext_cap_descriptor** %ext, metadata !10578, metadata !DIExpression()), !dbg !10579
  call void @llvm.dbg.declare(metadata i32* %attr, metadata !10580, metadata !DIExpression()), !dbg !10581
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10582
  %1 = bitcast i8* %0 to %struct.usb_ext_cap_descriptor*, !dbg !10583
  store %struct.usb_ext_cap_descriptor* %1, %struct.usb_ext_cap_descriptor** %ext, align 8, !dbg !10584
  %2 = load %struct.usb_ext_cap_descriptor*, %struct.usb_ext_cap_descriptor** %ext, align 8, !dbg !10585
  %bLength = getelementptr inbounds %struct.usb_ext_cap_descriptor, %struct.usb_ext_cap_descriptor* %2, i32 0, i32 0, !dbg !10587
  %3 = load i8, i8* %bLength, align 1, !dbg !10587
  %conv = zext i8 %3 to i32, !dbg !10585
  %cmp = icmp ne i32 %conv, 7, !dbg !10588
  br i1 %cmp, label %if.then, label %if.end, !dbg !10589

if.then:                                          ; preds = %entry
  %4 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10590
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %4, i32 0, i32 0, !dbg !10590
  %5 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10590
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %5, i32 0, i32 7, !dbg !10590
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.88, i64 0, i64 0)) #12, !dbg !10590
  store i32 0, i32* %retval, align 4, !dbg !10592
  br label %return, !dbg !10592

if.end:                                           ; preds = %entry
  %6 = load %struct.usb_ext_cap_descriptor*, %struct.usb_ext_cap_descriptor** %ext, align 8, !dbg !10593
  %bmAttributes = getelementptr inbounds %struct.usb_ext_cap_descriptor, %struct.usb_ext_cap_descriptor* %6, i32 0, i32 3, !dbg !10593
  %7 = load i32, i32* %bmAttributes, align 1, !dbg !10593
  store i32 %7, i32* %attr, align 4, !dbg !10594
  %8 = load i32, i32* %attr, align 4, !dbg !10595
  %and = and i32 %8, -65535, !dbg !10597
  %tobool = icmp ne i32 %and, 0, !dbg !10597
  br i1 %tobool, label %if.then2, label %if.end5, !dbg !10598

if.then2:                                         ; preds = %if.end
  %9 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10599
  %intf3 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %9, i32 0, i32 0, !dbg !10599
  %10 = load %struct.usb_interface*, %struct.usb_interface** %intf3, align 8, !dbg !10599
  %dev4 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %10, i32 0, i32 7, !dbg !10599
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.89, i64 0, i64 0)) #12, !dbg !10599
  store i32 0, i32* %retval, align 4, !dbg !10601
  br label %return, !dbg !10601

if.end5:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !10602
  br label %return, !dbg !10602

return:                                           ; preds = %if.end5, %if.then2, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !10603
  ret i32 %11, !dbg !10603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_good_ss_cap(%struct.usbtest_dev* %tdev, i8* %buf) #2 !dbg !10604 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %buf.addr = alloca i8*, align 8
  %ss = alloca %struct.usb_ss_cap_descriptor*, align 8
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !10605, metadata !DIExpression()), !dbg !10606
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10607, metadata !DIExpression()), !dbg !10608
  call void @llvm.dbg.declare(metadata %struct.usb_ss_cap_descriptor** %ss, metadata !10609, metadata !DIExpression()), !dbg !10610
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10611
  %1 = bitcast i8* %0 to %struct.usb_ss_cap_descriptor*, !dbg !10612
  store %struct.usb_ss_cap_descriptor* %1, %struct.usb_ss_cap_descriptor** %ss, align 8, !dbg !10613
  %2 = load %struct.usb_ss_cap_descriptor*, %struct.usb_ss_cap_descriptor** %ss, align 8, !dbg !10614
  %bLength = getelementptr inbounds %struct.usb_ss_cap_descriptor, %struct.usb_ss_cap_descriptor* %2, i32 0, i32 0, !dbg !10616
  %3 = load i8, i8* %bLength, align 1, !dbg !10616
  %conv = zext i8 %3 to i32, !dbg !10614
  %cmp = icmp ne i32 %conv, 10, !dbg !10617
  br i1 %cmp, label %if.then, label %if.end, !dbg !10618

if.then:                                          ; preds = %entry
  %4 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10619
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %4, i32 0, i32 0, !dbg !10619
  %5 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10619
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %5, i32 0, i32 7, !dbg !10619
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.90, i64 0, i64 0)) #12, !dbg !10619
  store i32 0, i32* %retval, align 4, !dbg !10621
  br label %return, !dbg !10621

if.end:                                           ; preds = %entry
  %6 = load %struct.usb_ss_cap_descriptor*, %struct.usb_ss_cap_descriptor** %ss, align 8, !dbg !10622
  %bmAttributes = getelementptr inbounds %struct.usb_ss_cap_descriptor, %struct.usb_ss_cap_descriptor* %6, i32 0, i32 3, !dbg !10624
  %7 = load i8, i8* %bmAttributes, align 1, !dbg !10624
  %conv2 = zext i8 %7 to i32, !dbg !10622
  %and = and i32 %conv2, -3, !dbg !10625
  %tobool = icmp ne i32 %and, 0, !dbg !10625
  br i1 %tobool, label %if.then3, label %if.end6, !dbg !10626

if.then3:                                         ; preds = %if.end
  %8 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10627
  %intf4 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %8, i32 0, i32 0, !dbg !10627
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf4, align 8, !dbg !10627
  %dev5 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %9, i32 0, i32 7, !dbg !10627
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.91, i64 0, i64 0)) #12, !dbg !10627
  store i32 0, i32* %retval, align 4, !dbg !10629
  br label %return, !dbg !10629

if.end6:                                          ; preds = %if.end
  %10 = load %struct.usb_ss_cap_descriptor*, %struct.usb_ss_cap_descriptor** %ss, align 8, !dbg !10630
  %wSpeedSupported = getelementptr inbounds %struct.usb_ss_cap_descriptor, %struct.usb_ss_cap_descriptor* %10, i32 0, i32 4, !dbg !10630
  %11 = load i16, i16* %wSpeedSupported, align 1, !dbg !10630
  %conv7 = zext i16 %11 to i32, !dbg !10630
  %and8 = and i32 %conv7, -16, !dbg !10632
  %tobool9 = icmp ne i32 %and8, 0, !dbg !10632
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !10633

if.then10:                                        ; preds = %if.end6
  %12 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10634
  %intf11 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %12, i32 0, i32 0, !dbg !10634
  %13 = load %struct.usb_interface*, %struct.usb_interface** %intf11, align 8, !dbg !10634
  %dev12 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %13, i32 0, i32 7, !dbg !10634
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.92, i64 0, i64 0)) #12, !dbg !10634
  store i32 0, i32* %retval, align 4, !dbg !10636
  br label %return, !dbg !10636

if.end13:                                         ; preds = %if.end6
  store i32 1, i32* %retval, align 4, !dbg !10637
  br label %return, !dbg !10637

return:                                           ; preds = %if.end13, %if.then10, %if.then3, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !10638
  ret i32 %14, !dbg !10638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_good_con_id(%struct.usbtest_dev* %tdev, i8* %buf) #2 !dbg !10639 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %buf.addr = alloca i8*, align 8
  %con_id = alloca %struct.usb_ss_container_id_descriptor*, align 8
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10642, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.declare(metadata %struct.usb_ss_container_id_descriptor** %con_id, metadata !10644, metadata !DIExpression()), !dbg !10645
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10646
  %1 = bitcast i8* %0 to %struct.usb_ss_container_id_descriptor*, !dbg !10647
  store %struct.usb_ss_container_id_descriptor* %1, %struct.usb_ss_container_id_descriptor** %con_id, align 8, !dbg !10648
  %2 = load %struct.usb_ss_container_id_descriptor*, %struct.usb_ss_container_id_descriptor** %con_id, align 8, !dbg !10649
  %bLength = getelementptr inbounds %struct.usb_ss_container_id_descriptor, %struct.usb_ss_container_id_descriptor* %2, i32 0, i32 0, !dbg !10651
  %3 = load i8, i8* %bLength, align 1, !dbg !10651
  %conv = zext i8 %3 to i32, !dbg !10649
  %cmp = icmp ne i32 %conv, 20, !dbg !10652
  br i1 %cmp, label %if.then, label %if.end, !dbg !10653

if.then:                                          ; preds = %entry
  %4 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10654
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %4, i32 0, i32 0, !dbg !10654
  %5 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10654
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %5, i32 0, i32 7, !dbg !10654
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.93, i64 0, i64 0)) #12, !dbg !10654
  store i32 0, i32* %retval, align 4, !dbg !10656
  br label %return, !dbg !10656

if.end:                                           ; preds = %entry
  %6 = load %struct.usb_ss_container_id_descriptor*, %struct.usb_ss_container_id_descriptor** %con_id, align 8, !dbg !10657
  %bReserved = getelementptr inbounds %struct.usb_ss_container_id_descriptor, %struct.usb_ss_container_id_descriptor* %6, i32 0, i32 3, !dbg !10659
  %7 = load i8, i8* %bReserved, align 1, !dbg !10659
  %tobool = icmp ne i8 %7, 0, !dbg !10657
  br i1 %tobool, label %if.then2, label %if.end5, !dbg !10660

if.then2:                                         ; preds = %if.end
  %8 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10661
  %intf3 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %8, i32 0, i32 0, !dbg !10661
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf3, align 8, !dbg !10661
  %dev4 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %9, i32 0, i32 7, !dbg !10661
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.89, i64 0, i64 0)) #12, !dbg !10661
  store i32 0, i32* %retval, align 4, !dbg !10663
  br label %return, !dbg !10663

if.end5:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !10664
  br label %return, !dbg !10664

return:                                           ; preds = %if.end5, %if.then2, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !10665
  ret i32 %10, !dbg !10665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_good_config(%struct.usbtest_dev* %tdev, i32 %len) #2 !dbg !10666 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %len.addr = alloca i32, align 4
  %config = alloca %struct.usb_config_descriptor*, align 8
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !10667, metadata !DIExpression()), !dbg !10668
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !10669, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.declare(metadata %struct.usb_config_descriptor** %config, metadata !10671, metadata !DIExpression()), !dbg !10672
  %0 = load i32, i32* %len.addr, align 4, !dbg !10673
  %conv = sext i32 %0 to i64, !dbg !10673
  %cmp = icmp ult i64 %conv, 9, !dbg !10675
  br i1 %cmp, label %if.then, label %if.end, !dbg !10676

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10677
  br label %return, !dbg !10677

if.end:                                           ; preds = %entry
  %1 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10678
  %buf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %1, i32 0, i32 13, !dbg !10679
  %2 = load i8*, i8** %buf, align 8, !dbg !10679
  %3 = bitcast i8* %2 to %struct.usb_config_descriptor*, !dbg !10680
  store %struct.usb_config_descriptor* %3, %struct.usb_config_descriptor** %config, align 8, !dbg !10681
  %4 = load %struct.usb_config_descriptor*, %struct.usb_config_descriptor** %config, align 8, !dbg !10682
  %bDescriptorType = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %4, i32 0, i32 1, !dbg !10683
  %5 = load i8, i8* %bDescriptorType, align 1, !dbg !10683
  %conv2 = zext i8 %5 to i32, !dbg !10682
  switch i32 %conv2, label %sw.default [
    i32 2, label %sw.bb
    i32 7, label %sw.bb
  ], !dbg !10684

sw.bb:                                            ; preds = %if.end, %if.end
  %6 = load %struct.usb_config_descriptor*, %struct.usb_config_descriptor** %config, align 8, !dbg !10685
  %bLength = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %6, i32 0, i32 0, !dbg !10688
  %7 = load i8, i8* %bLength, align 1, !dbg !10688
  %conv3 = zext i8 %7 to i32, !dbg !10685
  %cmp4 = icmp ne i32 %conv3, 9, !dbg !10689
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !10690

if.then6:                                         ; preds = %sw.bb
  %8 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10691
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %8, i32 0, i32 0, !dbg !10691
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10691
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %9, i32 0, i32 7, !dbg !10691
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.94, i64 0, i64 0)) #12, !dbg !10691
  store i32 0, i32* %retval, align 4, !dbg !10693
  br label %return, !dbg !10693

if.end7:                                          ; preds = %sw.bb
  %10 = load i32, i32* @realworld, align 4, !dbg !10694
  %tobool = icmp ne i32 %10, 0, !dbg !10694
  br i1 %tobool, label %if.end13, label %land.lhs.true, !dbg !10696

land.lhs.true:                                    ; preds = %if.end7
  %11 = load %struct.usb_config_descriptor*, %struct.usb_config_descriptor** %config, align 8, !dbg !10697
  %bmAttributes = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %11, i32 0, i32 6, !dbg !10698
  %12 = load i8, i8* %bmAttributes, align 1, !dbg !10698
  %conv8 = zext i8 %12 to i32, !dbg !10697
  %and = and i32 %conv8, 128, !dbg !10699
  %tobool9 = icmp ne i32 %and, 0, !dbg !10699
  br i1 %tobool9, label %if.end13, label %if.then10, !dbg !10700

if.then10:                                        ; preds = %land.lhs.true
  %13 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10701
  %intf11 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %13, i32 0, i32 0, !dbg !10701
  %14 = load %struct.usb_interface*, %struct.usb_interface** %intf11, align 8, !dbg !10701
  %dev12 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %14, i32 0, i32 7, !dbg !10701
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.95, i64 0, i64 0)) #12, !dbg !10701
  store i32 0, i32* %retval, align 4, !dbg !10703
  br label %return, !dbg !10703

if.end13:                                         ; preds = %land.lhs.true, %if.end7
  %15 = load %struct.usb_config_descriptor*, %struct.usb_config_descriptor** %config, align 8, !dbg !10704
  %bmAttributes14 = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %15, i32 0, i32 6, !dbg !10706
  %16 = load i8, i8* %bmAttributes14, align 1, !dbg !10706
  %conv15 = zext i8 %16 to i32, !dbg !10704
  %and16 = and i32 %conv15, 31, !dbg !10707
  %tobool17 = icmp ne i32 %and16, 0, !dbg !10707
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !10708

if.then18:                                        ; preds = %if.end13
  %17 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10709
  %intf19 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %17, i32 0, i32 0, !dbg !10709
  %18 = load %struct.usb_interface*, %struct.usb_interface** %intf19, align 8, !dbg !10709
  %dev20 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %18, i32 0, i32 7, !dbg !10709
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev20, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.96, i64 0, i64 0)) #12, !dbg !10709
  store i32 0, i32* %retval, align 4, !dbg !10711
  br label %return, !dbg !10711

if.end21:                                         ; preds = %if.end13
  br label %sw.epilog, !dbg !10712

sw.default:                                       ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10713
  br label %return, !dbg !10713

sw.epilog:                                        ; preds = %if.end21
  %19 = load %struct.usb_config_descriptor*, %struct.usb_config_descriptor** %config, align 8, !dbg !10714
  %wTotalLength = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %19, i32 0, i32 2, !dbg !10714
  %20 = load i16, i16* %wTotalLength, align 1, !dbg !10714
  %conv22 = zext i16 %20 to i32, !dbg !10714
  %21 = load i32, i32* %len.addr, align 4, !dbg !10716
  %cmp23 = icmp eq i32 %conv22, %21, !dbg !10717
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !10718

if.then25:                                        ; preds = %sw.epilog
  store i32 1, i32* %retval, align 4, !dbg !10719
  br label %return, !dbg !10719

if.end26:                                         ; preds = %sw.epilog
  %22 = load %struct.usb_config_descriptor*, %struct.usb_config_descriptor** %config, align 8, !dbg !10720
  %wTotalLength27 = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %22, i32 0, i32 2, !dbg !10720
  %23 = load i16, i16* %wTotalLength27, align 1, !dbg !10720
  %conv28 = zext i16 %23 to i32, !dbg !10720
  %cmp29 = icmp sge i32 %conv28, 256, !dbg !10722
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !10723

if.then31:                                        ; preds = %if.end26
  store i32 1, i32* %retval, align 4, !dbg !10724
  br label %return, !dbg !10724

if.end32:                                         ; preds = %if.end26
  %24 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !10725
  %intf33 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %24, i32 0, i32 0, !dbg !10725
  %25 = load %struct.usb_interface*, %struct.usb_interface** %intf33, align 8, !dbg !10725
  %dev34 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %25, i32 0, i32 7, !dbg !10725
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev34, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.97, i64 0, i64 0)) #12, !dbg !10725
  store i32 0, i32* %retval, align 4, !dbg !10726
  br label %return, !dbg !10726

return:                                           ; preds = %if.end32, %if.then31, %if.then25, %sw.default, %if.then18, %if.then10, %if.then6, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !10727
  ret i32 %26, !dbg !10727
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_get_std_status(%struct.usb_device* %dev, i32 %recip, i32 %target, i8* %data) #2 !dbg !10728 {
entry:
  %dev.addr = alloca %struct.usb_device*, align 8
  %recip.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !10731, metadata !DIExpression()), !dbg !10732
  store i32 %recip, i32* %recip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %recip.addr, metadata !10733, metadata !DIExpression()), !dbg !10734
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !10735, metadata !DIExpression()), !dbg !10736
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10737, metadata !DIExpression()), !dbg !10738
  %0 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !10739
  %1 = load i32, i32* %recip.addr, align 4, !dbg !10740
  %2 = load i32, i32* %target.addr, align 4, !dbg !10741
  %3 = load i8*, i8** %data.addr, align 8, !dbg !10742
  %call = call i32 @usb_get_status(%struct.usb_device* %0, i32 %1, i32 0, i32 %2, i8* %3) #11, !dbg !10743
  ret i32 %call, !dbg !10744
}

; Function Attrs: noredzone
declare dso_local i32 @usb_get_status(%struct.usb_device*, i32, i32, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #2 !dbg !10745 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10746, metadata !DIExpression()), !dbg !10747
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10748, metadata !DIExpression()), !dbg !10749
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10750, metadata !DIExpression()), !dbg !10751
  %0 = load i64, i64* %n.addr, align 8, !dbg !10752
  %1 = load i64, i64* %size.addr, align 8, !dbg !10753
  %2 = load i32, i32* %flags.addr, align 4, !dbg !10754
  %or = or i32 %2, 256, !dbg !10755
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !10756
  ret i8* %call, !dbg !10757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ctrl_complete(%struct.urb* %urb) #2 !dbg !10758 {
entry:
  %lock.addr.i143 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i143, metadata !10759, metadata !DIExpression()), !dbg !10761
  %lock.addr.i141 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i141, metadata !10770, metadata !DIExpression()), !dbg !10772
  %lock.addr.i139 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i139, metadata !10774, metadata !DIExpression()), !dbg !10778
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10780, metadata !DIExpression()), !dbg !10781
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7671, metadata !DIExpression()), !dbg !10782
  %urb.addr = alloca %struct.urb*, align 8
  %ctx = alloca %struct.ctrl_ctx*, align 8
  %reqp = alloca %struct.usb_ctrlrequest*, align 8
  %subcase = alloca %struct.subcase*, align 8
  %status = alloca i32, align 4
  %flags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.subcase*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %i = alloca i32, align 4
  %u = alloca %struct.urb*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !10789, metadata !DIExpression()), !dbg !10790
  call void @llvm.dbg.declare(metadata %struct.ctrl_ctx** %ctx, metadata !10791, metadata !DIExpression()), !dbg !10793
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10794
  %context = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 27, !dbg !10795
  %1 = load i8*, i8** %context, align 8, !dbg !10795
  %2 = bitcast i8* %1 to %struct.ctrl_ctx*, !dbg !10794
  store %struct.ctrl_ctx* %2, %struct.ctrl_ctx** %ctx, align 8, !dbg !10793
  call void @llvm.dbg.declare(metadata %struct.usb_ctrlrequest** %reqp, metadata !10796, metadata !DIExpression()), !dbg !10797
  call void @llvm.dbg.declare(metadata %struct.subcase** %subcase, metadata !10798, metadata !DIExpression()), !dbg !10799
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10800, metadata !DIExpression()), !dbg !10801
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10802
  %status1 = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 12, !dbg !10803
  %4 = load i32, i32* %status1, align 8, !dbg !10803
  store i32 %4, i32* %status, align 4, !dbg !10801
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10804, metadata !DIExpression()), !dbg !10805
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10806
  %setup_packet = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 21, !dbg !10807
  %6 = load i8*, i8** %setup_packet, align 8, !dbg !10807
  %7 = bitcast i8* %6 to %struct.usb_ctrlrequest*, !dbg !10808
  store %struct.usb_ctrlrequest* %7, %struct.usb_ctrlrequest** %reqp, align 8, !dbg !10809
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10810, metadata !DIExpression()), !dbg !10812
  %8 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %reqp, align 8, !dbg !10812
  %9 = bitcast %struct.usb_ctrlrequest* %8 to i8*, !dbg !10812
  store i8* %9, i8** %__mptr, align 8, !dbg !10812
  br label %do.body, !dbg !10812

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10813

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !10812
  %add.ptr = getelementptr i8, i8* %10, i64 0, !dbg !10812
  %11 = bitcast i8* %add.ptr to %struct.subcase*, !dbg !10812
  store %struct.subcase* %11, %struct.subcase** %tmp, align 8, !dbg !10813
  %12 = load %struct.subcase*, %struct.subcase** %tmp, align 8, !dbg !10812
  store %struct.subcase* %12, %struct.subcase** %subcase, align 8, !dbg !10815
  br label %do.body2, !dbg !10816

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !10817

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10818, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10821, metadata !DIExpression()), !dbg !10820
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10820
  %conv = zext i1 %cmp to i32, !dbg !10820
  store i32 1, i32* %tmp4, align 4, !dbg !10820
  %13 = load i32, i32* %tmp4, align 4, !dbg !10820
  br label %do.body5, !dbg !10822

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !10823

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !10824

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !10826, metadata !DIExpression()), !dbg !10829
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !10830, metadata !DIExpression()), !dbg !10829
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !10829
  %conv11 = zext i1 %cmp10 to i32, !dbg !10829
  store i32 1, i32* %tmp12, align 4, !dbg !10829
  %14 = load i32, i32* %tmp12, align 4, !dbg !10829
  %call = call i64 @arch_local_irq_save() #11, !dbg !10831
  store i64 %call, i64* %flags, align 8, !dbg !10831
  br label %do.end13, !dbg !10831

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !10824

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !10823

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10832, !srcloc !10833
  br label %do.body16, !dbg !10832

do.body16:                                        ; preds = %do.body15
  %15 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10834
  %lock = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %15, i32 0, i32 0, !dbg !10834
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10835
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !10836
  %rlock.i = bitcast %union.anon.4* %17 to %struct.raw_spinlock*, !dbg !10836
  br label %do.end18, !dbg !10834

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !10832

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10823

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10822

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10817

do.end22:                                         ; preds = %do.end21
  %18 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10837
  %count = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %18, i32 0, i32 3, !dbg !10838
  %19 = load i32, i32* %count, align 8, !dbg !10839
  %dec = add i32 %19, -1, !dbg !10839
  store i32 %dec, i32* %count, align 8, !dbg !10839
  %20 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10840
  %pending = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %20, i32 0, i32 4, !dbg !10841
  %21 = load i32, i32* %pending, align 4, !dbg !10842
  %dec23 = add i32 %21, -1, !dbg !10842
  store i32 %dec23, i32* %pending, align 4, !dbg !10842
  %22 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10843
  %number = getelementptr inbounds %struct.subcase, %struct.subcase* %22, i32 0, i32 1, !dbg !10845
  %23 = load i32, i32* %number, align 4, !dbg !10845
  %cmp24 = icmp sgt i32 %23, 0, !dbg !10846
  br i1 %cmp24, label %if.then, label %if.end35, !dbg !10847

if.then:                                          ; preds = %do.end22
  %24 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10848
  %number26 = getelementptr inbounds %struct.subcase, %struct.subcase* %24, i32 0, i32 1, !dbg !10851
  %25 = load i32, i32* %number26, align 4, !dbg !10851
  %26 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10852
  %last = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %26, i32 0, i32 8, !dbg !10853
  %27 = load i32, i32* %last, align 8, !dbg !10853
  %sub = sub i32 %25, %27, !dbg !10854
  %cmp27 = icmp ne i32 %sub, 1, !dbg !10855
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !10856

if.then29:                                        ; preds = %if.then
  %28 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10857
  %dev = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %28, i32 0, i32 1, !dbg !10857
  %29 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !10857
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %29, i32 0, i32 0, !dbg !10857
  %30 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10857
  %dev30 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %30, i32 0, i32 7, !dbg !10857
  %31 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10857
  %number31 = getelementptr inbounds %struct.subcase, %struct.subcase* %31, i32 0, i32 1, !dbg !10857
  %32 = load i32, i32* %number31, align 4, !dbg !10857
  %33 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10857
  %last32 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %33, i32 0, i32 8, !dbg !10857
  %34 = load i32, i32* %last32, align 8, !dbg !10857
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev30, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.100, i64 0, i64 0), i32 %32, i32 %34) #12, !dbg !10857
  store i32 -33, i32* %status, align 4, !dbg !10859
  %35 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10860
  %number33 = getelementptr inbounds %struct.subcase, %struct.subcase* %35, i32 0, i32 1, !dbg !10861
  %36 = load i32, i32* %number33, align 4, !dbg !10861
  %37 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10862
  %last34 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %37, i32 0, i32 8, !dbg !10863
  store i32 %36, i32* %last34, align 8, !dbg !10864
  br label %error, !dbg !10865

if.end:                                           ; preds = %if.then
  br label %if.end35, !dbg !10866

if.end35:                                         ; preds = %if.end, %do.end22
  %38 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10867
  %number36 = getelementptr inbounds %struct.subcase, %struct.subcase* %38, i32 0, i32 1, !dbg !10868
  %39 = load i32, i32* %number36, align 4, !dbg !10868
  %40 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10869
  %last37 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %40, i32 0, i32 8, !dbg !10870
  store i32 %39, i32* %last37, align 8, !dbg !10871
  %41 = load i32, i32* %status, align 4, !dbg !10872
  %42 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10874
  %expected = getelementptr inbounds %struct.subcase, %struct.subcase* %42, i32 0, i32 2, !dbg !10875
  %43 = load i32, i32* %expected, align 4, !dbg !10875
  %cmp38 = icmp eq i32 %41, %43, !dbg !10876
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !10877

if.then40:                                        ; preds = %if.end35
  store i32 0, i32* %status, align 4, !dbg !10878
  br label %if.end70, !dbg !10879

if.else:                                          ; preds = %if.end35
  %44 = load i32, i32* %status, align 4, !dbg !10880
  %cmp41 = icmp ne i32 %44, -104, !dbg !10882
  br i1 %cmp41, label %if.then43, label %if.end69, !dbg !10883

if.then43:                                        ; preds = %if.else
  %45 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10884
  %expected44 = getelementptr inbounds %struct.subcase, %struct.subcase* %45, i32 0, i32 2, !dbg !10887
  %46 = load i32, i32* %expected44, align 4, !dbg !10887
  %cmp45 = icmp sgt i32 %46, 0, !dbg !10888
  br i1 %cmp45, label %land.lhs.true, label %if.else54, !dbg !10889

land.lhs.true:                                    ; preds = %if.then43
  %47 = load i32, i32* %status, align 4, !dbg !10890
  %48 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10891
  %expected47 = getelementptr inbounds %struct.subcase, %struct.subcase* %48, i32 0, i32 2, !dbg !10892
  %49 = load i32, i32* %expected47, align 4, !dbg !10892
  %sub48 = sub i32 0, %49, !dbg !10893
  %cmp49 = icmp eq i32 %47, %sub48, !dbg !10894
  br i1 %cmp49, label %if.then53, label %lor.lhs.false, !dbg !10895

lor.lhs.false:                                    ; preds = %land.lhs.true
  %50 = load i32, i32* %status, align 4, !dbg !10896
  %cmp51 = icmp eq i32 %50, 0, !dbg !10897
  br i1 %cmp51, label %if.then53, label %if.else54, !dbg !10898

if.then53:                                        ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %status, align 4, !dbg !10899
  br label %if.end68, !dbg !10900

if.else54:                                        ; preds = %lor.lhs.false, %if.then43
  %51 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10901
  %number55 = getelementptr inbounds %struct.subcase, %struct.subcase* %51, i32 0, i32 1, !dbg !10903
  %52 = load i32, i32* %number55, align 4, !dbg !10903
  %cmp56 = icmp eq i32 %52, 12, !dbg !10904
  br i1 %cmp56, label %land.lhs.true58, label %if.else62, !dbg !10905

land.lhs.true58:                                  ; preds = %if.else54
  %53 = load i32, i32* %status, align 4, !dbg !10906
  %cmp59 = icmp eq i32 %53, -32, !dbg !10907
  br i1 %cmp59, label %if.then61, label %if.else62, !dbg !10908

if.then61:                                        ; preds = %land.lhs.true58
  store i32 0, i32* %status, align 4, !dbg !10909
  br label %if.end67, !dbg !10910

if.else62:                                        ; preds = %land.lhs.true58, %if.else54
  %54 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10911
  %dev63 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %54, i32 0, i32 1, !dbg !10911
  %55 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev63, align 8, !dbg !10911
  %intf64 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %55, i32 0, i32 0, !dbg !10911
  %56 = load %struct.usb_interface*, %struct.usb_interface** %intf64, align 8, !dbg !10911
  %dev65 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %56, i32 0, i32 7, !dbg !10911
  %57 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10911
  %number66 = getelementptr inbounds %struct.subcase, %struct.subcase* %57, i32 0, i32 1, !dbg !10911
  %58 = load i32, i32* %number66, align 4, !dbg !10911
  %59 = load i32, i32* %status, align 4, !dbg !10911
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev65, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.101, i64 0, i64 0), i32 %58, i32 %59) #12, !dbg !10911
  br label %if.end67

if.end67:                                         ; preds = %if.else62, %if.then61
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then53
  br label %if.end69, !dbg !10912

if.end69:                                         ; preds = %if.end68, %if.else
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then40
  %60 = load i32, i32* %status, align 4, !dbg !10913
  %tobool = icmp ne i32 %60, 0, !dbg !10913
  br i1 %tobool, label %if.then71, label %if.end105, !dbg !10914

if.then71:                                        ; preds = %if.end70
  br label %error, !dbg !10915

error:                                            ; preds = %if.then71, %if.then29
  call void @llvm.dbg.label(metadata !10916), !dbg !10917
  %61 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10918
  %status72 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %61, i32 0, i32 5, !dbg !10919
  %62 = load i32, i32* %status72, align 8, !dbg !10919
  %cmp73 = icmp eq i32 %62, 0, !dbg !10920
  br i1 %cmp73, label %if.then75, label %if.end104, !dbg !10921

if.then75:                                        ; preds = %error
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10922, metadata !DIExpression()), !dbg !10923
  %63 = load i32, i32* %status, align 4, !dbg !10924
  %64 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10925
  %status76 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %64, i32 0, i32 5, !dbg !10926
  store i32 %63, i32* %status76, align 8, !dbg !10927
  %65 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10928
  %dev77 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %65, i32 0, i32 1, !dbg !10928
  %66 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev77, align 8, !dbg !10928
  %intf78 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %66, i32 0, i32 0, !dbg !10928
  %67 = load %struct.usb_interface*, %struct.usb_interface** %intf78, align 8, !dbg !10928
  %dev79 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %67, i32 0, i32 7, !dbg !10928
  %68 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %reqp, align 8, !dbg !10928
  %bRequestType = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 0, !dbg !10928
  %69 = load i8, i8* %bRequestType, align 1, !dbg !10928
  %conv80 = zext i8 %69 to i32, !dbg !10928
  %70 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %reqp, align 8, !dbg !10928
  %bRequest = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %70, i32 0, i32 1, !dbg !10928
  %71 = load i8, i8* %bRequest, align 1, !dbg !10928
  %conv81 = zext i8 %71 to i32, !dbg !10928
  %72 = load i32, i32* %status, align 4, !dbg !10928
  %73 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10928
  %count82 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %73, i32 0, i32 3, !dbg !10928
  %74 = load i32, i32* %count82, align 8, !dbg !10928
  %75 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10928
  %number83 = getelementptr inbounds %struct.subcase, %struct.subcase* %75, i32 0, i32 1, !dbg !10928
  %76 = load i32, i32* %number83, align 4, !dbg !10928
  %77 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10928
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %77, i32 0, i32 20, !dbg !10928
  %78 = load i32, i32* %actual_length, align 4, !dbg !10928
  %79 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10928
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %79, i32 0, i32 19, !dbg !10928
  %80 = load i32, i32* %transfer_buffer_length, align 8, !dbg !10928
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev79, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.102, i64 0, i64 0), i32 %conv80, i32 %conv81, i32 %72, i32 %74, i32 %76, i32 %78, i32 %80) #12, !dbg !10928
  store i32 1, i32* %i, align 4, !dbg !10929
  br label %for.cond, !dbg !10930

for.cond:                                         ; preds = %for.inc, %if.then75
  %81 = load i32, i32* %i, align 4, !dbg !10931
  %82 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10932
  %param = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %82, i32 0, i32 7, !dbg !10933
  %83 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param, align 8, !dbg !10933
  %sglen = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %83, i32 0, i32 4, !dbg !10934
  %84 = load i32, i32* %sglen, align 4, !dbg !10934
  %cmp84 = icmp ult i32 %81, %84, !dbg !10935
  br i1 %cmp84, label %for.body, label %for.end, !dbg !10936

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.urb** %u, metadata !10937, metadata !DIExpression()), !dbg !10938
  %85 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10939
  %urb86 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %85, i32 0, i32 6, !dbg !10940
  %86 = load %struct.urb**, %struct.urb*** %urb86, align 8, !dbg !10940
  %87 = load i32, i32* %i, align 4, !dbg !10941
  %88 = load %struct.subcase*, %struct.subcase** %subcase, align 8, !dbg !10942
  %number87 = getelementptr inbounds %struct.subcase, %struct.subcase* %88, i32 0, i32 1, !dbg !10943
  %89 = load i32, i32* %number87, align 4, !dbg !10943
  %add = add i32 %87, %89, !dbg !10944
  %90 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10945
  %param88 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %90, i32 0, i32 7, !dbg !10946
  %91 = load %struct.usbtest_param_32*, %struct.usbtest_param_32** %param88, align 8, !dbg !10946
  %sglen89 = getelementptr inbounds %struct.usbtest_param_32, %struct.usbtest_param_32* %91, i32 0, i32 4, !dbg !10947
  %92 = load i32, i32* %sglen89, align 4, !dbg !10947
  %rem = urem i32 %add, %92, !dbg !10948
  %idxprom = zext i32 %rem to i64, !dbg !10939
  %arrayidx = getelementptr %struct.urb*, %struct.urb** %86, i64 %idxprom, !dbg !10939
  %93 = load %struct.urb*, %struct.urb** %arrayidx, align 8, !dbg !10939
  store %struct.urb* %93, %struct.urb** %u, align 8, !dbg !10938
  %94 = load %struct.urb*, %struct.urb** %u, align 8, !dbg !10949
  %95 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10951
  %cmp90 = icmp eq %struct.urb* %94, %95, !dbg !10952
  br i1 %cmp90, label %if.then95, label %lor.lhs.false92, !dbg !10953

lor.lhs.false92:                                  ; preds = %for.body
  %96 = load %struct.urb*, %struct.urb** %u, align 8, !dbg !10954
  %dev93 = getelementptr inbounds %struct.urb, %struct.urb* %96, i32 0, i32 8, !dbg !10955
  %97 = load %struct.usb_device*, %struct.usb_device** %dev93, align 8, !dbg !10955
  %tobool94 = icmp ne %struct.usb_device* %97, null, !dbg !10954
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !10956

if.then95:                                        ; preds = %lor.lhs.false92, %for.body
  br label %for.inc, !dbg !10957

if.end96:                                         ; preds = %lor.lhs.false92
  %98 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10958
  %lock97 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %98, i32 0, i32 0, !dbg !10959
  store %struct.spinlock* %lock97, %struct.spinlock** %lock.addr.i141, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10960, !srcloc !10962
  %99 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i141, align 8, !dbg !10963
  %100 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %99, i32 0, i32 0, !dbg !10963
  %rlock.i142 = bitcast %union.anon.4* %100 to %struct.raw_spinlock*, !dbg !10963
  %101 = load %struct.urb*, %struct.urb** %u, align 8, !dbg !10965
  %call98 = call i32 @usb_unlink_urb(%struct.urb* %101) #11, !dbg !10966
  store i32 %call98, i32* %status, align 4, !dbg !10967
  %102 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10968
  %lock99 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %102, i32 0, i32 0, !dbg !10969
  store %struct.spinlock* %lock99, %struct.spinlock** %lock.addr.i143, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10970, !srcloc !10972
  %103 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i143, align 8, !dbg !10973
  %104 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %103, i32 0, i32 0, !dbg !10973
  %rlock.i144 = bitcast %union.anon.4* %104 to %struct.raw_spinlock*, !dbg !10973
  %105 = load i32, i32* %status, align 4, !dbg !10975
  switch i32 %105, label %sw.default [
    i32 -115, label %sw.bb
    i32 -16, label %sw.bb
    i32 -43, label %sw.bb
  ], !dbg !10976

sw.bb:                                            ; preds = %if.end96, %if.end96, %if.end96
  br label %for.inc, !dbg !10977

sw.default:                                       ; preds = %if.end96
  %106 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10979
  %dev100 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %106, i32 0, i32 1, !dbg !10979
  %107 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev100, align 8, !dbg !10979
  %intf101 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %107, i32 0, i32 0, !dbg !10979
  %108 = load %struct.usb_interface*, %struct.usb_interface** %intf101, align 8, !dbg !10979
  %dev102 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %108, i32 0, i32 7, !dbg !10979
  %109 = load i32, i32* %status, align 4, !dbg !10979
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev102, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.103, i64 0, i64 0), i32 %109) #12, !dbg !10979
  br label %sw.epilog, !dbg !10980

sw.epilog:                                        ; preds = %sw.default
  br label %for.inc, !dbg !10981

for.inc:                                          ; preds = %sw.epilog, %sw.bb, %if.then95
  %110 = load i32, i32* %i, align 4, !dbg !10982
  %inc = add i32 %110, 1, !dbg !10982
  store i32 %inc, i32* %i, align 4, !dbg !10982
  br label %for.cond, !dbg !10983, !llvm.loop !10984

for.end:                                          ; preds = %for.cond
  %111 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10986
  %status103 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %111, i32 0, i32 5, !dbg !10987
  %112 = load i32, i32* %status103, align 8, !dbg !10987
  store i32 %112, i32* %status, align 4, !dbg !10988
  br label %if.end104, !dbg !10989

if.end104:                                        ; preds = %for.end, %error
  br label %if.end105, !dbg !10990

if.end105:                                        ; preds = %if.end104, %if.end70
  %113 = load i32, i32* %status, align 4, !dbg !10991
  %cmp106 = icmp eq i32 %113, 0, !dbg !10993
  br i1 %cmp106, label %land.lhs.true108, label %if.else130, !dbg !10994

land.lhs.true108:                                 ; preds = %if.end105
  %114 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10995
  %pending109 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %114, i32 0, i32 4, !dbg !10996
  %115 = load i32, i32* %pending109, align 4, !dbg !10996
  %116 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !10997
  %count110 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %116, i32 0, i32 3, !dbg !10998
  %117 = load i32, i32* %count110, align 8, !dbg !10998
  %cmp111 = icmp ult i32 %115, %117, !dbg !10999
  br i1 %cmp111, label %if.then113, label %if.else130, !dbg !11000

if.then113:                                       ; preds = %land.lhs.true108
  %118 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11001
  %call114 = call i32 @usb_submit_urb(%struct.urb* %118, i32 2592) #11, !dbg !11003
  store i32 %call114, i32* %status, align 4, !dbg !11004
  %119 = load i32, i32* %status, align 4, !dbg !11005
  %cmp115 = icmp ne i32 %119, 0, !dbg !11007
  br i1 %cmp115, label %if.then117, label %if.else126, !dbg !11008

if.then117:                                       ; preds = %if.then113
  %120 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !11009
  %dev118 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %120, i32 0, i32 1, !dbg !11009
  %121 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev118, align 8, !dbg !11009
  %intf119 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %121, i32 0, i32 0, !dbg !11009
  %122 = load %struct.usb_interface*, %struct.usb_interface** %intf119, align 8, !dbg !11009
  %dev120 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %122, i32 0, i32 7, !dbg !11009
  %123 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %reqp, align 8, !dbg !11009
  %bRequestType121 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %123, i32 0, i32 0, !dbg !11009
  %124 = load i8, i8* %bRequestType121, align 1, !dbg !11009
  %conv122 = zext i8 %124 to i32, !dbg !11009
  %125 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %reqp, align 8, !dbg !11009
  %bRequest123 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %125, i32 0, i32 1, !dbg !11009
  %126 = load i8, i8* %bRequest123, align 1, !dbg !11009
  %conv124 = zext i8 %126 to i32, !dbg !11009
  %127 = load i32, i32* %status, align 4, !dbg !11009
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev120, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.104, i64 0, i64 0), i32 %conv122, i32 %conv124, i32 %127) #12, !dbg !11009
  %128 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11011
  %dev125 = getelementptr inbounds %struct.urb, %struct.urb* %128, i32 0, i32 8, !dbg !11012
  store %struct.usb_device* null, %struct.usb_device** %dev125, align 8, !dbg !11013
  br label %if.end129, !dbg !11014

if.else126:                                       ; preds = %if.then113
  %129 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !11015
  %pending127 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %129, i32 0, i32 4, !dbg !11016
  %130 = load i32, i32* %pending127, align 4, !dbg !11017
  %inc128 = add i32 %130, 1, !dbg !11017
  store i32 %inc128, i32* %pending127, align 4, !dbg !11017
  br label %if.end129

if.end129:                                        ; preds = %if.else126, %if.then117
  br label %if.end132, !dbg !11018

if.else130:                                       ; preds = %land.lhs.true108, %if.end105
  %131 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11019
  %dev131 = getelementptr inbounds %struct.urb, %struct.urb* %131, i32 0, i32 8, !dbg !11020
  store %struct.usb_device* null, %struct.usb_device** %dev131, align 8, !dbg !11021
  br label %if.end132

if.end132:                                        ; preds = %if.else130, %if.end129
  %132 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !11022
  %pending133 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %132, i32 0, i32 4, !dbg !11024
  %133 = load i32, i32* %pending133, align 4, !dbg !11024
  %cmp134 = icmp eq i32 %133, 0, !dbg !11025
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !11026

if.then136:                                       ; preds = %if.end132
  %134 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !11027
  %complete = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %134, i32 0, i32 2, !dbg !11028
  call void @complete(%struct.completion* %complete) #11, !dbg !11029
  br label %if.end137, !dbg !11029

if.end137:                                        ; preds = %if.then136, %if.end132
  %135 = load %struct.ctrl_ctx*, %struct.ctrl_ctx** %ctx, align 8, !dbg !11030
  %lock138 = getelementptr inbounds %struct.ctrl_ctx, %struct.ctrl_ctx* %135, i32 0, i32 0, !dbg !11031
  %136 = load i64, i64* %flags, align 8, !dbg !11032
  store %struct.spinlock* %lock138, %struct.spinlock** %lock.addr.i139, align 8
  store i64 %136, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !235, metadata !11033, metadata !DIExpression()) #10, !dbg !11036
  call void @llvm.dbg.declare(metadata !235, metadata !11037, metadata !DIExpression()) #10, !dbg !11036
  store i32 1, i32* %tmp.i, align 4, !dbg !11036
  %137 = load i32, i32* %tmp.i, align 4, !dbg !11036
  call void @llvm.dbg.declare(metadata !235, metadata !11038, metadata !DIExpression()) #10, !dbg !11043
  call void @llvm.dbg.declare(metadata !235, metadata !11044, metadata !DIExpression()) #10, !dbg !11043
  store i32 1, i32* %tmp8.i, align 4, !dbg !11043
  %138 = load i32, i32* %tmp8.i, align 4, !dbg !11043
  %139 = load i64, i64* %flags.addr.i, align 8, !dbg !11045
  call void @arch_local_irq_restore(i64 %139) #14, !dbg !11045
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11046, !srcloc !11048
  %140 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i139, align 8, !dbg !11049
  %141 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %140, i32 0, i32 0, !dbg !11049
  %rlock.i140 = bitcast %union.anon.4* %141 to %struct.raw_spinlock*, !dbg !11049
  ret void, !dbg !11051
}

; Function Attrs: noredzone
declare dso_local void @wait_for_completion(%struct.completion*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !11052 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !11056, metadata !DIExpression()), !dbg !11057
  %call = call i64 @arch_local_save_flags() #11, !dbg !11058
  store i64 %call, i64* %f, align 8, !dbg !11059
  call void @arch_local_irq_disable() #11, !dbg !11060
  %0 = load i64, i64* %f, align 8, !dbg !11061
  ret i64 %0, !dbg !11062
}

; Function Attrs: noredzone
declare dso_local i32 @usb_unlink_urb(%struct.urb*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !11063 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !11064, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11067, metadata !DIExpression()), !dbg !11066
  %0 = load i64, i64* %__edi, align 8, !dbg !11066
  store i64 %0, i64* %__edi, align 8, !dbg !11066
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11068, metadata !DIExpression()), !dbg !11066
  %1 = load i64, i64* %__esi, align 8, !dbg !11066
  store i64 %1, i64* %__esi, align 8, !dbg !11066
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11069, metadata !DIExpression()), !dbg !11066
  %2 = load i64, i64* %__edx, align 8, !dbg !11066
  store i64 %2, i64* %__edx, align 8, !dbg !11066
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11070, metadata !DIExpression()), !dbg !11066
  %3 = load i64, i64* %__ecx, align 8, !dbg !11066
  store i64 %3, i64* %__ecx, align 8, !dbg !11066
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11071, metadata !DIExpression()), !dbg !11066
  %4 = load i64, i64* %__eax, align 8, !dbg !11066
  store i64 %4, i64* %__eax, align 8, !dbg !11066
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !11066
  %6 = call i64 @llvm.read_register.i64(metadata !4438), !dbg !11072
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !11072, !srcloc !11075
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11072
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11072
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11072
  call void @llvm.write_register.i64(metadata !4438, i64 %asmresult1), !dbg !11072
  %8 = load i64, i64* %__eax, align 8, !dbg !11072
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !11076, metadata !DIExpression()), !dbg !11078
  store i64 -1, i64* %__mask, align 8, !dbg !11078
  %9 = load i64, i64* %__mask, align 8, !dbg !11078
  store i64 %9, i64* %tmp, align 8, !dbg !11078
  %10 = load i64, i64* %tmp, align 8, !dbg !11078
  %and = and i64 %8, %10, !dbg !11072
  store i64 %and, i64* %__ret, align 8, !dbg !11072
  %11 = load i64, i64* %__ret, align 8, !dbg !11066
  store i64 %11, i64* %tmp2, align 8, !dbg !11079
  %12 = load i64, i64* %tmp2, align 8, !dbg !11066
  ret i64 %12, !dbg !11080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !11081 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11082, metadata !DIExpression()), !dbg !11084
  %0 = load i64, i64* %__edi, align 8, !dbg !11084
  store i64 %0, i64* %__edi, align 8, !dbg !11084
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11085, metadata !DIExpression()), !dbg !11084
  %1 = load i64, i64* %__esi, align 8, !dbg !11084
  store i64 %1, i64* %__esi, align 8, !dbg !11084
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11086, metadata !DIExpression()), !dbg !11084
  %2 = load i64, i64* %__edx, align 8, !dbg !11084
  store i64 %2, i64* %__edx, align 8, !dbg !11084
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11087, metadata !DIExpression()), !dbg !11084
  %3 = load i64, i64* %__ecx, align 8, !dbg !11084
  store i64 %3, i64* %__ecx, align 8, !dbg !11084
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11088, metadata !DIExpression()), !dbg !11084
  %4 = load i64, i64* %__eax, align 8, !dbg !11084
  store i64 %4, i64* %__eax, align 8, !dbg !11084
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !11084
  %6 = call i64 @llvm.read_register.i64(metadata !4438), !dbg !11084
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !11084, !srcloc !11089
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11084
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11084
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11084
  call void @llvm.write_register.i64(metadata !4438, i64 %asmresult1), !dbg !11084
  ret void, !dbg !11090
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !11091 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !11094, metadata !DIExpression()), !dbg !11095
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11096, metadata !DIExpression()), !dbg !11098
  %0 = load i64, i64* %__edi, align 8, !dbg !11098
  store i64 %0, i64* %__edi, align 8, !dbg !11098
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11099, metadata !DIExpression()), !dbg !11098
  %1 = load i64, i64* %__esi, align 8, !dbg !11098
  store i64 %1, i64* %__esi, align 8, !dbg !11098
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11100, metadata !DIExpression()), !dbg !11098
  %2 = load i64, i64* %__edx, align 8, !dbg !11098
  store i64 %2, i64* %__edx, align 8, !dbg !11098
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11101, metadata !DIExpression()), !dbg !11098
  %3 = load i64, i64* %__ecx, align 8, !dbg !11098
  store i64 %3, i64* %__ecx, align 8, !dbg !11098
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11102, metadata !DIExpression()), !dbg !11098
  %4 = load i64, i64* %__eax, align 8, !dbg !11098
  store i64 %4, i64* %__eax, align 8, !dbg !11098
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !11098
  %6 = call i64 @llvm.read_register.i64(metadata !4438), !dbg !11098
  %7 = load i64, i64* %f.addr, align 8, !dbg !11098
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !11098, !srcloc !11103
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !11098
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !11098
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11098
  call void @llvm.write_register.i64(metadata !4438, i64 %asmresult1), !dbg !11098
  ret void, !dbg !11104
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #2 !dbg !11105 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !11106, metadata !DIExpression()), !dbg !11108
  %0 = load i64, i64* %__edi, align 8, !dbg !11108
  store i64 %0, i64* %__edi, align 8, !dbg !11108
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !11109, metadata !DIExpression()), !dbg !11108
  %1 = load i64, i64* %__esi, align 8, !dbg !11108
  store i64 %1, i64* %__esi, align 8, !dbg !11108
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !11110, metadata !DIExpression()), !dbg !11108
  %2 = load i64, i64* %__edx, align 8, !dbg !11108
  store i64 %2, i64* %__edx, align 8, !dbg !11108
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !11111, metadata !DIExpression()), !dbg !11108
  %3 = load i64, i64* %__ecx, align 8, !dbg !11108
  store i64 %3, i64* %__ecx, align 8, !dbg !11108
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !11112, metadata !DIExpression()), !dbg !11108
  %4 = load i64, i64* %__eax, align 8, !dbg !11108
  store i64 %4, i64* %__eax, align 8, !dbg !11108
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !11108
  %6 = call i64 @llvm.read_register.i64(metadata !4438), !dbg !11108
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #10, !dbg !11108, !srcloc !11113
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !11108
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !11108
  store i64 %asmresult, i64* %__eax, align 8, !dbg !11108
  call void @llvm.write_register.i64(metadata !4438, i64 %asmresult1), !dbg !11108
  ret void, !dbg !11114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @unlink1(%struct.usbtest_dev* %dev, i32 %pipe, i32 %size, i32 %async) #2 !dbg !11115 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usbtest_dev*, align 8
  %pipe.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %async.addr = alloca i32, align 4
  %urb = alloca %struct.urb*, align 8
  %completion = alloca %struct.completion, align 8
  %retval1 = alloca i32, align 4
  store %struct.usbtest_dev* %dev, %struct.usbtest_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %dev.addr, metadata !11118, metadata !DIExpression()), !dbg !11119
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !11120, metadata !DIExpression()), !dbg !11121
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11122, metadata !DIExpression()), !dbg !11123
  store i32 %async, i32* %async.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %async.addr, metadata !11124, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !11126, metadata !DIExpression()), !dbg !11127
  call void @llvm.dbg.declare(metadata %struct.completion* %completion, metadata !11128, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !11130, metadata !DIExpression()), !dbg !11131
  store i32 0, i32* %retval1, align 4, !dbg !11131
  call void @__init_completion(%struct.completion* %completion) #11, !dbg !11132
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !11133
  %call = call %struct.usb_device* @testdev_to_usbdev(%struct.usbtest_dev* %0) #11, !dbg !11134
  %1 = load i32, i32* %pipe.addr, align 4, !dbg !11135
  %2 = load i32, i32* %size.addr, align 4, !dbg !11136
  %conv = sext i32 %2 to i64, !dbg !11136
  %call2 = call %struct.urb* @simple_alloc_urb(%struct.usb_device* %call, i32 %1, i64 %conv, i8 zeroext 0) #11, !dbg !11137
  store %struct.urb* %call2, %struct.urb** %urb, align 8, !dbg !11138
  %3 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11139
  %tobool = icmp ne %struct.urb* %3, null, !dbg !11139
  br i1 %tobool, label %if.end, label %if.then, !dbg !11141

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11142
  br label %return, !dbg !11142

if.end:                                           ; preds = %entry
  %4 = bitcast %struct.completion* %completion to i8*, !dbg !11143
  %5 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11144
  %context = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 27, !dbg !11145
  store i8* %4, i8** %context, align 8, !dbg !11146
  %6 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11147
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %6, i32 0, i32 28, !dbg !11148
  store void (%struct.urb*)* @unlink1_callback, void (%struct.urb*)** %complete, align 8, !dbg !11149
  %7 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11150
  %pipe3 = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 10, !dbg !11150
  %8 = load i32, i32* %pipe3, align 8, !dbg !11150
  %and = and i32 %8, 128, !dbg !11150
  %tobool4 = icmp ne i32 %and, 0, !dbg !11150
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !11152

if.then5:                                         ; preds = %if.end
  %9 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11153
  call void @simple_fill_buf(%struct.urb* %9) #11, !dbg !11155
  %10 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11156
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %10, i32 0, i32 13, !dbg !11157
  %11 = load i32, i32* %transfer_flags, align 4, !dbg !11158
  %or = or i32 %11, 64, !dbg !11158
  store i32 %or, i32* %transfer_flags, align 4, !dbg !11158
  br label %if.end6, !dbg !11159

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11160
  %call7 = call i32 @usb_submit_urb(%struct.urb* %12, i32 3264) #11, !dbg !11161
  store i32 %call7, i32* %retval1, align 4, !dbg !11162
  %13 = load i32, i32* %retval1, align 4, !dbg !11163
  %cmp = icmp ne i32 %13, 0, !dbg !11165
  br i1 %cmp, label %if.then9, label %if.end11, !dbg !11166

if.then9:                                         ; preds = %if.end6
  %14 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !11167
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %14, i32 0, i32 0, !dbg !11167
  %15 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !11167
  %dev10 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %15, i32 0, i32 7, !dbg !11167
  %16 = load i32, i32* %retval1, align 4, !dbg !11167
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.105, i64 0, i64 0), i32 %16) #12, !dbg !11167
  %17 = load i32, i32* %retval1, align 4, !dbg !11169
  store i32 %17, i32* %retval, align 4, !dbg !11170
  br label %return, !dbg !11170

if.end11:                                         ; preds = %if.end6
  %18 = load volatile i64, i64* @jiffies, align 8, !dbg !11171
  %rem = urem i64 %18, 2, !dbg !11172
  %conv12 = trunc i64 %rem to i32, !dbg !11171
  call void @msleep(i32 %conv12) #11, !dbg !11173
  %19 = load i32, i32* %async.addr, align 4, !dbg !11174
  %tobool13 = icmp ne i32 %19, 0, !dbg !11174
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !11176

if.then14:                                        ; preds = %if.end11
  br label %while.cond, !dbg !11177

while.cond:                                       ; preds = %sw.bb, %if.then14
  %call15 = call zeroext i1 @completion_done(%struct.completion* %completion) #11, !dbg !11179
  %lnot = xor i1 %call15, true, !dbg !11180
  br i1 %lnot, label %while.body, label %while.end, !dbg !11177

while.body:                                       ; preds = %while.cond
  %20 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11181
  %call16 = call i32 @usb_unlink_urb(%struct.urb* %20) #11, !dbg !11183
  store i32 %call16, i32* %retval1, align 4, !dbg !11184
  %21 = load i32, i32* %retval1, align 4, !dbg !11185
  %cmp17 = icmp eq i32 %21, 0, !dbg !11187
  br i1 %cmp17, label %land.lhs.true, label %if.end24, !dbg !11188

land.lhs.true:                                    ; preds = %while.body
  %22 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11189
  %pipe19 = getelementptr inbounds %struct.urb, %struct.urb* %22, i32 0, i32 10, !dbg !11189
  %23 = load i32, i32* %pipe19, align 8, !dbg !11189
  %and20 = and i32 %23, 128, !dbg !11189
  %tobool21 = icmp ne i32 %and20, 0, !dbg !11189
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !11190

if.then22:                                        ; preds = %land.lhs.true
  %24 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !11191
  %25 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11192
  %call23 = call i32 @simple_check_buf(%struct.usbtest_dev* %24, %struct.urb* %25) #11, !dbg !11193
  store i32 %call23, i32* %retval1, align 4, !dbg !11194
  br label %if.end24, !dbg !11195

if.end24:                                         ; preds = %if.then22, %land.lhs.true, %while.body
  %26 = load i32, i32* %retval1, align 4, !dbg !11196
  switch i32 %26, label %sw.default [
    i32 -16, label %sw.bb
    i32 -43, label %sw.bb
    i32 0, label %sw.bb27
    i32 -115, label %sw.bb27
  ], !dbg !11197

sw.bb:                                            ; preds = %if.end24, %if.end24
  %27 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !11198
  %intf25 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %27, i32 0, i32 0, !dbg !11198
  %28 = load %struct.usb_interface*, %struct.usb_interface** %intf25, align 8, !dbg !11198
  %dev26 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %28, i32 0, i32 7, !dbg !11198
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev26, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i64 0, i64 0)) #12, !dbg !11198
  br label %while.cond, !dbg !11200, !llvm.loop !11201

sw.bb27:                                          ; preds = %if.end24, %if.end24
  br label %sw.epilog, !dbg !11203

sw.default:                                       ; preds = %if.end24
  %29 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev.addr, align 8, !dbg !11204
  %intf28 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %29, i32 0, i32 0, !dbg !11204
  %30 = load %struct.usb_interface*, %struct.usb_interface** %intf28, align 8, !dbg !11204
  %dev29 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %30, i32 0, i32 7, !dbg !11204
  %31 = load i32, i32* %retval1, align 4, !dbg !11204
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev29, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0), i32 %31) #12, !dbg !11204
  %32 = load i32, i32* %retval1, align 4, !dbg !11205
  store i32 %32, i32* %retval, align 4, !dbg !11206
  br label %return, !dbg !11206

sw.epilog:                                        ; preds = %sw.bb27
  br label %while.end, !dbg !11207

while.end:                                        ; preds = %sw.epilog, %while.cond
  br label %if.end30, !dbg !11208

if.else:                                          ; preds = %if.end11
  %33 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11209
  call void @usb_kill_urb(%struct.urb* %33) #11, !dbg !11210
  br label %if.end30

if.end30:                                         ; preds = %if.else, %while.end
  call void @wait_for_completion(%struct.completion* %completion) #11, !dbg !11211
  %34 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11212
  %status = getelementptr inbounds %struct.urb, %struct.urb* %34, i32 0, i32 12, !dbg !11213
  %35 = load i32, i32* %status, align 8, !dbg !11213
  store i32 %35, i32* %retval1, align 4, !dbg !11214
  %36 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11215
  call void @simple_free_urb(%struct.urb* %36) #11, !dbg !11216
  %37 = load i32, i32* %async.addr, align 4, !dbg !11217
  %tobool31 = icmp ne i32 %37, 0, !dbg !11217
  br i1 %tobool31, label %if.then32, label %if.else35, !dbg !11219

if.then32:                                        ; preds = %if.end30
  %38 = load i32, i32* %retval1, align 4, !dbg !11220
  %cmp33 = icmp eq i32 %38, -104, !dbg !11221
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !11222

cond.true:                                        ; preds = %if.then32
  br label %cond.end, !dbg !11222

cond.false:                                       ; preds = %if.then32
  %39 = load i32, i32* %retval1, align 4, !dbg !11223
  %sub = sub i32 %39, 1000, !dbg !11224
  br label %cond.end, !dbg !11222

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub, %cond.false ], !dbg !11222
  store i32 %cond, i32* %retval, align 4, !dbg !11225
  br label %return, !dbg !11225

if.else35:                                        ; preds = %if.end30
  %40 = load i32, i32* %retval1, align 4, !dbg !11226
  %cmp36 = icmp eq i32 %40, -2, !dbg !11227
  br i1 %cmp36, label %cond.true40, label %lor.lhs.false, !dbg !11228

lor.lhs.false:                                    ; preds = %if.else35
  %41 = load i32, i32* %retval1, align 4, !dbg !11229
  %cmp38 = icmp eq i32 %41, -1, !dbg !11230
  br i1 %cmp38, label %cond.true40, label %cond.false41, !dbg !11231

cond.true40:                                      ; preds = %lor.lhs.false, %if.else35
  br label %cond.end43, !dbg !11231

cond.false41:                                     ; preds = %lor.lhs.false
  %42 = load i32, i32* %retval1, align 4, !dbg !11232
  %sub42 = sub i32 %42, 2000, !dbg !11233
  br label %cond.end43, !dbg !11231

cond.end43:                                       ; preds = %cond.false41, %cond.true40
  %cond44 = phi i32 [ 0, %cond.true40 ], [ %sub42, %cond.false41 ], !dbg !11231
  store i32 %cond44, i32* %retval, align 4, !dbg !11234
  br label %return, !dbg !11234

return:                                           ; preds = %cond.end43, %cond.end, %sw.default, %if.then9, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !11235
  ret i32 %43, !dbg !11235
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @unlink1_callback(%struct.urb* %urb) #2 !dbg !11236 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %status = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !11237, metadata !DIExpression()), !dbg !11238
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11239, metadata !DIExpression()), !dbg !11240
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11241
  %status1 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 12, !dbg !11242
  %1 = load i32, i32* %status1, align 8, !dbg !11242
  store i32 %1, i32* %status, align 4, !dbg !11240
  %2 = load i32, i32* %status, align 4, !dbg !11243
  %tobool = icmp ne i32 %2, 0, !dbg !11243
  br i1 %tobool, label %if.end, label %if.then, !dbg !11245

if.then:                                          ; preds = %entry
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11246
  %call = call i32 @usb_submit_urb(%struct.urb* %3, i32 2592) #11, !dbg !11247
  store i32 %call, i32* %status, align 4, !dbg !11248
  br label %if.end, !dbg !11249

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %status, align 4, !dbg !11250
  %tobool2 = icmp ne i32 %4, 0, !dbg !11250
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !11252

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %status, align 4, !dbg !11253
  %6 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11255
  %status4 = getelementptr inbounds %struct.urb, %struct.urb* %6, i32 0, i32 12, !dbg !11256
  store i32 %5, i32* %status4, align 8, !dbg !11257
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11258
  %context = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 27, !dbg !11259
  %8 = load i8*, i8** %context, align 8, !dbg !11259
  %9 = bitcast i8* %8 to %struct.completion*, !dbg !11258
  call void @complete(%struct.completion* %9) #11, !dbg !11260
  br label %if.end5, !dbg !11261

if.end5:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !11262
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @completion_done(%struct.completion*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_halt(%struct.usbtest_dev* %tdev, i32 %ep, %struct.urb* %urb) #2 !dbg !11263 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %ep.addr = alloca i32, align 4
  %urb.addr = alloca %struct.urb*, align 8
  %retval1 = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !11266, metadata !DIExpression()), !dbg !11267
  store i32 %ep, i32* %ep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep.addr, metadata !11268, metadata !DIExpression()), !dbg !11269
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !11270, metadata !DIExpression()), !dbg !11271
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !11272, metadata !DIExpression()), !dbg !11273
  %0 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11274
  %1 = load i32, i32* %ep.addr, align 4, !dbg !11275
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11276
  %call = call i32 @verify_not_halted(%struct.usbtest_dev* %0, i32 %1, %struct.urb* %2) #11, !dbg !11277
  store i32 %call, i32* %retval1, align 4, !dbg !11278
  %3 = load i32, i32* %retval1, align 4, !dbg !11279
  %cmp = icmp slt i32 %3, 0, !dbg !11281
  br i1 %cmp, label %if.then, label %if.end, !dbg !11282

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %retval1, align 4, !dbg !11283
  store i32 %4, i32* %retval, align 4, !dbg !11284
  br label %return, !dbg !11284

if.end:                                           ; preds = %entry
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11285
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 8, !dbg !11286
  %6 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11286
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11287
  %dev2 = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 8, !dbg !11287
  %8 = load %struct.usb_device*, %struct.usb_device** %dev2, align 8, !dbg !11287
  %call3 = call i32 @__create_pipe(%struct.usb_device* %8, i32 0) #11, !dbg !11287
  %or = or i32 -2147483648, %call3, !dbg !11287
  %9 = load i32, i32* %ep.addr, align 4, !dbg !11288
  %conv = trunc i32 %9 to i16, !dbg !11288
  %call4 = call i32 @usb_control_msg(%struct.usb_device* %6, i32 %or, i8 zeroext 3, i8 zeroext 2, i16 zeroext 0, i16 zeroext %conv, i8* null, i16 zeroext 0, i32 5000) #11, !dbg !11289
  store i32 %call4, i32* %retval1, align 4, !dbg !11290
  %10 = load i32, i32* %retval1, align 4, !dbg !11291
  %cmp5 = icmp slt i32 %10, 0, !dbg !11293
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !11294

if.then7:                                         ; preds = %if.end
  %11 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11295
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %11, i32 0, i32 0, !dbg !11295
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !11295
  %dev8 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 7, !dbg !11295
  %13 = load i32, i32* %ep.addr, align 4, !dbg !11295
  %14 = load i32, i32* %retval1, align 4, !dbg !11295
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev8, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.108, i64 0, i64 0), i32 %13, i32 %14) #12, !dbg !11295
  %15 = load i32, i32* %retval1, align 4, !dbg !11297
  store i32 %15, i32* %retval, align 4, !dbg !11298
  br label %return, !dbg !11298

if.end9:                                          ; preds = %if.end
  %16 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11299
  %17 = load i32, i32* %ep.addr, align 4, !dbg !11300
  %18 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11301
  %call10 = call i32 @verify_halted(%struct.usbtest_dev* %16, i32 %17, %struct.urb* %18) #11, !dbg !11302
  store i32 %call10, i32* %retval1, align 4, !dbg !11303
  %19 = load i32, i32* %retval1, align 4, !dbg !11304
  %cmp11 = icmp slt i32 %19, 0, !dbg !11306
  br i1 %cmp11, label %if.then13, label %if.end20, !dbg !11307

if.then13:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11308, metadata !DIExpression()), !dbg !11310
  %20 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11311
  %dev14 = getelementptr inbounds %struct.urb, %struct.urb* %20, i32 0, i32 8, !dbg !11312
  %21 = load %struct.usb_device*, %struct.usb_device** %dev14, align 8, !dbg !11312
  %22 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11313
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %22, i32 0, i32 10, !dbg !11314
  %23 = load i32, i32* %pipe, align 8, !dbg !11314
  %call15 = call i32 @usb_clear_halt(%struct.usb_device* %21, i32 %23) #11, !dbg !11315
  store i32 %call15, i32* %ret, align 4, !dbg !11316
  %24 = load i32, i32* %ret, align 4, !dbg !11317
  %tobool = icmp ne i32 %24, 0, !dbg !11317
  br i1 %tobool, label %if.then16, label %if.end19, !dbg !11319

if.then16:                                        ; preds = %if.then13
  %25 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11320
  %intf17 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %25, i32 0, i32 0, !dbg !11320
  %26 = load %struct.usb_interface*, %struct.usb_interface** %intf17, align 8, !dbg !11320
  %dev18 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %26, i32 0, i32 7, !dbg !11320
  %27 = load i32, i32* %ep.addr, align 4, !dbg !11320
  %28 = load i32, i32* %ret, align 4, !dbg !11320
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev18, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.109, i64 0, i64 0), i32 %27, i32 %28) #12, !dbg !11320
  br label %if.end19, !dbg !11320

if.end19:                                         ; preds = %if.then16, %if.then13
  %29 = load i32, i32* %retval1, align 4, !dbg !11321
  store i32 %29, i32* %retval, align 4, !dbg !11322
  br label %return, !dbg !11322

if.end20:                                         ; preds = %if.end9
  %30 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11323
  %dev21 = getelementptr inbounds %struct.urb, %struct.urb* %30, i32 0, i32 8, !dbg !11324
  %31 = load %struct.usb_device*, %struct.usb_device** %dev21, align 8, !dbg !11324
  %32 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11325
  %pipe22 = getelementptr inbounds %struct.urb, %struct.urb* %32, i32 0, i32 10, !dbg !11326
  %33 = load i32, i32* %pipe22, align 8, !dbg !11326
  %call23 = call i32 @usb_clear_halt(%struct.usb_device* %31, i32 %33) #11, !dbg !11327
  store i32 %call23, i32* %retval1, align 4, !dbg !11328
  %34 = load i32, i32* %retval1, align 4, !dbg !11329
  %cmp24 = icmp slt i32 %34, 0, !dbg !11331
  br i1 %cmp24, label %if.then26, label %if.end29, !dbg !11332

if.then26:                                        ; preds = %if.end20
  %35 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11333
  %intf27 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %35, i32 0, i32 0, !dbg !11333
  %36 = load %struct.usb_interface*, %struct.usb_interface** %intf27, align 8, !dbg !11333
  %dev28 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %36, i32 0, i32 7, !dbg !11333
  %37 = load i32, i32* %ep.addr, align 4, !dbg !11333
  %38 = load i32, i32* %retval1, align 4, !dbg !11333
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev28, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.109, i64 0, i64 0), i32 %37, i32 %38) #12, !dbg !11333
  %39 = load i32, i32* %retval1, align 4, !dbg !11335
  store i32 %39, i32* %retval, align 4, !dbg !11336
  br label %return, !dbg !11336

if.end29:                                         ; preds = %if.end20
  %40 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11337
  %41 = load i32, i32* %ep.addr, align 4, !dbg !11338
  %42 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11339
  %call30 = call i32 @verify_not_halted(%struct.usbtest_dev* %40, i32 %41, %struct.urb* %42) #11, !dbg !11340
  store i32 %call30, i32* %retval1, align 4, !dbg !11341
  %43 = load i32, i32* %retval1, align 4, !dbg !11342
  %cmp31 = icmp slt i32 %43, 0, !dbg !11344
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !11345

if.then33:                                        ; preds = %if.end29
  %44 = load i32, i32* %retval1, align 4, !dbg !11346
  store i32 %44, i32* %retval, align 4, !dbg !11347
  br label %return, !dbg !11347

if.end34:                                         ; preds = %if.end29
  store i32 0, i32* %retval, align 4, !dbg !11348
  br label %return, !dbg !11348

return:                                           ; preds = %if.end34, %if.then33, %if.then26, %if.end19, %if.then7, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !11349
  ret i32 %45, !dbg !11349
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @verify_not_halted(%struct.usbtest_dev* %tdev, i32 %ep, %struct.urb* %urb) #2 !dbg !11350 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %ep.addr = alloca i32, align 4
  %urb.addr = alloca %struct.urb*, align 8
  %retval1 = alloca i32, align 4
  %status = alloca i16, align 2
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !11351, metadata !DIExpression()), !dbg !11352
  store i32 %ep, i32* %ep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep.addr, metadata !11353, metadata !DIExpression()), !dbg !11354
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !11355, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !11357, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.declare(metadata i16* %status, metadata !11359, metadata !DIExpression()), !dbg !11360
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11361
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 8, !dbg !11362
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11362
  %2 = load i32, i32* %ep.addr, align 4, !dbg !11363
  %3 = bitcast i16* %status to i8*, !dbg !11364
  %call = call i32 @usb_get_std_status(%struct.usb_device* %1, i32 2, i32 %2, i8* %3) #11, !dbg !11365
  store i32 %call, i32* %retval1, align 4, !dbg !11366
  %4 = load i32, i32* %retval1, align 4, !dbg !11367
  %cmp = icmp slt i32 %4, 0, !dbg !11369
  br i1 %cmp, label %if.then, label %if.end, !dbg !11370

if.then:                                          ; preds = %entry
  %5 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11371
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %5, i32 0, i32 0, !dbg !11371
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !11371
  %dev2 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %6, i32 0, i32 7, !dbg !11371
  %7 = load i32, i32* %ep.addr, align 4, !dbg !11371
  %8 = load i32, i32* %retval1, align 4, !dbg !11371
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.110, i64 0, i64 0), i32 %7, i32 %8) #12, !dbg !11371
  %9 = load i32, i32* %retval1, align 4, !dbg !11373
  store i32 %9, i32* %retval, align 4, !dbg !11374
  br label %return, !dbg !11374

if.end:                                           ; preds = %entry
  %10 = load i16, i16* %status, align 2, !dbg !11375
  %conv = zext i16 %10 to i32, !dbg !11375
  %cmp3 = icmp ne i32 %conv, 0, !dbg !11377
  br i1 %cmp3, label %if.then5, label %if.end9, !dbg !11378

if.then5:                                         ; preds = %if.end
  %11 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11379
  %intf6 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %11, i32 0, i32 0, !dbg !11379
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf6, align 8, !dbg !11379
  %dev7 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 7, !dbg !11379
  %13 = load i32, i32* %ep.addr, align 4, !dbg !11379
  %14 = load i16, i16* %status, align 2, !dbg !11379
  %conv8 = zext i16 %14 to i32, !dbg !11379
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.111, i64 0, i64 0), i32 %13, i32 %conv8) #12, !dbg !11379
  store i32 -22, i32* %retval, align 4, !dbg !11381
  br label %return, !dbg !11381

if.end9:                                          ; preds = %if.end
  %15 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11382
  %16 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11383
  %call10 = call i32 @simple_io(%struct.usbtest_dev* %15, %struct.urb* %16, i32 1, i32 0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.verify_not_halted, i64 0, i64 0)) #11, !dbg !11384
  store i32 %call10, i32* %retval1, align 4, !dbg !11385
  %17 = load i32, i32* %retval1, align 4, !dbg !11386
  %cmp11 = icmp ne i32 %17, 0, !dbg !11388
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !11389

if.then13:                                        ; preds = %if.end9
  store i32 -22, i32* %retval, align 4, !dbg !11390
  br label %return, !dbg !11390

if.end14:                                         ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !11391
  br label %return, !dbg !11391

return:                                           ; preds = %if.end14, %if.then13, %if.then5, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !11392
  ret i32 %18, !dbg !11392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @verify_halted(%struct.usbtest_dev* %tdev, i32 %ep, %struct.urb* %urb) #2 !dbg !11393 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %ep.addr = alloca i32, align 4
  %urb.addr = alloca %struct.urb*, align 8
  %retval1 = alloca i32, align 4
  %status = alloca i16, align 2
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !11394, metadata !DIExpression()), !dbg !11395
  store i32 %ep, i32* %ep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep.addr, metadata !11396, metadata !DIExpression()), !dbg !11397
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !11398, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !11400, metadata !DIExpression()), !dbg !11401
  call void @llvm.dbg.declare(metadata i16* %status, metadata !11402, metadata !DIExpression()), !dbg !11403
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11404
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 8, !dbg !11405
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11405
  %2 = load i32, i32* %ep.addr, align 4, !dbg !11406
  %3 = bitcast i16* %status to i8*, !dbg !11407
  %call = call i32 @usb_get_std_status(%struct.usb_device* %1, i32 2, i32 %2, i8* %3) #11, !dbg !11408
  store i32 %call, i32* %retval1, align 4, !dbg !11409
  %4 = load i32, i32* %retval1, align 4, !dbg !11410
  %cmp = icmp slt i32 %4, 0, !dbg !11412
  br i1 %cmp, label %if.then, label %if.end, !dbg !11413

if.then:                                          ; preds = %entry
  %5 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11414
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %5, i32 0, i32 0, !dbg !11414
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !11414
  %dev2 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %6, i32 0, i32 7, !dbg !11414
  %7 = load i32, i32* %ep.addr, align 4, !dbg !11414
  %8 = load i32, i32* %retval1, align 4, !dbg !11414
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.112, i64 0, i64 0), i32 %7, i32 %8) #12, !dbg !11414
  %9 = load i32, i32* %retval1, align 4, !dbg !11416
  store i32 %9, i32* %retval, align 4, !dbg !11417
  br label %return, !dbg !11417

if.end:                                           ; preds = %entry
  %10 = load i16, i16* %status, align 2, !dbg !11418
  %conv = zext i16 %10 to i32, !dbg !11418
  %cmp3 = icmp ne i32 %conv, 1, !dbg !11420
  br i1 %cmp3, label %if.then5, label %if.end9, !dbg !11421

if.then5:                                         ; preds = %if.end
  %11 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11422
  %intf6 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %11, i32 0, i32 0, !dbg !11422
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf6, align 8, !dbg !11422
  %dev7 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 7, !dbg !11422
  %13 = load i32, i32* %ep.addr, align 4, !dbg !11422
  %14 = load i16, i16* %status, align 2, !dbg !11422
  %conv8 = zext i16 %14 to i32, !dbg !11422
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.113, i64 0, i64 0), i32 %13, i32 %conv8) #12, !dbg !11422
  store i32 -22, i32* %retval, align 4, !dbg !11424
  br label %return, !dbg !11424

if.end9:                                          ; preds = %if.end
  %15 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11425
  %16 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11426
  %call10 = call i32 @simple_io(%struct.usbtest_dev* %15, %struct.urb* %16, i32 1, i32 0, i32 -32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.verify_halted, i64 0, i64 0)) #11, !dbg !11427
  store i32 %call10, i32* %retval1, align 4, !dbg !11428
  %17 = load i32, i32* %retval1, align 4, !dbg !11429
  %cmp11 = icmp ne i32 %17, -32, !dbg !11431
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !11432

if.then13:                                        ; preds = %if.end9
  store i32 -22, i32* %retval, align 4, !dbg !11433
  br label %return, !dbg !11433

if.end14:                                         ; preds = %if.end9
  %18 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11434
  %19 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11435
  %call15 = call i32 @simple_io(%struct.usbtest_dev* %18, %struct.urb* %19, i32 1, i32 0, i32 -32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.114, i64 0, i64 0)) #11, !dbg !11436
  store i32 %call15, i32* %retval1, align 4, !dbg !11437
  %20 = load i32, i32* %retval1, align 4, !dbg !11438
  %cmp16 = icmp ne i32 %20, -32, !dbg !11440
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !11441

if.then18:                                        ; preds = %if.end14
  store i32 -22, i32* %retval, align 4, !dbg !11442
  br label %return, !dbg !11442

if.end19:                                         ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !11443
  br label %return, !dbg !11443

return:                                           ; preds = %if.end19, %if.then18, %if.then13, %if.then5, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !11444
  ret i32 %21, !dbg !11444
}

; Function Attrs: noredzone
declare dso_local i32 @usb_clear_halt(%struct.usb_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.urb* @iso_alloc_urb(%struct.usb_device* %udev, i32 %pipe, %struct.usb_endpoint_descriptor* %desc, i64 %bytes, i32 %offset) #2 !dbg !11445 {
entry:
  %retval = alloca %struct.urb*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %bytes.addr = alloca i64, align 8
  %offset.addr = alloca i32, align 4
  %urb = alloca %struct.urb*, align 8
  %i = alloca i32, align 4
  %maxp = alloca i32, align 4
  %packets = alloca i32, align 4
  %__UNIQUE_ID___x244 = alloca i32, align 4
  %__UNIQUE_ID___y245 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !11448, metadata !DIExpression()), !dbg !11449
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !11450, metadata !DIExpression()), !dbg !11451
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !11452, metadata !DIExpression()), !dbg !11453
  store i64 %bytes, i64* %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr, metadata !11454, metadata !DIExpression()), !dbg !11455
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11456, metadata !DIExpression()), !dbg !11457
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !11458, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11460, metadata !DIExpression()), !dbg !11461
  call void @llvm.dbg.declare(metadata i32* %maxp, metadata !11462, metadata !DIExpression()), !dbg !11463
  call void @llvm.dbg.declare(metadata i32* %packets, metadata !11464, metadata !DIExpression()), !dbg !11465
  %0 = load i64, i64* %bytes.addr, align 8, !dbg !11466
  %cmp = icmp slt i64 %0, 0, !dbg !11468
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11469

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !11470
  %tobool = icmp ne %struct.usb_endpoint_descriptor* %1, null, !dbg !11470
  br i1 %tobool, label %if.end, label %if.then, !dbg !11471

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.urb* null, %struct.urb** %retval, align 8, !dbg !11472
  br label %return, !dbg !11472

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !11473
  %call = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %2) #11, !dbg !11474
  store i32 %call, i32* %maxp, align 4, !dbg !11475
  %3 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11476
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 4, !dbg !11478
  %4 = load i32, i32* %speed, align 4, !dbg !11478
  %cmp1 = icmp uge i32 %4, 5, !dbg !11479
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !11480

if.then2:                                         ; preds = %if.end
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11481
  %6 = load i32, i32* %pipe.addr, align 4, !dbg !11482
  %call3 = call i32 @ss_isoc_get_packet_num(%struct.usb_device* %5, i32 %6) #11, !dbg !11483
  %7 = load i32, i32* %maxp, align 4, !dbg !11484
  %mul = mul i32 %7, %call3, !dbg !11484
  store i32 %mul, i32* %maxp, align 4, !dbg !11484
  br label %if.end6, !dbg !11485

if.else:                                          ; preds = %if.end
  %8 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !11486
  %call4 = call i32 @usb_endpoint_maxp_mult(%struct.usb_endpoint_descriptor* %8) #11, !dbg !11487
  %9 = load i32, i32* %maxp, align 4, !dbg !11488
  %mul5 = mul i32 %9, %call4, !dbg !11488
  store i32 %mul5, i32* %maxp, align 4, !dbg !11488
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %10 = load i64, i64* %bytes.addr, align 8, !dbg !11489
  %11 = load i32, i32* %maxp, align 4, !dbg !11489
  %conv = zext i32 %11 to i64, !dbg !11489
  %add = add i64 %10, %conv, !dbg !11489
  %sub = sub i64 %add, 1, !dbg !11489
  %12 = load i32, i32* %maxp, align 4, !dbg !11489
  %conv7 = zext i32 %12 to i64, !dbg !11489
  %div = sdiv i64 %sub, %conv7, !dbg !11489
  %conv8 = trunc i64 %div to i32, !dbg !11489
  store i32 %conv8, i32* %packets, align 4, !dbg !11490
  %13 = load i32, i32* %packets, align 4, !dbg !11491
  %call9 = call %struct.urb* @usb_alloc_urb(i32 %13, i32 3264) #11, !dbg !11492
  store %struct.urb* %call9, %struct.urb** %urb, align 8, !dbg !11493
  %14 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11494
  %tobool10 = icmp ne %struct.urb* %14, null, !dbg !11494
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !11496

if.then11:                                        ; preds = %if.end6
  %15 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11497
  store %struct.urb* %15, %struct.urb** %retval, align 8, !dbg !11498
  br label %return, !dbg !11498

if.end12:                                         ; preds = %if.end6
  %16 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11499
  %17 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11500
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %17, i32 0, i32 8, !dbg !11501
  store %struct.usb_device* %16, %struct.usb_device** %dev, align 8, !dbg !11502
  %18 = load i32, i32* %pipe.addr, align 4, !dbg !11503
  %19 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11504
  %pipe13 = getelementptr inbounds %struct.urb, %struct.urb* %19, i32 0, i32 10, !dbg !11505
  store i32 %18, i32* %pipe13, align 8, !dbg !11506
  %20 = load i32, i32* %packets, align 4, !dbg !11507
  %21 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11508
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %21, i32 0, i32 24, !dbg !11509
  store i32 %20, i32* %number_of_packets, align 4, !dbg !11510
  %22 = load i64, i64* %bytes.addr, align 8, !dbg !11511
  %conv14 = trunc i64 %22 to i32, !dbg !11511
  %23 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11512
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %23, i32 0, i32 19, !dbg !11513
  store i32 %conv14, i32* %transfer_buffer_length, align 8, !dbg !11514
  %24 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11515
  %25 = load i64, i64* %bytes.addr, align 8, !dbg !11516
  %26 = load i32, i32* %offset.addr, align 4, !dbg !11517
  %conv15 = zext i32 %26 to i64, !dbg !11517
  %add16 = add i64 %25, %conv15, !dbg !11518
  %27 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11519
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %27, i32 0, i32 15, !dbg !11520
  %call17 = call i8* @usb_alloc_coherent(%struct.usb_device* %24, i64 %add16, i32 3264, i64* %transfer_dma) #11, !dbg !11521
  %28 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11522
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %28, i32 0, i32 14, !dbg !11523
  store i8* %call17, i8** %transfer_buffer, align 8, !dbg !11524
  %29 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11525
  %transfer_buffer18 = getelementptr inbounds %struct.urb, %struct.urb* %29, i32 0, i32 14, !dbg !11527
  %30 = load i8*, i8** %transfer_buffer18, align 8, !dbg !11527
  %tobool19 = icmp ne i8* %30, null, !dbg !11525
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !11528

if.then20:                                        ; preds = %if.end12
  %31 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11529
  call void @usb_free_urb(%struct.urb* %31) #11, !dbg !11531
  store %struct.urb* null, %struct.urb** %retval, align 8, !dbg !11532
  br label %return, !dbg !11532

if.end21:                                         ; preds = %if.end12
  %32 = load i32, i32* %offset.addr, align 4, !dbg !11533
  %tobool22 = icmp ne i32 %32, 0, !dbg !11533
  br i1 %tobool22, label %if.then23, label %if.end30, !dbg !11535

if.then23:                                        ; preds = %if.end21
  %33 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11536
  %transfer_buffer24 = getelementptr inbounds %struct.urb, %struct.urb* %33, i32 0, i32 14, !dbg !11538
  %34 = load i8*, i8** %transfer_buffer24, align 8, !dbg !11538
  %35 = load i32, i32* %offset.addr, align 4, !dbg !11539
  %conv25 = zext i32 %35 to i64, !dbg !11539
  call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 -91, i64 %conv25, i1 false), !dbg !11540
  %36 = load i32, i32* %offset.addr, align 4, !dbg !11541
  %37 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11542
  %transfer_buffer26 = getelementptr inbounds %struct.urb, %struct.urb* %37, i32 0, i32 14, !dbg !11543
  %38 = load i8*, i8** %transfer_buffer26, align 8, !dbg !11544
  %idx.ext = zext i32 %36 to i64, !dbg !11544
  %add.ptr = getelementptr i8, i8* %38, i64 %idx.ext, !dbg !11544
  store i8* %add.ptr, i8** %transfer_buffer26, align 8, !dbg !11544
  %39 = load i32, i32* %offset.addr, align 4, !dbg !11545
  %conv27 = zext i32 %39 to i64, !dbg !11545
  %40 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11546
  %transfer_dma28 = getelementptr inbounds %struct.urb, %struct.urb* %40, i32 0, i32 15, !dbg !11547
  %41 = load i64, i64* %transfer_dma28, align 8, !dbg !11548
  %add29 = add i64 %41, %conv27, !dbg !11548
  store i64 %add29, i64* %transfer_dma28, align 8, !dbg !11548
  br label %if.end30, !dbg !11549

if.end30:                                         ; preds = %if.then23, %if.end21
  %42 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11550
  %transfer_buffer31 = getelementptr inbounds %struct.urb, %struct.urb* %42, i32 0, i32 14, !dbg !11551
  %43 = load i8*, i8** %transfer_buffer31, align 8, !dbg !11551
  %44 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11552
  %pipe32 = getelementptr inbounds %struct.urb, %struct.urb* %44, i32 0, i32 10, !dbg !11552
  %45 = load i32, i32* %pipe32, align 8, !dbg !11552
  %and = and i32 %45, 128, !dbg !11552
  %tobool33 = icmp ne i32 %and, 0, !dbg !11552
  %46 = zext i1 %tobool33 to i64, !dbg !11552
  %cond = select i1 %tobool33, i32 165, i32 0, !dbg !11552
  %47 = trunc i32 %cond to i8, !dbg !11553
  %48 = load i64, i64* %bytes.addr, align 8, !dbg !11554
  call void @llvm.memset.p0i8.i64(i8* align 1 %43, i8 %47, i64 %48, i1 false), !dbg !11553
  store i32 0, i32* %i, align 4, !dbg !11555
  br label %for.cond, !dbg !11557

for.cond:                                         ; preds = %for.inc, %if.end30
  %49 = load i32, i32* %i, align 4, !dbg !11558
  %50 = load i32, i32* %packets, align 4, !dbg !11560
  %cmp34 = icmp ult i32 %49, %50, !dbg !11561
  br i1 %cmp34, label %for.body, label %for.end, !dbg !11562

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x244, metadata !11563, metadata !DIExpression()), !dbg !11566
  %51 = load i64, i64* %bytes.addr, align 8, !dbg !11566
  %conv36 = trunc i64 %51 to i32, !dbg !11566
  store i32 %conv36, i32* %__UNIQUE_ID___x244, align 4, !dbg !11566
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y245, metadata !11567, metadata !DIExpression()), !dbg !11566
  %52 = load i32, i32* %maxp, align 4, !dbg !11566
  store i32 %52, i32* %__UNIQUE_ID___y245, align 4, !dbg !11566
  %53 = load i32, i32* %__UNIQUE_ID___x244, align 4, !dbg !11566
  %54 = load i32, i32* %__UNIQUE_ID___y245, align 4, !dbg !11566
  %cmp37 = icmp ult i32 %53, %54, !dbg !11566
  br i1 %cmp37, label %cond.true, label %cond.false, !dbg !11566

cond.true:                                        ; preds = %for.body
  %55 = load i32, i32* %__UNIQUE_ID___x244, align 4, !dbg !11566
  br label %cond.end, !dbg !11566

cond.false:                                       ; preds = %for.body
  %56 = load i32, i32* %__UNIQUE_ID___y245, align 4, !dbg !11566
  br label %cond.end, !dbg !11566

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond39 = phi i32 [ %55, %cond.true ], [ %56, %cond.false ], !dbg !11566
  store i32 %cond39, i32* %tmp, align 4, !dbg !11566
  %57 = load i32, i32* %tmp, align 4, !dbg !11566
  %58 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11568
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %58, i32 0, i32 29, !dbg !11569
  %59 = load i32, i32* %i, align 4, !dbg !11570
  %idxprom = zext i32 %59 to i64, !dbg !11568
  %arrayidx = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc, i64 0, i64 %idxprom, !dbg !11568
  %length = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx, i32 0, i32 1, !dbg !11571
  store i32 %57, i32* %length, align 4, !dbg !11572
  %60 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11573
  %iso_frame_desc40 = getelementptr inbounds %struct.urb, %struct.urb* %60, i32 0, i32 29, !dbg !11574
  %61 = load i32, i32* %i, align 4, !dbg !11575
  %idxprom41 = zext i32 %61 to i64, !dbg !11573
  %arrayidx42 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc40, i64 0, i64 %idxprom41, !dbg !11573
  %length43 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx42, i32 0, i32 1, !dbg !11576
  %62 = load i32, i32* %length43, align 4, !dbg !11576
  %conv44 = zext i32 %62 to i64, !dbg !11573
  %63 = load i64, i64* %bytes.addr, align 8, !dbg !11577
  %sub45 = sub i64 %63, %conv44, !dbg !11577
  store i64 %sub45, i64* %bytes.addr, align 8, !dbg !11577
  %64 = load i32, i32* %maxp, align 4, !dbg !11578
  %65 = load i32, i32* %i, align 4, !dbg !11579
  %mul46 = mul i32 %64, %65, !dbg !11580
  %66 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11581
  %iso_frame_desc47 = getelementptr inbounds %struct.urb, %struct.urb* %66, i32 0, i32 29, !dbg !11582
  %67 = load i32, i32* %i, align 4, !dbg !11583
  %idxprom48 = zext i32 %67 to i64, !dbg !11581
  %arrayidx49 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc47, i64 0, i64 %idxprom48, !dbg !11581
  %offset50 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx49, i32 0, i32 0, !dbg !11584
  store i32 %mul46, i32* %offset50, align 8, !dbg !11585
  br label %for.inc, !dbg !11586

for.inc:                                          ; preds = %cond.end
  %68 = load i32, i32* %i, align 4, !dbg !11587
  %inc = add i32 %68, 1, !dbg !11587
  store i32 %inc, i32* %i, align 4, !dbg !11587
  br label %for.cond, !dbg !11588, !llvm.loop !11589

for.end:                                          ; preds = %for.cond
  %69 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11591
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %69, i32 0, i32 28, !dbg !11592
  store void (%struct.urb*)* @complicated_callback, void (%struct.urb*)** %complete, align 8, !dbg !11593
  %70 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !11594
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %70, i32 0, i32 5, !dbg !11595
  %71 = load i8, i8* %bInterval, align 1, !dbg !11595
  %conv51 = zext i8 %71 to i32, !dbg !11594
  %sub52 = sub i32 %conv51, 1, !dbg !11596
  %shl = shl i32 1, %sub52, !dbg !11597
  %72 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11598
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %72, i32 0, i32 25, !dbg !11599
  store i32 %shl, i32* %interval, align 8, !dbg !11600
  %73 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11601
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %73, i32 0, i32 13, !dbg !11602
  store i32 6, i32* %transfer_flags, align 4, !dbg !11603
  %74 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11604
  store %struct.urb* %74, %struct.urb** %retval, align 8, !dbg !11605
  br label %return, !dbg !11605

return:                                           ; preds = %for.end, %if.then20, %if.then11, %if.then
  %75 = load %struct.urb*, %struct.urb** %retval, align 8, !dbg !11606
  ret %struct.urb* %75, !dbg !11606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.urb* @complicated_alloc_urb(%struct.usb_device* %udev, i32 %pipe, i64 %bytes, i8 zeroext %bInterval) #2 !dbg !11607 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %bytes.addr = alloca i64, align 8
  %bInterval.addr = alloca i8, align 1
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !11608, metadata !DIExpression()), !dbg !11609
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !11610, metadata !DIExpression()), !dbg !11611
  store i64 %bytes, i64* %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr, metadata !11612, metadata !DIExpression()), !dbg !11613
  store i8 %bInterval, i8* %bInterval.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bInterval.addr, metadata !11614, metadata !DIExpression()), !dbg !11615
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11616
  %1 = load i32, i32* %pipe.addr, align 4, !dbg !11617
  %2 = load i64, i64* %bytes.addr, align 8, !dbg !11618
  %3 = load i8, i8* %bInterval.addr, align 1, !dbg !11619
  %call = call %struct.urb* @usbtest_alloc_urb(%struct.usb_device* %0, i32 %1, i64 %2, i32 4, i32 0, i8 zeroext %3, void (%struct.urb*)* @complicated_callback) #11, !dbg !11620
  ret %struct.urb* %call, !dbg !11621
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ss_isoc_get_packet_num(%struct.usb_device* %udev, i32 %pipe) #2 !dbg !11622 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %ep = alloca %struct.usb_host_endpoint*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !11625, metadata !DIExpression()), !dbg !11626
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !11627, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep, metadata !11629, metadata !DIExpression()), !dbg !11630
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11631
  %1 = load i32, i32* %pipe.addr, align 4, !dbg !11632
  %call = call %struct.usb_host_endpoint* @usb_pipe_endpoint(%struct.usb_device* %0, i32 %1) #11, !dbg !11633
  store %struct.usb_host_endpoint* %call, %struct.usb_host_endpoint** %ep, align 8, !dbg !11630
  %2 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11634
  %ss_ep_comp = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %2, i32 0, i32 1, !dbg !11634
  %bmAttributes = getelementptr inbounds %struct.usb_ss_ep_comp_descriptor, %struct.usb_ss_ep_comp_descriptor* %ss_ep_comp, i32 0, i32 3, !dbg !11634
  %3 = load i8, i8* %bmAttributes, align 1, !dbg !11634
  %conv = zext i8 %3 to i32, !dbg !11634
  %and = and i32 %conv, 3, !dbg !11634
  %add = add i32 1, %and, !dbg !11634
  %4 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11635
  %ss_ep_comp1 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %4, i32 0, i32 1, !dbg !11636
  %bMaxBurst = getelementptr inbounds %struct.usb_ss_ep_comp_descriptor, %struct.usb_ss_ep_comp_descriptor* %ss_ep_comp1, i32 0, i32 2, !dbg !11637
  %5 = load i8, i8* %bMaxBurst, align 1, !dbg !11637
  %conv2 = zext i8 %5 to i32, !dbg !11635
  %add3 = add i32 1, %conv2, !dbg !11638
  %mul = mul i32 %add, %add3, !dbg !11639
  ret i32 %mul, !dbg !11640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_maxp_mult(%struct.usb_endpoint_descriptor* %epd) #2 !dbg !11641 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %maxp = alloca i32, align 4
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !11642, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.declare(metadata i32* %maxp, metadata !11644, metadata !DIExpression()), !dbg !11645
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !11646
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 4, !dbg !11646
  %1 = load i16, i16* %wMaxPacketSize, align 1, !dbg !11646
  %conv = zext i16 %1 to i32, !dbg !11646
  store i32 %conv, i32* %maxp, align 4, !dbg !11645
  %2 = load i32, i32* %maxp, align 4, !dbg !11647
  %and = and i32 %2, 6144, !dbg !11647
  %shr = ashr i32 %and, 11, !dbg !11647
  %add = add i32 %shr, 1, !dbg !11648
  ret i32 %add, !dbg !11649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %epd) #2 !dbg !11650 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !11651, metadata !DIExpression()), !dbg !11652
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !11653
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 4, !dbg !11653
  %1 = load i16, i16* %wMaxPacketSize, align 1, !dbg !11653
  %conv = zext i16 %1 to i32, !dbg !11653
  %and = and i32 %conv, 2047, !dbg !11654
  ret i32 %and, !dbg !11655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @complicated_callback(%struct.urb* %urb) #2 !dbg !11656 {
entry:
  %lock.addr.i82 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i82, metadata !10774, metadata !DIExpression()), !dbg !11657
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10780, metadata !DIExpression()), !dbg !11659
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7671, metadata !DIExpression()), !dbg !11660
  %urb.addr = alloca %struct.urb*, align 8
  %ctx = alloca %struct.transfer_context*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %status57 = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !11667, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.declare(metadata %struct.transfer_context** %ctx, metadata !11669, metadata !DIExpression()), !dbg !11671
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11672
  %context = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 27, !dbg !11673
  %1 = load i8*, i8** %context, align 8, !dbg !11673
  %2 = bitcast i8* %1 to %struct.transfer_context*, !dbg !11672
  store %struct.transfer_context* %2, %struct.transfer_context** %ctx, align 8, !dbg !11671
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11674, metadata !DIExpression()), !dbg !11675
  br label %do.body, !dbg !11676

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11677

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11678, metadata !DIExpression()), !dbg !11680
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11681, metadata !DIExpression()), !dbg !11680
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11680
  %conv = zext i1 %cmp to i32, !dbg !11680
  store i32 1, i32* %tmp, align 4, !dbg !11680
  %3 = load i32, i32* %tmp, align 4, !dbg !11680
  br label %do.body2, !dbg !11682

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !11683

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11684

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !11686, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11690, metadata !DIExpression()), !dbg !11689
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !11689
  %conv8 = zext i1 %cmp7 to i32, !dbg !11689
  store i32 1, i32* %tmp9, align 4, !dbg !11689
  %4 = load i32, i32* %tmp9, align 4, !dbg !11689
  %call = call i64 @arch_local_irq_save() #11, !dbg !11691
  store i64 %call, i64* %flags, align 8, !dbg !11691
  br label %do.end, !dbg !11691

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !11684

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !11683

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11692, !srcloc !11693
  br label %do.body12, !dbg !11692

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11694
  %lock = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %5, i32 0, i32 2, !dbg !11694
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11695
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !11696
  %rlock.i = bitcast %union.anon.4* %7 to %struct.raw_spinlock*, !dbg !11696
  br label %do.end14, !dbg !11694

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !11692

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !11683

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !11682

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11677

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11697
  %count = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %8, i32 0, i32 0, !dbg !11698
  %9 = load i32, i32* %count, align 8, !dbg !11699
  %dec = add i32 %9, -1, !dbg !11699
  store i32 %dec, i32* %count, align 8, !dbg !11699
  %10 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11700
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %10, i32 0, i32 24, !dbg !11701
  %11 = load i32, i32* %number_of_packets, align 4, !dbg !11701
  %conv19 = sext i32 %11 to i64, !dbg !11700
  %12 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11702
  %packet_count = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %12, i32 0, i32 6, !dbg !11703
  %13 = load i64, i64* %packet_count, align 8, !dbg !11704
  %add = add i64 %13, %conv19, !dbg !11704
  store i64 %add, i64* %packet_count, align 8, !dbg !11704
  %14 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11705
  %error_count = getelementptr inbounds %struct.urb, %struct.urb* %14, i32 0, i32 26, !dbg !11707
  %15 = load i32, i32* %error_count, align 4, !dbg !11707
  %cmp20 = icmp sgt i32 %15, 0, !dbg !11708
  br i1 %cmp20, label %if.then, label %if.else, !dbg !11709

if.then:                                          ; preds = %do.end18
  %16 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11710
  %error_count22 = getelementptr inbounds %struct.urb, %struct.urb* %16, i32 0, i32 26, !dbg !11711
  %17 = load i32, i32* %error_count22, align 4, !dbg !11711
  %conv23 = sext i32 %17 to i64, !dbg !11710
  %18 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11712
  %errors = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %18, i32 0, i32 5, !dbg !11713
  %19 = load i64, i64* %errors, align 8, !dbg !11714
  %add24 = add i64 %19, %conv23, !dbg !11714
  store i64 %add24, i64* %errors, align 8, !dbg !11714
  br label %if.end47, !dbg !11712

if.else:                                          ; preds = %do.end18
  %20 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11715
  %status = getelementptr inbounds %struct.urb, %struct.urb* %20, i32 0, i32 12, !dbg !11717
  %21 = load i32, i32* %status, align 8, !dbg !11717
  %cmp25 = icmp ne i32 %21, 0, !dbg !11718
  br i1 %cmp25, label %if.then27, label %if.else33, !dbg !11719

if.then27:                                        ; preds = %if.else
  %22 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11720
  %is_iso = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %22, i32 0, i32 8, !dbg !11721
  %23 = load i8, i8* %is_iso, align 8, !dbg !11721
  %tobool = trunc i8 %23 to i1, !dbg !11721
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11720

cond.true:                                        ; preds = %if.then27
  %24 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11722
  %number_of_packets29 = getelementptr inbounds %struct.urb, %struct.urb* %24, i32 0, i32 24, !dbg !11723
  %25 = load i32, i32* %number_of_packets29, align 4, !dbg !11723
  br label %cond.end, !dbg !11720

cond.false:                                       ; preds = %if.then27
  br label %cond.end, !dbg !11720

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %25, %cond.true ], [ 1, %cond.false ], !dbg !11720
  %conv30 = sext i32 %cond to i64, !dbg !11724
  %26 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11725
  %errors31 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %26, i32 0, i32 5, !dbg !11726
  %27 = load i64, i64* %errors31, align 8, !dbg !11727
  %add32 = add i64 %27, %conv30, !dbg !11727
  store i64 %add32, i64* %errors31, align 8, !dbg !11727
  br label %if.end46, !dbg !11725

if.else33:                                        ; preds = %if.else
  %28 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11728
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %28, i32 0, i32 20, !dbg !11730
  %29 = load i32, i32* %actual_length, align 4, !dbg !11730
  %30 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11731
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %30, i32 0, i32 19, !dbg !11732
  %31 = load i32, i32* %transfer_buffer_length, align 8, !dbg !11732
  %cmp34 = icmp ne i32 %29, %31, !dbg !11733
  br i1 %cmp34, label %if.then36, label %if.else38, !dbg !11734

if.then36:                                        ; preds = %if.else33
  %32 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11735
  %errors37 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %32, i32 0, i32 5, !dbg !11736
  %33 = load i64, i64* %errors37, align 8, !dbg !11737
  %inc = add i64 %33, 1, !dbg !11737
  store i64 %inc, i64* %errors37, align 8, !dbg !11737
  br label %if.end45, !dbg !11735

if.else38:                                        ; preds = %if.else33
  %34 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11738
  %dev = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %34, i32 0, i32 7, !dbg !11740
  %35 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev, align 8, !dbg !11740
  %36 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11741
  %call39 = call i32 @check_guard_bytes(%struct.usbtest_dev* %35, %struct.urb* %36) #11, !dbg !11742
  %cmp40 = icmp ne i32 %call39, 0, !dbg !11743
  br i1 %cmp40, label %if.then42, label %if.end, !dbg !11744

if.then42:                                        ; preds = %if.else38
  %37 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11745
  %errors43 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %37, i32 0, i32 5, !dbg !11746
  %38 = load i64, i64* %errors43, align 8, !dbg !11747
  %inc44 = add i64 %38, 1, !dbg !11747
  store i64 %inc44, i64* %errors43, align 8, !dbg !11747
  br label %if.end, !dbg !11745

if.end:                                           ; preds = %if.then42, %if.else38
  br label %if.end45

if.end45:                                         ; preds = %if.end, %if.then36
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %cond.end
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then
  %39 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11748
  %status48 = getelementptr inbounds %struct.urb, %struct.urb* %39, i32 0, i32 12, !dbg !11750
  %40 = load i32, i32* %status48, align 8, !dbg !11750
  %cmp49 = icmp eq i32 %40, 0, !dbg !11751
  br i1 %cmp49, label %land.lhs.true, label %if.end63, !dbg !11752

land.lhs.true:                                    ; preds = %if.end47
  %41 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11753
  %count51 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %41, i32 0, i32 0, !dbg !11754
  %42 = load i32, i32* %count51, align 8, !dbg !11754
  %43 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11755
  %pending = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %43, i32 0, i32 1, !dbg !11756
  %44 = load i32, i32* %pending, align 4, !dbg !11756
  %sub = sub i32 %44, 1, !dbg !11757
  %cmp52 = icmp ugt i32 %42, %sub, !dbg !11758
  br i1 %cmp52, label %land.lhs.true54, label %if.end63, !dbg !11759

land.lhs.true54:                                  ; preds = %land.lhs.true
  %45 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11760
  %submit_error = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %45, i32 0, i32 4, !dbg !11761
  %46 = load i32, i32* %submit_error, align 8, !dbg !11761
  %tobool55 = icmp ne i32 %46, 0, !dbg !11760
  br i1 %tobool55, label %if.end63, label %if.then56, !dbg !11762

if.then56:                                        ; preds = %land.lhs.true54
  call void @llvm.dbg.declare(metadata i32* %status57, metadata !11763, metadata !DIExpression()), !dbg !11765
  %47 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11766
  %call58 = call i32 @usb_submit_urb(%struct.urb* %47, i32 2592) #11, !dbg !11767
  store i32 %call58, i32* %status57, align 4, !dbg !11765
  %48 = load i32, i32* %status57, align 4, !dbg !11768
  switch i32 %48, label %sw.default [
    i32 0, label %sw.bb
    i32 -19, label %sw.bb61
    i32 -108, label %sw.bb61
  ], !dbg !11769

sw.bb:                                            ; preds = %if.then56
  br label %done80, !dbg !11770

sw.default:                                       ; preds = %if.then56
  %49 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11772
  %dev59 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %49, i32 0, i32 7, !dbg !11772
  %50 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev59, align 8, !dbg !11772
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %50, i32 0, i32 0, !dbg !11772
  %51 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !11772
  %dev60 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %51, i32 0, i32 7, !dbg !11772
  %52 = load i32, i32* %status57, align 4, !dbg !11772
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev60, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.127, i64 0, i64 0), i32 %52) #12, !dbg !11772
  br label %sw.bb61, !dbg !11772

sw.bb61:                                          ; preds = %if.then56, %if.then56, %sw.default
  %53 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11773
  %submit_error62 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %53, i32 0, i32 4, !dbg !11774
  store i32 1, i32* %submit_error62, align 8, !dbg !11775
  br label %sw.epilog, !dbg !11776

sw.epilog:                                        ; preds = %sw.bb61
  br label %if.end63, !dbg !11777

if.end63:                                         ; preds = %sw.epilog, %land.lhs.true54, %land.lhs.true, %if.end47
  %54 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11778
  %pending64 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %54, i32 0, i32 1, !dbg !11779
  %55 = load i32, i32* %pending64, align 4, !dbg !11780
  %dec65 = add i32 %55, -1, !dbg !11780
  store i32 %dec65, i32* %pending64, align 4, !dbg !11780
  %56 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11781
  %pending66 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %56, i32 0, i32 1, !dbg !11783
  %57 = load i32, i32* %pending66, align 4, !dbg !11783
  %cmp67 = icmp eq i32 %57, 0, !dbg !11784
  br i1 %cmp67, label %if.then69, label %if.end79, !dbg !11785

if.then69:                                        ; preds = %if.end63
  %58 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11786
  %errors70 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %58, i32 0, i32 5, !dbg !11789
  %59 = load i64, i64* %errors70, align 8, !dbg !11789
  %tobool71 = icmp ne i64 %59, 0, !dbg !11786
  br i1 %tobool71, label %if.then72, label %if.end78, !dbg !11790

if.then72:                                        ; preds = %if.then69
  %60 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11791
  %dev73 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %60, i32 0, i32 7, !dbg !11791
  %61 = load %struct.usbtest_dev*, %struct.usbtest_dev** %dev73, align 8, !dbg !11791
  %intf74 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %61, i32 0, i32 0, !dbg !11791
  %62 = load %struct.usb_interface*, %struct.usb_interface** %intf74, align 8, !dbg !11791
  %dev75 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %62, i32 0, i32 7, !dbg !11791
  %63 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11791
  %errors76 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %63, i32 0, i32 5, !dbg !11791
  %64 = load i64, i64* %errors76, align 8, !dbg !11791
  %65 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11791
  %packet_count77 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %65, i32 0, i32 6, !dbg !11791
  %66 = load i64, i64* %packet_count77, align 8, !dbg !11791
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev75, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.128, i64 0, i64 0), i64 %64, i64 %66) #12, !dbg !11791
  br label %if.end78, !dbg !11791

if.end78:                                         ; preds = %if.then72, %if.then69
  %67 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11792
  %done = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %67, i32 0, i32 3, !dbg !11793
  call void @complete(%struct.completion* %done) #11, !dbg !11794
  br label %if.end79, !dbg !11795

if.end79:                                         ; preds = %if.end78, %if.end63
  br label %done80, !dbg !11796

done80:                                           ; preds = %if.end79, %sw.bb
  call void @llvm.dbg.label(metadata !11797), !dbg !11798
  %68 = load %struct.transfer_context*, %struct.transfer_context** %ctx, align 8, !dbg !11799
  %lock81 = getelementptr inbounds %struct.transfer_context, %struct.transfer_context* %68, i32 0, i32 2, !dbg !11800
  %69 = load i64, i64* %flags, align 8, !dbg !11801
  store %struct.spinlock* %lock81, %struct.spinlock** %lock.addr.i82, align 8
  store i64 %69, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !235, metadata !11033, metadata !DIExpression()) #10, !dbg !11802
  call void @llvm.dbg.declare(metadata !235, metadata !11037, metadata !DIExpression()) #10, !dbg !11802
  store i32 1, i32* %tmp.i, align 4, !dbg !11802
  %70 = load i32, i32* %tmp.i, align 4, !dbg !11802
  call void @llvm.dbg.declare(metadata !235, metadata !11038, metadata !DIExpression()) #10, !dbg !11803
  call void @llvm.dbg.declare(metadata !235, metadata !11044, metadata !DIExpression()) #10, !dbg !11803
  store i32 1, i32* %tmp8.i, align 4, !dbg !11803
  %71 = load i32, i32* %tmp8.i, align 4, !dbg !11803
  %72 = load i64, i64* %flags.addr.i, align 8, !dbg !11804
  call void @arch_local_irq_restore(i64 %72) #14, !dbg !11804
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11805, !srcloc !11048
  %73 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i82, align 8, !dbg !11806
  %74 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %73, i32 0, i32 0, !dbg !11806
  %rlock.i83 = bitcast %union.anon.4* %74 to %struct.raw_spinlock*, !dbg !11806
  ret void, !dbg !11807
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @unlink_queued_callback(%struct.urb* %urb) #2 !dbg !11808 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9072, metadata !DIExpression()), !dbg !11809
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !9084, metadata !DIExpression()), !dbg !11813
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9087, metadata !DIExpression()), !dbg !11814
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9097, metadata !DIExpression()), !dbg !11816
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9099, metadata !DIExpression()), !dbg !11817
  %urb.addr = alloca %struct.urb*, align 8
  %status = alloca i32, align 4
  %ctx = alloca %struct.queued_ctx*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !11818, metadata !DIExpression()), !dbg !11819
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11820, metadata !DIExpression()), !dbg !11821
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11822
  %status1 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 12, !dbg !11823
  %1 = load i32, i32* %status1, align 8, !dbg !11823
  store i32 %1, i32* %status, align 4, !dbg !11821
  call void @llvm.dbg.declare(metadata %struct.queued_ctx** %ctx, metadata !11824, metadata !DIExpression()), !dbg !11826
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11827
  %context = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 27, !dbg !11828
  %3 = load i8*, i8** %context, align 8, !dbg !11828
  %4 = bitcast i8* %3 to %struct.queued_ctx*, !dbg !11827
  store %struct.queued_ctx* %4, %struct.queued_ctx** %ctx, align 8, !dbg !11826
  %5 = load %struct.queued_ctx*, %struct.queued_ctx** %ctx, align 8, !dbg !11829
  %status2 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %5, i32 0, i32 3, !dbg !11831
  %6 = load i32, i32* %status2, align 8, !dbg !11831
  %tobool = icmp ne i32 %6, 0, !dbg !11829
  br i1 %tobool, label %if.then, label %if.end, !dbg !11832

if.then:                                          ; preds = %entry
  br label %done, !dbg !11833

if.end:                                           ; preds = %entry
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11834
  %8 = load %struct.queued_ctx*, %struct.queued_ctx** %ctx, align 8, !dbg !11836
  %urbs = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %8, i32 0, i32 4, !dbg !11837
  %9 = load %struct.urb**, %struct.urb*** %urbs, align 8, !dbg !11837
  %10 = load %struct.queued_ctx*, %struct.queued_ctx** %ctx, align 8, !dbg !11838
  %num = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %10, i32 0, i32 2, !dbg !11839
  %11 = load i32, i32* %num, align 4, !dbg !11839
  %sub = sub i32 %11, 4, !dbg !11840
  %idxprom = zext i32 %sub to i64, !dbg !11836
  %arrayidx = getelementptr %struct.urb*, %struct.urb** %9, i64 %idxprom, !dbg !11836
  %12 = load %struct.urb*, %struct.urb** %arrayidx, align 8, !dbg !11836
  %cmp = icmp eq %struct.urb* %7, %12, !dbg !11841
  br i1 %cmp, label %if.then9, label %lor.lhs.false, !dbg !11842

lor.lhs.false:                                    ; preds = %if.end
  %13 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11843
  %14 = load %struct.queued_ctx*, %struct.queued_ctx** %ctx, align 8, !dbg !11844
  %urbs3 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %14, i32 0, i32 4, !dbg !11845
  %15 = load %struct.urb**, %struct.urb*** %urbs3, align 8, !dbg !11845
  %16 = load %struct.queued_ctx*, %struct.queued_ctx** %ctx, align 8, !dbg !11846
  %num4 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %16, i32 0, i32 2, !dbg !11847
  %17 = load i32, i32* %num4, align 4, !dbg !11847
  %sub5 = sub i32 %17, 2, !dbg !11848
  %idxprom6 = zext i32 %sub5 to i64, !dbg !11844
  %arrayidx7 = getelementptr %struct.urb*, %struct.urb** %15, i64 %idxprom6, !dbg !11844
  %18 = load %struct.urb*, %struct.urb** %arrayidx7, align 8, !dbg !11844
  %cmp8 = icmp eq %struct.urb* %13, %18, !dbg !11849
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !11850

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %19 = load i32, i32* %status, align 4, !dbg !11851
  %cmp10 = icmp eq i32 %19, -104, !dbg !11854
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11855

if.then11:                                        ; preds = %if.then9
  br label %done, !dbg !11856

if.end12:                                         ; preds = %if.then9
  br label %if.end13, !dbg !11857

if.end13:                                         ; preds = %if.end12, %lor.lhs.false
  %20 = load i32, i32* %status, align 4, !dbg !11858
  %cmp14 = icmp ne i32 %20, 0, !dbg !11860
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !11861

if.then15:                                        ; preds = %if.end13
  %21 = load i32, i32* %status, align 4, !dbg !11862
  %22 = load %struct.queued_ctx*, %struct.queued_ctx** %ctx, align 8, !dbg !11863
  %status16 = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %22, i32 0, i32 3, !dbg !11864
  store i32 %21, i32* %status16, align 8, !dbg !11865
  br label %if.end17, !dbg !11863

if.end17:                                         ; preds = %if.then15, %if.end13
  br label %done, !dbg !11866

done:                                             ; preds = %if.end17, %if.then11, %if.then
  call void @llvm.dbg.label(metadata !11867), !dbg !11868
  %23 = load %struct.queued_ctx*, %struct.queued_ctx** %ctx, align 8, !dbg !11869
  %pending = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %23, i32 0, i32 1, !dbg !11870
  store %struct.atomic_t* %pending, %struct.atomic_t** %v.addr.i, align 8
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11871
  %25 = bitcast %struct.atomic_t* %24 to i8*, !dbg !11871
  store i8* %25, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %26 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11872
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !11873
  %conv.i.i = trunc i64 %27 to i32, !dbg !11873
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %26, i32 %conv.i.i) #14, !dbg !11874
  %28 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11875
  %29 = load i64, i64* %size.addr.i.i, align 8, !dbg !11875
  call void @kcsan_check_access(i8* %28, i64 %29, i32 7) #14, !dbg !11875
  %30 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11876
  store %struct.atomic_t* %30, %struct.atomic_t** %v.addr.i1.i, align 8
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11813
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %31, i32 0, i32 0, !dbg !11813
  %32 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #10, !dbg !11813, !srcloc !9355
  store i8 %32, i8* %c.i.i, align 1, !dbg !11813
  %33 = load i8, i8* %c.i.i, align 1, !dbg !11813
  %tobool.i.i = trunc i8 %33 to i1, !dbg !11813
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !11813
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !11813
  %34 = load i8, i8* %tmp.i.i, align 1, !dbg !11813
  %tobool1.i.i = trunc i8 %34 to i1, !dbg !11813
  br i1 %tobool1.i.i, label %if.then18, label %if.end19, !dbg !11877

if.then18:                                        ; preds = %done
  %35 = load %struct.queued_ctx*, %struct.queued_ctx** %ctx, align 8, !dbg !11878
  %complete = getelementptr inbounds %struct.queued_ctx, %struct.queued_ctx* %35, i32 0, i32 0, !dbg !11879
  call void @complete(%struct.completion* %complete) #11, !dbg !11880
  br label %if.end19, !dbg !11880

if.end19:                                         ; preds = %if.then18, %done
  ret void, !dbg !11881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !11882 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11886, metadata !DIExpression()), !dbg !11887
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11888, metadata !DIExpression()), !dbg !11889
  ret i1 true, !dbg !11890
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !11891 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11895, metadata !DIExpression()), !dbg !11896
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11897, metadata !DIExpression()), !dbg !11898
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11899, metadata !DIExpression()), !dbg !11900
  ret void, !dbg !11901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_toggle_sync(%struct.usbtest_dev* %tdev, i32 %ep, %struct.urb* %urb) #2 !dbg !11902 {
entry:
  %retval = alloca i32, align 4
  %tdev.addr = alloca %struct.usbtest_dev*, align 8
  %ep.addr = alloca i32, align 4
  %urb.addr = alloca %struct.urb*, align 8
  %retval1 = alloca i32, align 4
  store %struct.usbtest_dev* %tdev, %struct.usbtest_dev** %tdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbtest_dev** %tdev.addr, metadata !11903, metadata !DIExpression()), !dbg !11904
  store i32 %ep, i32* %ep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep.addr, metadata !11905, metadata !DIExpression()), !dbg !11906
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !11907, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !11909, metadata !DIExpression()), !dbg !11910
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11911
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 8, !dbg !11912
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11912
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11913
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 10, !dbg !11914
  %3 = load i32, i32* %pipe, align 8, !dbg !11914
  %call = call i32 @usb_clear_halt(%struct.usb_device* %1, i32 %3) #11, !dbg !11915
  store i32 %call, i32* %retval1, align 4, !dbg !11916
  %4 = load i32, i32* %retval1, align 4, !dbg !11917
  %cmp = icmp slt i32 %4, 0, !dbg !11919
  br i1 %cmp, label %if.then, label %if.end, !dbg !11920

if.then:                                          ; preds = %entry
  %5 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11921
  %intf = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %5, i32 0, i32 0, !dbg !11921
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !11921
  %dev2 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %6, i32 0, i32 7, !dbg !11921
  %7 = load i32, i32* %ep.addr, align 4, !dbg !11921
  %8 = load i32, i32* %retval1, align 4, !dbg !11921
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.109, i64 0, i64 0), i32 %7, i32 %8) #12, !dbg !11921
  %9 = load i32, i32* %retval1, align 4, !dbg !11923
  store i32 %9, i32* %retval, align 4, !dbg !11924
  br label %return, !dbg !11924

if.end:                                           ; preds = %entry
  %10 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11925
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11926
  %call3 = call i32 @simple_io(%struct.usbtest_dev* %10, %struct.urb* %11, i32 1, i32 0, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.test_toggle_sync, i64 0, i64 0)) #11, !dbg !11927
  store i32 %call3, i32* %retval1, align 4, !dbg !11928
  %12 = load i32, i32* %retval1, align 4, !dbg !11929
  %cmp4 = icmp ne i32 %12, 0, !dbg !11931
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11932

if.then5:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11933
  br label %return, !dbg !11933

if.end6:                                          ; preds = %if.end
  %13 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11934
  %dev7 = getelementptr inbounds %struct.urb, %struct.urb* %13, i32 0, i32 8, !dbg !11935
  %14 = load %struct.usb_device*, %struct.usb_device** %dev7, align 8, !dbg !11935
  %15 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11936
  %pipe8 = getelementptr inbounds %struct.urb, %struct.urb* %15, i32 0, i32 10, !dbg !11937
  %16 = load i32, i32* %pipe8, align 8, !dbg !11937
  %call9 = call i32 @usb_clear_halt(%struct.usb_device* %14, i32 %16) #11, !dbg !11938
  store i32 %call9, i32* %retval1, align 4, !dbg !11939
  %17 = load i32, i32* %retval1, align 4, !dbg !11940
  %cmp10 = icmp slt i32 %17, 0, !dbg !11942
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !11943

if.then11:                                        ; preds = %if.end6
  %18 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11944
  %intf12 = getelementptr inbounds %struct.usbtest_dev, %struct.usbtest_dev* %18, i32 0, i32 0, !dbg !11944
  %19 = load %struct.usb_interface*, %struct.usb_interface** %intf12, align 8, !dbg !11944
  %dev13 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %19, i32 0, i32 7, !dbg !11944
  %20 = load i32, i32* %ep.addr, align 4, !dbg !11944
  %21 = load i32, i32* %retval1, align 4, !dbg !11944
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev13, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.109, i64 0, i64 0), i32 %20, i32 %21) #12, !dbg !11944
  %22 = load i32, i32* %retval1, align 4, !dbg !11946
  store i32 %22, i32* %retval, align 4, !dbg !11947
  br label %return, !dbg !11947

if.end14:                                         ; preds = %if.end6
  %23 = load %struct.usbtest_dev*, %struct.usbtest_dev** %tdev.addr, align 8, !dbg !11948
  %24 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11949
  %call15 = call i32 @simple_io(%struct.usbtest_dev* %23, %struct.urb* %24, i32 1, i32 0, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.test_toggle_sync, i64 0, i64 0)) #11, !dbg !11950
  store i32 %call15, i32* %retval1, align 4, !dbg !11951
  %25 = load i32, i32* %retval1, align 4, !dbg !11952
  store i32 %25, i32* %retval, align 4, !dbg !11953
  br label %return, !dbg !11953

return:                                           ; preds = %if.end14, %if.then11, %if.then5, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !11954
  ret i32 %26, !dbg !11954
}

; Function Attrs: noredzone
declare dso_local void @set_normalized_timespec64(%struct.timespec64*, i64, i64) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4438}
!llvm.module.flags = !{!4439, !4440, !4441, !4442}
!llvm.ident = !{!4443}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_alt", scope: !2, file: !3, line: 19, type: !4437, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !138, globals: !4187, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/usb/misc/usbtest.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !20, !26, !31, !37, !44, !50, !59, !67, !73, !79, !86, !94, !100, !112, !121, !126, !133}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_interface_condition", file: !6, line: 96, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/usb.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "USB_INTERFACE_UNBOUND", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "USB_INTERFACE_BINDING", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "USB_INTERFACE_BOUND", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "USB_INTERFACE_UNBINDING", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !14, line: 15, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18, !19}
!16 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !21, line: 546, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!22 = !{!23, !24, !25}
!23 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !27, line: 65, baseType: !7, size: 32, elements: !28)
!27 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!28 = !{!29, !30}
!29 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !32, line: 16, baseType: !7, size: 32, elements: !33)
!32 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !38, line: 59, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42, !43}
!40 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !45, line: 54, baseType: !7, size: 32, elements: !46)
!45 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!48 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!49 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !51, line: 296, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54, !55, !56, !57, !58}
!53 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!57 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!58 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !60, line: 9, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65, !66}
!62 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!66 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !68, line: 26, baseType: !7, size: 32, elements: !69)
!68 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!69 = !{!70, !71, !72}
!70 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !74, line: 44, baseType: !7, size: 32, elements: !75)
!74 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!75 = !{!76, !77, !78}
!76 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !80, line: 343, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85}
!82 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !87, line: 524, baseType: !7, size: 32, elements: !88)
!87 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!88 = !{!89, !90, !91, !92, !93}
!89 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !87, line: 502, baseType: !7, size: 32, elements: !95)
!95 = !{!96, !97, !98, !99}
!96 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_state", file: !101, line: 1156, baseType: !7, size: 32, elements: !102)
!101 = !DIFile(filename: "./include/uapi/linux/usb/ch9.h", directory: "/home/lizy2001/genbc/linux")
!102 = !{!103, !104, !105, !106, !107, !108, !109, !110, !111}
!103 = !DIEnumerator(name: "USB_STATE_NOTATTACHED", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "USB_STATE_ATTACHED", value: 1, isUnsigned: true)
!105 = !DIEnumerator(name: "USB_STATE_POWERED", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "USB_STATE_RECONNECTING", value: 3, isUnsigned: true)
!107 = !DIEnumerator(name: "USB_STATE_UNAUTHENTICATED", value: 4, isUnsigned: true)
!108 = !DIEnumerator(name: "USB_STATE_DEFAULT", value: 5, isUnsigned: true)
!109 = !DIEnumerator(name: "USB_STATE_ADDRESS", value: 6, isUnsigned: true)
!110 = !DIEnumerator(name: "USB_STATE_CONFIGURED", value: 7, isUnsigned: true)
!111 = !DIEnumerator(name: "USB_STATE_SUSPENDED", value: 8, isUnsigned: true)
!112 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_speed", file: !101, line: 1146, baseType: !7, size: 32, elements: !113)
!113 = !{!114, !115, !116, !117, !118, !119, !120}
!114 = !DIEnumerator(name: "USB_SPEED_UNKNOWN", value: 0, isUnsigned: true)
!115 = !DIEnumerator(name: "USB_SPEED_LOW", value: 1, isUnsigned: true)
!116 = !DIEnumerator(name: "USB_SPEED_FULL", value: 2, isUnsigned: true)
!117 = !DIEnumerator(name: "USB_SPEED_HIGH", value: 3, isUnsigned: true)
!118 = !DIEnumerator(name: "USB_SPEED_WIRELESS", value: 4, isUnsigned: true)
!119 = !DIEnumerator(name: "USB_SPEED_SUPER", value: 5, isUnsigned: true)
!120 = !DIEnumerator(name: "USB_SPEED_SUPER_PLUS", value: 6, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_removable", file: !6, line: 476, baseType: !7, size: 32, elements: !122)
!122 = !{!123, !124, !125}
!123 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE_UNKNOWN", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE", value: 1, isUnsigned: true)
!125 = !DIEnumerator(name: "USB_DEVICE_FIXED", value: 2, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !127, line: 305, baseType: !7, size: 32, elements: !128)
!127 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!128 = !{!129, !130, !131, !132}
!129 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!133 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !134, line: 10, baseType: !7, size: 32, elements: !135)
!134 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!135 = !{!136, !137}
!136 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!137 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!138 = !{!139, !142, !145, !147, !149, !151, !169, !170, !168, !159, !297, !311, !702, !4073, !2098, !3878, !4152, !4158, !3886, !180, !3844, !3894, !3919, !4170, !262, !4171, !4179, !7, !4185}
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!140 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !141, line: 76, flags: DIFlagFwdDecl)
!141 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !143, line: 24, baseType: !144)
!143 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!144 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !146, line: 29, baseType: !142)
!146 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !148, line: 19, baseType: !142)
!148 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !150, line: 148, baseType: !7)
!150 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbtest_info", file: !3, line: 76, size: 128, elements: !153)
!153 = !{!154, !158, !162, !163, !164, !165, !166, !167}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !152, file: !3, line: 77, baseType: !155, size: 64)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!157 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "ep_in", scope: !152, file: !3, line: 78, baseType: !159, size: 8, offset: 64)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !148, line: 17, baseType: !160)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !143, line: 21, baseType: !161)
!161 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "ep_out", scope: !152, file: !3, line: 79, baseType: !159, size: 8, offset: 72)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !152, file: !3, line: 80, baseType: !7, size: 1, offset: 80, flags: DIFlagBitField, extraData: i64 80)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_out", scope: !152, file: !3, line: 81, baseType: !7, size: 1, offset: 81, flags: DIFlagBitField, extraData: i64 80)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "iso", scope: !152, file: !3, line: 82, baseType: !7, size: 1, offset: 82, flags: DIFlagBitField, extraData: i64 80)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "intr", scope: !152, file: !3, line: 83, baseType: !7, size: 1, offset: 83, flags: DIFlagBitField, extraData: i64 80)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !152, file: !3, line: 84, baseType: !168, size: 32, offset: 96)
!168 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device", file: !6, line: 631, size: 10624, elements: !172)
!172 = !{!173, !174, !178, !181, !182, !183, !184, !185, !188, !189, !193, !194, !3815, !3855, !3856, !3873, !3934, !4016, !4017, !4019, !4020, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4055, !4056, !4057, !4062, !4069, !4070, !4071, !4072}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "devnum", scope: !171, file: !6, line: 632, baseType: !168, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "devpath", scope: !171, file: !6, line: 633, baseType: !175, size: 128, offset: 32)
!175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 128, elements: !176)
!176 = !{!177}
!177 = !DISubrange(count: 16)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "route", scope: !171, file: !6, line: 634, baseType: !179, size: 32, offset: 160)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !148, line: 21, baseType: !180)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !143, line: 27, baseType: !7)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !171, file: !6, line: 635, baseType: !100, size: 32, offset: 192)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !171, file: !6, line: 636, baseType: !112, size: 32, offset: 224)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "rx_lanes", scope: !171, file: !6, line: 637, baseType: !7, size: 32, offset: 256)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lanes", scope: !171, file: !6, line: 638, baseType: !7, size: 32, offset: 288)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "tt", scope: !171, file: !6, line: 640, baseType: !186, size: 64, offset: 320)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!187 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_tt", file: !6, line: 474, flags: DIFlagFwdDecl)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "ttport", scope: !171, file: !6, line: 641, baseType: !168, size: 32, offset: 384)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "toggle", scope: !171, file: !6, line: 643, baseType: !190, size: 64, offset: 416)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 2)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !171, file: !6, line: 645, baseType: !170, size: 64, offset: 512)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !171, file: !6, line: 646, baseType: !195, size: 64, offset: 576)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bus", file: !6, line: 424, size: 960, elements: !197)
!197 = !{!198, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3809, !3810, !3811, !3812, !3813, !3814}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !196, file: !6, line: 425, baseType: !199, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !80, line: 461, size: 5568, elements: !201)
!201 = !{!202, !3345, !3346, !3349, !3350, !3401, !3492, !3493, !3494, !3495, !3496, !3505, !3610, !3623, !3627, !3628, !3632, !3634, !3635, !3636, !3640, !3646, !3647, !3650, !3654, !3744, !3745, !3746, !3747, !3748, !3780, !3781, !3782, !3785, !3788, !3789, !3790, !3791}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !200, file: !80, line: 462, baseType: !203, size: 512)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !204, line: 64, size: 512, elements: !205)
!204 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!205 = !{!206, !207, !213, !215, !275, !3195, !3335, !3340, !3341, !3342, !3343, !3344}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !203, file: !204, line: 65, baseType: !155, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !203, file: !204, line: 66, baseType: !208, size: 128, offset: 64)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !150, line: 178, size: 128, elements: !209)
!209 = !{!210, !212}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !208, file: !150, line: 179, baseType: !211, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !208, file: !150, line: 179, baseType: !211, size: 64, offset: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !203, file: !204, line: 67, baseType: !214, size: 64, offset: 192)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !203, file: !204, line: 68, baseType: !216, size: 64, offset: 256)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !204, line: 192, size: 704, elements: !218)
!218 = !{!219, !220, !236, !237}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !217, file: !204, line: 193, baseType: !208, size: 128)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !217, file: !204, line: 194, baseType: !221, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !222, line: 83, baseType: !223)
!222 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !222, line: 71, elements: !224)
!224 = !{!225}
!225 = !DIDerivedType(tag: DW_TAG_member, scope: !223, file: !222, line: 72, baseType: !226)
!226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !223, file: !222, line: 72, elements: !227)
!227 = !{!228}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !226, file: !222, line: 73, baseType: !229)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !222, line: 20, elements: !230)
!230 = !{!231}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !229, file: !222, line: 21, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !233, line: 25, baseType: !234)
!233 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !233, line: 25, elements: !235)
!235 = !{}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !217, file: !204, line: 195, baseType: !203, size: 512, offset: 128)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !217, file: !204, line: 196, baseType: !238, size: 64, offset: 640)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !204, line: 156, size: 192, elements: !241)
!241 = !{!242, !247, !252}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !240, file: !204, line: 157, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !244)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DISubroutineType(types: !246)
!246 = !{!168, !216, !214}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !240, file: !204, line: 158, baseType: !248, size: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !249)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = !DISubroutineType(types: !251)
!251 = !{!155, !216, !214}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !240, file: !204, line: 159, baseType: !253, size: 64, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = !DISubroutineType(types: !256)
!256 = !{!168, !216, !214, !257}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !204, line: 148, size: 20736, elements: !259)
!259 = !{!260, !265, !269, !270, !274}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !258, file: !204, line: 149, baseType: !261, size: 192)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 192, elements: !263)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!263 = !{!264}
!264 = !DISubrange(count: 3)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !258, file: !204, line: 150, baseType: !266, size: 4096, offset: 192)
!266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 4096, elements: !267)
!267 = !{!268}
!268 = !DISubrange(count: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !258, file: !204, line: 151, baseType: !168, size: 32, offset: 4288)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !258, file: !204, line: 152, baseType: !271, size: 16384, offset: 4320)
!271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 16384, elements: !272)
!272 = !{!273}
!273 = !DISubrange(count: 2048)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !258, file: !204, line: 153, baseType: !168, size: 32, offset: 20704)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !203, file: !204, line: 69, baseType: !276, size: 64, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !204, line: 138, size: 448, elements: !278)
!278 = !{!279, !283, !312, !314, !3157, !3185, !3189}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !277, file: !204, line: 139, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{null, !214}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !277, file: !204, line: 140, baseType: !284, size: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !287, line: 230, size: 128, elements: !288)
!287 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!288 = !{!289, !304}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !286, file: !287, line: 231, baseType: !290, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!291 = !DISubroutineType(types: !292)
!292 = !{!293, !214, !298, !262}
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !150, line: 60, baseType: !294)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !295, line: 73, baseType: !296)
!295 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !295, line: 15, baseType: !297)
!297 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !287, line: 30, size: 128, elements: !300)
!300 = !{!301, !302}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !299, file: !287, line: 31, baseType: !155, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !299, file: !287, line: 32, baseType: !303, size: 16, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !150, line: 19, baseType: !144)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !286, file: !287, line: 232, baseType: !305, size: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = !DISubroutineType(types: !307)
!307 = !{!293, !214, !298, !155, !308}
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !150, line: 55, baseType: !309)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !295, line: 72, baseType: !310)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !295, line: 16, baseType: !311)
!311 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !277, file: !204, line: 141, baseType: !313, size: 64, offset: 128)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !277, file: !204, line: 142, baseType: !315, size: 64, offset: 192)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !287, line: 84, size: 320, elements: !319)
!319 = !{!320, !321, !325, !3154, !3155}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !318, file: !287, line: 85, baseType: !155, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !318, file: !287, line: 86, baseType: !322, size: 64, offset: 64)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!303, !214, !298, !168}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !318, file: !287, line: 88, baseType: !326, size: 64, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DISubroutineType(types: !328)
!328 = !{!303, !214, !329, !168}
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !287, line: 168, size: 448, elements: !331)
!331 = !{!332, !333, !334, !335, !3149, !3150}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !330, file: !287, line: 169, baseType: !299, size: 128)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !330, file: !287, line: 170, baseType: !308, size: 64, offset: 128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !330, file: !287, line: 171, baseType: !169, size: 64, offset: 192)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !330, file: !287, line: 172, baseType: !336, size: 64, offset: 256)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!293, !339, !214, !329, !262, !513, !308}
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !51, line: 916, size: 1856, align: 32, elements: !341)
!341 = !{!342, !360, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3132, !3133, !3142, !3143, !3144, !3145, !3146, !3147, !3148}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !340, file: !51, line: 920, baseType: !343, size: 128)
!343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !340, file: !51, line: 917, size: 128, elements: !344)
!344 = !{!345, !351}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !343, file: !51, line: 918, baseType: !346, size: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !347, line: 58, size: 64, elements: !348)
!347 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !346, file: !347, line: 59, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !343, file: !51, line: 919, baseType: !352, size: 128, align: 64)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !150, line: 216, size: 128, align: 64, elements: !353)
!353 = !{!354, !356}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !352, file: !150, line: 217, baseType: !355, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !352, file: !150, line: 218, baseType: !357, size: 64, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DISubroutineType(types: !359)
!359 = !{null, !355}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !340, file: !51, line: 921, baseType: !361, size: 128, offset: 128)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !362, line: 8, size: 128, elements: !363)
!362 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!363 = !{!364, !368}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !361, file: !362, line: 9, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !367, line: 18, flags: DIFlagFwdDecl)
!367 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!368 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !361, file: !362, line: 10, baseType: !369, size: 64, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !367, line: 89, size: 1536, elements: !371)
!371 = !{!372, !373, !383, !391, !392, !410, !3082, !3084, !3096, !3097, !3098, !3099, !3100, !3106, !3107, !3108}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !370, file: !367, line: 91, baseType: !7, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !370, file: !367, line: 92, baseType: !374, size: 32, offset: 32)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !375, line: 277, baseType: !376)
!375 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !375, line: 277, size: 32, elements: !377)
!377 = !{!378}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !376, file: !375, line: 277, baseType: !379, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !375, line: 70, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !375, line: 65, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !380, file: !375, line: 66, baseType: !7, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !370, file: !367, line: 93, baseType: !384, size: 128, offset: 64)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !385, line: 38, size: 128, elements: !386)
!385 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!386 = !{!387, !389}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !384, file: !385, line: 39, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !384, file: !385, line: 39, baseType: !390, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !370, file: !367, line: 94, baseType: !369, size: 64, offset: 192)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !370, file: !367, line: 95, baseType: !393, size: 128, offset: 256)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !367, line: 47, size: 128, elements: !394)
!394 = !{!395, !407}
!395 = !DIDerivedType(tag: DW_TAG_member, scope: !393, file: !367, line: 48, baseType: !396, size: 64)
!396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !393, file: !367, line: 48, size: 64, elements: !397)
!397 = !{!398, !403}
!398 = !DIDerivedType(tag: DW_TAG_member, scope: !396, file: !367, line: 49, baseType: !399, size: 64)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !396, file: !367, line: 49, size: 64, elements: !400)
!400 = !{!401, !402}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !399, file: !367, line: 50, baseType: !179, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !399, file: !367, line: 50, baseType: !179, size: 32, offset: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !396, file: !367, line: 52, baseType: !404, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !148, line: 23, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !143, line: 31, baseType: !406)
!406 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !393, file: !367, line: 54, baseType: !408, size: 64, offset: 64)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !370, file: !367, line: 96, baseType: !411, size: 64, offset: 384)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !51, line: 610, size: 4224, elements: !413)
!413 = !{!414, !415, !416, !424, !431, !432, !580, !2794, !2795, !2796, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !3058, !3066, !3067, !3068, !3078, !3079, !3080, !3081}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !412, file: !51, line: 611, baseType: !303, size: 16)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !412, file: !51, line: 612, baseType: !144, size: 16, offset: 16)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !412, file: !51, line: 613, baseType: !417, size: 32, offset: 32)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !418, line: 23, baseType: !419)
!418 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !418, line: 21, size: 32, elements: !420)
!420 = !{!421}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !419, file: !418, line: 22, baseType: !422, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !150, line: 32, baseType: !423)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !295, line: 49, baseType: !7)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !412, file: !51, line: 614, baseType: !425, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !418, line: 28, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !418, line: 26, size: 32, elements: !427)
!427 = !{!428}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !426, file: !418, line: 27, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !150, line: 33, baseType: !430)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !295, line: 50, baseType: !7)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !412, file: !51, line: 615, baseType: !7, size: 32, offset: 96)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !412, file: !51, line: 622, baseType: !433, size: 64, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !435)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !51, line: 1864, size: 1536, align: 512, elements: !436)
!436 = !{!437, !441, !454, !458, !464, !468, !474, !478, !482, !486, !490, !491, !497, !501, !527, !556, !560, !566, !571, !575, !576}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !435, file: !51, line: 1865, baseType: !438, size: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DISubroutineType(types: !440)
!440 = !{!369, !411, !369, !7}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !435, file: !51, line: 1866, baseType: !442, size: 64, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DISubroutineType(types: !444)
!444 = !{!155, !369, !411, !445}
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !447, line: 10, size: 128, elements: !448)
!447 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!448 = !{!449, !453}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !446, file: !447, line: 11, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DISubroutineType(types: !452)
!452 = !{null, !169}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !446, file: !447, line: 12, baseType: !169, size: 64, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !435, file: !51, line: 1867, baseType: !455, size: 64, offset: 128)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = !DISubroutineType(types: !457)
!457 = !{!168, !411, !168}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !435, file: !51, line: 1868, baseType: !459, size: 64, offset: 192)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DISubroutineType(types: !461)
!461 = !{!462, !411, !168}
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !51, line: 581, flags: DIFlagFwdDecl)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !435, file: !51, line: 1870, baseType: !465, size: 64, offset: 256)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{!168, !369, !262, !168}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !435, file: !51, line: 1872, baseType: !469, size: 64, offset: 320)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DISubroutineType(types: !471)
!471 = !{!168, !411, !369, !303, !472}
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !150, line: 30, baseType: !473)
!473 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !435, file: !51, line: 1873, baseType: !475, size: 64, offset: 384)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DISubroutineType(types: !477)
!477 = !{!168, !369, !411, !369}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !435, file: !51, line: 1874, baseType: !479, size: 64, offset: 448)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DISubroutineType(types: !481)
!481 = !{!168, !411, !369}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !435, file: !51, line: 1875, baseType: !483, size: 64, offset: 512)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DISubroutineType(types: !485)
!485 = !{!168, !411, !369, !155}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !435, file: !51, line: 1876, baseType: !487, size: 64, offset: 576)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DISubroutineType(types: !489)
!489 = !{!168, !411, !369, !303}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !435, file: !51, line: 1877, baseType: !479, size: 64, offset: 640)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !435, file: !51, line: 1878, baseType: !492, size: 64, offset: 704)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!168, !411, !369, !303, !495}
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !150, line: 16, baseType: !496)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !150, line: 13, baseType: !179)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !435, file: !51, line: 1879, baseType: !498, size: 64, offset: 768)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!499 = !DISubroutineType(types: !500)
!500 = !{!168, !411, !369, !411, !369, !7}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !435, file: !51, line: 1881, baseType: !502, size: 64, offset: 832)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DISubroutineType(types: !504)
!504 = !{!168, !369, !505}
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !51, line: 219, size: 640, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !516, !524, !525, !526}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !506, file: !51, line: 220, baseType: !7, size: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !506, file: !51, line: 221, baseType: !303, size: 16, offset: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !506, file: !51, line: 222, baseType: !417, size: 32, offset: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !506, file: !51, line: 223, baseType: !425, size: 32, offset: 96)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !506, file: !51, line: 224, baseType: !513, size: 64, offset: 128)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !150, line: 46, baseType: !514)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !295, line: 88, baseType: !515)
!515 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !506, file: !51, line: 225, baseType: !517, size: 128, offset: 192)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !518, line: 13, size: 128, elements: !519)
!518 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!519 = !{!520, !523}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !517, file: !518, line: 14, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !518, line: 8, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !143, line: 30, baseType: !515)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !517, file: !518, line: 15, baseType: !297, size: 64, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !506, file: !51, line: 226, baseType: !517, size: 128, offset: 320)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !506, file: !51, line: 227, baseType: !517, size: 128, offset: 448)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !506, file: !51, line: 234, baseType: !339, size: 64, offset: 576)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !435, file: !51, line: 1882, baseType: !528, size: 64, offset: 896)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DISubroutineType(types: !530)
!530 = !{!168, !531, !533, !179, !7}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !535, line: 22, size: 1152, elements: !536)
!535 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!536 = !{!537, !538, !539, !540, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !534, file: !535, line: 23, baseType: !179, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !534, file: !535, line: 24, baseType: !303, size: 16, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !534, file: !535, line: 25, baseType: !7, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !534, file: !535, line: 26, baseType: !541, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !150, line: 104, baseType: !179)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !534, file: !535, line: 27, baseType: !404, size: 64, offset: 128)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !534, file: !535, line: 28, baseType: !404, size: 64, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !534, file: !535, line: 37, baseType: !404, size: 64, offset: 256)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !534, file: !535, line: 38, baseType: !495, size: 32, offset: 320)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !534, file: !535, line: 39, baseType: !495, size: 32, offset: 352)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !534, file: !535, line: 40, baseType: !417, size: 32, offset: 384)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !534, file: !535, line: 41, baseType: !425, size: 32, offset: 416)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !534, file: !535, line: 42, baseType: !513, size: 64, offset: 448)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !534, file: !535, line: 43, baseType: !517, size: 128, offset: 512)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !534, file: !535, line: 44, baseType: !517, size: 128, offset: 640)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !534, file: !535, line: 45, baseType: !517, size: 128, offset: 768)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !534, file: !535, line: 46, baseType: !517, size: 128, offset: 896)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !534, file: !535, line: 47, baseType: !404, size: 64, offset: 1024)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !534, file: !535, line: 48, baseType: !404, size: 64, offset: 1088)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !435, file: !51, line: 1883, baseType: !557, size: 64, offset: 960)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DISubroutineType(types: !559)
!559 = !{!293, !369, !262, !308}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !435, file: !51, line: 1884, baseType: !561, size: 64, offset: 1024)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DISubroutineType(types: !563)
!563 = !{!168, !411, !564, !404, !404}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !51, line: 50, flags: DIFlagFwdDecl)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !435, file: !51, line: 1886, baseType: !567, size: 64, offset: 1088)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{!168, !411, !570, !168}
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !435, file: !51, line: 1887, baseType: !572, size: 64, offset: 1152)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DISubroutineType(types: !574)
!574 = !{!168, !411, !369, !339, !7, !303}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !435, file: !51, line: 1890, baseType: !487, size: 64, offset: 1216)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !435, file: !51, line: 1891, baseType: !577, size: 64, offset: 1280)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!168, !411, !462, !168}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !412, file: !51, line: 623, baseType: !581, size: 64, offset: 192)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !51, line: 1416, size: 9472, elements: !583)
!583 = !{!584, !585, !586, !587, !588, !589, !635, !2401, !2483, !2566, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2582, !2586, !2587, !2590, !2591, !2594, !2595, !2596, !2637, !2664, !2665, !2666, !2667, !2668, !2669, !2672, !2674, !2681, !2682, !2684, !2685, !2686, !2745, !2746, !2761, !2762, !2763, !2764, !2765, !2768, !2769, !2770, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !582, file: !51, line: 1417, baseType: !208, size: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !582, file: !51, line: 1418, baseType: !495, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !582, file: !51, line: 1419, baseType: !161, size: 8, offset: 160)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !582, file: !51, line: 1420, baseType: !311, size: 64, offset: 192)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !582, file: !51, line: 1421, baseType: !513, size: 64, offset: 256)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !582, file: !51, line: 1422, baseType: !590, size: 64, offset: 320)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !51, line: 2228, size: 576, elements: !592)
!592 = !{!593, !594, !595, !601, !605, !609, !613, !614, !615, !625, !628, !629, !630, !632, !633, !634}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !591, file: !51, line: 2229, baseType: !155, size: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !591, file: !51, line: 2230, baseType: !168, size: 32, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !591, file: !51, line: 2238, baseType: !596, size: 64, offset: 128)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DISubroutineType(types: !598)
!598 = !{!168, !599}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !51, line: 69, flags: DIFlagFwdDecl)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !591, file: !51, line: 2239, baseType: !602, size: 64, offset: 192)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !604)
!604 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !51, line: 70, flags: DIFlagFwdDecl)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !591, file: !51, line: 2240, baseType: !606, size: 64, offset: 256)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DISubroutineType(types: !608)
!608 = !{!369, !590, !168, !155, !169}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !591, file: !51, line: 2242, baseType: !610, size: 64, offset: 320)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DISubroutineType(types: !612)
!612 = !{null, !581}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !591, file: !51, line: 2243, baseType: !139, size: 64, offset: 384)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !591, file: !51, line: 2244, baseType: !590, size: 64, offset: 448)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !591, file: !51, line: 2245, baseType: !616, size: 64, offset: 512)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !150, line: 182, size: 64, elements: !617)
!617 = !{!618}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !616, file: !150, line: 183, baseType: !619, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !150, line: 186, size: 128, elements: !621)
!621 = !{!622, !623}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !620, file: !150, line: 187, baseType: !619, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !620, file: !150, line: 187, baseType: !624, size: 64, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !591, file: !51, line: 2247, baseType: !626, offset: 576)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !627, line: 187, elements: !235)
!627 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!628 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !591, file: !51, line: 2248, baseType: !626, offset: 576)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !591, file: !51, line: 2249, baseType: !626, offset: 576)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !591, file: !51, line: 2250, baseType: !631, offset: 576)
!631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, elements: !263)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !591, file: !51, line: 2252, baseType: !626, offset: 576)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !591, file: !51, line: 2253, baseType: !626, offset: 576)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !591, file: !51, line: 2254, baseType: !626, offset: 576)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !582, file: !51, line: 1423, baseType: !636, size: 64, offset: 384)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !638)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !51, line: 1935, size: 1472, elements: !639)
!639 = !{!640, !644, !648, !649, !653, !659, !663, !664, !665, !669, !673, !674, !675, !676, !682, !687, !688, !695, !696, !697, !698, !2385, !2400}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !638, file: !51, line: 1936, baseType: !641, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DISubroutineType(types: !643)
!643 = !{!411, !581}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !638, file: !51, line: 1937, baseType: !645, size: 64, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{null, !411}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !638, file: !51, line: 1938, baseType: !645, size: 64, offset: 128)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !638, file: !51, line: 1940, baseType: !650, size: 64, offset: 192)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DISubroutineType(types: !652)
!652 = !{null, !411, !168}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !638, file: !51, line: 1941, baseType: !654, size: 64, offset: 256)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DISubroutineType(types: !656)
!656 = !{!168, !411, !657}
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !21, line: 40, flags: DIFlagFwdDecl)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !638, file: !51, line: 1942, baseType: !660, size: 64, offset: 320)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DISubroutineType(types: !662)
!662 = !{!168, !411}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !638, file: !51, line: 1943, baseType: !645, size: 64, offset: 384)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !638, file: !51, line: 1944, baseType: !610, size: 64, offset: 448)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !638, file: !51, line: 1945, baseType: !666, size: 64, offset: 512)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!168, !581, !168}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !638, file: !51, line: 1946, baseType: !670, size: 64, offset: 576)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{!168, !581}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !638, file: !51, line: 1947, baseType: !670, size: 64, offset: 640)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !638, file: !51, line: 1948, baseType: !670, size: 64, offset: 704)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !638, file: !51, line: 1949, baseType: !670, size: 64, offset: 768)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !638, file: !51, line: 1950, baseType: !677, size: 64, offset: 832)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!168, !369, !680}
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !51, line: 57, flags: DIFlagFwdDecl)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !638, file: !51, line: 1951, baseType: !683, size: 64, offset: 896)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DISubroutineType(types: !685)
!685 = !{!168, !581, !686, !262}
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !638, file: !51, line: 1952, baseType: !610, size: 64, offset: 960)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !638, file: !51, line: 1954, baseType: !689, size: 64, offset: 1024)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DISubroutineType(types: !691)
!691 = !{!168, !692, !369}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !694, line: 539, flags: DIFlagFwdDecl)
!694 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!695 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !638, file: !51, line: 1955, baseType: !689, size: 64, offset: 1088)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !638, file: !51, line: 1956, baseType: !689, size: 64, offset: 1152)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !638, file: !51, line: 1957, baseType: !689, size: 64, offset: 1216)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !638, file: !51, line: 1963, baseType: !699, size: 64, offset: 1280)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DISubroutineType(types: !701)
!701 = !{!168, !581, !702, !149}
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !704, line: 68, size: 512, align: 128, elements: !705)
!704 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!705 = !{!706, !707, !2377, !2384}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !703, file: !704, line: 69, baseType: !311, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, scope: !703, file: !704, line: 77, baseType: !708, size: 320, offset: 64)
!708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !703, file: !704, line: 77, size: 320, elements: !709)
!709 = !{!710, !895, !900, !928, !936, !942, !2308, !2376}
!710 = !DIDerivedType(tag: DW_TAG_member, scope: !708, file: !704, line: 78, baseType: !711, size: 320)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !708, file: !704, line: 78, size: 320, elements: !712)
!712 = !{!713, !714, !893, !894}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !711, file: !704, line: 84, baseType: !208, size: 128)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !711, file: !704, line: 86, baseType: !715, size: 64, offset: 128)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !51, line: 451, size: 1216, align: 64, elements: !717)
!717 = !{!718, !719, !726, !727, !732, !747, !763, !764, !765, !766, !886, !887, !890, !891, !892}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !716, file: !51, line: 452, baseType: !411, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !716, file: !51, line: 453, baseType: !720, size: 128, offset: 64)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !721, line: 292, size: 128, elements: !722)
!721 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!722 = !{!723, !724, !725}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !720, file: !721, line: 293, baseType: !221)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !720, file: !721, line: 295, baseType: !149, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !720, file: !721, line: 296, baseType: !169, size: 64, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !716, file: !51, line: 454, baseType: !149, size: 32, offset: 192)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !716, file: !51, line: 455, baseType: !728, size: 32, offset: 224)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !150, line: 168, baseType: !729)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 166, size: 32, elements: !730)
!730 = !{!731}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !729, file: !150, line: 167, baseType: !168, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !716, file: !51, line: 460, baseType: !733, size: 128, offset: 256)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !734, line: 125, size: 128, elements: !735)
!734 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!735 = !{!736, !746}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !733, file: !734, line: 126, baseType: !737, size: 64)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !734, line: 31, size: 64, elements: !738)
!738 = !{!739}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !737, file: !734, line: 32, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !734, line: 24, size: 192, align: 64, elements: !742)
!742 = !{!743, !744, !745}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !741, file: !734, line: 25, baseType: !311, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !741, file: !734, line: 26, baseType: !740, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !741, file: !734, line: 27, baseType: !740, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !733, file: !734, line: 127, baseType: !740, size: 64, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !716, file: !51, line: 461, baseType: !748, size: 256, offset: 384)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !749, line: 35, size: 256, elements: !750)
!749 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!750 = !{!751, !759, !760, !762}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !748, file: !749, line: 36, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !753, line: 13, baseType: !754)
!753 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !150, line: 175, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 173, size: 64, elements: !756)
!756 = !{!757}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !755, file: !150, line: 174, baseType: !758, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !148, line: 22, baseType: !522)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !748, file: !749, line: 42, baseType: !752, size: 64, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !748, file: !749, line: 46, baseType: !761, offset: 128)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !222, line: 29, baseType: !229)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !748, file: !749, line: 47, baseType: !208, size: 128, offset: 128)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !716, file: !51, line: 462, baseType: !311, size: 64, offset: 640)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !716, file: !51, line: 463, baseType: !311, size: 64, offset: 704)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !716, file: !51, line: 464, baseType: !311, size: 64, offset: 768)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !716, file: !51, line: 465, baseType: !767, size: 64, offset: 832)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !51, line: 367, size: 1408, elements: !770)
!770 = !{!771, !775, !779, !783, !787, !791, !797, !803, !807, !812, !816, !820, !824, !850, !854, !860, !861, !862, !866, !871, !875, !882}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !769, file: !51, line: 368, baseType: !772, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DISubroutineType(types: !774)
!774 = !{!168, !702, !657}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !769, file: !51, line: 369, baseType: !776, size: 64, offset: 64)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!168, !339, !702}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !769, file: !51, line: 372, baseType: !780, size: 64, offset: 128)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!168, !715, !657}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !769, file: !51, line: 375, baseType: !784, size: 64, offset: 192)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DISubroutineType(types: !786)
!786 = !{!168, !702}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !769, file: !51, line: 381, baseType: !788, size: 64, offset: 256)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{!168, !339, !715, !211, !7}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !769, file: !51, line: 383, baseType: !792, size: 64, offset: 320)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{null, !795}
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !51, line: 290, flags: DIFlagFwdDecl)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !769, file: !51, line: 385, baseType: !798, size: 64, offset: 384)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DISubroutineType(types: !800)
!800 = !{!168, !339, !715, !513, !7, !7, !801, !802}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !769, file: !51, line: 388, baseType: !804, size: 64, offset: 448)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!168, !339, !715, !513, !7, !7, !702, !169}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !769, file: !51, line: 393, baseType: !808, size: 64, offset: 512)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{!811, !715, !811}
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !150, line: 125, baseType: !404)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !769, file: !51, line: 394, baseType: !813, size: 64, offset: 576)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{null, !702, !7, !7}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !769, file: !51, line: 395, baseType: !817, size: 64, offset: 640)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DISubroutineType(types: !819)
!819 = !{!168, !702, !149}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !769, file: !51, line: 396, baseType: !821, size: 64, offset: 704)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DISubroutineType(types: !823)
!823 = !{null, !702}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !769, file: !51, line: 397, baseType: !825, size: 64, offset: 768)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!293, !828, !848}
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !51, line: 320, size: 384, elements: !830)
!830 = !{!831, !832, !833, !837, !838, !839, !840, !841}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !829, file: !51, line: 321, baseType: !339, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !829, file: !51, line: 326, baseType: !513, size: 64, offset: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !829, file: !51, line: 327, baseType: !834, size: 64, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DISubroutineType(types: !836)
!836 = !{null, !828, !297, !297}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !829, file: !51, line: 328, baseType: !169, size: 64, offset: 192)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !829, file: !51, line: 329, baseType: !168, size: 32, offset: 256)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !829, file: !51, line: 330, baseType: !147, size: 16, offset: 288)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !829, file: !51, line: 331, baseType: !147, size: 16, offset: 304)
!841 = !DIDerivedType(tag: DW_TAG_member, scope: !829, file: !51, line: 332, baseType: !842, size: 64, offset: 320)
!842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !829, file: !51, line: 332, size: 64, elements: !843)
!843 = !{!844, !845}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !842, file: !51, line: 333, baseType: !7, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !842, file: !51, line: 334, baseType: !846, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !51, line: 334, flags: DIFlagFwdDecl)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !51, line: 64, flags: DIFlagFwdDecl)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !769, file: !51, line: 402, baseType: !851, size: 64, offset: 832)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{!168, !715, !702, !702, !13}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !769, file: !51, line: 404, baseType: !855, size: 64, offset: 896)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!472, !702, !858}
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !859, line: 305, baseType: !7)
!859 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!860 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !769, file: !51, line: 405, baseType: !821, size: 64, offset: 960)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !769, file: !51, line: 406, baseType: !784, size: 64, offset: 1024)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !769, file: !51, line: 407, baseType: !863, size: 64, offset: 1088)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!168, !702, !311, !311}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !769, file: !51, line: 409, baseType: !867, size: 64, offset: 1152)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{null, !702, !870, !870}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !769, file: !51, line: 410, baseType: !872, size: 64, offset: 1216)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{!168, !715, !702}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !769, file: !51, line: 413, baseType: !876, size: 64, offset: 1280)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DISubroutineType(types: !878)
!878 = !{!168, !879, !339, !881}
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !51, line: 61, flags: DIFlagFwdDecl)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !769, file: !51, line: 415, baseType: !883, size: 64, offset: 1344)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{null, !339}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !716, file: !51, line: 466, baseType: !311, size: 64, offset: 896)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !716, file: !51, line: 467, baseType: !888, size: 32, offset: 960)
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !889, line: 8, baseType: !179)
!889 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!890 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !716, file: !51, line: 468, baseType: !221, offset: 992)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !716, file: !51, line: 469, baseType: !208, size: 128, offset: 1024)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !716, file: !51, line: 470, baseType: !169, size: 64, offset: 1152)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !711, file: !704, line: 87, baseType: !311, size: 64, offset: 192)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !711, file: !704, line: 94, baseType: !311, size: 64, offset: 256)
!895 = !DIDerivedType(tag: DW_TAG_member, scope: !708, file: !704, line: 96, baseType: !896, size: 64)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !708, file: !704, line: 96, size: 64, elements: !897)
!897 = !{!898}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !896, file: !704, line: 101, baseType: !899, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !150, line: 143, baseType: !404)
!900 = !DIDerivedType(tag: DW_TAG_member, scope: !708, file: !704, line: 103, baseType: !901, size: 320)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !708, file: !704, line: 103, size: 320, elements: !902)
!902 = !{!903, !913, !916, !917}
!903 = !DIDerivedType(tag: DW_TAG_member, scope: !901, file: !704, line: 104, baseType: !904, size: 128)
!904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !901, file: !704, line: 104, size: 128, elements: !905)
!905 = !{!906, !907}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !904, file: !704, line: 105, baseType: !208, size: 128)
!907 = !DIDerivedType(tag: DW_TAG_member, scope: !904, file: !704, line: 106, baseType: !908, size: 128)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !904, file: !704, line: 106, size: 128, elements: !909)
!909 = !{!910, !911, !912}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !908, file: !704, line: 107, baseType: !702, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !908, file: !704, line: 109, baseType: !168, size: 32, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !908, file: !704, line: 110, baseType: !168, size: 32, offset: 96)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !901, file: !704, line: 117, baseType: !914, size: 64, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !704, line: 117, flags: DIFlagFwdDecl)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !901, file: !704, line: 119, baseType: !169, size: 64, offset: 192)
!917 = !DIDerivedType(tag: DW_TAG_member, scope: !901, file: !704, line: 120, baseType: !918, size: 64, offset: 256)
!918 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !901, file: !704, line: 120, size: 64, elements: !919)
!919 = !{!920, !921, !922}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !918, file: !704, line: 121, baseType: !169, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !918, file: !704, line: 122, baseType: !311, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, scope: !918, file: !704, line: 123, baseType: !923, size: 32)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !918, file: !704, line: 123, size: 32, elements: !924)
!924 = !{!925, !926, !927}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !923, file: !704, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !923, file: !704, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !923, file: !704, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!928 = !DIDerivedType(tag: DW_TAG_member, scope: !708, file: !704, line: 130, baseType: !929, size: 192)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !708, file: !704, line: 130, size: 192, elements: !930)
!930 = !{!931, !932, !933, !934, !935}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !929, file: !704, line: 131, baseType: !311, size: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !929, file: !704, line: 134, baseType: !161, size: 8, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !929, file: !704, line: 135, baseType: !161, size: 8, offset: 72)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !929, file: !704, line: 136, baseType: !728, size: 32, offset: 96)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !929, file: !704, line: 137, baseType: !7, size: 32, offset: 128)
!936 = !DIDerivedType(tag: DW_TAG_member, scope: !708, file: !704, line: 139, baseType: !937, size: 256)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !708, file: !704, line: 139, size: 256, elements: !938)
!938 = !{!939, !940, !941}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !937, file: !704, line: 140, baseType: !311, size: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !937, file: !704, line: 141, baseType: !728, size: 32, offset: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !937, file: !704, line: 143, baseType: !208, size: 128, offset: 128)
!942 = !DIDerivedType(tag: DW_TAG_member, scope: !708, file: !704, line: 145, baseType: !943, size: 256)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !708, file: !704, line: 145, size: 256, elements: !944)
!944 = !{!945, !946, !948, !949, !2307}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !943, file: !704, line: 146, baseType: !311, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !943, file: !704, line: 147, baseType: !947, size: 64, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !694, line: 509, baseType: !702)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !943, file: !704, line: 148, baseType: !311, size: 64, offset: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, scope: !943, file: !704, line: 149, baseType: !950, size: 64, offset: 192)
!950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !943, file: !704, line: 149, size: 64, elements: !951)
!951 = !{!952, !2306}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !950, file: !704, line: 150, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !704, line: 388, size: 7296, elements: !955)
!955 = !{!956, !2302}
!956 = !DIDerivedType(tag: DW_TAG_member, scope: !954, file: !704, line: 389, baseType: !957, size: 7296)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !954, file: !704, line: 389, size: 7296, elements: !958)
!958 = !{!959, !1077, !1078, !1079, !1083, !1084, !1085, !1086, !1087, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1128, !1136, !1139, !1185, !1186, !2286, !2287, !2290, !2291, !2292, !2295, !2296, !2297, !2300, !2301}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !957, file: !704, line: 390, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !704, line: 305, size: 1472, elements: !962)
!962 = !{!963, !964, !965, !966, !967, !968, !969, !970, !977, !978, !983, !984, !987, !1071, !1072, !1073, !1074, !1075}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !961, file: !704, line: 308, baseType: !311, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !961, file: !704, line: 309, baseType: !311, size: 64, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !961, file: !704, line: 313, baseType: !960, size: 64, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !961, file: !704, line: 313, baseType: !960, size: 64, offset: 192)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !961, file: !704, line: 315, baseType: !741, size: 192, align: 64, offset: 256)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !961, file: !704, line: 323, baseType: !311, size: 64, offset: 448)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !961, file: !704, line: 327, baseType: !953, size: 64, offset: 512)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !961, file: !704, line: 333, baseType: !971, size: 64, offset: 576)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !694, line: 284, baseType: !972)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !694, line: 284, size: 64, elements: !973)
!973 = !{!974}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !972, file: !694, line: 284, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !976, line: 19, baseType: !311)
!976 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!977 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !961, file: !704, line: 334, baseType: !311, size: 64, offset: 640)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !961, file: !704, line: 343, baseType: !979, size: 256, offset: 704)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !961, file: !704, line: 340, size: 256, elements: !980)
!980 = !{!981, !982}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !979, file: !704, line: 341, baseType: !741, size: 192, align: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !979, file: !704, line: 342, baseType: !311, size: 64, offset: 192)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !961, file: !704, line: 351, baseType: !208, size: 128, offset: 960)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !961, file: !704, line: 353, baseType: !985, size: 64, offset: 1088)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !704, line: 353, flags: DIFlagFwdDecl)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !961, file: !704, line: 356, baseType: !988, size: 64, offset: 1152)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !21, line: 557, size: 832, elements: !991)
!991 = !{!992, !996, !997, !1001, !1005, !1045, !1049, !1053, !1057, !1058, !1059, !1063, !1067}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !990, file: !21, line: 558, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{null, !960}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !990, file: !21, line: 559, baseType: !993, size: 64, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !990, file: !21, line: 560, baseType: !998, size: 64, offset: 128)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!168, !960, !311}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !990, file: !21, line: 561, baseType: !1002, size: 64, offset: 192)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!168, !960}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !990, file: !21, line: 562, baseType: !1006, size: 64, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!1009, !1010}
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !704, line: 682, baseType: !7)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !21, line: 508, size: 768, elements: !1012)
!1012 = !{!1013, !1014, !1015, !1016, !1017, !1018, !1025, !1032, !1038, !1039, !1040, !1042, !1044}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1011, file: !21, line: 509, baseType: !960, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1011, file: !21, line: 510, baseType: !7, size: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1011, file: !21, line: 511, baseType: !149, size: 32, offset: 96)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1011, file: !21, line: 512, baseType: !311, size: 64, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1011, file: !21, line: 513, baseType: !311, size: 64, offset: 192)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1011, file: !21, line: 514, baseType: !1019, size: 64, offset: 256)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !694, line: 385, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !694, line: 385, size: 64, elements: !1022)
!1022 = !{!1023}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1021, file: !694, line: 385, baseType: !1024, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !976, line: 15, baseType: !311)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1011, file: !21, line: 516, baseType: !1026, size: 64, offset: 320)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !694, line: 359, baseType: !1028)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !694, line: 359, size: 64, elements: !1029)
!1029 = !{!1030}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1028, file: !694, line: 359, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !976, line: 16, baseType: !311)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1011, file: !21, line: 519, baseType: !1033, size: 64, offset: 384)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !976, line: 21, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !976, line: 21, size: 64, elements: !1035)
!1035 = !{!1036}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1034, file: !976, line: 21, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !976, line: 14, baseType: !311)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1011, file: !21, line: 521, baseType: !702, size: 64, offset: 448)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1011, file: !21, line: 522, baseType: !702, size: 64, offset: 512)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1011, file: !21, line: 528, baseType: !1041, size: 64, offset: 576)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1011, file: !21, line: 532, baseType: !1043, size: 64, offset: 640)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1011, file: !21, line: 536, baseType: !947, size: 64, offset: 704)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !990, file: !21, line: 563, baseType: !1046, size: 64, offset: 320)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!1009, !1010, !20}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !990, file: !21, line: 565, baseType: !1050, size: 64, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{null, !1010, !311, !311}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !990, file: !21, line: 567, baseType: !1054, size: 64, offset: 448)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!311, !960}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !990, file: !21, line: 571, baseType: !1006, size: 64, offset: 512)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !990, file: !21, line: 574, baseType: !1006, size: 64, offset: 576)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !990, file: !21, line: 579, baseType: !1060, size: 64, offset: 640)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!168, !960, !311, !169, !168, !168}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !990, file: !21, line: 585, baseType: !1064, size: 64, offset: 704)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!155, !960}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !990, file: !21, line: 615, baseType: !1068, size: 64, offset: 768)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!702, !960, !311}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !961, file: !704, line: 359, baseType: !311, size: 64, offset: 1216)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !961, file: !704, line: 361, baseType: !339, size: 64, offset: 1280)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !961, file: !704, line: 362, baseType: !169, size: 64, offset: 1344)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !961, file: !704, line: 365, baseType: !752, size: 64, offset: 1408)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !961, file: !704, line: 373, baseType: !1076, offset: 1472)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !704, line: 296, elements: !235)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !957, file: !704, line: 391, baseType: !737, size: 64, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !957, file: !704, line: 392, baseType: !404, size: 64, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !957, file: !704, line: 394, baseType: !1080, size: 64, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!311, !339, !311, !311, !311, !311}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !957, file: !704, line: 398, baseType: !311, size: 64, offset: 256)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !957, file: !704, line: 399, baseType: !311, size: 64, offset: 320)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !957, file: !704, line: 405, baseType: !311, size: 64, offset: 384)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !957, file: !704, line: 406, baseType: !311, size: 64, offset: 448)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !957, file: !704, line: 407, baseType: !1088, size: 64, offset: 512)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !694, line: 286, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !694, line: 286, size: 64, elements: !1091)
!1091 = !{!1092}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1090, file: !694, line: 286, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !976, line: 18, baseType: !311)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !957, file: !704, line: 416, baseType: !728, size: 32, offset: 576)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !957, file: !704, line: 428, baseType: !728, size: 32, offset: 608)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !957, file: !704, line: 437, baseType: !728, size: 32, offset: 640)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !957, file: !704, line: 447, baseType: !728, size: 32, offset: 672)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !957, file: !704, line: 450, baseType: !752, size: 64, offset: 704)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !957, file: !704, line: 452, baseType: !168, size: 32, offset: 768)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !957, file: !704, line: 454, baseType: !221, offset: 800)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !957, file: !704, line: 457, baseType: !748, size: 256, offset: 832)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !957, file: !704, line: 459, baseType: !208, size: 128, offset: 1088)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !957, file: !704, line: 466, baseType: !311, size: 64, offset: 1216)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !957, file: !704, line: 467, baseType: !311, size: 64, offset: 1280)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !957, file: !704, line: 469, baseType: !311, size: 64, offset: 1344)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !957, file: !704, line: 470, baseType: !311, size: 64, offset: 1408)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !957, file: !704, line: 471, baseType: !754, size: 64, offset: 1472)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !957, file: !704, line: 472, baseType: !311, size: 64, offset: 1536)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !957, file: !704, line: 473, baseType: !311, size: 64, offset: 1600)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !957, file: !704, line: 474, baseType: !311, size: 64, offset: 1664)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !957, file: !704, line: 475, baseType: !311, size: 64, offset: 1728)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !957, file: !704, line: 477, baseType: !221, offset: 1792)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !957, file: !704, line: 478, baseType: !311, size: 64, offset: 1792)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !957, file: !704, line: 478, baseType: !311, size: 64, offset: 1856)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !957, file: !704, line: 478, baseType: !311, size: 64, offset: 1920)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !957, file: !704, line: 478, baseType: !311, size: 64, offset: 1984)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !957, file: !704, line: 479, baseType: !311, size: 64, offset: 2048)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !957, file: !704, line: 479, baseType: !311, size: 64, offset: 2112)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !957, file: !704, line: 479, baseType: !311, size: 64, offset: 2176)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !957, file: !704, line: 480, baseType: !311, size: 64, offset: 2240)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !957, file: !704, line: 480, baseType: !311, size: 64, offset: 2304)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !957, file: !704, line: 480, baseType: !311, size: 64, offset: 2368)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !957, file: !704, line: 480, baseType: !311, size: 64, offset: 2432)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !957, file: !704, line: 482, baseType: !1125, size: 2816, offset: 2496)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 2816, elements: !1126)
!1126 = !{!1127}
!1127 = !DISubrange(count: 44)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !957, file: !704, line: 488, baseType: !1129, size: 256, offset: 5312)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1130, line: 60, size: 256, elements: !1131)
!1130 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1131 = !{!1132}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1129, file: !1130, line: 61, baseType: !1133, size: 256)
!1133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !752, size: 256, elements: !1134)
!1134 = !{!1135}
!1135 = !DISubrange(count: 4)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !957, file: !704, line: 490, baseType: !1137, size: 64, offset: 5568)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !704, line: 490, flags: DIFlagFwdDecl)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !957, file: !704, line: 493, baseType: !1140, size: 896, offset: 5632)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1141, line: 53, baseType: !1142)
!1141 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1141, line: 13, size: 896, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1150, !1151, !1158, !1159, !1179, !1180, !1181}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1142, file: !1141, line: 18, baseType: !404, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1142, file: !1141, line: 28, baseType: !754, size: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1142, file: !1141, line: 31, baseType: !748, size: 256, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1142, file: !1141, line: 32, baseType: !1148, size: 64, offset: 384)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1141, line: 32, flags: DIFlagFwdDecl)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1142, file: !1141, line: 37, baseType: !144, size: 16, offset: 448)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1142, file: !1141, line: 40, baseType: !1152, size: 192, offset: 512)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1153, line: 53, size: 192, elements: !1154)
!1153 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1154 = !{!1155, !1156, !1157}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1152, file: !1153, line: 54, baseType: !752, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1152, file: !1153, line: 55, baseType: !221, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1152, file: !1153, line: 59, baseType: !208, size: 128, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1142, file: !1141, line: 41, baseType: !169, size: 64, offset: 704)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1142, file: !1141, line: 42, baseType: !1160, size: 64, offset: 768)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1163, line: 13, size: 896, elements: !1164)
!1163 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1164 = !{!1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1162, file: !1163, line: 14, baseType: !169, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1162, file: !1163, line: 15, baseType: !311, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1162, file: !1163, line: 17, baseType: !311, size: 64, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1162, file: !1163, line: 17, baseType: !311, size: 64, offset: 192)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1162, file: !1163, line: 19, baseType: !297, size: 64, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1162, file: !1163, line: 21, baseType: !297, size: 64, offset: 320)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1162, file: !1163, line: 22, baseType: !297, size: 64, offset: 384)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1162, file: !1163, line: 23, baseType: !297, size: 64, offset: 448)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1162, file: !1163, line: 24, baseType: !297, size: 64, offset: 512)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1162, file: !1163, line: 25, baseType: !297, size: 64, offset: 576)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1162, file: !1163, line: 26, baseType: !297, size: 64, offset: 640)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1162, file: !1163, line: 27, baseType: !297, size: 64, offset: 704)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1162, file: !1163, line: 28, baseType: !297, size: 64, offset: 768)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1162, file: !1163, line: 29, baseType: !297, size: 64, offset: 832)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1142, file: !1141, line: 44, baseType: !728, size: 32, offset: 832)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1142, file: !1141, line: 50, baseType: !147, size: 16, offset: 864)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1142, file: !1141, line: 51, baseType: !1182, size: 16, offset: 880)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !148, line: 18, baseType: !1183)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !143, line: 23, baseType: !1184)
!1184 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !957, file: !704, line: 495, baseType: !311, size: 64, offset: 6528)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !957, file: !704, line: 497, baseType: !1187, size: 64, offset: 6592)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !704, line: 381, size: 384, elements: !1189)
!1189 = !{!1190, !1191, !2285}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1188, file: !704, line: 382, baseType: !728, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1188, file: !704, line: 383, baseType: !1192, size: 128, offset: 64)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !704, line: 376, size: 128, elements: !1193)
!1193 = !{!1194, !2283}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1192, file: !704, line: 377, baseType: !1195, size: 64)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1197, line: 640, size: 48640, elements: !1198)
!1197 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1198 = !{!1199, !1205, !1207, !1208, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1225, !1243, !1254, !1337, !1338, !1339, !1350, !1351, !1353, !1354, !1355, !1356, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1435, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1473, !1475, !1476, !1477, !1489, !1490, !1491, !1492, !1493, !1494, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1518, !1523, !1705, !1706, !1707, !1708, !1709, !1712, !1715, !1718, !1721, !1724, !1825, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1871, !1872, !1873, !1874, !1875, !1880, !1881, !1882, !1885, !1886, !1889, !1892, !1895, !1898, !1941, !1944, !1945, !2024, !2025, !2028, !2029, !2032, !2033, !2034, !2038, !2039, !2040, !2053, !2054, !2055, !2065, !2070, !2073, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1196, file: !1197, line: 646, baseType: !1200, size: 128)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1201, line: 56, size: 128, elements: !1202)
!1201 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1202 = !{!1203, !1204}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1200, file: !1201, line: 57, baseType: !311, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1200, file: !1201, line: 58, baseType: !179, size: 32, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1196, file: !1197, line: 649, baseType: !1206, size: 64, offset: 128)
!1206 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !297)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1196, file: !1197, line: 657, baseType: !169, size: 64, offset: 192)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1196, file: !1197, line: 658, baseType: !1209, size: 32, offset: 256)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1210, line: 113, baseType: !1211)
!1210 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1210, line: 111, size: 32, elements: !1212)
!1212 = !{!1213}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1211, file: !1210, line: 112, baseType: !728, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1196, file: !1197, line: 660, baseType: !7, size: 32, offset: 288)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1196, file: !1197, line: 661, baseType: !7, size: 32, offset: 320)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1196, file: !1197, line: 684, baseType: !168, size: 32, offset: 352)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1196, file: !1197, line: 686, baseType: !168, size: 32, offset: 384)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1196, file: !1197, line: 687, baseType: !168, size: 32, offset: 416)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1196, file: !1197, line: 688, baseType: !168, size: 32, offset: 448)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1196, file: !1197, line: 689, baseType: !7, size: 32, offset: 480)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1196, file: !1197, line: 691, baseType: !1222, size: 64, offset: 512)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1197, line: 691, flags: DIFlagFwdDecl)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1196, file: !1197, line: 692, baseType: !1226, size: 832, offset: 576)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1197, line: 451, size: 832, elements: !1227)
!1227 = !{!1228, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1226, file: !1197, line: 453, baseType: !1229, size: 128)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1197, line: 325, size: 128, elements: !1230)
!1230 = !{!1231, !1232}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1229, file: !1197, line: 326, baseType: !311, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1229, file: !1197, line: 327, baseType: !179, size: 32, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1226, file: !1197, line: 454, baseType: !741, size: 192, align: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1226, file: !1197, line: 455, baseType: !208, size: 128, offset: 320)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1226, file: !1197, line: 456, baseType: !7, size: 32, offset: 448)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1226, file: !1197, line: 458, baseType: !404, size: 64, offset: 512)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1226, file: !1197, line: 459, baseType: !404, size: 64, offset: 576)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1226, file: !1197, line: 460, baseType: !404, size: 64, offset: 640)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1226, file: !1197, line: 461, baseType: !404, size: 64, offset: 704)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1226, file: !1197, line: 463, baseType: !404, size: 64, offset: 768)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1226, file: !1197, line: 465, baseType: !1242, offset: 832)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1197, line: 415, elements: !235)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1196, file: !1197, line: 693, baseType: !1244, size: 384, offset: 1408)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1197, line: 489, size: 384, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249, !1250, !1251, !1252}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1244, file: !1197, line: 490, baseType: !208, size: 128)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1244, file: !1197, line: 491, baseType: !311, size: 64, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1244, file: !1197, line: 492, baseType: !311, size: 64, offset: 192)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1244, file: !1197, line: 493, baseType: !7, size: 32, offset: 256)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1244, file: !1197, line: 494, baseType: !144, size: 16, offset: 288)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1244, file: !1197, line: 495, baseType: !144, size: 16, offset: 304)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1244, file: !1197, line: 497, baseType: !1253, size: 64, offset: 320)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1196, file: !1197, line: 697, baseType: !1255, size: 1792, offset: 1792)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1197, line: 507, size: 1792, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1334, !1335}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1255, file: !1197, line: 508, baseType: !741, size: 192, align: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1255, file: !1197, line: 515, baseType: !404, size: 64, offset: 192)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1255, file: !1197, line: 516, baseType: !404, size: 64, offset: 256)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1255, file: !1197, line: 517, baseType: !404, size: 64, offset: 320)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1255, file: !1197, line: 518, baseType: !404, size: 64, offset: 384)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1255, file: !1197, line: 519, baseType: !404, size: 64, offset: 448)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1255, file: !1197, line: 526, baseType: !758, size: 64, offset: 512)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1255, file: !1197, line: 527, baseType: !404, size: 64, offset: 576)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1255, file: !1197, line: 528, baseType: !7, size: 32, offset: 640)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1255, file: !1197, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1255, file: !1197, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1255, file: !1197, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1255, file: !1197, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1255, file: !1197, line: 563, baseType: !1271, size: 512, offset: 704)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !27, line: 118, size: 512, elements: !1272)
!1272 = !{!1273, !1281, !1282, !1287, !1330, !1331, !1332, !1333}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1271, file: !27, line: 119, baseType: !1274, size: 256)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1275, line: 9, size: 256, elements: !1276)
!1275 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1276 = !{!1277, !1278}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1274, file: !1275, line: 10, baseType: !741, size: 192, align: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1274, file: !1275, line: 11, baseType: !1279, size: 64, offset: 192)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1280, line: 29, baseType: !758)
!1280 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1271, file: !27, line: 120, baseType: !1279, size: 64, offset: 256)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1271, file: !27, line: 121, baseType: !1283, size: 64, offset: 320)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!26, !1286}
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1271, file: !27, line: 122, baseType: !1288, size: 64, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !27, line: 159, size: 512, align: 512, elements: !1290)
!1290 = !{!1291, !1311, !1312, !1315, !1320, !1321, !1325, !1329}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1289, file: !27, line: 160, baseType: !1292, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !27, line: 214, size: 4608, align: 512, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1293, file: !27, line: 215, baseType: !761)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1293, file: !27, line: 216, baseType: !7, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1293, file: !27, line: 217, baseType: !7, size: 32, offset: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1293, file: !27, line: 218, baseType: !7, size: 32, offset: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1293, file: !27, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1293, file: !27, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1293, file: !27, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1293, file: !27, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1293, file: !27, line: 233, baseType: !1279, size: 64, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1293, file: !27, line: 234, baseType: !1286, size: 64, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1293, file: !27, line: 235, baseType: !1279, size: 64, offset: 256)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1293, file: !27, line: 236, baseType: !1286, size: 64, offset: 320)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1293, file: !27, line: 237, baseType: !1308, size: 4096, offset: 512)
!1308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1289, size: 4096, elements: !1309)
!1309 = !{!1310}
!1310 = !DISubrange(count: 8)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1289, file: !27, line: 161, baseType: !7, size: 32, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1289, file: !27, line: 162, baseType: !1313, size: 32, offset: 96)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !150, line: 27, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !295, line: 96, baseType: !168)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1289, file: !27, line: 163, baseType: !1316, size: 32, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !375, line: 276, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !375, line: 276, size: 32, elements: !1318)
!1318 = !{!1319}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1317, file: !375, line: 276, baseType: !379, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1289, file: !27, line: 164, baseType: !1286, size: 64, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1289, file: !27, line: 165, baseType: !1322, size: 128, offset: 256)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1275, line: 14, size: 128, elements: !1323)
!1323 = !{!1324}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1322, file: !1275, line: 15, baseType: !733, size: 128)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1289, file: !27, line: 166, baseType: !1326, size: 64, offset: 384)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!1279}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1289, file: !27, line: 167, baseType: !1279, size: 64, offset: 448)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1271, file: !27, line: 123, baseType: !159, size: 8, offset: 448)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1271, file: !27, line: 124, baseType: !159, size: 8, offset: 456)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1271, file: !27, line: 125, baseType: !159, size: 8, offset: 464)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1271, file: !27, line: 126, baseType: !159, size: 8, offset: 472)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1255, file: !1197, line: 572, baseType: !1271, size: 512, offset: 1216)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1255, file: !1197, line: 580, baseType: !1336, size: 64, offset: 1728)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1196, file: !1197, line: 721, baseType: !7, size: 32, offset: 3584)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1196, file: !1197, line: 722, baseType: !168, size: 32, offset: 3616)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1196, file: !1197, line: 723, baseType: !1340, size: 64, offset: 3648)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1342)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1343, line: 17, baseType: !1344)
!1343 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1343, line: 17, size: 64, elements: !1345)
!1345 = !{!1346}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1344, file: !1343, line: 17, baseType: !1347, size: 64)
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 64, elements: !1348)
!1348 = !{!1349}
!1349 = !DISubrange(count: 1)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1196, file: !1197, line: 724, baseType: !1342, size: 64, offset: 3712)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1196, file: !1197, line: 749, baseType: !1352, offset: 3776)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1197, line: 290, elements: !235)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1196, file: !1197, line: 751, baseType: !208, size: 128, offset: 3776)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1196, file: !1197, line: 757, baseType: !953, size: 64, offset: 3904)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1196, file: !1197, line: 758, baseType: !953, size: 64, offset: 3968)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1196, file: !1197, line: 761, baseType: !1357, size: 320, offset: 4032)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1130, line: 34, size: 320, elements: !1358)
!1358 = !{!1359, !1360}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1357, file: !1130, line: 35, baseType: !404, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1357, file: !1130, line: 36, baseType: !1361, size: 256, offset: 64)
!1361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 256, elements: !1134)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1196, file: !1197, line: 766, baseType: !168, size: 32, offset: 4352)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1196, file: !1197, line: 767, baseType: !168, size: 32, offset: 4384)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1196, file: !1197, line: 768, baseType: !168, size: 32, offset: 4416)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1196, file: !1197, line: 770, baseType: !168, size: 32, offset: 4448)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1196, file: !1197, line: 772, baseType: !311, size: 64, offset: 4480)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1196, file: !1197, line: 775, baseType: !7, size: 32, offset: 4544)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1196, file: !1197, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1196, file: !1197, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1196, file: !1197, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1196, file: !1197, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1196, file: !1197, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1196, file: !1197, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1196, file: !1197, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1196, file: !1197, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1196, file: !1197, line: 831, baseType: !311, size: 64, offset: 4672)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1196, file: !1197, line: 833, baseType: !1378, size: 384, offset: 4736)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !32, line: 25, size: 384, elements: !1379)
!1379 = !{!1380, !1385}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1378, file: !32, line: 26, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!297, !1384}
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, scope: !1378, file: !32, line: 27, baseType: !1386, size: 320, offset: 64)
!1386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1378, file: !32, line: 27, size: 320, elements: !1387)
!1387 = !{!1388, !1398, !1425}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1386, file: !32, line: 36, baseType: !1389, size: 320)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1386, file: !32, line: 29, size: 320, elements: !1390)
!1390 = !{!1391, !1393, !1394, !1395, !1396, !1397}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1389, file: !32, line: 30, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1389, file: !32, line: 31, baseType: !179, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1389, file: !32, line: 32, baseType: !179, size: 32, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1389, file: !32, line: 33, baseType: !179, size: 32, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1389, file: !32, line: 34, baseType: !404, size: 64, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1389, file: !32, line: 35, baseType: !1392, size: 64, offset: 256)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1386, file: !32, line: 46, baseType: !1399, size: 192)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1386, file: !32, line: 38, size: 192, elements: !1400)
!1400 = !{!1401, !1402, !1403, !1424}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1399, file: !32, line: 39, baseType: !1313, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1399, file: !32, line: 40, baseType: !31, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, scope: !1399, file: !32, line: 41, baseType: !1404, size: 64, offset: 64)
!1404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1399, file: !32, line: 41, size: 64, elements: !1405)
!1405 = !{!1406, !1414}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1404, file: !32, line: 42, baseType: !1407, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1409, line: 7, size: 128, elements: !1410)
!1409 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1410 = !{!1411, !1413}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1408, file: !1409, line: 8, baseType: !1412, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !295, line: 93, baseType: !515)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1408, file: !1409, line: 9, baseType: !515, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1404, file: !32, line: 43, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1417, line: 7, size: 64, elements: !1418)
!1417 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1418 = !{!1419, !1423}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1416, file: !1417, line: 8, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1417, line: 5, baseType: !1421)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !148, line: 20, baseType: !1422)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !143, line: 26, baseType: !168)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1416, file: !1417, line: 9, baseType: !1421, size: 32, offset: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1399, file: !32, line: 45, baseType: !404, size: 64, offset: 128)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1386, file: !32, line: 54, baseType: !1426, size: 256)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1386, file: !32, line: 48, size: 256, elements: !1427)
!1427 = !{!1428, !1431, !1432, !1433, !1434}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1426, file: !32, line: 49, baseType: !1429, size: 64)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !32, line: 14, flags: DIFlagFwdDecl)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1426, file: !32, line: 50, baseType: !168, size: 32, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1426, file: !32, line: 51, baseType: !168, size: 32, offset: 96)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1426, file: !32, line: 52, baseType: !311, size: 64, offset: 128)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1426, file: !32, line: 53, baseType: !311, size: 64, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1196, file: !1197, line: 835, baseType: !1436, size: 32, offset: 5120)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !150, line: 22, baseType: !1437)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !295, line: 28, baseType: !168)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1196, file: !1197, line: 836, baseType: !1436, size: 32, offset: 5152)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1196, file: !1197, line: 840, baseType: !311, size: 64, offset: 5184)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1196, file: !1197, line: 849, baseType: !1195, size: 64, offset: 5248)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1196, file: !1197, line: 852, baseType: !1195, size: 64, offset: 5312)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1196, file: !1197, line: 857, baseType: !208, size: 128, offset: 5376)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1196, file: !1197, line: 858, baseType: !208, size: 128, offset: 5504)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1196, file: !1197, line: 859, baseType: !1195, size: 64, offset: 5632)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1196, file: !1197, line: 867, baseType: !208, size: 128, offset: 5696)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1196, file: !1197, line: 868, baseType: !208, size: 128, offset: 5824)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1196, file: !1197, line: 871, baseType: !1448, size: 64, offset: 5952)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !60, line: 59, size: 768, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454, !1456, !1457, !1464, !1465}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1449, file: !60, line: 61, baseType: !1209, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1449, file: !60, line: 62, baseType: !7, size: 32, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1449, file: !60, line: 63, baseType: !221, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1449, file: !60, line: 65, baseType: !1455, size: 256, offset: 64)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !616, size: 256, elements: !1134)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1449, file: !60, line: 66, baseType: !616, size: 64, offset: 320)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1449, file: !60, line: 68, baseType: !1458, size: 128, offset: 384)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1459, line: 40, baseType: !1460)
!1459 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1459, line: 36, size: 128, elements: !1461)
!1461 = !{!1462, !1463}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1460, file: !1459, line: 37, baseType: !221)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1460, file: !1459, line: 38, baseType: !208, size: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1449, file: !60, line: 69, baseType: !352, size: 128, align: 64, offset: 512)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1449, file: !60, line: 70, baseType: !1466, size: 128, offset: 640)
!1466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1467, size: 128, elements: !1348)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !60, line: 54, size: 128, elements: !1468)
!1468 = !{!1469, !1470}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1467, file: !60, line: 55, baseType: !168, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1467, file: !60, line: 56, baseType: !1471, size: 64, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !60, line: 56, flags: DIFlagFwdDecl)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1196, file: !1197, line: 872, baseType: !1474, size: 512, offset: 6016)
!1474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 512, elements: !1134)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1196, file: !1197, line: 873, baseType: !208, size: 128, offset: 6528)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1196, file: !1197, line: 874, baseType: !208, size: 128, offset: 6656)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1196, file: !1197, line: 876, baseType: !1478, size: 64, offset: 6784)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1480, line: 26, size: 192, elements: !1481)
!1480 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !{!1482, !1483}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1479, file: !1480, line: 27, baseType: !7, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1479, file: !1480, line: 28, baseType: !1484, size: 128, offset: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1485, line: 43, size: 128, elements: !1486)
!1485 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1486 = !{!1487, !1488}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1484, file: !1485, line: 44, baseType: !761)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1484, file: !1485, line: 45, baseType: !208, size: 128)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1196, file: !1197, line: 879, baseType: !686, size: 64, offset: 6848)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1196, file: !1197, line: 882, baseType: !686, size: 64, offset: 6912)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1196, file: !1197, line: 884, baseType: !404, size: 64, offset: 6976)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1196, file: !1197, line: 885, baseType: !404, size: 64, offset: 7040)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1196, file: !1197, line: 890, baseType: !404, size: 64, offset: 7104)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1196, file: !1197, line: 891, baseType: !1495, size: 128, offset: 7168)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1197, line: 242, size: 128, elements: !1496)
!1496 = !{!1497, !1498, !1499}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1495, file: !1197, line: 244, baseType: !404, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1495, file: !1197, line: 245, baseType: !404, size: 64, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1495, file: !1197, line: 246, baseType: !761, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1196, file: !1197, line: 900, baseType: !311, size: 64, offset: 7296)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1196, file: !1197, line: 901, baseType: !311, size: 64, offset: 7360)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1196, file: !1197, line: 904, baseType: !404, size: 64, offset: 7424)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1196, file: !1197, line: 907, baseType: !404, size: 64, offset: 7488)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1196, file: !1197, line: 910, baseType: !311, size: 64, offset: 7552)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1196, file: !1197, line: 911, baseType: !311, size: 64, offset: 7616)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1196, file: !1197, line: 914, baseType: !1507, size: 640, offset: 7680)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1508, line: 123, size: 640, elements: !1509)
!1508 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1509 = !{!1510, !1516, !1517}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1507, file: !1508, line: 124, baseType: !1511, size: 576)
!1511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1512, size: 576, elements: !263)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1508, line: 108, size: 192, elements: !1513)
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1512, file: !1508, line: 109, baseType: !404, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1512, file: !1508, line: 110, baseType: !1322, size: 128, offset: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1507, file: !1508, line: 125, baseType: !7, size: 32, offset: 576)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1507, file: !1508, line: 126, baseType: !7, size: 32, offset: 608)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1196, file: !1197, line: 917, baseType: !1519, size: 192, offset: 8320)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1508, line: 134, size: 192, elements: !1520)
!1520 = !{!1521, !1522}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1519, file: !1508, line: 135, baseType: !352, size: 128, align: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1519, file: !1508, line: 136, baseType: !7, size: 32, offset: 128)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1196, file: !1197, line: 923, baseType: !1524, size: 64, offset: 8512)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1526)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1527, line: 111, size: 1280, elements: !1528)
!1527 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1528 = !{!1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1546, !1547, !1548, !1549, !1550, !1551, !1658, !1659, !1660, !1661, !1687, !1690, !1700}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1526, file: !1527, line: 112, baseType: !728, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1526, file: !1527, line: 120, baseType: !417, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1526, file: !1527, line: 121, baseType: !425, size: 32, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1526, file: !1527, line: 122, baseType: !417, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1526, file: !1527, line: 123, baseType: !425, size: 32, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1526, file: !1527, line: 124, baseType: !417, size: 32, offset: 160)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1526, file: !1527, line: 125, baseType: !425, size: 32, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1526, file: !1527, line: 126, baseType: !417, size: 32, offset: 224)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1526, file: !1527, line: 127, baseType: !425, size: 32, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1526, file: !1527, line: 128, baseType: !7, size: 32, offset: 288)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1526, file: !1527, line: 129, baseType: !1540, size: 64, offset: 320)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1541, line: 26, baseType: !1542)
!1541 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1541, line: 24, size: 64, elements: !1543)
!1543 = !{!1544}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1542, file: !1541, line: 25, baseType: !1545, size: 64)
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 64, elements: !191)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1526, file: !1527, line: 130, baseType: !1540, size: 64, offset: 384)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1526, file: !1527, line: 131, baseType: !1540, size: 64, offset: 448)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1526, file: !1527, line: 132, baseType: !1540, size: 64, offset: 512)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1526, file: !1527, line: 133, baseType: !1540, size: 64, offset: 576)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1526, file: !1527, line: 135, baseType: !161, size: 8, offset: 640)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1526, file: !1527, line: 137, baseType: !1552, size: 64, offset: 704)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1554, line: 189, size: 1664, elements: !1555)
!1554 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1555 = !{!1556, !1557, !1560, !1565, !1566, !1569, !1570, !1575, !1576, !1577, !1578, !1580, !1581, !1582, !1583, !1584, !1622, !1643}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1553, file: !1554, line: 190, baseType: !1209, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1553, file: !1554, line: 191, baseType: !1558, size: 32, offset: 32)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1554, line: 28, baseType: !1559)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !150, line: 98, baseType: !1421)
!1560 = !DIDerivedType(tag: DW_TAG_member, scope: !1553, file: !1554, line: 192, baseType: !1561, size: 192, offset: 64)
!1561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1553, file: !1554, line: 192, size: 192, elements: !1562)
!1562 = !{!1563, !1564}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1561, file: !1554, line: 193, baseType: !208, size: 128)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1561, file: !1554, line: 194, baseType: !741, size: 192, align: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1553, file: !1554, line: 199, baseType: !748, size: 256, offset: 256)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1553, file: !1554, line: 200, baseType: !1567, size: 64, offset: 512)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1554, line: 200, flags: DIFlagFwdDecl)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1553, file: !1554, line: 201, baseType: !169, size: 64, offset: 576)
!1570 = !DIDerivedType(tag: DW_TAG_member, scope: !1553, file: !1554, line: 202, baseType: !1571, size: 64, offset: 640)
!1571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1553, file: !1554, line: 202, size: 64, elements: !1572)
!1572 = !{!1573, !1574}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1571, file: !1554, line: 203, baseType: !521, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1571, file: !1554, line: 204, baseType: !521, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1553, file: !1554, line: 206, baseType: !521, size: 64, offset: 704)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1553, file: !1554, line: 207, baseType: !417, size: 32, offset: 768)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1553, file: !1554, line: 208, baseType: !425, size: 32, offset: 800)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1553, file: !1554, line: 209, baseType: !1579, size: 32, offset: 832)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1554, line: 31, baseType: !541)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1553, file: !1554, line: 210, baseType: !144, size: 16, offset: 864)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1553, file: !1554, line: 211, baseType: !144, size: 16, offset: 880)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1553, file: !1554, line: 215, baseType: !1184, size: 16, offset: 896)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1553, file: !1554, line: 222, baseType: !311, size: 64, offset: 960)
!1584 = !DIDerivedType(tag: DW_TAG_member, scope: !1553, file: !1554, line: 239, baseType: !1585, size: 320, offset: 1024)
!1585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1553, file: !1554, line: 239, size: 320, elements: !1586)
!1586 = !{!1587, !1614}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1585, file: !1554, line: 240, baseType: !1588, size: 320)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1554, line: 108, size: 320, elements: !1589)
!1589 = !{!1590, !1591, !1603, !1606, !1613}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1588, file: !1554, line: 110, baseType: !311, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, scope: !1588, file: !1554, line: 111, baseType: !1592, size: 64, offset: 64)
!1592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1588, file: !1554, line: 111, size: 64, elements: !1593)
!1593 = !{!1594, !1602}
!1594 = !DIDerivedType(tag: DW_TAG_member, scope: !1592, file: !1554, line: 112, baseType: !1595, size: 64)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1592, file: !1554, line: 112, size: 64, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1595, file: !1554, line: 114, baseType: !147, size: 16)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1595, file: !1554, line: 115, baseType: !1599, size: 48, offset: 16)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 48, elements: !1600)
!1600 = !{!1601}
!1601 = !DISubrange(count: 6)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1592, file: !1554, line: 121, baseType: !311, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1588, file: !1554, line: 123, baseType: !1604, size: 64, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1554, line: 96, flags: DIFlagFwdDecl)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1588, file: !1554, line: 124, baseType: !1607, size: 64, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1554, line: 102, size: 192, elements: !1609)
!1609 = !{!1610, !1611, !1612}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1608, file: !1554, line: 103, baseType: !352, size: 128, align: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1608, file: !1554, line: 104, baseType: !1209, size: 32, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1608, file: !1554, line: 105, baseType: !472, size: 8, offset: 160)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1588, file: !1554, line: 125, baseType: !155, size: 64, offset: 256)
!1614 = !DIDerivedType(tag: DW_TAG_member, scope: !1585, file: !1554, line: 241, baseType: !1615, size: 320)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1585, file: !1554, line: 241, size: 320, elements: !1616)
!1616 = !{!1617, !1618, !1619, !1620, !1621}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1615, file: !1554, line: 242, baseType: !311, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1615, file: !1554, line: 243, baseType: !311, size: 64, offset: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1615, file: !1554, line: 244, baseType: !1604, size: 64, offset: 128)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1615, file: !1554, line: 245, baseType: !1607, size: 64, offset: 192)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1615, file: !1554, line: 246, baseType: !262, size: 64, offset: 256)
!1622 = !DIDerivedType(tag: DW_TAG_member, scope: !1553, file: !1554, line: 254, baseType: !1623, size: 256, offset: 1344)
!1623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1553, file: !1554, line: 254, size: 256, elements: !1624)
!1624 = !{!1625, !1631}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1623, file: !1554, line: 255, baseType: !1626, size: 256)
!1626 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1554, line: 128, size: 256, elements: !1627)
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1626, file: !1554, line: 129, baseType: !169, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1626, file: !1554, line: 130, baseType: !1630, size: 256)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 256, elements: !1134)
!1631 = !DIDerivedType(tag: DW_TAG_member, scope: !1623, file: !1554, line: 256, baseType: !1632, size: 256)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1623, file: !1554, line: 256, size: 256, elements: !1633)
!1633 = !{!1634, !1635}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1632, file: !1554, line: 258, baseType: !208, size: 128)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1632, file: !1554, line: 259, baseType: !1636, size: 128, offset: 128)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1637, line: 22, size: 128, elements: !1638)
!1637 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1638 = !{!1639, !1642}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1636, file: !1637, line: 23, baseType: !1640, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1637, line: 23, flags: DIFlagFwdDecl)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1636, file: !1637, line: 24, baseType: !311, size: 64, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1553, file: !1554, line: 274, baseType: !1644, size: 64, offset: 1600)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1554, line: 170, size: 192, elements: !1646)
!1646 = !{!1647, !1656, !1657}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1645, file: !1554, line: 171, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1554, line: 165, baseType: !1649)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!168, !1552, !1652, !1654, !1552}
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1605)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1626)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1645, file: !1554, line: 172, baseType: !1552, size: 64, offset: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1645, file: !1554, line: 173, baseType: !1604, size: 64, offset: 128)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1526, file: !1527, line: 138, baseType: !1552, size: 64, offset: 768)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1526, file: !1527, line: 139, baseType: !1552, size: 64, offset: 832)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1526, file: !1527, line: 140, baseType: !1552, size: 64, offset: 896)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1526, file: !1527, line: 145, baseType: !1662, size: 64, offset: 960)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1664, line: 13, size: 896, elements: !1665)
!1664 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1665 = !{!1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1663, file: !1664, line: 14, baseType: !1209, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1663, file: !1664, line: 15, baseType: !728, size: 32, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1663, file: !1664, line: 16, baseType: !728, size: 32, offset: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1663, file: !1664, line: 21, baseType: !752, size: 64, offset: 128)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1663, file: !1664, line: 27, baseType: !311, size: 64, offset: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1663, file: !1664, line: 28, baseType: !311, size: 64, offset: 256)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1663, file: !1664, line: 29, baseType: !752, size: 64, offset: 320)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1663, file: !1664, line: 32, baseType: !620, size: 128, offset: 384)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1663, file: !1664, line: 33, baseType: !417, size: 32, offset: 512)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1663, file: !1664, line: 37, baseType: !752, size: 64, offset: 576)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1663, file: !1664, line: 44, baseType: !1677, size: 256, offset: 640)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1678, line: 15, size: 256, elements: !1679)
!1678 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1679 = !{!1680, !1681, !1682, !1683, !1684, !1685, !1686}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1677, file: !1678, line: 16, baseType: !761)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1677, file: !1678, line: 18, baseType: !168, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1677, file: !1678, line: 19, baseType: !168, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1677, file: !1678, line: 20, baseType: !168, size: 32, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1677, file: !1678, line: 21, baseType: !168, size: 32, offset: 96)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1677, file: !1678, line: 22, baseType: !311, size: 64, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1677, file: !1678, line: 23, baseType: !311, size: 64, offset: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1526, file: !1527, line: 146, baseType: !1688, size: 64, offset: 1024)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !704, line: 516, flags: DIFlagFwdDecl)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1526, file: !1527, line: 147, baseType: !1691, size: 64, offset: 1088)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1527, line: 25, size: 64, elements: !1693)
!1693 = !{!1694, !1695, !1696}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1692, file: !1527, line: 26, baseType: !728, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1692, file: !1527, line: 27, baseType: !168, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1692, file: !1527, line: 28, baseType: !1697, offset: 64)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !425, elements: !1698)
!1698 = !{!1699}
!1699 = !DISubrange(count: 0)
!1700 = !DIDerivedType(tag: DW_TAG_member, scope: !1526, file: !1527, line: 149, baseType: !1701, size: 128, offset: 1152)
!1701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1526, file: !1527, line: 149, size: 128, elements: !1702)
!1702 = !{!1703, !1704}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1701, file: !1527, line: 150, baseType: !168, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1701, file: !1527, line: 151, baseType: !352, size: 128, align: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1196, file: !1197, line: 926, baseType: !1524, size: 64, offset: 8576)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1196, file: !1197, line: 929, baseType: !1524, size: 64, offset: 8640)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1196, file: !1197, line: 933, baseType: !1552, size: 64, offset: 8704)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1196, file: !1197, line: 943, baseType: !175, size: 128, offset: 8768)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1196, file: !1197, line: 945, baseType: !1710, size: 64, offset: 8896)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1197, line: 49, flags: DIFlagFwdDecl)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1196, file: !1197, line: 956, baseType: !1713, size: 64, offset: 8960)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64)
!1714 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1197, line: 45, flags: DIFlagFwdDecl)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1196, file: !1197, line: 959, baseType: !1716, size: 64, offset: 9024)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1197, line: 959, flags: DIFlagFwdDecl)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1196, file: !1197, line: 962, baseType: !1719, size: 64, offset: 9088)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1197, line: 66, flags: DIFlagFwdDecl)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1196, file: !1197, line: 966, baseType: !1722, size: 64, offset: 9152)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1197, line: 50, flags: DIFlagFwdDecl)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1196, file: !1197, line: 969, baseType: !1725, size: 64, offset: 9216)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1727, line: 82, size: 7296, elements: !1728)
!1727 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1728 = !{!1729, !1730, !1731, !1732, !1733, !1734, !1735, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1764, !1773, !1774, !1776, !1777, !1778, !1781, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1811, !1812, !1819, !1820, !1821, !1822, !1823, !1824}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1726, file: !1727, line: 83, baseType: !1209, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1726, file: !1727, line: 84, baseType: !728, size: 32, offset: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1726, file: !1727, line: 85, baseType: !168, size: 32, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1726, file: !1727, line: 86, baseType: !208, size: 128, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1726, file: !1727, line: 88, baseType: !1458, size: 128, offset: 256)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1726, file: !1727, line: 91, baseType: !1195, size: 64, offset: 384)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1726, file: !1727, line: 94, baseType: !1736, size: 192, offset: 448)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1737, line: 30, size: 192, elements: !1738)
!1737 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1738 = !{!1739, !1740}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1736, file: !1737, line: 31, baseType: !208, size: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1736, file: !1737, line: 32, baseType: !1741, size: 64, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1742, line: 25, baseType: !1743)
!1742 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1742, line: 23, size: 64, elements: !1744)
!1744 = !{!1745}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1743, file: !1742, line: 24, baseType: !1347, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1726, file: !1727, line: 97, baseType: !616, size: 64, offset: 640)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1726, file: !1727, line: 100, baseType: !168, size: 32, offset: 704)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1726, file: !1727, line: 106, baseType: !168, size: 32, offset: 736)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1726, file: !1727, line: 107, baseType: !1195, size: 64, offset: 768)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1726, file: !1727, line: 110, baseType: !168, size: 32, offset: 832)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1726, file: !1727, line: 111, baseType: !7, size: 32, offset: 864)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1726, file: !1727, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1726, file: !1727, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1726, file: !1727, line: 128, baseType: !168, size: 32, offset: 928)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1726, file: !1727, line: 129, baseType: !208, size: 128, offset: 960)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1726, file: !1727, line: 132, baseType: !1271, size: 512, offset: 1088)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1726, file: !1727, line: 133, baseType: !1279, size: 64, offset: 1600)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1726, file: !1727, line: 140, baseType: !1759, size: 256, offset: 1664)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1760, size: 256, elements: !191)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1727, line: 38, size: 128, elements: !1761)
!1761 = !{!1762, !1763}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1760, file: !1727, line: 39, baseType: !404, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1760, file: !1727, line: 40, baseType: !404, size: 64, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1726, file: !1727, line: 146, baseType: !1765, size: 192, offset: 1920)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1727, line: 66, size: 192, elements: !1766)
!1766 = !{!1767}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1765, file: !1727, line: 67, baseType: !1768, size: 192)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1727, line: 47, size: 192, elements: !1769)
!1769 = !{!1770, !1771, !1772}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1768, file: !1727, line: 48, baseType: !754, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1768, file: !1727, line: 49, baseType: !754, size: 64, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1768, file: !1727, line: 50, baseType: !754, size: 64, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1726, file: !1727, line: 150, baseType: !1507, size: 640, offset: 2112)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1726, file: !1727, line: 153, baseType: !1775, size: 256, offset: 2752)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1448, size: 256, elements: !1134)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1726, file: !1727, line: 159, baseType: !1448, size: 64, offset: 3008)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1726, file: !1727, line: 162, baseType: !168, size: 32, offset: 3072)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1726, file: !1727, line: 164, baseType: !1779, size: 64, offset: 3136)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1727, line: 164, flags: DIFlagFwdDecl)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1726, file: !1727, line: 175, baseType: !1782, size: 32, offset: 3200)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !375, line: 805, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !375, line: 798, size: 32, elements: !1784)
!1784 = !{!1785, !1786}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1783, file: !375, line: 803, baseType: !374, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1783, file: !375, line: 804, baseType: !221, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1726, file: !1727, line: 176, baseType: !404, size: 64, offset: 3264)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1726, file: !1727, line: 176, baseType: !404, size: 64, offset: 3328)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1726, file: !1727, line: 176, baseType: !404, size: 64, offset: 3392)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1726, file: !1727, line: 176, baseType: !404, size: 64, offset: 3456)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1726, file: !1727, line: 177, baseType: !404, size: 64, offset: 3520)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1726, file: !1727, line: 178, baseType: !404, size: 64, offset: 3584)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1726, file: !1727, line: 179, baseType: !1495, size: 128, offset: 3648)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1726, file: !1727, line: 180, baseType: !311, size: 64, offset: 3776)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1726, file: !1727, line: 180, baseType: !311, size: 64, offset: 3840)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1726, file: !1727, line: 180, baseType: !311, size: 64, offset: 3904)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1726, file: !1727, line: 180, baseType: !311, size: 64, offset: 3968)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1726, file: !1727, line: 181, baseType: !311, size: 64, offset: 4032)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1726, file: !1727, line: 181, baseType: !311, size: 64, offset: 4096)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1726, file: !1727, line: 181, baseType: !311, size: 64, offset: 4160)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1726, file: !1727, line: 181, baseType: !311, size: 64, offset: 4224)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1726, file: !1727, line: 182, baseType: !311, size: 64, offset: 4288)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1726, file: !1727, line: 182, baseType: !311, size: 64, offset: 4352)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1726, file: !1727, line: 182, baseType: !311, size: 64, offset: 4416)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1726, file: !1727, line: 182, baseType: !311, size: 64, offset: 4480)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1726, file: !1727, line: 183, baseType: !311, size: 64, offset: 4544)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1726, file: !1727, line: 183, baseType: !311, size: 64, offset: 4608)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1726, file: !1727, line: 184, baseType: !1809, offset: 4672)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1810, line: 12, elements: !235)
!1810 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1726, file: !1727, line: 192, baseType: !406, size: 64, offset: 4672)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1726, file: !1727, line: 203, baseType: !1813, size: 2048, offset: 4736)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1814, size: 2048, elements: !176)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1815, line: 43, size: 128, elements: !1816)
!1815 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1816 = !{!1817, !1818}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1814, file: !1815, line: 44, baseType: !310, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1814, file: !1815, line: 45, baseType: !310, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1726, file: !1727, line: 220, baseType: !472, size: 8, offset: 6784)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1726, file: !1727, line: 221, baseType: !1184, size: 16, offset: 6800)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1726, file: !1727, line: 222, baseType: !1184, size: 16, offset: 6816)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1726, file: !1727, line: 224, baseType: !953, size: 64, offset: 6848)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1726, file: !1727, line: 227, baseType: !1152, size: 192, offset: 6912)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1726, file: !1727, line: 233, baseType: !1152, size: 192, offset: 7104)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1196, file: !1197, line: 970, baseType: !1826, size: 64, offset: 9280)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1727, line: 20, size: 16576, elements: !1828)
!1828 = !{!1829, !1830, !1831, !1832}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1827, file: !1727, line: 21, baseType: !221)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1827, file: !1727, line: 22, baseType: !1209, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1827, file: !1727, line: 23, baseType: !1458, size: 128, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1827, file: !1727, line: 24, baseType: !1833, size: 16384, offset: 192)
!1833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1834, size: 16384, elements: !267)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1737, line: 49, size: 256, elements: !1835)
!1835 = !{!1836}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1834, file: !1737, line: 50, baseType: !1837, size: 256)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1737, line: 35, size: 256, elements: !1838)
!1838 = !{!1839, !1846, !1847, !1853}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1837, file: !1737, line: 37, baseType: !1840, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1841, line: 19, baseType: !1842)
!1841 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1841, line: 18, baseType: !1844)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{null, !168}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1837, file: !1737, line: 38, baseType: !311, size: 64, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1837, file: !1737, line: 44, baseType: !1848, size: 64, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1841, line: 22, baseType: !1849)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1841, line: 21, baseType: !1851)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{null}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1837, file: !1737, line: 46, baseType: !1741, size: 64, offset: 192)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1196, file: !1197, line: 971, baseType: !1741, size: 64, offset: 9344)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1196, file: !1197, line: 972, baseType: !1741, size: 64, offset: 9408)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1196, file: !1197, line: 974, baseType: !1741, size: 64, offset: 9472)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1196, file: !1197, line: 975, baseType: !1736, size: 192, offset: 9536)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1196, file: !1197, line: 976, baseType: !311, size: 64, offset: 9728)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1196, file: !1197, line: 977, baseType: !308, size: 64, offset: 9792)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1196, file: !1197, line: 978, baseType: !7, size: 32, offset: 9856)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1196, file: !1197, line: 980, baseType: !355, size: 64, offset: 9920)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1196, file: !1197, line: 989, baseType: !1863, size: 128, offset: 9984)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1864, line: 35, size: 128, elements: !1865)
!1864 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1865 = !{!1866, !1867, !1868}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1863, file: !1864, line: 36, baseType: !168, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1863, file: !1864, line: 37, baseType: !728, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1863, file: !1864, line: 38, baseType: !1869, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1864, line: 23, flags: DIFlagFwdDecl)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1196, file: !1197, line: 992, baseType: !404, size: 64, offset: 10112)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1196, file: !1197, line: 993, baseType: !404, size: 64, offset: 10176)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1196, file: !1197, line: 996, baseType: !221, offset: 10240)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1196, file: !1197, line: 999, baseType: !761, offset: 10240)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1196, file: !1197, line: 1001, baseType: !1876, size: 64, offset: 10240)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1197, line: 636, size: 64, elements: !1877)
!1877 = !{!1878}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1876, file: !1197, line: 637, baseType: !1879, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1196, file: !1197, line: 1005, baseType: !733, size: 128, offset: 10304)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1196, file: !1197, line: 1007, baseType: !1195, size: 64, offset: 10432)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1196, file: !1197, line: 1009, baseType: !1883, size: 64, offset: 10496)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1197, line: 1009, flags: DIFlagFwdDecl)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1196, file: !1197, line: 1043, baseType: !169, size: 64, offset: 10560)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1196, file: !1197, line: 1046, baseType: !1887, size: 64, offset: 10624)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1197, line: 41, flags: DIFlagFwdDecl)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1196, file: !1197, line: 1050, baseType: !1890, size: 64, offset: 10688)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!1891 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1197, line: 42, flags: DIFlagFwdDecl)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1196, file: !1197, line: 1054, baseType: !1893, size: 64, offset: 10752)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1197, line: 55, flags: DIFlagFwdDecl)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1196, file: !1197, line: 1056, baseType: !1896, size: 64, offset: 10816)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1197, line: 40, flags: DIFlagFwdDecl)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1196, file: !1197, line: 1058, baseType: !1899, size: 64, offset: 10880)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1901, line: 99, size: 704, elements: !1902)
!1901 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1902 = !{!1903, !1904, !1905, !1906, !1907, !1908, !1909, !1928, !1929}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1900, file: !1901, line: 100, baseType: !752, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1900, file: !1901, line: 101, baseType: !728, size: 32, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1900, file: !1901, line: 102, baseType: !728, size: 32, offset: 96)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1900, file: !1901, line: 105, baseType: !221, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1900, file: !1901, line: 107, baseType: !144, size: 16, offset: 128)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1900, file: !1901, line: 109, baseType: !720, size: 128, offset: 192)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1900, file: !1901, line: 110, baseType: !1910, size: 64, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1901, line: 73, size: 448, elements: !1912)
!1912 = !{!1913, !1916, !1917, !1922, !1927}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1911, file: !1901, line: 74, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1901, line: 74, flags: DIFlagFwdDecl)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1911, file: !1901, line: 75, baseType: !1899, size: 64, offset: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, scope: !1911, file: !1901, line: 83, baseType: !1918, size: 128, offset: 128)
!1918 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1911, file: !1901, line: 83, size: 128, elements: !1919)
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1918, file: !1901, line: 84, baseType: !208, size: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1918, file: !1901, line: 85, baseType: !914, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, scope: !1911, file: !1901, line: 87, baseType: !1923, size: 128, offset: 256)
!1923 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1911, file: !1901, line: 87, size: 128, elements: !1924)
!1924 = !{!1925, !1926}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1923, file: !1901, line: 88, baseType: !620, size: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1923, file: !1901, line: 89, baseType: !352, size: 128, align: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1911, file: !1901, line: 92, baseType: !7, size: 32, offset: 384)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1900, file: !1901, line: 111, baseType: !616, size: 64, offset: 384)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1900, file: !1901, line: 113, baseType: !1930, size: 256, offset: 448)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1931, line: 102, size: 256, elements: !1932)
!1931 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1932 = !{!1933, !1934, !1935}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1930, file: !1931, line: 103, baseType: !752, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1930, file: !1931, line: 104, baseType: !208, size: 128, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1930, file: !1931, line: 105, baseType: !1936, size: 64, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1931, line: 21, baseType: !1937)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{null, !1940}
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1196, file: !1197, line: 1061, baseType: !1942, size: 64, offset: 10944)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1197, line: 43, flags: DIFlagFwdDecl)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1196, file: !1197, line: 1064, baseType: !311, size: 64, offset: 11008)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1196, file: !1197, line: 1065, baseType: !1946, size: 64, offset: 11072)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1737, line: 14, baseType: !1948)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1737, line: 12, size: 384, elements: !1949)
!1949 = !{!1950}
!1950 = !DIDerivedType(tag: DW_TAG_member, scope: !1948, file: !1737, line: 13, baseType: !1951, size: 384)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1948, file: !1737, line: 13, size: 384, elements: !1952)
!1952 = !{!1953, !1954, !1955, !1956}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1951, file: !1737, line: 13, baseType: !168, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1951, file: !1737, line: 13, baseType: !168, size: 32, offset: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1951, file: !1737, line: 13, baseType: !168, size: 32, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1951, file: !1737, line: 13, baseType: !1957, size: 256, offset: 128)
!1957 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1958, line: 32, size: 256, elements: !1959)
!1958 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1959 = !{!1960, !1965, !1978, !1984, !1993, !2013, !2018}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1957, file: !1958, line: 37, baseType: !1961, size: 64)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1957, file: !1958, line: 34, size: 64, elements: !1962)
!1962 = !{!1963, !1964}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1961, file: !1958, line: 35, baseType: !1437, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1961, file: !1958, line: 36, baseType: !423, size: 32, offset: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1957, file: !1958, line: 45, baseType: !1966, size: 192)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1957, file: !1958, line: 40, size: 192, elements: !1967)
!1967 = !{!1968, !1970, !1971, !1977}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1966, file: !1958, line: 41, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !295, line: 95, baseType: !168)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1966, file: !1958, line: 42, baseType: !168, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1966, file: !1958, line: 43, baseType: !1972, size: 64, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1958, line: 11, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1958, line: 8, size: 64, elements: !1974)
!1974 = !{!1975, !1976}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1973, file: !1958, line: 9, baseType: !168, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1973, file: !1958, line: 10, baseType: !169, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1966, file: !1958, line: 44, baseType: !168, size: 32, offset: 128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1957, file: !1958, line: 52, baseType: !1979, size: 128)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1957, file: !1958, line: 48, size: 128, elements: !1980)
!1980 = !{!1981, !1982, !1983}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1979, file: !1958, line: 49, baseType: !1437, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1979, file: !1958, line: 50, baseType: !423, size: 32, offset: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1979, file: !1958, line: 51, baseType: !1972, size: 64, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1957, file: !1958, line: 61, baseType: !1985, size: 256)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1957, file: !1958, line: 55, size: 256, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990, !1992}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1985, file: !1958, line: 56, baseType: !1437, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1985, file: !1958, line: 57, baseType: !423, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1985, file: !1958, line: 58, baseType: !168, size: 32, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1985, file: !1958, line: 59, baseType: !1991, size: 64, offset: 128)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !295, line: 94, baseType: !296)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1985, file: !1958, line: 60, baseType: !1991, size: 64, offset: 192)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1957, file: !1958, line: 95, baseType: !1994, size: 256)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1957, file: !1958, line: 64, size: 256, elements: !1995)
!1995 = !{!1996, !1997}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1994, file: !1958, line: 65, baseType: !169, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, scope: !1994, file: !1958, line: 77, baseType: !1998, size: 192, offset: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1994, file: !1958, line: 77, size: 192, elements: !1999)
!1999 = !{!2000, !2001, !2008}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1998, file: !1958, line: 82, baseType: !1184, size: 16)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1998, file: !1958, line: 88, baseType: !2002, size: 192)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1998, file: !1958, line: 84, size: 192, elements: !2003)
!2003 = !{!2004, !2006, !2007}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2002, file: !1958, line: 85, baseType: !2005, size: 64)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !1309)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2002, file: !1958, line: 86, baseType: !169, size: 64, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2002, file: !1958, line: 87, baseType: !169, size: 64, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1998, file: !1958, line: 93, baseType: !2009, size: 96)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1998, file: !1958, line: 90, size: 96, elements: !2010)
!2010 = !{!2011, !2012}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2009, file: !1958, line: 91, baseType: !2005, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2009, file: !1958, line: 92, baseType: !180, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1957, file: !1958, line: 101, baseType: !2014, size: 128)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1957, file: !1958, line: 98, size: 128, elements: !2015)
!2015 = !{!2016, !2017}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2014, file: !1958, line: 99, baseType: !297, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2014, file: !1958, line: 100, baseType: !168, size: 32, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1957, file: !1958, line: 108, baseType: !2019, size: 128)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1957, file: !1958, line: 104, size: 128, elements: !2020)
!2020 = !{!2021, !2022, !2023}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2019, file: !1958, line: 105, baseType: !169, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2019, file: !1958, line: 106, baseType: !168, size: 32, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2019, file: !1958, line: 107, baseType: !7, size: 32, offset: 96)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1196, file: !1197, line: 1067, baseType: !1809, offset: 11136)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1196, file: !1197, line: 1099, baseType: !2026, size: 64, offset: 11136)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1197, line: 56, flags: DIFlagFwdDecl)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1196, file: !1197, line: 1103, baseType: !208, size: 128, offset: 11200)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1196, file: !1197, line: 1104, baseType: !2030, size: 64, offset: 11328)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1197, line: 46, flags: DIFlagFwdDecl)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1196, file: !1197, line: 1105, baseType: !1152, size: 192, offset: 11392)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1196, file: !1197, line: 1106, baseType: !7, size: 32, offset: 11584)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1196, file: !1197, line: 1109, baseType: !2035, size: 128, offset: 11648)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2036, size: 128, elements: !191)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1197, line: 51, flags: DIFlagFwdDecl)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1196, file: !1197, line: 1110, baseType: !1152, size: 192, offset: 11776)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1196, file: !1197, line: 1111, baseType: !208, size: 128, offset: 11968)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1196, file: !1197, line: 1173, baseType: !2041, size: 64, offset: 12096)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2043, line: 62, size: 256, align: 256, elements: !2044)
!2043 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2044 = !{!2045, !2046, !2047, !2052}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2042, file: !2043, line: 75, baseType: !180, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2042, file: !2043, line: 90, baseType: !180, size: 32, offset: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2042, file: !2043, line: 124, baseType: !2048, size: 64, offset: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2042, file: !2043, line: 109, size: 64, elements: !2049)
!2049 = !{!2050, !2051}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2048, file: !2043, line: 110, baseType: !405, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2048, file: !2043, line: 112, baseType: !405, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2042, file: !2043, line: 144, baseType: !180, size: 32, offset: 128)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1196, file: !1197, line: 1174, baseType: !179, size: 32, offset: 12160)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1196, file: !1197, line: 1179, baseType: !311, size: 64, offset: 12224)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1196, file: !1197, line: 1182, baseType: !2056, size: 128, offset: 12288)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1130, line: 76, size: 128, elements: !2057)
!2057 = !{!2058, !2063, !2064}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2056, file: !1130, line: 85, baseType: !2059, size: 64)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2060, line: 7, size: 64, elements: !2061)
!2060 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2061 = !{!2062}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2059, file: !2060, line: 12, baseType: !1344, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2056, file: !1130, line: 88, baseType: !472, size: 8, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2056, file: !1130, line: 95, baseType: !472, size: 8, offset: 72)
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !1196, file: !1197, line: 1184, baseType: !2066, size: 128, offset: 12416)
!2066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1196, file: !1197, line: 1184, size: 128, elements: !2067)
!2067 = !{!2068, !2069}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2066, file: !1197, line: 1185, baseType: !1209, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2066, file: !1197, line: 1186, baseType: !352, size: 128, align: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1196, file: !1197, line: 1190, baseType: !2071, size: 64, offset: 12544)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1197, line: 53, flags: DIFlagFwdDecl)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1196, file: !1197, line: 1192, baseType: !2074, size: 128, offset: 12608)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1130, line: 64, size: 128, elements: !2075)
!2075 = !{!2076, !2077, !2078}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2074, file: !1130, line: 65, baseType: !702, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2074, file: !1130, line: 67, baseType: !180, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2074, file: !1130, line: 68, baseType: !180, size: 32, offset: 96)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1196, file: !1197, line: 1206, baseType: !168, size: 32, offset: 12736)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1196, file: !1197, line: 1207, baseType: !168, size: 32, offset: 12768)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1196, file: !1197, line: 1209, baseType: !311, size: 64, offset: 12800)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1196, file: !1197, line: 1219, baseType: !404, size: 64, offset: 12864)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1196, file: !1197, line: 1220, baseType: !404, size: 64, offset: 12928)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1196, file: !1197, line: 1317, baseType: !168, size: 32, offset: 12992)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1196, file: !1197, line: 1319, baseType: !1195, size: 64, offset: 13056)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1196, file: !1197, line: 1322, baseType: !2087, size: 64, offset: 13120)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2089, line: 56, size: 512, elements: !2090)
!2089 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2090 = !{!2091, !2092, !2093, !2094, !2095, !2096, !2097, !2099}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2088, file: !2089, line: 57, baseType: !2087, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2088, file: !2089, line: 58, baseType: !169, size: 64, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2088, file: !2089, line: 59, baseType: !311, size: 64, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2088, file: !2089, line: 60, baseType: !311, size: 64, offset: 192)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2088, file: !2089, line: 61, baseType: !801, size: 64, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2088, file: !2089, line: 62, baseType: !7, size: 32, offset: 320)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2088, file: !2089, line: 63, baseType: !2098, size: 64, offset: 384)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !150, line: 153, baseType: !404)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2088, file: !2089, line: 64, baseType: !2100, size: 64, offset: 448)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1196, file: !1197, line: 1326, baseType: !1209, size: 32, offset: 13184)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1196, file: !1197, line: 1342, baseType: !169, size: 64, offset: 13248)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1196, file: !1197, line: 1343, baseType: !405, size: 64, offset: 13312)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1196, file: !1197, line: 1344, baseType: !404, size: 64, offset: 13376)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1196, file: !1197, line: 1345, baseType: !405, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1196, file: !1197, line: 1346, baseType: !405, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1196, file: !1197, line: 1347, baseType: !405, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1196, file: !1197, line: 1348, baseType: !352, size: 128, align: 64, offset: 13504)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1196, file: !1197, line: 1358, baseType: !2111, size: 34816, offset: 13824)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2112, line: 485, size: 34816, elements: !2113)
!2112 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2113 = !{!2114, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2143, !2144, !2145, !2146, !2147, !2148, !2151, !2152, !2153}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2111, file: !2112, line: 487, baseType: !2115, size: 192)
!2115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2116, size: 192, elements: !263)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2117, line: 16, size: 64, elements: !2118)
!2117 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2118 = !{!2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2116, file: !2117, line: 17, baseType: !147, size: 16)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2116, file: !2117, line: 18, baseType: !147, size: 16, offset: 16)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2116, file: !2117, line: 19, baseType: !147, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2116, file: !2117, line: 19, baseType: !147, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2116, file: !2117, line: 19, baseType: !147, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2116, file: !2117, line: 19, baseType: !147, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2116, file: !2117, line: 19, baseType: !147, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2116, file: !2117, line: 20, baseType: !147, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2116, file: !2117, line: 20, baseType: !147, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2116, file: !2117, line: 20, baseType: !147, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2116, file: !2117, line: 20, baseType: !147, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2116, file: !2117, line: 20, baseType: !147, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2116, file: !2117, line: 20, baseType: !147, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2111, file: !2112, line: 491, baseType: !311, size: 64, offset: 192)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2111, file: !2112, line: 495, baseType: !144, size: 16, offset: 256)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2111, file: !2112, line: 496, baseType: !144, size: 16, offset: 272)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2111, file: !2112, line: 497, baseType: !144, size: 16, offset: 288)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2111, file: !2112, line: 498, baseType: !144, size: 16, offset: 304)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2111, file: !2112, line: 502, baseType: !311, size: 64, offset: 320)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2111, file: !2112, line: 503, baseType: !311, size: 64, offset: 384)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2111, file: !2112, line: 514, baseType: !2140, size: 256, offset: 448)
!2140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2141, size: 256, elements: !1134)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2112, line: 483, flags: DIFlagFwdDecl)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2111, file: !2112, line: 516, baseType: !311, size: 64, offset: 704)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2111, file: !2112, line: 518, baseType: !311, size: 64, offset: 768)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2111, file: !2112, line: 520, baseType: !311, size: 64, offset: 832)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2111, file: !2112, line: 521, baseType: !311, size: 64, offset: 896)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2111, file: !2112, line: 522, baseType: !311, size: 64, offset: 960)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2111, file: !2112, line: 528, baseType: !2149, size: 64, offset: 1024)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2112, line: 10, flags: DIFlagFwdDecl)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2111, file: !2112, line: 535, baseType: !311, size: 64, offset: 1088)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2111, file: !2112, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2111, file: !2112, line: 540, baseType: !2154, size: 33280, offset: 1536)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2155, line: 317, size: 33280, elements: !2156)
!2155 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2156 = !{!2157, !2158, !2159}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2154, file: !2155, line: 330, baseType: !7, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2154, file: !2155, line: 337, baseType: !311, size: 64, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2154, file: !2155, line: 348, baseType: !2160, size: 32768, offset: 512)
!2160 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2155, line: 304, size: 32768, elements: !2161)
!2161 = !{!2162, !2177, !2216, !2266, !2279}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2160, file: !2155, line: 305, baseType: !2163, size: 896)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2155, line: 12, size: 896, elements: !2164)
!2164 = !{!2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2176}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2163, file: !2155, line: 13, baseType: !179, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2163, file: !2155, line: 14, baseType: !179, size: 32, offset: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2163, file: !2155, line: 15, baseType: !179, size: 32, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2163, file: !2155, line: 16, baseType: !179, size: 32, offset: 96)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2163, file: !2155, line: 17, baseType: !179, size: 32, offset: 128)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2163, file: !2155, line: 18, baseType: !179, size: 32, offset: 160)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2163, file: !2155, line: 19, baseType: !179, size: 32, offset: 192)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2163, file: !2155, line: 22, baseType: !2173, size: 640, offset: 224)
!2173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 640, elements: !2174)
!2174 = !{!2175}
!2175 = !DISubrange(count: 20)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2163, file: !2155, line: 25, baseType: !179, size: 32, offset: 864)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2160, file: !2155, line: 306, baseType: !2178, size: 4096, align: 128)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2155, line: 34, size: 4096, align: 128, elements: !2179)
!2179 = !{!2180, !2181, !2182, !2183, !2184, !2199, !2200, !2201, !2205, !2207, !2211}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2178, file: !2155, line: 35, baseType: !147, size: 16)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2178, file: !2155, line: 36, baseType: !147, size: 16, offset: 16)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2178, file: !2155, line: 37, baseType: !147, size: 16, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2178, file: !2155, line: 38, baseType: !147, size: 16, offset: 48)
!2184 = !DIDerivedType(tag: DW_TAG_member, scope: !2178, file: !2155, line: 39, baseType: !2185, size: 128, offset: 64)
!2185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2178, file: !2155, line: 39, size: 128, elements: !2186)
!2186 = !{!2187, !2192}
!2187 = !DIDerivedType(tag: DW_TAG_member, scope: !2185, file: !2155, line: 40, baseType: !2188, size: 128)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2185, file: !2155, line: 40, size: 128, elements: !2189)
!2189 = !{!2190, !2191}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2188, file: !2155, line: 41, baseType: !404, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2188, file: !2155, line: 42, baseType: !404, size: 64, offset: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, scope: !2185, file: !2155, line: 44, baseType: !2193, size: 128)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2185, file: !2155, line: 44, size: 128, elements: !2194)
!2194 = !{!2195, !2196, !2197, !2198}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2193, file: !2155, line: 45, baseType: !179, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2193, file: !2155, line: 46, baseType: !179, size: 32, offset: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2193, file: !2155, line: 47, baseType: !179, size: 32, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2193, file: !2155, line: 48, baseType: !179, size: 32, offset: 96)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2178, file: !2155, line: 51, baseType: !179, size: 32, offset: 192)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2178, file: !2155, line: 52, baseType: !179, size: 32, offset: 224)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2178, file: !2155, line: 55, baseType: !2202, size: 1024, offset: 256)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 1024, elements: !2203)
!2203 = !{!2204}
!2204 = !DISubrange(count: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2178, file: !2155, line: 58, baseType: !2206, size: 2048, offset: 1280)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 2048, elements: !267)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2178, file: !2155, line: 60, baseType: !2208, size: 384, offset: 3328)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 384, elements: !2209)
!2209 = !{!2210}
!2210 = !DISubrange(count: 12)
!2211 = !DIDerivedType(tag: DW_TAG_member, scope: !2178, file: !2155, line: 62, baseType: !2212, size: 384, offset: 3712)
!2212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2178, file: !2155, line: 62, size: 384, elements: !2213)
!2213 = !{!2214, !2215}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2212, file: !2155, line: 63, baseType: !2208, size: 384)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2212, file: !2155, line: 64, baseType: !2208, size: 384)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2160, file: !2155, line: 307, baseType: !2217, size: 1088)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2155, line: 79, size: 1088, elements: !2218)
!2218 = !{!2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2265}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2217, file: !2155, line: 80, baseType: !179, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2217, file: !2155, line: 81, baseType: !179, size: 32, offset: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2217, file: !2155, line: 82, baseType: !179, size: 32, offset: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2217, file: !2155, line: 83, baseType: !179, size: 32, offset: 96)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2217, file: !2155, line: 84, baseType: !179, size: 32, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2217, file: !2155, line: 85, baseType: !179, size: 32, offset: 160)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2217, file: !2155, line: 86, baseType: !179, size: 32, offset: 192)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2217, file: !2155, line: 88, baseType: !2173, size: 640, offset: 224)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2217, file: !2155, line: 89, baseType: !159, size: 8, offset: 864)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2217, file: !2155, line: 90, baseType: !159, size: 8, offset: 872)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2217, file: !2155, line: 91, baseType: !159, size: 8, offset: 880)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2217, file: !2155, line: 92, baseType: !159, size: 8, offset: 888)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2217, file: !2155, line: 93, baseType: !159, size: 8, offset: 896)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2217, file: !2155, line: 94, baseType: !159, size: 8, offset: 904)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2217, file: !2155, line: 95, baseType: !2234, size: 64, offset: 960)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2236, line: 11, size: 128, elements: !2237)
!2236 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2237 = !{!2238, !2239}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2235, file: !2236, line: 12, baseType: !297, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2235, file: !2236, line: 13, baseType: !2240, size: 64, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2242, line: 56, size: 1344, elements: !2243)
!2242 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2243 = !{!2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2241, file: !2242, line: 61, baseType: !311, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2241, file: !2242, line: 62, baseType: !311, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2241, file: !2242, line: 63, baseType: !311, size: 64, offset: 128)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2241, file: !2242, line: 64, baseType: !311, size: 64, offset: 192)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2241, file: !2242, line: 65, baseType: !311, size: 64, offset: 256)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2241, file: !2242, line: 66, baseType: !311, size: 64, offset: 320)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2241, file: !2242, line: 68, baseType: !311, size: 64, offset: 384)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2241, file: !2242, line: 69, baseType: !311, size: 64, offset: 448)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2241, file: !2242, line: 70, baseType: !311, size: 64, offset: 512)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2241, file: !2242, line: 71, baseType: !311, size: 64, offset: 576)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2241, file: !2242, line: 72, baseType: !311, size: 64, offset: 640)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2241, file: !2242, line: 73, baseType: !311, size: 64, offset: 704)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2241, file: !2242, line: 74, baseType: !311, size: 64, offset: 768)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2241, file: !2242, line: 75, baseType: !311, size: 64, offset: 832)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2241, file: !2242, line: 76, baseType: !311, size: 64, offset: 896)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2241, file: !2242, line: 81, baseType: !311, size: 64, offset: 960)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2241, file: !2242, line: 83, baseType: !311, size: 64, offset: 1024)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2241, file: !2242, line: 84, baseType: !311, size: 64, offset: 1088)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2241, file: !2242, line: 85, baseType: !311, size: 64, offset: 1152)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2241, file: !2242, line: 86, baseType: !311, size: 64, offset: 1216)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2241, file: !2242, line: 87, baseType: !311, size: 64, offset: 1280)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2217, file: !2155, line: 96, baseType: !179, size: 32, offset: 1024)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2160, file: !2155, line: 308, baseType: !2267, size: 4608, align: 512)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2155, line: 289, size: 4608, align: 512, elements: !2268)
!2268 = !{!2269, !2270, !2277}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2267, file: !2155, line: 290, baseType: !2178, size: 4096, align: 128)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2267, file: !2155, line: 291, baseType: !2271, size: 512, offset: 4096)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2155, line: 268, size: 512, elements: !2272)
!2272 = !{!2273, !2274, !2275}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2271, file: !2155, line: 269, baseType: !404, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2271, file: !2155, line: 270, baseType: !404, size: 64, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2271, file: !2155, line: 271, baseType: !2276, size: 384, offset: 128)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 384, elements: !1600)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2267, file: !2155, line: 292, baseType: !2278, offset: 4608)
!2278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, elements: !1698)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2160, file: !2155, line: 309, baseType: !2280, size: 32768)
!2280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 32768, elements: !2281)
!2281 = !{!2282}
!2282 = !DISubrange(count: 4096)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1192, file: !704, line: 378, baseType: !2284, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1188, file: !704, line: 384, baseType: !1479, size: 192, offset: 192)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !957, file: !704, line: 500, baseType: !221, offset: 6656)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !957, file: !704, line: 501, baseType: !2288, size: 64, offset: 6656)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !704, line: 387, flags: DIFlagFwdDecl)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !957, file: !704, line: 516, baseType: !1688, size: 64, offset: 6720)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !957, file: !704, line: 519, baseType: !339, size: 64, offset: 6784)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !957, file: !704, line: 521, baseType: !2293, size: 64, offset: 6848)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !704, line: 521, flags: DIFlagFwdDecl)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !957, file: !704, line: 545, baseType: !728, size: 32, offset: 6912)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !957, file: !704, line: 548, baseType: !472, size: 8, offset: 6944)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !957, file: !704, line: 550, baseType: !2298, offset: 6952)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2299, line: 142, elements: !235)
!2299 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !957, file: !704, line: 554, baseType: !1930, size: 256, offset: 6976)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !957, file: !704, line: 557, baseType: !179, size: 32, offset: 7232)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !954, file: !704, line: 565, baseType: !2303, offset: 7296)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, elements: !2304)
!2304 = !{!2305}
!2305 = !DISubrange(count: -1)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !950, file: !704, line: 151, baseType: !728, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !943, file: !704, line: 156, baseType: !221, offset: 256)
!2308 = !DIDerivedType(tag: DW_TAG_member, scope: !708, file: !704, line: 159, baseType: !2309, size: 128)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !708, file: !704, line: 159, size: 128, elements: !2310)
!2310 = !{!2311, !2375}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2309, file: !704, line: 161, baseType: !2312, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !38, line: 110, size: 1152, elements: !2314)
!2314 = !{!2315, !2325, !2346, !2347, !2348, !2349, !2350, !2362, !2363, !2364}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2313, file: !38, line: 111, baseType: !2316, size: 384)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !38, line: 19, size: 384, elements: !2317)
!2317 = !{!2318, !2320, !2321, !2322, !2323, !2324}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2316, file: !38, line: 20, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !311)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2316, file: !38, line: 21, baseType: !2319, size: 64, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2316, file: !38, line: 22, baseType: !2319, size: 64, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2316, file: !38, line: 23, baseType: !311, size: 64, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2316, file: !38, line: 24, baseType: !311, size: 64, offset: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2316, file: !38, line: 25, baseType: !311, size: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2313, file: !38, line: 112, baseType: !2326, size: 64, offset: 384)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2328, line: 105, size: 128, elements: !2329)
!2328 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2329 = !{!2330, !2331}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2327, file: !2328, line: 110, baseType: !311, size: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2327, file: !2328, line: 118, baseType: !2332, size: 64, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2328, line: 95, size: 448, elements: !2334)
!2334 = !{!2335, !2336, !2341, !2342, !2343, !2344, !2345}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2333, file: !2328, line: 96, baseType: !752, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2333, file: !2328, line: 97, baseType: !2337, size: 64, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2328, line: 60, baseType: !2339)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{null, !2326}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2333, file: !2328, line: 98, baseType: !2337, size: 64, offset: 128)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2333, file: !2328, line: 99, baseType: !472, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2333, file: !2328, line: 100, baseType: !472, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2333, file: !2328, line: 101, baseType: !352, size: 128, align: 64, offset: 256)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2333, file: !2328, line: 102, baseType: !2326, size: 64, offset: 384)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2313, file: !38, line: 113, baseType: !2327, size: 128, offset: 448)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2313, file: !38, line: 114, baseType: !1479, size: 192, offset: 576)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2313, file: !38, line: 115, baseType: !37, size: 32, offset: 768)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2313, file: !38, line: 116, baseType: !7, size: 32, offset: 800)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2313, file: !38, line: 117, baseType: !2351, size: 64, offset: 832)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2353)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !38, line: 67, size: 256, elements: !2354)
!2354 = !{!2355, !2356, !2360, !2361}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2353, file: !38, line: 73, baseType: !821, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2353, file: !38, line: 78, baseType: !2357, size: 64, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{null, !2312}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2353, file: !38, line: 83, baseType: !2357, size: 64, offset: 128)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2353, file: !38, line: 89, baseType: !1006, size: 64, offset: 192)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2313, file: !38, line: 118, baseType: !169, size: 64, offset: 896)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2313, file: !38, line: 119, baseType: !168, size: 32, offset: 960)
!2364 = !DIDerivedType(tag: DW_TAG_member, scope: !2313, file: !38, line: 120, baseType: !2365, size: 128, offset: 1024)
!2365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2313, file: !38, line: 120, size: 128, elements: !2366)
!2366 = !{!2367, !2373}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2365, file: !38, line: 121, baseType: !2368, size: 128)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2369, line: 6, size: 128, elements: !2370)
!2369 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2370 = !{!2371, !2372}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2368, file: !2369, line: 7, baseType: !404, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2368, file: !2369, line: 8, baseType: !404, size: 64, offset: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2365, file: !38, line: 122, baseType: !2374)
!2374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2368, elements: !1698)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2309, file: !704, line: 162, baseType: !169, size: 64, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !708, file: !704, line: 176, baseType: !352, size: 128, align: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, scope: !703, file: !704, line: 179, baseType: !2378, size: 32, offset: 384)
!2378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !703, file: !704, line: 179, size: 32, elements: !2379)
!2379 = !{!2380, !2381, !2382, !2383}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2378, file: !704, line: 184, baseType: !728, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2378, file: !704, line: 192, baseType: !7, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2378, file: !704, line: 194, baseType: !7, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2378, file: !704, line: 195, baseType: !168, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !703, file: !704, line: 199, baseType: !728, size: 32, offset: 416)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !638, file: !51, line: 1964, baseType: !2386, size: 64, offset: 1344)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{!297, !581, !2389}
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2391, line: 12, size: 256, elements: !2392)
!2391 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2392 = !{!2393, !2394, !2395, !2396, !2397}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2390, file: !2391, line: 13, baseType: !149, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2390, file: !2391, line: 16, baseType: !168, size: 32, offset: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2390, file: !2391, line: 23, baseType: !311, size: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2390, file: !2391, line: 30, baseType: !311, size: 64, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2390, file: !2391, line: 33, baseType: !2398, size: 64, offset: 192)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !704, line: 27, flags: DIFlagFwdDecl)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !638, file: !51, line: 1966, baseType: !2386, size: 64, offset: 1408)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !582, file: !51, line: 1424, baseType: !2402, size: 64, offset: 448)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2404)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !45, line: 322, size: 704, elements: !2405)
!2405 = !{!2406, !2452, !2456, !2460, !2461, !2462, !2463, !2464, !2469, !2474, !2478}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2404, file: !45, line: 323, baseType: !2407, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!168, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !45, line: 294, size: 1600, elements: !2412)
!2412 = !{!2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2437, !2438, !2439}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2411, file: !45, line: 295, baseType: !620, size: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2411, file: !45, line: 296, baseType: !208, size: 128, offset: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2411, file: !45, line: 297, baseType: !208, size: 128, offset: 256)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2411, file: !45, line: 298, baseType: !208, size: 128, offset: 384)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2411, file: !45, line: 299, baseType: !1152, size: 192, offset: 512)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2411, file: !45, line: 300, baseType: !221, offset: 704)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2411, file: !45, line: 301, baseType: !728, size: 32, offset: 704)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2411, file: !45, line: 302, baseType: !581, size: 64, offset: 768)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2411, file: !45, line: 303, baseType: !2422, size: 64, offset: 832)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !45, line: 68, size: 64, elements: !2423)
!2423 = !{!2424, !2436}
!2424 = !DIDerivedType(tag: DW_TAG_member, scope: !2422, file: !45, line: 69, baseType: !2425, size: 32)
!2425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2422, file: !45, line: 69, size: 32, elements: !2426)
!2426 = !{!2427, !2428, !2429}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2425, file: !45, line: 70, baseType: !417, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2425, file: !45, line: 71, baseType: !425, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2425, file: !45, line: 72, baseType: !2430, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2431, line: 24, baseType: !2432)
!2431 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2431, line: 22, size: 32, elements: !2433)
!2433 = !{!2434}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2432, file: !2431, line: 23, baseType: !2435, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2431, line: 20, baseType: !423)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2422, file: !45, line: 74, baseType: !44, size: 32, offset: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2411, file: !45, line: 304, baseType: !513, size: 64, offset: 896)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2411, file: !45, line: 305, baseType: !311, size: 64, offset: 960)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2411, file: !45, line: 306, baseType: !2440, size: 576, offset: 1024)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !45, line: 205, size: 576, elements: !2441)
!2441 = !{!2442, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2440, file: !45, line: 206, baseType: !2443, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !45, line: 66, baseType: !515)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2440, file: !45, line: 207, baseType: !2443, size: 64, offset: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2440, file: !45, line: 208, baseType: !2443, size: 64, offset: 128)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2440, file: !45, line: 209, baseType: !2443, size: 64, offset: 192)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2440, file: !45, line: 210, baseType: !2443, size: 64, offset: 256)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2440, file: !45, line: 211, baseType: !2443, size: 64, offset: 320)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2440, file: !45, line: 212, baseType: !2443, size: 64, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2440, file: !45, line: 213, baseType: !521, size: 64, offset: 448)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2440, file: !45, line: 214, baseType: !521, size: 64, offset: 512)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2404, file: !45, line: 324, baseType: !2453, size: 64, offset: 64)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{!2410, !581, !168}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2404, file: !45, line: 325, baseType: !2457, size: 64, offset: 128)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DISubroutineType(types: !2459)
!2459 = !{null, !2410}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2404, file: !45, line: 326, baseType: !2407, size: 64, offset: 192)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2404, file: !45, line: 327, baseType: !2407, size: 64, offset: 256)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2404, file: !45, line: 328, baseType: !2407, size: 64, offset: 320)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2404, file: !45, line: 329, baseType: !666, size: 64, offset: 384)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2404, file: !45, line: 332, baseType: !2465, size: 64, offset: 448)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{!2468, !411}
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2404, file: !45, line: 333, baseType: !2470, size: 64, offset: 512)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{!168, !411, !2473}
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2404, file: !45, line: 335, baseType: !2475, size: 64, offset: 576)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!168, !411, !2468}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2404, file: !45, line: 337, baseType: !2479, size: 64, offset: 640)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = !DISubroutineType(types: !2481)
!2481 = !{!168, !581, !2482}
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !582, file: !51, line: 1425, baseType: !2484, size: 64, offset: 512)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2486)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !45, line: 428, size: 704, elements: !2487)
!2487 = !{!2488, !2492, !2493, !2497, !2498, !2499, !2514, !2537, !2541, !2542, !2565}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2486, file: !45, line: 429, baseType: !2489, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!168, !581, !168, !168, !531}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2486, file: !45, line: 430, baseType: !666, size: 64, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2486, file: !45, line: 431, baseType: !2494, size: 64, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!168, !581, !7}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2486, file: !45, line: 432, baseType: !2494, size: 64, offset: 192)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2486, file: !45, line: 433, baseType: !666, size: 64, offset: 256)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2486, file: !45, line: 434, baseType: !2500, size: 64, offset: 320)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{!168, !581, !168, !2503}
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !45, line: 415, size: 256, elements: !2505)
!2505 = !{!2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2504, file: !45, line: 416, baseType: !168, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2504, file: !45, line: 417, baseType: !7, size: 32, offset: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2504, file: !45, line: 418, baseType: !7, size: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2504, file: !45, line: 420, baseType: !7, size: 32, offset: 96)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2504, file: !45, line: 421, baseType: !7, size: 32, offset: 128)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2504, file: !45, line: 422, baseType: !7, size: 32, offset: 160)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2504, file: !45, line: 423, baseType: !7, size: 32, offset: 192)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2504, file: !45, line: 424, baseType: !7, size: 32, offset: 224)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2486, file: !45, line: 435, baseType: !2515, size: 64, offset: 384)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{!168, !581, !2422, !2518}
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !45, line: 343, size: 960, elements: !2520)
!2520 = !{!2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2519, file: !45, line: 344, baseType: !168, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2519, file: !45, line: 345, baseType: !404, size: 64, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2519, file: !45, line: 346, baseType: !404, size: 64, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2519, file: !45, line: 347, baseType: !404, size: 64, offset: 192)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2519, file: !45, line: 348, baseType: !404, size: 64, offset: 256)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2519, file: !45, line: 349, baseType: !404, size: 64, offset: 320)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2519, file: !45, line: 350, baseType: !404, size: 64, offset: 384)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2519, file: !45, line: 351, baseType: !758, size: 64, offset: 448)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2519, file: !45, line: 353, baseType: !758, size: 64, offset: 512)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2519, file: !45, line: 354, baseType: !168, size: 32, offset: 576)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2519, file: !45, line: 355, baseType: !168, size: 32, offset: 608)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2519, file: !45, line: 356, baseType: !404, size: 64, offset: 640)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2519, file: !45, line: 357, baseType: !404, size: 64, offset: 704)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2519, file: !45, line: 358, baseType: !404, size: 64, offset: 768)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2519, file: !45, line: 359, baseType: !758, size: 64, offset: 832)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2519, file: !45, line: 360, baseType: !168, size: 32, offset: 896)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2486, file: !45, line: 436, baseType: !2538, size: 64, offset: 448)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{!168, !581, !2482, !2518}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2486, file: !45, line: 438, baseType: !2515, size: 64, offset: 512)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2486, file: !45, line: 439, baseType: !2543, size: 64, offset: 576)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!168, !581, !2546}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !45, line: 409, size: 1408, elements: !2548)
!2548 = !{!2549, !2550}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2547, file: !45, line: 410, baseType: !7, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2547, file: !45, line: 411, baseType: !2551, size: 1344, offset: 64)
!2551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2552, size: 1344, elements: !263)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !45, line: 395, size: 448, elements: !2553)
!2553 = !{!2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2564}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2552, file: !45, line: 396, baseType: !7, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2552, file: !45, line: 397, baseType: !7, size: 32, offset: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2552, file: !45, line: 399, baseType: !7, size: 32, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2552, file: !45, line: 400, baseType: !7, size: 32, offset: 96)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2552, file: !45, line: 401, baseType: !7, size: 32, offset: 128)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2552, file: !45, line: 402, baseType: !7, size: 32, offset: 160)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2552, file: !45, line: 403, baseType: !7, size: 32, offset: 192)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2552, file: !45, line: 404, baseType: !406, size: 64, offset: 256)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2552, file: !45, line: 405, baseType: !2563, size: 64, offset: 320)
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !150, line: 126, baseType: !404)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2552, file: !45, line: 406, baseType: !2563, size: 64, offset: 384)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2486, file: !45, line: 440, baseType: !2494, size: 64, offset: 640)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !582, file: !51, line: 1426, baseType: !2567, size: 64, offset: 576)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2569)
!2569 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !51, line: 49, flags: DIFlagFwdDecl)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !582, file: !51, line: 1427, baseType: !311, size: 64, offset: 640)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !582, file: !51, line: 1428, baseType: !311, size: 64, offset: 704)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !582, file: !51, line: 1429, baseType: !311, size: 64, offset: 768)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !582, file: !51, line: 1430, baseType: !369, size: 64, offset: 832)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !582, file: !51, line: 1431, baseType: !748, size: 256, offset: 896)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !582, file: !51, line: 1432, baseType: !168, size: 32, offset: 1152)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !582, file: !51, line: 1433, baseType: !728, size: 32, offset: 1184)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !582, file: !51, line: 1437, baseType: !2578, size: 64, offset: 1216)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64)
!2580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2581)
!2581 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !51, line: 1437, flags: DIFlagFwdDecl)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !582, file: !51, line: 1449, baseType: !2583, size: 64, offset: 1280)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !385, line: 34, size: 64, elements: !2584)
!2584 = !{!2585}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2583, file: !385, line: 35, baseType: !388, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !582, file: !51, line: 1450, baseType: !208, size: 128, offset: 1344)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !582, file: !51, line: 1451, baseType: !2588, size: 64, offset: 1472)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !51, line: 699, flags: DIFlagFwdDecl)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !582, file: !51, line: 1452, baseType: !1896, size: 64, offset: 1536)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !582, file: !51, line: 1453, baseType: !2592, size: 64, offset: 1600)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !51, line: 1453, flags: DIFlagFwdDecl)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !582, file: !51, line: 1454, baseType: !620, size: 128, offset: 1664)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !582, file: !51, line: 1455, baseType: !7, size: 32, offset: 1792)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !582, file: !51, line: 1456, baseType: !2597, size: 2432, offset: 1856)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !45, line: 518, size: 2432, elements: !2598)
!2598 = !{!2599, !2600, !2601, !2603, !2635}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2597, file: !45, line: 519, baseType: !7, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2597, file: !45, line: 520, baseType: !748, size: 256, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2597, file: !45, line: 521, baseType: !2602, size: 192, offset: 320)
!2602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 192, elements: !263)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2597, file: !45, line: 522, baseType: !2604, size: 1728, offset: 512)
!2604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2605, size: 1728, elements: !263)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !45, line: 222, size: 576, elements: !2606)
!2606 = !{!2607, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2605, file: !45, line: 223, baseType: !2608, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !45, line: 443, size: 256, elements: !2610)
!2610 = !{!2611, !2612, !2625, !2626}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2609, file: !45, line: 444, baseType: !168, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2609, file: !45, line: 445, baseType: !2613, size: 64, offset: 64)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2615)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !45, line: 310, size: 512, elements: !2616)
!2616 = !{!2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2615, file: !45, line: 311, baseType: !666, size: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2615, file: !45, line: 312, baseType: !666, size: 64, offset: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2615, file: !45, line: 313, baseType: !666, size: 64, offset: 128)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2615, file: !45, line: 314, baseType: !666, size: 64, offset: 192)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2615, file: !45, line: 315, baseType: !2407, size: 64, offset: 256)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2615, file: !45, line: 316, baseType: !2407, size: 64, offset: 320)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2615, file: !45, line: 317, baseType: !2407, size: 64, offset: 384)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2615, file: !45, line: 318, baseType: !2479, size: 64, offset: 448)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2609, file: !45, line: 446, baseType: !139, size: 64, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2609, file: !45, line: 447, baseType: !2608, size: 64, offset: 192)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2605, file: !45, line: 224, baseType: !168, size: 32, offset: 64)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2605, file: !45, line: 226, baseType: !208, size: 128, offset: 128)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2605, file: !45, line: 227, baseType: !311, size: 64, offset: 256)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2605, file: !45, line: 228, baseType: !7, size: 32, offset: 320)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2605, file: !45, line: 229, baseType: !7, size: 32, offset: 352)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2605, file: !45, line: 230, baseType: !2443, size: 64, offset: 384)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2605, file: !45, line: 231, baseType: !2443, size: 64, offset: 448)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2605, file: !45, line: 232, baseType: !169, size: 64, offset: 512)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2597, file: !45, line: 523, baseType: !2636, size: 192, offset: 2240)
!2636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2613, size: 192, elements: !263)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !582, file: !51, line: 1458, baseType: !2638, size: 2112, offset: 4288)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !51, line: 1410, size: 2112, elements: !2639)
!2639 = !{!2640, !2641, !2642}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2638, file: !51, line: 1411, baseType: !168, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2638, file: !51, line: 1412, baseType: !1458, size: 128, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2638, file: !51, line: 1413, baseType: !2643, size: 1920, offset: 192)
!2643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2644, size: 1920, elements: !263)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2645, line: 12, size: 640, elements: !2646)
!2645 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2646 = !{!2647, !2655, !2657, !2662, !2663}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2644, file: !2645, line: 13, baseType: !2648, size: 320)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2649, line: 17, size: 320, elements: !2650)
!2649 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2650 = !{!2651, !2652, !2653, !2654}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2648, file: !2649, line: 18, baseType: !168, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2648, file: !2649, line: 19, baseType: !168, size: 32, offset: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2648, file: !2649, line: 20, baseType: !1458, size: 128, offset: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2648, file: !2649, line: 22, baseType: !352, size: 128, align: 64, offset: 192)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2644, file: !2645, line: 14, baseType: !2656, size: 64, offset: 320)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2644, file: !2645, line: 15, baseType: !2658, size: 64, offset: 384)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2659, line: 16, size: 64, elements: !2660)
!2659 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2660 = !{!2661}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2658, file: !2659, line: 17, baseType: !1195, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2644, file: !2645, line: 16, baseType: !1458, size: 128, offset: 448)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2644, file: !2645, line: 17, baseType: !728, size: 32, offset: 576)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !582, file: !51, line: 1465, baseType: !169, size: 64, offset: 6400)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !582, file: !51, line: 1468, baseType: !179, size: 32, offset: 6464)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !582, file: !51, line: 1470, baseType: !521, size: 64, offset: 6528)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !582, file: !51, line: 1471, baseType: !521, size: 64, offset: 6592)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !582, file: !51, line: 1473, baseType: !180, size: 32, offset: 6656)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !582, file: !51, line: 1474, baseType: !2670, size: 64, offset: 6720)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !51, line: 603, flags: DIFlagFwdDecl)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !582, file: !51, line: 1477, baseType: !2673, size: 256, offset: 6784)
!2673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 256, elements: !2203)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !582, file: !51, line: 1478, baseType: !2675, size: 128, offset: 7040)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2676, line: 18, baseType: !2677)
!2676 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2676, line: 16, size: 128, elements: !2678)
!2678 = !{!2679}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2677, file: !2676, line: 17, baseType: !2680, size: 128)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 128, elements: !176)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !582, file: !51, line: 1480, baseType: !7, size: 32, offset: 7168)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !582, file: !51, line: 1481, baseType: !2683, size: 32, offset: 7200)
!2683 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !150, line: 150, baseType: !7)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !582, file: !51, line: 1487, baseType: !1152, size: 192, offset: 7232)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !582, file: !51, line: 1493, baseType: !155, size: 64, offset: 7424)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !582, file: !51, line: 1495, baseType: !2687, size: 64, offset: 7488)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2689)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !367, line: 135, size: 1024, align: 512, elements: !2690)
!2690 = !{!2691, !2695, !2696, !2703, !2709, !2713, !2717, !2721, !2722, !2726, !2730, !2735, !2739}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2689, file: !367, line: 136, baseType: !2692, size: 64)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!168, !369, !7}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2689, file: !367, line: 137, baseType: !2692, size: 64, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2689, file: !367, line: 138, baseType: !2697, size: 64, offset: 128)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{!168, !2700, !2702}
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !370)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2689, file: !367, line: 139, baseType: !2704, size: 64, offset: 192)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64)
!2705 = !DISubroutineType(types: !2706)
!2706 = !{!168, !2700, !7, !155, !2707}
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!2708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !393)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2689, file: !367, line: 141, baseType: !2710, size: 64, offset: 256)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!168, !2700}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2689, file: !367, line: 142, baseType: !2714, size: 64, offset: 320)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!168, !369}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2689, file: !367, line: 143, baseType: !2718, size: 64, offset: 384)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{null, !369}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2689, file: !367, line: 144, baseType: !2718, size: 64, offset: 448)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2689, file: !367, line: 145, baseType: !2723, size: 64, offset: 512)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{null, !369, !411}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2689, file: !367, line: 146, baseType: !2727, size: 64, offset: 576)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!262, !369, !262, !168}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2689, file: !367, line: 147, baseType: !2731, size: 64, offset: 640)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!365, !2734}
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2689, file: !367, line: 148, baseType: !2736, size: 64, offset: 704)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!168, !531, !472}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2689, file: !367, line: 149, baseType: !2740, size: 64, offset: 768)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DISubroutineType(types: !2742)
!2742 = !{!369, !369, !2743}
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !412)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !582, file: !51, line: 1500, baseType: !168, size: 32, offset: 7552)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !582, file: !51, line: 1502, baseType: !2747, size: 448, offset: 7616)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2391, line: 60, size: 448, elements: !2748)
!2748 = !{!2749, !2754, !2755, !2756, !2757, !2758, !2759}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2747, file: !2391, line: 61, baseType: !2750, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!311, !2753, !2389}
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2747, file: !2391, line: 63, baseType: !2750, size: 64, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2747, file: !2391, line: 66, baseType: !297, size: 64, offset: 128)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2747, file: !2391, line: 67, baseType: !168, size: 32, offset: 192)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2747, file: !2391, line: 68, baseType: !7, size: 32, offset: 224)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2747, file: !2391, line: 71, baseType: !208, size: 128, offset: 256)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2747, file: !2391, line: 77, baseType: !2760, size: 64, offset: 384)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !582, file: !51, line: 1505, baseType: !752, size: 64, offset: 8064)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !582, file: !51, line: 1508, baseType: !752, size: 64, offset: 8128)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !582, file: !51, line: 1511, baseType: !168, size: 32, offset: 8192)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !582, file: !51, line: 1514, baseType: !888, size: 32, offset: 8224)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !582, file: !51, line: 1517, baseType: !2766, size: 64, offset: 8256)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1931, line: 18, flags: DIFlagFwdDecl)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !582, file: !51, line: 1518, baseType: !616, size: 64, offset: 8320)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !582, file: !51, line: 1525, baseType: !1688, size: 64, offset: 8384)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !582, file: !51, line: 1532, baseType: !2771, size: 64, offset: 8448)
!2771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2772, line: 52, size: 64, elements: !2773)
!2772 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2773 = !{!2774}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2771, file: !2772, line: 53, baseType: !2775, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2772, line: 40, size: 256, elements: !2777)
!2777 = !{!2778, !2779, !2784}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2776, file: !2772, line: 42, baseType: !221)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2776, file: !2772, line: 44, baseType: !2780, size: 192)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2772, line: 28, size: 192, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2780, file: !2772, line: 29, baseType: !208, size: 128)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2780, file: !2772, line: 31, baseType: !297, size: 64, offset: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2776, file: !2772, line: 49, baseType: !297, size: 64, offset: 192)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !582, file: !51, line: 1533, baseType: !2771, size: 64, offset: 8512)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !582, file: !51, line: 1534, baseType: !352, size: 128, align: 64, offset: 8576)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !582, file: !51, line: 1535, baseType: !1930, size: 256, offset: 8704)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !582, file: !51, line: 1537, baseType: !1152, size: 192, offset: 8960)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !582, file: !51, line: 1542, baseType: !168, size: 32, offset: 9152)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !582, file: !51, line: 1545, baseType: !221, offset: 9184)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !582, file: !51, line: 1546, baseType: !208, size: 128, offset: 9216)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !582, file: !51, line: 1548, baseType: !221, offset: 9344)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !582, file: !51, line: 1549, baseType: !208, size: 128, offset: 9344)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !412, file: !51, line: 624, baseType: !715, size: 64, offset: 256)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !412, file: !51, line: 631, baseType: !311, size: 64, offset: 320)
!2796 = !DIDerivedType(tag: DW_TAG_member, scope: !412, file: !51, line: 639, baseType: !2797, size: 32, offset: 384)
!2797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !412, file: !51, line: 639, size: 32, elements: !2798)
!2798 = !{!2799, !2801}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2797, file: !51, line: 640, baseType: !2800, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2797, file: !51, line: 641, baseType: !7, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !412, file: !51, line: 643, baseType: !495, size: 32, offset: 416)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !412, file: !51, line: 644, baseType: !513, size: 64, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !412, file: !51, line: 645, baseType: !517, size: 128, offset: 512)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !412, file: !51, line: 646, baseType: !517, size: 128, offset: 640)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !412, file: !51, line: 647, baseType: !517, size: 128, offset: 768)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !412, file: !51, line: 648, baseType: !221, offset: 896)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !412, file: !51, line: 649, baseType: !144, size: 16, offset: 896)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !412, file: !51, line: 650, baseType: !159, size: 8, offset: 912)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !412, file: !51, line: 651, baseType: !159, size: 8, offset: 920)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !412, file: !51, line: 652, baseType: !2563, size: 64, offset: 960)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !412, file: !51, line: 659, baseType: !311, size: 64, offset: 1024)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !412, file: !51, line: 660, baseType: !748, size: 256, offset: 1088)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !412, file: !51, line: 662, baseType: !311, size: 64, offset: 1344)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !412, file: !51, line: 663, baseType: !311, size: 64, offset: 1408)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !412, file: !51, line: 665, baseType: !620, size: 128, offset: 1472)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !412, file: !51, line: 666, baseType: !208, size: 128, offset: 1600)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !412, file: !51, line: 675, baseType: !208, size: 128, offset: 1728)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !412, file: !51, line: 676, baseType: !208, size: 128, offset: 1856)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !412, file: !51, line: 677, baseType: !208, size: 128, offset: 1984)
!2821 = !DIDerivedType(tag: DW_TAG_member, scope: !412, file: !51, line: 678, baseType: !2822, size: 128, offset: 2112)
!2822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !412, file: !51, line: 678, size: 128, elements: !2823)
!2823 = !{!2824, !2825}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2822, file: !51, line: 679, baseType: !616, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2822, file: !51, line: 680, baseType: !352, size: 128, align: 64)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !412, file: !51, line: 682, baseType: !754, size: 64, offset: 2240)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !412, file: !51, line: 683, baseType: !754, size: 64, offset: 2304)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !412, file: !51, line: 684, baseType: !728, size: 32, offset: 2368)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !412, file: !51, line: 685, baseType: !728, size: 32, offset: 2400)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !412, file: !51, line: 686, baseType: !728, size: 32, offset: 2432)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !412, file: !51, line: 688, baseType: !728, size: 32, offset: 2464)
!2832 = !DIDerivedType(tag: DW_TAG_member, scope: !412, file: !51, line: 690, baseType: !2833, size: 64, offset: 2496)
!2833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !412, file: !51, line: 690, size: 64, elements: !2834)
!2834 = !{!2835, !3057}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2833, file: !51, line: 691, baseType: !2836, size: 64)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2838)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !51, line: 1822, size: 2048, elements: !2839)
!2839 = !{!2840, !2841, !2845, !2850, !2854, !2855, !2856, !2860, !2873, !2874, !2881, !2885, !2886, !2890, !2891, !2895, !2900, !2901, !2905, !2909, !3017, !3021, !3022, !3026, !3027, !3031, !3035, !3040, !3044, !3048, !3052, !3056}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2838, file: !51, line: 1823, baseType: !139, size: 64)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2838, file: !51, line: 1824, baseType: !2842, size: 64, offset: 64)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!513, !339, !513, !168}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2838, file: !51, line: 1825, baseType: !2846, size: 64, offset: 128)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{!293, !339, !262, !308, !2849}
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2838, file: !51, line: 1826, baseType: !2851, size: 64, offset: 192)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DISubroutineType(types: !2853)
!2853 = !{!293, !339, !155, !308, !2849}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2838, file: !51, line: 1827, baseType: !825, size: 64, offset: 256)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2838, file: !51, line: 1828, baseType: !825, size: 64, offset: 320)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2838, file: !51, line: 1829, baseType: !2857, size: 64, offset: 384)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!168, !828, !472}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2838, file: !51, line: 1830, baseType: !2861, size: 64, offset: 448)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{!168, !339, !2864}
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !51, line: 1776, size: 128, elements: !2866)
!2866 = !{!2867, !2872}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2865, file: !51, line: 1777, baseType: !2868, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !51, line: 1773, baseType: !2869)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!168, !2864, !155, !168, !513, !404, !7}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2865, file: !51, line: 1778, baseType: !513, size: 64, offset: 64)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2838, file: !51, line: 1831, baseType: !2861, size: 64, offset: 512)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2838, file: !51, line: 1832, baseType: !2875, size: 64, offset: 576)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 64)
!2876 = !DISubroutineType(types: !2877)
!2877 = !{!2878, !339, !2879}
!2878 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !146, line: 52, baseType: !7)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !51, line: 56, flags: DIFlagFwdDecl)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2838, file: !51, line: 1833, baseType: !2882, size: 64, offset: 640)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!297, !339, !7, !311}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2838, file: !51, line: 1834, baseType: !2882, size: 64, offset: 704)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2838, file: !51, line: 1835, baseType: !2887, size: 64, offset: 768)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!168, !339, !960}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2838, file: !51, line: 1836, baseType: !311, size: 64, offset: 832)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2838, file: !51, line: 1837, baseType: !2892, size: 64, offset: 896)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{!168, !411, !339}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2838, file: !51, line: 1838, baseType: !2896, size: 64, offset: 960)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!168, !339, !2899}
!2899 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !51, line: 1007, baseType: !169)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2838, file: !51, line: 1839, baseType: !2892, size: 64, offset: 1024)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2838, file: !51, line: 1840, baseType: !2902, size: 64, offset: 1088)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 64)
!2903 = !DISubroutineType(types: !2904)
!2904 = !{!168, !339, !513, !513, !168}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2838, file: !51, line: 1841, baseType: !2906, size: 64, offset: 1152)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DISubroutineType(types: !2908)
!2908 = !{!168, !168, !339, !168}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2838, file: !51, line: 1842, baseType: !2910, size: 64, offset: 1216)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!168, !339, !168, !2913}
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 64)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !51, line: 1062, size: 1664, elements: !2915)
!2915 = !{!2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2947, !2948, !2949, !2962, !2993}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2914, file: !51, line: 1063, baseType: !2913, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2914, file: !51, line: 1064, baseType: !208, size: 128, offset: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2914, file: !51, line: 1065, baseType: !620, size: 128, offset: 192)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2914, file: !51, line: 1066, baseType: !208, size: 128, offset: 320)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2914, file: !51, line: 1069, baseType: !208, size: 128, offset: 448)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2914, file: !51, line: 1072, baseType: !2899, size: 64, offset: 576)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2914, file: !51, line: 1073, baseType: !7, size: 32, offset: 640)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2914, file: !51, line: 1074, baseType: !161, size: 8, offset: 672)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2914, file: !51, line: 1075, baseType: !7, size: 32, offset: 704)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2914, file: !51, line: 1076, baseType: !168, size: 32, offset: 736)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2914, file: !51, line: 1077, baseType: !1458, size: 128, offset: 768)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2914, file: !51, line: 1078, baseType: !339, size: 64, offset: 896)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2914, file: !51, line: 1079, baseType: !513, size: 64, offset: 960)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2914, file: !51, line: 1080, baseType: !513, size: 64, offset: 1024)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2914, file: !51, line: 1082, baseType: !2931, size: 64, offset: 1088)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !51, line: 1314, size: 320, elements: !2933)
!2933 = !{!2934, !2942, !2943, !2944, !2945, !2946}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2932, file: !51, line: 1315, baseType: !2935)
!2935 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2936, line: 20, baseType: !2937)
!2936 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2936, line: 11, elements: !2938)
!2938 = !{!2939}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2937, file: !2936, line: 12, baseType: !2940)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !233, line: 33, baseType: !2941)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !233, line: 31, elements: !235)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2932, file: !51, line: 1316, baseType: !168, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2932, file: !51, line: 1317, baseType: !168, size: 32, offset: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2932, file: !51, line: 1318, baseType: !2931, size: 64, offset: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2932, file: !51, line: 1319, baseType: !339, size: 64, offset: 128)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2932, file: !51, line: 1320, baseType: !352, size: 128, align: 64, offset: 192)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2914, file: !51, line: 1084, baseType: !311, size: 64, offset: 1152)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2914, file: !51, line: 1085, baseType: !311, size: 64, offset: 1216)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2914, file: !51, line: 1087, baseType: !2950, size: 64, offset: 1280)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2952)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !51, line: 1011, size: 128, elements: !2953)
!2953 = !{!2954, !2958}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2952, file: !51, line: 1012, baseType: !2955, size: 64)
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 64)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{null, !2913, !2913}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2952, file: !51, line: 1013, baseType: !2959, size: 64, offset: 64)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{null, !2913}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2914, file: !51, line: 1088, baseType: !2963, size: 64, offset: 1344)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2965)
!2965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !51, line: 1016, size: 512, elements: !2966)
!2966 = !{!2967, !2971, !2975, !2976, !2980, !2984, !2988, !2992}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2965, file: !51, line: 1017, baseType: !2968, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{!2899, !2899}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2965, file: !51, line: 1018, baseType: !2972, size: 64, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{null, !2899}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2965, file: !51, line: 1019, baseType: !2959, size: 64, offset: 128)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2965, file: !51, line: 1020, baseType: !2977, size: 64, offset: 192)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 64)
!2978 = !DISubroutineType(types: !2979)
!2979 = !{!168, !2913, !168}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2965, file: !51, line: 1021, baseType: !2981, size: 64, offset: 256)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!472, !2913}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2965, file: !51, line: 1022, baseType: !2985, size: 64, offset: 320)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{!168, !2913, !168, !211}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2965, file: !51, line: 1023, baseType: !2989, size: 64, offset: 384)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 64)
!2990 = !DISubroutineType(types: !2991)
!2991 = !{null, !2913, !802}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2965, file: !51, line: 1024, baseType: !2981, size: 64, offset: 448)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2914, file: !51, line: 1097, baseType: !2994, size: 256, offset: 1408)
!2994 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !51, line: 1089, size: 256, elements: !2995)
!2995 = !{!2996, !3005, !3011}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2994, file: !51, line: 1090, baseType: !2997, size: 256)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2998, line: 10, size: 256, elements: !2999)
!2998 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2999 = !{!3000, !3001, !3004}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2997, file: !2998, line: 11, baseType: !179, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2997, file: !2998, line: 12, baseType: !3002, size: 64, offset: 64)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2998, line: 5, flags: DIFlagFwdDecl)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2997, file: !2998, line: 13, baseType: !208, size: 128, offset: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2994, file: !51, line: 1091, baseType: !3006, size: 64)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2998, line: 17, size: 64, elements: !3007)
!3007 = !{!3008}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3006, file: !2998, line: 18, baseType: !3009, size: 64)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2998, line: 16, flags: DIFlagFwdDecl)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2994, file: !51, line: 1096, baseType: !3012, size: 192)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2994, file: !51, line: 1092, size: 192, elements: !3013)
!3013 = !{!3014, !3015, !3016}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3012, file: !51, line: 1093, baseType: !208, size: 128)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3012, file: !51, line: 1094, baseType: !168, size: 32, offset: 128)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3012, file: !51, line: 1095, baseType: !7, size: 32, offset: 160)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2838, file: !51, line: 1843, baseType: !3018, size: 64, offset: 1280)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DISubroutineType(types: !3020)
!3020 = !{!293, !339, !702, !168, !308, !2849, !168}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2838, file: !51, line: 1844, baseType: !1080, size: 64, offset: 1344)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2838, file: !51, line: 1845, baseType: !3023, size: 64, offset: 1408)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{!168, !168}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2838, file: !51, line: 1846, baseType: !2910, size: 64, offset: 1472)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2838, file: !51, line: 1847, baseType: !3028, size: 64, offset: 1536)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DISubroutineType(types: !3030)
!3030 = !{!293, !2071, !339, !2849, !308, !7}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2838, file: !51, line: 1848, baseType: !3032, size: 64, offset: 1600)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{!293, !339, !2849, !2071, !308, !7}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2838, file: !51, line: 1849, baseType: !3036, size: 64, offset: 1664)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{!168, !339, !297, !3039, !802}
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2838, file: !51, line: 1850, baseType: !3041, size: 64, offset: 1728)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!297, !339, !168, !513, !513}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2838, file: !51, line: 1852, baseType: !3045, size: 64, offset: 1792)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{null, !692, !339}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2838, file: !51, line: 1856, baseType: !3049, size: 64, offset: 1856)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!293, !339, !513, !339, !513, !308, !7}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2838, file: !51, line: 1858, baseType: !3053, size: 64, offset: 1920)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!513, !339, !513, !339, !513, !513, !7}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2838, file: !51, line: 1861, baseType: !2902, size: 64, offset: 1984)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2833, file: !51, line: 692, baseType: !645, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !412, file: !51, line: 694, baseType: !3059, size: 64, offset: 2560)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !51, line: 1100, size: 384, elements: !3061)
!3061 = !{!3062, !3063, !3064, !3065}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3060, file: !51, line: 1101, baseType: !221)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3060, file: !51, line: 1102, baseType: !208, size: 128)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3060, file: !51, line: 1103, baseType: !208, size: 128, offset: 128)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3060, file: !51, line: 1104, baseType: !208, size: 128, offset: 256)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !412, file: !51, line: 695, baseType: !716, size: 1216, align: 64, offset: 2624)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !412, file: !51, line: 696, baseType: !208, size: 128, offset: 3840)
!3068 = !DIDerivedType(tag: DW_TAG_member, scope: !412, file: !51, line: 697, baseType: !3069, size: 64, offset: 3968)
!3069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !412, file: !51, line: 697, size: 64, elements: !3070)
!3070 = !{!3071, !3072, !3073, !3076, !3077}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3069, file: !51, line: 698, baseType: !2071, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3069, file: !51, line: 699, baseType: !2588, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3069, file: !51, line: 700, baseType: !3074, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !51, line: 700, flags: DIFlagFwdDecl)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3069, file: !51, line: 701, baseType: !262, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3069, file: !51, line: 702, baseType: !7, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !412, file: !51, line: 705, baseType: !180, size: 32, offset: 4032)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !412, file: !51, line: 708, baseType: !180, size: 32, offset: 4064)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !412, file: !51, line: 709, baseType: !2670, size: 64, offset: 4096)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !412, file: !51, line: 720, baseType: !169, size: 64, offset: 4160)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !370, file: !367, line: 98, baseType: !3083, size: 256, offset: 448)
!3083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 256, elements: !2203)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !370, file: !367, line: 101, baseType: !3085, size: 32, offset: 704)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3086, line: 25, size: 32, elements: !3087)
!3086 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3087 = !{!3088}
!3088 = !DIDerivedType(tag: DW_TAG_member, scope: !3085, file: !3086, line: 26, baseType: !3089, size: 32)
!3089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3085, file: !3086, line: 26, size: 32, elements: !3090)
!3090 = !{!3091}
!3091 = !DIDerivedType(tag: DW_TAG_member, scope: !3089, file: !3086, line: 30, baseType: !3092, size: 32)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3089, file: !3086, line: 30, size: 32, elements: !3093)
!3093 = !{!3094, !3095}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3092, file: !3086, line: 31, baseType: !221)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3092, file: !3086, line: 32, baseType: !168, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !370, file: !367, line: 102, baseType: !2687, size: 64, offset: 768)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !370, file: !367, line: 103, baseType: !581, size: 64, offset: 832)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !370, file: !367, line: 104, baseType: !311, size: 64, offset: 896)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !370, file: !367, line: 105, baseType: !169, size: 64, offset: 960)
!3100 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 107, baseType: !3101, size: 128, offset: 1024)
!3101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 107, size: 128, elements: !3102)
!3102 = !{!3103, !3104}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3101, file: !367, line: 108, baseType: !208, size: 128)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3101, file: !367, line: 109, baseType: !3105, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !370, file: !367, line: 111, baseType: !208, size: 128, offset: 1152)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !370, file: !367, line: 112, baseType: !208, size: 128, offset: 1280)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !370, file: !367, line: 120, baseType: !3109, size: 128, offset: 1408)
!3109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 116, size: 128, elements: !3110)
!3110 = !{!3111, !3112, !3113}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3109, file: !367, line: 117, baseType: !620, size: 128)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3109, file: !367, line: 118, baseType: !384, size: 128)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3109, file: !367, line: 119, baseType: !352, size: 128, align: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !340, file: !51, line: 922, baseType: !411, size: 64, offset: 256)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !340, file: !51, line: 923, baseType: !2836, size: 64, offset: 320)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !340, file: !51, line: 929, baseType: !221, offset: 384)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !340, file: !51, line: 930, baseType: !50, size: 32, offset: 384)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !340, file: !51, line: 931, baseType: !752, size: 64, offset: 448)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !340, file: !51, line: 932, baseType: !7, size: 32, offset: 512)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !340, file: !51, line: 933, baseType: !2683, size: 32, offset: 544)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !340, file: !51, line: 934, baseType: !1152, size: 192, offset: 576)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !340, file: !51, line: 935, baseType: !513, size: 64, offset: 768)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !340, file: !51, line: 936, baseType: !3124, size: 192, offset: 832)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !51, line: 885, size: 192, elements: !3125)
!3125 = !{!3126, !3127, !3128, !3129, !3130, !3131}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3124, file: !51, line: 886, baseType: !2935)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3124, file: !51, line: 887, baseType: !1448, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3124, file: !51, line: 888, baseType: !59, size: 32, offset: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3124, file: !51, line: 889, baseType: !417, size: 32, offset: 96)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3124, file: !51, line: 889, baseType: !417, size: 32, offset: 128)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3124, file: !51, line: 890, baseType: !168, size: 32, offset: 160)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !340, file: !51, line: 937, baseType: !1524, size: 64, offset: 1024)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !340, file: !51, line: 938, baseType: !3134, size: 256, offset: 1088)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !51, line: 896, size: 256, elements: !3135)
!3135 = !{!3136, !3137, !3138, !3139, !3140, !3141}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3134, file: !51, line: 897, baseType: !311, size: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3134, file: !51, line: 898, baseType: !7, size: 32, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3134, file: !51, line: 899, baseType: !7, size: 32, offset: 96)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3134, file: !51, line: 902, baseType: !7, size: 32, offset: 128)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3134, file: !51, line: 903, baseType: !7, size: 32, offset: 160)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3134, file: !51, line: 904, baseType: !513, size: 64, offset: 192)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !340, file: !51, line: 940, baseType: !404, size: 64, offset: 1344)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !340, file: !51, line: 945, baseType: !169, size: 64, offset: 1408)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !340, file: !51, line: 949, baseType: !208, size: 128, offset: 1472)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !340, file: !51, line: 950, baseType: !208, size: 128, offset: 1600)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !340, file: !51, line: 952, baseType: !715, size: 64, offset: 1728)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !340, file: !51, line: 953, baseType: !888, size: 32, offset: 1792)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !340, file: !51, line: 954, baseType: !888, size: 32, offset: 1824)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !330, file: !287, line: 174, baseType: !336, size: 64, offset: 320)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !330, file: !287, line: 176, baseType: !3151, size: 64, offset: 384)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!168, !339, !214, !329, !960}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !318, file: !287, line: 90, baseType: !313, size: 64, offset: 192)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !318, file: !287, line: 91, baseType: !3156, size: 64, offset: 256)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !277, file: !204, line: 143, baseType: !3158, size: 64, offset: 256)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{!3161, !214}
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3163)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !68, line: 39, size: 384, elements: !3164)
!3164 = !{!3165, !3166, !3170, !3174, !3180, !3184}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3163, file: !68, line: 40, baseType: !67, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3163, file: !68, line: 41, baseType: !3167, size: 64, offset: 64)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 64)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{!472}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3163, file: !68, line: 42, baseType: !3171, size: 64, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{!169}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3163, file: !68, line: 43, baseType: !3175, size: 64, offset: 192)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{!2100, !3178}
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !68, line: 19, flags: DIFlagFwdDecl)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3163, file: !68, line: 44, baseType: !3181, size: 64, offset: 256)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 64)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{!2100}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3163, file: !68, line: 45, baseType: !450, size: 64, offset: 320)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !277, file: !204, line: 144, baseType: !3186, size: 64, offset: 320)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{!2100, !214}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !277, file: !204, line: 145, baseType: !3190, size: 64, offset: 384)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{null, !214, !3193, !3194}
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !203, file: !204, line: 70, baseType: !3196, size: 64, offset: 384)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 64)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !3198, line: 123, size: 1024, elements: !3199)
!3198 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!3199 = !{!3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3328, !3329, !3330, !3331, !3332}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3197, file: !3198, line: 124, baseType: !728, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3197, file: !3198, line: 125, baseType: !728, size: 32, offset: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3197, file: !3198, line: 135, baseType: !3196, size: 64, offset: 64)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3197, file: !3198, line: 136, baseType: !155, size: 64, offset: 128)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3197, file: !3198, line: 138, baseType: !741, size: 192, align: 64, offset: 192)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3197, file: !3198, line: 140, baseType: !2100, size: 64, offset: 384)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3197, file: !3198, line: 141, baseType: !7, size: 32, offset: 448)
!3207 = !DIDerivedType(tag: DW_TAG_member, scope: !3197, file: !3198, line: 142, baseType: !3208, size: 256, offset: 512)
!3208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3197, file: !3198, line: 142, size: 256, elements: !3209)
!3209 = !{!3210, !3256, !3260}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3208, file: !3198, line: 143, baseType: !3211, size: 192)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !3198, line: 91, size: 192, elements: !3212)
!3212 = !{!3213, !3214, !3215}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3211, file: !3198, line: 92, baseType: !311, size: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3211, file: !3198, line: 94, baseType: !737, size: 64, offset: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3211, file: !3198, line: 100, baseType: !3216, size: 64, offset: 128)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 64)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !3198, line: 180, size: 704, elements: !3218)
!3218 = !{!3219, !3220, !3221, !3228, !3229, !3230, !3254, !3255}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3217, file: !3198, line: 182, baseType: !3196, size: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3217, file: !3198, line: 183, baseType: !7, size: 32, offset: 64)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3217, file: !3198, line: 186, baseType: !3222, size: 192, offset: 128)
!3222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3223, line: 19, size: 192, elements: !3224)
!3223 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3224 = !{!3225, !3226, !3227}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3222, file: !3223, line: 20, baseType: !720, size: 128)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3222, file: !3223, line: 21, baseType: !7, size: 32, offset: 128)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3222, file: !3223, line: 22, baseType: !7, size: 32, offset: 160)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3217, file: !3198, line: 187, baseType: !179, size: 32, offset: 320)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3217, file: !3198, line: 188, baseType: !179, size: 32, offset: 352)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3217, file: !3198, line: 189, baseType: !3231, size: 64, offset: 384)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !3198, line: 168, size: 320, elements: !3233)
!3233 = !{!3234, !3238, !3242, !3246, !3250}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3232, file: !3198, line: 169, baseType: !3235, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3236 = !DISubroutineType(types: !3237)
!3237 = !{!168, !692, !3216}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3232, file: !3198, line: 171, baseType: !3239, size: 64, offset: 64)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = !DISubroutineType(types: !3241)
!3241 = !{!168, !3196, !155, !303}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3232, file: !3198, line: 173, baseType: !3243, size: 64, offset: 128)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!168, !3196}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3232, file: !3198, line: 174, baseType: !3247, size: 64, offset: 192)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = !DISubroutineType(types: !3249)
!3249 = !{!168, !3196, !3196, !155}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3232, file: !3198, line: 176, baseType: !3251, size: 64, offset: 256)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!168, !692, !3196, !3216}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3217, file: !3198, line: 192, baseType: !208, size: 128, offset: 448)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3217, file: !3198, line: 194, baseType: !1458, size: 128, offset: 576)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3208, file: !3198, line: 144, baseType: !3257, size: 64)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !3198, line: 103, size: 64, elements: !3258)
!3258 = !{!3259}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3257, file: !3198, line: 104, baseType: !3196, size: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3208, file: !3198, line: 145, baseType: !3261, size: 256)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !3198, line: 107, size: 256, elements: !3262)
!3262 = !{!3263, !3323, !3326, !3327}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3261, file: !3198, line: 108, baseType: !3264, size: 64)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3266)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !3198, line: 217, size: 768, elements: !3267)
!3267 = !{!3268, !3288, !3292, !3296, !3300, !3304, !3308, !3312, !3313, !3314, !3315, !3319}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3266, file: !3198, line: 222, baseType: !3269, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!168, !3272}
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !3198, line: 197, size: 1088, elements: !3274)
!3274 = !{!3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3273, file: !3198, line: 199, baseType: !3196, size: 64)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3273, file: !3198, line: 200, baseType: !339, size: 64, offset: 64)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3273, file: !3198, line: 201, baseType: !692, size: 64, offset: 128)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3273, file: !3198, line: 202, baseType: !169, size: 64, offset: 192)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3273, file: !3198, line: 205, baseType: !1152, size: 192, offset: 256)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3273, file: !3198, line: 206, baseType: !1152, size: 192, offset: 448)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3273, file: !3198, line: 207, baseType: !168, size: 32, offset: 640)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3273, file: !3198, line: 208, baseType: !208, size: 128, offset: 704)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3273, file: !3198, line: 209, baseType: !262, size: 64, offset: 832)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3273, file: !3198, line: 211, baseType: !308, size: 64, offset: 896)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3273, file: !3198, line: 212, baseType: !472, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3273, file: !3198, line: 213, baseType: !472, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3273, file: !3198, line: 214, baseType: !988, size: 64, offset: 1024)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3266, file: !3198, line: 223, baseType: !3289, size: 64, offset: 64)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{null, !3272}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3266, file: !3198, line: 236, baseType: !3293, size: 64, offset: 128)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!168, !692, !169}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3266, file: !3198, line: 238, baseType: !3297, size: 64, offset: 192)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!169, !692, !2849}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3266, file: !3198, line: 239, baseType: !3301, size: 64, offset: 256)
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 64)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{!169, !692, !169, !2849}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3266, file: !3198, line: 240, baseType: !3305, size: 64, offset: 320)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3306 = !DISubroutineType(types: !3307)
!3307 = !{null, !692, !169}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3266, file: !3198, line: 242, baseType: !3309, size: 64, offset: 384)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{!293, !3272, !262, !308, !513}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3266, file: !3198, line: 252, baseType: !308, size: 64, offset: 448)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3266, file: !3198, line: 259, baseType: !472, size: 8, offset: 512)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3266, file: !3198, line: 260, baseType: !3309, size: 64, offset: 576)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3266, file: !3198, line: 263, baseType: !3316, size: 64, offset: 640)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{!2878, !3272, !2879}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3266, file: !3198, line: 266, baseType: !3320, size: 64, offset: 704)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!168, !3272, !960}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3261, file: !3198, line: 109, baseType: !3324, size: 64, offset: 64)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !3198, line: 31, flags: DIFlagFwdDecl)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3261, file: !3198, line: 110, baseType: !513, size: 64, offset: 128)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3261, file: !3198, line: 111, baseType: !3196, size: 64, offset: 192)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3197, file: !3198, line: 148, baseType: !169, size: 64, offset: 768)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3197, file: !3198, line: 154, baseType: !404, size: 64, offset: 832)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3197, file: !3198, line: 156, baseType: !144, size: 16, offset: 896)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3197, file: !3198, line: 157, baseType: !303, size: 16, offset: 912)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3197, file: !3198, line: 158, baseType: !3333, size: 64, offset: 960)
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3334, size: 64)
!3334 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !3198, line: 32, flags: DIFlagFwdDecl)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !203, file: !204, line: 71, baseType: !3336, size: 32, offset: 448)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3337, line: 19, size: 32, elements: !3338)
!3337 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3338 = !{!3339}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3336, file: !3337, line: 20, baseType: !1209, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !203, file: !204, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !203, file: !204, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !203, file: !204, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !203, file: !204, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !203, file: !204, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !200, file: !80, line: 463, baseType: !199, size: 64, offset: 512)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !200, file: !80, line: 465, baseType: !3347, size: 64, offset: 576)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !80, line: 36, flags: DIFlagFwdDecl)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !200, file: !80, line: 467, baseType: !155, size: 64, offset: 640)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !200, file: !80, line: 468, baseType: !3351, size: 64, offset: 704)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3353)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !80, line: 87, size: 384, elements: !3354)
!3354 = !{!3355, !3356, !3357, !3361, !3366, !3370}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3353, file: !80, line: 88, baseType: !155, size: 64)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3353, file: !80, line: 89, baseType: !315, size: 64, offset: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3353, file: !80, line: 90, baseType: !3358, size: 64, offset: 128)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{!168, !199, !257}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3353, file: !80, line: 91, baseType: !3362, size: 64, offset: 192)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!262, !199, !3365, !3193, !3194}
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3353, file: !80, line: 93, baseType: !3367, size: 64, offset: 256)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{null, !199}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3353, file: !80, line: 95, baseType: !3371, size: 64, offset: 320)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3373)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !87, line: 278, size: 1472, elements: !3374)
!3374 = !{!3375, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3373, file: !87, line: 279, baseType: !3376, size: 64)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DISubroutineType(types: !3378)
!3378 = !{!168, !199}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3373, file: !87, line: 280, baseType: !3367, size: 64, offset: 64)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3373, file: !87, line: 281, baseType: !3376, size: 64, offset: 128)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3373, file: !87, line: 282, baseType: !3376, size: 64, offset: 192)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3373, file: !87, line: 283, baseType: !3376, size: 64, offset: 256)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3373, file: !87, line: 284, baseType: !3376, size: 64, offset: 320)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3373, file: !87, line: 285, baseType: !3376, size: 64, offset: 384)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3373, file: !87, line: 286, baseType: !3376, size: 64, offset: 448)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3373, file: !87, line: 287, baseType: !3376, size: 64, offset: 512)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3373, file: !87, line: 288, baseType: !3376, size: 64, offset: 576)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3373, file: !87, line: 289, baseType: !3376, size: 64, offset: 640)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3373, file: !87, line: 290, baseType: !3376, size: 64, offset: 704)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3373, file: !87, line: 291, baseType: !3376, size: 64, offset: 768)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3373, file: !87, line: 292, baseType: !3376, size: 64, offset: 832)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3373, file: !87, line: 293, baseType: !3376, size: 64, offset: 896)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3373, file: !87, line: 294, baseType: !3376, size: 64, offset: 960)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3373, file: !87, line: 295, baseType: !3376, size: 64, offset: 1024)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3373, file: !87, line: 296, baseType: !3376, size: 64, offset: 1088)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3373, file: !87, line: 297, baseType: !3376, size: 64, offset: 1152)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3373, file: !87, line: 298, baseType: !3376, size: 64, offset: 1216)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3373, file: !87, line: 299, baseType: !3376, size: 64, offset: 1280)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3373, file: !87, line: 300, baseType: !3376, size: 64, offset: 1344)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3373, file: !87, line: 301, baseType: !3376, size: 64, offset: 1408)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !200, file: !80, line: 470, baseType: !3402, size: 64, offset: 768)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3404, line: 82, size: 1408, elements: !3405)
!3404 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3405 = !{!3406, !3407, !3408, !3409, !3410, !3411, !3412, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3487, !3490, !3491}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3403, file: !3404, line: 83, baseType: !155, size: 64)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3403, file: !3404, line: 84, baseType: !155, size: 64, offset: 64)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3403, file: !3404, line: 85, baseType: !199, size: 64, offset: 128)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3403, file: !3404, line: 86, baseType: !315, size: 64, offset: 192)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3403, file: !3404, line: 87, baseType: !315, size: 64, offset: 256)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3403, file: !3404, line: 88, baseType: !315, size: 64, offset: 320)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3403, file: !3404, line: 90, baseType: !3413, size: 64, offset: 384)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!168, !199, !3416}
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !74, line: 95, size: 1152, elements: !3418)
!3418 = !{!3419, !3420, !3421, !3422, !3423, !3424, !3425, !3438, !3451, !3452, !3453, !3454, !3455, !3463, !3464, !3465, !3466, !3467, !3468}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3417, file: !74, line: 96, baseType: !155, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3417, file: !74, line: 97, baseType: !3402, size: 64, offset: 64)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3417, file: !74, line: 99, baseType: !139, size: 64, offset: 128)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3417, file: !74, line: 100, baseType: !155, size: 64, offset: 192)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3417, file: !74, line: 102, baseType: !472, size: 8, offset: 256)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3417, file: !74, line: 103, baseType: !73, size: 32, offset: 288)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3417, file: !74, line: 105, baseType: !3426, size: 64, offset: 320)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3428)
!3428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3429, line: 262, size: 1600, elements: !3430)
!3429 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3430 = !{!3431, !3432, !3433, !3437}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3428, file: !3429, line: 263, baseType: !2673, size: 256)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3428, file: !3429, line: 264, baseType: !2673, size: 256, offset: 256)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3428, file: !3429, line: 265, baseType: !3434, size: 1024, offset: 512)
!3434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 1024, elements: !3435)
!3435 = !{!3436}
!3436 = !DISubrange(count: 128)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3428, file: !3429, line: 266, baseType: !2100, size: 64, offset: 1536)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3417, file: !74, line: 106, baseType: !3439, size: 64, offset: 384)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3441)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3429, line: 210, size: 256, elements: !3442)
!3442 = !{!3443, !3447, !3449, !3450}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3441, file: !3429, line: 211, baseType: !3444, size: 72)
!3444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 72, elements: !3445)
!3445 = !{!3446}
!3446 = !DISubrange(count: 9)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3441, file: !3429, line: 212, baseType: !3448, size: 64, offset: 128)
!3448 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3429, line: 14, baseType: !311)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3441, file: !3429, line: 213, baseType: !180, size: 32, offset: 192)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3441, file: !3429, line: 214, baseType: !180, size: 32, offset: 224)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3417, file: !74, line: 108, baseType: !3376, size: 64, offset: 448)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3417, file: !74, line: 109, baseType: !3367, size: 64, offset: 512)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3417, file: !74, line: 110, baseType: !3376, size: 64, offset: 576)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3417, file: !74, line: 111, baseType: !3367, size: 64, offset: 640)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3417, file: !74, line: 112, baseType: !3456, size: 64, offset: 704)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!168, !199, !3459}
!3459 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !87, line: 52, baseType: !3460)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !87, line: 50, size: 32, elements: !3461)
!3461 = !{!3462}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3460, file: !87, line: 51, baseType: !168, size: 32)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3417, file: !74, line: 113, baseType: !3376, size: 64, offset: 768)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3417, file: !74, line: 114, baseType: !315, size: 64, offset: 832)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3417, file: !74, line: 115, baseType: !315, size: 64, offset: 896)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3417, file: !74, line: 117, baseType: !3371, size: 64, offset: 960)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3417, file: !74, line: 118, baseType: !3367, size: 64, offset: 1024)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3417, file: !74, line: 120, baseType: !3469, size: 64, offset: 1088)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !74, line: 120, flags: DIFlagFwdDecl)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3403, file: !3404, line: 91, baseType: !3358, size: 64, offset: 448)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3403, file: !3404, line: 92, baseType: !3376, size: 64, offset: 512)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3403, file: !3404, line: 93, baseType: !3367, size: 64, offset: 576)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3403, file: !3404, line: 94, baseType: !3376, size: 64, offset: 640)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3403, file: !3404, line: 95, baseType: !3367, size: 64, offset: 704)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3403, file: !3404, line: 97, baseType: !3376, size: 64, offset: 768)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3403, file: !3404, line: 98, baseType: !3376, size: 64, offset: 832)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3403, file: !3404, line: 100, baseType: !3456, size: 64, offset: 896)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3403, file: !3404, line: 101, baseType: !3376, size: 64, offset: 960)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3403, file: !3404, line: 103, baseType: !3376, size: 64, offset: 1024)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3403, file: !3404, line: 105, baseType: !3376, size: 64, offset: 1088)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3403, file: !3404, line: 107, baseType: !3371, size: 64, offset: 1152)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3403, file: !3404, line: 109, baseType: !3484, size: 64, offset: 1216)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3486)
!3486 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3404, line: 109, flags: DIFlagFwdDecl)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3403, file: !3404, line: 111, baseType: !3488, size: 64, offset: 1280)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3404, line: 111, flags: DIFlagFwdDecl)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3403, file: !3404, line: 112, baseType: !626, offset: 1344)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3403, file: !3404, line: 114, baseType: !472, size: 8, offset: 1344)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !200, file: !80, line: 471, baseType: !3416, size: 64, offset: 832)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !200, file: !80, line: 473, baseType: !169, size: 64, offset: 896)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !200, file: !80, line: 475, baseType: !169, size: 64, offset: 960)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !200, file: !80, line: 480, baseType: !1152, size: 192, offset: 1024)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !200, file: !80, line: 484, baseType: !3497, size: 576, offset: 1216)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !80, line: 361, size: 576, elements: !3498)
!3498 = !{!3499, !3500, !3501, !3502, !3503, !3504}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3497, file: !80, line: 362, baseType: !208, size: 128)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3497, file: !80, line: 363, baseType: !208, size: 128, offset: 128)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3497, file: !80, line: 364, baseType: !208, size: 128, offset: 256)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3497, file: !80, line: 365, baseType: !208, size: 128, offset: 384)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3497, file: !80, line: 366, baseType: !472, size: 8, offset: 512)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3497, file: !80, line: 367, baseType: !79, size: 32, offset: 544)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !200, file: !80, line: 485, baseType: !3506, size: 2304, offset: 1792)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !87, line: 565, size: 2304, elements: !3507)
!3507 = !{!3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3603, !3607}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3506, file: !87, line: 566, baseType: !3459, size: 32)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3506, file: !87, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3506, file: !87, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3506, file: !87, line: 569, baseType: !472, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3506, file: !87, line: 570, baseType: !472, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3506, file: !87, line: 571, baseType: !472, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3506, file: !87, line: 572, baseType: !472, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3506, file: !87, line: 573, baseType: !472, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3506, file: !87, line: 574, baseType: !472, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3506, file: !87, line: 575, baseType: !472, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3506, file: !87, line: 576, baseType: !472, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3506, file: !87, line: 577, baseType: !179, size: 32, offset: 64)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3506, file: !87, line: 578, baseType: !221, offset: 96)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3506, file: !87, line: 580, baseType: !208, size: 128, offset: 128)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3506, file: !87, line: 581, baseType: !1479, size: 192, offset: 256)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3506, file: !87, line: 582, baseType: !3524, size: 64, offset: 448)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3526, line: 43, size: 1472, elements: !3527)
!3526 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3527 = !{!3528, !3529, !3530, !3531, !3532, !3535, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560}
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3525, file: !3526, line: 44, baseType: !155, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3525, file: !3526, line: 45, baseType: !168, size: 32, offset: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3525, file: !3526, line: 46, baseType: !208, size: 128, offset: 128)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3525, file: !3526, line: 47, baseType: !221, offset: 256)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3525, file: !3526, line: 48, baseType: !3533, size: 64, offset: 256)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !87, line: 533, flags: DIFlagFwdDecl)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3525, file: !3526, line: 49, baseType: !3536, size: 320, offset: 320)
!3536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3537, line: 11, size: 320, elements: !3538)
!3537 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3538 = !{!3539, !3540, !3541, !3546}
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3536, file: !3537, line: 16, baseType: !620, size: 128)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3536, file: !3537, line: 17, baseType: !311, size: 64, offset: 128)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3536, file: !3537, line: 18, baseType: !3542, size: 64, offset: 192)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{null, !3545}
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3536, file: !3537, line: 19, baseType: !179, size: 32, offset: 256)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3525, file: !3526, line: 50, baseType: !311, size: 64, offset: 640)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3525, file: !3526, line: 51, baseType: !1279, size: 64, offset: 704)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3525, file: !3526, line: 52, baseType: !1279, size: 64, offset: 768)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3525, file: !3526, line: 53, baseType: !1279, size: 64, offset: 832)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3525, file: !3526, line: 54, baseType: !1279, size: 64, offset: 896)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3525, file: !3526, line: 55, baseType: !1279, size: 64, offset: 960)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3525, file: !3526, line: 56, baseType: !311, size: 64, offset: 1024)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3525, file: !3526, line: 57, baseType: !311, size: 64, offset: 1088)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3525, file: !3526, line: 58, baseType: !311, size: 64, offset: 1152)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3525, file: !3526, line: 59, baseType: !311, size: 64, offset: 1216)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3525, file: !3526, line: 60, baseType: !311, size: 64, offset: 1280)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3525, file: !3526, line: 61, baseType: !199, size: 64, offset: 1344)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3525, file: !3526, line: 62, baseType: !472, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3525, file: !3526, line: 63, baseType: !472, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3506, file: !87, line: 583, baseType: !472, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3506, file: !87, line: 584, baseType: !472, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3506, file: !87, line: 585, baseType: !472, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3506, file: !87, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3506, file: !87, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3506, file: !87, line: 592, baseType: !1271, size: 512, offset: 576)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3506, file: !87, line: 593, baseType: !404, size: 64, offset: 1088)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3506, file: !87, line: 594, baseType: !1930, size: 256, offset: 1152)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3506, file: !87, line: 595, baseType: !1458, size: 128, offset: 1408)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3506, file: !87, line: 596, baseType: !3533, size: 64, offset: 1536)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3506, file: !87, line: 597, baseType: !728, size: 32, offset: 1600)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3506, file: !87, line: 598, baseType: !728, size: 32, offset: 1632)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3506, file: !87, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3506, file: !87, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3506, file: !87, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3506, file: !87, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3506, file: !87, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3506, file: !87, line: 604, baseType: !472, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3506, file: !87, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3506, file: !87, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3506, file: !87, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3506, file: !87, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3506, file: !87, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3506, file: !87, line: 610, baseType: !7, size: 32, offset: 1696)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3506, file: !87, line: 611, baseType: !86, size: 32, offset: 1728)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3506, file: !87, line: 612, baseType: !94, size: 32, offset: 1760)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3506, file: !87, line: 613, baseType: !168, size: 32, offset: 1792)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3506, file: !87, line: 614, baseType: !168, size: 32, offset: 1824)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3506, file: !87, line: 615, baseType: !404, size: 64, offset: 1856)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3506, file: !87, line: 616, baseType: !404, size: 64, offset: 1920)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3506, file: !87, line: 617, baseType: !404, size: 64, offset: 1984)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3506, file: !87, line: 618, baseType: !404, size: 64, offset: 2048)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3506, file: !87, line: 620, baseType: !3594, size: 64, offset: 2112)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !87, line: 536, size: 256, elements: !3596)
!3596 = !{!3597, !3598, !3599, !3600}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3595, file: !87, line: 537, baseType: !221)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3595, file: !87, line: 538, baseType: !7, size: 32)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3595, file: !87, line: 540, baseType: !208, size: 128, offset: 64)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3595, file: !87, line: 543, baseType: !3601, size: 64, offset: 192)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !87, line: 534, flags: DIFlagFwdDecl)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3506, file: !87, line: 621, baseType: !3604, size: 64, offset: 2176)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{null, !199, !1421}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3506, file: !87, line: 622, baseType: !3608, size: 64, offset: 2240)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !87, line: 622, flags: DIFlagFwdDecl)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !200, file: !80, line: 486, baseType: !3611, size: 64, offset: 4096)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !87, line: 642, size: 1792, elements: !3613)
!3613 = !{!3614, !3615, !3616, !3620, !3621, !3622}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3612, file: !87, line: 643, baseType: !3373, size: 1472)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3612, file: !87, line: 644, baseType: !3376, size: 64, offset: 1472)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3612, file: !87, line: 645, baseType: !3617, size: 64, offset: 1536)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{null, !199, !472}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3612, file: !87, line: 646, baseType: !3376, size: 64, offset: 1600)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3612, file: !87, line: 647, baseType: !3367, size: 64, offset: 1664)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3612, file: !87, line: 648, baseType: !3367, size: 64, offset: 1728)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !200, file: !80, line: 493, baseType: !3624, size: 64, offset: 4160)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !3626, line: 13, flags: DIFlagFwdDecl)
!3626 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !200, file: !80, line: 499, baseType: !208, size: 128, offset: 4224)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !200, file: !80, line: 502, baseType: !3629, size: 64, offset: 4352)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3631)
!3631 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !80, line: 502, flags: DIFlagFwdDecl)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !200, file: !80, line: 504, baseType: !3633, size: 64, offset: 4416)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !200, file: !80, line: 505, baseType: !404, size: 64, offset: 4480)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !200, file: !80, line: 510, baseType: !404, size: 64, offset: 4544)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !200, file: !80, line: 511, baseType: !3637, size: 64, offset: 4608)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3639)
!3639 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !80, line: 511, flags: DIFlagFwdDecl)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !200, file: !80, line: 513, baseType: !3641, size: 64, offset: 4672)
!3641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3642, size: 64)
!3642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !80, line: 288, size: 128, elements: !3643)
!3643 = !{!3644, !3645}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3642, file: !80, line: 293, baseType: !7, size: 32)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3642, file: !80, line: 294, baseType: !311, size: 64, offset: 64)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !200, file: !80, line: 515, baseType: !208, size: 128, offset: 4736)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !200, file: !80, line: 526, baseType: !3648, offset: 4864)
!3648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3649, line: 5, elements: !235)
!3649 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !200, file: !80, line: 528, baseType: !3651, size: 64, offset: 4864)
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 64)
!3652 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3653, line: 14, flags: DIFlagFwdDecl)
!3653 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !200, file: !80, line: 529, baseType: !3655, size: 64, offset: 4928)
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3657, line: 17, size: 192, elements: !3658)
!3657 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3658 = !{!3659, !3660, !3743}
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3656, file: !3657, line: 18, baseType: !3655, size: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3656, file: !3657, line: 19, baseType: !3661, size: 64, offset: 64)
!3661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3663)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3657, line: 110, size: 1152, elements: !3664)
!3664 = !{!3665, !3669, !3673, !3679, !3685, !3689, !3693, !3698, !3702, !3703, !3707, !3711, !3715, !3726, !3727, !3728, !3729, !3739}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3663, file: !3657, line: 111, baseType: !3666, size: 64)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!3655, !3655}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3663, file: !3657, line: 112, baseType: !3670, size: 64, offset: 64)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{null, !3655}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3663, file: !3657, line: 113, baseType: !3674, size: 64, offset: 128)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{!472, !3677}
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3656)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3663, file: !3657, line: 114, baseType: !3680, size: 64, offset: 192)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!2100, !3677, !3683}
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3663, file: !3657, line: 116, baseType: !3686, size: 64, offset: 256)
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3687 = !DISubroutineType(types: !3688)
!3688 = !{!472, !3677, !155}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3663, file: !3657, line: 118, baseType: !3690, size: 64, offset: 320)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{!168, !3677, !155, !7, !169, !308}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3663, file: !3657, line: 123, baseType: !3694, size: 64, offset: 384)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{!168, !3677, !155, !3697, !308}
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3663, file: !3657, line: 126, baseType: !3699, size: 64, offset: 448)
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 64)
!3700 = !DISubroutineType(types: !3701)
!3701 = !{!155, !3677}
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3663, file: !3657, line: 127, baseType: !3699, size: 64, offset: 512)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3663, file: !3657, line: 128, baseType: !3704, size: 64, offset: 576)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!3655, !3677}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3663, file: !3657, line: 130, baseType: !3708, size: 64, offset: 640)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{!3655, !3677, !3655}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3663, file: !3657, line: 133, baseType: !3712, size: 64, offset: 704)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 64)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!3655, !3677, !155}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3663, file: !3657, line: 135, baseType: !3716, size: 64, offset: 768)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!168, !3677, !155, !155, !7, !7, !3719}
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3720, size: 64)
!3720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3657, line: 43, size: 640, elements: !3721)
!3721 = !{!3722, !3723, !3724}
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3720, file: !3657, line: 44, baseType: !3655, size: 64)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3720, file: !3657, line: 45, baseType: !7, size: 32, offset: 64)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3720, file: !3657, line: 46, baseType: !3725, size: 512, offset: 128)
!3725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 512, elements: !1309)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3663, file: !3657, line: 140, baseType: !3708, size: 64, offset: 832)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3663, file: !3657, line: 143, baseType: !3704, size: 64, offset: 896)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3663, file: !3657, line: 145, baseType: !3666, size: 64, offset: 960)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3663, file: !3657, line: 146, baseType: !3730, size: 64, offset: 1024)
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3731 = !DISubroutineType(types: !3732)
!3732 = !{!168, !3677, !3733}
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3657, line: 29, size: 128, elements: !3735)
!3735 = !{!3736, !3737, !3738}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3734, file: !3657, line: 30, baseType: !7, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3734, file: !3657, line: 31, baseType: !7, size: 32, offset: 32)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3734, file: !3657, line: 32, baseType: !3677, size: 64, offset: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3663, file: !3657, line: 148, baseType: !3740, size: 64, offset: 1088)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!168, !3677, !199}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3656, file: !3657, line: 20, baseType: !199, size: 64, offset: 128)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !200, file: !80, line: 534, baseType: !495, size: 32, offset: 4992)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !200, file: !80, line: 535, baseType: !179, size: 32, offset: 5024)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !200, file: !80, line: 537, baseType: !221, offset: 5056)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !200, file: !80, line: 538, baseType: !208, size: 128, offset: 5056)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !200, file: !80, line: 540, baseType: !3749, size: 64, offset: 5184)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3751, line: 54, size: 960, elements: !3752)
!3751 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3752 = !{!3753, !3754, !3755, !3756, !3757, !3758, !3759, !3763, !3767, !3768, !3769, !3770, !3774, !3778, !3779}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3750, file: !3751, line: 55, baseType: !155, size: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3750, file: !3751, line: 56, baseType: !139, size: 64, offset: 64)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3750, file: !3751, line: 58, baseType: !315, size: 64, offset: 128)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3750, file: !3751, line: 59, baseType: !315, size: 64, offset: 192)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3750, file: !3751, line: 60, baseType: !214, size: 64, offset: 256)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3750, file: !3751, line: 62, baseType: !3358, size: 64, offset: 320)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3750, file: !3751, line: 63, baseType: !3760, size: 64, offset: 384)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{!262, !199, !3365}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3750, file: !3751, line: 65, baseType: !3764, size: 64, offset: 448)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{null, !3749}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3750, file: !3751, line: 66, baseType: !3367, size: 64, offset: 512)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3750, file: !3751, line: 68, baseType: !3376, size: 64, offset: 576)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3750, file: !3751, line: 70, baseType: !3161, size: 64, offset: 640)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3750, file: !3751, line: 71, baseType: !3771, size: 64, offset: 704)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{!2100, !199}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3750, file: !3751, line: 73, baseType: !3775, size: 64, offset: 768)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{null, !199, !3193, !3194}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3750, file: !3751, line: 75, baseType: !3371, size: 64, offset: 832)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3750, file: !3751, line: 77, baseType: !3488, size: 64, offset: 896)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !200, file: !80, line: 541, baseType: !315, size: 64, offset: 5248)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !200, file: !80, line: 543, baseType: !3367, size: 64, offset: 5312)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !200, file: !80, line: 544, baseType: !3783, size: 64, offset: 5376)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !80, line: 45, flags: DIFlagFwdDecl)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !200, file: !80, line: 545, baseType: !3786, size: 64, offset: 5440)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3787 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !80, line: 47, flags: DIFlagFwdDecl)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !200, file: !80, line: 547, baseType: !472, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !200, file: !80, line: 548, baseType: !472, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !200, file: !80, line: 549, baseType: !472, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !200, file: !80, line: 550, baseType: !472, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "sysdev", scope: !196, file: !6, line: 426, baseType: !199, size: 64, offset: 64)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "busnum", scope: !196, file: !6, line: 427, baseType: !168, size: 32, offset: 128)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "bus_name", scope: !196, file: !6, line: 428, baseType: !155, size: 64, offset: 192)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "uses_pio_for_control", scope: !196, file: !6, line: 429, baseType: !159, size: 8, offset: 256)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "otg_port", scope: !196, file: !6, line: 433, baseType: !159, size: 8, offset: 264)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "is_b_host", scope: !196, file: !6, line: 434, baseType: !7, size: 1, offset: 272, flags: DIFlagBitField, extraData: i64 272)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "b_hnp_enable", scope: !196, file: !6, line: 435, baseType: !7, size: 1, offset: 273, flags: DIFlagBitField, extraData: i64 272)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "no_stop_on_short", scope: !196, file: !6, line: 436, baseType: !7, size: 1, offset: 274, flags: DIFlagBitField, extraData: i64 272)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "no_sg_constraint", scope: !196, file: !6, line: 441, baseType: !7, size: 1, offset: 275, flags: DIFlagBitField, extraData: i64 272)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !196, file: !6, line: 442, baseType: !7, size: 32, offset: 288)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next", scope: !196, file: !6, line: 444, baseType: !168, size: 32, offset: 320)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next_mutex", scope: !196, file: !6, line: 446, baseType: !1152, size: 192, offset: 384)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "devmap", scope: !196, file: !6, line: 448, baseType: !3805, size: 128, offset: 576)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_devmap", file: !6, line: 417, size: 128, elements: !3806)
!3806 = !{!3807}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "devicemap", scope: !3805, file: !6, line: 418, baseType: !3808, size: 128)
!3808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 128, elements: !191)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "root_hub", scope: !196, file: !6, line: 449, baseType: !170, size: 64, offset: 704)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "hs_companion", scope: !196, file: !6, line: 450, baseType: !195, size: 64, offset: 768)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_allocated", scope: !196, file: !6, line: 452, baseType: !168, size: 32, offset: 832)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_int_reqs", scope: !196, file: !6, line: 459, baseType: !168, size: 32, offset: 864)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_isoc_reqs", scope: !196, file: !6, line: 460, baseType: !168, size: 32, offset: 896)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "resuming_ports", scope: !196, file: !6, line: 462, baseType: !7, size: 32, offset: 928)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "ep0", scope: !171, file: !6, line: 647, baseType: !3816, size: 640, offset: 640)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_endpoint", file: !6, line: 67, size: 640, elements: !3817)
!3817 = !{!3818, !3829, !3837, !3845, !3846, !3847, !3850, !3852, !3853, !3854}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3816, file: !6, line: 68, baseType: !3819, size: 72)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_endpoint_descriptor", file: !101, line: 407, size: 72, elements: !3820)
!3820 = !{!3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3819, file: !101, line: 408, baseType: !160, size: 8)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3819, file: !101, line: 409, baseType: !160, size: 8, offset: 8)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "bEndpointAddress", scope: !3819, file: !101, line: 411, baseType: !160, size: 8, offset: 16)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !3819, file: !101, line: 412, baseType: !160, size: 8, offset: 24)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "wMaxPacketSize", scope: !3819, file: !101, line: 413, baseType: !145, size: 16, offset: 32)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "bInterval", scope: !3819, file: !101, line: 414, baseType: !160, size: 8, offset: 48)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "bRefresh", scope: !3819, file: !101, line: 418, baseType: !160, size: 8, offset: 56)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "bSynchAddress", scope: !3819, file: !101, line: 419, baseType: !160, size: 8, offset: 64)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "ss_ep_comp", scope: !3816, file: !6, line: 69, baseType: !3830, size: 48, offset: 72)
!3830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_ep_comp_descriptor", file: !101, line: 689, size: 48, elements: !3831)
!3831 = !{!3832, !3833, !3834, !3835, !3836}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3830, file: !101, line: 690, baseType: !160, size: 8)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3830, file: !101, line: 691, baseType: !160, size: 8, offset: 8)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxBurst", scope: !3830, file: !101, line: 693, baseType: !160, size: 8, offset: 16)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !3830, file: !101, line: 694, baseType: !160, size: 8, offset: 24)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "wBytesPerInterval", scope: !3830, file: !101, line: 695, baseType: !145, size: 16, offset: 32)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_isoc_ep_comp", scope: !3816, file: !6, line: 70, baseType: !3838, size: 64, offset: 120)
!3838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_isoc_ep_comp_descriptor", file: !101, line: 677, size: 64, elements: !3839)
!3839 = !{!3840, !3841, !3842, !3843}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3838, file: !101, line: 678, baseType: !160, size: 8)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3838, file: !101, line: 679, baseType: !160, size: 8, offset: 8)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "wReseved", scope: !3838, file: !101, line: 680, baseType: !145, size: 16, offset: 16)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerInterval", scope: !3838, file: !101, line: 681, baseType: !3844, size: 32, offset: 32)
!3844 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !146, line: 31, baseType: !180)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !3816, file: !6, line: 71, baseType: !208, size: 128, offset: 192)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !3816, file: !6, line: 72, baseType: !169, size: 64, offset: 320)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "ep_dev", scope: !3816, file: !6, line: 73, baseType: !3848, size: 64, offset: 384)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DICompositeType(tag: DW_TAG_structure_type, name: "ep_device", file: !6, line: 48, flags: DIFlagFwdDecl)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !3816, file: !6, line: 75, baseType: !3851, size: 64, offset: 448)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !3816, file: !6, line: 76, baseType: !168, size: 32, offset: 512)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !3816, file: !6, line: 77, baseType: !168, size: 32, offset: 544)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !3816, file: !6, line: 78, baseType: !168, size: 32, offset: 576)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !171, file: !6, line: 649, baseType: !200, size: 5568, offset: 1280)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !171, file: !6, line: 651, baseType: !3857, size: 144, offset: 6848)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_descriptor", file: !101, line: 289, size: 144, elements: !3858)
!3858 = !{!3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3857, file: !101, line: 290, baseType: !160, size: 8)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3857, file: !101, line: 291, baseType: !160, size: 8, offset: 8)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "bcdUSB", scope: !3857, file: !101, line: 293, baseType: !145, size: 16, offset: 16)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !3857, file: !101, line: 294, baseType: !160, size: 8, offset: 32)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !3857, file: !101, line: 295, baseType: !160, size: 8, offset: 40)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !3857, file: !101, line: 296, baseType: !160, size: 8, offset: 48)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPacketSize0", scope: !3857, file: !101, line: 297, baseType: !160, size: 8, offset: 56)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !3857, file: !101, line: 298, baseType: !145, size: 16, offset: 64)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !3857, file: !101, line: 299, baseType: !145, size: 16, offset: 80)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice", scope: !3857, file: !101, line: 300, baseType: !145, size: 16, offset: 96)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "iManufacturer", scope: !3857, file: !101, line: 301, baseType: !160, size: 8, offset: 112)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "iProduct", scope: !3857, file: !101, line: 302, baseType: !160, size: 8, offset: 120)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "iSerialNumber", scope: !3857, file: !101, line: 303, baseType: !160, size: 8, offset: 128)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "bNumConfigurations", scope: !3857, file: !101, line: 304, baseType: !160, size: 8, offset: 136)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "bos", scope: !171, file: !6, line: 652, baseType: !3874, size: 64, offset: 7040)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_bos", file: !6, line: 396, size: 384, elements: !3876)
!3876 = !{!3877, !3885, !3893, !3905, !3918, !3927}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3875, file: !6, line: 397, baseType: !3878, size: 64)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bos_descriptor", file: !101, line: 844, size: 40, elements: !3880)
!3880 = !{!3881, !3882, !3883, !3884}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3879, file: !101, line: 845, baseType: !160, size: 8)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3879, file: !101, line: 846, baseType: !160, size: 8, offset: 8)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !3879, file: !101, line: 848, baseType: !145, size: 16, offset: 16)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "bNumDeviceCaps", scope: !3879, file: !101, line: 849, baseType: !160, size: 8, offset: 32)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "ext_cap", scope: !3875, file: !6, line: 400, baseType: !3886, size: 64, offset: 64)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ext_cap_descriptor", file: !101, line: 895, size: 56, elements: !3888)
!3888 = !{!3889, !3890, !3891, !3892}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3887, file: !101, line: 896, baseType: !160, size: 8)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3887, file: !101, line: 897, baseType: !160, size: 8, offset: 8)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !3887, file: !101, line: 898, baseType: !160, size: 8, offset: 16)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !3887, file: !101, line: 899, baseType: !3844, size: 32, offset: 24)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "ss_cap", scope: !3875, file: !6, line: 401, baseType: !3894, size: 64, offset: 128)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 64)
!3895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_cap_descriptor", file: !101, line: 917, size: 80, elements: !3896)
!3896 = !{!3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904}
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3895, file: !101, line: 918, baseType: !160, size: 8)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3895, file: !101, line: 919, baseType: !160, size: 8, offset: 8)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !3895, file: !101, line: 920, baseType: !160, size: 8, offset: 16)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !3895, file: !101, line: 921, baseType: !160, size: 8, offset: 24)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "wSpeedSupported", scope: !3895, file: !101, line: 923, baseType: !145, size: 16, offset: 32)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionalitySupport", scope: !3895, file: !101, line: 928, baseType: !160, size: 8, offset: 48)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "bU1devExitLat", scope: !3895, file: !101, line: 929, baseType: !160, size: 8, offset: 56)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "bU2DevExitLat", scope: !3895, file: !101, line: 930, baseType: !145, size: 16, offset: 64)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_cap", scope: !3875, file: !6, line: 402, baseType: !3906, size: 64, offset: 192)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_cap_descriptor", file: !101, line: 955, size: 128, elements: !3908)
!3908 = !{!3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3907, file: !101, line: 956, baseType: !160, size: 8)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3907, file: !101, line: 957, baseType: !160, size: 8, offset: 8)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !3907, file: !101, line: 958, baseType: !160, size: 8, offset: 16)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !3907, file: !101, line: 959, baseType: !160, size: 8, offset: 24)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !3907, file: !101, line: 960, baseType: !3844, size: 32, offset: 32)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "wFunctionalitySupport", scope: !3907, file: !101, line: 963, baseType: !145, size: 16, offset: 64)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "wReserved", scope: !3907, file: !101, line: 967, baseType: !145, size: 16, offset: 80)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "bmSublinkSpeedAttr", scope: !3907, file: !101, line: 968, baseType: !3917, size: 32, offset: 96)
!3917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3844, size: 32, elements: !1348)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "ss_id", scope: !3875, file: !6, line: 403, baseType: !3919, size: 64, offset: 256)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_container_id_descriptor", file: !101, line: 940, size: 160, elements: !3921)
!3921 = !{!3922, !3923, !3924, !3925, !3926}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3920, file: !101, line: 941, baseType: !160, size: 8)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3920, file: !101, line: 942, baseType: !160, size: 8, offset: 8)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !3920, file: !101, line: 943, baseType: !160, size: 8, offset: 16)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !3920, file: !101, line: 944, baseType: !160, size: 8, offset: 24)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "ContainerID", scope: !3920, file: !101, line: 945, baseType: !2680, size: 128, offset: 32)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "ptm_cap", scope: !3875, file: !6, line: 404, baseType: !3928, size: 64, offset: 320)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ptm_cap_descriptor", file: !101, line: 1080, size: 24, elements: !3930)
!3930 = !{!3931, !3932, !3933}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3929, file: !101, line: 1081, baseType: !160, size: 8)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3929, file: !101, line: 1082, baseType: !160, size: 8, offset: 8)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !3929, file: !101, line: 1083, baseType: !160, size: 8, offset: 16)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !171, file: !6, line: 653, baseType: !3935, size: 64, offset: 7104)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_config", file: !6, line: 374, size: 5440, elements: !3937)
!3937 = !{!3938, !3949, !3950, !3963, !4005, !4014, !4015}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3936, file: !6, line: 375, baseType: !3939, size: 72)
!3939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_config_descriptor", file: !101, line: 349, size: 72, elements: !3940)
!3940 = !{!3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3939, file: !101, line: 350, baseType: !160, size: 8)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3939, file: !101, line: 351, baseType: !160, size: 8, offset: 8)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !3939, file: !101, line: 353, baseType: !145, size: 16, offset: 16)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "bNumInterfaces", scope: !3939, file: !101, line: 354, baseType: !160, size: 8, offset: 32)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "bConfigurationValue", scope: !3939, file: !101, line: 355, baseType: !160, size: 8, offset: 40)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "iConfiguration", scope: !3939, file: !101, line: 356, baseType: !160, size: 8, offset: 48)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !3939, file: !101, line: 357, baseType: !160, size: 8, offset: 56)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPower", scope: !3939, file: !101, line: 358, baseType: !160, size: 8, offset: 64)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !3936, file: !6, line: 377, baseType: !262, size: 64, offset: 128)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !3936, file: !6, line: 381, baseType: !3951, size: 1024, offset: 192)
!3951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3952, size: 1024, elements: !176)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_assoc_descriptor", file: !101, line: 783, size: 64, elements: !3954)
!3954 = !{!3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3953, file: !101, line: 784, baseType: !160, size: 8)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3953, file: !101, line: 785, baseType: !160, size: 8, offset: 8)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "bFirstInterface", scope: !3953, file: !101, line: 787, baseType: !160, size: 8, offset: 16)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceCount", scope: !3953, file: !101, line: 788, baseType: !160, size: 8, offset: 24)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionClass", scope: !3953, file: !101, line: 789, baseType: !160, size: 8, offset: 32)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionSubClass", scope: !3953, file: !101, line: 790, baseType: !160, size: 8, offset: 40)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionProtocol", scope: !3953, file: !101, line: 791, baseType: !160, size: 8, offset: 48)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "iFunction", scope: !3953, file: !101, line: 792, baseType: !160, size: 8, offset: 56)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !3936, file: !6, line: 385, baseType: !3964, size: 2048, offset: 1216)
!3964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3965, size: 2048, elements: !2203)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface", file: !6, line: 232, size: 6272, elements: !3967)
!3967 = !{!3968, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !3966, file: !6, line: 235, baseType: !3969, size: 64)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_interface", file: !6, line: 82, size: 320, elements: !3971)
!3971 = !{!3972, !3984, !3985, !3986, !3988}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3970, file: !6, line: 83, baseType: !3973, size: 72)
!3973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_descriptor", file: !101, line: 389, size: 72, elements: !3974)
!3974 = !{!3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !3973, file: !101, line: 390, baseType: !160, size: 8)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !3973, file: !101, line: 391, baseType: !160, size: 8, offset: 8)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !3973, file: !101, line: 393, baseType: !160, size: 8, offset: 16)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "bAlternateSetting", scope: !3973, file: !101, line: 394, baseType: !160, size: 8, offset: 24)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "bNumEndpoints", scope: !3973, file: !101, line: 395, baseType: !160, size: 8, offset: 32)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !3973, file: !101, line: 396, baseType: !160, size: 8, offset: 40)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !3973, file: !101, line: 397, baseType: !160, size: 8, offset: 48)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !3973, file: !101, line: 398, baseType: !160, size: 8, offset: 56)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "iInterface", scope: !3973, file: !101, line: 399, baseType: !160, size: 8, offset: 64)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !3970, file: !6, line: 85, baseType: !168, size: 32, offset: 96)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !3970, file: !6, line: 86, baseType: !3851, size: 64, offset: 128)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint", scope: !3970, file: !6, line: 91, baseType: !3987, size: 64, offset: 192)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !3970, file: !6, line: 93, baseType: !262, size: 64, offset: 256)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "cur_altsetting", scope: !3966, file: !6, line: 237, baseType: !3969, size: 64, offset: 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !3966, file: !6, line: 239, baseType: !7, size: 32, offset: 128)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !3966, file: !6, line: 243, baseType: !3952, size: 64, offset: 192)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3966, file: !6, line: 245, baseType: !168, size: 32, offset: 256)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !3966, file: !6, line: 247, baseType: !5, size: 32, offset: 288)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_files_created", scope: !3966, file: !6, line: 248, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "ep_devs_created", scope: !3966, file: !6, line: 249, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !3966, file: !6, line: 250, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "needs_remote_wakeup", scope: !3966, file: !6, line: 251, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "needs_altsetting0", scope: !3966, file: !6, line: 252, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "needs_binding", scope: !3966, file: !6, line: 253, baseType: !7, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "resetting_device", scope: !3966, file: !6, line: 254, baseType: !7, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !3966, file: !6, line: 255, baseType: !7, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3966, file: !6, line: 257, baseType: !200, size: 5568, offset: 384)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "usb_dev", scope: !3966, file: !6, line: 258, baseType: !199, size: 64, offset: 5952)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ws", scope: !3966, file: !6, line: 259, baseType: !1930, size: 256, offset: 6016)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "intf_cache", scope: !3936, file: !6, line: 389, baseType: !4006, size: 2048, offset: 3264)
!4006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4007, size: 2048, elements: !2203)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_cache", file: !6, line: 322, size: 64, elements: !4009)
!4009 = !{!4010, !4011, !4012}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !4008, file: !6, line: 323, baseType: !7, size: 32)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4008, file: !6, line: 324, baseType: !3336, size: 32, offset: 32)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !4008, file: !6, line: 328, baseType: !4013, offset: 64)
!4013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3970, elements: !2304)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !3936, file: !6, line: 391, baseType: !3851, size: 64, offset: 5312)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !3936, file: !6, line: 392, baseType: !168, size: 32, offset: 5376)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "actconfig", scope: !171, file: !6, line: 655, baseType: !3935, size: 64, offset: 7168)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "ep_in", scope: !171, file: !6, line: 656, baseType: !4018, size: 1024, offset: 7232)
!4018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3987, size: 1024, elements: !176)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "ep_out", scope: !171, file: !6, line: 657, baseType: !4018, size: 1024, offset: 8256)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "rawdescriptors", scope: !171, file: !6, line: 659, baseType: !4021, size: 64, offset: 9280)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mA", scope: !171, file: !6, line: 661, baseType: !144, size: 16, offset: 9344)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "portnum", scope: !171, file: !6, line: 662, baseType: !159, size: 8, offset: 9360)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !171, file: !6, line: 663, baseType: !159, size: 8, offset: 9368)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "devaddr", scope: !171, file: !6, line: 664, baseType: !159, size: 8, offset: 9376)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "can_submit", scope: !171, file: !6, line: 666, baseType: !7, size: 1, offset: 9384, flags: DIFlagBitField, extraData: i64 9384)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "persist_enabled", scope: !171, file: !6, line: 667, baseType: !7, size: 1, offset: 9385, flags: DIFlagBitField, extraData: i64 9384)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "have_langid", scope: !171, file: !6, line: 668, baseType: !7, size: 1, offset: 9386, flags: DIFlagBitField, extraData: i64 9384)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !171, file: !6, line: 669, baseType: !7, size: 1, offset: 9387, flags: DIFlagBitField, extraData: i64 9384)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !171, file: !6, line: 670, baseType: !7, size: 1, offset: 9388, flags: DIFlagBitField, extraData: i64 9384)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "wusb", scope: !171, file: !6, line: 671, baseType: !7, size: 1, offset: 9389, flags: DIFlagBitField, extraData: i64 9384)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_capable", scope: !171, file: !6, line: 672, baseType: !7, size: 1, offset: 9390, flags: DIFlagBitField, extraData: i64 9384)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_capable", scope: !171, file: !6, line: 673, baseType: !7, size: 1, offset: 9391, flags: DIFlagBitField, extraData: i64 9384)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_besl_capable", scope: !171, file: !6, line: 674, baseType: !7, size: 1, offset: 9392, flags: DIFlagBitField, extraData: i64 9384)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_enabled", scope: !171, file: !6, line: 675, baseType: !7, size: 1, offset: 9393, flags: DIFlagBitField, extraData: i64 9384)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_allowed", scope: !171, file: !6, line: 676, baseType: !7, size: 1, offset: 9394, flags: DIFlagBitField, extraData: i64 9384)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u1_enabled", scope: !171, file: !6, line: 677, baseType: !7, size: 1, offset: 9395, flags: DIFlagBitField, extraData: i64 9384)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u2_enabled", scope: !171, file: !6, line: 678, baseType: !7, size: 1, offset: 9396, flags: DIFlagBitField, extraData: i64 9384)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "string_langid", scope: !171, file: !6, line: 679, baseType: !168, size: 32, offset: 9408)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !171, file: !6, line: 682, baseType: !262, size: 64, offset: 9472)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !171, file: !6, line: 683, baseType: !262, size: 64, offset: 9536)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !171, file: !6, line: 684, baseType: !262, size: 64, offset: 9600)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !171, file: !6, line: 686, baseType: !208, size: 128, offset: 9664)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "maxchild", scope: !171, file: !6, line: 688, baseType: !168, size: 32, offset: 9792)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !171, file: !6, line: 690, baseType: !179, size: 32, offset: 9824)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "urbnum", scope: !171, file: !6, line: 691, baseType: !728, size: 32, offset: 9856)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "active_duration", scope: !171, file: !6, line: 693, baseType: !311, size: 64, offset: 9920)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "connect_time", scope: !171, file: !6, line: 696, baseType: !311, size: 64, offset: 9984)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "do_remote_wakeup", scope: !171, file: !6, line: 698, baseType: !7, size: 1, offset: 10048, flags: DIFlagBitField, extraData: i64 10048)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !171, file: !6, line: 699, baseType: !7, size: 1, offset: 10049, flags: DIFlagBitField, extraData: i64 10048)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "port_is_suspended", scope: !171, file: !6, line: 700, baseType: !7, size: 1, offset: 10050, flags: DIFlagBitField, extraData: i64 10048)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "wusb_dev", scope: !171, file: !6, line: 702, baseType: !4053, size: 64, offset: 10112)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = !DICompositeType(tag: DW_TAG_structure_type, name: "wusb_dev", file: !6, line: 28, flags: DIFlagFwdDecl)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "slot_id", scope: !171, file: !6, line: 703, baseType: !168, size: 32, offset: 10176)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !171, file: !6, line: 704, baseType: !121, size: 32, offset: 10208)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "l1_params", scope: !171, file: !6, line: 705, baseType: !4058, size: 64, offset: 10240)
!4058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb2_lpm_parameters", file: !6, line: 502, size: 64, elements: !4059)
!4059 = !{!4060, !4061}
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "besl", scope: !4058, file: !6, line: 506, baseType: !7, size: 32)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4058, file: !6, line: 512, baseType: !168, size: 32, offset: 32)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "u1_params", scope: !171, file: !6, line: 706, baseType: !4063, size: 128, offset: 10304)
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb3_lpm_parameters", file: !6, line: 522, size: 128, elements: !4064)
!4064 = !{!4065, !4066, !4067, !4068}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "mel", scope: !4063, file: !6, line: 529, baseType: !7, size: 32)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "pel", scope: !4063, file: !6, line: 535, baseType: !7, size: 32, offset: 32)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "sel", scope: !4063, file: !6, line: 545, baseType: !7, size: 32, offset: 64)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4063, file: !6, line: 551, baseType: !168, size: 32, offset: 96)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "u2_params", scope: !171, file: !6, line: 707, baseType: !4063, size: 128, offset: 10432)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_disable_count", scope: !171, file: !6, line: 708, baseType: !7, size: 32, offset: 10560)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "hub_delay", scope: !171, file: !6, line: 710, baseType: !147, size: 16, offset: 10592)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "use_generic_driver", scope: !171, file: !6, line: 711, baseType: !7, size: 1, offset: 10608, flags: DIFlagBitField, extraData: i64 10608)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 64)
!4074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_timeout", file: !3, line: 588, size: 384, elements: !4075)
!4075 = !{!4076, !4077}
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4074, file: !3, line: 589, baseType: !3536, size: 320)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !4074, file: !3, line: 590, baseType: !4078, size: 64, offset: 320)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_sg_request", file: !6, line: 1873, size: 576, elements: !4080)
!4080 = !{!4081, !4082, !4083, !4084, !4085, !4086, !4087, !4150, !4151}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4079, file: !6, line: 1874, baseType: !168, size: 32)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !4079, file: !6, line: 1875, baseType: !308, size: 64, offset: 64)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4079, file: !6, line: 1881, baseType: !221, offset: 128)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4079, file: !6, line: 1883, baseType: !170, size: 64, offset: 128)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !4079, file: !6, line: 1884, baseType: !168, size: 32, offset: 192)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !4079, file: !6, line: 1886, baseType: !168, size: 32, offset: 224)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "urbs", scope: !4079, file: !6, line: 1887, baseType: !4088, size: 64, offset: 256)
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "urb", file: !6, line: 1561, size: 1472, elements: !4091)
!4091 = !{!4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4108, !4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4142}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4090, file: !6, line: 1563, baseType: !3336, size: 32)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "unlinked", scope: !4090, file: !6, line: 1564, baseType: !168, size: 32, offset: 32)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !4090, file: !6, line: 1565, baseType: !169, size: 64, offset: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !4090, file: !6, line: 1566, baseType: !728, size: 32, offset: 128)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "reject", scope: !4090, file: !6, line: 1567, baseType: !728, size: 32, offset: 160)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4090, file: !6, line: 1570, baseType: !208, size: 128, offset: 192)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "anchor_list", scope: !4090, file: !6, line: 1572, baseType: !208, size: 128, offset: 320)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "anchor", scope: !4090, file: !6, line: 1573, baseType: !4100, size: 64, offset: 448)
!4100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 64)
!4101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_anchor", file: !6, line: 1360, size: 320, elements: !4102)
!4102 = !{!4103, !4104, !4105, !4106, !4107}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4101, file: !6, line: 1361, baseType: !208, size: 128)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4101, file: !6, line: 1362, baseType: !1458, size: 128, offset: 128)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4101, file: !6, line: 1363, baseType: !221, offset: 256)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_wakeups", scope: !4101, file: !6, line: 1364, baseType: !728, size: 32, offset: 256)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "poisoned", scope: !4101, file: !6, line: 1365, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4090, file: !6, line: 1574, baseType: !170, size: 64, offset: 512)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !4090, file: !6, line: 1575, baseType: !3987, size: 64, offset: 576)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !4090, file: !6, line: 1576, baseType: !7, size: 32, offset: 640)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !4090, file: !6, line: 1577, baseType: !7, size: 32, offset: 672)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4090, file: !6, line: 1578, baseType: !168, size: 32, offset: 704)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_flags", scope: !4090, file: !6, line: 1579, baseType: !7, size: 32, offset: 736)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer", scope: !4090, file: !6, line: 1580, baseType: !169, size: 64, offset: 768)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_dma", scope: !4090, file: !6, line: 1581, baseType: !899, size: 64, offset: 832)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !4090, file: !6, line: 1582, baseType: !4117, size: 64, offset: 896)
!4117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4118, size: 64)
!4118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4119, line: 11, size: 256, elements: !4120)
!4119 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4120 = !{!4121, !4122, !4123, !4124, !4125}
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4118, file: !4119, line: 12, baseType: !311, size: 64)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4118, file: !4119, line: 13, baseType: !7, size: 32, offset: 64)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4118, file: !4119, line: 14, baseType: !7, size: 32, offset: 96)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4118, file: !4119, line: 15, baseType: !899, size: 64, offset: 128)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4118, file: !4119, line: 17, baseType: !7, size: 32, offset: 192)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "num_mapped_sgs", scope: !4090, file: !6, line: 1583, baseType: !168, size: 32, offset: 960)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "num_sgs", scope: !4090, file: !6, line: 1584, baseType: !168, size: 32, offset: 992)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer_length", scope: !4090, file: !6, line: 1585, baseType: !179, size: 32, offset: 1024)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4090, file: !6, line: 1586, baseType: !179, size: 32, offset: 1056)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "setup_packet", scope: !4090, file: !6, line: 1587, baseType: !3851, size: 64, offset: 1088)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "setup_dma", scope: !4090, file: !6, line: 1588, baseType: !899, size: 64, offset: 1152)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !4090, file: !6, line: 1589, baseType: !168, size: 32, offset: 1216)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_packets", scope: !4090, file: !6, line: 1590, baseType: !168, size: 32, offset: 1248)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !4090, file: !6, line: 1591, baseType: !168, size: 32, offset: 1280)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !4090, file: !6, line: 1593, baseType: !168, size: 32, offset: 1312)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4090, file: !6, line: 1594, baseType: !169, size: 64, offset: 1344)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4090, file: !6, line: 1595, baseType: !4138, size: 64, offset: 1408)
!4138 = !DIDerivedType(tag: DW_TAG_typedef, name: "usb_complete_t", file: !6, line: 1376, baseType: !4139)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{null, !4089}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "iso_frame_desc", scope: !4090, file: !6, line: 1596, baseType: !4143, offset: 1472)
!4143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4144, elements: !2304)
!4144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_iso_packet_descriptor", file: !6, line: 1351, size: 128, elements: !4145)
!4145 = !{!4146, !4147, !4148, !4149}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4144, file: !6, line: 1352, baseType: !7, size: 32)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4144, file: !6, line: 1353, baseType: !7, size: 32, offset: 32)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4144, file: !6, line: 1354, baseType: !7, size: 32, offset: 64)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4144, file: !6, line: 1355, baseType: !168, size: 32, offset: 96)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4079, file: !6, line: 1889, baseType: !168, size: 32, offset: 320)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4079, file: !6, line: 1890, baseType: !1479, size: 192, offset: 384)
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4153, size: 64)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_dev_cap_header", file: !101, line: 856, size: 24, elements: !4154)
!4154 = !{!4155, !4156, !4157}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4153, file: !101, line: 857, baseType: !160, size: 8)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4153, file: !101, line: 858, baseType: !160, size: 8, offset: 8)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4153, file: !101, line: 859, baseType: !160, size: 8, offset: 16)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64)
!4159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_qualifier_descriptor", file: !101, line: 727, size: 80, elements: !4160)
!4160 = !{!4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4159, file: !101, line: 728, baseType: !160, size: 8)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4159, file: !101, line: 729, baseType: !160, size: 8, offset: 8)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "bcdUSB", scope: !4159, file: !101, line: 731, baseType: !145, size: 16, offset: 16)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !4159, file: !101, line: 732, baseType: !160, size: 8, offset: 32)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !4159, file: !101, line: 733, baseType: !160, size: 8, offset: 40)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !4159, file: !101, line: 734, baseType: !160, size: 8, offset: 48)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPacketSize0", scope: !4159, file: !101, line: 735, baseType: !160, size: 8, offset: 56)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "bNumConfigurations", scope: !4159, file: !101, line: 736, baseType: !160, size: 8, offset: 64)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "bRESERVED", scope: !4159, file: !101, line: 737, baseType: !160, size: 8, offset: 72)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4172, size: 64)
!4172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ctrlrequest", file: !101, line: 213, size: 64, elements: !4173)
!4173 = !{!4174, !4175, !4176, !4177, !4178}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "bRequestType", scope: !4172, file: !101, line: 214, baseType: !160, size: 8)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "bRequest", scope: !4172, file: !101, line: 215, baseType: !160, size: 8, offset: 8)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "wValue", scope: !4172, file: !101, line: 216, baseType: !145, size: 16, offset: 16)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "wIndex", scope: !4172, file: !101, line: 217, baseType: !145, size: 16, offset: 32)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "wLength", scope: !4172, file: !101, line: 218, baseType: !145, size: 16, offset: 48)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subcase", file: !3, line: 1081, size: 128, elements: !4181)
!4181 = !{!4182, !4183, !4184}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !4180, file: !3, line: 1082, baseType: !4172, size: 64)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4180, file: !3, line: 1083, baseType: !168, size: 32, offset: 64)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "expected", scope: !4180, file: !3, line: 1084, baseType: !168, size: 32, offset: 96)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4186, size: 64)
!4186 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !168)
!4187 = !{!4188, !4240, !4245, !4250, !4252, !4257, !4262, !4264, !4267, !4270, !4272, !4277, !4282, !4284, !4289, !4294, !4296, !4298, !4303, !4305, !4310, !4312, !4314, !4317, !4319, !4321, !4323, !0, !4325, !4327, !4330, !4335, !4337, !4342, !4347, !4349, !4410, !4413, !4415, !4420, !4423, !4425, !4427, !4429, !4431, !4433, !4435}
!4188 = !DIGlobalVariableExpression(var: !4189, expr: !DIExpression())
!4189 = distinct !DIGlobalVariable(name: "__param_alt", scope: !2, file: !3, line: 19, type: !4190, isLocal: true, isDefinition: true, align: 64)
!4190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4191)
!4191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4192, line: 69, size: 320, elements: !4193)
!4192 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4193 = !{!4194, !4195, !4196, !4212, !4214, !4218, !4219}
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4191, file: !4192, line: 70, baseType: !155, size: 64)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4191, file: !4192, line: 71, baseType: !139, size: 64, offset: 64)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4191, file: !4192, line: 72, baseType: !4197, size: 64, offset: 128)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4199)
!4199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4192, line: 47, size: 256, elements: !4200)
!4200 = !{!4201, !4202, !4207, !4211}
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4199, file: !4192, line: 49, baseType: !7, size: 32)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4199, file: !4192, line: 51, baseType: !4203, size: 64, offset: 64)
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4204, size: 64)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!168, !155, !4206}
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4199, file: !4192, line: 53, baseType: !4208, size: 64, offset: 128)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!168, !262, !4206}
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4199, file: !4192, line: 55, baseType: !450, size: 64, offset: 192)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4191, file: !4192, line: 73, baseType: !4213, size: 16, offset: 192)
!4213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !147)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4191, file: !4192, line: 74, baseType: !4215, size: 8, offset: 208)
!4215 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !148, line: 16, baseType: !4216)
!4216 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !143, line: 20, baseType: !4217)
!4217 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4191, file: !4192, line: 75, baseType: !159, size: 8, offset: 216)
!4219 = !DIDerivedType(tag: DW_TAG_member, scope: !4191, file: !4192, line: 76, baseType: !4220, size: 64, offset: 256)
!4220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4191, file: !4192, line: 76, size: 64, elements: !4221)
!4221 = !{!4222, !4223, !4230}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4220, file: !4192, line: 77, baseType: !169, size: 64)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4220, file: !4192, line: 78, baseType: !4224, size: 64)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4226)
!4226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4192, line: 86, size: 128, elements: !4227)
!4227 = !{!4228, !4229}
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4226, file: !4192, line: 87, baseType: !7, size: 32)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4226, file: !4192, line: 88, baseType: !262, size: 64, offset: 64)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4220, file: !4192, line: 79, baseType: !4231, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!4232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4233)
!4233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4192, line: 92, size: 256, elements: !4234)
!4234 = !{!4235, !4236, !4237, !4238, !4239}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4233, file: !4192, line: 94, baseType: !7, size: 32)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4233, file: !4192, line: 95, baseType: !7, size: 32, offset: 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4233, file: !4192, line: 96, baseType: !2656, size: 64, offset: 64)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4233, file: !4192, line: 97, baseType: !4197, size: 64, offset: 128)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4233, file: !4192, line: 98, baseType: !169, size: 64, offset: 192)
!4240 = !DIGlobalVariableExpression(var: !4241, expr: !DIExpression())
!4241 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_alttype236", scope: !2, file: !3, line: 19, type: !4242, isLocal: true, isDefinition: true, align: 8)
!4242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 200, elements: !4243)
!4243 = !{!4244}
!4244 = !DISubrange(count: 25)
!4245 = !DIGlobalVariableExpression(var: !4246, expr: !DIExpression())
!4246 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_alt237", scope: !2, file: !3, line: 20, type: !4247, isLocal: true, isDefinition: true, align: 8)
!4247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 440, elements: !4248)
!4248 = !{!4249}
!4249 = !DISubrange(count: 55)
!4250 = !DIGlobalVariableExpression(var: !4251, expr: !DIExpression())
!4251 = distinct !DIGlobalVariable(name: "__param_pattern", scope: !2, file: !3, line: 339, type: !4190, isLocal: true, isDefinition: true, align: 64)
!4252 = !DIGlobalVariableExpression(var: !4253, expr: !DIExpression())
!4253 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_patterntype238", scope: !2, file: !3, line: 339, type: !4254, isLocal: true, isDefinition: true, align: 8)
!4254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 240, elements: !4255)
!4255 = !{!4256}
!4256 = !DISubrange(count: 30)
!4257 = !DIGlobalVariableExpression(var: !4258, expr: !DIExpression())
!4258 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_mod_pattern239", scope: !2, file: !3, line: 340, type: !4259, isLocal: true, isDefinition: true, align: 8)
!4259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 408, elements: !4260)
!4260 = !{!4261}
!4261 = !DISubrange(count: 51)
!4262 = !DIGlobalVariableExpression(var: !4263, expr: !DIExpression())
!4263 = distinct !DIGlobalVariable(name: "__param_realworld", scope: !2, file: !3, line: 666, type: !4190, isLocal: true, isDefinition: true, align: 64)
!4264 = !DIGlobalVariableExpression(var: !4265, expr: !DIExpression())
!4265 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_realworldtype241", scope: !2, file: !3, line: 666, type: !4266, isLocal: true, isDefinition: true, align: 8)
!4266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 256, elements: !2203)
!4267 = !DIGlobalVariableExpression(var: !4268, expr: !DIExpression())
!4268 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_realworld242", scope: !2, file: !3, line: 667, type: !4269, isLocal: true, isDefinition: true, align: 8)
!4269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 512, elements: !267)
!4270 = !DIGlobalVariableExpression(var: !4271, expr: !DIExpression())
!4271 = distinct !DIGlobalVariable(name: "__param_force_interrupt", scope: !2, file: !3, line: 2748, type: !4190, isLocal: true, isDefinition: true, align: 64)
!4272 = !DIGlobalVariableExpression(var: !4273, expr: !DIExpression())
!4273 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_force_interrupttype246", scope: !2, file: !3, line: 2748, type: !4274, isLocal: true, isDefinition: true, align: 8)
!4274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 304, elements: !4275)
!4275 = !{!4276}
!4276 = !DISubrange(count: 38)
!4277 = !DIGlobalVariableExpression(var: !4278, expr: !DIExpression())
!4278 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_force_interrupt247", scope: !2, file: !3, line: 2749, type: !4279, isLocal: true, isDefinition: true, align: 8)
!4279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 496, elements: !4280)
!4280 = !{!4281}
!4281 = !DISubrange(count: 62)
!4282 = !DIGlobalVariableExpression(var: !4283, expr: !DIExpression())
!4283 = distinct !DIGlobalVariable(name: "__param_vendor", scope: !2, file: !3, line: 2753, type: !4190, isLocal: true, isDefinition: true, align: 64)
!4284 = !DIGlobalVariableExpression(var: !4285, expr: !DIExpression())
!4285 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_vendortype248", scope: !2, file: !3, line: 2753, type: !4286, isLocal: true, isDefinition: true, align: 8)
!4286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 248, elements: !4287)
!4287 = !{!4288}
!4288 = !DISubrange(count: 31)
!4289 = !DIGlobalVariableExpression(var: !4290, expr: !DIExpression())
!4290 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_vendor249", scope: !2, file: !3, line: 2754, type: !4291, isLocal: true, isDefinition: true, align: 8)
!4291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 368, elements: !4292)
!4292 = !{!4293}
!4293 = !DISubrange(count: 46)
!4294 = !DIGlobalVariableExpression(var: !4295, expr: !DIExpression())
!4295 = distinct !DIGlobalVariable(name: "__param_product", scope: !2, file: !3, line: 2757, type: !4190, isLocal: true, isDefinition: true, align: 64)
!4296 = !DIGlobalVariableExpression(var: !4297, expr: !DIExpression())
!4297 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_producttype250", scope: !2, file: !3, line: 2757, type: !4266, isLocal: true, isDefinition: true, align: 8)
!4298 = !DIGlobalVariableExpression(var: !4299, expr: !DIExpression())
!4299 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_product251", scope: !2, file: !3, line: 2758, type: !4300, isLocal: true, isDefinition: true, align: 8)
!4300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 384, elements: !4301)
!4301 = !{!4302}
!4302 = !DISubrange(count: 48)
!4303 = !DIGlobalVariableExpression(var: !4304, expr: !DIExpression())
!4304 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_usbtest_init252", scope: !2, file: !3, line: 3068, type: !169, isLocal: true, isDefinition: true)
!4305 = !DIGlobalVariableExpression(var: !4306, expr: !DIExpression())
!4306 = distinct !DIGlobalVariable(name: "__exitcall_usbtest_exit", scope: !2, file: !3, line: 3074, type: !4307, isLocal: true, isDefinition: true)
!4307 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4308, line: 117, baseType: !4309)
!4308 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!4310 = !DIGlobalVariableExpression(var: !4311, expr: !DIExpression())
!4311 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description253", scope: !2, file: !3, line: 3076, type: !4300, isLocal: true, isDefinition: true, align: 8)
!4312 = !DIGlobalVariableExpression(var: !4313, expr: !DIExpression())
!4313 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file254", scope: !2, file: !3, line: 3077, type: !4274, isLocal: true, isDefinition: true, align: 8)
!4314 = !DIGlobalVariableExpression(var: !4315, expr: !DIExpression())
!4315 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license255", scope: !2, file: !3, line: 3077, type: !4316, isLocal: true, isDefinition: true, align: 8)
!4316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 160, elements: !2174)
!4317 = !DIGlobalVariableExpression(var: !4318, expr: !DIExpression())
!4318 = distinct !DIGlobalVariable(name: "mod_pattern", scope: !2, file: !3, line: 338, type: !7, isLocal: true, isDefinition: true)
!4319 = !DIGlobalVariableExpression(var: !4320, expr: !DIExpression())
!4320 = distinct !DIGlobalVariable(name: "force_interrupt", scope: !2, file: !3, line: 2747, type: !7, isLocal: true, isDefinition: true)
!4321 = !DIGlobalVariableExpression(var: !4322, expr: !DIExpression())
!4322 = distinct !DIGlobalVariable(name: "vendor", scope: !2, file: !3, line: 2752, type: !144, isLocal: true, isDefinition: true)
!4323 = !DIGlobalVariableExpression(var: !4324, expr: !DIExpression())
!4324 = distinct !DIGlobalVariable(name: "product", scope: !2, file: !3, line: 2756, type: !144, isLocal: true, isDefinition: true)
!4325 = !DIGlobalVariableExpression(var: !4326, expr: !DIExpression())
!4326 = distinct !DIGlobalVariable(name: "override_alt", scope: !2, file: !3, line: 18, type: !168, isLocal: true, isDefinition: true)
!4327 = !DIGlobalVariableExpression(var: !4328, expr: !DIExpression())
!4328 = distinct !DIGlobalVariable(name: "__param_str_pattern", scope: !2, file: !3, line: 339, type: !4329, isLocal: true, isDefinition: true)
!4329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 128, elements: !176)
!4330 = !DIGlobalVariableExpression(var: !4331, expr: !DIExpression())
!4331 = distinct !DIGlobalVariable(name: "__param_str_realworld", scope: !2, file: !3, line: 666, type: !4332, isLocal: true, isDefinition: true)
!4332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 144, elements: !4333)
!4333 = !{!4334}
!4334 = !DISubrange(count: 18)
!4335 = !DIGlobalVariableExpression(var: !4336, expr: !DIExpression())
!4336 = distinct !DIGlobalVariable(name: "realworld", scope: !2, file: !3, line: 665, type: !7, isLocal: true, isDefinition: true)
!4337 = !DIGlobalVariableExpression(var: !4338, expr: !DIExpression())
!4338 = distinct !DIGlobalVariable(name: "__param_str_force_interrupt", scope: !2, file: !3, line: 2748, type: !4339, isLocal: true, isDefinition: true)
!4339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 192, elements: !4340)
!4340 = !{!4341}
!4341 = !DISubrange(count: 24)
!4342 = !DIGlobalVariableExpression(var: !4343, expr: !DIExpression())
!4343 = distinct !DIGlobalVariable(name: "__param_str_vendor", scope: !2, file: !3, line: 2753, type: !4344, isLocal: true, isDefinition: true)
!4344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 120, elements: !4345)
!4345 = !{!4346}
!4346 = !DISubrange(count: 15)
!4347 = !DIGlobalVariableExpression(var: !4348, expr: !DIExpression())
!4348 = distinct !DIGlobalVariable(name: "__param_str_product", scope: !2, file: !3, line: 2757, type: !4329, isLocal: true, isDefinition: true)
!4349 = !DIGlobalVariableExpression(var: !4350, expr: !DIExpression())
!4350 = distinct !DIGlobalVariable(name: "usbtest_driver", scope: !2, file: !3, line: 3048, type: !4351, isLocal: true, isDefinition: true)
!4351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_driver", file: !6, line: 1184, size: 2112, elements: !4352)
!4352 = !{!4353, !4354, !4375, !4379, !4383, !4387, !4391, !4392, !4393, !4394, !4395, !4396, !4401, !4406, !4407, !4408, !4409}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4351, file: !6, line: 1185, baseType: !155, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4351, file: !6, line: 1187, baseType: !4355, size: 64, offset: 64)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!168, !3965, !4358}
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4360)
!4360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_id", file: !3429, line: 121, size: 256, elements: !4361)
!4361 = !{!4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374}
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "match_flags", scope: !4360, file: !3429, line: 123, baseType: !142, size: 16)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !4360, file: !3429, line: 126, baseType: !142, size: 16, offset: 16)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !4360, file: !3429, line: 127, baseType: !142, size: 16, offset: 32)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice_lo", scope: !4360, file: !3429, line: 128, baseType: !142, size: 16, offset: 48)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice_hi", scope: !4360, file: !3429, line: 129, baseType: !142, size: 16, offset: 64)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !4360, file: !3429, line: 132, baseType: !160, size: 8, offset: 80)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !4360, file: !3429, line: 133, baseType: !160, size: 8, offset: 88)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !4360, file: !3429, line: 134, baseType: !160, size: 8, offset: 96)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !4360, file: !3429, line: 137, baseType: !160, size: 8, offset: 104)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !4360, file: !3429, line: 138, baseType: !160, size: 8, offset: 112)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !4360, file: !3429, line: 139, baseType: !160, size: 8, offset: 120)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !4360, file: !3429, line: 142, baseType: !160, size: 8, offset: 128)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !4360, file: !3429, line: 145, baseType: !3448, size: 64, align: 64, offset: 192)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !4351, file: !6, line: 1190, baseType: !4376, size: 64, offset: 128)
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{null, !3965}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4351, file: !6, line: 1192, baseType: !4380, size: 64, offset: 192)
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4381, size: 64)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{!168, !3965, !7, !169}
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4351, file: !6, line: 1195, baseType: !4384, size: 64, offset: 256)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{!168, !3965, !3459}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4351, file: !6, line: 1196, baseType: !4388, size: 64, offset: 320)
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4389, size: 64)
!4389 = !DISubroutineType(types: !4390)
!4390 = !{!168, !3965}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !4351, file: !6, line: 1197, baseType: !4388, size: 64, offset: 384)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "pre_reset", scope: !4351, file: !6, line: 1199, baseType: !4388, size: 64, offset: 448)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "post_reset", scope: !4351, file: !6, line: 1200, baseType: !4388, size: 64, offset: 512)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4351, file: !6, line: 1202, baseType: !4358, size: 64, offset: 576)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4351, file: !6, line: 1203, baseType: !315, size: 64, offset: 640)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4351, file: !6, line: 1205, baseType: !4397, size: 128, offset: 704)
!4397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_dynids", file: !6, line: 1091, size: 128, elements: !4398)
!4398 = !{!4399, !4400}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4397, file: !6, line: 1092, baseType: !221)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4397, file: !6, line: 1093, baseType: !208, size: 128)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "drvwrap", scope: !4351, file: !6, line: 1206, baseType: !4402, size: 1216, offset: 832)
!4402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdrv_wrap", file: !6, line: 1113, size: 1216, elements: !4403)
!4403 = !{!4404, !4405}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4402, file: !6, line: 1114, baseType: !3417, size: 1152)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "for_devices", scope: !4402, file: !6, line: 1115, baseType: !168, size: 32, offset: 1152)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "no_dynamic_id", scope: !4351, file: !6, line: 1207, baseType: !7, size: 1, offset: 2048, flags: DIFlagBitField, extraData: i64 2048)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "supports_autosuspend", scope: !4351, file: !6, line: 1208, baseType: !7, size: 1, offset: 2049, flags: DIFlagBitField, extraData: i64 2048)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "disable_hub_initiated_lpm", scope: !4351, file: !6, line: 1209, baseType: !7, size: 1, offset: 2050, flags: DIFlagBitField, extraData: i64 2048)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "soft_unbind", scope: !4351, file: !6, line: 1210, baseType: !7, size: 1, offset: 2051, flags: DIFlagBitField, extraData: i64 2048)
!4410 = !DIGlobalVariableExpression(var: !4411, expr: !DIExpression())
!4411 = distinct !DIGlobalVariable(name: "__key", scope: !4412, file: !3, line: 2793, type: !626, isLocal: true, isDefinition: true)
!4412 = distinct !DISubprogram(name: "usbtest_probe", scope: !3, file: !3, line: 2762, type: !4356, scopeLine: 2763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4413 = !DIGlobalVariableExpression(var: !4414, expr: !DIExpression())
!4414 = distinct !DIGlobalVariable(name: "pattern", scope: !2, file: !3, line: 337, type: !7, isLocal: true, isDefinition: true)
!4415 = !DIGlobalVariableExpression(var: !4416, expr: !DIExpression())
!4416 = distinct !DIGlobalVariable(name: "__key", scope: !4417, file: !1480, line: 88, type: !626, isLocal: true, isDefinition: true)
!4417 = distinct !DISubprogram(name: "__init_completion", scope: !1480, file: !1480, line: 85, type: !4418, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{null, !1478}
!4420 = !DIGlobalVariableExpression(var: !4421, expr: !DIExpression())
!4421 = distinct !DIGlobalVariable(name: "id_table", scope: !2, file: !3, line: 2974, type: !4422, isLocal: true, isDefinition: true)
!4422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4359, size: 2304, elements: !3445)
!4423 = !DIGlobalVariableExpression(var: !4424, expr: !DIExpression())
!4424 = distinct !DIGlobalVariable(name: "ez1_info", scope: !2, file: !3, line: 2900, type: !152, isLocal: true, isDefinition: true)
!4425 = !DIGlobalVariableExpression(var: !4426, expr: !DIExpression())
!4426 = distinct !DIGlobalVariable(name: "ez2_info", scope: !2, file: !3, line: 2908, type: !152, isLocal: true, isDefinition: true)
!4427 = !DIGlobalVariableExpression(var: !4428, expr: !DIExpression())
!4428 = distinct !DIGlobalVariable(name: "fw_info", scope: !2, file: !3, line: 2917, type: !152, isLocal: true, isDefinition: true)
!4429 = !DIGlobalVariableExpression(var: !4430, expr: !DIExpression())
!4430 = distinct !DIGlobalVariable(name: "gz_info", scope: !2, file: !3, line: 2932, type: !152, isLocal: true, isDefinition: true)
!4431 = !DIGlobalVariableExpression(var: !4432, expr: !DIExpression())
!4432 = distinct !DIGlobalVariable(name: "um_info", scope: !2, file: !3, line: 2941, type: !152, isLocal: true, isDefinition: true)
!4433 = !DIGlobalVariableExpression(var: !4434, expr: !DIExpression())
!4434 = distinct !DIGlobalVariable(name: "um2_info", scope: !2, file: !3, line: 2947, type: !152, isLocal: true, isDefinition: true)
!4435 = !DIGlobalVariableExpression(var: !4436, expr: !DIExpression())
!4436 = distinct !DIGlobalVariable(name: "generic_info", scope: !2, file: !3, line: 2967, type: !152, isLocal: true, isDefinition: true)
!4437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 96, elements: !2209)
!4438 = !{!"rsp"}
!4439 = !{i32 7, !"Dwarf Version", i32 4}
!4440 = !{i32 2, !"Debug Info Version", i32 3}
!4441 = !{i32 1, !"wchar_size", i32 2}
!4442 = !{i32 1, !"Code Model", i32 2}
!4443 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4444 = distinct !DISubprogram(name: "usbtest_init", scope: !3, file: !3, line: 3060, type: !4445, scopeLine: 3061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!168}
!4447 = !DILocation(line: 3063, column: 6, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 3063, column: 6)
!4449 = !DILocation(line: 3063, column: 6, scope: !4444)
!4450 = !DILocation(line: 3064, column: 3, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 3064, column: 3)
!4452 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 3064, column: 3)
!4453 = !DILocation(line: 3064, column: 3, scope: !4452)
!4454 = !DILocation(line: 3064, column: 3, scope: !4448)
!4455 = !DILocation(line: 3066, column: 9, scope: !4444)
!4456 = !DILocation(line: 3066, column: 2, scope: !4444)
!4457 = distinct !DISubprogram(name: "usbtest_exit", scope: !3, file: !3, line: 3070, type: !1851, scopeLine: 3071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4458 = !DILocation(line: 3072, column: 2, scope: !4457)
!4459 = !DILocation(line: 3073, column: 1, scope: !4457)
!4460 = !DILocalVariable(name: "s", arg: 1, scope: !4461, file: !127, line: 445, type: !914)
!4461 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !127, file: !127, line: 445, type: !4462, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{!169, !914, !149, !308}
!4464 = !DILocation(line: 445, column: 72, scope: !4461, inlinedAt: !4465)
!4465 = distinct !DILocation(line: 552, column: 10, scope: !4466, inlinedAt: !4471)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !127, line: 540, column: 34)
!4467 = distinct !DILexicalBlock(scope: !4468, file: !127, line: 540, column: 6)
!4468 = distinct !DISubprogram(name: "kmalloc", scope: !127, file: !127, line: 538, type: !4469, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!169, !308, !149}
!4471 = distinct !DILocation(line: 2798, column: 13, scope: !4412)
!4472 = !DILocalVariable(name: "flags", arg: 2, scope: !4461, file: !127, line: 446, type: !149)
!4473 = !DILocation(line: 446, column: 9, scope: !4461, inlinedAt: !4465)
!4474 = !DILocalVariable(name: "size", arg: 3, scope: !4461, file: !127, line: 446, type: !308)
!4475 = !DILocation(line: 446, column: 23, scope: !4461, inlinedAt: !4465)
!4476 = !DILocalVariable(name: "ret", scope: !4461, file: !127, line: 448, type: !169)
!4477 = !DILocation(line: 448, column: 8, scope: !4461, inlinedAt: !4465)
!4478 = !DILocalVariable(name: "flags", arg: 1, scope: !4479, file: !127, line: 318, type: !149)
!4479 = distinct !DISubprogram(name: "kmalloc_type", scope: !127, file: !127, line: 318, type: !4480, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!126, !149}
!4482 = !DILocation(line: 318, column: 67, scope: !4479, inlinedAt: !4483)
!4483 = distinct !DILocation(line: 553, column: 20, scope: !4466, inlinedAt: !4471)
!4484 = !DILocalVariable(name: "size", arg: 1, scope: !4485, file: !127, line: 346, type: !308)
!4485 = distinct !DISubprogram(name: "kmalloc_index", scope: !127, file: !127, line: 346, type: !4486, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4486 = !DISubroutineType(types: !4487)
!4487 = !{!7, !308}
!4488 = !DILocation(line: 346, column: 58, scope: !4485, inlinedAt: !4489)
!4489 = distinct !DILocation(line: 547, column: 11, scope: !4466, inlinedAt: !4471)
!4490 = !DILocalVariable(name: "size", arg: 1, scope: !4491, file: !127, line: 472, type: !308)
!4491 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !127, file: !127, line: 472, type: !4492, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{!169, !308, !149, !7}
!4494 = !DILocation(line: 472, column: 28, scope: !4491, inlinedAt: !4495)
!4495 = distinct !DILocation(line: 481, column: 9, scope: !4496, inlinedAt: !4497)
!4496 = distinct !DISubprogram(name: "kmalloc_large", scope: !127, file: !127, line: 478, type: !4469, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4497 = distinct !DILocation(line: 545, column: 11, scope: !4498, inlinedAt: !4471)
!4498 = distinct !DILexicalBlock(scope: !4466, file: !127, line: 544, column: 7)
!4499 = !DILocalVariable(name: "flags", arg: 2, scope: !4491, file: !127, line: 472, type: !149)
!4500 = !DILocation(line: 472, column: 40, scope: !4491, inlinedAt: !4495)
!4501 = !DILocalVariable(name: "order", arg: 3, scope: !4491, file: !127, line: 472, type: !7)
!4502 = !DILocation(line: 472, column: 60, scope: !4491, inlinedAt: !4495)
!4503 = !DILocalVariable(name: "size", arg: 1, scope: !4496, file: !127, line: 478, type: !308)
!4504 = !DILocation(line: 478, column: 51, scope: !4496, inlinedAt: !4497)
!4505 = !DILocalVariable(name: "flags", arg: 2, scope: !4496, file: !127, line: 478, type: !149)
!4506 = !DILocation(line: 478, column: 63, scope: !4496, inlinedAt: !4497)
!4507 = !DILocalVariable(name: "order", scope: !4496, file: !127, line: 480, type: !7)
!4508 = !DILocation(line: 480, column: 15, scope: !4496, inlinedAt: !4497)
!4509 = !DILocalVariable(name: "size", arg: 1, scope: !4468, file: !127, line: 538, type: !308)
!4510 = !DILocation(line: 538, column: 45, scope: !4468, inlinedAt: !4471)
!4511 = !DILocalVariable(name: "flags", arg: 2, scope: !4468, file: !127, line: 538, type: !149)
!4512 = !DILocation(line: 538, column: 57, scope: !4468, inlinedAt: !4471)
!4513 = !DILocalVariable(name: "index", scope: !4466, file: !127, line: 542, type: !7)
!4514 = !DILocation(line: 542, column: 16, scope: !4466, inlinedAt: !4471)
!4515 = !DILocalVariable(name: "intf", arg: 1, scope: !4412, file: !3, line: 2762, type: !3965)
!4516 = !DILocation(line: 2762, column: 37, scope: !4412)
!4517 = !DILocalVariable(name: "id", arg: 2, scope: !4412, file: !3, line: 2762, type: !4358)
!4518 = !DILocation(line: 2762, column: 71, scope: !4412)
!4519 = !DILocalVariable(name: "udev", scope: !4412, file: !3, line: 2764, type: !170)
!4520 = !DILocation(line: 2764, column: 21, scope: !4412)
!4521 = !DILocalVariable(name: "dev", scope: !4412, file: !3, line: 2765, type: !4522)
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 64)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbtest_dev", file: !3, line: 93, size: 832, elements: !4524)
!4524 = !{!4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4535, !4536, !4537, !4538, !4539}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "intf", scope: !4523, file: !3, line: 94, baseType: !3965, size: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4523, file: !3, line: 95, baseType: !151, size: 64, offset: 64)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "in_pipe", scope: !4523, file: !3, line: 96, baseType: !168, size: 32, offset: 128)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "out_pipe", scope: !4523, file: !3, line: 97, baseType: !168, size: 32, offset: 160)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "in_iso_pipe", scope: !4523, file: !3, line: 98, baseType: !168, size: 32, offset: 192)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "out_iso_pipe", scope: !4523, file: !3, line: 99, baseType: !168, size: 32, offset: 224)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "in_int_pipe", scope: !4523, file: !3, line: 100, baseType: !168, size: 32, offset: 256)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "out_int_pipe", scope: !4523, file: !3, line: 101, baseType: !168, size: 32, offset: 288)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "iso_in", scope: !4523, file: !3, line: 102, baseType: !4534, size: 64, offset: 320)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "iso_out", scope: !4523, file: !3, line: 102, baseType: !4534, size: 64, offset: 384)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "int_in", scope: !4523, file: !3, line: 103, baseType: !4534, size: 64, offset: 448)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "int_out", scope: !4523, file: !3, line: 103, baseType: !4534, size: 64, offset: 512)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4523, file: !3, line: 104, baseType: !1152, size: 192, offset: 576)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4523, file: !3, line: 107, baseType: !4540, size: 64, offset: 768)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!4541 = !DILocation(line: 2765, column: 22, scope: !4412)
!4542 = !DILocalVariable(name: "info", scope: !4412, file: !3, line: 2766, type: !151)
!4543 = !DILocation(line: 2766, column: 23, scope: !4412)
!4544 = !DILocalVariable(name: "rtest", scope: !4412, file: !3, line: 2767, type: !262)
!4545 = !DILocation(line: 2767, column: 10, scope: !4412)
!4546 = !DILocalVariable(name: "wtest", scope: !4412, file: !3, line: 2767, type: !262)
!4547 = !DILocation(line: 2767, column: 18, scope: !4412)
!4548 = !DILocalVariable(name: "irtest", scope: !4412, file: !3, line: 2768, type: !262)
!4549 = !DILocation(line: 2768, column: 10, scope: !4412)
!4550 = !DILocalVariable(name: "iwtest", scope: !4412, file: !3, line: 2768, type: !262)
!4551 = !DILocation(line: 2768, column: 19, scope: !4412)
!4552 = !DILocalVariable(name: "intrtest", scope: !4412, file: !3, line: 2769, type: !262)
!4553 = !DILocation(line: 2769, column: 10, scope: !4412)
!4554 = !DILocalVariable(name: "intwtest", scope: !4412, file: !3, line: 2769, type: !262)
!4555 = !DILocation(line: 2769, column: 21, scope: !4412)
!4556 = !DILocation(line: 2771, column: 29, scope: !4412)
!4557 = !DILocation(line: 2771, column: 9, scope: !4412)
!4558 = !DILocation(line: 2771, column: 7, scope: !4412)
!4559 = !DILocation(line: 2775, column: 6, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 2775, column: 6)
!4561 = !DILocation(line: 2775, column: 10, scope: !4560)
!4562 = !DILocation(line: 2775, column: 22, scope: !4560)
!4563 = !DILocation(line: 2775, column: 6, scope: !4412)
!4564 = !DILocation(line: 2777, column: 8, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 2777, column: 7)
!4566 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 2775, column: 28)
!4567 = !DILocation(line: 2777, column: 15, scope: !4565)
!4568 = !DILocation(line: 2777, column: 18, scope: !4565)
!4569 = !DILocation(line: 2777, column: 65, scope: !4565)
!4570 = !DILocation(line: 2777, column: 60, scope: !4565)
!4571 = !DILocation(line: 2777, column: 57, scope: !4565)
!4572 = !DILocation(line: 2777, column: 7, scope: !4566)
!4573 = !DILocation(line: 2778, column: 4, scope: !4565)
!4574 = !DILocation(line: 2779, column: 7, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 2779, column: 7)
!4576 = !DILocation(line: 2779, column: 15, scope: !4575)
!4577 = !DILocation(line: 2779, column: 18, scope: !4575)
!4578 = !DILocation(line: 2779, column: 66, scope: !4575)
!4579 = !DILocation(line: 2779, column: 61, scope: !4575)
!4580 = !DILocation(line: 2779, column: 58, scope: !4575)
!4581 = !DILocation(line: 2779, column: 7, scope: !4566)
!4582 = !DILocation(line: 2780, column: 4, scope: !4575)
!4583 = !DILocation(line: 2781, column: 3, scope: !4566)
!4584 = !DILocation(line: 2785, column: 2, scope: !4566)
!4585 = !DILocation(line: 2788, column: 8, scope: !4412)
!4586 = !DILocation(line: 2788, column: 6, scope: !4412)
!4587 = !DILocation(line: 2789, column: 7, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 2789, column: 6)
!4589 = !DILocation(line: 2789, column: 6, scope: !4412)
!4590 = !DILocation(line: 2790, column: 3, scope: !4588)
!4591 = !DILocation(line: 2791, column: 33, scope: !4412)
!4592 = !DILocation(line: 2791, column: 37, scope: !4412)
!4593 = !DILocation(line: 2791, column: 9, scope: !4412)
!4594 = !DILocation(line: 2791, column: 7, scope: !4412)
!4595 = !DILocation(line: 2792, column: 14, scope: !4412)
!4596 = !DILocation(line: 2792, column: 2, scope: !4412)
!4597 = !DILocation(line: 2792, column: 7, scope: !4412)
!4598 = !DILocation(line: 2792, column: 12, scope: !4412)
!4599 = !DILocation(line: 2793, column: 2, scope: !4412)
!4600 = !DILocation(line: 2793, column: 2, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 2793, column: 2)
!4602 = !DILocation(line: 2795, column: 14, scope: !4412)
!4603 = !DILocation(line: 2795, column: 2, scope: !4412)
!4604 = !DILocation(line: 2795, column: 7, scope: !4412)
!4605 = !DILocation(line: 2795, column: 12, scope: !4412)
!4606 = !DILocation(line: 540, column: 27, scope: !4467, inlinedAt: !4471)
!4607 = !DILocation(line: 540, column: 6, scope: !4467, inlinedAt: !4471)
!4608 = !DILocation(line: 540, column: 6, scope: !4468, inlinedAt: !4471)
!4609 = !DILocation(line: 544, column: 7, scope: !4498, inlinedAt: !4471)
!4610 = !DILocation(line: 544, column: 12, scope: !4498, inlinedAt: !4471)
!4611 = !DILocation(line: 544, column: 7, scope: !4466, inlinedAt: !4471)
!4612 = !DILocation(line: 545, column: 25, scope: !4498, inlinedAt: !4471)
!4613 = !DILocation(line: 545, column: 31, scope: !4498, inlinedAt: !4471)
!4614 = !DILocation(line: 480, column: 33, scope: !4496, inlinedAt: !4497)
!4615 = !DILocation(line: 480, column: 23, scope: !4496, inlinedAt: !4497)
!4616 = !DILocation(line: 481, column: 29, scope: !4496, inlinedAt: !4497)
!4617 = !DILocation(line: 481, column: 35, scope: !4496, inlinedAt: !4497)
!4618 = !DILocation(line: 481, column: 42, scope: !4496, inlinedAt: !4497)
!4619 = !DILocation(line: 474, column: 23, scope: !4491, inlinedAt: !4495)
!4620 = !DILocation(line: 474, column: 29, scope: !4491, inlinedAt: !4495)
!4621 = !DILocation(line: 474, column: 36, scope: !4491, inlinedAt: !4495)
!4622 = !DILocation(line: 474, column: 9, scope: !4491, inlinedAt: !4495)
!4623 = !DILocation(line: 545, column: 4, scope: !4498, inlinedAt: !4471)
!4624 = !DILocation(line: 547, column: 25, scope: !4466, inlinedAt: !4471)
!4625 = !DILocation(line: 348, column: 7, scope: !4626, inlinedAt: !4489)
!4626 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 348, column: 6)
!4627 = !DILocation(line: 348, column: 6, scope: !4485, inlinedAt: !4489)
!4628 = !DILocation(line: 349, column: 3, scope: !4626, inlinedAt: !4489)
!4629 = !DILocation(line: 351, column: 6, scope: !4630, inlinedAt: !4489)
!4630 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 351, column: 6)
!4631 = !DILocation(line: 351, column: 11, scope: !4630, inlinedAt: !4489)
!4632 = !DILocation(line: 351, column: 6, scope: !4485, inlinedAt: !4489)
!4633 = !DILocation(line: 352, column: 3, scope: !4630, inlinedAt: !4489)
!4634 = !DILocation(line: 354, column: 32, scope: !4635, inlinedAt: !4489)
!4635 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 354, column: 6)
!4636 = !DILocation(line: 354, column: 37, scope: !4635, inlinedAt: !4489)
!4637 = !DILocation(line: 354, column: 42, scope: !4635, inlinedAt: !4489)
!4638 = !DILocation(line: 354, column: 45, scope: !4635, inlinedAt: !4489)
!4639 = !DILocation(line: 354, column: 50, scope: !4635, inlinedAt: !4489)
!4640 = !DILocation(line: 354, column: 6, scope: !4485, inlinedAt: !4489)
!4641 = !DILocation(line: 355, column: 3, scope: !4635, inlinedAt: !4489)
!4642 = !DILocation(line: 356, column: 32, scope: !4643, inlinedAt: !4489)
!4643 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 356, column: 6)
!4644 = !DILocation(line: 356, column: 37, scope: !4643, inlinedAt: !4489)
!4645 = !DILocation(line: 356, column: 43, scope: !4643, inlinedAt: !4489)
!4646 = !DILocation(line: 356, column: 46, scope: !4643, inlinedAt: !4489)
!4647 = !DILocation(line: 356, column: 51, scope: !4643, inlinedAt: !4489)
!4648 = !DILocation(line: 356, column: 6, scope: !4485, inlinedAt: !4489)
!4649 = !DILocation(line: 357, column: 3, scope: !4643, inlinedAt: !4489)
!4650 = !DILocation(line: 358, column: 6, scope: !4651, inlinedAt: !4489)
!4651 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 358, column: 6)
!4652 = !DILocation(line: 358, column: 11, scope: !4651, inlinedAt: !4489)
!4653 = !DILocation(line: 358, column: 6, scope: !4485, inlinedAt: !4489)
!4654 = !DILocation(line: 358, column: 26, scope: !4651, inlinedAt: !4489)
!4655 = !DILocation(line: 359, column: 6, scope: !4656, inlinedAt: !4489)
!4656 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 359, column: 6)
!4657 = !DILocation(line: 359, column: 11, scope: !4656, inlinedAt: !4489)
!4658 = !DILocation(line: 359, column: 6, scope: !4485, inlinedAt: !4489)
!4659 = !DILocation(line: 359, column: 26, scope: !4656, inlinedAt: !4489)
!4660 = !DILocation(line: 360, column: 6, scope: !4661, inlinedAt: !4489)
!4661 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 360, column: 6)
!4662 = !DILocation(line: 360, column: 11, scope: !4661, inlinedAt: !4489)
!4663 = !DILocation(line: 360, column: 6, scope: !4485, inlinedAt: !4489)
!4664 = !DILocation(line: 360, column: 26, scope: !4661, inlinedAt: !4489)
!4665 = !DILocation(line: 361, column: 6, scope: !4666, inlinedAt: !4489)
!4666 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 361, column: 6)
!4667 = !DILocation(line: 361, column: 11, scope: !4666, inlinedAt: !4489)
!4668 = !DILocation(line: 361, column: 6, scope: !4485, inlinedAt: !4489)
!4669 = !DILocation(line: 361, column: 26, scope: !4666, inlinedAt: !4489)
!4670 = !DILocation(line: 362, column: 6, scope: !4671, inlinedAt: !4489)
!4671 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 362, column: 6)
!4672 = !DILocation(line: 362, column: 11, scope: !4671, inlinedAt: !4489)
!4673 = !DILocation(line: 362, column: 6, scope: !4485, inlinedAt: !4489)
!4674 = !DILocation(line: 362, column: 26, scope: !4671, inlinedAt: !4489)
!4675 = !DILocation(line: 363, column: 6, scope: !4676, inlinedAt: !4489)
!4676 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 363, column: 6)
!4677 = !DILocation(line: 363, column: 11, scope: !4676, inlinedAt: !4489)
!4678 = !DILocation(line: 363, column: 6, scope: !4485, inlinedAt: !4489)
!4679 = !DILocation(line: 363, column: 26, scope: !4676, inlinedAt: !4489)
!4680 = !DILocation(line: 364, column: 6, scope: !4681, inlinedAt: !4489)
!4681 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 364, column: 6)
!4682 = !DILocation(line: 364, column: 11, scope: !4681, inlinedAt: !4489)
!4683 = !DILocation(line: 364, column: 6, scope: !4485, inlinedAt: !4489)
!4684 = !DILocation(line: 364, column: 26, scope: !4681, inlinedAt: !4489)
!4685 = !DILocation(line: 365, column: 6, scope: !4686, inlinedAt: !4489)
!4686 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 365, column: 6)
!4687 = !DILocation(line: 365, column: 11, scope: !4686, inlinedAt: !4489)
!4688 = !DILocation(line: 365, column: 6, scope: !4485, inlinedAt: !4489)
!4689 = !DILocation(line: 365, column: 26, scope: !4686, inlinedAt: !4489)
!4690 = !DILocation(line: 366, column: 6, scope: !4691, inlinedAt: !4489)
!4691 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 366, column: 6)
!4692 = !DILocation(line: 366, column: 11, scope: !4691, inlinedAt: !4489)
!4693 = !DILocation(line: 366, column: 6, scope: !4485, inlinedAt: !4489)
!4694 = !DILocation(line: 366, column: 26, scope: !4691, inlinedAt: !4489)
!4695 = !DILocation(line: 367, column: 6, scope: !4696, inlinedAt: !4489)
!4696 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 367, column: 6)
!4697 = !DILocation(line: 367, column: 11, scope: !4696, inlinedAt: !4489)
!4698 = !DILocation(line: 367, column: 6, scope: !4485, inlinedAt: !4489)
!4699 = !DILocation(line: 367, column: 26, scope: !4696, inlinedAt: !4489)
!4700 = !DILocation(line: 368, column: 6, scope: !4701, inlinedAt: !4489)
!4701 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 368, column: 6)
!4702 = !DILocation(line: 368, column: 11, scope: !4701, inlinedAt: !4489)
!4703 = !DILocation(line: 368, column: 6, scope: !4485, inlinedAt: !4489)
!4704 = !DILocation(line: 368, column: 26, scope: !4701, inlinedAt: !4489)
!4705 = !DILocation(line: 369, column: 6, scope: !4706, inlinedAt: !4489)
!4706 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 369, column: 6)
!4707 = !DILocation(line: 369, column: 11, scope: !4706, inlinedAt: !4489)
!4708 = !DILocation(line: 369, column: 6, scope: !4485, inlinedAt: !4489)
!4709 = !DILocation(line: 369, column: 26, scope: !4706, inlinedAt: !4489)
!4710 = !DILocation(line: 370, column: 6, scope: !4711, inlinedAt: !4489)
!4711 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 370, column: 6)
!4712 = !DILocation(line: 370, column: 11, scope: !4711, inlinedAt: !4489)
!4713 = !DILocation(line: 370, column: 6, scope: !4485, inlinedAt: !4489)
!4714 = !DILocation(line: 370, column: 26, scope: !4711, inlinedAt: !4489)
!4715 = !DILocation(line: 371, column: 6, scope: !4716, inlinedAt: !4489)
!4716 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 371, column: 6)
!4717 = !DILocation(line: 371, column: 11, scope: !4716, inlinedAt: !4489)
!4718 = !DILocation(line: 371, column: 6, scope: !4485, inlinedAt: !4489)
!4719 = !DILocation(line: 371, column: 26, scope: !4716, inlinedAt: !4489)
!4720 = !DILocation(line: 372, column: 6, scope: !4721, inlinedAt: !4489)
!4721 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 372, column: 6)
!4722 = !DILocation(line: 372, column: 11, scope: !4721, inlinedAt: !4489)
!4723 = !DILocation(line: 372, column: 6, scope: !4485, inlinedAt: !4489)
!4724 = !DILocation(line: 372, column: 26, scope: !4721, inlinedAt: !4489)
!4725 = !DILocation(line: 373, column: 6, scope: !4726, inlinedAt: !4489)
!4726 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 373, column: 6)
!4727 = !DILocation(line: 373, column: 11, scope: !4726, inlinedAt: !4489)
!4728 = !DILocation(line: 373, column: 6, scope: !4485, inlinedAt: !4489)
!4729 = !DILocation(line: 373, column: 26, scope: !4726, inlinedAt: !4489)
!4730 = !DILocation(line: 374, column: 6, scope: !4731, inlinedAt: !4489)
!4731 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 374, column: 6)
!4732 = !DILocation(line: 374, column: 11, scope: !4731, inlinedAt: !4489)
!4733 = !DILocation(line: 374, column: 6, scope: !4485, inlinedAt: !4489)
!4734 = !DILocation(line: 374, column: 26, scope: !4731, inlinedAt: !4489)
!4735 = !DILocation(line: 375, column: 6, scope: !4736, inlinedAt: !4489)
!4736 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 375, column: 6)
!4737 = !DILocation(line: 375, column: 11, scope: !4736, inlinedAt: !4489)
!4738 = !DILocation(line: 375, column: 6, scope: !4485, inlinedAt: !4489)
!4739 = !DILocation(line: 375, column: 27, scope: !4736, inlinedAt: !4489)
!4740 = !DILocation(line: 376, column: 6, scope: !4741, inlinedAt: !4489)
!4741 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 376, column: 6)
!4742 = !DILocation(line: 376, column: 11, scope: !4741, inlinedAt: !4489)
!4743 = !DILocation(line: 376, column: 6, scope: !4485, inlinedAt: !4489)
!4744 = !DILocation(line: 376, column: 32, scope: !4741, inlinedAt: !4489)
!4745 = !DILocation(line: 377, column: 6, scope: !4746, inlinedAt: !4489)
!4746 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 377, column: 6)
!4747 = !DILocation(line: 377, column: 11, scope: !4746, inlinedAt: !4489)
!4748 = !DILocation(line: 377, column: 6, scope: !4485, inlinedAt: !4489)
!4749 = !DILocation(line: 377, column: 32, scope: !4746, inlinedAt: !4489)
!4750 = !DILocation(line: 378, column: 6, scope: !4751, inlinedAt: !4489)
!4751 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 378, column: 6)
!4752 = !DILocation(line: 378, column: 11, scope: !4751, inlinedAt: !4489)
!4753 = !DILocation(line: 378, column: 6, scope: !4485, inlinedAt: !4489)
!4754 = !DILocation(line: 378, column: 32, scope: !4751, inlinedAt: !4489)
!4755 = !DILocation(line: 379, column: 6, scope: !4756, inlinedAt: !4489)
!4756 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 379, column: 6)
!4757 = !DILocation(line: 379, column: 11, scope: !4756, inlinedAt: !4489)
!4758 = !DILocation(line: 379, column: 6, scope: !4485, inlinedAt: !4489)
!4759 = !DILocation(line: 379, column: 33, scope: !4756, inlinedAt: !4489)
!4760 = !DILocation(line: 380, column: 6, scope: !4761, inlinedAt: !4489)
!4761 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 380, column: 6)
!4762 = !DILocation(line: 380, column: 11, scope: !4761, inlinedAt: !4489)
!4763 = !DILocation(line: 380, column: 6, scope: !4485, inlinedAt: !4489)
!4764 = !DILocation(line: 380, column: 33, scope: !4761, inlinedAt: !4489)
!4765 = !DILocation(line: 381, column: 6, scope: !4766, inlinedAt: !4489)
!4766 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 381, column: 6)
!4767 = !DILocation(line: 381, column: 11, scope: !4766, inlinedAt: !4489)
!4768 = !DILocation(line: 381, column: 6, scope: !4485, inlinedAt: !4489)
!4769 = !DILocation(line: 381, column: 33, scope: !4766, inlinedAt: !4489)
!4770 = !DILocation(line: 382, column: 2, scope: !4771, inlinedAt: !4489)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !127, line: 382, column: 2)
!4772 = distinct !DILexicalBlock(scope: !4485, file: !127, line: 382, column: 2)
!4773 = !{i32 -2144574964, i32 -2144574935, i32 -2144574889, i32 -2144574831, i32 -2144574777, i32 -2144574723, i32 -2144574668, i32 -2144574637}
!4774 = !DILocation(line: 382, column: 2, scope: !4775, inlinedAt: !4489)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !127, line: 382, column: 2)
!4776 = distinct !DILexicalBlock(scope: !4772, file: !127, line: 382, column: 2)
!4777 = !{i32 -2144574194, i32 -2144574187, i32 -2144574133, i32 -2144574102, i32 -2144574072}
!4778 = !DILocation(line: 382, column: 2, scope: !4776, inlinedAt: !4489)
!4779 = !DILocation(line: 386, column: 1, scope: !4485, inlinedAt: !4489)
!4780 = !DILocation(line: 547, column: 9, scope: !4466, inlinedAt: !4471)
!4781 = !DILocation(line: 549, column: 8, scope: !4782, inlinedAt: !4471)
!4782 = distinct !DILexicalBlock(scope: !4466, file: !127, line: 549, column: 7)
!4783 = !DILocation(line: 549, column: 7, scope: !4466, inlinedAt: !4471)
!4784 = !DILocation(line: 550, column: 4, scope: !4782, inlinedAt: !4471)
!4785 = !DILocation(line: 553, column: 33, scope: !4466, inlinedAt: !4471)
!4786 = !DILocation(line: 325, column: 6, scope: !4787, inlinedAt: !4483)
!4787 = distinct !DILexicalBlock(scope: !4479, file: !127, line: 325, column: 6)
!4788 = !DILocation(line: 325, column: 6, scope: !4479, inlinedAt: !4483)
!4789 = !DILocation(line: 326, column: 3, scope: !4787, inlinedAt: !4483)
!4790 = !DILocation(line: 332, column: 9, scope: !4479, inlinedAt: !4483)
!4791 = !DILocation(line: 332, column: 15, scope: !4479, inlinedAt: !4483)
!4792 = !DILocation(line: 332, column: 2, scope: !4479, inlinedAt: !4483)
!4793 = !DILocation(line: 336, column: 1, scope: !4479, inlinedAt: !4483)
!4794 = !DILocation(line: 553, column: 5, scope: !4466, inlinedAt: !4471)
!4795 = !DILocation(line: 553, column: 41, scope: !4466, inlinedAt: !4471)
!4796 = !DILocation(line: 554, column: 5, scope: !4466, inlinedAt: !4471)
!4797 = !DILocation(line: 554, column: 12, scope: !4466, inlinedAt: !4471)
!4798 = !DILocation(line: 448, column: 31, scope: !4461, inlinedAt: !4465)
!4799 = !DILocation(line: 448, column: 34, scope: !4461, inlinedAt: !4465)
!4800 = !DILocation(line: 448, column: 14, scope: !4461, inlinedAt: !4465)
!4801 = !DILocation(line: 450, column: 22, scope: !4461, inlinedAt: !4465)
!4802 = !DILocation(line: 450, column: 25, scope: !4461, inlinedAt: !4465)
!4803 = !DILocation(line: 450, column: 30, scope: !4461, inlinedAt: !4465)
!4804 = !DILocation(line: 450, column: 36, scope: !4461, inlinedAt: !4465)
!4805 = !DILocation(line: 450, column: 8, scope: !4461, inlinedAt: !4465)
!4806 = !DILocation(line: 450, column: 6, scope: !4461, inlinedAt: !4465)
!4807 = !DILocation(line: 451, column: 9, scope: !4461, inlinedAt: !4465)
!4808 = !DILocation(line: 552, column: 3, scope: !4466, inlinedAt: !4471)
!4809 = !DILocation(line: 557, column: 19, scope: !4468, inlinedAt: !4471)
!4810 = !DILocation(line: 557, column: 25, scope: !4468, inlinedAt: !4471)
!4811 = !DILocation(line: 557, column: 9, scope: !4468, inlinedAt: !4471)
!4812 = !DILocation(line: 557, column: 2, scope: !4468, inlinedAt: !4471)
!4813 = !DILocation(line: 558, column: 1, scope: !4468, inlinedAt: !4471)
!4814 = !DILocation(line: 2798, column: 2, scope: !4412)
!4815 = !DILocation(line: 2798, column: 7, scope: !4412)
!4816 = !DILocation(line: 2798, column: 11, scope: !4412)
!4817 = !DILocation(line: 2799, column: 6, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 2799, column: 6)
!4819 = !DILocation(line: 2799, column: 11, scope: !4818)
!4820 = !DILocation(line: 2799, column: 15, scope: !4818)
!4821 = !DILocation(line: 2799, column: 6, scope: !4412)
!4822 = !DILocation(line: 2800, column: 9, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 2799, column: 24)
!4824 = !DILocation(line: 2800, column: 3, scope: !4823)
!4825 = !DILocation(line: 2801, column: 3, scope: !4823)
!4826 = !DILocation(line: 2808, column: 16, scope: !4412)
!4827 = !DILocation(line: 2808, column: 8, scope: !4412)
!4828 = !DILocation(line: 2809, column: 18, scope: !4412)
!4829 = !DILocation(line: 2809, column: 9, scope: !4412)
!4830 = !DILocation(line: 2810, column: 22, scope: !4412)
!4831 = !DILocation(line: 2810, column: 11, scope: !4412)
!4832 = !DILocation(line: 2811, column: 6, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 2811, column: 6)
!4834 = !DILocation(line: 2811, column: 22, scope: !4833)
!4835 = !DILocation(line: 2811, column: 25, scope: !4833)
!4836 = !DILocation(line: 2811, column: 31, scope: !4833)
!4837 = !DILocation(line: 2811, column: 37, scope: !4833)
!4838 = !DILocation(line: 2811, column: 6, scope: !4412)
!4839 = !DILocation(line: 2812, column: 7, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 2812, column: 7)
!4841 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 2811, column: 55)
!4842 = !DILocation(line: 2812, column: 13, scope: !4840)
!4843 = !DILocation(line: 2812, column: 7, scope: !4841)
!4844 = !DILocation(line: 2813, column: 19, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4840, file: !3, line: 2812, column: 20)
!4846 = !DILocation(line: 2813, column: 4, scope: !4845)
!4847 = !DILocation(line: 2813, column: 9, scope: !4845)
!4848 = !DILocation(line: 2813, column: 17, scope: !4845)
!4849 = !DILocation(line: 2814, column: 10, scope: !4845)
!4850 = !DILocation(line: 2815, column: 3, scope: !4845)
!4851 = !DILocation(line: 2816, column: 7, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 2816, column: 7)
!4853 = !DILocation(line: 2816, column: 13, scope: !4852)
!4854 = !DILocation(line: 2816, column: 7, scope: !4841)
!4855 = !DILocation(line: 2817, column: 20, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4852, file: !3, line: 2816, column: 21)
!4857 = !DILocation(line: 2817, column: 4, scope: !4856)
!4858 = !DILocation(line: 2817, column: 9, scope: !4856)
!4859 = !DILocation(line: 2817, column: 18, scope: !4856)
!4860 = !DILocation(line: 2818, column: 10, scope: !4856)
!4861 = !DILocation(line: 2819, column: 3, scope: !4856)
!4862 = !DILocation(line: 2820, column: 2, scope: !4841)
!4863 = !DILocation(line: 2821, column: 7, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2821, column: 7)
!4865 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 2820, column: 9)
!4866 = !DILocation(line: 2821, column: 20, scope: !4864)
!4867 = !DILocation(line: 2821, column: 25, scope: !4864)
!4868 = !DILocation(line: 2821, column: 28, scope: !4864)
!4869 = !DILocation(line: 2821, column: 34, scope: !4864)
!4870 = !DILocation(line: 2821, column: 7, scope: !4865)
!4871 = !DILocalVariable(name: "status", scope: !4872, file: !3, line: 2822, type: !168)
!4872 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 2821, column: 44)
!4873 = !DILocation(line: 2822, column: 8, scope: !4872)
!4874 = !DILocation(line: 2824, column: 27, scope: !4872)
!4875 = !DILocation(line: 2824, column: 32, scope: !4872)
!4876 = !DILocation(line: 2824, column: 13, scope: !4872)
!4877 = !DILocation(line: 2824, column: 11, scope: !4872)
!4878 = !DILocation(line: 2825, column: 8, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 2825, column: 8)
!4880 = !DILocation(line: 2825, column: 15, scope: !4879)
!4881 = !DILocation(line: 2825, column: 8, scope: !4872)
!4882 = !DILocation(line: 2826, column: 5, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2825, column: 20)
!4884 = !DILocation(line: 2828, column: 11, scope: !4883)
!4885 = !DILocation(line: 2828, column: 16, scope: !4883)
!4886 = !DILocation(line: 2828, column: 5, scope: !4883)
!4887 = !DILocation(line: 2829, column: 11, scope: !4883)
!4888 = !DILocation(line: 2829, column: 5, scope: !4883)
!4889 = !DILocation(line: 2830, column: 12, scope: !4883)
!4890 = !DILocation(line: 2830, column: 5, scope: !4883)
!4891 = !DILocation(line: 2833, column: 3, scope: !4872)
!4892 = !DILocation(line: 2834, column: 8, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 2834, column: 8)
!4894 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 2833, column: 10)
!4895 = !DILocation(line: 2834, column: 14, scope: !4893)
!4896 = !DILocation(line: 2834, column: 8, scope: !4894)
!4897 = !DILocation(line: 2835, column: 20, scope: !4893)
!4898 = !DILocation(line: 2835, column: 5, scope: !4893)
!4899 = !DILocation(line: 2835, column: 10, scope: !4893)
!4900 = !DILocation(line: 2835, column: 18, scope: !4893)
!4901 = !DILocation(line: 2837, column: 8, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 2837, column: 8)
!4903 = !DILocation(line: 2837, column: 14, scope: !4902)
!4904 = !DILocation(line: 2837, column: 8, scope: !4894)
!4905 = !DILocation(line: 2838, column: 21, scope: !4902)
!4906 = !DILocation(line: 2838, column: 5, scope: !4902)
!4907 = !DILocation(line: 2838, column: 10, scope: !4902)
!4908 = !DILocation(line: 2838, column: 19, scope: !4902)
!4909 = !DILocation(line: 2841, column: 7, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2841, column: 7)
!4911 = !DILocation(line: 2841, column: 12, scope: !4910)
!4912 = !DILocation(line: 2841, column: 7, scope: !4865)
!4913 = !DILocation(line: 2842, column: 10, scope: !4910)
!4914 = !DILocation(line: 2842, column: 4, scope: !4910)
!4915 = !DILocation(line: 2843, column: 7, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2843, column: 7)
!4917 = !DILocation(line: 2843, column: 12, scope: !4916)
!4918 = !DILocation(line: 2843, column: 7, scope: !4865)
!4919 = !DILocation(line: 2844, column: 10, scope: !4916)
!4920 = !DILocation(line: 2844, column: 4, scope: !4916)
!4921 = !DILocation(line: 2845, column: 7, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2845, column: 7)
!4923 = !DILocation(line: 2845, column: 12, scope: !4922)
!4924 = !DILocation(line: 2845, column: 7, scope: !4865)
!4925 = !DILocation(line: 2846, column: 11, scope: !4922)
!4926 = !DILocation(line: 2846, column: 4, scope: !4922)
!4927 = !DILocation(line: 2847, column: 7, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2847, column: 7)
!4929 = !DILocation(line: 2847, column: 12, scope: !4928)
!4930 = !DILocation(line: 2847, column: 7, scope: !4865)
!4931 = !DILocation(line: 2848, column: 11, scope: !4928)
!4932 = !DILocation(line: 2848, column: 4, scope: !4928)
!4933 = !DILocation(line: 2849, column: 7, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2849, column: 7)
!4935 = !DILocation(line: 2849, column: 12, scope: !4934)
!4936 = !DILocation(line: 2849, column: 7, scope: !4865)
!4937 = !DILocation(line: 2850, column: 13, scope: !4934)
!4938 = !DILocation(line: 2850, column: 4, scope: !4934)
!4939 = !DILocation(line: 2851, column: 7, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 2851, column: 7)
!4941 = !DILocation(line: 2851, column: 12, scope: !4940)
!4942 = !DILocation(line: 2851, column: 7, scope: !4865)
!4943 = !DILocation(line: 2852, column: 13, scope: !4940)
!4944 = !DILocation(line: 2852, column: 4, scope: !4940)
!4945 = !DILocation(line: 2855, column: 19, scope: !4412)
!4946 = !DILocation(line: 2855, column: 25, scope: !4412)
!4947 = !DILocation(line: 2855, column: 2, scope: !4412)
!4948 = !DILocation(line: 2856, column: 2, scope: !4412)
!4949 = !DILocation(line: 2857, column: 2, scope: !4412)
!4950 = !DILocation(line: 2864, column: 2, scope: !4412)
!4951 = !DILocation(line: 2865, column: 1, scope: !4412)
!4952 = distinct !DISubprogram(name: "usbtest_disconnect", scope: !3, file: !3, line: 2878, type: !4377, scopeLine: 2879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4953 = !DILocalVariable(name: "intf", arg: 1, scope: !4952, file: !3, line: 2878, type: !3965)
!4954 = !DILocation(line: 2878, column: 54, scope: !4952)
!4955 = !DILocalVariable(name: "dev", scope: !4952, file: !3, line: 2880, type: !4522)
!4956 = !DILocation(line: 2880, column: 22, scope: !4952)
!4957 = !DILocation(line: 2880, column: 45, scope: !4952)
!4958 = !DILocation(line: 2880, column: 28, scope: !4952)
!4959 = !DILocation(line: 2882, column: 19, scope: !4952)
!4960 = !DILocation(line: 2882, column: 2, scope: !4952)
!4961 = !DILocation(line: 2884, column: 8, scope: !4952)
!4962 = !DILocation(line: 2884, column: 13, scope: !4952)
!4963 = !DILocation(line: 2884, column: 2, scope: !4952)
!4964 = !DILocation(line: 2885, column: 8, scope: !4952)
!4965 = !DILocation(line: 2885, column: 2, scope: !4952)
!4966 = !DILocation(line: 2886, column: 1, scope: !4952)
!4967 = distinct !DISubprogram(name: "usbtest_ioctl", scope: !3, file: !3, line: 2658, type: !4381, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!4968 = !DILocalVariable(name: "intf", arg: 1, scope: !4967, file: !3, line: 2658, type: !3965)
!4969 = !DILocation(line: 2658, column: 37, scope: !4967)
!4970 = !DILocalVariable(name: "code", arg: 2, scope: !4967, file: !3, line: 2658, type: !7)
!4971 = !DILocation(line: 2658, column: 56, scope: !4967)
!4972 = !DILocalVariable(name: "buf", arg: 3, scope: !4967, file: !3, line: 2658, type: !169)
!4973 = !DILocation(line: 2658, column: 68, scope: !4967)
!4974 = !DILocalVariable(name: "dev", scope: !4967, file: !3, line: 2661, type: !4522)
!4975 = !DILocation(line: 2661, column: 22, scope: !4967)
!4976 = !DILocation(line: 2661, column: 45, scope: !4967)
!4977 = !DILocation(line: 2661, column: 28, scope: !4967)
!4978 = !DILocalVariable(name: "param_64", scope: !4967, file: !3, line: 2662, type: !4979)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbtest_param_64", file: !3, line: 45, size: 320, elements: !4981)
!4981 = !{!4982, !4983, !4984, !4985, !4986, !4987, !4988}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "test_num", scope: !4980, file: !3, line: 47, baseType: !180, size: 32)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !4980, file: !3, line: 48, baseType: !180, size: 32, offset: 32)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4980, file: !3, line: 49, baseType: !180, size: 32, offset: 64)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "vary", scope: !4980, file: !3, line: 50, baseType: !180, size: 32, offset: 96)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "sglen", scope: !4980, file: !3, line: 51, baseType: !180, size: 32, offset: 128)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "duration_sec", scope: !4980, file: !3, line: 54, baseType: !522, size: 64, offset: 192)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "duration_usec", scope: !4980, file: !3, line: 55, baseType: !522, size: 64, offset: 256)
!4989 = !DILocation(line: 2662, column: 27, scope: !4967)
!4990 = !DILocation(line: 2662, column: 38, scope: !4967)
!4991 = !DILocalVariable(name: "temp", scope: !4967, file: !3, line: 2663, type: !4992)
!4992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbtest_param_32", file: !3, line: 28, size: 224, elements: !4993)
!4993 = !{!4994, !4995, !4996, !4997, !4998, !4999, !5000}
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "test_num", scope: !4992, file: !3, line: 30, baseType: !180, size: 32)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !4992, file: !3, line: 31, baseType: !180, size: 32, offset: 32)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4992, file: !3, line: 32, baseType: !180, size: 32, offset: 64)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "vary", scope: !4992, file: !3, line: 33, baseType: !180, size: 32, offset: 96)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "sglen", scope: !4992, file: !3, line: 34, baseType: !180, size: 32, offset: 128)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "duration_sec", scope: !4992, file: !3, line: 37, baseType: !1422, size: 32, offset: 160)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "duration_usec", scope: !4992, file: !3, line: 38, baseType: !1422, size: 32, offset: 192)
!5001 = !DILocation(line: 2663, column: 26, scope: !4967)
!5002 = !DILocalVariable(name: "param_32", scope: !4967, file: !3, line: 2664, type: !5003)
!5003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4992, size: 64)
!5004 = !DILocation(line: 2664, column: 27, scope: !4967)
!5005 = !DILocation(line: 2664, column: 38, scope: !4967)
!5006 = !DILocalVariable(name: "start", scope: !4967, file: !3, line: 2665, type: !517)
!5007 = !DILocation(line: 2665, column: 20, scope: !4967)
!5008 = !DILocalVariable(name: "end", scope: !4967, file: !3, line: 2666, type: !517)
!5009 = !DILocation(line: 2666, column: 20, scope: !4967)
!5010 = !DILocalVariable(name: "duration", scope: !4967, file: !3, line: 2667, type: !517)
!5011 = !DILocation(line: 2667, column: 20, scope: !4967)
!5012 = !DILocalVariable(name: "retval", scope: !4967, file: !3, line: 2668, type: !168)
!5013 = !DILocation(line: 2668, column: 6, scope: !4967)
!5014 = !DILocation(line: 2672, column: 12, scope: !4967)
!5015 = !DILocation(line: 2672, column: 10, scope: !4967)
!5016 = !DILocation(line: 2674, column: 32, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 2674, column: 6)
!5018 = !DILocation(line: 2674, column: 37, scope: !5017)
!5019 = !DILocation(line: 2674, column: 6, scope: !5017)
!5020 = !DILocation(line: 2674, column: 6, scope: !4967)
!5021 = !DILocation(line: 2675, column: 3, scope: !5017)
!5022 = !DILocation(line: 2683, column: 6, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 2683, column: 6)
!5024 = !DILocation(line: 2683, column: 11, scope: !5023)
!5025 = !DILocation(line: 2683, column: 17, scope: !5023)
!5026 = !DILocation(line: 2683, column: 21, scope: !5023)
!5027 = !DILocation(line: 2683, column: 6, scope: !4967)
!5028 = !DILocation(line: 2684, column: 7, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 2684, column: 7)
!5030 = distinct !DILexicalBlock(scope: !5023, file: !3, line: 2683, column: 27)
!5031 = !DILocation(line: 2684, column: 13, scope: !5029)
!5032 = !DILocation(line: 2684, column: 25, scope: !5029)
!5033 = !DILocation(line: 2684, column: 30, scope: !5029)
!5034 = !DILocation(line: 2684, column: 7, scope: !5030)
!5035 = !DILocation(line: 2685, column: 11, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 2684, column: 48)
!5037 = !DILocation(line: 2686, column: 4, scope: !5036)
!5038 = !DILocation(line: 2688, column: 27, scope: !5030)
!5039 = !DILocation(line: 2688, column: 32, scope: !5030)
!5040 = !DILocation(line: 2688, column: 37, scope: !5030)
!5041 = !DILocation(line: 2688, column: 43, scope: !5030)
!5042 = !DILocation(line: 2688, column: 12, scope: !5030)
!5043 = !DILocation(line: 2688, column: 10, scope: !5030)
!5044 = !DILocation(line: 2689, column: 7, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 2689, column: 7)
!5046 = !DILocation(line: 2689, column: 7, scope: !5030)
!5047 = !DILocation(line: 2690, column: 4, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 2689, column: 15)
!5049 = !DILocation(line: 2693, column: 4, scope: !5048)
!5050 = !DILocation(line: 2695, column: 2, scope: !5030)
!5051 = !DILocation(line: 2697, column: 10, scope: !4967)
!5052 = !DILocation(line: 2697, column: 2, scope: !4967)
!5053 = !DILocation(line: 2699, column: 19, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 2697, column: 16)
!5055 = !DILocation(line: 2699, column: 29, scope: !5054)
!5056 = !DILocation(line: 2699, column: 8, scope: !5054)
!5057 = !DILocation(line: 2699, column: 17, scope: !5054)
!5058 = !DILocation(line: 2700, column: 21, scope: !5054)
!5059 = !DILocation(line: 2700, column: 31, scope: !5054)
!5060 = !DILocation(line: 2700, column: 8, scope: !5054)
!5061 = !DILocation(line: 2700, column: 19, scope: !5054)
!5062 = !DILocation(line: 2701, column: 17, scope: !5054)
!5063 = !DILocation(line: 2701, column: 27, scope: !5054)
!5064 = !DILocation(line: 2701, column: 8, scope: !5054)
!5065 = !DILocation(line: 2701, column: 15, scope: !5054)
!5066 = !DILocation(line: 2702, column: 16, scope: !5054)
!5067 = !DILocation(line: 2702, column: 26, scope: !5054)
!5068 = !DILocation(line: 2702, column: 8, scope: !5054)
!5069 = !DILocation(line: 2702, column: 14, scope: !5054)
!5070 = !DILocation(line: 2703, column: 15, scope: !5054)
!5071 = !DILocation(line: 2703, column: 25, scope: !5054)
!5072 = !DILocation(line: 2703, column: 8, scope: !5054)
!5073 = !DILocation(line: 2703, column: 13, scope: !5054)
!5074 = !DILocation(line: 2704, column: 12, scope: !5054)
!5075 = !DILocation(line: 2705, column: 3, scope: !5054)
!5076 = !DILocation(line: 2708, column: 3, scope: !5054)
!5077 = !DILocation(line: 2711, column: 10, scope: !5054)
!5078 = !DILocation(line: 2712, column: 3, scope: !5054)
!5079 = !DILocation(line: 2715, column: 2, scope: !4967)
!5080 = !DILocation(line: 2717, column: 28, scope: !4967)
!5081 = !DILocation(line: 2717, column: 34, scope: !4967)
!5082 = !DILocation(line: 2717, column: 11, scope: !4967)
!5083 = !DILocation(line: 2717, column: 9, scope: !4967)
!5084 = !DILocation(line: 2718, column: 6, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 2718, column: 6)
!5086 = !DILocation(line: 2718, column: 13, scope: !5085)
!5087 = !DILocation(line: 2718, column: 6, scope: !4967)
!5088 = !DILocation(line: 2719, column: 3, scope: !5085)
!5089 = !DILocation(line: 2721, column: 2, scope: !4967)
!5090 = !DILocation(line: 2723, column: 13, scope: !4967)
!5091 = !DILocation(line: 2725, column: 31, scope: !4967)
!5092 = !DILocation(line: 2725, column: 22, scope: !4967)
!5093 = !DILocation(line: 2725, column: 7, scope: !4967)
!5094 = !DILocation(line: 2725, column: 20, scope: !4967)
!5095 = !DILocation(line: 2726, column: 32, scope: !4967)
!5096 = !DILocation(line: 2726, column: 39, scope: !4967)
!5097 = !DILocation(line: 2726, column: 23, scope: !4967)
!5098 = !DILocation(line: 2726, column: 7, scope: !4967)
!5099 = !DILocation(line: 2726, column: 21, scope: !4967)
!5100 = !DILocation(line: 2728, column: 10, scope: !4967)
!5101 = !DILocation(line: 2728, column: 2, scope: !4967)
!5102 = !DILocation(line: 2730, column: 33, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 2728, column: 16)
!5104 = !DILocation(line: 2730, column: 3, scope: !5103)
!5105 = !DILocation(line: 2730, column: 13, scope: !5103)
!5106 = !DILocation(line: 2730, column: 26, scope: !5103)
!5107 = !DILocation(line: 2731, column: 34, scope: !5103)
!5108 = !DILocation(line: 2731, column: 3, scope: !5103)
!5109 = !DILocation(line: 2731, column: 13, scope: !5103)
!5110 = !DILocation(line: 2731, column: 27, scope: !5103)
!5111 = !DILocation(line: 2732, column: 3, scope: !5103)
!5112 = !DILocation(line: 2735, column: 33, scope: !5103)
!5113 = !DILocation(line: 2735, column: 28, scope: !5103)
!5114 = !DILocation(line: 2735, column: 3, scope: !5103)
!5115 = !DILocation(line: 2735, column: 13, scope: !5103)
!5116 = !DILocation(line: 2735, column: 26, scope: !5103)
!5117 = !DILocation(line: 2736, column: 34, scope: !5103)
!5118 = !DILocation(line: 2736, column: 29, scope: !5103)
!5119 = !DILocation(line: 2736, column: 3, scope: !5103)
!5120 = !DILocation(line: 2736, column: 13, scope: !5103)
!5121 = !DILocation(line: 2736, column: 27, scope: !5103)
!5122 = !DILocation(line: 2737, column: 3, scope: !5103)
!5123 = !DILocation(line: 2738, column: 2, scope: !5103)
!5124 = !DILabel(scope: !4967, name: "free_mutex", file: !3, line: 2740)
!5125 = !DILocation(line: 2740, column: 1, scope: !4967)
!5126 = !DILocation(line: 2741, column: 16, scope: !4967)
!5127 = !DILocation(line: 2741, column: 21, scope: !4967)
!5128 = !DILocation(line: 2741, column: 2, scope: !4967)
!5129 = !DILocation(line: 2742, column: 9, scope: !4967)
!5130 = !DILocation(line: 2742, column: 2, scope: !4967)
!5131 = !DILocation(line: 2743, column: 1, scope: !4967)
!5132 = distinct !DISubprogram(name: "usbtest_suspend", scope: !3, file: !3, line: 2867, type: !4385, scopeLine: 2868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5133 = !DILocalVariable(name: "intf", arg: 1, scope: !5132, file: !3, line: 2867, type: !3965)
!5134 = !DILocation(line: 2867, column: 50, scope: !5132)
!5135 = !DILocalVariable(name: "message", arg: 2, scope: !5132, file: !3, line: 2867, type: !3459)
!5136 = !DILocation(line: 2867, column: 69, scope: !5132)
!5137 = !DILocation(line: 2869, column: 2, scope: !5132)
!5138 = distinct !DISubprogram(name: "usbtest_resume", scope: !3, file: !3, line: 2872, type: !4389, scopeLine: 2873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5139 = !DILocalVariable(name: "intf", arg: 1, scope: !5138, file: !3, line: 2872, type: !3965)
!5140 = !DILocation(line: 2872, column: 49, scope: !5138)
!5141 = !DILocation(line: 2874, column: 2, scope: !5138)
!5142 = distinct !DISubprogram(name: "interface_to_usbdev", scope: !6, file: !6, line: 715, type: !5143, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5143 = !DISubroutineType(types: !5144)
!5144 = !{!170, !3965}
!5145 = !DILocalVariable(name: "intf", arg: 1, scope: !5142, file: !6, line: 715, type: !3965)
!5146 = !DILocation(line: 715, column: 76, scope: !5142)
!5147 = !DILocalVariable(name: "__mptr", scope: !5148, file: !6, line: 717, type: !169)
!5148 = distinct !DILexicalBlock(scope: !5142, file: !6, line: 717, column: 9)
!5149 = !DILocation(line: 717, column: 9, scope: !5148)
!5150 = !DILocation(line: 717, column: 9, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5148, file: !6, line: 717, column: 9)
!5152 = !DILocation(line: 717, column: 2, scope: !5142)
!5153 = distinct !DISubprogram(name: "kzalloc", scope: !127, file: !127, line: 662, type: !4469, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5154 = !DILocation(line: 445, column: 72, scope: !4461, inlinedAt: !5155)
!5155 = distinct !DILocation(line: 552, column: 10, scope: !4466, inlinedAt: !5156)
!5156 = distinct !DILocation(line: 664, column: 9, scope: !5153)
!5157 = !DILocation(line: 446, column: 9, scope: !4461, inlinedAt: !5155)
!5158 = !DILocation(line: 446, column: 23, scope: !4461, inlinedAt: !5155)
!5159 = !DILocation(line: 448, column: 8, scope: !4461, inlinedAt: !5155)
!5160 = !DILocation(line: 318, column: 67, scope: !4479, inlinedAt: !5161)
!5161 = distinct !DILocation(line: 553, column: 20, scope: !4466, inlinedAt: !5156)
!5162 = !DILocation(line: 346, column: 58, scope: !4485, inlinedAt: !5163)
!5163 = distinct !DILocation(line: 547, column: 11, scope: !4466, inlinedAt: !5156)
!5164 = !DILocation(line: 472, column: 28, scope: !4491, inlinedAt: !5165)
!5165 = distinct !DILocation(line: 481, column: 9, scope: !4496, inlinedAt: !5166)
!5166 = distinct !DILocation(line: 545, column: 11, scope: !4498, inlinedAt: !5156)
!5167 = !DILocation(line: 472, column: 40, scope: !4491, inlinedAt: !5165)
!5168 = !DILocation(line: 472, column: 60, scope: !4491, inlinedAt: !5165)
!5169 = !DILocation(line: 478, column: 51, scope: !4496, inlinedAt: !5166)
!5170 = !DILocation(line: 478, column: 63, scope: !4496, inlinedAt: !5166)
!5171 = !DILocation(line: 480, column: 15, scope: !4496, inlinedAt: !5166)
!5172 = !DILocation(line: 538, column: 45, scope: !4468, inlinedAt: !5156)
!5173 = !DILocation(line: 538, column: 57, scope: !4468, inlinedAt: !5156)
!5174 = !DILocation(line: 542, column: 16, scope: !4466, inlinedAt: !5156)
!5175 = !DILocalVariable(name: "size", arg: 1, scope: !5153, file: !127, line: 662, type: !308)
!5176 = !DILocation(line: 662, column: 36, scope: !5153)
!5177 = !DILocalVariable(name: "flags", arg: 2, scope: !5153, file: !127, line: 662, type: !149)
!5178 = !DILocation(line: 662, column: 48, scope: !5153)
!5179 = !DILocation(line: 664, column: 17, scope: !5153)
!5180 = !DILocation(line: 664, column: 23, scope: !5153)
!5181 = !DILocation(line: 664, column: 29, scope: !5153)
!5182 = !DILocation(line: 540, column: 27, scope: !4467, inlinedAt: !5156)
!5183 = !DILocation(line: 540, column: 6, scope: !4467, inlinedAt: !5156)
!5184 = !DILocation(line: 540, column: 6, scope: !4468, inlinedAt: !5156)
!5185 = !DILocation(line: 544, column: 7, scope: !4498, inlinedAt: !5156)
!5186 = !DILocation(line: 544, column: 12, scope: !4498, inlinedAt: !5156)
!5187 = !DILocation(line: 544, column: 7, scope: !4466, inlinedAt: !5156)
!5188 = !DILocation(line: 545, column: 25, scope: !4498, inlinedAt: !5156)
!5189 = !DILocation(line: 545, column: 31, scope: !4498, inlinedAt: !5156)
!5190 = !DILocation(line: 480, column: 33, scope: !4496, inlinedAt: !5166)
!5191 = !DILocation(line: 480, column: 23, scope: !4496, inlinedAt: !5166)
!5192 = !DILocation(line: 481, column: 29, scope: !4496, inlinedAt: !5166)
!5193 = !DILocation(line: 481, column: 35, scope: !4496, inlinedAt: !5166)
!5194 = !DILocation(line: 481, column: 42, scope: !4496, inlinedAt: !5166)
!5195 = !DILocation(line: 474, column: 23, scope: !4491, inlinedAt: !5165)
!5196 = !DILocation(line: 474, column: 29, scope: !4491, inlinedAt: !5165)
!5197 = !DILocation(line: 474, column: 36, scope: !4491, inlinedAt: !5165)
!5198 = !DILocation(line: 474, column: 9, scope: !4491, inlinedAt: !5165)
!5199 = !DILocation(line: 545, column: 4, scope: !4498, inlinedAt: !5156)
!5200 = !DILocation(line: 547, column: 25, scope: !4466, inlinedAt: !5156)
!5201 = !DILocation(line: 348, column: 7, scope: !4626, inlinedAt: !5163)
!5202 = !DILocation(line: 348, column: 6, scope: !4485, inlinedAt: !5163)
!5203 = !DILocation(line: 349, column: 3, scope: !4626, inlinedAt: !5163)
!5204 = !DILocation(line: 351, column: 6, scope: !4630, inlinedAt: !5163)
!5205 = !DILocation(line: 351, column: 11, scope: !4630, inlinedAt: !5163)
!5206 = !DILocation(line: 351, column: 6, scope: !4485, inlinedAt: !5163)
!5207 = !DILocation(line: 352, column: 3, scope: !4630, inlinedAt: !5163)
!5208 = !DILocation(line: 354, column: 32, scope: !4635, inlinedAt: !5163)
!5209 = !DILocation(line: 354, column: 37, scope: !4635, inlinedAt: !5163)
!5210 = !DILocation(line: 354, column: 42, scope: !4635, inlinedAt: !5163)
!5211 = !DILocation(line: 354, column: 45, scope: !4635, inlinedAt: !5163)
!5212 = !DILocation(line: 354, column: 50, scope: !4635, inlinedAt: !5163)
!5213 = !DILocation(line: 354, column: 6, scope: !4485, inlinedAt: !5163)
!5214 = !DILocation(line: 355, column: 3, scope: !4635, inlinedAt: !5163)
!5215 = !DILocation(line: 356, column: 32, scope: !4643, inlinedAt: !5163)
!5216 = !DILocation(line: 356, column: 37, scope: !4643, inlinedAt: !5163)
!5217 = !DILocation(line: 356, column: 43, scope: !4643, inlinedAt: !5163)
!5218 = !DILocation(line: 356, column: 46, scope: !4643, inlinedAt: !5163)
!5219 = !DILocation(line: 356, column: 51, scope: !4643, inlinedAt: !5163)
!5220 = !DILocation(line: 356, column: 6, scope: !4485, inlinedAt: !5163)
!5221 = !DILocation(line: 357, column: 3, scope: !4643, inlinedAt: !5163)
!5222 = !DILocation(line: 358, column: 6, scope: !4651, inlinedAt: !5163)
!5223 = !DILocation(line: 358, column: 11, scope: !4651, inlinedAt: !5163)
!5224 = !DILocation(line: 358, column: 6, scope: !4485, inlinedAt: !5163)
!5225 = !DILocation(line: 358, column: 26, scope: !4651, inlinedAt: !5163)
!5226 = !DILocation(line: 359, column: 6, scope: !4656, inlinedAt: !5163)
!5227 = !DILocation(line: 359, column: 11, scope: !4656, inlinedAt: !5163)
!5228 = !DILocation(line: 359, column: 6, scope: !4485, inlinedAt: !5163)
!5229 = !DILocation(line: 359, column: 26, scope: !4656, inlinedAt: !5163)
!5230 = !DILocation(line: 360, column: 6, scope: !4661, inlinedAt: !5163)
!5231 = !DILocation(line: 360, column: 11, scope: !4661, inlinedAt: !5163)
!5232 = !DILocation(line: 360, column: 6, scope: !4485, inlinedAt: !5163)
!5233 = !DILocation(line: 360, column: 26, scope: !4661, inlinedAt: !5163)
!5234 = !DILocation(line: 361, column: 6, scope: !4666, inlinedAt: !5163)
!5235 = !DILocation(line: 361, column: 11, scope: !4666, inlinedAt: !5163)
!5236 = !DILocation(line: 361, column: 6, scope: !4485, inlinedAt: !5163)
!5237 = !DILocation(line: 361, column: 26, scope: !4666, inlinedAt: !5163)
!5238 = !DILocation(line: 362, column: 6, scope: !4671, inlinedAt: !5163)
!5239 = !DILocation(line: 362, column: 11, scope: !4671, inlinedAt: !5163)
!5240 = !DILocation(line: 362, column: 6, scope: !4485, inlinedAt: !5163)
!5241 = !DILocation(line: 362, column: 26, scope: !4671, inlinedAt: !5163)
!5242 = !DILocation(line: 363, column: 6, scope: !4676, inlinedAt: !5163)
!5243 = !DILocation(line: 363, column: 11, scope: !4676, inlinedAt: !5163)
!5244 = !DILocation(line: 363, column: 6, scope: !4485, inlinedAt: !5163)
!5245 = !DILocation(line: 363, column: 26, scope: !4676, inlinedAt: !5163)
!5246 = !DILocation(line: 364, column: 6, scope: !4681, inlinedAt: !5163)
!5247 = !DILocation(line: 364, column: 11, scope: !4681, inlinedAt: !5163)
!5248 = !DILocation(line: 364, column: 6, scope: !4485, inlinedAt: !5163)
!5249 = !DILocation(line: 364, column: 26, scope: !4681, inlinedAt: !5163)
!5250 = !DILocation(line: 365, column: 6, scope: !4686, inlinedAt: !5163)
!5251 = !DILocation(line: 365, column: 11, scope: !4686, inlinedAt: !5163)
!5252 = !DILocation(line: 365, column: 6, scope: !4485, inlinedAt: !5163)
!5253 = !DILocation(line: 365, column: 26, scope: !4686, inlinedAt: !5163)
!5254 = !DILocation(line: 366, column: 6, scope: !4691, inlinedAt: !5163)
!5255 = !DILocation(line: 366, column: 11, scope: !4691, inlinedAt: !5163)
!5256 = !DILocation(line: 366, column: 6, scope: !4485, inlinedAt: !5163)
!5257 = !DILocation(line: 366, column: 26, scope: !4691, inlinedAt: !5163)
!5258 = !DILocation(line: 367, column: 6, scope: !4696, inlinedAt: !5163)
!5259 = !DILocation(line: 367, column: 11, scope: !4696, inlinedAt: !5163)
!5260 = !DILocation(line: 367, column: 6, scope: !4485, inlinedAt: !5163)
!5261 = !DILocation(line: 367, column: 26, scope: !4696, inlinedAt: !5163)
!5262 = !DILocation(line: 368, column: 6, scope: !4701, inlinedAt: !5163)
!5263 = !DILocation(line: 368, column: 11, scope: !4701, inlinedAt: !5163)
!5264 = !DILocation(line: 368, column: 6, scope: !4485, inlinedAt: !5163)
!5265 = !DILocation(line: 368, column: 26, scope: !4701, inlinedAt: !5163)
!5266 = !DILocation(line: 369, column: 6, scope: !4706, inlinedAt: !5163)
!5267 = !DILocation(line: 369, column: 11, scope: !4706, inlinedAt: !5163)
!5268 = !DILocation(line: 369, column: 6, scope: !4485, inlinedAt: !5163)
!5269 = !DILocation(line: 369, column: 26, scope: !4706, inlinedAt: !5163)
!5270 = !DILocation(line: 370, column: 6, scope: !4711, inlinedAt: !5163)
!5271 = !DILocation(line: 370, column: 11, scope: !4711, inlinedAt: !5163)
!5272 = !DILocation(line: 370, column: 6, scope: !4485, inlinedAt: !5163)
!5273 = !DILocation(line: 370, column: 26, scope: !4711, inlinedAt: !5163)
!5274 = !DILocation(line: 371, column: 6, scope: !4716, inlinedAt: !5163)
!5275 = !DILocation(line: 371, column: 11, scope: !4716, inlinedAt: !5163)
!5276 = !DILocation(line: 371, column: 6, scope: !4485, inlinedAt: !5163)
!5277 = !DILocation(line: 371, column: 26, scope: !4716, inlinedAt: !5163)
!5278 = !DILocation(line: 372, column: 6, scope: !4721, inlinedAt: !5163)
!5279 = !DILocation(line: 372, column: 11, scope: !4721, inlinedAt: !5163)
!5280 = !DILocation(line: 372, column: 6, scope: !4485, inlinedAt: !5163)
!5281 = !DILocation(line: 372, column: 26, scope: !4721, inlinedAt: !5163)
!5282 = !DILocation(line: 373, column: 6, scope: !4726, inlinedAt: !5163)
!5283 = !DILocation(line: 373, column: 11, scope: !4726, inlinedAt: !5163)
!5284 = !DILocation(line: 373, column: 6, scope: !4485, inlinedAt: !5163)
!5285 = !DILocation(line: 373, column: 26, scope: !4726, inlinedAt: !5163)
!5286 = !DILocation(line: 374, column: 6, scope: !4731, inlinedAt: !5163)
!5287 = !DILocation(line: 374, column: 11, scope: !4731, inlinedAt: !5163)
!5288 = !DILocation(line: 374, column: 6, scope: !4485, inlinedAt: !5163)
!5289 = !DILocation(line: 374, column: 26, scope: !4731, inlinedAt: !5163)
!5290 = !DILocation(line: 375, column: 6, scope: !4736, inlinedAt: !5163)
!5291 = !DILocation(line: 375, column: 11, scope: !4736, inlinedAt: !5163)
!5292 = !DILocation(line: 375, column: 6, scope: !4485, inlinedAt: !5163)
!5293 = !DILocation(line: 375, column: 27, scope: !4736, inlinedAt: !5163)
!5294 = !DILocation(line: 376, column: 6, scope: !4741, inlinedAt: !5163)
!5295 = !DILocation(line: 376, column: 11, scope: !4741, inlinedAt: !5163)
!5296 = !DILocation(line: 376, column: 6, scope: !4485, inlinedAt: !5163)
!5297 = !DILocation(line: 376, column: 32, scope: !4741, inlinedAt: !5163)
!5298 = !DILocation(line: 377, column: 6, scope: !4746, inlinedAt: !5163)
!5299 = !DILocation(line: 377, column: 11, scope: !4746, inlinedAt: !5163)
!5300 = !DILocation(line: 377, column: 6, scope: !4485, inlinedAt: !5163)
!5301 = !DILocation(line: 377, column: 32, scope: !4746, inlinedAt: !5163)
!5302 = !DILocation(line: 378, column: 6, scope: !4751, inlinedAt: !5163)
!5303 = !DILocation(line: 378, column: 11, scope: !4751, inlinedAt: !5163)
!5304 = !DILocation(line: 378, column: 6, scope: !4485, inlinedAt: !5163)
!5305 = !DILocation(line: 378, column: 32, scope: !4751, inlinedAt: !5163)
!5306 = !DILocation(line: 379, column: 6, scope: !4756, inlinedAt: !5163)
!5307 = !DILocation(line: 379, column: 11, scope: !4756, inlinedAt: !5163)
!5308 = !DILocation(line: 379, column: 6, scope: !4485, inlinedAt: !5163)
!5309 = !DILocation(line: 379, column: 33, scope: !4756, inlinedAt: !5163)
!5310 = !DILocation(line: 380, column: 6, scope: !4761, inlinedAt: !5163)
!5311 = !DILocation(line: 380, column: 11, scope: !4761, inlinedAt: !5163)
!5312 = !DILocation(line: 380, column: 6, scope: !4485, inlinedAt: !5163)
!5313 = !DILocation(line: 380, column: 33, scope: !4761, inlinedAt: !5163)
!5314 = !DILocation(line: 381, column: 6, scope: !4766, inlinedAt: !5163)
!5315 = !DILocation(line: 381, column: 11, scope: !4766, inlinedAt: !5163)
!5316 = !DILocation(line: 381, column: 6, scope: !4485, inlinedAt: !5163)
!5317 = !DILocation(line: 381, column: 33, scope: !4766, inlinedAt: !5163)
!5318 = !DILocation(line: 382, column: 2, scope: !4771, inlinedAt: !5163)
!5319 = !DILocation(line: 382, column: 2, scope: !4775, inlinedAt: !5163)
!5320 = !DILocation(line: 382, column: 2, scope: !4776, inlinedAt: !5163)
!5321 = !DILocation(line: 386, column: 1, scope: !4485, inlinedAt: !5163)
!5322 = !DILocation(line: 547, column: 9, scope: !4466, inlinedAt: !5156)
!5323 = !DILocation(line: 549, column: 8, scope: !4782, inlinedAt: !5156)
!5324 = !DILocation(line: 549, column: 7, scope: !4466, inlinedAt: !5156)
!5325 = !DILocation(line: 550, column: 4, scope: !4782, inlinedAt: !5156)
!5326 = !DILocation(line: 553, column: 33, scope: !4466, inlinedAt: !5156)
!5327 = !DILocation(line: 325, column: 6, scope: !4787, inlinedAt: !5161)
!5328 = !DILocation(line: 325, column: 6, scope: !4479, inlinedAt: !5161)
!5329 = !DILocation(line: 326, column: 3, scope: !4787, inlinedAt: !5161)
!5330 = !DILocation(line: 332, column: 9, scope: !4479, inlinedAt: !5161)
!5331 = !DILocation(line: 332, column: 15, scope: !4479, inlinedAt: !5161)
!5332 = !DILocation(line: 332, column: 2, scope: !4479, inlinedAt: !5161)
!5333 = !DILocation(line: 336, column: 1, scope: !4479, inlinedAt: !5161)
!5334 = !DILocation(line: 553, column: 5, scope: !4466, inlinedAt: !5156)
!5335 = !DILocation(line: 553, column: 41, scope: !4466, inlinedAt: !5156)
!5336 = !DILocation(line: 554, column: 5, scope: !4466, inlinedAt: !5156)
!5337 = !DILocation(line: 554, column: 12, scope: !4466, inlinedAt: !5156)
!5338 = !DILocation(line: 448, column: 31, scope: !4461, inlinedAt: !5155)
!5339 = !DILocation(line: 448, column: 34, scope: !4461, inlinedAt: !5155)
!5340 = !DILocation(line: 448, column: 14, scope: !4461, inlinedAt: !5155)
!5341 = !DILocation(line: 450, column: 22, scope: !4461, inlinedAt: !5155)
!5342 = !DILocation(line: 450, column: 25, scope: !4461, inlinedAt: !5155)
!5343 = !DILocation(line: 450, column: 30, scope: !4461, inlinedAt: !5155)
!5344 = !DILocation(line: 450, column: 36, scope: !4461, inlinedAt: !5155)
!5345 = !DILocation(line: 450, column: 8, scope: !4461, inlinedAt: !5155)
!5346 = !DILocation(line: 450, column: 6, scope: !4461, inlinedAt: !5155)
!5347 = !DILocation(line: 451, column: 9, scope: !4461, inlinedAt: !5155)
!5348 = !DILocation(line: 552, column: 3, scope: !4466, inlinedAt: !5156)
!5349 = !DILocation(line: 557, column: 19, scope: !4468, inlinedAt: !5156)
!5350 = !DILocation(line: 557, column: 25, scope: !4468, inlinedAt: !5156)
!5351 = !DILocation(line: 557, column: 9, scope: !4468, inlinedAt: !5156)
!5352 = !DILocation(line: 557, column: 2, scope: !4468, inlinedAt: !5156)
!5353 = !DILocation(line: 558, column: 1, scope: !4468, inlinedAt: !5156)
!5354 = !DILocation(line: 664, column: 2, scope: !5153)
!5355 = distinct !DISubprogram(name: "__create_pipe", scope: !6, file: !6, line: 1945, type: !5356, scopeLine: 1947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5356 = !DISubroutineType(types: !5357)
!5357 = !{!7, !170, !7}
!5358 = !DILocalVariable(name: "dev", arg: 1, scope: !5355, file: !6, line: 1945, type: !170)
!5359 = !DILocation(line: 1945, column: 61, scope: !5355)
!5360 = !DILocalVariable(name: "endpoint", arg: 2, scope: !5355, file: !6, line: 1946, type: !7)
!5361 = !DILocation(line: 1946, column: 16, scope: !5355)
!5362 = !DILocation(line: 1948, column: 10, scope: !5355)
!5363 = !DILocation(line: 1948, column: 15, scope: !5355)
!5364 = !DILocation(line: 1948, column: 22, scope: !5355)
!5365 = !DILocation(line: 1948, column: 31, scope: !5355)
!5366 = !DILocation(line: 1948, column: 40, scope: !5355)
!5367 = !DILocation(line: 1948, column: 28, scope: !5355)
!5368 = !DILocation(line: 1948, column: 2, scope: !5355)
!5369 = distinct !DISubprogram(name: "get_endpoints", scope: !3, file: !3, line: 143, type: !5370, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{!168, !4522, !3965}
!5372 = !DILocalVariable(name: "dev", arg: 1, scope: !5369, file: !3, line: 143, type: !4522)
!5373 = !DILocation(line: 143, column: 35, scope: !5369)
!5374 = !DILocalVariable(name: "intf", arg: 2, scope: !5369, file: !3, line: 143, type: !3965)
!5375 = !DILocation(line: 143, column: 62, scope: !5369)
!5376 = !DILocalVariable(name: "tmp", scope: !5369, file: !3, line: 145, type: !168)
!5377 = !DILocation(line: 145, column: 9, scope: !5369)
!5378 = !DILocalVariable(name: "alt", scope: !5369, file: !3, line: 146, type: !3969)
!5379 = !DILocation(line: 146, column: 29, scope: !5369)
!5380 = !DILocalVariable(name: "in", scope: !5369, file: !3, line: 147, type: !3987)
!5381 = !DILocation(line: 147, column: 28, scope: !5369)
!5382 = !DILocalVariable(name: "out", scope: !5369, file: !3, line: 147, type: !3987)
!5383 = !DILocation(line: 147, column: 33, scope: !5369)
!5384 = !DILocalVariable(name: "iso_in", scope: !5369, file: !3, line: 148, type: !3987)
!5385 = !DILocation(line: 148, column: 28, scope: !5369)
!5386 = !DILocalVariable(name: "iso_out", scope: !5369, file: !3, line: 148, type: !3987)
!5387 = !DILocation(line: 148, column: 37, scope: !5369)
!5388 = !DILocalVariable(name: "int_in", scope: !5369, file: !3, line: 149, type: !3987)
!5389 = !DILocation(line: 149, column: 28, scope: !5369)
!5390 = !DILocalVariable(name: "int_out", scope: !5369, file: !3, line: 149, type: !3987)
!5391 = !DILocation(line: 149, column: 37, scope: !5369)
!5392 = !DILocalVariable(name: "udev", scope: !5369, file: !3, line: 150, type: !170)
!5393 = !DILocation(line: 150, column: 22, scope: !5369)
!5394 = !DILocation(line: 152, column: 11, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 152, column: 2)
!5396 = !DILocation(line: 152, column: 7, scope: !5395)
!5397 = !DILocation(line: 152, column: 16, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5395, file: !3, line: 152, column: 2)
!5399 = !DILocation(line: 152, column: 22, scope: !5398)
!5400 = !DILocation(line: 152, column: 28, scope: !5398)
!5401 = !DILocation(line: 152, column: 20, scope: !5398)
!5402 = !DILocation(line: 152, column: 2, scope: !5395)
!5403 = !DILocalVariable(name: "ep", scope: !5404, file: !3, line: 153, type: !7)
!5404 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 152, column: 51)
!5405 = !DILocation(line: 153, column: 12, scope: !5404)
!5406 = !DILocation(line: 155, column: 12, scope: !5404)
!5407 = !DILocation(line: 155, column: 6, scope: !5404)
!5408 = !DILocation(line: 156, column: 20, scope: !5404)
!5409 = !DILocation(line: 156, column: 10, scope: !5404)
!5410 = !DILocation(line: 157, column: 20, scope: !5404)
!5411 = !DILocation(line: 157, column: 10, scope: !5404)
!5412 = !DILocation(line: 158, column: 9, scope: !5404)
!5413 = !DILocation(line: 158, column: 15, scope: !5404)
!5414 = !DILocation(line: 158, column: 28, scope: !5404)
!5415 = !DILocation(line: 158, column: 26, scope: !5404)
!5416 = !DILocation(line: 158, column: 7, scope: !5404)
!5417 = !DILocation(line: 160, column: 7, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 160, column: 7)
!5419 = !DILocation(line: 160, column: 20, scope: !5418)
!5420 = !DILocation(line: 160, column: 25, scope: !5418)
!5421 = !DILocation(line: 161, column: 5, scope: !5418)
!5422 = !DILocation(line: 161, column: 21, scope: !5418)
!5423 = !DILocation(line: 161, column: 26, scope: !5418)
!5424 = !DILocation(line: 161, column: 31, scope: !5418)
!5425 = !DILocation(line: 161, column: 18, scope: !5418)
!5426 = !DILocation(line: 160, column: 7, scope: !5404)
!5427 = !DILocation(line: 162, column: 4, scope: !5418)
!5428 = !DILocation(line: 167, column: 11, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 167, column: 3)
!5430 = !DILocation(line: 167, column: 8, scope: !5429)
!5431 = !DILocation(line: 167, column: 16, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 167, column: 3)
!5433 = !DILocation(line: 167, column: 21, scope: !5432)
!5434 = !DILocation(line: 167, column: 26, scope: !5432)
!5435 = !DILocation(line: 167, column: 31, scope: !5432)
!5436 = !DILocation(line: 167, column: 19, scope: !5432)
!5437 = !DILocation(line: 167, column: 3, scope: !5429)
!5438 = !DILocalVariable(name: "e", scope: !5439, file: !3, line: 168, type: !3987)
!5439 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 167, column: 52)
!5440 = !DILocation(line: 168, column: 30, scope: !5439)
!5441 = !DILocalVariable(name: "edi", scope: !5439, file: !3, line: 169, type: !168)
!5442 = !DILocation(line: 169, column: 8, scope: !5439)
!5443 = !DILocation(line: 171, column: 8, scope: !5439)
!5444 = !DILocation(line: 171, column: 13, scope: !5439)
!5445 = !DILocation(line: 171, column: 24, scope: !5439)
!5446 = !DILocation(line: 171, column: 22, scope: !5439)
!5447 = !DILocation(line: 171, column: 6, scope: !5439)
!5448 = !DILocation(line: 172, column: 31, scope: !5439)
!5449 = !DILocation(line: 172, column: 34, scope: !5439)
!5450 = !DILocation(line: 172, column: 10, scope: !5439)
!5451 = !DILocation(line: 172, column: 8, scope: !5439)
!5452 = !DILocation(line: 174, column: 31, scope: !5439)
!5453 = !DILocation(line: 174, column: 34, scope: !5439)
!5454 = !DILocation(line: 174, column: 12, scope: !5439)
!5455 = !DILocation(line: 174, column: 4, scope: !5439)
!5456 = !DILocation(line: 176, column: 21, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 174, column: 41)
!5458 = !DILocation(line: 176, column: 37, scope: !5457)
!5459 = !DILocation(line: 176, column: 5, scope: !5457)
!5460 = !DILocation(line: 177, column: 5, scope: !5457)
!5461 = !DILocation(line: 179, column: 9, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 179, column: 9)
!5463 = !DILocation(line: 179, column: 14, scope: !5462)
!5464 = !DILocation(line: 179, column: 20, scope: !5462)
!5465 = !DILocation(line: 179, column: 9, scope: !5457)
!5466 = !DILocation(line: 180, column: 22, scope: !5462)
!5467 = !DILocation(line: 180, column: 46, scope: !5462)
!5468 = !DILocation(line: 180, column: 6, scope: !5462)
!5469 = !DILocation(line: 181, column: 5, scope: !5457)
!5470 = !DILocation(line: 183, column: 9, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 183, column: 9)
!5472 = !DILocation(line: 183, column: 14, scope: !5471)
!5473 = !DILocation(line: 183, column: 20, scope: !5471)
!5474 = !DILocation(line: 183, column: 9, scope: !5457)
!5475 = !DILocation(line: 184, column: 22, scope: !5471)
!5476 = !DILocation(line: 184, column: 46, scope: !5471)
!5477 = !DILocation(line: 184, column: 6, scope: !5471)
!5478 = !DILocation(line: 187, column: 5, scope: !5457)
!5479 = !DILocation(line: 167, column: 48, scope: !5432)
!5480 = !DILocation(line: 167, column: 3, scope: !5432)
!5481 = distinct !{!5481, !5437, !5482}
!5482 = !DILocation(line: 189, column: 3, scope: !5429)
!5483 = !DILocation(line: 190, column: 8, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 190, column: 7)
!5485 = !DILocation(line: 190, column: 11, scope: !5484)
!5486 = !DILocation(line: 190, column: 14, scope: !5484)
!5487 = !DILocation(line: 190, column: 20, scope: !5484)
!5488 = !DILocation(line: 190, column: 24, scope: !5484)
!5489 = !DILocation(line: 190, column: 31, scope: !5484)
!5490 = !DILocation(line: 190, column: 34, scope: !5484)
!5491 = !DILocation(line: 190, column: 42, scope: !5484)
!5492 = !DILocation(line: 190, column: 45, scope: !5484)
!5493 = !DILocation(line: 190, column: 52, scope: !5484)
!5494 = !DILocation(line: 190, column: 55, scope: !5484)
!5495 = !DILocation(line: 190, column: 7, scope: !5404)
!5496 = !DILocation(line: 191, column: 4, scope: !5484)
!5497 = !DILocation(line: 192, column: 2, scope: !5404)
!5498 = !DILocation(line: 152, column: 47, scope: !5398)
!5499 = !DILocation(line: 152, column: 2, scope: !5398)
!5500 = distinct !{!5500, !5402, !5501}
!5501 = !DILocation(line: 192, column: 2, scope: !5395)
!5502 = !DILocation(line: 193, column: 2, scope: !5369)
!5503 = !DILabel(scope: !5369, name: "found", file: !3, line: 195)
!5504 = !DILocation(line: 195, column: 1, scope: !5369)
!5505 = !DILocation(line: 196, column: 27, scope: !5369)
!5506 = !DILocation(line: 196, column: 9, scope: !5369)
!5507 = !DILocation(line: 196, column: 7, scope: !5369)
!5508 = !DILocation(line: 197, column: 19, scope: !5369)
!5509 = !DILocation(line: 197, column: 24, scope: !5369)
!5510 = !DILocation(line: 197, column: 29, scope: !5369)
!5511 = !DILocation(line: 197, column: 2, scope: !5369)
!5512 = !DILocation(line: 197, column: 7, scope: !5369)
!5513 = !DILocation(line: 197, column: 13, scope: !5369)
!5514 = !DILocation(line: 197, column: 17, scope: !5369)
!5515 = !DILocation(line: 198, column: 6, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 198, column: 6)
!5517 = !DILocation(line: 198, column: 11, scope: !5516)
!5518 = !DILocation(line: 198, column: 16, scope: !5516)
!5519 = !DILocation(line: 198, column: 34, scope: !5516)
!5520 = !DILocation(line: 198, column: 6, scope: !5369)
!5521 = !DILocation(line: 199, column: 27, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 198, column: 40)
!5523 = !DILocation(line: 200, column: 5, scope: !5522)
!5524 = !DILocation(line: 200, column: 10, scope: !5522)
!5525 = !DILocation(line: 200, column: 15, scope: !5522)
!5526 = !DILocation(line: 201, column: 5, scope: !5522)
!5527 = !DILocation(line: 201, column: 10, scope: !5522)
!5528 = !DILocation(line: 201, column: 15, scope: !5522)
!5529 = !DILocation(line: 199, column: 9, scope: !5522)
!5530 = !DILocation(line: 199, column: 7, scope: !5522)
!5531 = !DILocation(line: 202, column: 7, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 202, column: 7)
!5533 = !DILocation(line: 202, column: 11, scope: !5532)
!5534 = !DILocation(line: 202, column: 7, scope: !5522)
!5535 = !DILocation(line: 203, column: 11, scope: !5532)
!5536 = !DILocation(line: 203, column: 4, scope: !5532)
!5537 = !DILocation(line: 204, column: 2, scope: !5522)
!5538 = !DILocation(line: 206, column: 6, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 206, column: 6)
!5540 = !DILocation(line: 206, column: 6, scope: !5369)
!5541 = !DILocation(line: 207, column: 18, scope: !5539)
!5542 = !DILocation(line: 207, column: 3, scope: !5539)
!5543 = !DILocation(line: 207, column: 8, scope: !5539)
!5544 = !DILocation(line: 207, column: 16, scope: !5539)
!5545 = !DILocation(line: 209, column: 6, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 209, column: 6)
!5547 = !DILocation(line: 209, column: 6, scope: !5369)
!5548 = !DILocation(line: 210, column: 19, scope: !5546)
!5549 = !DILocation(line: 210, column: 3, scope: !5546)
!5550 = !DILocation(line: 210, column: 8, scope: !5546)
!5551 = !DILocation(line: 210, column: 17, scope: !5546)
!5552 = !DILocation(line: 213, column: 6, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 213, column: 6)
!5554 = !DILocation(line: 213, column: 6, scope: !5369)
!5555 = !DILocation(line: 214, column: 18, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 213, column: 14)
!5557 = !DILocation(line: 214, column: 26, scope: !5556)
!5558 = !DILocation(line: 214, column: 3, scope: !5556)
!5559 = !DILocation(line: 214, column: 8, scope: !5556)
!5560 = !DILocation(line: 214, column: 15, scope: !5556)
!5561 = !DILocation(line: 215, column: 22, scope: !5556)
!5562 = !DILocation(line: 215, column: 3, scope: !5556)
!5563 = !DILocation(line: 215, column: 8, scope: !5556)
!5564 = !DILocation(line: 215, column: 20, scope: !5556)
!5565 = !DILocation(line: 218, column: 2, scope: !5556)
!5566 = !DILocation(line: 220, column: 6, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 220, column: 6)
!5568 = !DILocation(line: 220, column: 6, scope: !5369)
!5569 = !DILocation(line: 221, column: 19, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 220, column: 15)
!5571 = !DILocation(line: 221, column: 28, scope: !5570)
!5572 = !DILocation(line: 221, column: 3, scope: !5570)
!5573 = !DILocation(line: 221, column: 8, scope: !5570)
!5574 = !DILocation(line: 221, column: 16, scope: !5570)
!5575 = !DILocation(line: 222, column: 23, scope: !5570)
!5576 = !DILocation(line: 222, column: 3, scope: !5570)
!5577 = !DILocation(line: 222, column: 8, scope: !5570)
!5578 = !DILocation(line: 222, column: 21, scope: !5570)
!5579 = !DILocation(line: 225, column: 2, scope: !5570)
!5580 = !DILocation(line: 227, column: 6, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 227, column: 6)
!5582 = !DILocation(line: 227, column: 6, scope: !5369)
!5583 = !DILocation(line: 228, column: 18, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 227, column: 14)
!5585 = !DILocation(line: 228, column: 26, scope: !5584)
!5586 = !DILocation(line: 228, column: 3, scope: !5584)
!5587 = !DILocation(line: 228, column: 8, scope: !5584)
!5588 = !DILocation(line: 228, column: 15, scope: !5584)
!5589 = !DILocation(line: 229, column: 22, scope: !5584)
!5590 = !DILocation(line: 229, column: 3, scope: !5584)
!5591 = !DILocation(line: 229, column: 8, scope: !5584)
!5592 = !DILocation(line: 229, column: 20, scope: !5584)
!5593 = !DILocation(line: 232, column: 2, scope: !5584)
!5594 = !DILocation(line: 234, column: 6, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 234, column: 6)
!5596 = !DILocation(line: 234, column: 6, scope: !5369)
!5597 = !DILocation(line: 235, column: 19, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 234, column: 15)
!5599 = !DILocation(line: 235, column: 28, scope: !5598)
!5600 = !DILocation(line: 235, column: 3, scope: !5598)
!5601 = !DILocation(line: 235, column: 8, scope: !5598)
!5602 = !DILocation(line: 235, column: 16, scope: !5598)
!5603 = !DILocation(line: 236, column: 23, scope: !5598)
!5604 = !DILocation(line: 236, column: 3, scope: !5598)
!5605 = !DILocation(line: 236, column: 8, scope: !5598)
!5606 = !DILocation(line: 236, column: 21, scope: !5598)
!5607 = !DILocation(line: 239, column: 2, scope: !5598)
!5608 = !DILocation(line: 240, column: 2, scope: !5369)
!5609 = !DILocation(line: 241, column: 1, scope: !5369)
!5610 = distinct !DISubprogram(name: "usb_set_intfdata", scope: !6, file: !6, line: 268, type: !5611, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5611 = !DISubroutineType(types: !5612)
!5612 = !{null, !3965, !169}
!5613 = !DILocalVariable(name: "intf", arg: 1, scope: !5610, file: !6, line: 268, type: !3965)
!5614 = !DILocation(line: 268, column: 59, scope: !5610)
!5615 = !DILocalVariable(name: "data", arg: 2, scope: !5610, file: !6, line: 268, type: !169)
!5616 = !DILocation(line: 268, column: 71, scope: !5610)
!5617 = !DILocation(line: 270, column: 19, scope: !5610)
!5618 = !DILocation(line: 270, column: 25, scope: !5610)
!5619 = !DILocation(line: 270, column: 30, scope: !5610)
!5620 = !DILocation(line: 270, column: 2, scope: !5610)
!5621 = !DILocation(line: 271, column: 1, scope: !5610)
!5622 = distinct !DISubprogram(name: "get_order", scope: !5623, file: !5623, line: 29, type: !5624, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5623 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!5624 = !DISubroutineType(types: !5625)
!5625 = !{!168, !311}
!5626 = !DILocalVariable(name: "x", arg: 1, scope: !5627, file: !5628, line: 366, type: !405)
!5627 = distinct !DISubprogram(name: "fls64", scope: !5628, file: !5628, line: 366, type: !5629, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5628 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5629 = !DISubroutineType(types: !5630)
!5630 = !{!168, !405}
!5631 = !DILocation(line: 366, column: 40, scope: !5627, inlinedAt: !5632)
!5632 = distinct !DILocation(line: 46, column: 9, scope: !5622)
!5633 = !DILocalVariable(name: "bitpos", scope: !5627, file: !5628, line: 368, type: !168)
!5634 = !DILocation(line: 368, column: 6, scope: !5627, inlinedAt: !5632)
!5635 = !DILocalVariable(name: "size", arg: 1, scope: !5622, file: !5623, line: 29, type: !311)
!5636 = !DILocation(line: 29, column: 63, scope: !5622)
!5637 = !DILocation(line: 31, column: 27, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5622, file: !5623, line: 31, column: 6)
!5639 = !DILocation(line: 31, column: 6, scope: !5638)
!5640 = !DILocation(line: 31, column: 6, scope: !5622)
!5641 = !DILocation(line: 32, column: 8, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5643, file: !5623, line: 32, column: 7)
!5643 = distinct !DILexicalBlock(scope: !5638, file: !5623, line: 31, column: 34)
!5644 = !DILocation(line: 32, column: 7, scope: !5643)
!5645 = !DILocation(line: 33, column: 4, scope: !5642)
!5646 = !DILocation(line: 35, column: 7, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5643, file: !5623, line: 35, column: 7)
!5648 = !DILocation(line: 35, column: 12, scope: !5647)
!5649 = !DILocation(line: 35, column: 7, scope: !5643)
!5650 = !DILocation(line: 36, column: 4, scope: !5647)
!5651 = !DILocation(line: 38, column: 10, scope: !5643)
!5652 = !DILocation(line: 38, column: 28, scope: !5643)
!5653 = !DILocation(line: 38, column: 41, scope: !5643)
!5654 = !DILocation(line: 38, column: 3, scope: !5643)
!5655 = !DILocation(line: 41, column: 6, scope: !5622)
!5656 = !DILocation(line: 42, column: 7, scope: !5622)
!5657 = !DILocation(line: 46, column: 15, scope: !5622)
!5658 = !DILocation(line: 374, column: 2, scope: !5627, inlinedAt: !5632)
!5659 = !DILocation(line: 376, column: 14, scope: !5627, inlinedAt: !5632)
!5660 = !{i32 319294}
!5661 = !DILocation(line: 377, column: 9, scope: !5627, inlinedAt: !5632)
!5662 = !DILocation(line: 377, column: 16, scope: !5627, inlinedAt: !5632)
!5663 = !DILocation(line: 46, column: 2, scope: !5622)
!5664 = !DILocation(line: 48, column: 1, scope: !5622)
!5665 = distinct !DISubprogram(name: "__ilog2_u64", scope: !5666, file: !5666, line: 30, type: !5667, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5666 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!5667 = !DISubroutineType(types: !5668)
!5668 = !{!168, !404}
!5669 = !DILocation(line: 366, column: 40, scope: !5627, inlinedAt: !5670)
!5670 = distinct !DILocation(line: 32, column: 9, scope: !5665)
!5671 = !DILocation(line: 368, column: 6, scope: !5627, inlinedAt: !5670)
!5672 = !DILocalVariable(name: "n", arg: 1, scope: !5665, file: !5666, line: 30, type: !404)
!5673 = !DILocation(line: 30, column: 21, scope: !5665)
!5674 = !DILocation(line: 32, column: 15, scope: !5665)
!5675 = !DILocation(line: 374, column: 2, scope: !5627, inlinedAt: !5670)
!5676 = !DILocation(line: 376, column: 14, scope: !5627, inlinedAt: !5670)
!5677 = !DILocation(line: 377, column: 9, scope: !5627, inlinedAt: !5670)
!5678 = !DILocation(line: 377, column: 16, scope: !5627, inlinedAt: !5670)
!5679 = !DILocation(line: 32, column: 18, scope: !5665)
!5680 = !DILocation(line: 32, column: 2, scope: !5665)
!5681 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !5682, file: !5682, line: 137, type: !5683, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5682 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!5683 = !DISubroutineType(types: !5684)
!5684 = !{!169, !914, !2100, !308, !149}
!5685 = !DILocalVariable(name: "s", arg: 1, scope: !5681, file: !5682, line: 137, type: !914)
!5686 = !DILocation(line: 137, column: 54, scope: !5681)
!5687 = !DILocalVariable(name: "object", arg: 2, scope: !5681, file: !5682, line: 137, type: !2100)
!5688 = !DILocation(line: 137, column: 69, scope: !5681)
!5689 = !DILocalVariable(name: "size", arg: 3, scope: !5681, file: !5682, line: 138, type: !308)
!5690 = !DILocation(line: 138, column: 12, scope: !5681)
!5691 = !DILocalVariable(name: "flags", arg: 4, scope: !5681, file: !5682, line: 138, type: !149)
!5692 = !DILocation(line: 138, column: 24, scope: !5681)
!5693 = !DILocation(line: 140, column: 17, scope: !5681)
!5694 = !DILocation(line: 140, column: 2, scope: !5681)
!5695 = distinct !DISubprogram(name: "usb_endpoint_dir_in", scope: !101, file: !101, line: 492, type: !5696, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5696 = !DISubroutineType(types: !5697)
!5697 = !{!168, !5698}
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5699, size: 64)
!5699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3819)
!5700 = !DILocalVariable(name: "epd", arg: 1, scope: !5695, file: !101, line: 492, type: !5698)
!5701 = !DILocation(line: 492, column: 77, scope: !5695)
!5702 = !DILocation(line: 494, column: 11, scope: !5695)
!5703 = !DILocation(line: 494, column: 16, scope: !5695)
!5704 = !DILocation(line: 494, column: 33, scope: !5695)
!5705 = !DILocation(line: 494, column: 58, scope: !5695)
!5706 = !DILocation(line: 494, column: 2, scope: !5695)
!5707 = distinct !DISubprogram(name: "usb_endpoint_type", scope: !101, file: !101, line: 481, type: !5696, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5708 = !DILocalVariable(name: "epd", arg: 1, scope: !5707, file: !101, line: 481, type: !5698)
!5709 = !DILocation(line: 481, column: 75, scope: !5707)
!5710 = !DILocation(line: 483, column: 9, scope: !5707)
!5711 = !DILocation(line: 483, column: 14, scope: !5707)
!5712 = !DILocation(line: 483, column: 27, scope: !5707)
!5713 = !DILocation(line: 483, column: 2, scope: !5707)
!5714 = distinct !DISubprogram(name: "endpoint_update", scope: !3, file: !3, line: 128, type: !5715, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{null, !168, !5717, !5717, !3987}
!5717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!5718 = !DILocalVariable(name: "edi", arg: 1, scope: !5714, file: !3, line: 128, type: !168)
!5719 = !DILocation(line: 128, column: 40, scope: !5714)
!5720 = !DILocalVariable(name: "in", arg: 2, scope: !5714, file: !3, line: 129, type: !5717)
!5721 = !DILocation(line: 129, column: 35, scope: !5714)
!5722 = !DILocalVariable(name: "out", arg: 3, scope: !5714, file: !3, line: 130, type: !5717)
!5723 = !DILocation(line: 130, column: 35, scope: !5714)
!5724 = !DILocalVariable(name: "e", arg: 4, scope: !5714, file: !3, line: 131, type: !3987)
!5725 = !DILocation(line: 131, column: 34, scope: !5714)
!5726 = !DILocation(line: 133, column: 6, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 133, column: 6)
!5728 = !DILocation(line: 133, column: 6, scope: !5714)
!5729 = !DILocation(line: 134, column: 9, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 134, column: 7)
!5731 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 133, column: 11)
!5732 = !DILocation(line: 134, column: 8, scope: !5730)
!5733 = !DILocation(line: 134, column: 7, scope: !5731)
!5734 = !DILocation(line: 135, column: 10, scope: !5730)
!5735 = !DILocation(line: 135, column: 5, scope: !5730)
!5736 = !DILocation(line: 135, column: 8, scope: !5730)
!5737 = !DILocation(line: 135, column: 4, scope: !5730)
!5738 = !DILocation(line: 136, column: 2, scope: !5731)
!5739 = !DILocation(line: 137, column: 9, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 137, column: 7)
!5741 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 136, column: 9)
!5742 = !DILocation(line: 137, column: 8, scope: !5740)
!5743 = !DILocation(line: 137, column: 7, scope: !5741)
!5744 = !DILocation(line: 138, column: 11, scope: !5740)
!5745 = !DILocation(line: 138, column: 5, scope: !5740)
!5746 = !DILocation(line: 138, column: 9, scope: !5740)
!5747 = !DILocation(line: 138, column: 4, scope: !5740)
!5748 = !DILocation(line: 140, column: 1, scope: !5714)
!5749 = distinct !DISubprogram(name: "testdev_to_usbdev", scope: !3, file: !3, line: 110, type: !5750, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{!170, !4522}
!5752 = !DILocalVariable(name: "test", arg: 1, scope: !5749, file: !3, line: 110, type: !4522)
!5753 = !DILocation(line: 110, column: 65, scope: !5749)
!5754 = !DILocation(line: 112, column: 29, scope: !5749)
!5755 = !DILocation(line: 112, column: 35, scope: !5749)
!5756 = !DILocation(line: 112, column: 9, scope: !5749)
!5757 = !DILocation(line: 112, column: 2, scope: !5749)
!5758 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !80, file: !80, line: 660, type: !5759, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5759 = !DISubroutineType(types: !5760)
!5760 = !{null, !199, !169}
!5761 = !DILocalVariable(name: "dev", arg: 1, scope: !5758, file: !80, line: 660, type: !199)
!5762 = !DILocation(line: 660, column: 51, scope: !5758)
!5763 = !DILocalVariable(name: "data", arg: 2, scope: !5758, file: !80, line: 660, type: !169)
!5764 = !DILocation(line: 660, column: 62, scope: !5758)
!5765 = !DILocation(line: 662, column: 21, scope: !5758)
!5766 = !DILocation(line: 662, column: 2, scope: !5758)
!5767 = !DILocation(line: 662, column: 7, scope: !5758)
!5768 = !DILocation(line: 662, column: 19, scope: !5758)
!5769 = !DILocation(line: 663, column: 1, scope: !5758)
!5770 = distinct !DISubprogram(name: "usb_get_intfdata", scope: !6, file: !6, line: 263, type: !5771, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5771 = !DISubroutineType(types: !5772)
!5772 = !{!169, !3965}
!5773 = !DILocalVariable(name: "intf", arg: 1, scope: !5770, file: !6, line: 263, type: !3965)
!5774 = !DILocation(line: 263, column: 60, scope: !5770)
!5775 = !DILocation(line: 265, column: 26, scope: !5770)
!5776 = !DILocation(line: 265, column: 32, scope: !5770)
!5777 = !DILocation(line: 265, column: 9, scope: !5770)
!5778 = !DILocation(line: 265, column: 2, scope: !5770)
!5779 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !80, file: !80, line: 655, type: !5780, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{!169, !3683}
!5782 = !DILocalVariable(name: "dev", arg: 1, scope: !5779, file: !80, line: 655, type: !3683)
!5783 = !DILocation(line: 655, column: 58, scope: !5779)
!5784 = !DILocation(line: 657, column: 9, scope: !5779)
!5785 = !DILocation(line: 657, column: 14, scope: !5779)
!5786 = !DILocation(line: 657, column: 2, scope: !5779)
!5787 = distinct !DISubprogram(name: "set_altsetting", scope: !3, file: !3, line: 690, type: !5788, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5788 = !DISubroutineType(types: !5789)
!5789 = !{!168, !4522, !168}
!5790 = !DILocalVariable(name: "dev", arg: 1, scope: !5787, file: !3, line: 690, type: !4522)
!5791 = !DILocation(line: 690, column: 47, scope: !5787)
!5792 = !DILocalVariable(name: "alternate", arg: 2, scope: !5787, file: !3, line: 690, type: !168)
!5793 = !DILocation(line: 690, column: 56, scope: !5787)
!5794 = !DILocalVariable(name: "iface", scope: !5787, file: !3, line: 692, type: !3965)
!5795 = !DILocation(line: 692, column: 25, scope: !5787)
!5796 = !DILocation(line: 692, column: 33, scope: !5787)
!5797 = !DILocation(line: 692, column: 38, scope: !5787)
!5798 = !DILocalVariable(name: "udev", scope: !5787, file: !3, line: 693, type: !170)
!5799 = !DILocation(line: 693, column: 22, scope: !5787)
!5800 = !DILocation(line: 695, column: 6, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 695, column: 6)
!5802 = !DILocation(line: 695, column: 16, scope: !5801)
!5803 = !DILocation(line: 695, column: 20, scope: !5801)
!5804 = !DILocation(line: 695, column: 23, scope: !5801)
!5805 = !DILocation(line: 695, column: 33, scope: !5801)
!5806 = !DILocation(line: 695, column: 6, scope: !5787)
!5807 = !DILocation(line: 696, column: 3, scope: !5801)
!5808 = !DILocation(line: 698, column: 29, scope: !5787)
!5809 = !DILocation(line: 698, column: 9, scope: !5787)
!5810 = !DILocation(line: 698, column: 7, scope: !5787)
!5811 = !DILocation(line: 699, column: 27, scope: !5787)
!5812 = !DILocation(line: 700, column: 4, scope: !5787)
!5813 = !DILocation(line: 700, column: 11, scope: !5787)
!5814 = !DILocation(line: 700, column: 25, scope: !5787)
!5815 = !DILocation(line: 700, column: 30, scope: !5787)
!5816 = !DILocation(line: 701, column: 4, scope: !5787)
!5817 = !DILocation(line: 699, column: 9, scope: !5787)
!5818 = !DILocation(line: 699, column: 2, scope: !5787)
!5819 = !DILocation(line: 702, column: 1, scope: !5787)
!5820 = distinct !DISubprogram(name: "usbtest_do_ioctl", scope: !3, file: !3, line: 2180, type: !5821, scopeLine: 2181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{!168, !3965, !5003}
!5823 = !DILocalVariable(name: "intf", arg: 1, scope: !5820, file: !3, line: 2180, type: !3965)
!5824 = !DILocation(line: 2180, column: 40, scope: !5820)
!5825 = !DILocalVariable(name: "param", arg: 2, scope: !5820, file: !3, line: 2180, type: !5003)
!5826 = !DILocation(line: 2180, column: 71, scope: !5820)
!5827 = !DILocalVariable(name: "dev", scope: !5820, file: !3, line: 2182, type: !4522)
!5828 = !DILocation(line: 2182, column: 22, scope: !5820)
!5829 = !DILocation(line: 2182, column: 45, scope: !5820)
!5830 = !DILocation(line: 2182, column: 28, scope: !5820)
!5831 = !DILocalVariable(name: "udev", scope: !5820, file: !3, line: 2183, type: !170)
!5832 = !DILocation(line: 2183, column: 21, scope: !5820)
!5833 = !DILocation(line: 2183, column: 46, scope: !5820)
!5834 = !DILocation(line: 2183, column: 28, scope: !5820)
!5835 = !DILocalVariable(name: "urb", scope: !5820, file: !3, line: 2184, type: !4089)
!5836 = !DILocation(line: 2184, column: 15, scope: !5820)
!5837 = !DILocalVariable(name: "sg", scope: !5820, file: !3, line: 2185, type: !4117)
!5838 = !DILocation(line: 2185, column: 22, scope: !5820)
!5839 = !DILocalVariable(name: "req", scope: !5820, file: !3, line: 2186, type: !4079)
!5840 = !DILocation(line: 2186, column: 24, scope: !5820)
!5841 = !DILocalVariable(name: "i", scope: !5820, file: !3, line: 2187, type: !7)
!5842 = !DILocation(line: 2187, column: 12, scope: !5820)
!5843 = !DILocalVariable(name: "retval", scope: !5820, file: !3, line: 2188, type: !168)
!5844 = !DILocation(line: 2188, column: 6, scope: !5820)
!5845 = !DILocation(line: 2190, column: 6, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 2190, column: 6)
!5847 = !DILocation(line: 2190, column: 13, scope: !5846)
!5848 = !DILocation(line: 2190, column: 24, scope: !5846)
!5849 = !DILocation(line: 2190, column: 6, scope: !5820)
!5850 = !DILocation(line: 2191, column: 3, scope: !5846)
!5851 = !DILocation(line: 2192, column: 6, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 2192, column: 6)
!5853 = !DILocation(line: 2192, column: 13, scope: !5852)
!5854 = !DILocation(line: 2192, column: 19, scope: !5852)
!5855 = !DILocation(line: 2192, column: 6, scope: !5820)
!5856 = !DILocation(line: 2193, column: 3, scope: !5852)
!5857 = !DILocation(line: 2203, column: 10, scope: !5820)
!5858 = !DILocation(line: 2203, column: 17, scope: !5820)
!5859 = !DILocation(line: 2203, column: 2, scope: !5820)
!5860 = !DILocation(line: 2206, column: 3, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 2203, column: 27)
!5862 = !DILocation(line: 2207, column: 10, scope: !5861)
!5863 = !DILocation(line: 2208, column: 3, scope: !5861)
!5864 = !DILocation(line: 2212, column: 7, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2212, column: 7)
!5866 = !DILocation(line: 2212, column: 12, scope: !5865)
!5867 = !DILocation(line: 2212, column: 21, scope: !5865)
!5868 = !DILocation(line: 2212, column: 7, scope: !5861)
!5869 = !DILocation(line: 2213, column: 4, scope: !5865)
!5870 = !DILocation(line: 2214, column: 3, scope: !5861)
!5871 = !DILocation(line: 2217, column: 26, scope: !5861)
!5872 = !DILocation(line: 2217, column: 32, scope: !5861)
!5873 = !DILocation(line: 2217, column: 37, scope: !5861)
!5874 = !DILocation(line: 2217, column: 47, scope: !5861)
!5875 = !DILocation(line: 2217, column: 54, scope: !5861)
!5876 = !DILocation(line: 2217, column: 9, scope: !5861)
!5877 = !DILocation(line: 2217, column: 7, scope: !5861)
!5878 = !DILocation(line: 2218, column: 8, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2218, column: 7)
!5880 = !DILocation(line: 2218, column: 7, scope: !5861)
!5881 = !DILocation(line: 2219, column: 11, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5879, file: !3, line: 2218, column: 13)
!5883 = !DILocation(line: 2220, column: 4, scope: !5882)
!5884 = !DILocation(line: 2223, column: 22, scope: !5861)
!5885 = !DILocation(line: 2223, column: 27, scope: !5861)
!5886 = !DILocation(line: 2223, column: 32, scope: !5861)
!5887 = !DILocation(line: 2223, column: 39, scope: !5861)
!5888 = !DILocation(line: 2223, column: 12, scope: !5861)
!5889 = !DILocation(line: 2223, column: 10, scope: !5861)
!5890 = !DILocation(line: 2224, column: 19, scope: !5861)
!5891 = !DILocation(line: 2224, column: 3, scope: !5861)
!5892 = !DILocation(line: 2225, column: 3, scope: !5861)
!5893 = !DILocation(line: 2227, column: 7, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2227, column: 7)
!5895 = !DILocation(line: 2227, column: 12, scope: !5894)
!5896 = !DILocation(line: 2227, column: 20, scope: !5894)
!5897 = !DILocation(line: 2227, column: 7, scope: !5861)
!5898 = !DILocation(line: 2228, column: 4, scope: !5894)
!5899 = !DILocation(line: 2229, column: 3, scope: !5861)
!5900 = !DILocation(line: 2232, column: 26, scope: !5861)
!5901 = !DILocation(line: 2232, column: 32, scope: !5861)
!5902 = !DILocation(line: 2232, column: 37, scope: !5861)
!5903 = !DILocation(line: 2232, column: 46, scope: !5861)
!5904 = !DILocation(line: 2232, column: 53, scope: !5861)
!5905 = !DILocation(line: 2232, column: 9, scope: !5861)
!5906 = !DILocation(line: 2232, column: 7, scope: !5861)
!5907 = !DILocation(line: 2233, column: 8, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2233, column: 7)
!5909 = !DILocation(line: 2233, column: 7, scope: !5861)
!5910 = !DILocation(line: 2234, column: 11, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 2233, column: 13)
!5912 = !DILocation(line: 2235, column: 4, scope: !5911)
!5913 = !DILocation(line: 2238, column: 22, scope: !5861)
!5914 = !DILocation(line: 2238, column: 27, scope: !5861)
!5915 = !DILocation(line: 2238, column: 32, scope: !5861)
!5916 = !DILocation(line: 2238, column: 39, scope: !5861)
!5917 = !DILocation(line: 2238, column: 12, scope: !5861)
!5918 = !DILocation(line: 2238, column: 10, scope: !5861)
!5919 = !DILocation(line: 2239, column: 19, scope: !5861)
!5920 = !DILocation(line: 2239, column: 3, scope: !5861)
!5921 = !DILocation(line: 2240, column: 3, scope: !5861)
!5922 = !DILocation(line: 2242, column: 7, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2242, column: 7)
!5924 = !DILocation(line: 2242, column: 12, scope: !5923)
!5925 = !DILocation(line: 2242, column: 21, scope: !5923)
!5926 = !DILocation(line: 2242, column: 26, scope: !5923)
!5927 = !DILocation(line: 2242, column: 29, scope: !5923)
!5928 = !DILocation(line: 2242, column: 36, scope: !5923)
!5929 = !DILocation(line: 2242, column: 41, scope: !5923)
!5930 = !DILocation(line: 2242, column: 7, scope: !5861)
!5931 = !DILocation(line: 2243, column: 4, scope: !5923)
!5932 = !DILocation(line: 2244, column: 3, scope: !5861)
!5933 = !DILocation(line: 2247, column: 26, scope: !5861)
!5934 = !DILocation(line: 2247, column: 32, scope: !5861)
!5935 = !DILocation(line: 2247, column: 37, scope: !5861)
!5936 = !DILocation(line: 2247, column: 47, scope: !5861)
!5937 = !DILocation(line: 2247, column: 54, scope: !5861)
!5938 = !DILocation(line: 2247, column: 9, scope: !5861)
!5939 = !DILocation(line: 2247, column: 7, scope: !5861)
!5940 = !DILocation(line: 2248, column: 8, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2248, column: 7)
!5942 = !DILocation(line: 2248, column: 7, scope: !5861)
!5943 = !DILocation(line: 2249, column: 11, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 2248, column: 13)
!5945 = !DILocation(line: 2250, column: 4, scope: !5944)
!5946 = !DILocation(line: 2253, column: 22, scope: !5861)
!5947 = !DILocation(line: 2253, column: 27, scope: !5861)
!5948 = !DILocation(line: 2253, column: 32, scope: !5861)
!5949 = !DILocation(line: 2253, column: 39, scope: !5861)
!5950 = !DILocation(line: 2253, column: 51, scope: !5861)
!5951 = !DILocation(line: 2253, column: 58, scope: !5861)
!5952 = !DILocation(line: 2253, column: 12, scope: !5861)
!5953 = !DILocation(line: 2253, column: 10, scope: !5861)
!5954 = !DILocation(line: 2255, column: 19, scope: !5861)
!5955 = !DILocation(line: 2255, column: 3, scope: !5861)
!5956 = !DILocation(line: 2256, column: 3, scope: !5861)
!5957 = !DILocation(line: 2258, column: 7, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2258, column: 7)
!5959 = !DILocation(line: 2258, column: 12, scope: !5958)
!5960 = !DILocation(line: 2258, column: 20, scope: !5958)
!5961 = !DILocation(line: 2258, column: 25, scope: !5958)
!5962 = !DILocation(line: 2258, column: 28, scope: !5958)
!5963 = !DILocation(line: 2258, column: 35, scope: !5958)
!5964 = !DILocation(line: 2258, column: 40, scope: !5958)
!5965 = !DILocation(line: 2258, column: 7, scope: !5861)
!5966 = !DILocation(line: 2259, column: 4, scope: !5958)
!5967 = !DILocation(line: 2260, column: 3, scope: !5861)
!5968 = !DILocation(line: 2263, column: 26, scope: !5861)
!5969 = !DILocation(line: 2263, column: 32, scope: !5861)
!5970 = !DILocation(line: 2263, column: 37, scope: !5861)
!5971 = !DILocation(line: 2263, column: 46, scope: !5861)
!5972 = !DILocation(line: 2263, column: 53, scope: !5861)
!5973 = !DILocation(line: 2263, column: 9, scope: !5861)
!5974 = !DILocation(line: 2263, column: 7, scope: !5861)
!5975 = !DILocation(line: 2264, column: 8, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2264, column: 7)
!5977 = !DILocation(line: 2264, column: 7, scope: !5861)
!5978 = !DILocation(line: 2265, column: 11, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 2264, column: 13)
!5980 = !DILocation(line: 2266, column: 4, scope: !5979)
!5981 = !DILocation(line: 2269, column: 22, scope: !5861)
!5982 = !DILocation(line: 2269, column: 27, scope: !5861)
!5983 = !DILocation(line: 2269, column: 32, scope: !5861)
!5984 = !DILocation(line: 2269, column: 39, scope: !5861)
!5985 = !DILocation(line: 2269, column: 51, scope: !5861)
!5986 = !DILocation(line: 2269, column: 58, scope: !5861)
!5987 = !DILocation(line: 2269, column: 12, scope: !5861)
!5988 = !DILocation(line: 2269, column: 10, scope: !5861)
!5989 = !DILocation(line: 2271, column: 19, scope: !5861)
!5990 = !DILocation(line: 2271, column: 3, scope: !5861)
!5991 = !DILocation(line: 2272, column: 3, scope: !5861)
!5992 = !DILocation(line: 2276, column: 7, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2276, column: 7)
!5994 = !DILocation(line: 2276, column: 12, scope: !5993)
!5995 = !DILocation(line: 2276, column: 21, scope: !5993)
!5996 = !DILocation(line: 2276, column: 26, scope: !5993)
!5997 = !DILocation(line: 2276, column: 29, scope: !5993)
!5998 = !DILocation(line: 2276, column: 36, scope: !5993)
!5999 = !DILocation(line: 2276, column: 42, scope: !5993)
!6000 = !DILocation(line: 2276, column: 7, scope: !5861)
!6001 = !DILocation(line: 2277, column: 4, scope: !5993)
!6002 = !DILocation(line: 2278, column: 3, scope: !5861)
!6003 = !DILocation(line: 2282, column: 21, scope: !5861)
!6004 = !DILocation(line: 2282, column: 28, scope: !5861)
!6005 = !DILocation(line: 2282, column: 35, scope: !5861)
!6006 = !DILocation(line: 2282, column: 42, scope: !5861)
!6007 = !DILocation(line: 2283, column: 8, scope: !5861)
!6008 = !DILocation(line: 2283, column: 13, scope: !5861)
!6009 = !DILocation(line: 2283, column: 18, scope: !5861)
!6010 = !DILocation(line: 2282, column: 8, scope: !5861)
!6011 = !DILocation(line: 2282, column: 6, scope: !5861)
!6012 = !DILocation(line: 2284, column: 8, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2284, column: 7)
!6014 = !DILocation(line: 2284, column: 7, scope: !5861)
!6015 = !DILocation(line: 2285, column: 11, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 2284, column: 12)
!6017 = !DILocation(line: 2286, column: 4, scope: !6016)
!6018 = !DILocation(line: 2289, column: 27, scope: !5861)
!6019 = !DILocation(line: 2289, column: 32, scope: !5861)
!6020 = !DILocation(line: 2289, column: 39, scope: !5861)
!6021 = !DILocation(line: 2289, column: 51, scope: !5861)
!6022 = !DILocation(line: 2289, column: 56, scope: !5861)
!6023 = !DILocation(line: 2290, column: 11, scope: !5861)
!6024 = !DILocation(line: 2290, column: 15, scope: !5861)
!6025 = !DILocation(line: 2290, column: 22, scope: !5861)
!6026 = !DILocation(line: 2289, column: 12, scope: !5861)
!6027 = !DILocation(line: 2289, column: 10, scope: !5861)
!6028 = !DILocation(line: 2291, column: 15, scope: !5861)
!6029 = !DILocation(line: 2291, column: 19, scope: !5861)
!6030 = !DILocation(line: 2291, column: 26, scope: !5861)
!6031 = !DILocation(line: 2291, column: 3, scope: !5861)
!6032 = !DILocation(line: 2292, column: 3, scope: !5861)
!6033 = !DILocation(line: 2295, column: 7, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2295, column: 7)
!6035 = !DILocation(line: 2295, column: 12, scope: !6034)
!6036 = !DILocation(line: 2295, column: 20, scope: !6034)
!6037 = !DILocation(line: 2295, column: 25, scope: !6034)
!6038 = !DILocation(line: 2295, column: 28, scope: !6034)
!6039 = !DILocation(line: 2295, column: 35, scope: !6034)
!6040 = !DILocation(line: 2295, column: 41, scope: !6034)
!6041 = !DILocation(line: 2295, column: 7, scope: !5861)
!6042 = !DILocation(line: 2296, column: 4, scope: !6034)
!6043 = !DILocation(line: 2297, column: 3, scope: !5861)
!6044 = !DILocation(line: 2301, column: 21, scope: !5861)
!6045 = !DILocation(line: 2301, column: 28, scope: !5861)
!6046 = !DILocation(line: 2301, column: 35, scope: !5861)
!6047 = !DILocation(line: 2301, column: 42, scope: !5861)
!6048 = !DILocation(line: 2302, column: 8, scope: !5861)
!6049 = !DILocation(line: 2302, column: 13, scope: !5861)
!6050 = !DILocation(line: 2302, column: 18, scope: !5861)
!6051 = !DILocation(line: 2301, column: 8, scope: !5861)
!6052 = !DILocation(line: 2301, column: 6, scope: !5861)
!6053 = !DILocation(line: 2303, column: 8, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2303, column: 7)
!6055 = !DILocation(line: 2303, column: 7, scope: !5861)
!6056 = !DILocation(line: 2304, column: 11, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 2303, column: 12)
!6058 = !DILocation(line: 2305, column: 4, scope: !6057)
!6059 = !DILocation(line: 2308, column: 27, scope: !5861)
!6060 = !DILocation(line: 2308, column: 32, scope: !5861)
!6061 = !DILocation(line: 2308, column: 39, scope: !5861)
!6062 = !DILocation(line: 2308, column: 51, scope: !5861)
!6063 = !DILocation(line: 2308, column: 56, scope: !5861)
!6064 = !DILocation(line: 2309, column: 11, scope: !5861)
!6065 = !DILocation(line: 2309, column: 15, scope: !5861)
!6066 = !DILocation(line: 2309, column: 22, scope: !5861)
!6067 = !DILocation(line: 2308, column: 12, scope: !5861)
!6068 = !DILocation(line: 2308, column: 10, scope: !5861)
!6069 = !DILocation(line: 2310, column: 15, scope: !5861)
!6070 = !DILocation(line: 2310, column: 19, scope: !5861)
!6071 = !DILocation(line: 2310, column: 26, scope: !5861)
!6072 = !DILocation(line: 2310, column: 3, scope: !5861)
!6073 = !DILocation(line: 2311, column: 3, scope: !5861)
!6074 = !DILocation(line: 2313, column: 7, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2313, column: 7)
!6076 = !DILocation(line: 2313, column: 12, scope: !6075)
!6077 = !DILocation(line: 2313, column: 21, scope: !6075)
!6078 = !DILocation(line: 2313, column: 26, scope: !6075)
!6079 = !DILocation(line: 2313, column: 29, scope: !6075)
!6080 = !DILocation(line: 2313, column: 36, scope: !6075)
!6081 = !DILocation(line: 2313, column: 42, scope: !6075)
!6082 = !DILocation(line: 2313, column: 47, scope: !6075)
!6083 = !DILocation(line: 2313, column: 50, scope: !6075)
!6084 = !DILocation(line: 2313, column: 57, scope: !6075)
!6085 = !DILocation(line: 2313, column: 62, scope: !6075)
!6086 = !DILocation(line: 2313, column: 7, scope: !5861)
!6087 = !DILocation(line: 2314, column: 4, scope: !6075)
!6088 = !DILocation(line: 2315, column: 3, scope: !5861)
!6089 = !DILocation(line: 2319, column: 21, scope: !5861)
!6090 = !DILocation(line: 2319, column: 28, scope: !5861)
!6091 = !DILocation(line: 2319, column: 35, scope: !5861)
!6092 = !DILocation(line: 2319, column: 42, scope: !5861)
!6093 = !DILocation(line: 2320, column: 5, scope: !5861)
!6094 = !DILocation(line: 2320, column: 12, scope: !5861)
!6095 = !DILocation(line: 2320, column: 18, scope: !5861)
!6096 = !DILocation(line: 2320, column: 23, scope: !5861)
!6097 = !DILocation(line: 2320, column: 28, scope: !5861)
!6098 = !DILocation(line: 2319, column: 8, scope: !5861)
!6099 = !DILocation(line: 2319, column: 6, scope: !5861)
!6100 = !DILocation(line: 2321, column: 8, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2321, column: 7)
!6102 = !DILocation(line: 2321, column: 7, scope: !5861)
!6103 = !DILocation(line: 2322, column: 11, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 2321, column: 12)
!6105 = !DILocation(line: 2323, column: 4, scope: !6104)
!6106 = !DILocation(line: 2326, column: 27, scope: !5861)
!6107 = !DILocation(line: 2326, column: 32, scope: !5861)
!6108 = !DILocation(line: 2326, column: 39, scope: !5861)
!6109 = !DILocation(line: 2326, column: 51, scope: !5861)
!6110 = !DILocation(line: 2326, column: 56, scope: !5861)
!6111 = !DILocation(line: 2327, column: 11, scope: !5861)
!6112 = !DILocation(line: 2327, column: 15, scope: !5861)
!6113 = !DILocation(line: 2327, column: 22, scope: !5861)
!6114 = !DILocation(line: 2326, column: 12, scope: !5861)
!6115 = !DILocation(line: 2326, column: 10, scope: !5861)
!6116 = !DILocation(line: 2328, column: 15, scope: !5861)
!6117 = !DILocation(line: 2328, column: 19, scope: !5861)
!6118 = !DILocation(line: 2328, column: 26, scope: !5861)
!6119 = !DILocation(line: 2328, column: 3, scope: !5861)
!6120 = !DILocation(line: 2329, column: 3, scope: !5861)
!6121 = !DILocation(line: 2331, column: 7, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2331, column: 7)
!6123 = !DILocation(line: 2331, column: 12, scope: !6122)
!6124 = !DILocation(line: 2331, column: 20, scope: !6122)
!6125 = !DILocation(line: 2331, column: 25, scope: !6122)
!6126 = !DILocation(line: 2331, column: 28, scope: !6122)
!6127 = !DILocation(line: 2331, column: 35, scope: !6122)
!6128 = !DILocation(line: 2331, column: 41, scope: !6122)
!6129 = !DILocation(line: 2331, column: 46, scope: !6122)
!6130 = !DILocation(line: 2331, column: 49, scope: !6122)
!6131 = !DILocation(line: 2331, column: 56, scope: !6122)
!6132 = !DILocation(line: 2331, column: 61, scope: !6122)
!6133 = !DILocation(line: 2331, column: 7, scope: !5861)
!6134 = !DILocation(line: 2332, column: 4, scope: !6122)
!6135 = !DILocation(line: 2333, column: 3, scope: !5861)
!6136 = !DILocation(line: 2337, column: 21, scope: !5861)
!6137 = !DILocation(line: 2337, column: 28, scope: !5861)
!6138 = !DILocation(line: 2337, column: 35, scope: !5861)
!6139 = !DILocation(line: 2337, column: 42, scope: !5861)
!6140 = !DILocation(line: 2338, column: 5, scope: !5861)
!6141 = !DILocation(line: 2338, column: 12, scope: !5861)
!6142 = !DILocation(line: 2338, column: 18, scope: !5861)
!6143 = !DILocation(line: 2338, column: 23, scope: !5861)
!6144 = !DILocation(line: 2338, column: 28, scope: !5861)
!6145 = !DILocation(line: 2337, column: 8, scope: !5861)
!6146 = !DILocation(line: 2337, column: 6, scope: !5861)
!6147 = !DILocation(line: 2339, column: 8, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2339, column: 7)
!6149 = !DILocation(line: 2339, column: 7, scope: !5861)
!6150 = !DILocation(line: 2340, column: 11, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 2339, column: 12)
!6152 = !DILocation(line: 2341, column: 4, scope: !6151)
!6153 = !DILocation(line: 2344, column: 27, scope: !5861)
!6154 = !DILocation(line: 2344, column: 32, scope: !5861)
!6155 = !DILocation(line: 2344, column: 39, scope: !5861)
!6156 = !DILocation(line: 2344, column: 51, scope: !5861)
!6157 = !DILocation(line: 2344, column: 56, scope: !5861)
!6158 = !DILocation(line: 2345, column: 11, scope: !5861)
!6159 = !DILocation(line: 2345, column: 15, scope: !5861)
!6160 = !DILocation(line: 2345, column: 22, scope: !5861)
!6161 = !DILocation(line: 2344, column: 12, scope: !5861)
!6162 = !DILocation(line: 2344, column: 10, scope: !5861)
!6163 = !DILocation(line: 2346, column: 15, scope: !5861)
!6164 = !DILocation(line: 2346, column: 19, scope: !5861)
!6165 = !DILocation(line: 2346, column: 26, scope: !5861)
!6166 = !DILocation(line: 2346, column: 3, scope: !5861)
!6167 = !DILocation(line: 2347, column: 3, scope: !5861)
!6168 = !DILocation(line: 2351, column: 10, scope: !5861)
!6169 = !DILocation(line: 2352, column: 3, scope: !5861)
!6170 = !DILocation(line: 2355, column: 12, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2355, column: 3)
!6172 = !DILocation(line: 2355, column: 19, scope: !6171)
!6173 = !DILocation(line: 2355, column: 10, scope: !6171)
!6174 = !DILocation(line: 2355, column: 8, scope: !6171)
!6175 = !DILocation(line: 2355, column: 31, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 2355, column: 3)
!6177 = !DILocation(line: 2355, column: 38, scope: !6176)
!6178 = !DILocation(line: 2355, column: 43, scope: !6176)
!6179 = !DILocation(line: 2355, column: 47, scope: !6176)
!6180 = !DILocation(line: 0, scope: !6176)
!6181 = !DILocation(line: 2355, column: 3, scope: !6171)
!6182 = !DILocation(line: 2356, column: 28, scope: !6176)
!6183 = !DILocation(line: 2356, column: 13, scope: !6176)
!6184 = !DILocation(line: 2356, column: 11, scope: !6176)
!6185 = !DILocation(line: 2355, column: 3, scope: !6176)
!6186 = distinct !{!6186, !6181, !6187}
!6187 = !DILocation(line: 2356, column: 31, scope: !6171)
!6188 = !DILocation(line: 2357, column: 7, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2357, column: 7)
!6190 = !DILocation(line: 2357, column: 7, scope: !5861)
!6191 = !DILocation(line: 2358, column: 4, scope: !6189)
!6192 = !DILocation(line: 2360, column: 3, scope: !5861)
!6193 = !DILocation(line: 2364, column: 10, scope: !5861)
!6194 = !DILocation(line: 2365, column: 3, scope: !5861)
!6195 = !DILocation(line: 2369, column: 28, scope: !5861)
!6196 = !DILocation(line: 2369, column: 33, scope: !5861)
!6197 = !DILocation(line: 2369, column: 12, scope: !5861)
!6198 = !DILocation(line: 2369, column: 10, scope: !5861)
!6199 = !DILocation(line: 2370, column: 3, scope: !5861)
!6200 = !DILocation(line: 2374, column: 7, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2374, column: 7)
!6202 = !DILocation(line: 2374, column: 12, scope: !6201)
!6203 = !DILocation(line: 2374, column: 20, scope: !6201)
!6204 = !DILocation(line: 2374, column: 25, scope: !6201)
!6205 = !DILocation(line: 2374, column: 29, scope: !6201)
!6206 = !DILocation(line: 2374, column: 36, scope: !6201)
!6207 = !DILocation(line: 2374, column: 7, scope: !5861)
!6208 = !DILocation(line: 2375, column: 4, scope: !6201)
!6209 = !DILocation(line: 2376, column: 10, scope: !5861)
!6210 = !DILocation(line: 2377, column: 3, scope: !5861)
!6211 = !DILocation(line: 2379, column: 12, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2379, column: 3)
!6213 = !DILocation(line: 2379, column: 19, scope: !6212)
!6214 = !DILocation(line: 2379, column: 10, scope: !6212)
!6215 = !DILocation(line: 2379, column: 8, scope: !6212)
!6216 = !DILocation(line: 2379, column: 31, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 2379, column: 3)
!6218 = !DILocation(line: 2379, column: 38, scope: !6217)
!6219 = !DILocation(line: 2379, column: 43, scope: !6217)
!6220 = !DILocation(line: 2379, column: 47, scope: !6217)
!6221 = !DILocation(line: 0, scope: !6217)
!6222 = !DILocation(line: 2379, column: 3, scope: !6212)
!6223 = !DILocation(line: 2380, column: 27, scope: !6217)
!6224 = !DILocation(line: 2380, column: 32, scope: !6217)
!6225 = !DILocation(line: 2380, column: 37, scope: !6217)
!6226 = !DILocation(line: 2381, column: 7, scope: !6217)
!6227 = !DILocation(line: 2381, column: 14, scope: !6217)
!6228 = !DILocation(line: 2380, column: 13, scope: !6217)
!6229 = !DILocation(line: 2380, column: 11, scope: !6217)
!6230 = !DILocation(line: 2379, column: 3, scope: !6217)
!6231 = distinct !{!6231, !6222, !6232}
!6232 = !DILocation(line: 2381, column: 20, scope: !6212)
!6233 = !DILocation(line: 2382, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2382, column: 7)
!6235 = !DILocation(line: 2382, column: 7, scope: !5861)
!6236 = !DILocation(line: 2383, column: 4, scope: !6234)
!6237 = !DILocation(line: 2385, column: 3, scope: !5861)
!6238 = !DILocation(line: 2387, column: 7, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2387, column: 7)
!6240 = !DILocation(line: 2387, column: 12, scope: !6239)
!6241 = !DILocation(line: 2387, column: 21, scope: !6239)
!6242 = !DILocation(line: 2387, column: 26, scope: !6239)
!6243 = !DILocation(line: 2387, column: 30, scope: !6239)
!6244 = !DILocation(line: 2387, column: 37, scope: !6239)
!6245 = !DILocation(line: 2387, column: 7, scope: !5861)
!6246 = !DILocation(line: 2388, column: 4, scope: !6239)
!6247 = !DILocation(line: 2389, column: 10, scope: !5861)
!6248 = !DILocation(line: 2390, column: 3, scope: !5861)
!6249 = !DILocation(line: 2392, column: 12, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2392, column: 3)
!6251 = !DILocation(line: 2392, column: 19, scope: !6250)
!6252 = !DILocation(line: 2392, column: 10, scope: !6250)
!6253 = !DILocation(line: 2392, column: 8, scope: !6250)
!6254 = !DILocation(line: 2392, column: 31, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 2392, column: 3)
!6256 = !DILocation(line: 2392, column: 38, scope: !6255)
!6257 = !DILocation(line: 2392, column: 43, scope: !6255)
!6258 = !DILocation(line: 2392, column: 47, scope: !6255)
!6259 = !DILocation(line: 0, scope: !6255)
!6260 = !DILocation(line: 2392, column: 3, scope: !6250)
!6261 = !DILocation(line: 2393, column: 27, scope: !6255)
!6262 = !DILocation(line: 2393, column: 32, scope: !6255)
!6263 = !DILocation(line: 2393, column: 37, scope: !6255)
!6264 = !DILocation(line: 2394, column: 7, scope: !6255)
!6265 = !DILocation(line: 2394, column: 14, scope: !6255)
!6266 = !DILocation(line: 2393, column: 13, scope: !6255)
!6267 = !DILocation(line: 2393, column: 11, scope: !6255)
!6268 = !DILocation(line: 2392, column: 3, scope: !6255)
!6269 = distinct !{!6269, !6260, !6270}
!6270 = !DILocation(line: 2394, column: 20, scope: !6250)
!6271 = !DILocation(line: 2395, column: 7, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2395, column: 7)
!6273 = !DILocation(line: 2395, column: 7, scope: !5861)
!6274 = !DILocation(line: 2396, column: 4, scope: !6272)
!6275 = !DILocation(line: 2398, column: 3, scope: !5861)
!6276 = !DILocation(line: 2402, column: 7, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2402, column: 7)
!6278 = !DILocation(line: 2402, column: 12, scope: !6277)
!6279 = !DILocation(line: 2402, column: 21, scope: !6277)
!6280 = !DILocation(line: 2402, column: 26, scope: !6277)
!6281 = !DILocation(line: 2402, column: 29, scope: !6277)
!6282 = !DILocation(line: 2402, column: 34, scope: !6277)
!6283 = !DILocation(line: 2402, column: 42, scope: !6277)
!6284 = !DILocation(line: 2402, column: 7, scope: !5861)
!6285 = !DILocation(line: 2403, column: 4, scope: !6277)
!6286 = !DILocation(line: 2404, column: 10, scope: !5861)
!6287 = !DILocation(line: 2405, column: 3, scope: !5861)
!6288 = !DILocation(line: 2407, column: 12, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2407, column: 3)
!6290 = !DILocation(line: 2407, column: 19, scope: !6289)
!6291 = !DILocation(line: 2407, column: 10, scope: !6289)
!6292 = !DILocation(line: 2407, column: 8, scope: !6289)
!6293 = !DILocation(line: 2407, column: 31, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 2407, column: 3)
!6295 = !DILocation(line: 2407, column: 38, scope: !6294)
!6296 = !DILocation(line: 2407, column: 43, scope: !6294)
!6297 = !DILocation(line: 2407, column: 47, scope: !6294)
!6298 = !DILocation(line: 0, scope: !6294)
!6299 = !DILocation(line: 2407, column: 3, scope: !6289)
!6300 = !DILocation(line: 2408, column: 25, scope: !6294)
!6301 = !DILocation(line: 2408, column: 13, scope: !6294)
!6302 = !DILocation(line: 2408, column: 11, scope: !6294)
!6303 = !DILocation(line: 2407, column: 3, scope: !6294)
!6304 = distinct !{!6304, !6299, !6305}
!6305 = !DILocation(line: 2408, column: 28, scope: !6289)
!6306 = !DILocation(line: 2410, column: 7, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2410, column: 7)
!6308 = !DILocation(line: 2410, column: 7, scope: !5861)
!6309 = !DILocation(line: 2411, column: 4, scope: !6307)
!6310 = !DILocation(line: 2412, column: 3, scope: !5861)
!6311 = !DILocation(line: 2416, column: 8, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2416, column: 7)
!6313 = !DILocation(line: 2416, column: 13, scope: !6312)
!6314 = !DILocation(line: 2416, column: 19, scope: !6312)
!6315 = !DILocation(line: 2416, column: 7, scope: !5861)
!6316 = !DILocation(line: 2417, column: 4, scope: !6312)
!6317 = !DILocation(line: 2418, column: 3, scope: !5861)
!6318 = !DILocation(line: 2422, column: 21, scope: !5861)
!6319 = !DILocation(line: 2422, column: 26, scope: !5861)
!6320 = !DILocation(line: 2422, column: 33, scope: !5861)
!6321 = !DILocation(line: 2423, column: 5, scope: !5861)
!6322 = !DILocation(line: 2423, column: 12, scope: !5861)
!6323 = !DILocation(line: 2423, column: 20, scope: !5861)
!6324 = !DILocation(line: 2423, column: 27, scope: !5861)
!6325 = !DILocation(line: 2422, column: 12, scope: !5861)
!6326 = !DILocation(line: 2422, column: 10, scope: !5861)
!6327 = !DILocation(line: 2424, column: 3, scope: !5861)
!6328 = !DILocation(line: 2428, column: 7, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2428, column: 7)
!6330 = !DILocation(line: 2428, column: 12, scope: !6329)
!6331 = !DILocation(line: 2428, column: 25, scope: !6329)
!6332 = !DILocation(line: 2428, column: 30, scope: !6329)
!6333 = !DILocation(line: 2428, column: 33, scope: !6329)
!6334 = !DILocation(line: 2428, column: 40, scope: !6329)
!6335 = !DILocation(line: 2428, column: 46, scope: !6329)
!6336 = !DILocation(line: 2428, column: 7, scope: !5861)
!6337 = !DILocation(line: 2429, column: 4, scope: !6329)
!6338 = !DILocation(line: 2430, column: 3, scope: !5861)
!6339 = !DILocation(line: 2435, column: 23, scope: !5861)
!6340 = !DILocation(line: 2435, column: 28, scope: !5861)
!6341 = !DILocation(line: 2436, column: 5, scope: !5861)
!6342 = !DILocation(line: 2436, column: 10, scope: !5861)
!6343 = !DILocation(line: 2436, column: 24, scope: !5861)
!6344 = !DILocation(line: 2436, column: 29, scope: !5861)
!6345 = !DILocation(line: 2435, column: 12, scope: !5861)
!6346 = !DILocation(line: 2435, column: 10, scope: !5861)
!6347 = !DILocation(line: 2437, column: 3, scope: !5861)
!6348 = !DILocation(line: 2441, column: 7, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2441, column: 7)
!6350 = !DILocation(line: 2441, column: 12, scope: !6349)
!6351 = !DILocation(line: 2441, column: 24, scope: !6349)
!6352 = !DILocation(line: 2441, column: 29, scope: !6349)
!6353 = !DILocation(line: 2441, column: 32, scope: !6349)
!6354 = !DILocation(line: 2441, column: 39, scope: !6349)
!6355 = !DILocation(line: 2441, column: 45, scope: !6349)
!6356 = !DILocation(line: 2441, column: 7, scope: !5861)
!6357 = !DILocation(line: 2442, column: 4, scope: !6349)
!6358 = !DILocation(line: 2443, column: 3, scope: !5861)
!6359 = !DILocation(line: 2448, column: 23, scope: !5861)
!6360 = !DILocation(line: 2448, column: 28, scope: !5861)
!6361 = !DILocation(line: 2449, column: 5, scope: !5861)
!6362 = !DILocation(line: 2449, column: 10, scope: !5861)
!6363 = !DILocation(line: 2449, column: 23, scope: !5861)
!6364 = !DILocation(line: 2449, column: 28, scope: !5861)
!6365 = !DILocation(line: 2448, column: 12, scope: !5861)
!6366 = !DILocation(line: 2448, column: 10, scope: !5861)
!6367 = !DILocation(line: 2450, column: 3, scope: !5861)
!6368 = !DILocation(line: 2456, column: 7, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2456, column: 7)
!6370 = !DILocation(line: 2456, column: 12, scope: !6369)
!6371 = !DILocation(line: 2456, column: 21, scope: !6369)
!6372 = !DILocation(line: 2456, column: 7, scope: !5861)
!6373 = !DILocation(line: 2457, column: 4, scope: !6369)
!6374 = !DILocation(line: 2458, column: 3, scope: !5861)
!6375 = !DILocation(line: 2463, column: 5, scope: !5861)
!6376 = !DILocation(line: 2463, column: 10, scope: !5861)
!6377 = !DILocation(line: 2463, column: 15, scope: !5861)
!6378 = !DILocation(line: 2464, column: 5, scope: !5861)
!6379 = !DILocation(line: 2464, column: 12, scope: !5861)
!6380 = !DILocation(line: 2464, column: 20, scope: !5861)
!6381 = !DILocation(line: 2464, column: 27, scope: !5861)
!6382 = !DILocation(line: 2462, column: 12, scope: !5861)
!6383 = !DILocation(line: 2462, column: 10, scope: !5861)
!6384 = !DILocation(line: 2466, column: 3, scope: !5861)
!6385 = !DILocation(line: 2469, column: 7, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2469, column: 7)
!6387 = !DILocation(line: 2469, column: 12, scope: !6386)
!6388 = !DILocation(line: 2469, column: 20, scope: !6386)
!6389 = !DILocation(line: 2469, column: 7, scope: !5861)
!6390 = !DILocation(line: 2470, column: 4, scope: !6386)
!6391 = !DILocation(line: 2471, column: 3, scope: !5861)
!6392 = !DILocation(line: 2476, column: 5, scope: !5861)
!6393 = !DILocation(line: 2476, column: 10, scope: !5861)
!6394 = !DILocation(line: 2476, column: 15, scope: !5861)
!6395 = !DILocation(line: 2477, column: 5, scope: !5861)
!6396 = !DILocation(line: 2477, column: 12, scope: !5861)
!6397 = !DILocation(line: 2477, column: 20, scope: !5861)
!6398 = !DILocation(line: 2477, column: 27, scope: !5861)
!6399 = !DILocation(line: 2475, column: 12, scope: !5861)
!6400 = !DILocation(line: 2475, column: 10, scope: !5861)
!6401 = !DILocation(line: 2479, column: 3, scope: !5861)
!6402 = !DILocation(line: 2483, column: 7, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2483, column: 7)
!6404 = !DILocation(line: 2483, column: 12, scope: !6403)
!6405 = !DILocation(line: 2483, column: 21, scope: !6403)
!6406 = !DILocation(line: 2483, column: 7, scope: !5861)
!6407 = !DILocation(line: 2484, column: 4, scope: !6403)
!6408 = !DILocation(line: 2485, column: 3, scope: !5861)
!6409 = !DILocation(line: 2490, column: 5, scope: !5861)
!6410 = !DILocation(line: 2490, column: 10, scope: !5861)
!6411 = !DILocation(line: 2490, column: 15, scope: !5861)
!6412 = !DILocation(line: 2491, column: 5, scope: !5861)
!6413 = !DILocation(line: 2491, column: 12, scope: !5861)
!6414 = !DILocation(line: 2491, column: 20, scope: !5861)
!6415 = !DILocation(line: 2491, column: 27, scope: !5861)
!6416 = !DILocation(line: 2489, column: 12, scope: !5861)
!6417 = !DILocation(line: 2489, column: 10, scope: !5861)
!6418 = !DILocation(line: 2493, column: 3, scope: !5861)
!6419 = !DILocation(line: 2496, column: 7, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2496, column: 7)
!6421 = !DILocation(line: 2496, column: 12, scope: !6420)
!6422 = !DILocation(line: 2496, column: 20, scope: !6420)
!6423 = !DILocation(line: 2496, column: 7, scope: !5861)
!6424 = !DILocation(line: 2497, column: 4, scope: !6420)
!6425 = !DILocation(line: 2498, column: 3, scope: !5861)
!6426 = !DILocation(line: 2503, column: 5, scope: !5861)
!6427 = !DILocation(line: 2503, column: 10, scope: !5861)
!6428 = !DILocation(line: 2503, column: 15, scope: !5861)
!6429 = !DILocation(line: 2504, column: 5, scope: !5861)
!6430 = !DILocation(line: 2504, column: 12, scope: !5861)
!6431 = !DILocation(line: 2504, column: 20, scope: !5861)
!6432 = !DILocation(line: 2504, column: 27, scope: !5861)
!6433 = !DILocation(line: 2502, column: 12, scope: !5861)
!6434 = !DILocation(line: 2502, column: 10, scope: !5861)
!6435 = !DILocation(line: 2506, column: 3, scope: !5861)
!6436 = !DILocation(line: 2510, column: 8, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2510, column: 7)
!6438 = !DILocation(line: 2510, column: 13, scope: !6437)
!6439 = !DILocation(line: 2510, column: 19, scope: !6437)
!6440 = !DILocation(line: 2510, column: 7, scope: !5861)
!6441 = !DILocation(line: 2511, column: 4, scope: !6437)
!6442 = !DILocation(line: 2512, column: 3, scope: !5861)
!6443 = !DILocation(line: 2517, column: 21, scope: !5861)
!6444 = !DILocation(line: 2517, column: 26, scope: !5861)
!6445 = !DILocation(line: 2517, column: 33, scope: !5861)
!6446 = !DILocation(line: 2518, column: 5, scope: !5861)
!6447 = !DILocation(line: 2518, column: 12, scope: !5861)
!6448 = !DILocation(line: 2518, column: 20, scope: !5861)
!6449 = !DILocation(line: 2518, column: 27, scope: !5861)
!6450 = !DILocation(line: 2517, column: 12, scope: !5861)
!6451 = !DILocation(line: 2517, column: 10, scope: !5861)
!6452 = !DILocation(line: 2519, column: 3, scope: !5861)
!6453 = !DILocation(line: 2523, column: 7, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2523, column: 7)
!6455 = !DILocation(line: 2523, column: 12, scope: !6454)
!6456 = !DILocation(line: 2523, column: 25, scope: !6454)
!6457 = !DILocation(line: 2523, column: 30, scope: !6454)
!6458 = !DILocation(line: 2523, column: 33, scope: !6454)
!6459 = !DILocation(line: 2523, column: 40, scope: !6454)
!6460 = !DILocation(line: 2523, column: 46, scope: !6454)
!6461 = !DILocation(line: 2523, column: 7, scope: !5861)
!6462 = !DILocation(line: 2524, column: 4, scope: !6454)
!6463 = !DILocation(line: 2525, column: 3, scope: !5861)
!6464 = !DILocation(line: 2529, column: 23, scope: !5861)
!6465 = !DILocation(line: 2529, column: 28, scope: !5861)
!6466 = !DILocation(line: 2530, column: 5, scope: !5861)
!6467 = !DILocation(line: 2530, column: 10, scope: !5861)
!6468 = !DILocation(line: 2530, column: 24, scope: !5861)
!6469 = !DILocation(line: 2530, column: 29, scope: !5861)
!6470 = !DILocation(line: 2529, column: 12, scope: !5861)
!6471 = !DILocation(line: 2529, column: 10, scope: !5861)
!6472 = !DILocation(line: 2531, column: 3, scope: !5861)
!6473 = !DILocation(line: 2534, column: 7, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2534, column: 7)
!6475 = !DILocation(line: 2534, column: 12, scope: !6474)
!6476 = !DILocation(line: 2534, column: 24, scope: !6474)
!6477 = !DILocation(line: 2534, column: 29, scope: !6474)
!6478 = !DILocation(line: 2534, column: 32, scope: !6474)
!6479 = !DILocation(line: 2534, column: 39, scope: !6474)
!6480 = !DILocation(line: 2534, column: 45, scope: !6474)
!6481 = !DILocation(line: 2534, column: 7, scope: !5861)
!6482 = !DILocation(line: 2535, column: 4, scope: !6474)
!6483 = !DILocation(line: 2536, column: 3, scope: !5861)
!6484 = !DILocation(line: 2540, column: 23, scope: !5861)
!6485 = !DILocation(line: 2540, column: 28, scope: !5861)
!6486 = !DILocation(line: 2541, column: 5, scope: !5861)
!6487 = !DILocation(line: 2541, column: 10, scope: !5861)
!6488 = !DILocation(line: 2541, column: 23, scope: !5861)
!6489 = !DILocation(line: 2541, column: 28, scope: !5861)
!6490 = !DILocation(line: 2540, column: 12, scope: !5861)
!6491 = !DILocation(line: 2540, column: 10, scope: !5861)
!6492 = !DILocation(line: 2542, column: 3, scope: !5861)
!6493 = !DILocation(line: 2546, column: 7, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2546, column: 7)
!6495 = !DILocation(line: 2546, column: 12, scope: !6494)
!6496 = !DILocation(line: 2546, column: 21, scope: !6494)
!6497 = !DILocation(line: 2546, column: 26, scope: !6494)
!6498 = !DILocation(line: 2546, column: 30, scope: !6494)
!6499 = !DILocation(line: 2546, column: 37, scope: !6494)
!6500 = !DILocation(line: 2546, column: 44, scope: !6494)
!6501 = !DILocation(line: 2546, column: 47, scope: !6494)
!6502 = !DILocation(line: 2546, column: 54, scope: !6494)
!6503 = !DILocation(line: 2546, column: 60, scope: !6494)
!6504 = !DILocation(line: 2546, column: 7, scope: !5861)
!6505 = !DILocation(line: 2547, column: 4, scope: !6494)
!6506 = !DILocation(line: 2548, column: 10, scope: !5861)
!6507 = !DILocation(line: 2549, column: 3, scope: !5861)
!6508 = !DILocation(line: 2552, column: 12, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2552, column: 3)
!6510 = !DILocation(line: 2552, column: 19, scope: !6509)
!6511 = !DILocation(line: 2552, column: 10, scope: !6509)
!6512 = !DILocation(line: 2552, column: 8, scope: !6509)
!6513 = !DILocation(line: 2552, column: 31, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 2552, column: 3)
!6515 = !DILocation(line: 2552, column: 38, scope: !6514)
!6516 = !DILocation(line: 2552, column: 43, scope: !6514)
!6517 = !DILocation(line: 2552, column: 46, scope: !6514)
!6518 = !DILocation(line: 2552, column: 48, scope: !6514)
!6519 = !DILocation(line: 0, scope: !6514)
!6520 = !DILocation(line: 2552, column: 3, scope: !6509)
!6521 = !DILocation(line: 2553, column: 27, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 2552, column: 58)
!6523 = !DILocation(line: 2553, column: 32, scope: !6522)
!6524 = !DILocation(line: 2553, column: 37, scope: !6522)
!6525 = !DILocation(line: 2554, column: 7, scope: !6522)
!6526 = !DILocation(line: 2554, column: 14, scope: !6522)
!6527 = !DILocation(line: 2554, column: 21, scope: !6522)
!6528 = !DILocation(line: 2554, column: 28, scope: !6522)
!6529 = !DILocation(line: 2553, column: 13, scope: !6522)
!6530 = !DILocation(line: 2553, column: 11, scope: !6522)
!6531 = !DILocation(line: 2555, column: 8, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 2555, column: 8)
!6533 = !DILocation(line: 2555, column: 8, scope: !6522)
!6534 = !DILocation(line: 2556, column: 5, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 2555, column: 16)
!6536 = !DILocation(line: 2559, column: 5, scope: !6535)
!6537 = !DILocation(line: 2561, column: 3, scope: !6522)
!6538 = !DILocation(line: 2552, column: 53, scope: !6514)
!6539 = !DILocation(line: 2552, column: 3, scope: !6514)
!6540 = distinct !{!6540, !6520, !6541}
!6541 = !DILocation(line: 2561, column: 3, scope: !6509)
!6542 = !DILocation(line: 2562, column: 3, scope: !5861)
!6543 = !DILocation(line: 2566, column: 7, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2566, column: 7)
!6545 = !DILocation(line: 2566, column: 12, scope: !6544)
!6546 = !DILocation(line: 2566, column: 25, scope: !6544)
!6547 = !DILocation(line: 2566, column: 7, scope: !5861)
!6548 = !DILocation(line: 2567, column: 4, scope: !6544)
!6549 = !DILocation(line: 2568, column: 3, scope: !5861)
!6550 = !DILocation(line: 2571, column: 26, scope: !5861)
!6551 = !DILocation(line: 2571, column: 32, scope: !5861)
!6552 = !DILocation(line: 2571, column: 37, scope: !5861)
!6553 = !DILocation(line: 2571, column: 51, scope: !5861)
!6554 = !DILocation(line: 2571, column: 58, scope: !5861)
!6555 = !DILocation(line: 2572, column: 5, scope: !5861)
!6556 = !DILocation(line: 2572, column: 10, scope: !5861)
!6557 = !DILocation(line: 2572, column: 19, scope: !5861)
!6558 = !DILocation(line: 2571, column: 9, scope: !5861)
!6559 = !DILocation(line: 2571, column: 7, scope: !5861)
!6560 = !DILocation(line: 2573, column: 8, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2573, column: 7)
!6562 = !DILocation(line: 2573, column: 7, scope: !5861)
!6563 = !DILocation(line: 2574, column: 11, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 2573, column: 13)
!6565 = !DILocation(line: 2575, column: 4, scope: !6564)
!6566 = !DILocation(line: 2578, column: 22, scope: !5861)
!6567 = !DILocation(line: 2578, column: 27, scope: !5861)
!6568 = !DILocation(line: 2578, column: 32, scope: !5861)
!6569 = !DILocation(line: 2578, column: 39, scope: !5861)
!6570 = !DILocation(line: 2578, column: 12, scope: !5861)
!6571 = !DILocation(line: 2578, column: 10, scope: !5861)
!6572 = !DILocation(line: 2579, column: 19, scope: !5861)
!6573 = !DILocation(line: 2579, column: 3, scope: !5861)
!6574 = !DILocation(line: 2580, column: 3, scope: !5861)
!6575 = !DILocation(line: 2582, column: 7, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2582, column: 7)
!6577 = !DILocation(line: 2582, column: 12, scope: !6576)
!6578 = !DILocation(line: 2582, column: 24, scope: !6576)
!6579 = !DILocation(line: 2582, column: 7, scope: !5861)
!6580 = !DILocation(line: 2583, column: 4, scope: !6576)
!6581 = !DILocation(line: 2584, column: 3, scope: !5861)
!6582 = !DILocation(line: 2587, column: 26, scope: !5861)
!6583 = !DILocation(line: 2587, column: 32, scope: !5861)
!6584 = !DILocation(line: 2587, column: 37, scope: !5861)
!6585 = !DILocation(line: 2587, column: 50, scope: !5861)
!6586 = !DILocation(line: 2587, column: 57, scope: !5861)
!6587 = !DILocation(line: 2588, column: 5, scope: !5861)
!6588 = !DILocation(line: 2588, column: 10, scope: !5861)
!6589 = !DILocation(line: 2588, column: 18, scope: !5861)
!6590 = !DILocation(line: 2587, column: 9, scope: !5861)
!6591 = !DILocation(line: 2587, column: 7, scope: !5861)
!6592 = !DILocation(line: 2589, column: 8, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2589, column: 7)
!6594 = !DILocation(line: 2589, column: 7, scope: !5861)
!6595 = !DILocation(line: 2590, column: 11, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2589, column: 13)
!6597 = !DILocation(line: 2591, column: 4, scope: !6596)
!6598 = !DILocation(line: 2594, column: 22, scope: !5861)
!6599 = !DILocation(line: 2594, column: 27, scope: !5861)
!6600 = !DILocation(line: 2594, column: 32, scope: !5861)
!6601 = !DILocation(line: 2594, column: 39, scope: !5861)
!6602 = !DILocation(line: 2594, column: 12, scope: !5861)
!6603 = !DILocation(line: 2594, column: 10, scope: !5861)
!6604 = !DILocation(line: 2595, column: 19, scope: !5861)
!6605 = !DILocation(line: 2595, column: 3, scope: !5861)
!6606 = !DILocation(line: 2596, column: 3, scope: !5861)
!6607 = !DILocation(line: 2599, column: 7, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2599, column: 7)
!6609 = !DILocation(line: 2599, column: 12, scope: !6608)
!6610 = !DILocation(line: 2599, column: 21, scope: !6608)
!6611 = !DILocation(line: 2599, column: 26, scope: !6608)
!6612 = !DILocation(line: 2599, column: 29, scope: !6608)
!6613 = !DILocation(line: 2599, column: 36, scope: !6608)
!6614 = !DILocation(line: 2599, column: 42, scope: !6608)
!6615 = !DILocation(line: 2599, column: 47, scope: !6608)
!6616 = !DILocation(line: 2599, column: 50, scope: !6608)
!6617 = !DILocation(line: 2599, column: 58, scope: !6608)
!6618 = !DILocation(line: 2599, column: 7, scope: !5861)
!6619 = !DILocation(line: 2600, column: 4, scope: !6608)
!6620 = !DILocation(line: 2601, column: 3, scope: !5861)
!6621 = !DILocation(line: 2604, column: 23, scope: !5861)
!6622 = !DILocation(line: 2604, column: 28, scope: !5861)
!6623 = !DILocation(line: 2605, column: 5, scope: !5861)
!6624 = !DILocation(line: 2605, column: 10, scope: !5861)
!6625 = !DILocation(line: 2604, column: 12, scope: !5861)
!6626 = !DILocation(line: 2604, column: 10, scope: !5861)
!6627 = !DILocation(line: 2606, column: 3, scope: !5861)
!6628 = !DILocation(line: 2608, column: 7, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2608, column: 7)
!6630 = !DILocation(line: 2608, column: 12, scope: !6629)
!6631 = !DILocation(line: 2608, column: 20, scope: !6629)
!6632 = !DILocation(line: 2608, column: 25, scope: !6629)
!6633 = !DILocation(line: 2608, column: 28, scope: !6629)
!6634 = !DILocation(line: 2608, column: 35, scope: !6629)
!6635 = !DILocation(line: 2608, column: 41, scope: !6629)
!6636 = !DILocation(line: 2608, column: 46, scope: !6629)
!6637 = !DILocation(line: 2608, column: 49, scope: !6629)
!6638 = !DILocation(line: 2608, column: 57, scope: !6629)
!6639 = !DILocation(line: 2608, column: 7, scope: !5861)
!6640 = !DILocation(line: 2609, column: 4, scope: !6629)
!6641 = !DILocation(line: 2610, column: 3, scope: !5861)
!6642 = !DILocation(line: 2613, column: 23, scope: !5861)
!6643 = !DILocation(line: 2613, column: 28, scope: !5861)
!6644 = !DILocation(line: 2614, column: 5, scope: !5861)
!6645 = !DILocation(line: 2614, column: 10, scope: !5861)
!6646 = !DILocation(line: 2613, column: 12, scope: !5861)
!6647 = !DILocation(line: 2613, column: 10, scope: !5861)
!6648 = !DILocation(line: 2615, column: 3, scope: !5861)
!6649 = !DILocation(line: 2618, column: 7, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2618, column: 7)
!6651 = !DILocation(line: 2618, column: 12, scope: !6650)
!6652 = !DILocation(line: 2618, column: 21, scope: !6650)
!6653 = !DILocation(line: 2618, column: 7, scope: !5861)
!6654 = !DILocation(line: 2619, column: 4, scope: !6650)
!6655 = !DILocation(line: 2620, column: 10, scope: !5861)
!6656 = !DILocation(line: 2621, column: 3, scope: !5861)
!6657 = !DILocation(line: 2623, column: 12, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2623, column: 3)
!6659 = !DILocation(line: 2623, column: 19, scope: !6658)
!6660 = !DILocation(line: 2623, column: 10, scope: !6658)
!6661 = !DILocation(line: 2623, column: 8, scope: !6658)
!6662 = !DILocation(line: 2623, column: 31, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 2623, column: 3)
!6664 = !DILocation(line: 2623, column: 38, scope: !6663)
!6665 = !DILocation(line: 2623, column: 43, scope: !6663)
!6666 = !DILocation(line: 2623, column: 46, scope: !6663)
!6667 = !DILocation(line: 2623, column: 48, scope: !6663)
!6668 = !DILocation(line: 0, scope: !6663)
!6669 = !DILocation(line: 2623, column: 3, scope: !6658)
!6670 = !DILocation(line: 2624, column: 32, scope: !6663)
!6671 = !DILocation(line: 2624, column: 13, scope: !6663)
!6672 = !DILocation(line: 2624, column: 11, scope: !6663)
!6673 = !DILocation(line: 2624, column: 4, scope: !6663)
!6674 = !DILocation(line: 2623, column: 53, scope: !6663)
!6675 = !DILocation(line: 2623, column: 3, scope: !6663)
!6676 = distinct !{!6676, !6669, !6677}
!6677 = !DILocation(line: 2624, column: 35, scope: !6658)
!6678 = !DILocation(line: 2626, column: 7, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 2626, column: 7)
!6680 = !DILocation(line: 2626, column: 7, scope: !5861)
!6681 = !DILocation(line: 2627, column: 4, scope: !6679)
!6682 = !DILocation(line: 2629, column: 3, scope: !5861)
!6683 = !DILocation(line: 2631, column: 9, scope: !5820)
!6684 = !DILocation(line: 2631, column: 2, scope: !5820)
!6685 = !DILocation(line: 2632, column: 1, scope: !5820)
!6686 = distinct !DISubprogram(name: "timespec64_sub", scope: !518, file: !518, line: 75, type: !6687, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!6687 = !DISubroutineType(types: !6688)
!6688 = !{!517, !517, !517}
!6689 = !DILocalVariable(name: "lhs", arg: 1, scope: !6686, file: !518, line: 75, type: !517)
!6690 = !DILocation(line: 75, column: 66, scope: !6686)
!6691 = !DILocalVariable(name: "rhs", arg: 2, scope: !6686, file: !518, line: 76, type: !517)
!6692 = !DILocation(line: 76, column: 25, scope: !6686)
!6693 = !DILocalVariable(name: "ts_delta", scope: !6686, file: !518, line: 78, type: !517)
!6694 = !DILocation(line: 78, column: 20, scope: !6686)
!6695 = !DILocation(line: 79, column: 43, scope: !6686)
!6696 = !DILocation(line: 79, column: 56, scope: !6686)
!6697 = !DILocation(line: 79, column: 50, scope: !6686)
!6698 = !DILocation(line: 80, column: 9, scope: !6686)
!6699 = !DILocation(line: 80, column: 23, scope: !6686)
!6700 = !DILocation(line: 80, column: 17, scope: !6686)
!6701 = !DILocation(line: 79, column: 2, scope: !6686)
!6702 = !DILocation(line: 81, column: 2, scope: !6686)
!6703 = distinct !DISubprogram(name: "simple_alloc_urb", scope: !3, file: !3, line: 317, type: !6704, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!6704 = !DISubroutineType(types: !6705)
!6705 = !{!4089, !170, !168, !311, !159}
!6706 = !DILocalVariable(name: "udev", arg: 1, scope: !6703, file: !3, line: 318, type: !170)
!6707 = !DILocation(line: 318, column: 21, scope: !6703)
!6708 = !DILocalVariable(name: "pipe", arg: 2, scope: !6703, file: !3, line: 319, type: !168)
!6709 = !DILocation(line: 319, column: 8, scope: !6703)
!6710 = !DILocalVariable(name: "bytes", arg: 3, scope: !6703, file: !3, line: 320, type: !311)
!6711 = !DILocation(line: 320, column: 17, scope: !6703)
!6712 = !DILocalVariable(name: "bInterval", arg: 4, scope: !6703, file: !3, line: 321, type: !159)
!6713 = !DILocation(line: 321, column: 7, scope: !6703)
!6714 = !DILocation(line: 323, column: 27, scope: !6703)
!6715 = !DILocation(line: 323, column: 33, scope: !6703)
!6716 = !DILocation(line: 323, column: 39, scope: !6703)
!6717 = !DILocation(line: 324, column: 4, scope: !6703)
!6718 = !DILocation(line: 323, column: 9, scope: !6703)
!6719 = !DILocation(line: 323, column: 2, scope: !6703)
!6720 = distinct !DISubprogram(name: "simple_io", scope: !3, file: !3, line: 454, type: !6721, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!6721 = !DISubroutineType(types: !6722)
!6722 = !{!168, !4522, !4089, !168, !168, !168, !155}
!6723 = !DILocalVariable(name: "m", arg: 1, scope: !6724, file: !6725, line: 363, type: !2800)
!6724 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !6725, file: !6725, line: 363, type: !6726, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!6725 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!311, !2800}
!6728 = !DILocation(line: 363, column: 74, scope: !6724, inlinedAt: !6729)
!6729 = distinct !DILocation(line: 480, column: 12, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 470, column: 42)
!6731 = !DILocalVariable(name: "tdev", arg: 1, scope: !6720, file: !3, line: 455, type: !4522)
!6732 = !DILocation(line: 455, column: 22, scope: !6720)
!6733 = !DILocalVariable(name: "urb", arg: 2, scope: !6720, file: !3, line: 456, type: !4089)
!6734 = !DILocation(line: 456, column: 15, scope: !6720)
!6735 = !DILocalVariable(name: "iterations", arg: 3, scope: !6720, file: !3, line: 457, type: !168)
!6736 = !DILocation(line: 457, column: 8, scope: !6720)
!6737 = !DILocalVariable(name: "vary", arg: 4, scope: !6720, file: !3, line: 458, type: !168)
!6738 = !DILocation(line: 458, column: 8, scope: !6720)
!6739 = !DILocalVariable(name: "expected", arg: 5, scope: !6720, file: !3, line: 459, type: !168)
!6740 = !DILocation(line: 459, column: 8, scope: !6720)
!6741 = !DILocalVariable(name: "label", arg: 6, scope: !6720, file: !3, line: 460, type: !155)
!6742 = !DILocation(line: 460, column: 15, scope: !6720)
!6743 = !DILocalVariable(name: "udev", scope: !6720, file: !3, line: 463, type: !170)
!6744 = !DILocation(line: 463, column: 21, scope: !6720)
!6745 = !DILocation(line: 463, column: 28, scope: !6720)
!6746 = !DILocation(line: 463, column: 33, scope: !6720)
!6747 = !DILocalVariable(name: "max", scope: !6720, file: !3, line: 464, type: !168)
!6748 = !DILocation(line: 464, column: 8, scope: !6720)
!6749 = !DILocation(line: 464, column: 14, scope: !6720)
!6750 = !DILocation(line: 464, column: 19, scope: !6720)
!6751 = !DILocalVariable(name: "completion", scope: !6720, file: !3, line: 465, type: !1479)
!6752 = !DILocation(line: 465, column: 20, scope: !6720)
!6753 = !DILocalVariable(name: "retval", scope: !6720, file: !3, line: 466, type: !168)
!6754 = !DILocation(line: 466, column: 8, scope: !6720)
!6755 = !DILocalVariable(name: "expire", scope: !6720, file: !3, line: 467, type: !311)
!6756 = !DILocation(line: 467, column: 17, scope: !6720)
!6757 = !DILocation(line: 469, column: 17, scope: !6720)
!6758 = !DILocation(line: 469, column: 2, scope: !6720)
!6759 = !DILocation(line: 469, column: 7, scope: !6720)
!6760 = !DILocation(line: 469, column: 15, scope: !6720)
!6761 = !DILocation(line: 470, column: 2, scope: !6720)
!6762 = !DILocation(line: 470, column: 9, scope: !6720)
!6763 = !DILocation(line: 470, column: 16, scope: !6720)
!6764 = !DILocation(line: 470, column: 21, scope: !6720)
!6765 = !DILocation(line: 470, column: 34, scope: !6720)
!6766 = !DILocation(line: 470, column: 37, scope: !6720)
!6767 = !DILocation(line: 0, scope: !6720)
!6768 = !DILocation(line: 471, column: 3, scope: !6730)
!6769 = !DILocation(line: 472, column: 7, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 472, column: 7)
!6771 = !DILocation(line: 472, column: 7, scope: !6730)
!6772 = !DILocation(line: 473, column: 20, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 472, column: 31)
!6774 = !DILocation(line: 473, column: 4, scope: !6773)
!6775 = !DILocation(line: 474, column: 4, scope: !6773)
!6776 = !DILocation(line: 474, column: 9, scope: !6773)
!6777 = !DILocation(line: 474, column: 24, scope: !6773)
!6778 = !DILocation(line: 475, column: 3, scope: !6773)
!6779 = !DILocation(line: 476, column: 27, scope: !6730)
!6780 = !DILocation(line: 476, column: 12, scope: !6730)
!6781 = !DILocation(line: 476, column: 10, scope: !6730)
!6782 = !DILocation(line: 477, column: 7, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 477, column: 7)
!6784 = !DILocation(line: 477, column: 14, scope: !6783)
!6785 = !DILocation(line: 477, column: 7, scope: !6730)
!6786 = !DILocation(line: 478, column: 4, scope: !6783)
!6787 = !DILocation(line: 365, column: 27, scope: !6788, inlinedAt: !6729)
!6788 = distinct !DILexicalBlock(scope: !6724, file: !6725, line: 365, column: 6)
!6789 = !DILocation(line: 365, column: 6, scope: !6788, inlinedAt: !6729)
!6790 = !DILocation(line: 365, column: 6, scope: !6724, inlinedAt: !6729)
!6791 = !DILocation(line: 366, column: 12, scope: !6792, inlinedAt: !6729)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6725, line: 366, column: 7)
!6793 = distinct !DILexicalBlock(scope: !6788, file: !6725, line: 365, column: 31)
!6794 = !DILocation(line: 366, column: 14, scope: !6792, inlinedAt: !6729)
!6795 = !DILocation(line: 366, column: 7, scope: !6793, inlinedAt: !6729)
!6796 = !DILocation(line: 367, column: 4, scope: !6792, inlinedAt: !6729)
!6797 = !DILocation(line: 368, column: 28, scope: !6793, inlinedAt: !6729)
!6798 = !DILocation(line: 368, column: 10, scope: !6793, inlinedAt: !6729)
!6799 = !DILocation(line: 368, column: 3, scope: !6793, inlinedAt: !6729)
!6800 = !DILocation(line: 370, column: 29, scope: !6801, inlinedAt: !6729)
!6801 = distinct !DILexicalBlock(scope: !6788, file: !6725, line: 369, column: 9)
!6802 = !DILocation(line: 370, column: 10, scope: !6801, inlinedAt: !6729)
!6803 = !DILocation(line: 370, column: 3, scope: !6801, inlinedAt: !6729)
!6804 = !DILocation(line: 372, column: 1, scope: !6724, inlinedAt: !6729)
!6805 = !DILocation(line: 480, column: 10, scope: !6730)
!6806 = !DILocation(line: 481, column: 49, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 481, column: 7)
!6808 = !DILocation(line: 481, column: 8, scope: !6807)
!6809 = !DILocation(line: 481, column: 7, scope: !6730)
!6810 = !DILocation(line: 482, column: 17, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 481, column: 58)
!6812 = !DILocation(line: 482, column: 4, scope: !6811)
!6813 = !DILocation(line: 483, column: 14, scope: !6811)
!6814 = !DILocation(line: 483, column: 19, scope: !6811)
!6815 = !DILocation(line: 483, column: 26, scope: !6811)
!6816 = !DILocation(line: 484, column: 20, scope: !6811)
!6817 = !DILocation(line: 484, column: 25, scope: !6811)
!6818 = !DILocation(line: 483, column: 11, scope: !6811)
!6819 = !DILocation(line: 485, column: 3, scope: !6811)
!6820 = !DILocation(line: 486, column: 13, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 485, column: 10)
!6822 = !DILocation(line: 486, column: 18, scope: !6821)
!6823 = !DILocation(line: 486, column: 11, scope: !6821)
!6824 = !DILocation(line: 489, column: 14, scope: !6730)
!6825 = !DILocation(line: 489, column: 3, scope: !6730)
!6826 = !DILocation(line: 489, column: 8, scope: !6730)
!6827 = !DILocation(line: 489, column: 12, scope: !6730)
!6828 = !DILocation(line: 490, column: 7, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 490, column: 7)
!6830 = !DILocation(line: 490, column: 14, scope: !6829)
!6831 = !DILocation(line: 490, column: 19, scope: !6829)
!6832 = !DILocation(line: 490, column: 22, scope: !6829)
!6833 = !DILocation(line: 490, column: 7, scope: !6730)
!6834 = !DILocation(line: 491, column: 30, scope: !6829)
!6835 = !DILocation(line: 491, column: 36, scope: !6829)
!6836 = !DILocation(line: 491, column: 13, scope: !6829)
!6837 = !DILocation(line: 491, column: 11, scope: !6829)
!6838 = !DILocation(line: 491, column: 4, scope: !6829)
!6839 = !DILocation(line: 493, column: 7, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 493, column: 7)
!6841 = !DILocation(line: 493, column: 7, scope: !6730)
!6842 = !DILocalVariable(name: "len", scope: !6843, file: !3, line: 494, type: !168)
!6843 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 493, column: 13)
!6844 = !DILocation(line: 494, column: 8, scope: !6843)
!6845 = !DILocation(line: 494, column: 14, scope: !6843)
!6846 = !DILocation(line: 494, column: 19, scope: !6843)
!6847 = !DILocation(line: 496, column: 11, scope: !6843)
!6848 = !DILocation(line: 496, column: 8, scope: !6843)
!6849 = !DILocation(line: 497, column: 11, scope: !6843)
!6850 = !DILocation(line: 497, column: 8, scope: !6843)
!6851 = !DILocation(line: 498, column: 8, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 498, column: 8)
!6853 = !DILocation(line: 498, column: 12, scope: !6852)
!6854 = !DILocation(line: 498, column: 8, scope: !6843)
!6855 = !DILocation(line: 499, column: 12, scope: !6852)
!6856 = !DILocation(line: 499, column: 19, scope: !6852)
!6857 = !DILocation(line: 499, column: 17, scope: !6852)
!6858 = !DILocation(line: 499, column: 11, scope: !6852)
!6859 = !DILocation(line: 499, column: 26, scope: !6852)
!6860 = !DILocation(line: 499, column: 33, scope: !6852)
!6861 = !DILocation(line: 499, column: 9, scope: !6852)
!6862 = !DILocation(line: 499, column: 5, scope: !6852)
!6863 = !DILocation(line: 500, column: 34, scope: !6843)
!6864 = !DILocation(line: 500, column: 4, scope: !6843)
!6865 = !DILocation(line: 500, column: 9, scope: !6843)
!6866 = !DILocation(line: 500, column: 32, scope: !6843)
!6867 = !DILocation(line: 501, column: 3, scope: !6843)
!6868 = distinct !{!6868, !6761, !6869}
!6869 = !DILocation(line: 504, column: 2, scope: !6720)
!6870 = !DILocation(line: 505, column: 32, scope: !6720)
!6871 = !DILocation(line: 505, column: 2, scope: !6720)
!6872 = !DILocation(line: 505, column: 7, scope: !6720)
!6873 = !DILocation(line: 505, column: 30, scope: !6720)
!6874 = !DILocation(line: 507, column: 6, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 507, column: 6)
!6876 = !DILocation(line: 507, column: 18, scope: !6875)
!6877 = !DILocation(line: 507, column: 15, scope: !6875)
!6878 = !DILocation(line: 507, column: 6, scope: !6720)
!6879 = !DILocation(line: 508, column: 3, scope: !6875)
!6880 = !DILocation(line: 511, column: 9, scope: !6720)
!6881 = !DILocation(line: 511, column: 2, scope: !6720)
!6882 = distinct !DISubprogram(name: "simple_free_urb", scope: !3, file: !3, line: 439, type: !4140, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!6883 = !DILocalVariable(name: "urb", arg: 1, scope: !6882, file: !3, line: 439, type: !4089)
!6884 = !DILocation(line: 439, column: 41, scope: !6882)
!6885 = !DILocalVariable(name: "offset", scope: !6882, file: !3, line: 441, type: !311)
!6886 = !DILocation(line: 441, column: 16, scope: !6882)
!6887 = !DILocation(line: 441, column: 39, scope: !6882)
!6888 = !DILocation(line: 441, column: 44, scope: !6882)
!6889 = !DILocation(line: 441, column: 25, scope: !6882)
!6890 = !DILocation(line: 443, column: 6, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 443, column: 6)
!6892 = !DILocation(line: 443, column: 11, scope: !6891)
!6893 = !DILocation(line: 443, column: 26, scope: !6891)
!6894 = !DILocation(line: 443, column: 6, scope: !6882)
!6895 = !DILocation(line: 445, column: 4, scope: !6891)
!6896 = !DILocation(line: 445, column: 9, scope: !6891)
!6897 = !DILocation(line: 446, column: 4, scope: !6891)
!6898 = !DILocation(line: 446, column: 9, scope: !6891)
!6899 = !DILocation(line: 446, column: 34, scope: !6891)
!6900 = !DILocation(line: 446, column: 32, scope: !6891)
!6901 = !DILocation(line: 447, column: 4, scope: !6891)
!6902 = !DILocation(line: 447, column: 9, scope: !6891)
!6903 = !DILocation(line: 447, column: 27, scope: !6891)
!6904 = !DILocation(line: 447, column: 25, scope: !6891)
!6905 = !DILocation(line: 448, column: 4, scope: !6891)
!6906 = !DILocation(line: 448, column: 9, scope: !6891)
!6907 = !DILocation(line: 448, column: 24, scope: !6891)
!6908 = !DILocation(line: 448, column: 22, scope: !6891)
!6909 = !DILocation(line: 444, column: 3, scope: !6891)
!6910 = !DILocation(line: 450, column: 9, scope: !6891)
!6911 = !DILocation(line: 450, column: 14, scope: !6891)
!6912 = !DILocation(line: 450, column: 32, scope: !6891)
!6913 = !DILocation(line: 450, column: 30, scope: !6891)
!6914 = !DILocation(line: 450, column: 3, scope: !6891)
!6915 = !DILocation(line: 451, column: 15, scope: !6882)
!6916 = !DILocation(line: 451, column: 2, scope: !6882)
!6917 = !DILocation(line: 452, column: 1, scope: !6882)
!6918 = distinct !DISubprogram(name: "alloc_sglist", scope: !3, file: !3, line: 536, type: !6919, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!6919 = !DISubroutineType(types: !6920)
!6920 = !{!4117, !168, !168, !168, !4522, !168}
!6921 = !DILocalVariable(name: "nents", arg: 1, scope: !6918, file: !3, line: 536, type: !168)
!6922 = !DILocation(line: 536, column: 18, scope: !6918)
!6923 = !DILocalVariable(name: "max", arg: 2, scope: !6918, file: !3, line: 536, type: !168)
!6924 = !DILocation(line: 536, column: 29, scope: !6918)
!6925 = !DILocalVariable(name: "vary", arg: 3, scope: !6918, file: !3, line: 536, type: !168)
!6926 = !DILocation(line: 536, column: 38, scope: !6918)
!6927 = !DILocalVariable(name: "dev", arg: 4, scope: !6918, file: !3, line: 536, type: !4522)
!6928 = !DILocation(line: 536, column: 64, scope: !6918)
!6929 = !DILocalVariable(name: "pipe", arg: 5, scope: !6918, file: !3, line: 536, type: !168)
!6930 = !DILocation(line: 536, column: 73, scope: !6918)
!6931 = !DILocalVariable(name: "sg", scope: !6918, file: !3, line: 538, type: !4117)
!6932 = !DILocation(line: 538, column: 22, scope: !6918)
!6933 = !DILocalVariable(name: "n_size", scope: !6918, file: !3, line: 539, type: !7)
!6934 = !DILocation(line: 539, column: 16, scope: !6918)
!6935 = !DILocalVariable(name: "i", scope: !6918, file: !3, line: 540, type: !7)
!6936 = !DILocation(line: 540, column: 12, scope: !6918)
!6937 = !DILocalVariable(name: "size", scope: !6918, file: !3, line: 541, type: !7)
!6938 = !DILocation(line: 541, column: 12, scope: !6918)
!6939 = !DILocation(line: 541, column: 19, scope: !6918)
!6940 = !DILocalVariable(name: "maxpacket", scope: !6918, file: !3, line: 542, type: !7)
!6941 = !DILocation(line: 542, column: 12, scope: !6918)
!6942 = !DILocation(line: 543, column: 37, scope: !6918)
!6943 = !DILocation(line: 543, column: 42, scope: !6918)
!6944 = !DILocation(line: 543, column: 17, scope: !6918)
!6945 = !DILocation(line: 543, column: 49, scope: !6918)
!6946 = !DILocation(line: 543, column: 3, scope: !6918)
!6947 = !DILocation(line: 545, column: 6, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 545, column: 6)
!6949 = !DILocation(line: 545, column: 10, scope: !6948)
!6950 = !DILocation(line: 545, column: 6, scope: !6918)
!6951 = !DILocation(line: 546, column: 3, scope: !6948)
!6952 = !DILocation(line: 548, column: 21, scope: !6918)
!6953 = !DILocation(line: 548, column: 7, scope: !6918)
!6954 = !DILocation(line: 548, column: 5, scope: !6918)
!6955 = !DILocation(line: 549, column: 7, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 549, column: 6)
!6957 = !DILocation(line: 549, column: 6, scope: !6918)
!6958 = !DILocation(line: 550, column: 3, scope: !6956)
!6959 = !DILocation(line: 551, column: 16, scope: !6918)
!6960 = !DILocation(line: 551, column: 20, scope: !6918)
!6961 = !DILocation(line: 551, column: 2, scope: !6918)
!6962 = !DILocation(line: 553, column: 9, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 553, column: 2)
!6964 = !DILocation(line: 553, column: 7, scope: !6963)
!6965 = !DILocation(line: 553, column: 14, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 553, column: 2)
!6967 = !DILocation(line: 553, column: 18, scope: !6966)
!6968 = !DILocation(line: 553, column: 16, scope: !6966)
!6969 = !DILocation(line: 553, column: 2, scope: !6963)
!6970 = !DILocalVariable(name: "buf", scope: !6971, file: !3, line: 554, type: !262)
!6971 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 553, column: 30)
!6972 = !DILocation(line: 554, column: 10, scope: !6971)
!6973 = !DILocalVariable(name: "j", scope: !6971, file: !3, line: 555, type: !7)
!6974 = !DILocation(line: 555, column: 12, scope: !6971)
!6975 = !DILocation(line: 557, column: 17, scope: !6971)
!6976 = !DILocation(line: 557, column: 9, scope: !6971)
!6977 = !DILocation(line: 557, column: 7, scope: !6971)
!6978 = !DILocation(line: 558, column: 8, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 558, column: 7)
!6980 = !DILocation(line: 558, column: 7, scope: !6971)
!6981 = !DILocation(line: 559, column: 16, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6979, file: !3, line: 558, column: 13)
!6983 = !DILocation(line: 559, column: 20, scope: !6982)
!6984 = !DILocation(line: 559, column: 4, scope: !6982)
!6985 = !DILocation(line: 560, column: 4, scope: !6982)
!6986 = !DILocation(line: 564, column: 15, scope: !6971)
!6987 = !DILocation(line: 564, column: 18, scope: !6971)
!6988 = !DILocation(line: 564, column: 22, scope: !6971)
!6989 = !DILocation(line: 564, column: 27, scope: !6971)
!6990 = !DILocation(line: 564, column: 3, scope: !6971)
!6991 = !DILocation(line: 566, column: 11, scope: !6971)
!6992 = !DILocation(line: 566, column: 3, scope: !6971)
!6993 = !DILocation(line: 569, column: 4, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 566, column: 20)
!6995 = !DILocation(line: 571, column: 11, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 571, column: 4)
!6997 = !DILocation(line: 571, column: 9, scope: !6996)
!6998 = !DILocation(line: 571, column: 16, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 571, column: 4)
!7000 = !DILocation(line: 571, column: 20, scope: !6999)
!7001 = !DILocation(line: 571, column: 18, scope: !6999)
!7002 = !DILocation(line: 571, column: 4, scope: !6996)
!7003 = !DILocation(line: 572, column: 22, scope: !6999)
!7004 = !DILocation(line: 572, column: 26, scope: !6999)
!7005 = !DILocation(line: 572, column: 24, scope: !6999)
!7006 = !DILocation(line: 572, column: 36, scope: !6999)
!7007 = !DILocation(line: 572, column: 34, scope: !6999)
!7008 = !DILocation(line: 572, column: 47, scope: !6999)
!7009 = !DILocation(line: 572, column: 14, scope: !6999)
!7010 = !DILocation(line: 572, column: 9, scope: !6999)
!7011 = !DILocation(line: 572, column: 12, scope: !6999)
!7012 = !DILocation(line: 572, column: 5, scope: !6999)
!7013 = !DILocation(line: 571, column: 27, scope: !6999)
!7014 = !DILocation(line: 571, column: 4, scope: !6999)
!7015 = distinct !{!7015, !7002, !7016}
!7016 = !DILocation(line: 572, column: 51, scope: !6996)
!7017 = !DILocation(line: 573, column: 14, scope: !6994)
!7018 = !DILocation(line: 573, column: 11, scope: !6994)
!7019 = !DILocation(line: 574, column: 4, scope: !6994)
!7020 = !DILocation(line: 577, column: 7, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 577, column: 7)
!7022 = !DILocation(line: 577, column: 7, scope: !6971)
!7023 = !DILocation(line: 578, column: 12, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 577, column: 13)
!7025 = !DILocation(line: 578, column: 9, scope: !7024)
!7026 = !DILocation(line: 579, column: 12, scope: !7024)
!7027 = !DILocation(line: 579, column: 9, scope: !7024)
!7028 = !DILocation(line: 580, column: 8, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 580, column: 8)
!7030 = !DILocation(line: 580, column: 13, scope: !7029)
!7031 = !DILocation(line: 580, column: 8, scope: !7024)
!7032 = !DILocation(line: 581, column: 13, scope: !7029)
!7033 = !DILocation(line: 581, column: 20, scope: !7029)
!7034 = !DILocation(line: 581, column: 18, scope: !7029)
!7035 = !DILocation(line: 581, column: 12, scope: !7029)
!7036 = !DILocation(line: 581, column: 27, scope: !7029)
!7037 = !DILocation(line: 581, column: 34, scope: !7029)
!7038 = !DILocation(line: 581, column: 10, scope: !7029)
!7039 = !DILocation(line: 581, column: 5, scope: !7029)
!7040 = !DILocation(line: 582, column: 3, scope: !7024)
!7041 = !DILocation(line: 583, column: 2, scope: !6971)
!7042 = !DILocation(line: 553, column: 26, scope: !6966)
!7043 = !DILocation(line: 553, column: 2, scope: !6966)
!7044 = distinct !{!7044, !6969, !7045}
!7045 = !DILocation(line: 583, column: 2, scope: !6963)
!7046 = !DILocation(line: 585, column: 9, scope: !6918)
!7047 = !DILocation(line: 585, column: 2, scope: !6918)
!7048 = !DILocation(line: 586, column: 1, scope: !6918)
!7049 = distinct !DISubprogram(name: "perform_sglist", scope: !3, file: !3, line: 600, type: !7050, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!7050 = !DISubroutineType(types: !7051)
!7051 = !{!168, !4522, !7, !168, !4078, !4117, !168}
!7052 = !DILocation(line: 363, column: 74, scope: !6724, inlinedAt: !7053)
!7053 = distinct !DILocation(line: 627, column: 5, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 617, column: 42)
!7055 = !DILocalVariable(name: "tdev", arg: 1, scope: !7049, file: !3, line: 601, type: !4522)
!7056 = !DILocation(line: 601, column: 22, scope: !7049)
!7057 = !DILocalVariable(name: "iterations", arg: 2, scope: !7049, file: !3, line: 602, type: !7)
!7058 = !DILocation(line: 602, column: 12, scope: !7049)
!7059 = !DILocalVariable(name: "pipe", arg: 3, scope: !7049, file: !3, line: 603, type: !168)
!7060 = !DILocation(line: 603, column: 8, scope: !7049)
!7061 = !DILocalVariable(name: "req", arg: 4, scope: !7049, file: !3, line: 604, type: !4078)
!7062 = !DILocation(line: 604, column: 25, scope: !7049)
!7063 = !DILocalVariable(name: "sg", arg: 5, scope: !7049, file: !3, line: 605, type: !4117)
!7064 = !DILocation(line: 605, column: 22, scope: !7049)
!7065 = !DILocalVariable(name: "nents", arg: 6, scope: !7049, file: !3, line: 606, type: !168)
!7066 = !DILocation(line: 606, column: 8, scope: !7049)
!7067 = !DILocalVariable(name: "udev", scope: !7049, file: !3, line: 609, type: !170)
!7068 = !DILocation(line: 609, column: 21, scope: !7049)
!7069 = !DILocation(line: 609, column: 46, scope: !7049)
!7070 = !DILocation(line: 609, column: 28, scope: !7049)
!7071 = !DILocalVariable(name: "retval", scope: !7049, file: !3, line: 610, type: !168)
!7072 = !DILocation(line: 610, column: 8, scope: !7049)
!7073 = !DILocalVariable(name: "timeout", scope: !7049, file: !3, line: 611, type: !4074)
!7074 = !DILocation(line: 611, column: 20, scope: !7049)
!7075 = !DILocation(line: 611, column: 30, scope: !7049)
!7076 = !DILocation(line: 612, column: 10, scope: !7049)
!7077 = !DILocation(line: 615, column: 2, scope: !7049)
!7078 = !DILocation(line: 617, column: 2, scope: !7049)
!7079 = !DILocation(line: 617, column: 9, scope: !7049)
!7080 = !DILocation(line: 617, column: 16, scope: !7049)
!7081 = !DILocation(line: 617, column: 21, scope: !7049)
!7082 = !DILocation(line: 617, column: 34, scope: !7049)
!7083 = !DILocation(line: 617, column: 37, scope: !7049)
!7084 = !DILocation(line: 0, scope: !7049)
!7085 = !DILocation(line: 618, column: 24, scope: !7054)
!7086 = !DILocation(line: 618, column: 29, scope: !7054)
!7087 = !DILocation(line: 618, column: 35, scope: !7054)
!7088 = !DILocation(line: 619, column: 6, scope: !7054)
!7089 = !DILocation(line: 619, column: 12, scope: !7054)
!7090 = !DILocation(line: 619, column: 18, scope: !7054)
!7091 = !DILocation(line: 619, column: 5, scope: !7054)
!7092 = !DILocation(line: 622, column: 5, scope: !7054)
!7093 = !DILocation(line: 622, column: 9, scope: !7054)
!7094 = !DILocation(line: 618, column: 12, scope: !7054)
!7095 = !DILocation(line: 618, column: 10, scope: !7054)
!7096 = !DILocation(line: 624, column: 7, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 624, column: 7)
!7098 = !DILocation(line: 624, column: 7, scope: !7054)
!7099 = !DILocation(line: 625, column: 4, scope: !7097)
!7100 = !DILocation(line: 626, column: 22, scope: !7054)
!7101 = !DILocation(line: 626, column: 29, scope: !7054)
!7102 = !DILocation(line: 365, column: 27, scope: !6788, inlinedAt: !7053)
!7103 = !DILocation(line: 365, column: 6, scope: !6788, inlinedAt: !7053)
!7104 = !DILocation(line: 365, column: 6, scope: !6724, inlinedAt: !7053)
!7105 = !DILocation(line: 366, column: 12, scope: !6792, inlinedAt: !7053)
!7106 = !DILocation(line: 366, column: 14, scope: !6792, inlinedAt: !7053)
!7107 = !DILocation(line: 366, column: 7, scope: !6793, inlinedAt: !7053)
!7108 = !DILocation(line: 367, column: 4, scope: !6792, inlinedAt: !7053)
!7109 = !DILocation(line: 368, column: 28, scope: !6793, inlinedAt: !7053)
!7110 = !DILocation(line: 368, column: 10, scope: !6793, inlinedAt: !7053)
!7111 = !DILocation(line: 368, column: 3, scope: !6793, inlinedAt: !7053)
!7112 = !DILocation(line: 370, column: 29, scope: !6801, inlinedAt: !7053)
!7113 = !DILocation(line: 370, column: 10, scope: !6801, inlinedAt: !7053)
!7114 = !DILocation(line: 370, column: 3, scope: !6801, inlinedAt: !7053)
!7115 = !DILocation(line: 372, column: 1, scope: !6724, inlinedAt: !7053)
!7116 = !DILocation(line: 626, column: 37, scope: !7054)
!7117 = !DILocation(line: 626, column: 3, scope: !7054)
!7118 = !DILocation(line: 628, column: 15, scope: !7054)
!7119 = !DILocation(line: 628, column: 3, scope: !7054)
!7120 = !DILocation(line: 629, column: 8, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 629, column: 7)
!7122 = !DILocation(line: 629, column: 7, scope: !7054)
!7123 = !DILocation(line: 630, column: 11, scope: !7121)
!7124 = !DILocation(line: 630, column: 4, scope: !7121)
!7125 = !DILocation(line: 632, column: 13, scope: !7121)
!7126 = !DILocation(line: 632, column: 18, scope: !7121)
!7127 = !DILocation(line: 632, column: 11, scope: !7121)
!7128 = !DILocation(line: 633, column: 35, scope: !7054)
!7129 = !DILocation(line: 633, column: 3, scope: !7054)
!7130 = distinct !{!7130, !7078, !7131}
!7131 = !DILocation(line: 638, column: 2, scope: !7049)
!7132 = !DILocation(line: 643, column: 6, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 643, column: 6)
!7134 = !DILocation(line: 643, column: 6, scope: !7049)
!7135 = !DILocation(line: 644, column: 3, scope: !7133)
!7136 = !DILocation(line: 647, column: 9, scope: !7049)
!7137 = !DILocation(line: 647, column: 2, scope: !7049)
!7138 = distinct !DISubprogram(name: "free_sglist", scope: !3, file: !3, line: 521, type: !7139, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!7139 = !DISubroutineType(types: !7140)
!7140 = !{null, !4117, !168}
!7141 = !DILocalVariable(name: "sg", arg: 1, scope: !7138, file: !3, line: 521, type: !4117)
!7142 = !DILocation(line: 521, column: 45, scope: !7138)
!7143 = !DILocalVariable(name: "nents", arg: 2, scope: !7138, file: !3, line: 521, type: !168)
!7144 = !DILocation(line: 521, column: 53, scope: !7138)
!7145 = !DILocalVariable(name: "i", scope: !7138, file: !3, line: 523, type: !7)
!7146 = !DILocation(line: 523, column: 12, scope: !7138)
!7147 = !DILocation(line: 525, column: 7, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 525, column: 6)
!7149 = !DILocation(line: 525, column: 6, scope: !7138)
!7150 = !DILocation(line: 526, column: 3, scope: !7148)
!7151 = !DILocation(line: 527, column: 9, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 527, column: 2)
!7153 = !DILocation(line: 527, column: 7, scope: !7152)
!7154 = !DILocation(line: 527, column: 14, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 527, column: 2)
!7156 = !DILocation(line: 527, column: 18, scope: !7155)
!7157 = !DILocation(line: 527, column: 16, scope: !7155)
!7158 = !DILocation(line: 527, column: 2, scope: !7152)
!7159 = !DILocation(line: 528, column: 17, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 528, column: 7)
!7161 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 527, column: 30)
!7162 = !DILocation(line: 528, column: 20, scope: !7160)
!7163 = !DILocation(line: 528, column: 8, scope: !7160)
!7164 = !DILocation(line: 528, column: 7, scope: !7161)
!7165 = !DILocation(line: 529, column: 4, scope: !7160)
!7166 = !DILocation(line: 530, column: 18, scope: !7161)
!7167 = !DILocation(line: 530, column: 21, scope: !7161)
!7168 = !DILocation(line: 530, column: 9, scope: !7161)
!7169 = !DILocation(line: 530, column: 3, scope: !7161)
!7170 = !DILocation(line: 531, column: 2, scope: !7161)
!7171 = !DILocation(line: 527, column: 26, scope: !7155)
!7172 = !DILocation(line: 527, column: 2, scope: !7155)
!7173 = distinct !{!7173, !7158, !7174}
!7174 = !DILocation(line: 531, column: 2, scope: !7152)
!7175 = !DILocation(line: 532, column: 8, scope: !7138)
!7176 = !DILocation(line: 532, column: 2, scope: !7138)
!7177 = !DILocation(line: 533, column: 1, scope: !7138)
!7178 = distinct !DISubprogram(name: "ch9_postconfig", scope: !3, file: !3, line: 826, type: !7179, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!7179 = !DISubroutineType(types: !7180)
!7180 = !{!168, !4522}
!7181 = !DILocalVariable(name: "dev", arg: 1, scope: !7178, file: !3, line: 826, type: !4522)
!7182 = !DILocation(line: 826, column: 47, scope: !7178)
!7183 = !DILocalVariable(name: "iface", scope: !7178, file: !3, line: 828, type: !3965)
!7184 = !DILocation(line: 828, column: 24, scope: !7178)
!7185 = !DILocation(line: 828, column: 32, scope: !7178)
!7186 = !DILocation(line: 828, column: 37, scope: !7178)
!7187 = !DILocalVariable(name: "udev", scope: !7178, file: !3, line: 829, type: !170)
!7188 = !DILocation(line: 829, column: 21, scope: !7178)
!7189 = !DILocation(line: 829, column: 48, scope: !7178)
!7190 = !DILocation(line: 829, column: 28, scope: !7178)
!7191 = !DILocalVariable(name: "i", scope: !7178, file: !3, line: 830, type: !168)
!7192 = !DILocation(line: 830, column: 8, scope: !7178)
!7193 = !DILocalVariable(name: "alt", scope: !7178, file: !3, line: 830, type: !168)
!7194 = !DILocation(line: 830, column: 11, scope: !7178)
!7195 = !DILocalVariable(name: "retval", scope: !7178, file: !3, line: 830, type: !168)
!7196 = !DILocation(line: 830, column: 16, scope: !7178)
!7197 = !DILocation(line: 835, column: 9, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 835, column: 2)
!7199 = !DILocation(line: 835, column: 7, scope: !7198)
!7200 = !DILocation(line: 835, column: 14, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 835, column: 2)
!7202 = !DILocation(line: 835, column: 18, scope: !7201)
!7203 = !DILocation(line: 835, column: 25, scope: !7201)
!7204 = !DILocation(line: 835, column: 16, scope: !7201)
!7205 = !DILocation(line: 835, column: 2, scope: !7198)
!7206 = !DILocation(line: 838, column: 9, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 835, column: 46)
!7208 = !DILocation(line: 838, column: 16, scope: !7207)
!7209 = !DILocation(line: 838, column: 27, scope: !7207)
!7210 = !DILocation(line: 838, column: 30, scope: !7207)
!7211 = !DILocation(line: 838, column: 35, scope: !7207)
!7212 = !DILocation(line: 838, column: 7, scope: !7207)
!7213 = !DILocation(line: 839, column: 7, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 839, column: 7)
!7215 = !DILocation(line: 839, column: 11, scope: !7214)
!7216 = !DILocation(line: 839, column: 15, scope: !7214)
!7217 = !DILocation(line: 839, column: 18, scope: !7214)
!7218 = !DILocation(line: 839, column: 25, scope: !7214)
!7219 = !DILocation(line: 839, column: 32, scope: !7214)
!7220 = !DILocation(line: 839, column: 22, scope: !7214)
!7221 = !DILocation(line: 839, column: 7, scope: !7207)
!7222 = !DILocation(line: 840, column: 4, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 839, column: 48)
!7224 = !DILocation(line: 843, column: 3, scope: !7223)
!7225 = !DILocation(line: 846, column: 7, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 846, column: 7)
!7227 = !DILocation(line: 846, column: 17, scope: !7226)
!7228 = !DILocation(line: 846, column: 20, scope: !7226)
!7229 = !DILocation(line: 846, column: 27, scope: !7226)
!7230 = !DILocation(line: 846, column: 42, scope: !7226)
!7231 = !DILocation(line: 846, column: 7, scope: !7207)
!7232 = !DILocation(line: 847, column: 4, scope: !7226)
!7233 = !DILocation(line: 850, column: 27, scope: !7207)
!7234 = !DILocation(line: 850, column: 32, scope: !7207)
!7235 = !DILocation(line: 850, column: 12, scope: !7207)
!7236 = !DILocation(line: 850, column: 10, scope: !7207)
!7237 = !DILocation(line: 851, column: 7, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 851, column: 7)
!7239 = !DILocation(line: 851, column: 7, scope: !7207)
!7240 = !DILocation(line: 852, column: 4, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 851, column: 15)
!7242 = !DILocation(line: 854, column: 11, scope: !7241)
!7243 = !DILocation(line: 854, column: 4, scope: !7241)
!7244 = !DILocation(line: 858, column: 27, scope: !7207)
!7245 = !DILocation(line: 858, column: 12, scope: !7207)
!7246 = !DILocation(line: 858, column: 10, scope: !7207)
!7247 = !DILocation(line: 859, column: 7, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 859, column: 7)
!7249 = !DILocation(line: 859, column: 17, scope: !7248)
!7250 = !DILocation(line: 859, column: 14, scope: !7248)
!7251 = !DILocation(line: 859, column: 7, scope: !7207)
!7252 = !DILocation(line: 860, column: 4, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 859, column: 22)
!7254 = !DILocation(line: 862, column: 12, scope: !7253)
!7255 = !DILocation(line: 862, column: 19, scope: !7253)
!7256 = !DILocation(line: 862, column: 11, scope: !7253)
!7257 = !DILocation(line: 862, column: 26, scope: !7253)
!7258 = !DILocation(line: 862, column: 4, scope: !7253)
!7259 = !DILocation(line: 865, column: 2, scope: !7207)
!7260 = !DILocation(line: 835, column: 42, scope: !7201)
!7261 = !DILocation(line: 835, column: 2, scope: !7201)
!7262 = distinct !{!7262, !7205, !7263}
!7263 = !DILocation(line: 865, column: 2, scope: !7198)
!7264 = !DILocation(line: 868, column: 7, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 868, column: 6)
!7266 = !DILocation(line: 868, column: 17, scope: !7265)
!7267 = !DILocation(line: 868, column: 20, scope: !7265)
!7268 = !DILocation(line: 868, column: 26, scope: !7265)
!7269 = !DILocation(line: 868, column: 37, scope: !7265)
!7270 = !DILocation(line: 868, column: 56, scope: !7265)
!7271 = !DILocation(line: 868, column: 6, scope: !7178)
!7272 = !DILocalVariable(name: "expected", scope: !7273, file: !3, line: 869, type: !168)
!7273 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 868, column: 62)
!7274 = !DILocation(line: 869, column: 7, scope: !7273)
!7275 = !DILocation(line: 869, column: 18, scope: !7273)
!7276 = !DILocation(line: 869, column: 24, scope: !7273)
!7277 = !DILocation(line: 869, column: 35, scope: !7273)
!7278 = !DILocation(line: 869, column: 40, scope: !7273)
!7279 = !DILocation(line: 875, column: 28, scope: !7273)
!7280 = !DILocation(line: 875, column: 34, scope: !7273)
!7281 = !DILocation(line: 878, column: 11, scope: !7273)
!7282 = !DILocation(line: 878, column: 16, scope: !7273)
!7283 = !DILocation(line: 875, column: 12, scope: !7273)
!7284 = !DILocation(line: 875, column: 10, scope: !7273)
!7285 = !DILocation(line: 879, column: 7, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 879, column: 7)
!7287 = !DILocation(line: 879, column: 14, scope: !7286)
!7288 = !DILocation(line: 879, column: 19, scope: !7286)
!7289 = !DILocation(line: 879, column: 22, scope: !7286)
!7290 = !DILocation(line: 879, column: 27, scope: !7286)
!7291 = !DILocation(line: 879, column: 37, scope: !7286)
!7292 = !DILocation(line: 879, column: 34, scope: !7286)
!7293 = !DILocation(line: 879, column: 7, scope: !7273)
!7294 = !DILocation(line: 880, column: 4, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 879, column: 47)
!7296 = !DILocation(line: 882, column: 12, scope: !7295)
!7297 = !DILocation(line: 882, column: 19, scope: !7295)
!7298 = !DILocation(line: 882, column: 11, scope: !7295)
!7299 = !DILocation(line: 882, column: 26, scope: !7295)
!7300 = !DILocation(line: 882, column: 4, scope: !7295)
!7301 = !DILocation(line: 884, column: 2, scope: !7273)
!7302 = !DILocation(line: 887, column: 30, scope: !7178)
!7303 = !DILocation(line: 888, column: 4, scope: !7178)
!7304 = !DILocation(line: 888, column: 9, scope: !7178)
!7305 = !DILocation(line: 887, column: 11, scope: !7178)
!7306 = !DILocation(line: 887, column: 9, scope: !7178)
!7307 = !DILocation(line: 889, column: 6, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 889, column: 6)
!7309 = !DILocation(line: 889, column: 13, scope: !7308)
!7310 = !DILocation(line: 889, column: 6, scope: !7178)
!7311 = !DILocation(line: 890, column: 3, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 889, column: 42)
!7313 = !DILocation(line: 891, column: 11, scope: !7312)
!7314 = !DILocation(line: 891, column: 18, scope: !7312)
!7315 = !DILocation(line: 891, column: 10, scope: !7312)
!7316 = !DILocation(line: 891, column: 25, scope: !7312)
!7317 = !DILocation(line: 891, column: 3, scope: !7312)
!7318 = !DILocation(line: 898, column: 6, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 898, column: 6)
!7320 = !DILocation(line: 898, column: 43, scope: !7319)
!7321 = !DILocation(line: 898, column: 6, scope: !7178)
!7322 = !DILocalVariable(name: "bos", scope: !7323, file: !3, line: 899, type: !3878)
!7323 = distinct !DILexicalBlock(scope: !7319, file: !3, line: 898, column: 54)
!7324 = !DILocation(line: 899, column: 30, scope: !7323)
!7325 = !DILocalVariable(name: "header", scope: !7323, file: !3, line: 900, type: !4152)
!7326 = !DILocation(line: 900, column: 30, scope: !7323)
!7327 = !DILocalVariable(name: "total", scope: !7323, file: !3, line: 901, type: !7)
!7328 = !DILocation(line: 901, column: 12, scope: !7323)
!7329 = !DILocalVariable(name: "num", scope: !7323, file: !3, line: 901, type: !7)
!7330 = !DILocation(line: 901, column: 19, scope: !7323)
!7331 = !DILocalVariable(name: "length", scope: !7323, file: !3, line: 901, type: !7)
!7332 = !DILocation(line: 901, column: 24, scope: !7323)
!7333 = !DILocalVariable(name: "buf", scope: !7323, file: !3, line: 902, type: !4540)
!7334 = !DILocation(line: 902, column: 7, scope: !7323)
!7335 = !DILocation(line: 904, column: 31, scope: !7323)
!7336 = !DILocation(line: 904, column: 52, scope: !7323)
!7337 = !DILocation(line: 904, column: 57, scope: !7323)
!7338 = !DILocation(line: 904, column: 12, scope: !7323)
!7339 = !DILocation(line: 904, column: 10, scope: !7323)
!7340 = !DILocation(line: 906, column: 7, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 906, column: 7)
!7342 = !DILocation(line: 906, column: 14, scope: !7341)
!7343 = !DILocation(line: 906, column: 7, scope: !7323)
!7344 = !DILocation(line: 907, column: 4, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 906, column: 43)
!7346 = !DILocation(line: 908, column: 12, scope: !7345)
!7347 = !DILocation(line: 908, column: 19, scope: !7345)
!7348 = !DILocation(line: 908, column: 11, scope: !7345)
!7349 = !DILocation(line: 908, column: 26, scope: !7345)
!7350 = !DILocation(line: 908, column: 4, scope: !7345)
!7351 = !DILocation(line: 911, column: 38, scope: !7323)
!7352 = !DILocation(line: 911, column: 43, scope: !7323)
!7353 = !DILocation(line: 911, column: 9, scope: !7323)
!7354 = !DILocation(line: 911, column: 7, scope: !7323)
!7355 = !DILocation(line: 912, column: 11, scope: !7323)
!7356 = !DILocation(line: 912, column: 9, scope: !7323)
!7357 = !DILocation(line: 913, column: 9, scope: !7323)
!7358 = !DILocation(line: 913, column: 14, scope: !7323)
!7359 = !DILocation(line: 913, column: 7, scope: !7323)
!7360 = !DILocation(line: 915, column: 7, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 915, column: 7)
!7362 = !DILocation(line: 915, column: 13, scope: !7361)
!7363 = !DILocation(line: 915, column: 7, scope: !7323)
!7364 = !DILocation(line: 916, column: 10, scope: !7361)
!7365 = !DILocation(line: 916, column: 4, scope: !7361)
!7366 = !DILocation(line: 922, column: 31, scope: !7323)
!7367 = !DILocation(line: 922, column: 52, scope: !7323)
!7368 = !DILocation(line: 922, column: 57, scope: !7323)
!7369 = !DILocation(line: 923, column: 5, scope: !7323)
!7370 = !DILocation(line: 922, column: 12, scope: !7323)
!7371 = !DILocation(line: 922, column: 10, scope: !7323)
!7372 = !DILocation(line: 924, column: 7, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 924, column: 7)
!7374 = !DILocation(line: 924, column: 17, scope: !7373)
!7375 = !DILocation(line: 924, column: 14, scope: !7373)
!7376 = !DILocation(line: 924, column: 7, scope: !7323)
!7377 = !DILocation(line: 925, column: 4, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 924, column: 24)
!7379 = !DILocation(line: 927, column: 12, scope: !7378)
!7380 = !DILocation(line: 927, column: 19, scope: !7378)
!7381 = !DILocation(line: 927, column: 11, scope: !7378)
!7382 = !DILocation(line: 927, column: 26, scope: !7378)
!7383 = !DILocation(line: 927, column: 4, scope: !7378)
!7384 = !DILocation(line: 930, column: 10, scope: !7323)
!7385 = !DILocation(line: 931, column: 9, scope: !7323)
!7386 = !DILocation(line: 931, column: 14, scope: !7323)
!7387 = !DILocation(line: 931, column: 7, scope: !7323)
!7388 = !DILocation(line: 932, column: 10, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 932, column: 3)
!7390 = !DILocation(line: 932, column: 8, scope: !7389)
!7391 = !DILocation(line: 932, column: 15, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 932, column: 3)
!7393 = !DILocation(line: 932, column: 19, scope: !7392)
!7394 = !DILocation(line: 932, column: 17, scope: !7392)
!7395 = !DILocation(line: 932, column: 3, scope: !7389)
!7396 = !DILocation(line: 933, column: 11, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 932, column: 29)
!7398 = !DILocation(line: 933, column: 8, scope: !7397)
!7399 = !DILocation(line: 934, column: 8, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 934, column: 8)
!7401 = !DILocation(line: 934, column: 12, scope: !7400)
!7402 = !DILocation(line: 935, column: 6, scope: !7400)
!7403 = !DILocation(line: 935, column: 11, scope: !7400)
!7404 = !DILocation(line: 935, column: 17, scope: !7400)
!7405 = !DILocation(line: 935, column: 15, scope: !7400)
!7406 = !DILocation(line: 934, column: 48, scope: !7400)
!7407 = !DILocation(line: 934, column: 8, scope: !7397)
!7408 = !DILocation(line: 936, column: 5, scope: !7400)
!7409 = !DILocation(line: 938, column: 42, scope: !7397)
!7410 = !DILocation(line: 938, column: 13, scope: !7397)
!7411 = !DILocation(line: 938, column: 11, scope: !7397)
!7412 = !DILocation(line: 939, column: 13, scope: !7397)
!7413 = !DILocation(line: 939, column: 21, scope: !7397)
!7414 = !DILocation(line: 939, column: 11, scope: !7397)
!7415 = !DILocation(line: 941, column: 8, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 941, column: 8)
!7417 = !DILocation(line: 941, column: 16, scope: !7416)
!7418 = !DILocation(line: 941, column: 32, scope: !7416)
!7419 = !DILocation(line: 941, column: 8, scope: !7397)
!7420 = !DILocation(line: 943, column: 5, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 942, column: 32)
!7422 = !DILocation(line: 944, column: 5, scope: !7421)
!7423 = !DILocation(line: 947, column: 12, scope: !7397)
!7424 = !DILocation(line: 947, column: 20, scope: !7397)
!7425 = !DILocation(line: 947, column: 4, scope: !7397)
!7426 = !DILocation(line: 949, column: 9, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 949, column: 9)
!7428 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 947, column: 40)
!7429 = !DILocation(line: 949, column: 13, scope: !7427)
!7430 = !DILocation(line: 950, column: 7, scope: !7427)
!7431 = !DILocation(line: 950, column: 12, scope: !7427)
!7432 = !DILocation(line: 950, column: 18, scope: !7427)
!7433 = !DILocation(line: 950, column: 16, scope: !7427)
!7434 = !DILocation(line: 949, column: 39, scope: !7427)
!7435 = !DILocation(line: 950, column: 24, scope: !7427)
!7436 = !DILocation(line: 951, column: 20, scope: !7427)
!7437 = !DILocation(line: 951, column: 25, scope: !7427)
!7438 = !DILocation(line: 951, column: 8, scope: !7427)
!7439 = !DILocation(line: 949, column: 9, scope: !7428)
!7440 = !DILocation(line: 952, column: 6, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 951, column: 31)
!7442 = !DILocation(line: 953, column: 6, scope: !7441)
!7443 = !DILocation(line: 955, column: 5, scope: !7428)
!7444 = !DILocation(line: 957, column: 9, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 957, column: 9)
!7446 = !DILocation(line: 957, column: 13, scope: !7445)
!7447 = !DILocation(line: 958, column: 7, scope: !7445)
!7448 = !DILocation(line: 958, column: 12, scope: !7445)
!7449 = !DILocation(line: 958, column: 18, scope: !7445)
!7450 = !DILocation(line: 958, column: 16, scope: !7445)
!7451 = !DILocation(line: 957, column: 38, scope: !7445)
!7452 = !DILocation(line: 958, column: 24, scope: !7445)
!7453 = !DILocation(line: 959, column: 23, scope: !7445)
!7454 = !DILocation(line: 959, column: 28, scope: !7445)
!7455 = !DILocation(line: 959, column: 8, scope: !7445)
!7456 = !DILocation(line: 957, column: 9, scope: !7428)
!7457 = !DILocation(line: 960, column: 6, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 959, column: 34)
!7459 = !DILocation(line: 961, column: 6, scope: !7458)
!7460 = !DILocation(line: 963, column: 5, scope: !7428)
!7461 = !DILocation(line: 965, column: 9, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 965, column: 9)
!7463 = !DILocation(line: 965, column: 13, scope: !7462)
!7464 = !DILocation(line: 966, column: 7, scope: !7462)
!7465 = !DILocation(line: 966, column: 12, scope: !7462)
!7466 = !DILocation(line: 966, column: 18, scope: !7462)
!7467 = !DILocation(line: 966, column: 16, scope: !7462)
!7468 = !DILocation(line: 965, column: 43, scope: !7462)
!7469 = !DILocation(line: 966, column: 24, scope: !7462)
!7470 = !DILocation(line: 967, column: 23, scope: !7462)
!7471 = !DILocation(line: 967, column: 28, scope: !7462)
!7472 = !DILocation(line: 967, column: 8, scope: !7462)
!7473 = !DILocation(line: 965, column: 9, scope: !7428)
!7474 = !DILocation(line: 968, column: 6, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 967, column: 34)
!7476 = !DILocation(line: 969, column: 6, scope: !7475)
!7477 = !DILocation(line: 971, column: 5, scope: !7428)
!7478 = !DILocation(line: 973, column: 5, scope: !7428)
!7479 = !DILocation(line: 975, column: 3, scope: !7397)
!7480 = !DILocation(line: 932, column: 25, scope: !7392)
!7481 = !DILocation(line: 932, column: 3, scope: !7392)
!7482 = distinct !{!7482, !7395, !7483}
!7483 = !DILocation(line: 975, column: 3, scope: !7389)
!7484 = !DILocation(line: 976, column: 2, scope: !7323)
!7485 = !DILocation(line: 979, column: 9, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 979, column: 2)
!7487 = !DILocation(line: 979, column: 7, scope: !7486)
!7488 = !DILocation(line: 979, column: 14, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 979, column: 2)
!7490 = !DILocation(line: 979, column: 18, scope: !7489)
!7491 = !DILocation(line: 979, column: 24, scope: !7489)
!7492 = !DILocation(line: 979, column: 35, scope: !7489)
!7493 = !DILocation(line: 979, column: 16, scope: !7489)
!7494 = !DILocation(line: 979, column: 2, scope: !7486)
!7495 = !DILocation(line: 980, column: 31, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 979, column: 60)
!7497 = !DILocation(line: 980, column: 52, scope: !7496)
!7498 = !DILocation(line: 981, column: 5, scope: !7496)
!7499 = !DILocation(line: 981, column: 10, scope: !7496)
!7500 = !DILocation(line: 980, column: 12, scope: !7496)
!7501 = !DILocation(line: 980, column: 10, scope: !7496)
!7502 = !DILocation(line: 982, column: 23, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7496, file: !3, line: 982, column: 7)
!7504 = !DILocation(line: 982, column: 28, scope: !7503)
!7505 = !DILocation(line: 982, column: 8, scope: !7503)
!7506 = !DILocation(line: 982, column: 7, scope: !7496)
!7507 = !DILocation(line: 983, column: 4, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7503, file: !3, line: 982, column: 37)
!7509 = !DILocation(line: 986, column: 12, scope: !7508)
!7510 = !DILocation(line: 986, column: 19, scope: !7508)
!7511 = !DILocation(line: 986, column: 11, scope: !7508)
!7512 = !DILocation(line: 986, column: 26, scope: !7508)
!7513 = !DILocation(line: 986, column: 4, scope: !7508)
!7514 = !DILocation(line: 992, column: 2, scope: !7496)
!7515 = !DILocation(line: 979, column: 56, scope: !7489)
!7516 = !DILocation(line: 979, column: 2, scope: !7489)
!7517 = distinct !{!7517, !7494, !7518}
!7518 = !DILocation(line: 992, column: 2, scope: !7486)
!7519 = !DILocation(line: 995, column: 6, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 995, column: 6)
!7521 = !DILocation(line: 995, column: 43, scope: !7520)
!7522 = !DILocation(line: 995, column: 6, scope: !7178)
!7523 = !DILocalVariable(name: "d", scope: !7524, file: !3, line: 996, type: !4158)
!7524 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 995, column: 54)
!7525 = !DILocation(line: 996, column: 36, scope: !7524)
!7526 = !DILocation(line: 999, column: 31, scope: !7524)
!7527 = !DILocation(line: 1000, column: 33, scope: !7524)
!7528 = !DILocation(line: 1000, column: 38, scope: !7524)
!7529 = !DILocation(line: 999, column: 12, scope: !7524)
!7530 = !DILocation(line: 999, column: 10, scope: !7524)
!7531 = !DILocation(line: 1002, column: 7, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 1002, column: 7)
!7533 = !DILocation(line: 1002, column: 14, scope: !7532)
!7534 = !DILocation(line: 1002, column: 7, scope: !7524)
!7535 = !DILocation(line: 1003, column: 8, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 1003, column: 8)
!7537 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 1002, column: 25)
!7538 = !DILocation(line: 1003, column: 14, scope: !7536)
!7539 = !DILocation(line: 1003, column: 20, scope: !7536)
!7540 = !DILocation(line: 1003, column: 8, scope: !7537)
!7541 = !DILocation(line: 1004, column: 5, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 1003, column: 39)
!7543 = !DILocation(line: 1007, column: 12, scope: !7542)
!7544 = !DILocation(line: 1007, column: 5, scope: !7542)
!7545 = !DILocation(line: 1010, column: 3, scope: !7537)
!7546 = !DILocation(line: 1010, column: 14, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 1010, column: 14)
!7548 = !DILocation(line: 1010, column: 21, scope: !7547)
!7549 = !DILocation(line: 1010, column: 14, scope: !7532)
!7550 = !DILocation(line: 1011, column: 4, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 1010, column: 65)
!7552 = !DILocation(line: 1012, column: 12, scope: !7551)
!7553 = !DILocation(line: 1012, column: 19, scope: !7551)
!7554 = !DILocation(line: 1012, column: 11, scope: !7551)
!7555 = !DILocation(line: 1012, column: 26, scope: !7551)
!7556 = !DILocation(line: 1012, column: 4, scope: !7551)
!7557 = !DILocation(line: 1014, column: 44, scope: !7547)
!7558 = !DILocation(line: 1014, column: 49, scope: !7547)
!7559 = !DILocation(line: 1014, column: 8, scope: !7547)
!7560 = !DILocation(line: 1014, column: 6, scope: !7547)
!7561 = !DILocation(line: 1017, column: 7, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 1017, column: 7)
!7563 = !DILocation(line: 1017, column: 7, scope: !7524)
!7564 = !DILocalVariable(name: "max", scope: !7565, file: !3, line: 1018, type: !7)
!7565 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 1017, column: 10)
!7566 = !DILocation(line: 1018, column: 13, scope: !7565)
!7567 = !DILocation(line: 1018, column: 19, scope: !7565)
!7568 = !DILocation(line: 1018, column: 22, scope: !7565)
!7569 = !DILocation(line: 1019, column: 11, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 1019, column: 4)
!7571 = !DILocation(line: 1019, column: 9, scope: !7570)
!7572 = !DILocation(line: 1019, column: 16, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 1019, column: 4)
!7574 = !DILocation(line: 1019, column: 20, scope: !7573)
!7575 = !DILocation(line: 1019, column: 18, scope: !7573)
!7576 = !DILocation(line: 1019, column: 4, scope: !7570)
!7577 = !DILocation(line: 1020, column: 33, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 1019, column: 30)
!7579 = !DILocation(line: 1021, column: 33, scope: !7578)
!7580 = !DILocation(line: 1022, column: 6, scope: !7578)
!7581 = !DILocation(line: 1022, column: 11, scope: !7578)
!7582 = !DILocation(line: 1020, column: 14, scope: !7578)
!7583 = !DILocation(line: 1020, column: 12, scope: !7578)
!7584 = !DILocation(line: 1023, column: 25, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 1023, column: 9)
!7586 = !DILocation(line: 1023, column: 30, scope: !7585)
!7587 = !DILocation(line: 1023, column: 10, scope: !7585)
!7588 = !DILocation(line: 1023, column: 9, scope: !7578)
!7589 = !DILocation(line: 1024, column: 6, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 1023, column: 39)
!7591 = !DILocation(line: 1027, column: 14, scope: !7590)
!7592 = !DILocation(line: 1027, column: 21, scope: !7590)
!7593 = !DILocation(line: 1027, column: 13, scope: !7590)
!7594 = !DILocation(line: 1027, column: 28, scope: !7590)
!7595 = !DILocation(line: 1027, column: 6, scope: !7590)
!7596 = !DILocation(line: 1029, column: 4, scope: !7578)
!7597 = !DILocation(line: 1019, column: 26, scope: !7573)
!7598 = !DILocation(line: 1019, column: 4, scope: !7573)
!7599 = distinct !{!7599, !7576, !7600}
!7600 = !DILocation(line: 1029, column: 4, scope: !7570)
!7601 = !DILocation(line: 1030, column: 3, scope: !7565)
!7602 = !DILocation(line: 1031, column: 2, scope: !7524)
!7603 = !DILocation(line: 1035, column: 30, scope: !7178)
!7604 = !DILocation(line: 1035, column: 57, scope: !7178)
!7605 = !DILocation(line: 1035, column: 62, scope: !7178)
!7606 = !DILocation(line: 1035, column: 11, scope: !7178)
!7607 = !DILocation(line: 1035, column: 9, scope: !7178)
!7608 = !DILocation(line: 1036, column: 6, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 1036, column: 6)
!7610 = !DILocation(line: 1036, column: 6, scope: !7178)
!7611 = !DILocation(line: 1037, column: 3, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1036, column: 14)
!7613 = !DILocation(line: 1038, column: 10, scope: !7612)
!7614 = !DILocation(line: 1038, column: 3, scope: !7612)
!7615 = !DILocation(line: 1045, column: 30, scope: !7178)
!7616 = !DILocation(line: 1046, column: 4, scope: !7178)
!7617 = !DILocation(line: 1046, column: 11, scope: !7178)
!7618 = !DILocation(line: 1046, column: 25, scope: !7178)
!7619 = !DILocation(line: 1046, column: 30, scope: !7178)
!7620 = !DILocation(line: 1046, column: 48, scope: !7178)
!7621 = !DILocation(line: 1046, column: 53, scope: !7178)
!7622 = !DILocation(line: 1045, column: 11, scope: !7178)
!7623 = !DILocation(line: 1045, column: 9, scope: !7178)
!7624 = !DILocation(line: 1047, column: 6, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 1047, column: 6)
!7626 = !DILocation(line: 1047, column: 6, scope: !7178)
!7627 = !DILocation(line: 1048, column: 3, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7625, file: !3, line: 1047, column: 14)
!7629 = !DILocation(line: 1049, column: 10, scope: !7628)
!7630 = !DILocation(line: 1049, column: 3, scope: !7628)
!7631 = !DILocation(line: 1053, column: 2, scope: !7178)
!7632 = !DILocation(line: 1054, column: 1, scope: !7178)
!7633 = distinct !DISubprogram(name: "test_ctrl_queue", scope: !3, file: !3, line: 1201, type: !7634, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{!168, !4522, !5003}
!7636 = !DILocalVariable(name: "lock", arg: 1, scope: !7637, file: !7638, line: 402, type: !1043)
!7637 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !7638, file: !7638, line: 402, type: !7639, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!7638 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!7639 = !DISubroutineType(types: !7640)
!7640 = !{null, !1043}
!7641 = !DILocation(line: 402, column: 57, scope: !7637, inlinedAt: !7642)
!7642 = distinct !DILocation(line: 1398, column: 2, scope: !7633)
!7643 = !DILocalVariable(name: "lock", arg: 1, scope: !7644, file: !7638, line: 377, type: !1043)
!7644 = distinct !DISubprogram(name: "spin_lock_irq", scope: !7638, file: !7638, line: 377, type: !7639, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!7645 = !DILocation(line: 377, column: 55, scope: !7644, inlinedAt: !7646)
!7646 = distinct !DILocation(line: 1387, column: 2, scope: !7633)
!7647 = !DILocation(line: 445, column: 72, scope: !4461, inlinedAt: !7648)
!7648 = distinct !DILocation(line: 552, column: 10, scope: !4466, inlinedAt: !7649)
!7649 = distinct !DILocation(line: 1373, column: 10, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 1227, column: 37)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 1227, column: 2)
!7652 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1227, column: 2)
!7653 = !DILocation(line: 446, column: 9, scope: !4461, inlinedAt: !7648)
!7654 = !DILocation(line: 446, column: 23, scope: !4461, inlinedAt: !7648)
!7655 = !DILocation(line: 448, column: 8, scope: !4461, inlinedAt: !7648)
!7656 = !DILocation(line: 318, column: 67, scope: !4479, inlinedAt: !7657)
!7657 = distinct !DILocation(line: 553, column: 20, scope: !4466, inlinedAt: !7649)
!7658 = !DILocation(line: 346, column: 58, scope: !4485, inlinedAt: !7659)
!7659 = distinct !DILocation(line: 547, column: 11, scope: !4466, inlinedAt: !7649)
!7660 = !DILocation(line: 472, column: 28, scope: !4491, inlinedAt: !7661)
!7661 = distinct !DILocation(line: 481, column: 9, scope: !4496, inlinedAt: !7662)
!7662 = distinct !DILocation(line: 545, column: 11, scope: !4498, inlinedAt: !7649)
!7663 = !DILocation(line: 472, column: 40, scope: !4491, inlinedAt: !7661)
!7664 = !DILocation(line: 472, column: 60, scope: !4491, inlinedAt: !7661)
!7665 = !DILocation(line: 478, column: 51, scope: !4496, inlinedAt: !7662)
!7666 = !DILocation(line: 478, column: 63, scope: !4496, inlinedAt: !7662)
!7667 = !DILocation(line: 480, column: 15, scope: !4496, inlinedAt: !7662)
!7668 = !DILocation(line: 538, column: 45, scope: !4468, inlinedAt: !7649)
!7669 = !DILocation(line: 538, column: 57, scope: !4468, inlinedAt: !7649)
!7670 = !DILocation(line: 542, column: 16, scope: !4466, inlinedAt: !7649)
!7671 = !DILocalVariable(name: "lock", arg: 1, scope: !7672, file: !7638, line: 327, type: !1043)
!7672 = distinct !DISubprogram(name: "spinlock_check", scope: !7638, file: !7638, line: 327, type: !7673, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!7673 = !DISubroutineType(types: !7674)
!7674 = !{!7675, !1043}
!7675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!7676 = !DILocation(line: 327, column: 67, scope: !7672, inlinedAt: !7677)
!7677 = distinct !DILocation(line: 1211, column: 2, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1211, column: 2)
!7679 = !DILocalVariable(name: "dev", arg: 1, scope: !7633, file: !3, line: 1201, type: !4522)
!7680 = !DILocation(line: 1201, column: 37, scope: !7633)
!7681 = !DILocalVariable(name: "param", arg: 2, scope: !7633, file: !3, line: 1201, type: !5003)
!7682 = !DILocation(line: 1201, column: 67, scope: !7633)
!7683 = !DILocalVariable(name: "udev", scope: !7633, file: !3, line: 1203, type: !170)
!7684 = !DILocation(line: 1203, column: 21, scope: !7633)
!7685 = !DILocation(line: 1203, column: 46, scope: !7633)
!7686 = !DILocation(line: 1203, column: 28, scope: !7633)
!7687 = !DILocalVariable(name: "urb", scope: !7633, file: !3, line: 1204, type: !4088)
!7688 = !DILocation(line: 1204, column: 16, scope: !7633)
!7689 = !DILocalVariable(name: "context", scope: !7633, file: !3, line: 1205, type: !7690)
!7690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctrl_ctx", file: !3, line: 1067, size: 576, elements: !7691)
!7691 = !{!7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700}
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7690, file: !3, line: 1068, baseType: !221)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7690, file: !3, line: 1069, baseType: !4522, size: 64)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !7690, file: !3, line: 1070, baseType: !1479, size: 192, offset: 64)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7690, file: !3, line: 1071, baseType: !7, size: 32, offset: 256)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !7690, file: !3, line: 1072, baseType: !7, size: 32, offset: 288)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !7690, file: !3, line: 1073, baseType: !168, size: 32, offset: 320)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "urb", scope: !7690, file: !3, line: 1074, baseType: !4088, size: 64, offset: 384)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !7690, file: !3, line: 1075, baseType: !5003, size: 64, offset: 448)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !7690, file: !3, line: 1076, baseType: !168, size: 32, offset: 512)
!7701 = !DILocation(line: 1205, column: 19, scope: !7633)
!7702 = !DILocalVariable(name: "i", scope: !7633, file: !3, line: 1206, type: !168)
!7703 = !DILocation(line: 1206, column: 8, scope: !7633)
!7704 = !DILocation(line: 1208, column: 6, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1208, column: 6)
!7706 = !DILocation(line: 1208, column: 13, scope: !7705)
!7707 = !DILocation(line: 1208, column: 19, scope: !7705)
!7708 = !DILocation(line: 1208, column: 24, scope: !7705)
!7709 = !DILocation(line: 1208, column: 27, scope: !7705)
!7710 = !DILocation(line: 1208, column: 34, scope: !7705)
!7711 = !DILocation(line: 1208, column: 58, scope: !7705)
!7712 = !DILocation(line: 1208, column: 65, scope: !7705)
!7713 = !DILocation(line: 1208, column: 56, scope: !7705)
!7714 = !DILocation(line: 1208, column: 45, scope: !7705)
!7715 = !DILocation(line: 1208, column: 6, scope: !7633)
!7716 = !DILocation(line: 1209, column: 3, scope: !7705)
!7717 = !DILocation(line: 1211, column: 2, scope: !7633)
!7718 = !DILocation(line: 1211, column: 2, scope: !7678)
!7719 = !DILocation(line: 329, column: 10, scope: !7672, inlinedAt: !7677)
!7720 = !DILocation(line: 329, column: 16, scope: !7672, inlinedAt: !7677)
!7721 = !DILocation(line: 1212, column: 16, scope: !7633)
!7722 = !DILocation(line: 1212, column: 10, scope: !7633)
!7723 = !DILocation(line: 1212, column: 14, scope: !7633)
!7724 = !DILocation(line: 1213, column: 2, scope: !7633)
!7725 = !DILocation(line: 1214, column: 18, scope: !7633)
!7726 = !DILocation(line: 1214, column: 25, scope: !7633)
!7727 = !DILocation(line: 1214, column: 33, scope: !7633)
!7728 = !DILocation(line: 1214, column: 40, scope: !7633)
!7729 = !DILocation(line: 1214, column: 31, scope: !7633)
!7730 = !DILocation(line: 1214, column: 10, scope: !7633)
!7731 = !DILocation(line: 1214, column: 16, scope: !7633)
!7732 = !DILocation(line: 1215, column: 10, scope: !7633)
!7733 = !DILocation(line: 1215, column: 18, scope: !7633)
!7734 = !DILocation(line: 1216, column: 10, scope: !7633)
!7735 = !DILocation(line: 1216, column: 17, scope: !7633)
!7736 = !DILocation(line: 1217, column: 18, scope: !7633)
!7737 = !DILocation(line: 1217, column: 10, scope: !7633)
!7738 = !DILocation(line: 1217, column: 16, scope: !7633)
!7739 = !DILocation(line: 1218, column: 10, scope: !7633)
!7740 = !DILocation(line: 1218, column: 15, scope: !7633)
!7741 = !DILocation(line: 1224, column: 16, scope: !7633)
!7742 = !DILocation(line: 1224, column: 23, scope: !7633)
!7743 = !DILocation(line: 1224, column: 8, scope: !7633)
!7744 = !DILocation(line: 1224, column: 6, scope: !7633)
!7745 = !DILocation(line: 1225, column: 7, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1225, column: 6)
!7747 = !DILocation(line: 1225, column: 6, scope: !7633)
!7748 = !DILocation(line: 1226, column: 3, scope: !7746)
!7749 = !DILocation(line: 1227, column: 9, scope: !7652)
!7750 = !DILocation(line: 1227, column: 7, scope: !7652)
!7751 = !DILocation(line: 1227, column: 14, scope: !7651)
!7752 = !DILocation(line: 1227, column: 18, scope: !7651)
!7753 = !DILocation(line: 1227, column: 25, scope: !7651)
!7754 = !DILocation(line: 1227, column: 16, scope: !7651)
!7755 = !DILocation(line: 1227, column: 2, scope: !7652)
!7756 = !DILocalVariable(name: "pipe", scope: !7650, file: !3, line: 1228, type: !168)
!7757 = !DILocation(line: 1228, column: 9, scope: !7650)
!7758 = !DILocation(line: 1228, column: 16, scope: !7650)
!7759 = !DILocalVariable(name: "len", scope: !7650, file: !3, line: 1229, type: !7)
!7760 = !DILocation(line: 1229, column: 13, scope: !7650)
!7761 = !DILocalVariable(name: "u", scope: !7650, file: !3, line: 1230, type: !4089)
!7762 = !DILocation(line: 1230, column: 16, scope: !7650)
!7763 = !DILocalVariable(name: "req", scope: !7650, file: !3, line: 1231, type: !4172)
!7764 = !DILocation(line: 1231, column: 26, scope: !7650)
!7765 = !DILocalVariable(name: "reqp", scope: !7650, file: !3, line: 1232, type: !4179)
!7766 = !DILocation(line: 1232, column: 20, scope: !7650)
!7767 = !DILocalVariable(name: "expected", scope: !7650, file: !3, line: 1238, type: !168)
!7768 = !DILocation(line: 1238, column: 9, scope: !7650)
!7769 = !DILocation(line: 1244, column: 3, scope: !7650)
!7770 = !DILocation(line: 1245, column: 7, scope: !7650)
!7771 = !DILocation(line: 1245, column: 16, scope: !7650)
!7772 = !DILocation(line: 1246, column: 7, scope: !7650)
!7773 = !DILocation(line: 1246, column: 20, scope: !7650)
!7774 = !DILocation(line: 1248, column: 11, scope: !7650)
!7775 = !DILocation(line: 1248, column: 13, scope: !7650)
!7776 = !DILocation(line: 1248, column: 3, scope: !7650)
!7777 = !DILocation(line: 1250, column: 8, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1248, column: 29)
!7779 = !DILocation(line: 1250, column: 15, scope: !7778)
!7780 = !DILocation(line: 1251, column: 8, scope: !7778)
!7781 = !DILocation(line: 1252, column: 4, scope: !7778)
!7782 = !DILocation(line: 1254, column: 8, scope: !7778)
!7783 = !DILocation(line: 1254, column: 15, scope: !7778)
!7784 = !DILocation(line: 1255, column: 8, scope: !7778)
!7785 = !DILocation(line: 1256, column: 4, scope: !7778)
!7786 = !DILocation(line: 1258, column: 8, scope: !7778)
!7787 = !DILocation(line: 1258, column: 17, scope: !7778)
!7788 = !DILocation(line: 1259, column: 8, scope: !7778)
!7789 = !DILocation(line: 1259, column: 21, scope: !7778)
!7790 = !DILocation(line: 1261, column: 8, scope: !7778)
!7791 = !DILocation(line: 1262, column: 13, scope: !7778)
!7792 = !DILocation(line: 1263, column: 4, scope: !7778)
!7793 = !DILocation(line: 1265, column: 8, scope: !7778)
!7794 = !DILocation(line: 1265, column: 17, scope: !7778)
!7795 = !DILocation(line: 1266, column: 8, scope: !7778)
!7796 = !DILocation(line: 1266, column: 21, scope: !7778)
!7797 = !DILocation(line: 1268, column: 8, scope: !7778)
!7798 = !DILocation(line: 1269, column: 4, scope: !7778)
!7799 = !DILocation(line: 1271, column: 8, scope: !7778)
!7800 = !DILocation(line: 1271, column: 17, scope: !7778)
!7801 = !DILocation(line: 1272, column: 8, scope: !7778)
!7802 = !DILocation(line: 1272, column: 21, scope: !7778)
!7803 = !DILocation(line: 1273, column: 8, scope: !7778)
!7804 = !DILocation(line: 1274, column: 4, scope: !7778)
!7805 = !DILocation(line: 1276, column: 8, scope: !7778)
!7806 = !DILocation(line: 1276, column: 15, scope: !7778)
!7807 = !DILocation(line: 1277, column: 8, scope: !7778)
!7808 = !DILocation(line: 1278, column: 8, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1278, column: 8)
!7810 = !DILocation(line: 1278, column: 14, scope: !7809)
!7811 = !DILocation(line: 1278, column: 20, scope: !7809)
!7812 = !DILocation(line: 1278, column: 8, scope: !7778)
!7813 = !DILocation(line: 1279, column: 14, scope: !7809)
!7814 = !DILocation(line: 1279, column: 5, scope: !7809)
!7815 = !DILocation(line: 1280, column: 4, scope: !7778)
!7816 = !DILocation(line: 1282, column: 8, scope: !7778)
!7817 = !DILocation(line: 1282, column: 15, scope: !7778)
!7818 = !DILocation(line: 1283, column: 8, scope: !7778)
!7819 = !DILocation(line: 1284, column: 8, scope: !7778)
!7820 = !DILocation(line: 1285, column: 4, scope: !7778)
!7821 = !DILocation(line: 1287, column: 8, scope: !7778)
!7822 = !DILocation(line: 1287, column: 15, scope: !7778)
!7823 = !DILocation(line: 1289, column: 8, scope: !7778)
!7824 = !DILocation(line: 1290, column: 13, scope: !7778)
!7825 = !DILocation(line: 1291, column: 4, scope: !7778)
!7826 = !DILocation(line: 1295, column: 8, scope: !7778)
!7827 = !DILocation(line: 1295, column: 17, scope: !7778)
!7828 = !DILocation(line: 1296, column: 8, scope: !7778)
!7829 = !DILocation(line: 1296, column: 21, scope: !7778)
!7830 = !DILocation(line: 1299, column: 8, scope: !7778)
!7831 = !DILocation(line: 1300, column: 11, scope: !7778)
!7832 = !DILocation(line: 1300, column: 9, scope: !7778)
!7833 = !DILocation(line: 1301, column: 13, scope: !7778)
!7834 = !DILocation(line: 1302, column: 4, scope: !7778)
!7835 = !DILocation(line: 1304, column: 8, scope: !7778)
!7836 = !DILocation(line: 1304, column: 17, scope: !7778)
!7837 = !DILocation(line: 1305, column: 8, scope: !7778)
!7838 = !DILocation(line: 1305, column: 21, scope: !7778)
!7839 = !DILocation(line: 1307, column: 8, scope: !7778)
!7840 = !DILocation(line: 1308, column: 4, scope: !7778)
!7841 = !DILocation(line: 1310, column: 8, scope: !7778)
!7842 = !DILocation(line: 1310, column: 15, scope: !7778)
!7843 = !DILocation(line: 1311, column: 8, scope: !7778)
!7844 = !DILocation(line: 1312, column: 13, scope: !7778)
!7845 = !DILocation(line: 1313, column: 4, scope: !7778)
!7846 = !DILocation(line: 1316, column: 8, scope: !7778)
!7847 = !DILocation(line: 1316, column: 15, scope: !7778)
!7848 = !DILocation(line: 1318, column: 8, scope: !7778)
!7849 = !DILocation(line: 1319, column: 13, scope: !7778)
!7850 = !DILocation(line: 1320, column: 4, scope: !7778)
!7851 = !DILocation(line: 1323, column: 8, scope: !7778)
!7852 = !DILocation(line: 1323, column: 15, scope: !7778)
!7853 = !DILocation(line: 1325, column: 8, scope: !7778)
!7854 = !DILocation(line: 1327, column: 13, scope: !7778)
!7855 = !DILocation(line: 1328, column: 4, scope: !7778)
!7856 = !DILocation(line: 1330, column: 8, scope: !7778)
!7857 = !DILocation(line: 1330, column: 15, scope: !7778)
!7858 = !DILocation(line: 1332, column: 8, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1332, column: 8)
!7860 = !DILocation(line: 1332, column: 14, scope: !7859)
!7861 = !DILocation(line: 1332, column: 20, scope: !7859)
!7862 = !DILocation(line: 1332, column: 8, scope: !7778)
!7863 = !DILocation(line: 1333, column: 9, scope: !7859)
!7864 = !DILocation(line: 1333, column: 5, scope: !7859)
!7865 = !DILocation(line: 1335, column: 18, scope: !7859)
!7866 = !DILocation(line: 1335, column: 24, scope: !7859)
!7867 = !DILocation(line: 1335, column: 35, scope: !7859)
!7868 = !DILocation(line: 1335, column: 16, scope: !7859)
!7869 = !DILocation(line: 1335, column: 9, scope: !7859)
!7870 = !DILocation(line: 1336, column: 13, scope: !7778)
!7871 = !DILocation(line: 1337, column: 4, scope: !7778)
!7872 = !DILocation(line: 1339, column: 8, scope: !7778)
!7873 = !DILocation(line: 1339, column: 15, scope: !7778)
!7874 = !DILocation(line: 1341, column: 10, scope: !7778)
!7875 = !DILocation(line: 1341, column: 16, scope: !7778)
!7876 = !DILocation(line: 1341, column: 27, scope: !7778)
!7877 = !DILocation(line: 1341, column: 8, scope: !7778)
!7878 = !DILocation(line: 1342, column: 8, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1342, column: 8)
!7880 = !DILocation(line: 1342, column: 14, scope: !7879)
!7881 = !DILocation(line: 1342, column: 20, scope: !7879)
!7882 = !DILocation(line: 1342, column: 8, scope: !7778)
!7883 = !DILocation(line: 1343, column: 9, scope: !7879)
!7884 = !DILocation(line: 1343, column: 5, scope: !7879)
!7885 = !DILocation(line: 1344, column: 12, scope: !7778)
!7886 = !DILocation(line: 1344, column: 4, scope: !7778)
!7887 = !DILocation(line: 1346, column: 9, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1344, column: 17)
!7889 = !DILocation(line: 1347, column: 5, scope: !7888)
!7890 = !DILocation(line: 1349, column: 9, scope: !7888)
!7891 = !DILocation(line: 1350, column: 5, scope: !7888)
!7892 = !DILocation(line: 1352, column: 13, scope: !7778)
!7893 = !DILocation(line: 1353, column: 4, scope: !7778)
!7894 = !DILocation(line: 1355, column: 8, scope: !7778)
!7895 = !DILocation(line: 1355, column: 15, scope: !7778)
!7896 = !DILocation(line: 1356, column: 8, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1356, column: 8)
!7898 = !DILocation(line: 1356, column: 14, scope: !7897)
!7899 = !DILocation(line: 1356, column: 8, scope: !7778)
!7900 = !DILocation(line: 1357, column: 11, scope: !7897)
!7901 = !DILocation(line: 1357, column: 9, scope: !7897)
!7902 = !DILocation(line: 1357, column: 5, scope: !7897)
!7903 = !DILocation(line: 1359, column: 9, scope: !7897)
!7904 = !DILocation(line: 1360, column: 8, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1360, column: 8)
!7906 = !DILocation(line: 1360, column: 45, scope: !7905)
!7907 = !DILocation(line: 1360, column: 8, scope: !7778)
!7908 = !DILocation(line: 1361, column: 14, scope: !7905)
!7909 = !DILocation(line: 1361, column: 5, scope: !7905)
!7910 = !DILocation(line: 1362, column: 4, scope: !7778)
!7911 = !DILocation(line: 1364, column: 4, scope: !7778)
!7912 = !DILocation(line: 1365, column: 12, scope: !7778)
!7913 = !DILocation(line: 1365, column: 19, scope: !7778)
!7914 = !DILocation(line: 1366, column: 4, scope: !7778)
!7915 = !DILocation(line: 1368, column: 17, scope: !7650)
!7916 = !DILocation(line: 1368, column: 7, scope: !7650)
!7917 = !DILocation(line: 1368, column: 15, scope: !7650)
!7918 = !DILocation(line: 1369, column: 33, scope: !7650)
!7919 = !DILocation(line: 1369, column: 39, scope: !7650)
!7920 = !DILocation(line: 1369, column: 45, scope: !7650)
!7921 = !DILocation(line: 1369, column: 16, scope: !7650)
!7922 = !DILocation(line: 1369, column: 14, scope: !7650)
!7923 = !DILocation(line: 1369, column: 3, scope: !7650)
!7924 = !DILocation(line: 1369, column: 7, scope: !7650)
!7925 = !DILocation(line: 1369, column: 10, scope: !7650)
!7926 = !DILocation(line: 1370, column: 8, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1370, column: 7)
!7928 = !DILocation(line: 1370, column: 7, scope: !7650)
!7929 = !DILocation(line: 1371, column: 4, scope: !7927)
!7930 = !DILocation(line: 540, column: 27, scope: !4467, inlinedAt: !7649)
!7931 = !DILocation(line: 540, column: 6, scope: !4467, inlinedAt: !7649)
!7932 = !DILocation(line: 540, column: 6, scope: !4468, inlinedAt: !7649)
!7933 = !DILocation(line: 544, column: 7, scope: !4498, inlinedAt: !7649)
!7934 = !DILocation(line: 544, column: 12, scope: !4498, inlinedAt: !7649)
!7935 = !DILocation(line: 544, column: 7, scope: !4466, inlinedAt: !7649)
!7936 = !DILocation(line: 545, column: 25, scope: !4498, inlinedAt: !7649)
!7937 = !DILocation(line: 545, column: 31, scope: !4498, inlinedAt: !7649)
!7938 = !DILocation(line: 480, column: 33, scope: !4496, inlinedAt: !7662)
!7939 = !DILocation(line: 480, column: 23, scope: !4496, inlinedAt: !7662)
!7940 = !DILocation(line: 481, column: 29, scope: !4496, inlinedAt: !7662)
!7941 = !DILocation(line: 481, column: 35, scope: !4496, inlinedAt: !7662)
!7942 = !DILocation(line: 481, column: 42, scope: !4496, inlinedAt: !7662)
!7943 = !DILocation(line: 474, column: 23, scope: !4491, inlinedAt: !7661)
!7944 = !DILocation(line: 474, column: 29, scope: !4491, inlinedAt: !7661)
!7945 = !DILocation(line: 474, column: 36, scope: !4491, inlinedAt: !7661)
!7946 = !DILocation(line: 474, column: 9, scope: !4491, inlinedAt: !7661)
!7947 = !DILocation(line: 545, column: 4, scope: !4498, inlinedAt: !7649)
!7948 = !DILocation(line: 547, column: 25, scope: !4466, inlinedAt: !7649)
!7949 = !DILocation(line: 348, column: 7, scope: !4626, inlinedAt: !7659)
!7950 = !DILocation(line: 348, column: 6, scope: !4485, inlinedAt: !7659)
!7951 = !DILocation(line: 349, column: 3, scope: !4626, inlinedAt: !7659)
!7952 = !DILocation(line: 351, column: 6, scope: !4630, inlinedAt: !7659)
!7953 = !DILocation(line: 351, column: 11, scope: !4630, inlinedAt: !7659)
!7954 = !DILocation(line: 351, column: 6, scope: !4485, inlinedAt: !7659)
!7955 = !DILocation(line: 352, column: 3, scope: !4630, inlinedAt: !7659)
!7956 = !DILocation(line: 354, column: 32, scope: !4635, inlinedAt: !7659)
!7957 = !DILocation(line: 354, column: 37, scope: !4635, inlinedAt: !7659)
!7958 = !DILocation(line: 354, column: 42, scope: !4635, inlinedAt: !7659)
!7959 = !DILocation(line: 354, column: 45, scope: !4635, inlinedAt: !7659)
!7960 = !DILocation(line: 354, column: 50, scope: !4635, inlinedAt: !7659)
!7961 = !DILocation(line: 354, column: 6, scope: !4485, inlinedAt: !7659)
!7962 = !DILocation(line: 355, column: 3, scope: !4635, inlinedAt: !7659)
!7963 = !DILocation(line: 356, column: 32, scope: !4643, inlinedAt: !7659)
!7964 = !DILocation(line: 356, column: 37, scope: !4643, inlinedAt: !7659)
!7965 = !DILocation(line: 356, column: 43, scope: !4643, inlinedAt: !7659)
!7966 = !DILocation(line: 356, column: 46, scope: !4643, inlinedAt: !7659)
!7967 = !DILocation(line: 356, column: 51, scope: !4643, inlinedAt: !7659)
!7968 = !DILocation(line: 356, column: 6, scope: !4485, inlinedAt: !7659)
!7969 = !DILocation(line: 357, column: 3, scope: !4643, inlinedAt: !7659)
!7970 = !DILocation(line: 358, column: 6, scope: !4651, inlinedAt: !7659)
!7971 = !DILocation(line: 358, column: 11, scope: !4651, inlinedAt: !7659)
!7972 = !DILocation(line: 358, column: 6, scope: !4485, inlinedAt: !7659)
!7973 = !DILocation(line: 358, column: 26, scope: !4651, inlinedAt: !7659)
!7974 = !DILocation(line: 359, column: 6, scope: !4656, inlinedAt: !7659)
!7975 = !DILocation(line: 359, column: 11, scope: !4656, inlinedAt: !7659)
!7976 = !DILocation(line: 359, column: 6, scope: !4485, inlinedAt: !7659)
!7977 = !DILocation(line: 359, column: 26, scope: !4656, inlinedAt: !7659)
!7978 = !DILocation(line: 360, column: 6, scope: !4661, inlinedAt: !7659)
!7979 = !DILocation(line: 360, column: 11, scope: !4661, inlinedAt: !7659)
!7980 = !DILocation(line: 360, column: 6, scope: !4485, inlinedAt: !7659)
!7981 = !DILocation(line: 360, column: 26, scope: !4661, inlinedAt: !7659)
!7982 = !DILocation(line: 361, column: 6, scope: !4666, inlinedAt: !7659)
!7983 = !DILocation(line: 361, column: 11, scope: !4666, inlinedAt: !7659)
!7984 = !DILocation(line: 361, column: 6, scope: !4485, inlinedAt: !7659)
!7985 = !DILocation(line: 361, column: 26, scope: !4666, inlinedAt: !7659)
!7986 = !DILocation(line: 362, column: 6, scope: !4671, inlinedAt: !7659)
!7987 = !DILocation(line: 362, column: 11, scope: !4671, inlinedAt: !7659)
!7988 = !DILocation(line: 362, column: 6, scope: !4485, inlinedAt: !7659)
!7989 = !DILocation(line: 362, column: 26, scope: !4671, inlinedAt: !7659)
!7990 = !DILocation(line: 363, column: 6, scope: !4676, inlinedAt: !7659)
!7991 = !DILocation(line: 363, column: 11, scope: !4676, inlinedAt: !7659)
!7992 = !DILocation(line: 363, column: 6, scope: !4485, inlinedAt: !7659)
!7993 = !DILocation(line: 363, column: 26, scope: !4676, inlinedAt: !7659)
!7994 = !DILocation(line: 364, column: 6, scope: !4681, inlinedAt: !7659)
!7995 = !DILocation(line: 364, column: 11, scope: !4681, inlinedAt: !7659)
!7996 = !DILocation(line: 364, column: 6, scope: !4485, inlinedAt: !7659)
!7997 = !DILocation(line: 364, column: 26, scope: !4681, inlinedAt: !7659)
!7998 = !DILocation(line: 365, column: 6, scope: !4686, inlinedAt: !7659)
!7999 = !DILocation(line: 365, column: 11, scope: !4686, inlinedAt: !7659)
!8000 = !DILocation(line: 365, column: 6, scope: !4485, inlinedAt: !7659)
!8001 = !DILocation(line: 365, column: 26, scope: !4686, inlinedAt: !7659)
!8002 = !DILocation(line: 366, column: 6, scope: !4691, inlinedAt: !7659)
!8003 = !DILocation(line: 366, column: 11, scope: !4691, inlinedAt: !7659)
!8004 = !DILocation(line: 366, column: 6, scope: !4485, inlinedAt: !7659)
!8005 = !DILocation(line: 366, column: 26, scope: !4691, inlinedAt: !7659)
!8006 = !DILocation(line: 367, column: 6, scope: !4696, inlinedAt: !7659)
!8007 = !DILocation(line: 367, column: 11, scope: !4696, inlinedAt: !7659)
!8008 = !DILocation(line: 367, column: 6, scope: !4485, inlinedAt: !7659)
!8009 = !DILocation(line: 367, column: 26, scope: !4696, inlinedAt: !7659)
!8010 = !DILocation(line: 368, column: 6, scope: !4701, inlinedAt: !7659)
!8011 = !DILocation(line: 368, column: 11, scope: !4701, inlinedAt: !7659)
!8012 = !DILocation(line: 368, column: 6, scope: !4485, inlinedAt: !7659)
!8013 = !DILocation(line: 368, column: 26, scope: !4701, inlinedAt: !7659)
!8014 = !DILocation(line: 369, column: 6, scope: !4706, inlinedAt: !7659)
!8015 = !DILocation(line: 369, column: 11, scope: !4706, inlinedAt: !7659)
!8016 = !DILocation(line: 369, column: 6, scope: !4485, inlinedAt: !7659)
!8017 = !DILocation(line: 369, column: 26, scope: !4706, inlinedAt: !7659)
!8018 = !DILocation(line: 370, column: 6, scope: !4711, inlinedAt: !7659)
!8019 = !DILocation(line: 370, column: 11, scope: !4711, inlinedAt: !7659)
!8020 = !DILocation(line: 370, column: 6, scope: !4485, inlinedAt: !7659)
!8021 = !DILocation(line: 370, column: 26, scope: !4711, inlinedAt: !7659)
!8022 = !DILocation(line: 371, column: 6, scope: !4716, inlinedAt: !7659)
!8023 = !DILocation(line: 371, column: 11, scope: !4716, inlinedAt: !7659)
!8024 = !DILocation(line: 371, column: 6, scope: !4485, inlinedAt: !7659)
!8025 = !DILocation(line: 371, column: 26, scope: !4716, inlinedAt: !7659)
!8026 = !DILocation(line: 372, column: 6, scope: !4721, inlinedAt: !7659)
!8027 = !DILocation(line: 372, column: 11, scope: !4721, inlinedAt: !7659)
!8028 = !DILocation(line: 372, column: 6, scope: !4485, inlinedAt: !7659)
!8029 = !DILocation(line: 372, column: 26, scope: !4721, inlinedAt: !7659)
!8030 = !DILocation(line: 373, column: 6, scope: !4726, inlinedAt: !7659)
!8031 = !DILocation(line: 373, column: 11, scope: !4726, inlinedAt: !7659)
!8032 = !DILocation(line: 373, column: 6, scope: !4485, inlinedAt: !7659)
!8033 = !DILocation(line: 373, column: 26, scope: !4726, inlinedAt: !7659)
!8034 = !DILocation(line: 374, column: 6, scope: !4731, inlinedAt: !7659)
!8035 = !DILocation(line: 374, column: 11, scope: !4731, inlinedAt: !7659)
!8036 = !DILocation(line: 374, column: 6, scope: !4485, inlinedAt: !7659)
!8037 = !DILocation(line: 374, column: 26, scope: !4731, inlinedAt: !7659)
!8038 = !DILocation(line: 375, column: 6, scope: !4736, inlinedAt: !7659)
!8039 = !DILocation(line: 375, column: 11, scope: !4736, inlinedAt: !7659)
!8040 = !DILocation(line: 375, column: 6, scope: !4485, inlinedAt: !7659)
!8041 = !DILocation(line: 375, column: 27, scope: !4736, inlinedAt: !7659)
!8042 = !DILocation(line: 376, column: 6, scope: !4741, inlinedAt: !7659)
!8043 = !DILocation(line: 376, column: 11, scope: !4741, inlinedAt: !7659)
!8044 = !DILocation(line: 376, column: 6, scope: !4485, inlinedAt: !7659)
!8045 = !DILocation(line: 376, column: 32, scope: !4741, inlinedAt: !7659)
!8046 = !DILocation(line: 377, column: 6, scope: !4746, inlinedAt: !7659)
!8047 = !DILocation(line: 377, column: 11, scope: !4746, inlinedAt: !7659)
!8048 = !DILocation(line: 377, column: 6, scope: !4485, inlinedAt: !7659)
!8049 = !DILocation(line: 377, column: 32, scope: !4746, inlinedAt: !7659)
!8050 = !DILocation(line: 378, column: 6, scope: !4751, inlinedAt: !7659)
!8051 = !DILocation(line: 378, column: 11, scope: !4751, inlinedAt: !7659)
!8052 = !DILocation(line: 378, column: 6, scope: !4485, inlinedAt: !7659)
!8053 = !DILocation(line: 378, column: 32, scope: !4751, inlinedAt: !7659)
!8054 = !DILocation(line: 379, column: 6, scope: !4756, inlinedAt: !7659)
!8055 = !DILocation(line: 379, column: 11, scope: !4756, inlinedAt: !7659)
!8056 = !DILocation(line: 379, column: 6, scope: !4485, inlinedAt: !7659)
!8057 = !DILocation(line: 379, column: 33, scope: !4756, inlinedAt: !7659)
!8058 = !DILocation(line: 380, column: 6, scope: !4761, inlinedAt: !7659)
!8059 = !DILocation(line: 380, column: 11, scope: !4761, inlinedAt: !7659)
!8060 = !DILocation(line: 380, column: 6, scope: !4485, inlinedAt: !7659)
!8061 = !DILocation(line: 380, column: 33, scope: !4761, inlinedAt: !7659)
!8062 = !DILocation(line: 381, column: 6, scope: !4766, inlinedAt: !7659)
!8063 = !DILocation(line: 381, column: 11, scope: !4766, inlinedAt: !7659)
!8064 = !DILocation(line: 381, column: 6, scope: !4485, inlinedAt: !7659)
!8065 = !DILocation(line: 381, column: 33, scope: !4766, inlinedAt: !7659)
!8066 = !DILocation(line: 382, column: 2, scope: !4771, inlinedAt: !7659)
!8067 = !DILocation(line: 382, column: 2, scope: !4775, inlinedAt: !7659)
!8068 = !DILocation(line: 382, column: 2, scope: !4776, inlinedAt: !7659)
!8069 = !DILocation(line: 386, column: 1, scope: !4485, inlinedAt: !7659)
!8070 = !DILocation(line: 547, column: 9, scope: !4466, inlinedAt: !7649)
!8071 = !DILocation(line: 549, column: 8, scope: !4782, inlinedAt: !7649)
!8072 = !DILocation(line: 549, column: 7, scope: !4466, inlinedAt: !7649)
!8073 = !DILocation(line: 550, column: 4, scope: !4782, inlinedAt: !7649)
!8074 = !DILocation(line: 553, column: 33, scope: !4466, inlinedAt: !7649)
!8075 = !DILocation(line: 325, column: 6, scope: !4787, inlinedAt: !7657)
!8076 = !DILocation(line: 325, column: 6, scope: !4479, inlinedAt: !7657)
!8077 = !DILocation(line: 326, column: 3, scope: !4787, inlinedAt: !7657)
!8078 = !DILocation(line: 332, column: 9, scope: !4479, inlinedAt: !7657)
!8079 = !DILocation(line: 332, column: 15, scope: !4479, inlinedAt: !7657)
!8080 = !DILocation(line: 332, column: 2, scope: !4479, inlinedAt: !7657)
!8081 = !DILocation(line: 336, column: 1, scope: !4479, inlinedAt: !7657)
!8082 = !DILocation(line: 553, column: 5, scope: !4466, inlinedAt: !7649)
!8083 = !DILocation(line: 553, column: 41, scope: !4466, inlinedAt: !7649)
!8084 = !DILocation(line: 554, column: 5, scope: !4466, inlinedAt: !7649)
!8085 = !DILocation(line: 554, column: 12, scope: !4466, inlinedAt: !7649)
!8086 = !DILocation(line: 448, column: 31, scope: !4461, inlinedAt: !7648)
!8087 = !DILocation(line: 448, column: 34, scope: !4461, inlinedAt: !7648)
!8088 = !DILocation(line: 448, column: 14, scope: !4461, inlinedAt: !7648)
!8089 = !DILocation(line: 450, column: 22, scope: !4461, inlinedAt: !7648)
!8090 = !DILocation(line: 450, column: 25, scope: !4461, inlinedAt: !7648)
!8091 = !DILocation(line: 450, column: 30, scope: !4461, inlinedAt: !7648)
!8092 = !DILocation(line: 450, column: 36, scope: !4461, inlinedAt: !7648)
!8093 = !DILocation(line: 450, column: 8, scope: !4461, inlinedAt: !7648)
!8094 = !DILocation(line: 450, column: 6, scope: !4461, inlinedAt: !7648)
!8095 = !DILocation(line: 451, column: 9, scope: !4461, inlinedAt: !7648)
!8096 = !DILocation(line: 552, column: 3, scope: !4466, inlinedAt: !7649)
!8097 = !DILocation(line: 557, column: 19, scope: !4468, inlinedAt: !7649)
!8098 = !DILocation(line: 557, column: 25, scope: !4468, inlinedAt: !7649)
!8099 = !DILocation(line: 557, column: 9, scope: !4468, inlinedAt: !7649)
!8100 = !DILocation(line: 557, column: 2, scope: !4468, inlinedAt: !7649)
!8101 = !DILocation(line: 558, column: 1, scope: !4468, inlinedAt: !7649)
!8102 = !DILocation(line: 1373, column: 10, scope: !7650)
!8103 = !DILocation(line: 1373, column: 8, scope: !7650)
!8104 = !DILocation(line: 1374, column: 8, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1374, column: 7)
!8106 = !DILocation(line: 1374, column: 7, scope: !7650)
!8107 = !DILocation(line: 1375, column: 4, scope: !8105)
!8108 = !DILocation(line: 1376, column: 3, scope: !7650)
!8109 = !DILocation(line: 1376, column: 9, scope: !7650)
!8110 = !DILocation(line: 1376, column: 17, scope: !7650)
!8111 = !DILocation(line: 1377, column: 18, scope: !7650)
!8112 = !DILocation(line: 1377, column: 20, scope: !7650)
!8113 = !DILocation(line: 1377, column: 3, scope: !7650)
!8114 = !DILocation(line: 1377, column: 9, scope: !7650)
!8115 = !DILocation(line: 1377, column: 16, scope: !7650)
!8116 = !DILocation(line: 1378, column: 20, scope: !7650)
!8117 = !DILocation(line: 1378, column: 3, scope: !7650)
!8118 = !DILocation(line: 1378, column: 9, scope: !7650)
!8119 = !DILocation(line: 1378, column: 18, scope: !7650)
!8120 = !DILocation(line: 1379, column: 31, scope: !7650)
!8121 = !DILocation(line: 1379, column: 37, scope: !7650)
!8122 = !DILocation(line: 1379, column: 21, scope: !7650)
!8123 = !DILocation(line: 1379, column: 3, scope: !7650)
!8124 = !DILocation(line: 1379, column: 6, scope: !7650)
!8125 = !DILocation(line: 1379, column: 19, scope: !7650)
!8126 = !DILocation(line: 1381, column: 16, scope: !7650)
!8127 = !DILocation(line: 1381, column: 3, scope: !7650)
!8128 = !DILocation(line: 1381, column: 6, scope: !7650)
!8129 = !DILocation(line: 1381, column: 14, scope: !7650)
!8130 = !DILocation(line: 1382, column: 3, scope: !7650)
!8131 = !DILocation(line: 1382, column: 6, scope: !7650)
!8132 = !DILocation(line: 1382, column: 15, scope: !7650)
!8133 = !DILocation(line: 1383, column: 2, scope: !7650)
!8134 = !DILocation(line: 1227, column: 33, scope: !7651)
!8135 = !DILocation(line: 1227, column: 2, scope: !7651)
!8136 = distinct !{!8136, !7755, !8137}
!8137 = !DILocation(line: 1383, column: 2, scope: !7652)
!8138 = !DILocation(line: 1386, column: 16, scope: !7633)
!8139 = !DILocation(line: 1386, column: 10, scope: !7633)
!8140 = !DILocation(line: 1386, column: 14, scope: !7633)
!8141 = !DILocation(line: 1387, column: 25, scope: !7633)
!8142 = !DILocation(line: 379, column: 2, scope: !8143, inlinedAt: !7646)
!8143 = distinct !DILexicalBlock(scope: !8144, file: !7638, line: 379, column: 2)
!8144 = distinct !DILexicalBlock(scope: !7644, file: !7638, line: 379, column: 2)
!8145 = !DILocation(line: 379, column: 2, scope: !8146, inlinedAt: !7646)
!8146 = distinct !DILexicalBlock(scope: !8144, file: !7638, line: 379, column: 2)
!8147 = !{i32 -2145456003}
!8148 = !DILocation(line: 379, column: 2, scope: !8149, inlinedAt: !7646)
!8149 = distinct !DILexicalBlock(scope: !8146, file: !7638, line: 379, column: 2)
!8150 = !DILocation(line: 1388, column: 9, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1388, column: 2)
!8152 = !DILocation(line: 1388, column: 7, scope: !8151)
!8153 = !DILocation(line: 1388, column: 14, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1388, column: 2)
!8155 = !DILocation(line: 1388, column: 18, scope: !8154)
!8156 = !DILocation(line: 1388, column: 25, scope: !8154)
!8157 = !DILocation(line: 1388, column: 16, scope: !8154)
!8158 = !DILocation(line: 1388, column: 2, scope: !8151)
!8159 = !DILocation(line: 1389, column: 35, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 1388, column: 37)
!8161 = !DILocation(line: 1389, column: 39, scope: !8160)
!8162 = !DILocation(line: 1389, column: 20, scope: !8160)
!8163 = !DILocation(line: 1389, column: 11, scope: !8160)
!8164 = !DILocation(line: 1389, column: 18, scope: !8160)
!8165 = !DILocation(line: 1390, column: 15, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 1390, column: 7)
!8167 = !DILocation(line: 1390, column: 22, scope: !8166)
!8168 = !DILocation(line: 1390, column: 7, scope: !8160)
!8169 = !DILocation(line: 1391, column: 4, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 1390, column: 28)
!8171 = !DILocation(line: 1393, column: 28, scope: !8170)
!8172 = !DILocation(line: 1393, column: 12, scope: !8170)
!8173 = !DILocation(line: 1393, column: 18, scope: !8170)
!8174 = !DILocation(line: 1394, column: 4, scope: !8170)
!8175 = !DILocation(line: 1396, column: 11, scope: !8160)
!8176 = !DILocation(line: 1396, column: 18, scope: !8160)
!8177 = !DILocation(line: 1397, column: 2, scope: !8160)
!8178 = !DILocation(line: 1388, column: 33, scope: !8154)
!8179 = !DILocation(line: 1388, column: 2, scope: !8154)
!8180 = distinct !{!8180, !8158, !8181}
!8181 = !DILocation(line: 1397, column: 2, scope: !8151)
!8182 = !DILocation(line: 1398, column: 27, scope: !7633)
!8183 = !DILocation(line: 404, column: 2, scope: !8184, inlinedAt: !7642)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !7638, line: 404, column: 2)
!8185 = distinct !DILexicalBlock(scope: !7637, file: !7638, line: 404, column: 2)
!8186 = !DILocation(line: 404, column: 2, scope: !8187, inlinedAt: !7642)
!8187 = distinct !DILexicalBlock(scope: !8185, file: !7638, line: 404, column: 2)
!8188 = !{i32 -2145454255}
!8189 = !DILocation(line: 404, column: 2, scope: !8190, inlinedAt: !7642)
!8190 = distinct !DILexicalBlock(scope: !8187, file: !7638, line: 404, column: 2)
!8191 = !DILocation(line: 1403, column: 14, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1403, column: 6)
!8193 = !DILocation(line: 1403, column: 22, scope: !8192)
!8194 = !DILocation(line: 1403, column: 6, scope: !7633)
!8195 = !DILocation(line: 1404, column: 32, scope: !8192)
!8196 = !DILocation(line: 1404, column: 3, scope: !8192)
!8197 = !DILocation(line: 1403, column: 24, scope: !8192)
!8198 = !DILabel(scope: !7633, name: "cleanup", file: !3, line: 1406)
!8199 = !DILocation(line: 1406, column: 1, scope: !7633)
!8200 = !DILocation(line: 1407, column: 9, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1407, column: 2)
!8202 = !DILocation(line: 1407, column: 7, scope: !8201)
!8203 = !DILocation(line: 1407, column: 14, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 1407, column: 2)
!8205 = !DILocation(line: 1407, column: 18, scope: !8204)
!8206 = !DILocation(line: 1407, column: 25, scope: !8204)
!8207 = !DILocation(line: 1407, column: 16, scope: !8204)
!8208 = !DILocation(line: 1407, column: 2, scope: !8201)
!8209 = !DILocation(line: 1408, column: 8, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 1408, column: 7)
!8211 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 1407, column: 37)
!8212 = !DILocation(line: 1408, column: 12, scope: !8210)
!8213 = !DILocation(line: 1408, column: 7, scope: !8211)
!8214 = !DILocation(line: 1409, column: 4, scope: !8210)
!8215 = !DILocation(line: 1410, column: 17, scope: !8211)
!8216 = !DILocation(line: 1410, column: 3, scope: !8211)
!8217 = !DILocation(line: 1410, column: 7, scope: !8211)
!8218 = !DILocation(line: 1410, column: 11, scope: !8211)
!8219 = !DILocation(line: 1410, column: 15, scope: !8211)
!8220 = !DILocation(line: 1411, column: 9, scope: !8211)
!8221 = !DILocation(line: 1411, column: 13, scope: !8211)
!8222 = !DILocation(line: 1411, column: 17, scope: !8211)
!8223 = !DILocation(line: 1411, column: 3, scope: !8211)
!8224 = !DILocation(line: 1412, column: 19, scope: !8211)
!8225 = !DILocation(line: 1412, column: 23, scope: !8211)
!8226 = !DILocation(line: 1412, column: 3, scope: !8211)
!8227 = !DILocation(line: 1413, column: 2, scope: !8211)
!8228 = !DILocation(line: 1407, column: 33, scope: !8204)
!8229 = !DILocation(line: 1407, column: 2, scope: !8204)
!8230 = distinct !{!8230, !8208, !8231}
!8231 = !DILocation(line: 1413, column: 2, scope: !8201)
!8232 = !DILocation(line: 1414, column: 8, scope: !7633)
!8233 = !DILocation(line: 1414, column: 2, scope: !7633)
!8234 = !DILocation(line: 1415, column: 17, scope: !7633)
!8235 = !DILocation(line: 1415, column: 2, scope: !7633)
!8236 = !DILocation(line: 1416, column: 1, scope: !7633)
!8237 = distinct !DISubprogram(name: "unlink_simple", scope: !3, file: !3, line: 1513, type: !8238, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!8238 = !DISubroutineType(types: !8239)
!8239 = !{!168, !4522, !168, !168}
!8240 = !DILocalVariable(name: "dev", arg: 1, scope: !8237, file: !3, line: 1513, type: !4522)
!8241 = !DILocation(line: 1513, column: 46, scope: !8237)
!8242 = !DILocalVariable(name: "pipe", arg: 2, scope: !8237, file: !3, line: 1513, type: !168)
!8243 = !DILocation(line: 1513, column: 55, scope: !8237)
!8244 = !DILocalVariable(name: "len", arg: 3, scope: !8237, file: !3, line: 1513, type: !168)
!8245 = !DILocation(line: 1513, column: 65, scope: !8237)
!8246 = !DILocalVariable(name: "retval", scope: !8237, file: !3, line: 1515, type: !168)
!8247 = !DILocation(line: 1515, column: 8, scope: !8237)
!8248 = !DILocation(line: 1518, column: 19, scope: !8237)
!8249 = !DILocation(line: 1518, column: 24, scope: !8237)
!8250 = !DILocation(line: 1518, column: 30, scope: !8237)
!8251 = !DILocation(line: 1518, column: 11, scope: !8237)
!8252 = !DILocation(line: 1518, column: 9, scope: !8237)
!8253 = !DILocation(line: 1519, column: 7, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 1519, column: 6)
!8255 = !DILocation(line: 1519, column: 6, scope: !8237)
!8256 = !DILocation(line: 1520, column: 20, scope: !8254)
!8257 = !DILocation(line: 1520, column: 25, scope: !8254)
!8258 = !DILocation(line: 1520, column: 31, scope: !8254)
!8259 = !DILocation(line: 1520, column: 12, scope: !8254)
!8260 = !DILocation(line: 1520, column: 10, scope: !8254)
!8261 = !DILocation(line: 1520, column: 3, scope: !8254)
!8262 = !DILocation(line: 1521, column: 9, scope: !8237)
!8263 = !DILocation(line: 1521, column: 2, scope: !8237)
!8264 = distinct !DISubprogram(name: "halt_simple", scope: !3, file: !3, line: 1751, type: !7179, scopeLine: 1752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!8265 = !DILocalVariable(name: "dev", arg: 1, scope: !8264, file: !3, line: 1751, type: !4522)
!8266 = !DILocation(line: 1751, column: 44, scope: !8264)
!8267 = !DILocalVariable(name: "ep", scope: !8264, file: !3, line: 1753, type: !168)
!8268 = !DILocation(line: 1753, column: 8, scope: !8264)
!8269 = !DILocalVariable(name: "retval", scope: !8264, file: !3, line: 1754, type: !168)
!8270 = !DILocation(line: 1754, column: 8, scope: !8264)
!8271 = !DILocalVariable(name: "urb", scope: !8264, file: !3, line: 1755, type: !4089)
!8272 = !DILocation(line: 1755, column: 15, scope: !8264)
!8273 = !DILocalVariable(name: "udev", scope: !8264, file: !3, line: 1756, type: !170)
!8274 = !DILocation(line: 1756, column: 21, scope: !8264)
!8275 = !DILocation(line: 1756, column: 46, scope: !8264)
!8276 = !DILocation(line: 1756, column: 28, scope: !8264)
!8277 = !DILocation(line: 1758, column: 6, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 1758, column: 6)
!8279 = !DILocation(line: 1758, column: 12, scope: !8278)
!8280 = !DILocation(line: 1758, column: 18, scope: !8278)
!8281 = !DILocation(line: 1758, column: 6, scope: !8264)
!8282 = !DILocation(line: 1759, column: 26, scope: !8278)
!8283 = !DILocation(line: 1759, column: 9, scope: !8278)
!8284 = !DILocation(line: 1759, column: 7, scope: !8278)
!8285 = !DILocation(line: 1759, column: 3, scope: !8278)
!8286 = !DILocation(line: 1761, column: 26, scope: !8278)
!8287 = !DILocation(line: 1761, column: 9, scope: !8278)
!8288 = !DILocation(line: 1761, column: 7, scope: !8278)
!8289 = !DILocation(line: 1762, column: 6, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 1762, column: 6)
!8291 = !DILocation(line: 1762, column: 10, scope: !8290)
!8292 = !DILocation(line: 1762, column: 6, scope: !8264)
!8293 = !DILocation(line: 1763, column: 3, scope: !8290)
!8294 = !DILocation(line: 1765, column: 6, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 1765, column: 6)
!8296 = !DILocation(line: 1765, column: 11, scope: !8295)
!8297 = !DILocation(line: 1765, column: 6, scope: !8264)
!8298 = !DILocation(line: 1766, column: 8, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 1765, column: 20)
!8300 = !DILocation(line: 1766, column: 39, scope: !8299)
!8301 = !DILocation(line: 1766, column: 6, scope: !8299)
!8302 = !DILocation(line: 1767, column: 15, scope: !8299)
!8303 = !DILocation(line: 1767, column: 20, scope: !8299)
!8304 = !DILocation(line: 1767, column: 3, scope: !8299)
!8305 = !DILocation(line: 1767, column: 8, scope: !8299)
!8306 = !DILocation(line: 1767, column: 13, scope: !8299)
!8307 = !DILocation(line: 1768, column: 22, scope: !8299)
!8308 = !DILocation(line: 1768, column: 27, scope: !8299)
!8309 = !DILocation(line: 1768, column: 31, scope: !8299)
!8310 = !DILocation(line: 1768, column: 12, scope: !8299)
!8311 = !DILocation(line: 1768, column: 10, scope: !8299)
!8312 = !DILocation(line: 1769, column: 7, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 1769, column: 7)
!8314 = !DILocation(line: 1769, column: 14, scope: !8313)
!8315 = !DILocation(line: 1769, column: 7, scope: !8299)
!8316 = !DILocation(line: 1770, column: 4, scope: !8313)
!8317 = !DILocation(line: 1771, column: 2, scope: !8299)
!8318 = !DILocation(line: 1773, column: 6, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 1773, column: 6)
!8320 = !DILocation(line: 1773, column: 11, scope: !8319)
!8321 = !DILocation(line: 1773, column: 6, scope: !8264)
!8322 = !DILocation(line: 1774, column: 8, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 1773, column: 21)
!8324 = !DILocation(line: 1774, column: 6, scope: !8323)
!8325 = !DILocation(line: 1775, column: 15, scope: !8323)
!8326 = !DILocation(line: 1775, column: 20, scope: !8323)
!8327 = !DILocation(line: 1775, column: 3, scope: !8323)
!8328 = !DILocation(line: 1775, column: 8, scope: !8323)
!8329 = !DILocation(line: 1775, column: 13, scope: !8323)
!8330 = !DILocation(line: 1776, column: 22, scope: !8323)
!8331 = !DILocation(line: 1776, column: 27, scope: !8323)
!8332 = !DILocation(line: 1776, column: 31, scope: !8323)
!8333 = !DILocation(line: 1776, column: 12, scope: !8323)
!8334 = !DILocation(line: 1776, column: 10, scope: !8323)
!8335 = !DILocation(line: 1777, column: 2, scope: !8323)
!8336 = !DILabel(scope: !8264, name: "done", file: !3, line: 1778)
!8337 = !DILocation(line: 1778, column: 1, scope: !8264)
!8338 = !DILocation(line: 1779, column: 18, scope: !8264)
!8339 = !DILocation(line: 1779, column: 2, scope: !8264)
!8340 = !DILocation(line: 1780, column: 9, scope: !8264)
!8341 = !DILocation(line: 1780, column: 2, scope: !8264)
!8342 = !DILocation(line: 1781, column: 1, scope: !8264)
!8343 = distinct !DISubprogram(name: "ctrl_out", scope: !3, file: !3, line: 1820, type: !8344, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{!168, !4522, !7, !7, !7, !7}
!8346 = !DILocation(line: 445, column: 72, scope: !4461, inlinedAt: !8347)
!8347 = distinct !DILocation(line: 552, column: 10, scope: !4466, inlinedAt: !8348)
!8348 = distinct !DILocation(line: 1832, column: 8, scope: !8343)
!8349 = !DILocation(line: 446, column: 9, scope: !4461, inlinedAt: !8347)
!8350 = !DILocation(line: 446, column: 23, scope: !4461, inlinedAt: !8347)
!8351 = !DILocation(line: 448, column: 8, scope: !4461, inlinedAt: !8347)
!8352 = !DILocation(line: 318, column: 67, scope: !4479, inlinedAt: !8353)
!8353 = distinct !DILocation(line: 553, column: 20, scope: !4466, inlinedAt: !8348)
!8354 = !DILocation(line: 346, column: 58, scope: !4485, inlinedAt: !8355)
!8355 = distinct !DILocation(line: 547, column: 11, scope: !4466, inlinedAt: !8348)
!8356 = !DILocation(line: 472, column: 28, scope: !4491, inlinedAt: !8357)
!8357 = distinct !DILocation(line: 481, column: 9, scope: !4496, inlinedAt: !8358)
!8358 = distinct !DILocation(line: 545, column: 11, scope: !4498, inlinedAt: !8348)
!8359 = !DILocation(line: 472, column: 40, scope: !4491, inlinedAt: !8357)
!8360 = !DILocation(line: 472, column: 60, scope: !4491, inlinedAt: !8357)
!8361 = !DILocation(line: 478, column: 51, scope: !4496, inlinedAt: !8358)
!8362 = !DILocation(line: 478, column: 63, scope: !4496, inlinedAt: !8358)
!8363 = !DILocation(line: 480, column: 15, scope: !4496, inlinedAt: !8358)
!8364 = !DILocation(line: 538, column: 45, scope: !4468, inlinedAt: !8348)
!8365 = !DILocation(line: 538, column: 57, scope: !4468, inlinedAt: !8348)
!8366 = !DILocation(line: 542, column: 16, scope: !4466, inlinedAt: !8348)
!8367 = !DILocalVariable(name: "dev", arg: 1, scope: !8343, file: !3, line: 1820, type: !4522)
!8368 = !DILocation(line: 1820, column: 41, scope: !8343)
!8369 = !DILocalVariable(name: "count", arg: 2, scope: !8343, file: !3, line: 1821, type: !7)
!8370 = !DILocation(line: 1821, column: 12, scope: !8343)
!8371 = !DILocalVariable(name: "length", arg: 3, scope: !8343, file: !3, line: 1821, type: !7)
!8372 = !DILocation(line: 1821, column: 28, scope: !8343)
!8373 = !DILocalVariable(name: "vary", arg: 4, scope: !8343, file: !3, line: 1821, type: !7)
!8374 = !DILocation(line: 1821, column: 45, scope: !8343)
!8375 = !DILocalVariable(name: "offset", arg: 5, scope: !8343, file: !3, line: 1821, type: !7)
!8376 = !DILocation(line: 1821, column: 60, scope: !8343)
!8377 = !DILocalVariable(name: "i", scope: !8343, file: !3, line: 1823, type: !7)
!8378 = !DILocation(line: 1823, column: 12, scope: !8343)
!8379 = !DILocalVariable(name: "j", scope: !8343, file: !3, line: 1823, type: !7)
!8380 = !DILocation(line: 1823, column: 15, scope: !8343)
!8381 = !DILocalVariable(name: "len", scope: !8343, file: !3, line: 1823, type: !7)
!8382 = !DILocation(line: 1823, column: 18, scope: !8343)
!8383 = !DILocalVariable(name: "retval", scope: !8343, file: !3, line: 1824, type: !168)
!8384 = !DILocation(line: 1824, column: 8, scope: !8343)
!8385 = !DILocalVariable(name: "buf", scope: !8343, file: !3, line: 1825, type: !4540)
!8386 = !DILocation(line: 1825, column: 8, scope: !8343)
!8387 = !DILocalVariable(name: "what", scope: !8343, file: !3, line: 1826, type: !262)
!8388 = !DILocation(line: 1826, column: 10, scope: !8343)
!8389 = !DILocalVariable(name: "udev", scope: !8343, file: !3, line: 1827, type: !170)
!8390 = !DILocation(line: 1827, column: 21, scope: !8343)
!8391 = !DILocation(line: 1829, column: 6, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1829, column: 6)
!8393 = !DILocation(line: 1829, column: 13, scope: !8392)
!8394 = !DILocation(line: 1829, column: 17, scope: !8392)
!8395 = !DILocation(line: 1829, column: 20, scope: !8392)
!8396 = !DILocation(line: 1829, column: 27, scope: !8392)
!8397 = !DILocation(line: 1829, column: 36, scope: !8392)
!8398 = !DILocation(line: 1829, column: 39, scope: !8392)
!8399 = !DILocation(line: 1829, column: 47, scope: !8392)
!8400 = !DILocation(line: 1829, column: 44, scope: !8392)
!8401 = !DILocation(line: 1829, column: 6, scope: !8343)
!8402 = !DILocation(line: 1830, column: 3, scope: !8392)
!8403 = !DILocation(line: 1832, column: 16, scope: !8343)
!8404 = !DILocation(line: 1832, column: 25, scope: !8343)
!8405 = !DILocation(line: 1832, column: 23, scope: !8343)
!8406 = !DILocation(line: 540, column: 27, scope: !4467, inlinedAt: !8348)
!8407 = !DILocation(line: 540, column: 6, scope: !4467, inlinedAt: !8348)
!8408 = !DILocation(line: 540, column: 6, scope: !4468, inlinedAt: !8348)
!8409 = !DILocation(line: 544, column: 7, scope: !4498, inlinedAt: !8348)
!8410 = !DILocation(line: 544, column: 12, scope: !4498, inlinedAt: !8348)
!8411 = !DILocation(line: 544, column: 7, scope: !4466, inlinedAt: !8348)
!8412 = !DILocation(line: 545, column: 25, scope: !4498, inlinedAt: !8348)
!8413 = !DILocation(line: 545, column: 31, scope: !4498, inlinedAt: !8348)
!8414 = !DILocation(line: 480, column: 33, scope: !4496, inlinedAt: !8358)
!8415 = !DILocation(line: 480, column: 23, scope: !4496, inlinedAt: !8358)
!8416 = !DILocation(line: 481, column: 29, scope: !4496, inlinedAt: !8358)
!8417 = !DILocation(line: 481, column: 35, scope: !4496, inlinedAt: !8358)
!8418 = !DILocation(line: 481, column: 42, scope: !4496, inlinedAt: !8358)
!8419 = !DILocation(line: 474, column: 23, scope: !4491, inlinedAt: !8357)
!8420 = !DILocation(line: 474, column: 29, scope: !4491, inlinedAt: !8357)
!8421 = !DILocation(line: 474, column: 36, scope: !4491, inlinedAt: !8357)
!8422 = !DILocation(line: 474, column: 9, scope: !4491, inlinedAt: !8357)
!8423 = !DILocation(line: 545, column: 4, scope: !4498, inlinedAt: !8348)
!8424 = !DILocation(line: 547, column: 25, scope: !4466, inlinedAt: !8348)
!8425 = !DILocation(line: 348, column: 7, scope: !4626, inlinedAt: !8355)
!8426 = !DILocation(line: 348, column: 6, scope: !4485, inlinedAt: !8355)
!8427 = !DILocation(line: 349, column: 3, scope: !4626, inlinedAt: !8355)
!8428 = !DILocation(line: 351, column: 6, scope: !4630, inlinedAt: !8355)
!8429 = !DILocation(line: 351, column: 11, scope: !4630, inlinedAt: !8355)
!8430 = !DILocation(line: 351, column: 6, scope: !4485, inlinedAt: !8355)
!8431 = !DILocation(line: 352, column: 3, scope: !4630, inlinedAt: !8355)
!8432 = !DILocation(line: 354, column: 32, scope: !4635, inlinedAt: !8355)
!8433 = !DILocation(line: 354, column: 37, scope: !4635, inlinedAt: !8355)
!8434 = !DILocation(line: 354, column: 42, scope: !4635, inlinedAt: !8355)
!8435 = !DILocation(line: 354, column: 45, scope: !4635, inlinedAt: !8355)
!8436 = !DILocation(line: 354, column: 50, scope: !4635, inlinedAt: !8355)
!8437 = !DILocation(line: 354, column: 6, scope: !4485, inlinedAt: !8355)
!8438 = !DILocation(line: 355, column: 3, scope: !4635, inlinedAt: !8355)
!8439 = !DILocation(line: 356, column: 32, scope: !4643, inlinedAt: !8355)
!8440 = !DILocation(line: 356, column: 37, scope: !4643, inlinedAt: !8355)
!8441 = !DILocation(line: 356, column: 43, scope: !4643, inlinedAt: !8355)
!8442 = !DILocation(line: 356, column: 46, scope: !4643, inlinedAt: !8355)
!8443 = !DILocation(line: 356, column: 51, scope: !4643, inlinedAt: !8355)
!8444 = !DILocation(line: 356, column: 6, scope: !4485, inlinedAt: !8355)
!8445 = !DILocation(line: 357, column: 3, scope: !4643, inlinedAt: !8355)
!8446 = !DILocation(line: 358, column: 6, scope: !4651, inlinedAt: !8355)
!8447 = !DILocation(line: 358, column: 11, scope: !4651, inlinedAt: !8355)
!8448 = !DILocation(line: 358, column: 6, scope: !4485, inlinedAt: !8355)
!8449 = !DILocation(line: 358, column: 26, scope: !4651, inlinedAt: !8355)
!8450 = !DILocation(line: 359, column: 6, scope: !4656, inlinedAt: !8355)
!8451 = !DILocation(line: 359, column: 11, scope: !4656, inlinedAt: !8355)
!8452 = !DILocation(line: 359, column: 6, scope: !4485, inlinedAt: !8355)
!8453 = !DILocation(line: 359, column: 26, scope: !4656, inlinedAt: !8355)
!8454 = !DILocation(line: 360, column: 6, scope: !4661, inlinedAt: !8355)
!8455 = !DILocation(line: 360, column: 11, scope: !4661, inlinedAt: !8355)
!8456 = !DILocation(line: 360, column: 6, scope: !4485, inlinedAt: !8355)
!8457 = !DILocation(line: 360, column: 26, scope: !4661, inlinedAt: !8355)
!8458 = !DILocation(line: 361, column: 6, scope: !4666, inlinedAt: !8355)
!8459 = !DILocation(line: 361, column: 11, scope: !4666, inlinedAt: !8355)
!8460 = !DILocation(line: 361, column: 6, scope: !4485, inlinedAt: !8355)
!8461 = !DILocation(line: 361, column: 26, scope: !4666, inlinedAt: !8355)
!8462 = !DILocation(line: 362, column: 6, scope: !4671, inlinedAt: !8355)
!8463 = !DILocation(line: 362, column: 11, scope: !4671, inlinedAt: !8355)
!8464 = !DILocation(line: 362, column: 6, scope: !4485, inlinedAt: !8355)
!8465 = !DILocation(line: 362, column: 26, scope: !4671, inlinedAt: !8355)
!8466 = !DILocation(line: 363, column: 6, scope: !4676, inlinedAt: !8355)
!8467 = !DILocation(line: 363, column: 11, scope: !4676, inlinedAt: !8355)
!8468 = !DILocation(line: 363, column: 6, scope: !4485, inlinedAt: !8355)
!8469 = !DILocation(line: 363, column: 26, scope: !4676, inlinedAt: !8355)
!8470 = !DILocation(line: 364, column: 6, scope: !4681, inlinedAt: !8355)
!8471 = !DILocation(line: 364, column: 11, scope: !4681, inlinedAt: !8355)
!8472 = !DILocation(line: 364, column: 6, scope: !4485, inlinedAt: !8355)
!8473 = !DILocation(line: 364, column: 26, scope: !4681, inlinedAt: !8355)
!8474 = !DILocation(line: 365, column: 6, scope: !4686, inlinedAt: !8355)
!8475 = !DILocation(line: 365, column: 11, scope: !4686, inlinedAt: !8355)
!8476 = !DILocation(line: 365, column: 6, scope: !4485, inlinedAt: !8355)
!8477 = !DILocation(line: 365, column: 26, scope: !4686, inlinedAt: !8355)
!8478 = !DILocation(line: 366, column: 6, scope: !4691, inlinedAt: !8355)
!8479 = !DILocation(line: 366, column: 11, scope: !4691, inlinedAt: !8355)
!8480 = !DILocation(line: 366, column: 6, scope: !4485, inlinedAt: !8355)
!8481 = !DILocation(line: 366, column: 26, scope: !4691, inlinedAt: !8355)
!8482 = !DILocation(line: 367, column: 6, scope: !4696, inlinedAt: !8355)
!8483 = !DILocation(line: 367, column: 11, scope: !4696, inlinedAt: !8355)
!8484 = !DILocation(line: 367, column: 6, scope: !4485, inlinedAt: !8355)
!8485 = !DILocation(line: 367, column: 26, scope: !4696, inlinedAt: !8355)
!8486 = !DILocation(line: 368, column: 6, scope: !4701, inlinedAt: !8355)
!8487 = !DILocation(line: 368, column: 11, scope: !4701, inlinedAt: !8355)
!8488 = !DILocation(line: 368, column: 6, scope: !4485, inlinedAt: !8355)
!8489 = !DILocation(line: 368, column: 26, scope: !4701, inlinedAt: !8355)
!8490 = !DILocation(line: 369, column: 6, scope: !4706, inlinedAt: !8355)
!8491 = !DILocation(line: 369, column: 11, scope: !4706, inlinedAt: !8355)
!8492 = !DILocation(line: 369, column: 6, scope: !4485, inlinedAt: !8355)
!8493 = !DILocation(line: 369, column: 26, scope: !4706, inlinedAt: !8355)
!8494 = !DILocation(line: 370, column: 6, scope: !4711, inlinedAt: !8355)
!8495 = !DILocation(line: 370, column: 11, scope: !4711, inlinedAt: !8355)
!8496 = !DILocation(line: 370, column: 6, scope: !4485, inlinedAt: !8355)
!8497 = !DILocation(line: 370, column: 26, scope: !4711, inlinedAt: !8355)
!8498 = !DILocation(line: 371, column: 6, scope: !4716, inlinedAt: !8355)
!8499 = !DILocation(line: 371, column: 11, scope: !4716, inlinedAt: !8355)
!8500 = !DILocation(line: 371, column: 6, scope: !4485, inlinedAt: !8355)
!8501 = !DILocation(line: 371, column: 26, scope: !4716, inlinedAt: !8355)
!8502 = !DILocation(line: 372, column: 6, scope: !4721, inlinedAt: !8355)
!8503 = !DILocation(line: 372, column: 11, scope: !4721, inlinedAt: !8355)
!8504 = !DILocation(line: 372, column: 6, scope: !4485, inlinedAt: !8355)
!8505 = !DILocation(line: 372, column: 26, scope: !4721, inlinedAt: !8355)
!8506 = !DILocation(line: 373, column: 6, scope: !4726, inlinedAt: !8355)
!8507 = !DILocation(line: 373, column: 11, scope: !4726, inlinedAt: !8355)
!8508 = !DILocation(line: 373, column: 6, scope: !4485, inlinedAt: !8355)
!8509 = !DILocation(line: 373, column: 26, scope: !4726, inlinedAt: !8355)
!8510 = !DILocation(line: 374, column: 6, scope: !4731, inlinedAt: !8355)
!8511 = !DILocation(line: 374, column: 11, scope: !4731, inlinedAt: !8355)
!8512 = !DILocation(line: 374, column: 6, scope: !4485, inlinedAt: !8355)
!8513 = !DILocation(line: 374, column: 26, scope: !4731, inlinedAt: !8355)
!8514 = !DILocation(line: 375, column: 6, scope: !4736, inlinedAt: !8355)
!8515 = !DILocation(line: 375, column: 11, scope: !4736, inlinedAt: !8355)
!8516 = !DILocation(line: 375, column: 6, scope: !4485, inlinedAt: !8355)
!8517 = !DILocation(line: 375, column: 27, scope: !4736, inlinedAt: !8355)
!8518 = !DILocation(line: 376, column: 6, scope: !4741, inlinedAt: !8355)
!8519 = !DILocation(line: 376, column: 11, scope: !4741, inlinedAt: !8355)
!8520 = !DILocation(line: 376, column: 6, scope: !4485, inlinedAt: !8355)
!8521 = !DILocation(line: 376, column: 32, scope: !4741, inlinedAt: !8355)
!8522 = !DILocation(line: 377, column: 6, scope: !4746, inlinedAt: !8355)
!8523 = !DILocation(line: 377, column: 11, scope: !4746, inlinedAt: !8355)
!8524 = !DILocation(line: 377, column: 6, scope: !4485, inlinedAt: !8355)
!8525 = !DILocation(line: 377, column: 32, scope: !4746, inlinedAt: !8355)
!8526 = !DILocation(line: 378, column: 6, scope: !4751, inlinedAt: !8355)
!8527 = !DILocation(line: 378, column: 11, scope: !4751, inlinedAt: !8355)
!8528 = !DILocation(line: 378, column: 6, scope: !4485, inlinedAt: !8355)
!8529 = !DILocation(line: 378, column: 32, scope: !4751, inlinedAt: !8355)
!8530 = !DILocation(line: 379, column: 6, scope: !4756, inlinedAt: !8355)
!8531 = !DILocation(line: 379, column: 11, scope: !4756, inlinedAt: !8355)
!8532 = !DILocation(line: 379, column: 6, scope: !4485, inlinedAt: !8355)
!8533 = !DILocation(line: 379, column: 33, scope: !4756, inlinedAt: !8355)
!8534 = !DILocation(line: 380, column: 6, scope: !4761, inlinedAt: !8355)
!8535 = !DILocation(line: 380, column: 11, scope: !4761, inlinedAt: !8355)
!8536 = !DILocation(line: 380, column: 6, scope: !4485, inlinedAt: !8355)
!8537 = !DILocation(line: 380, column: 33, scope: !4761, inlinedAt: !8355)
!8538 = !DILocation(line: 381, column: 6, scope: !4766, inlinedAt: !8355)
!8539 = !DILocation(line: 381, column: 11, scope: !4766, inlinedAt: !8355)
!8540 = !DILocation(line: 381, column: 6, scope: !4485, inlinedAt: !8355)
!8541 = !DILocation(line: 381, column: 33, scope: !4766, inlinedAt: !8355)
!8542 = !DILocation(line: 382, column: 2, scope: !4771, inlinedAt: !8355)
!8543 = !DILocation(line: 382, column: 2, scope: !4775, inlinedAt: !8355)
!8544 = !DILocation(line: 382, column: 2, scope: !4776, inlinedAt: !8355)
!8545 = !DILocation(line: 386, column: 1, scope: !4485, inlinedAt: !8355)
!8546 = !DILocation(line: 547, column: 9, scope: !4466, inlinedAt: !8348)
!8547 = !DILocation(line: 549, column: 8, scope: !4782, inlinedAt: !8348)
!8548 = !DILocation(line: 549, column: 7, scope: !4466, inlinedAt: !8348)
!8549 = !DILocation(line: 550, column: 4, scope: !4782, inlinedAt: !8348)
!8550 = !DILocation(line: 553, column: 33, scope: !4466, inlinedAt: !8348)
!8551 = !DILocation(line: 325, column: 6, scope: !4787, inlinedAt: !8353)
!8552 = !DILocation(line: 325, column: 6, scope: !4479, inlinedAt: !8353)
!8553 = !DILocation(line: 326, column: 3, scope: !4787, inlinedAt: !8353)
!8554 = !DILocation(line: 332, column: 9, scope: !4479, inlinedAt: !8353)
!8555 = !DILocation(line: 332, column: 15, scope: !4479, inlinedAt: !8353)
!8556 = !DILocation(line: 332, column: 2, scope: !4479, inlinedAt: !8353)
!8557 = !DILocation(line: 336, column: 1, scope: !4479, inlinedAt: !8353)
!8558 = !DILocation(line: 553, column: 5, scope: !4466, inlinedAt: !8348)
!8559 = !DILocation(line: 553, column: 41, scope: !4466, inlinedAt: !8348)
!8560 = !DILocation(line: 554, column: 5, scope: !4466, inlinedAt: !8348)
!8561 = !DILocation(line: 554, column: 12, scope: !4466, inlinedAt: !8348)
!8562 = !DILocation(line: 448, column: 31, scope: !4461, inlinedAt: !8347)
!8563 = !DILocation(line: 448, column: 34, scope: !4461, inlinedAt: !8347)
!8564 = !DILocation(line: 448, column: 14, scope: !4461, inlinedAt: !8347)
!8565 = !DILocation(line: 450, column: 22, scope: !4461, inlinedAt: !8347)
!8566 = !DILocation(line: 450, column: 25, scope: !4461, inlinedAt: !8347)
!8567 = !DILocation(line: 450, column: 30, scope: !4461, inlinedAt: !8347)
!8568 = !DILocation(line: 450, column: 36, scope: !4461, inlinedAt: !8347)
!8569 = !DILocation(line: 450, column: 8, scope: !4461, inlinedAt: !8347)
!8570 = !DILocation(line: 450, column: 6, scope: !4461, inlinedAt: !8347)
!8571 = !DILocation(line: 451, column: 9, scope: !4461, inlinedAt: !8347)
!8572 = !DILocation(line: 552, column: 3, scope: !4466, inlinedAt: !8348)
!8573 = !DILocation(line: 557, column: 19, scope: !4468, inlinedAt: !8348)
!8574 = !DILocation(line: 557, column: 25, scope: !4468, inlinedAt: !8348)
!8575 = !DILocation(line: 557, column: 9, scope: !4468, inlinedAt: !8348)
!8576 = !DILocation(line: 557, column: 2, scope: !4468, inlinedAt: !8348)
!8577 = !DILocation(line: 558, column: 1, scope: !4468, inlinedAt: !8348)
!8578 = !DILocation(line: 1832, column: 6, scope: !8343)
!8579 = !DILocation(line: 1833, column: 7, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1833, column: 6)
!8581 = !DILocation(line: 1833, column: 6, scope: !8343)
!8582 = !DILocation(line: 1834, column: 3, scope: !8580)
!8583 = !DILocation(line: 1836, column: 9, scope: !8343)
!8584 = !DILocation(line: 1836, column: 6, scope: !8343)
!8585 = !DILocation(line: 1837, column: 27, scope: !8343)
!8586 = !DILocation(line: 1837, column: 9, scope: !8343)
!8587 = !DILocation(line: 1837, column: 7, scope: !8343)
!8588 = !DILocation(line: 1838, column: 8, scope: !8343)
!8589 = !DILocation(line: 1838, column: 6, scope: !8343)
!8590 = !DILocation(line: 1839, column: 9, scope: !8343)
!8591 = !DILocation(line: 1844, column: 9, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1844, column: 2)
!8593 = !DILocation(line: 1844, column: 7, scope: !8592)
!8594 = !DILocation(line: 1844, column: 14, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8592, file: !3, line: 1844, column: 2)
!8596 = !DILocation(line: 1844, column: 18, scope: !8595)
!8597 = !DILocation(line: 1844, column: 16, scope: !8595)
!8598 = !DILocation(line: 1844, column: 2, scope: !8592)
!8599 = !DILocation(line: 1846, column: 10, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1846, column: 3)
!8601 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 1844, column: 30)
!8602 = !DILocation(line: 1846, column: 8, scope: !8600)
!8603 = !DILocation(line: 1846, column: 15, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8600, file: !3, line: 1846, column: 3)
!8605 = !DILocation(line: 1846, column: 19, scope: !8604)
!8606 = !DILocation(line: 1846, column: 17, scope: !8604)
!8607 = !DILocation(line: 1846, column: 3, scope: !8600)
!8608 = !DILocation(line: 1847, column: 18, scope: !8604)
!8609 = !DILocation(line: 1847, column: 22, scope: !8604)
!8610 = !DILocation(line: 1847, column: 20, scope: !8604)
!8611 = !DILocation(line: 1847, column: 13, scope: !8604)
!8612 = !DILocation(line: 1847, column: 4, scope: !8604)
!8613 = !DILocation(line: 1847, column: 8, scope: !8604)
!8614 = !DILocation(line: 1847, column: 11, scope: !8604)
!8615 = !DILocation(line: 1846, column: 25, scope: !8604)
!8616 = !DILocation(line: 1846, column: 3, scope: !8604)
!8617 = distinct !{!8617, !8607, !8618}
!8618 = !DILocation(line: 1847, column: 23, scope: !8600)
!8619 = !DILocation(line: 1848, column: 28, scope: !8601)
!8620 = !DILocation(line: 1848, column: 34, scope: !8601)
!8621 = !DILocation(line: 1850, column: 11, scope: !8601)
!8622 = !DILocation(line: 1850, column: 16, scope: !8601)
!8623 = !DILocation(line: 1848, column: 12, scope: !8601)
!8624 = !DILocation(line: 1848, column: 10, scope: !8601)
!8625 = !DILocation(line: 1851, column: 7, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1851, column: 7)
!8627 = !DILocation(line: 1851, column: 17, scope: !8626)
!8628 = !DILocation(line: 1851, column: 14, scope: !8626)
!8629 = !DILocation(line: 1851, column: 7, scope: !8601)
!8630 = !DILocation(line: 1852, column: 9, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1851, column: 22)
!8632 = !DILocation(line: 1853, column: 8, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 1853, column: 8)
!8634 = !DILocation(line: 1853, column: 15, scope: !8633)
!8635 = !DILocation(line: 1853, column: 8, scope: !8631)
!8636 = !DILocation(line: 1854, column: 5, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 1853, column: 21)
!8638 = !DILocation(line: 1856, column: 12, scope: !8637)
!8639 = !DILocation(line: 1857, column: 4, scope: !8637)
!8640 = !DILocation(line: 1858, column: 4, scope: !8631)
!8641 = !DILocation(line: 1862, column: 28, scope: !8601)
!8642 = !DILocation(line: 1862, column: 34, scope: !8601)
!8643 = !DILocation(line: 1864, column: 11, scope: !8601)
!8644 = !DILocation(line: 1864, column: 16, scope: !8601)
!8645 = !DILocation(line: 1862, column: 12, scope: !8601)
!8646 = !DILocation(line: 1862, column: 10, scope: !8601)
!8647 = !DILocation(line: 1865, column: 7, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1865, column: 7)
!8649 = !DILocation(line: 1865, column: 17, scope: !8648)
!8650 = !DILocation(line: 1865, column: 14, scope: !8648)
!8651 = !DILocation(line: 1865, column: 7, scope: !8601)
!8652 = !DILocation(line: 1866, column: 9, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1865, column: 22)
!8654 = !DILocation(line: 1867, column: 8, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8653, file: !3, line: 1867, column: 8)
!8656 = !DILocation(line: 1867, column: 15, scope: !8655)
!8657 = !DILocation(line: 1867, column: 8, scope: !8653)
!8658 = !DILocation(line: 1868, column: 5, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8655, file: !3, line: 1867, column: 21)
!8660 = !DILocation(line: 1870, column: 12, scope: !8659)
!8661 = !DILocation(line: 1871, column: 4, scope: !8659)
!8662 = !DILocation(line: 1872, column: 4, scope: !8653)
!8663 = !DILocation(line: 1876, column: 10, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1876, column: 3)
!8665 = !DILocation(line: 1876, column: 8, scope: !8664)
!8666 = !DILocation(line: 1876, column: 15, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 1876, column: 3)
!8668 = !DILocation(line: 1876, column: 19, scope: !8667)
!8669 = !DILocation(line: 1876, column: 17, scope: !8667)
!8670 = !DILocation(line: 1876, column: 3, scope: !8664)
!8671 = !DILocation(line: 1877, column: 8, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 1877, column: 8)
!8673 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 1876, column: 29)
!8674 = !DILocation(line: 1877, column: 12, scope: !8672)
!8675 = !DILocation(line: 1877, column: 23, scope: !8672)
!8676 = !DILocation(line: 1877, column: 27, scope: !8672)
!8677 = !DILocation(line: 1877, column: 25, scope: !8672)
!8678 = !DILocation(line: 1877, column: 18, scope: !8672)
!8679 = !DILocation(line: 1877, column: 15, scope: !8672)
!8680 = !DILocation(line: 1877, column: 8, scope: !8673)
!8681 = !DILocation(line: 1878, column: 5, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 1877, column: 31)
!8683 = !DILocation(line: 1880, column: 12, scope: !8682)
!8684 = !DILocation(line: 1881, column: 5, scope: !8682)
!8685 = !DILocation(line: 1883, column: 3, scope: !8673)
!8686 = !DILocation(line: 1876, column: 25, scope: !8667)
!8687 = !DILocation(line: 1876, column: 3, scope: !8667)
!8688 = distinct !{!8688, !8670, !8689}
!8689 = !DILocation(line: 1883, column: 3, scope: !8664)
!8690 = !DILocation(line: 1884, column: 7, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1884, column: 7)
!8692 = !DILocation(line: 1884, column: 14, scope: !8691)
!8693 = !DILocation(line: 1884, column: 7, scope: !8601)
!8694 = !DILocation(line: 1885, column: 9, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8691, file: !3, line: 1884, column: 19)
!8696 = !DILocation(line: 1886, column: 4, scope: !8695)
!8697 = !DILocation(line: 1889, column: 10, scope: !8601)
!8698 = !DILocation(line: 1889, column: 7, scope: !8601)
!8699 = !DILocation(line: 1895, column: 7, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1895, column: 7)
!8701 = !DILocation(line: 1895, column: 13, scope: !8700)
!8702 = !DILocation(line: 1895, column: 11, scope: !8700)
!8703 = !DILocation(line: 1895, column: 7, scope: !8601)
!8704 = !DILocation(line: 1896, column: 10, scope: !8700)
!8705 = !DILocation(line: 1896, column: 8, scope: !8700)
!8706 = !DILocation(line: 1896, column: 4, scope: !8700)
!8707 = !DILocation(line: 1897, column: 2, scope: !8601)
!8708 = !DILocation(line: 1844, column: 26, scope: !8595)
!8709 = !DILocation(line: 1844, column: 2, scope: !8595)
!8710 = distinct !{!8710, !8598, !8711}
!8711 = !DILocation(line: 1897, column: 2, scope: !8592)
!8712 = !DILocation(line: 1899, column: 6, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1899, column: 6)
!8714 = !DILocation(line: 1899, column: 13, scope: !8713)
!8715 = !DILocation(line: 1899, column: 6, scope: !8343)
!8716 = !DILocation(line: 1900, column: 3, scope: !8713)
!8717 = !DILocation(line: 1903, column: 8, scope: !8343)
!8718 = !DILocation(line: 1903, column: 14, scope: !8343)
!8719 = !DILocation(line: 1903, column: 12, scope: !8343)
!8720 = !DILocation(line: 1903, column: 2, scope: !8343)
!8721 = !DILocation(line: 1904, column: 9, scope: !8343)
!8722 = !DILocation(line: 1904, column: 2, scope: !8343)
!8723 = !DILocation(line: 1905, column: 1, scope: !8343)
!8724 = distinct !DISubprogram(name: "test_queue", scope: !3, file: !3, line: 2038, type: !8725, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!8725 = !DISubroutineType(types: !8726)
!8726 = !{!168, !4522, !5003, !168, !4534, !7}
!8727 = !DILocation(line: 402, column: 57, scope: !7637, inlinedAt: !8728)
!8728 = distinct !DILocation(line: 2124, column: 2, scope: !8724)
!8729 = !DILocation(line: 402, column: 57, scope: !7637, inlinedAt: !8730)
!8730 = distinct !DILocation(line: 2113, column: 5, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 2112, column: 16)
!8732 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 2112, column: 8)
!8733 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 2110, column: 19)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 2110, column: 7)
!8735 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 2107, column: 37)
!8736 = distinct !DILexicalBlock(scope: !8737, file: !3, line: 2107, column: 2)
!8737 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 2107, column: 2)
!8738 = !DILocation(line: 377, column: 55, scope: !7644, inlinedAt: !8739)
!8739 = distinct !DILocation(line: 2106, column: 2, scope: !8724)
!8740 = !DILocation(line: 327, column: 67, scope: !7672, inlinedAt: !8741)
!8741 = distinct !DILocation(line: 2063, column: 2, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 2063, column: 2)
!8743 = !DILocalVariable(name: "dev", arg: 1, scope: !8724, file: !3, line: 2038, type: !4522)
!8744 = !DILocation(line: 2038, column: 32, scope: !8724)
!8745 = !DILocalVariable(name: "param", arg: 2, scope: !8724, file: !3, line: 2038, type: !5003)
!8746 = !DILocation(line: 2038, column: 62, scope: !8724)
!8747 = !DILocalVariable(name: "pipe", arg: 3, scope: !8724, file: !3, line: 2039, type: !168)
!8748 = !DILocation(line: 2039, column: 7, scope: !8724)
!8749 = !DILocalVariable(name: "desc", arg: 4, scope: !8724, file: !3, line: 2039, type: !4534)
!8750 = !DILocation(line: 2039, column: 45, scope: !8724)
!8751 = !DILocalVariable(name: "offset", arg: 5, scope: !8724, file: !3, line: 2039, type: !7)
!8752 = !DILocation(line: 2039, column: 60, scope: !8724)
!8753 = !DILocalVariable(name: "context", scope: !8724, file: !3, line: 2041, type: !8754)
!8754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "transfer_context", file: !3, line: 1914, size: 576, elements: !8755)
!8755 = !{!8756, !8757, !8758, !8759, !8760, !8761, !8762, !8763, !8764}
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8754, file: !3, line: 1915, baseType: !7, size: 32)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !8754, file: !3, line: 1916, baseType: !7, size: 32, offset: 32)
!8758 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8754, file: !3, line: 1917, baseType: !221, offset: 64)
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !8754, file: !3, line: 1918, baseType: !1479, size: 192, offset: 64)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "submit_error", scope: !8754, file: !3, line: 1919, baseType: !168, size: 32, offset: 256)
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !8754, file: !3, line: 1920, baseType: !311, size: 64, offset: 320)
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "packet_count", scope: !8754, file: !3, line: 1921, baseType: !311, size: 64, offset: 384)
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8754, file: !3, line: 1922, baseType: !4522, size: 64, offset: 448)
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "is_iso", scope: !8754, file: !3, line: 1923, baseType: !472, size: 8, offset: 512)
!8765 = !DILocation(line: 2041, column: 26, scope: !8724)
!8766 = !DILocalVariable(name: "udev", scope: !8724, file: !3, line: 2042, type: !170)
!8767 = !DILocation(line: 2042, column: 21, scope: !8724)
!8768 = !DILocalVariable(name: "i", scope: !8724, file: !3, line: 2043, type: !7)
!8769 = !DILocation(line: 2043, column: 12, scope: !8724)
!8770 = !DILocalVariable(name: "packets", scope: !8724, file: !3, line: 2044, type: !311)
!8771 = !DILocation(line: 2044, column: 17, scope: !8724)
!8772 = !DILocalVariable(name: "status", scope: !8724, file: !3, line: 2045, type: !168)
!8773 = !DILocation(line: 2045, column: 8, scope: !8724)
!8774 = !DILocalVariable(name: "urbs", scope: !8724, file: !3, line: 2046, type: !4088)
!8775 = !DILocation(line: 2046, column: 16, scope: !8724)
!8776 = !DILocation(line: 2048, column: 7, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 2048, column: 6)
!8778 = !DILocation(line: 2048, column: 14, scope: !8777)
!8779 = !DILocation(line: 2048, column: 20, scope: !8777)
!8780 = !DILocation(line: 2048, column: 23, scope: !8777)
!8781 = !DILocation(line: 2048, column: 30, scope: !8777)
!8782 = !DILocation(line: 2048, column: 54, scope: !8777)
!8783 = !DILocation(line: 2048, column: 61, scope: !8777)
!8784 = !DILocation(line: 2048, column: 52, scope: !8777)
!8785 = !DILocation(line: 2048, column: 41, scope: !8777)
!8786 = !DILocation(line: 2048, column: 6, scope: !8724)
!8787 = !DILocation(line: 2049, column: 3, scope: !8777)
!8788 = !DILocation(line: 2051, column: 6, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 2051, column: 6)
!8790 = !DILocation(line: 2051, column: 13, scope: !8789)
!8791 = !DILocation(line: 2051, column: 19, scope: !8789)
!8792 = !DILocation(line: 2051, column: 6, scope: !8724)
!8793 = !DILocation(line: 2052, column: 3, scope: !8789)
!8794 = !DILocation(line: 2054, column: 17, scope: !8724)
!8795 = !DILocation(line: 2054, column: 24, scope: !8724)
!8796 = !DILocation(line: 2054, column: 9, scope: !8724)
!8797 = !DILocation(line: 2054, column: 7, scope: !8724)
!8798 = !DILocation(line: 2055, column: 7, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 2055, column: 6)
!8800 = !DILocation(line: 2055, column: 6, scope: !8724)
!8801 = !DILocation(line: 2056, column: 3, scope: !8799)
!8802 = !DILocation(line: 2058, column: 2, scope: !8724)
!8803 = !DILocation(line: 2059, column: 18, scope: !8724)
!8804 = !DILocation(line: 2059, column: 25, scope: !8724)
!8805 = !DILocation(line: 2059, column: 38, scope: !8724)
!8806 = !DILocation(line: 2059, column: 45, scope: !8724)
!8807 = !DILocation(line: 2059, column: 36, scope: !8724)
!8808 = !DILocation(line: 2059, column: 10, scope: !8724)
!8809 = !DILocation(line: 2059, column: 16, scope: !8724)
!8810 = !DILocation(line: 2060, column: 16, scope: !8724)
!8811 = !DILocation(line: 2060, column: 10, scope: !8724)
!8812 = !DILocation(line: 2060, column: 14, scope: !8724)
!8813 = !DILocation(line: 2061, column: 21, scope: !8724)
!8814 = !DILocation(line: 2061, column: 20, scope: !8724)
!8815 = !DILocation(line: 2061, column: 19, scope: !8724)
!8816 = !DILocation(line: 2061, column: 10, scope: !8724)
!8817 = !DILocation(line: 2061, column: 17, scope: !8724)
!8818 = !DILocation(line: 2062, column: 2, scope: !8724)
!8819 = !DILocation(line: 2063, column: 2, scope: !8724)
!8820 = !DILocation(line: 2063, column: 2, scope: !8742)
!8821 = !DILocation(line: 329, column: 10, scope: !7672, inlinedAt: !8741)
!8822 = !DILocation(line: 329, column: 16, scope: !7672, inlinedAt: !8741)
!8823 = !DILocation(line: 2065, column: 27, scope: !8724)
!8824 = !DILocation(line: 2065, column: 9, scope: !8724)
!8825 = !DILocation(line: 2065, column: 7, scope: !8724)
!8826 = !DILocation(line: 2067, column: 9, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 2067, column: 2)
!8828 = !DILocation(line: 2067, column: 7, scope: !8827)
!8829 = !DILocation(line: 2067, column: 14, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 2067, column: 2)
!8831 = !DILocation(line: 2067, column: 18, scope: !8830)
!8832 = !DILocation(line: 2067, column: 25, scope: !8830)
!8833 = !DILocation(line: 2067, column: 16, scope: !8830)
!8834 = !DILocation(line: 2067, column: 2, scope: !8827)
!8835 = !DILocation(line: 2068, column: 15, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 2068, column: 7)
!8837 = distinct !DILexicalBlock(scope: !8830, file: !3, line: 2067, column: 37)
!8838 = !DILocation(line: 2068, column: 7, scope: !8837)
!8839 = !DILocation(line: 2069, column: 28, scope: !8836)
!8840 = !DILocation(line: 2069, column: 34, scope: !8836)
!8841 = !DILocation(line: 2069, column: 40, scope: !8836)
!8842 = !DILocation(line: 2070, column: 6, scope: !8836)
!8843 = !DILocation(line: 2070, column: 13, scope: !8836)
!8844 = !DILocation(line: 2070, column: 21, scope: !8836)
!8845 = !DILocation(line: 2069, column: 14, scope: !8836)
!8846 = !DILocation(line: 2069, column: 4, scope: !8836)
!8847 = !DILocation(line: 2069, column: 9, scope: !8836)
!8848 = !DILocation(line: 2069, column: 12, scope: !8836)
!8849 = !DILocation(line: 2072, column: 36, scope: !8836)
!8850 = !DILocation(line: 2072, column: 42, scope: !8836)
!8851 = !DILocation(line: 2073, column: 6, scope: !8836)
!8852 = !DILocation(line: 2073, column: 13, scope: !8836)
!8853 = !DILocation(line: 2072, column: 14, scope: !8836)
!8854 = !DILocation(line: 2072, column: 4, scope: !8836)
!8855 = !DILocation(line: 2072, column: 9, scope: !8836)
!8856 = !DILocation(line: 2072, column: 12, scope: !8836)
!8857 = !DILocation(line: 2075, column: 8, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 2075, column: 7)
!8859 = !DILocation(line: 2075, column: 13, scope: !8858)
!8860 = !DILocation(line: 2075, column: 7, scope: !8837)
!8861 = !DILocation(line: 2076, column: 11, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 2075, column: 17)
!8863 = !DILocation(line: 2077, column: 4, scope: !8862)
!8864 = !DILocation(line: 2079, column: 14, scope: !8837)
!8865 = !DILocation(line: 2079, column: 19, scope: !8837)
!8866 = !DILocation(line: 2079, column: 23, scope: !8837)
!8867 = !DILocation(line: 2079, column: 11, scope: !8837)
!8868 = !DILocation(line: 2080, column: 22, scope: !8837)
!8869 = !DILocation(line: 2080, column: 3, scope: !8837)
!8870 = !DILocation(line: 2080, column: 8, scope: !8837)
!8871 = !DILocation(line: 2080, column: 12, scope: !8837)
!8872 = !DILocation(line: 2080, column: 20, scope: !8837)
!8873 = !DILocation(line: 2081, column: 2, scope: !8837)
!8874 = !DILocation(line: 2067, column: 33, scope: !8830)
!8875 = !DILocation(line: 2067, column: 2, scope: !8830)
!8876 = distinct !{!8876, !8834, !8877}
!8877 = !DILocation(line: 2081, column: 2, scope: !8827)
!8878 = !DILocation(line: 2082, column: 13, scope: !8724)
!8879 = !DILocation(line: 2082, column: 20, scope: !8724)
!8880 = !DILocation(line: 2082, column: 10, scope: !8724)
!8881 = !DILocation(line: 2084, column: 14, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 2084, column: 6)
!8883 = !DILocation(line: 2084, column: 6, scope: !8724)
!8884 = !DILocalVariable(name: "transaction_num", scope: !8885, file: !3, line: 2085, type: !168)
!8885 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 2084, column: 22)
!8886 = !DILocation(line: 2085, column: 7, scope: !8885)
!8887 = !DILocation(line: 2087, column: 7, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2087, column: 7)
!8889 = !DILocation(line: 2087, column: 13, scope: !8888)
!8890 = !DILocation(line: 2087, column: 19, scope: !8888)
!8891 = !DILocation(line: 2087, column: 7, scope: !8885)
!8892 = !DILocation(line: 2088, column: 45, scope: !8888)
!8893 = !DILocation(line: 2088, column: 51, scope: !8888)
!8894 = !DILocation(line: 2088, column: 22, scope: !8888)
!8895 = !DILocation(line: 2088, column: 20, scope: !8888)
!8896 = !DILocation(line: 2088, column: 4, scope: !8888)
!8897 = !DILocation(line: 2090, column: 45, scope: !8888)
!8898 = !DILocation(line: 2090, column: 22, scope: !8888)
!8899 = !DILocation(line: 2090, column: 20, scope: !8888)
!8900 = !DILocation(line: 2092, column: 3, scope: !8885)
!8901 = !DILocation(line: 2099, column: 3, scope: !8885)
!8902 = !DILocation(line: 2104, column: 2, scope: !8885)
!8903 = !DILocation(line: 2106, column: 25, scope: !8724)
!8904 = !DILocation(line: 379, column: 2, scope: !8143, inlinedAt: !8739)
!8905 = !DILocation(line: 379, column: 2, scope: !8146, inlinedAt: !8739)
!8906 = !DILocation(line: 379, column: 2, scope: !8149, inlinedAt: !8739)
!8907 = !DILocation(line: 2107, column: 9, scope: !8737)
!8908 = !DILocation(line: 2107, column: 7, scope: !8737)
!8909 = !DILocation(line: 2107, column: 14, scope: !8736)
!8910 = !DILocation(line: 2107, column: 18, scope: !8736)
!8911 = !DILocation(line: 2107, column: 25, scope: !8736)
!8912 = !DILocation(line: 2107, column: 16, scope: !8736)
!8913 = !DILocation(line: 2107, column: 2, scope: !8737)
!8914 = !DILocation(line: 2108, column: 13, scope: !8735)
!8915 = !DILocation(line: 2108, column: 3, scope: !8735)
!8916 = !DILocation(line: 2109, column: 27, scope: !8735)
!8917 = !DILocation(line: 2109, column: 32, scope: !8735)
!8918 = !DILocation(line: 2109, column: 12, scope: !8735)
!8919 = !DILocation(line: 2109, column: 10, scope: !8735)
!8920 = !DILocation(line: 2110, column: 7, scope: !8734)
!8921 = !DILocation(line: 2110, column: 14, scope: !8734)
!8922 = !DILocation(line: 2110, column: 7, scope: !8735)
!8923 = !DILocation(line: 2111, column: 4, scope: !8733)
!8924 = !DILocation(line: 2112, column: 8, scope: !8732)
!8925 = !DILocation(line: 2112, column: 10, scope: !8732)
!8926 = !DILocation(line: 2112, column: 8, scope: !8733)
!8927 = !DILocation(line: 2113, column: 30, scope: !8731)
!8928 = !DILocation(line: 404, column: 2, scope: !8184, inlinedAt: !8730)
!8929 = !DILocation(line: 404, column: 2, scope: !8187, inlinedAt: !8730)
!8930 = !DILocation(line: 404, column: 2, scope: !8190, inlinedAt: !8730)
!8931 = !DILocation(line: 2114, column: 5, scope: !8731)
!8932 = !DILocation(line: 2117, column: 20, scope: !8733)
!8933 = !DILocation(line: 2117, column: 25, scope: !8733)
!8934 = !DILocation(line: 2117, column: 4, scope: !8733)
!8935 = !DILocation(line: 2118, column: 4, scope: !8733)
!8936 = !DILocation(line: 2118, column: 9, scope: !8733)
!8937 = !DILocation(line: 2118, column: 12, scope: !8733)
!8938 = !DILocation(line: 2119, column: 12, scope: !8733)
!8939 = !DILocation(line: 2119, column: 19, scope: !8733)
!8940 = !DILocation(line: 2120, column: 12, scope: !8733)
!8941 = !DILocation(line: 2120, column: 25, scope: !8733)
!8942 = !DILocation(line: 2121, column: 4, scope: !8733)
!8943 = !DILocation(line: 2123, column: 2, scope: !8735)
!8944 = !DILocation(line: 2107, column: 33, scope: !8736)
!8945 = !DILocation(line: 2107, column: 2, scope: !8736)
!8946 = distinct !{!8946, !8913, !8947}
!8947 = !DILocation(line: 2123, column: 2, scope: !8737)
!8948 = !DILocation(line: 2124, column: 27, scope: !8724)
!8949 = !DILocation(line: 404, column: 2, scope: !8184, inlinedAt: !8728)
!8950 = !DILocation(line: 404, column: 2, scope: !8187, inlinedAt: !8728)
!8951 = !DILocation(line: 404, column: 2, scope: !8190, inlinedAt: !8728)
!8952 = !DILocation(line: 2126, column: 31, scope: !8724)
!8953 = !DILocation(line: 2126, column: 2, scope: !8724)
!8954 = !DILocation(line: 2128, column: 9, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 2128, column: 2)
!8956 = !DILocation(line: 2128, column: 7, scope: !8955)
!8957 = !DILocation(line: 2128, column: 14, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8955, file: !3, line: 2128, column: 2)
!8959 = !DILocation(line: 2128, column: 18, scope: !8958)
!8960 = !DILocation(line: 2128, column: 25, scope: !8958)
!8961 = !DILocation(line: 2128, column: 16, scope: !8958)
!8962 = !DILocation(line: 2128, column: 2, scope: !8955)
!8963 = !DILocation(line: 2129, column: 7, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !3, line: 2129, column: 7)
!8965 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 2128, column: 37)
!8966 = !DILocation(line: 2129, column: 12, scope: !8964)
!8967 = !DILocation(line: 2129, column: 7, scope: !8965)
!8968 = !DILocation(line: 2130, column: 20, scope: !8964)
!8969 = !DILocation(line: 2130, column: 25, scope: !8964)
!8970 = !DILocation(line: 2130, column: 4, scope: !8964)
!8971 = !DILocation(line: 2131, column: 2, scope: !8965)
!8972 = !DILocation(line: 2128, column: 33, scope: !8958)
!8973 = !DILocation(line: 2128, column: 2, scope: !8958)
!8974 = distinct !{!8974, !8962, !8975}
!8975 = !DILocation(line: 2131, column: 2, scope: !8955)
!8976 = !DILocation(line: 2137, column: 6, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 2137, column: 6)
!8978 = !DILocation(line: 2137, column: 13, scope: !8977)
!8979 = !DILocation(line: 2137, column: 6, scope: !8724)
!8980 = !DILocation(line: 2139, column: 19, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 2139, column: 11)
!8982 = !DILocation(line: 2139, column: 11, scope: !8981)
!8983 = !DILocation(line: 2139, column: 11, scope: !8977)
!8984 = !DILocation(line: 2140, column: 10, scope: !8981)
!8985 = !DILocation(line: 2140, column: 3, scope: !8981)
!8986 = !DILocation(line: 2141, column: 19, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 2141, column: 11)
!8988 = !DILocation(line: 2142, column: 13, scope: !8987)
!8989 = !DILocation(line: 2142, column: 5, scope: !8987)
!8990 = !DILocation(line: 2142, column: 30, scope: !8987)
!8991 = !DILocation(line: 2142, column: 43, scope: !8987)
!8992 = !DILocation(line: 2141, column: 26, scope: !8987)
!8993 = !DILocation(line: 2141, column: 11, scope: !8981)
!8994 = !DILocation(line: 2143, column: 10, scope: !8987)
!8995 = !DILocation(line: 2143, column: 3, scope: !8987)
!8996 = !DILocation(line: 2145, column: 8, scope: !8724)
!8997 = !DILocation(line: 2145, column: 2, scope: !8724)
!8998 = !DILocation(line: 2146, column: 9, scope: !8724)
!8999 = !DILocation(line: 2146, column: 2, scope: !8724)
!9000 = !DILabel(scope: !8724, name: "fail", file: !3, line: 2148)
!9001 = !DILocation(line: 2148, column: 1, scope: !8724)
!9002 = !DILocation(line: 2149, column: 9, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 2149, column: 2)
!9004 = !DILocation(line: 2149, column: 7, scope: !9003)
!9005 = !DILocation(line: 2149, column: 14, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 2149, column: 2)
!9007 = !DILocation(line: 2149, column: 18, scope: !9006)
!9008 = !DILocation(line: 2149, column: 25, scope: !9006)
!9009 = !DILocation(line: 2149, column: 16, scope: !9006)
!9010 = !DILocation(line: 2149, column: 2, scope: !9003)
!9011 = !DILocation(line: 2150, column: 7, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 2150, column: 7)
!9013 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 2149, column: 37)
!9014 = !DILocation(line: 2150, column: 12, scope: !9012)
!9015 = !DILocation(line: 2150, column: 7, scope: !9013)
!9016 = !DILocation(line: 2151, column: 20, scope: !9012)
!9017 = !DILocation(line: 2151, column: 25, scope: !9012)
!9018 = !DILocation(line: 2151, column: 4, scope: !9012)
!9019 = !DILocation(line: 2152, column: 2, scope: !9013)
!9020 = !DILocation(line: 2149, column: 33, scope: !9006)
!9021 = !DILocation(line: 2149, column: 2, scope: !9006)
!9022 = distinct !{!9022, !9010, !9023}
!9023 = !DILocation(line: 2152, column: 2, scope: !9003)
!9024 = !DILocation(line: 2154, column: 8, scope: !8724)
!9025 = !DILocation(line: 2154, column: 2, scope: !8724)
!9026 = !DILocation(line: 2155, column: 9, scope: !8724)
!9027 = !DILocation(line: 2155, column: 2, scope: !8724)
!9028 = !DILocation(line: 2156, column: 1, scope: !8724)
!9029 = distinct !DISubprogram(name: "test_unaligned_bulk", scope: !3, file: !3, line: 2158, type: !9030, scopeLine: 2165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9030 = !DISubroutineType(types: !9031)
!9031 = !{!168, !4522, !168, !7, !168, !7, !155}
!9032 = !DILocalVariable(name: "tdev", arg: 1, scope: !9029, file: !3, line: 2159, type: !4522)
!9033 = !DILocation(line: 2159, column: 22, scope: !9029)
!9034 = !DILocalVariable(name: "pipe", arg: 2, scope: !9029, file: !3, line: 2160, type: !168)
!9035 = !DILocation(line: 2160, column: 6, scope: !9029)
!9036 = !DILocalVariable(name: "length", arg: 3, scope: !9029, file: !3, line: 2161, type: !7)
!9037 = !DILocation(line: 2161, column: 11, scope: !9029)
!9038 = !DILocalVariable(name: "iterations", arg: 4, scope: !9029, file: !3, line: 2162, type: !168)
!9039 = !DILocation(line: 2162, column: 6, scope: !9029)
!9040 = !DILocalVariable(name: "transfer_flags", arg: 5, scope: !9029, file: !3, line: 2163, type: !7)
!9041 = !DILocation(line: 2163, column: 11, scope: !9029)
!9042 = !DILocalVariable(name: "label", arg: 6, scope: !9029, file: !3, line: 2164, type: !155)
!9043 = !DILocation(line: 2164, column: 14, scope: !9029)
!9044 = !DILocalVariable(name: "retval", scope: !9029, file: !3, line: 2166, type: !168)
!9045 = !DILocation(line: 2166, column: 6, scope: !9029)
!9046 = !DILocalVariable(name: "urb", scope: !9029, file: !3, line: 2167, type: !4089)
!9047 = !DILocation(line: 2167, column: 14, scope: !9029)
!9048 = !DILocation(line: 2167, column: 56, scope: !9029)
!9049 = !DILocation(line: 2167, column: 38, scope: !9029)
!9050 = !DILocation(line: 2168, column: 4, scope: !9029)
!9051 = !DILocation(line: 2168, column: 10, scope: !9029)
!9052 = !DILocation(line: 2168, column: 18, scope: !9029)
!9053 = !DILocation(line: 2167, column: 20, scope: !9029)
!9054 = !DILocation(line: 2170, column: 7, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 2170, column: 6)
!9056 = !DILocation(line: 2170, column: 6, scope: !9029)
!9057 = !DILocation(line: 2171, column: 3, scope: !9055)
!9058 = !DILocation(line: 2173, column: 21, scope: !9029)
!9059 = !DILocation(line: 2173, column: 27, scope: !9029)
!9060 = !DILocation(line: 2173, column: 32, scope: !9029)
!9061 = !DILocation(line: 2173, column: 50, scope: !9029)
!9062 = !DILocation(line: 2173, column: 11, scope: !9029)
!9063 = !DILocation(line: 2173, column: 9, scope: !9029)
!9064 = !DILocation(line: 2174, column: 18, scope: !9029)
!9065 = !DILocation(line: 2174, column: 2, scope: !9029)
!9066 = !DILocation(line: 2175, column: 9, scope: !9029)
!9067 = !DILocation(line: 2175, column: 2, scope: !9029)
!9068 = !DILocation(line: 2176, column: 1, scope: !9029)
!9069 = distinct !DISubprogram(name: "unlink_queued", scope: !3, file: !3, line: 1554, type: !9070, scopeLine: 1556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9070 = !DISubroutineType(types: !9071)
!9071 = !{!168, !4522, !168, !7, !7}
!9072 = !DILocalVariable(name: "v", arg: 1, scope: !9073, file: !9074, line: 121, type: !9077)
!9073 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !9074, file: !9074, line: 121, type: !9075, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9074 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!9075 = !DISubroutineType(types: !9076)
!9076 = !{!472, !9077}
!9077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!9078 = !DILocation(line: 121, column: 64, scope: !9073, inlinedAt: !9079)
!9079 = distinct !DILocation(line: 749, column: 9, scope: !9080, inlinedAt: !9082)
!9080 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !9081, file: !9081, line: 746, type: !9075, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9081 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!9082 = distinct !DILocation(line: 1613, column: 6, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1613, column: 6)
!9084 = !DILocalVariable(name: "c", scope: !9085, file: !9074, line: 123, type: !472)
!9085 = distinct !DILexicalBlock(scope: !9073, file: !9074, line: 123, column: 9)
!9086 = !DILocation(line: 123, column: 9, scope: !9085, inlinedAt: !9079)
!9087 = !DILocalVariable(name: "v", arg: 1, scope: !9088, file: !9089, line: 99, type: !9092)
!9088 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !9089, file: !9089, line: 99, type: !9090, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9089 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!9090 = !DISubroutineType(types: !9091)
!9091 = !{null, !9092, !308}
!9092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9093, size: 64)
!9093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9094)
!9094 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!9095 = !DILocation(line: 99, column: 79, scope: !9088, inlinedAt: !9096)
!9096 = distinct !DILocation(line: 748, column: 2, scope: !9080, inlinedAt: !9082)
!9097 = !DILocalVariable(name: "size", arg: 2, scope: !9088, file: !9089, line: 99, type: !308)
!9098 = !DILocation(line: 99, column: 89, scope: !9088, inlinedAt: !9096)
!9099 = !DILocalVariable(name: "v", arg: 1, scope: !9080, file: !9081, line: 746, type: !9077)
!9100 = !DILocation(line: 746, column: 31, scope: !9080, inlinedAt: !9082)
!9101 = !DILocalVariable(name: "v", arg: 1, scope: !9102, file: !9074, line: 106, type: !9077)
!9102 = distinct !DISubprogram(name: "arch_atomic_dec", scope: !9074, file: !9074, line: 106, type: !9103, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9103 = !DISubroutineType(types: !9104)
!9104 = !{null, !9077}
!9105 = !DILocation(line: 106, column: 55, scope: !9102, inlinedAt: !9106)
!9106 = distinct !DILocation(line: 331, column: 2, scope: !9107, inlinedAt: !9108)
!9107 = distinct !DISubprogram(name: "atomic_dec", scope: !9081, file: !9081, line: 328, type: !9103, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9108 = distinct !DILocation(line: 1600, column: 4, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !3, line: 1597, column: 20)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 1597, column: 7)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 1594, column: 28)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !3, line: 1594, column: 2)
!9113 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1594, column: 2)
!9114 = !DILocation(line: 99, column: 79, scope: !9088, inlinedAt: !9115)
!9115 = distinct !DILocation(line: 330, column: 2, scope: !9107, inlinedAt: !9108)
!9116 = !DILocation(line: 99, column: 89, scope: !9088, inlinedAt: !9115)
!9117 = !DILocalVariable(name: "v", arg: 1, scope: !9107, file: !9081, line: 328, type: !9077)
!9118 = !DILocation(line: 328, column: 22, scope: !9107, inlinedAt: !9108)
!9119 = !DILocalVariable(name: "v", arg: 1, scope: !9120, file: !9074, line: 93, type: !9077)
!9120 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !9074, file: !9074, line: 93, type: !9103, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9121 = !DILocation(line: 93, column: 55, scope: !9120, inlinedAt: !9122)
!9122 = distinct !DILocation(line: 241, column: 2, scope: !9123, inlinedAt: !9124)
!9123 = distinct !DISubprogram(name: "atomic_inc", scope: !9081, file: !9081, line: 238, type: !9103, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9124 = distinct !DILocation(line: 1595, column: 3, scope: !9111)
!9125 = !DILocation(line: 99, column: 79, scope: !9088, inlinedAt: !9126)
!9126 = distinct !DILocation(line: 240, column: 2, scope: !9123, inlinedAt: !9124)
!9127 = !DILocation(line: 99, column: 89, scope: !9088, inlinedAt: !9126)
!9128 = !DILocalVariable(name: "v", arg: 1, scope: !9123, file: !9081, line: 238, type: !9077)
!9129 = !DILocation(line: 238, column: 22, scope: !9123, inlinedAt: !9124)
!9130 = !DILocalVariable(name: "v", arg: 1, scope: !9131, file: !9074, line: 39, type: !9077)
!9131 = distinct !DISubprogram(name: "arch_atomic_set", scope: !9074, file: !9074, line: 39, type: !9132, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{null, !9077, !168}
!9134 = !DILocation(line: 39, column: 55, scope: !9131, inlinedAt: !9135)
!9135 = distinct !DILocation(line: 46, column: 2, scope: !9136, inlinedAt: !9137)
!9136 = distinct !DISubprogram(name: "atomic_set", scope: !9081, file: !9081, line: 43, type: !9132, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9137 = distinct !DILocation(line: 1565, column: 2, scope: !9069)
!9138 = !DILocalVariable(name: "i", arg: 2, scope: !9131, file: !9074, line: 39, type: !168)
!9139 = !DILocation(line: 39, column: 62, scope: !9131, inlinedAt: !9135)
!9140 = !DILocalVariable(name: "v", arg: 1, scope: !9141, file: !9089, line: 84, type: !9092)
!9141 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !9089, file: !9089, line: 84, type: !9090, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9142 = !DILocation(line: 84, column: 74, scope: !9141, inlinedAt: !9143)
!9143 = distinct !DILocation(line: 45, column: 2, scope: !9136, inlinedAt: !9137)
!9144 = !DILocalVariable(name: "size", arg: 2, scope: !9141, file: !9089, line: 84, type: !308)
!9145 = !DILocation(line: 84, column: 84, scope: !9141, inlinedAt: !9143)
!9146 = !DILocalVariable(name: "v", arg: 1, scope: !9136, file: !9081, line: 43, type: !9077)
!9147 = !DILocation(line: 43, column: 22, scope: !9136, inlinedAt: !9137)
!9148 = !DILocalVariable(name: "i", arg: 2, scope: !9136, file: !9081, line: 43, type: !168)
!9149 = !DILocation(line: 43, column: 29, scope: !9136, inlinedAt: !9137)
!9150 = !DILocalVariable(name: "dev", arg: 1, scope: !9069, file: !3, line: 1554, type: !4522)
!9151 = !DILocation(line: 1554, column: 46, scope: !9069)
!9152 = !DILocalVariable(name: "pipe", arg: 2, scope: !9069, file: !3, line: 1554, type: !168)
!9153 = !DILocation(line: 1554, column: 55, scope: !9069)
!9154 = !DILocalVariable(name: "num", arg: 3, scope: !9069, file: !3, line: 1554, type: !7)
!9155 = !DILocation(line: 1554, column: 70, scope: !9069)
!9156 = !DILocalVariable(name: "size", arg: 4, scope: !9069, file: !3, line: 1555, type: !7)
!9157 = !DILocation(line: 1555, column: 12, scope: !9069)
!9158 = !DILocalVariable(name: "ctx", scope: !9069, file: !3, line: 1557, type: !9159)
!9159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queued_ctx", file: !3, line: 1526, size: 384, elements: !9160)
!9160 = !{!9161, !9162, !9163, !9164, !9165}
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !9159, file: !3, line: 1527, baseType: !1479, size: 192)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !9159, file: !3, line: 1528, baseType: !728, size: 32, offset: 192)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !9159, file: !3, line: 1529, baseType: !7, size: 32, offset: 224)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !9159, file: !3, line: 1530, baseType: !168, size: 32, offset: 256)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "urbs", scope: !9159, file: !3, line: 1531, baseType: !4088, size: 64, offset: 320)
!9166 = !DILocation(line: 1557, column: 20, scope: !9069)
!9167 = !DILocalVariable(name: "udev", scope: !9069, file: !3, line: 1558, type: !170)
!9168 = !DILocation(line: 1558, column: 21, scope: !9069)
!9169 = !DILocation(line: 1558, column: 46, scope: !9069)
!9170 = !DILocation(line: 1558, column: 28, scope: !9069)
!9171 = !DILocalVariable(name: "buf", scope: !9069, file: !3, line: 1559, type: !169)
!9172 = !DILocation(line: 1559, column: 10, scope: !9069)
!9173 = !DILocalVariable(name: "buf_dma", scope: !9069, file: !3, line: 1560, type: !899)
!9174 = !DILocation(line: 1560, column: 14, scope: !9069)
!9175 = !DILocalVariable(name: "i", scope: !9069, file: !3, line: 1561, type: !168)
!9176 = !DILocation(line: 1561, column: 8, scope: !9069)
!9177 = !DILocalVariable(name: "retval", scope: !9069, file: !3, line: 1562, type: !168)
!9178 = !DILocation(line: 1562, column: 8, scope: !9069)
!9179 = !DILocation(line: 1564, column: 2, scope: !9069)
!9180 = !DILocation(line: 1565, column: 18, scope: !9069)
!9181 = !DILocation(line: 45, column: 26, scope: !9136, inlinedAt: !9137)
!9182 = !DILocation(line: 86, column: 20, scope: !9141, inlinedAt: !9143)
!9183 = !DILocation(line: 86, column: 23, scope: !9141, inlinedAt: !9143)
!9184 = !DILocation(line: 86, column: 2, scope: !9141, inlinedAt: !9143)
!9185 = !DILocation(line: 87, column: 2, scope: !9141, inlinedAt: !9143)
!9186 = !DILocation(line: 46, column: 18, scope: !9136, inlinedAt: !9137)
!9187 = !DILocation(line: 46, column: 21, scope: !9136, inlinedAt: !9137)
!9188 = !DILocation(line: 41, column: 2, scope: !9189, inlinedAt: !9135)
!9189 = distinct !DILexicalBlock(scope: !9131, file: !9074, line: 41, column: 2)
!9190 = !DILocation(line: 1566, column: 12, scope: !9069)
!9191 = !DILocation(line: 1566, column: 6, scope: !9069)
!9192 = !DILocation(line: 1566, column: 10, scope: !9069)
!9193 = !DILocation(line: 1567, column: 6, scope: !9069)
!9194 = !DILocation(line: 1567, column: 13, scope: !9069)
!9195 = !DILocation(line: 1569, column: 27, scope: !9069)
!9196 = !DILocation(line: 1569, column: 33, scope: !9069)
!9197 = !DILocation(line: 1569, column: 8, scope: !9069)
!9198 = !DILocation(line: 1569, column: 6, scope: !9069)
!9199 = !DILocation(line: 1570, column: 7, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1570, column: 6)
!9201 = !DILocation(line: 1570, column: 6, scope: !9069)
!9202 = !DILocation(line: 1571, column: 10, scope: !9200)
!9203 = !DILocation(line: 1571, column: 3, scope: !9200)
!9204 = !DILocation(line: 1572, column: 9, scope: !9069)
!9205 = !DILocation(line: 1572, column: 17, scope: !9069)
!9206 = !DILocation(line: 1572, column: 2, scope: !9069)
!9207 = !DILocation(line: 1575, column: 21, scope: !9069)
!9208 = !DILocation(line: 1575, column: 13, scope: !9069)
!9209 = !DILocation(line: 1575, column: 6, scope: !9069)
!9210 = !DILocation(line: 1575, column: 11, scope: !9069)
!9211 = !DILocation(line: 1576, column: 11, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1576, column: 6)
!9213 = !DILocation(line: 1576, column: 7, scope: !9212)
!9214 = !DILocation(line: 1576, column: 6, scope: !9069)
!9215 = !DILocation(line: 1577, column: 3, scope: !9212)
!9216 = !DILocation(line: 1578, column: 9, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1578, column: 2)
!9218 = !DILocation(line: 1578, column: 7, scope: !9217)
!9219 = !DILocation(line: 1578, column: 14, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 1578, column: 2)
!9221 = !DILocation(line: 1578, column: 18, scope: !9220)
!9222 = !DILocation(line: 1578, column: 16, scope: !9220)
!9223 = !DILocation(line: 1578, column: 2, scope: !9217)
!9224 = !DILocation(line: 1579, column: 17, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 1578, column: 28)
!9226 = !DILocation(line: 1579, column: 7, scope: !9225)
!9227 = !DILocation(line: 1579, column: 12, scope: !9225)
!9228 = !DILocation(line: 1579, column: 3, scope: !9225)
!9229 = !DILocation(line: 1579, column: 15, scope: !9225)
!9230 = !DILocation(line: 1580, column: 12, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 1580, column: 7)
!9232 = !DILocation(line: 1580, column: 17, scope: !9231)
!9233 = !DILocation(line: 1580, column: 8, scope: !9231)
!9234 = !DILocation(line: 1580, column: 7, scope: !9225)
!9235 = !DILocation(line: 1581, column: 4, scope: !9231)
!9236 = !DILocation(line: 1582, column: 25, scope: !9225)
!9237 = !DILocation(line: 1582, column: 30, scope: !9225)
!9238 = !DILocation(line: 1582, column: 21, scope: !9225)
!9239 = !DILocation(line: 1582, column: 34, scope: !9225)
!9240 = !DILocation(line: 1582, column: 40, scope: !9225)
!9241 = !DILocation(line: 1582, column: 46, scope: !9225)
!9242 = !DILocation(line: 1582, column: 51, scope: !9225)
!9243 = !DILocation(line: 1583, column: 29, scope: !9225)
!9244 = !DILocation(line: 1582, column: 3, scope: !9225)
!9245 = !DILocation(line: 1584, column: 31, scope: !9225)
!9246 = !DILocation(line: 1584, column: 7, scope: !9225)
!9247 = !DILocation(line: 1584, column: 12, scope: !9225)
!9248 = !DILocation(line: 1584, column: 3, scope: !9225)
!9249 = !DILocation(line: 1584, column: 16, scope: !9225)
!9250 = !DILocation(line: 1584, column: 29, scope: !9225)
!9251 = !DILocation(line: 1585, column: 7, scope: !9225)
!9252 = !DILocation(line: 1585, column: 12, scope: !9225)
!9253 = !DILocation(line: 1585, column: 3, scope: !9225)
!9254 = !DILocation(line: 1585, column: 16, scope: !9225)
!9255 = !DILocation(line: 1585, column: 31, scope: !9225)
!9256 = !DILocation(line: 1587, column: 7, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 1587, column: 7)
!9258 = !DILocation(line: 1587, column: 7, scope: !9225)
!9259 = !DILocation(line: 1588, column: 24, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 1587, column: 39)
!9261 = !DILocation(line: 1588, column: 29, scope: !9260)
!9262 = !DILocation(line: 1588, column: 20, scope: !9260)
!9263 = !DILocation(line: 1588, column: 4, scope: !9260)
!9264 = !DILocation(line: 1589, column: 8, scope: !9260)
!9265 = !DILocation(line: 1589, column: 13, scope: !9260)
!9266 = !DILocation(line: 1589, column: 4, scope: !9260)
!9267 = !DILocation(line: 1589, column: 17, scope: !9260)
!9268 = !DILocation(line: 1589, column: 32, scope: !9260)
!9269 = !DILocation(line: 1590, column: 3, scope: !9260)
!9270 = !DILocation(line: 1591, column: 2, scope: !9225)
!9271 = !DILocation(line: 1578, column: 24, scope: !9220)
!9272 = !DILocation(line: 1578, column: 2, scope: !9220)
!9273 = distinct !{!9273, !9223, !9274}
!9274 = !DILocation(line: 1591, column: 2, scope: !9217)
!9275 = !DILocation(line: 1594, column: 9, scope: !9113)
!9276 = !DILocation(line: 1594, column: 7, scope: !9113)
!9277 = !DILocation(line: 1594, column: 14, scope: !9112)
!9278 = !DILocation(line: 1594, column: 18, scope: !9112)
!9279 = !DILocation(line: 1594, column: 16, scope: !9112)
!9280 = !DILocation(line: 1594, column: 2, scope: !9113)
!9281 = !DILocation(line: 1595, column: 19, scope: !9111)
!9282 = !DILocation(line: 240, column: 31, scope: !9123, inlinedAt: !9124)
!9283 = !DILocation(line: 101, column: 20, scope: !9088, inlinedAt: !9126)
!9284 = !DILocation(line: 101, column: 23, scope: !9088, inlinedAt: !9126)
!9285 = !DILocation(line: 101, column: 2, scope: !9088, inlinedAt: !9126)
!9286 = !DILocation(line: 102, column: 2, scope: !9088, inlinedAt: !9126)
!9287 = !DILocation(line: 241, column: 18, scope: !9123, inlinedAt: !9124)
!9288 = !DILocation(line: 96, column: 16, scope: !9120, inlinedAt: !9122)
!9289 = !DILocation(line: 96, column: 19, scope: !9120, inlinedAt: !9122)
!9290 = !DILocation(line: 95, column: 2, scope: !9120, inlinedAt: !9122)
!9291 = !{i32 -2146373538}
!9292 = !DILocation(line: 1596, column: 31, scope: !9111)
!9293 = !DILocation(line: 1596, column: 36, scope: !9111)
!9294 = !DILocation(line: 1596, column: 27, scope: !9111)
!9295 = !DILocation(line: 1596, column: 12, scope: !9111)
!9296 = !DILocation(line: 1596, column: 10, scope: !9111)
!9297 = !DILocation(line: 1597, column: 7, scope: !9110)
!9298 = !DILocation(line: 1597, column: 14, scope: !9110)
!9299 = !DILocation(line: 1597, column: 7, scope: !9111)
!9300 = !DILocation(line: 1598, column: 4, scope: !9109)
!9301 = !DILocation(line: 1600, column: 20, scope: !9109)
!9302 = !DILocation(line: 330, column: 31, scope: !9107, inlinedAt: !9108)
!9303 = !DILocation(line: 101, column: 20, scope: !9088, inlinedAt: !9115)
!9304 = !DILocation(line: 101, column: 23, scope: !9088, inlinedAt: !9115)
!9305 = !DILocation(line: 101, column: 2, scope: !9088, inlinedAt: !9115)
!9306 = !DILocation(line: 102, column: 2, scope: !9088, inlinedAt: !9115)
!9307 = !DILocation(line: 331, column: 18, scope: !9107, inlinedAt: !9108)
!9308 = !DILocation(line: 109, column: 16, scope: !9102, inlinedAt: !9106)
!9309 = !DILocation(line: 109, column: 19, scope: !9102, inlinedAt: !9106)
!9310 = !DILocation(line: 108, column: 2, scope: !9102, inlinedAt: !9106)
!9311 = !{i32 -2146373328}
!9312 = !DILocation(line: 1601, column: 17, scope: !9109)
!9313 = !DILocation(line: 1601, column: 8, scope: !9109)
!9314 = !DILocation(line: 1601, column: 15, scope: !9109)
!9315 = !DILocation(line: 1602, column: 4, scope: !9109)
!9316 = !DILocation(line: 1604, column: 2, scope: !9111)
!9317 = !DILocation(line: 1594, column: 24, scope: !9112)
!9318 = !DILocation(line: 1594, column: 2, scope: !9112)
!9319 = distinct !{!9319, !9280, !9320}
!9320 = !DILocation(line: 1604, column: 2, scope: !9113)
!9321 = !DILocation(line: 1605, column: 6, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1605, column: 6)
!9323 = !DILocation(line: 1605, column: 11, scope: !9322)
!9324 = !DILocation(line: 1605, column: 8, scope: !9322)
!9325 = !DILocation(line: 1605, column: 6, scope: !9069)
!9326 = !DILocation(line: 1606, column: 22, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1605, column: 16)
!9328 = !DILocation(line: 1606, column: 27, scope: !9327)
!9329 = !DILocation(line: 1606, column: 31, scope: !9327)
!9330 = !DILocation(line: 1606, column: 18, scope: !9327)
!9331 = !DILocation(line: 1606, column: 3, scope: !9327)
!9332 = !DILocation(line: 1607, column: 22, scope: !9327)
!9333 = !DILocation(line: 1607, column: 27, scope: !9327)
!9334 = !DILocation(line: 1607, column: 31, scope: !9327)
!9335 = !DILocation(line: 1607, column: 18, scope: !9327)
!9336 = !DILocation(line: 1607, column: 3, scope: !9327)
!9337 = !DILocation(line: 1608, column: 2, scope: !9327)
!9338 = !DILocation(line: 1609, column: 3, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 1608, column: 9)
!9340 = !DILocation(line: 1609, column: 10, scope: !9339)
!9341 = !DILocation(line: 1609, column: 14, scope: !9339)
!9342 = !DILocation(line: 1610, column: 23, scope: !9339)
!9343 = !DILocation(line: 1610, column: 28, scope: !9339)
!9344 = !DILocation(line: 1610, column: 19, scope: !9339)
!9345 = !DILocation(line: 1610, column: 4, scope: !9339)
!9346 = distinct !{!9346, !9338, !9347}
!9347 = !DILocation(line: 1610, column: 30, scope: !9339)
!9348 = !DILocation(line: 1613, column: 31, scope: !9083)
!9349 = !DILocation(line: 748, column: 31, scope: !9080, inlinedAt: !9082)
!9350 = !DILocation(line: 101, column: 20, scope: !9088, inlinedAt: !9096)
!9351 = !DILocation(line: 101, column: 23, scope: !9088, inlinedAt: !9096)
!9352 = !DILocation(line: 101, column: 2, scope: !9088, inlinedAt: !9096)
!9353 = !DILocation(line: 102, column: 2, scope: !9088, inlinedAt: !9096)
!9354 = !DILocation(line: 749, column: 34, scope: !9080, inlinedAt: !9082)
!9355 = !{i32 -2146372528, i32 -2146372461}
!9356 = !DILocation(line: 1613, column: 6, scope: !9069)
!9357 = !DILocation(line: 1614, column: 17, scope: !9083)
!9358 = !DILocation(line: 1614, column: 3, scope: !9083)
!9359 = !DILocation(line: 1615, column: 27, scope: !9069)
!9360 = !DILocation(line: 1615, column: 2, scope: !9069)
!9361 = !DILocation(line: 1616, column: 15, scope: !9069)
!9362 = !DILocation(line: 1616, column: 9, scope: !9069)
!9363 = !DILocation(line: 1616, column: 2, scope: !9069)
!9364 = !DILabel(scope: !9069, name: "free_urbs", file: !3, line: 1618)
!9365 = !DILocation(line: 1618, column: 2, scope: !9069)
!9366 = !DILocation(line: 1619, column: 9, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1619, column: 2)
!9368 = !DILocation(line: 1619, column: 7, scope: !9367)
!9369 = !DILocation(line: 1619, column: 14, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 1619, column: 2)
!9371 = !DILocation(line: 1619, column: 18, scope: !9370)
!9372 = !DILocation(line: 1619, column: 16, scope: !9370)
!9373 = !DILocation(line: 1619, column: 2, scope: !9367)
!9374 = !DILocation(line: 1620, column: 20, scope: !9370)
!9375 = !DILocation(line: 1620, column: 25, scope: !9370)
!9376 = !DILocation(line: 1620, column: 16, scope: !9370)
!9377 = !DILocation(line: 1620, column: 3, scope: !9370)
!9378 = !DILocation(line: 1619, column: 24, scope: !9370)
!9379 = !DILocation(line: 1619, column: 2, scope: !9370)
!9380 = distinct !{!9380, !9373, !9381}
!9381 = !DILocation(line: 1620, column: 27, scope: !9367)
!9382 = !DILocation(line: 1621, column: 12, scope: !9069)
!9383 = !DILocation(line: 1621, column: 8, scope: !9069)
!9384 = !DILocation(line: 1621, column: 2, scope: !9069)
!9385 = !DILabel(scope: !9069, name: "free_buf", file: !3, line: 1622)
!9386 = !DILocation(line: 1622, column: 2, scope: !9069)
!9387 = !DILocation(line: 1623, column: 20, scope: !9069)
!9388 = !DILocation(line: 1623, column: 26, scope: !9069)
!9389 = !DILocation(line: 1623, column: 32, scope: !9069)
!9390 = !DILocation(line: 1623, column: 37, scope: !9069)
!9391 = !DILocation(line: 1623, column: 2, scope: !9069)
!9392 = !DILocation(line: 1624, column: 9, scope: !9069)
!9393 = !DILocation(line: 1624, column: 2, scope: !9069)
!9394 = !DILocation(line: 1625, column: 1, scope: !9069)
!9395 = distinct !DISubprogram(name: "toggle_sync_simple", scope: !3, file: !3, line: 1783, type: !7179, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9396 = !DILocalVariable(name: "dev", arg: 1, scope: !9395, file: !3, line: 1783, type: !4522)
!9397 = !DILocation(line: 1783, column: 51, scope: !9395)
!9398 = !DILocalVariable(name: "ep", scope: !9395, file: !3, line: 1785, type: !168)
!9399 = !DILocation(line: 1785, column: 8, scope: !9395)
!9400 = !DILocalVariable(name: "retval", scope: !9395, file: !3, line: 1786, type: !168)
!9401 = !DILocation(line: 1786, column: 8, scope: !9395)
!9402 = !DILocalVariable(name: "urb", scope: !9395, file: !3, line: 1787, type: !4089)
!9403 = !DILocation(line: 1787, column: 15, scope: !9395)
!9404 = !DILocalVariable(name: "udev", scope: !9395, file: !3, line: 1788, type: !170)
!9405 = !DILocation(line: 1788, column: 21, scope: !9395)
!9406 = !DILocation(line: 1788, column: 46, scope: !9395)
!9407 = !DILocation(line: 1788, column: 28, scope: !9395)
!9408 = !DILocalVariable(name: "maxp", scope: !9395, file: !3, line: 1789, type: !7)
!9409 = !DILocation(line: 1789, column: 12, scope: !9395)
!9410 = !DILocation(line: 1789, column: 33, scope: !9395)
!9411 = !DILocation(line: 1789, column: 39, scope: !9395)
!9412 = !DILocation(line: 1789, column: 44, scope: !9395)
!9413 = !DILocation(line: 1789, column: 19, scope: !9395)
!9414 = !DILocation(line: 1796, column: 25, scope: !9395)
!9415 = !DILocation(line: 1796, column: 39, scope: !9395)
!9416 = !DILocation(line: 1796, column: 37, scope: !9395)
!9417 = !DILocation(line: 1796, column: 35, scope: !9395)
!9418 = !DILocation(line: 1796, column: 8, scope: !9395)
!9419 = !DILocation(line: 1796, column: 6, scope: !9395)
!9420 = !DILocation(line: 1797, column: 6, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 1797, column: 6)
!9422 = !DILocation(line: 1797, column: 10, scope: !9421)
!9423 = !DILocation(line: 1797, column: 6, scope: !9395)
!9424 = !DILocation(line: 1798, column: 3, scope: !9421)
!9425 = !DILocation(line: 1800, column: 2, scope: !9395)
!9426 = !DILocation(line: 1800, column: 7, scope: !9395)
!9427 = !DILocation(line: 1800, column: 22, scope: !9395)
!9428 = !DILocation(line: 1802, column: 7, scope: !9395)
!9429 = !DILocation(line: 1802, column: 5, scope: !9395)
!9430 = !DILocation(line: 1803, column: 14, scope: !9395)
!9431 = !DILocation(line: 1803, column: 19, scope: !9395)
!9432 = !DILocation(line: 1803, column: 2, scope: !9395)
!9433 = !DILocation(line: 1803, column: 7, scope: !9395)
!9434 = !DILocation(line: 1803, column: 12, scope: !9395)
!9435 = !DILocation(line: 1804, column: 28, scope: !9395)
!9436 = !DILocation(line: 1804, column: 33, scope: !9395)
!9437 = !DILocation(line: 1804, column: 37, scope: !9395)
!9438 = !DILocation(line: 1804, column: 11, scope: !9395)
!9439 = !DILocation(line: 1804, column: 9, scope: !9395)
!9440 = !DILocation(line: 1806, column: 18, scope: !9395)
!9441 = !DILocation(line: 1806, column: 2, scope: !9395)
!9442 = !DILocation(line: 1807, column: 9, scope: !9395)
!9443 = !DILocation(line: 1807, column: 2, scope: !9395)
!9444 = !DILocation(line: 1808, column: 1, scope: !9395)
!9445 = distinct !DISubprogram(name: "usbtest_alloc_urb", scope: !3, file: !3, line: 257, type: !9446, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9446 = !DISubroutineType(types: !9447)
!9447 = !{!4089, !170, !168, !311, !7, !7, !159, !4138}
!9448 = !DILocation(line: 445, column: 72, scope: !4461, inlinedAt: !9449)
!9449 = distinct !DILocation(line: 552, column: 10, scope: !4466, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 293, column: 26, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 289, column: 6)
!9452 = !DILocation(line: 446, column: 9, scope: !4461, inlinedAt: !9449)
!9453 = !DILocation(line: 446, column: 23, scope: !4461, inlinedAt: !9449)
!9454 = !DILocation(line: 448, column: 8, scope: !4461, inlinedAt: !9449)
!9455 = !DILocation(line: 318, column: 67, scope: !4479, inlinedAt: !9456)
!9456 = distinct !DILocation(line: 553, column: 20, scope: !4466, inlinedAt: !9450)
!9457 = !DILocation(line: 346, column: 58, scope: !4485, inlinedAt: !9458)
!9458 = distinct !DILocation(line: 547, column: 11, scope: !4466, inlinedAt: !9450)
!9459 = !DILocation(line: 472, column: 28, scope: !4491, inlinedAt: !9460)
!9460 = distinct !DILocation(line: 481, column: 9, scope: !4496, inlinedAt: !9461)
!9461 = distinct !DILocation(line: 545, column: 11, scope: !4498, inlinedAt: !9450)
!9462 = !DILocation(line: 472, column: 40, scope: !4491, inlinedAt: !9460)
!9463 = !DILocation(line: 472, column: 60, scope: !4491, inlinedAt: !9460)
!9464 = !DILocation(line: 478, column: 51, scope: !4496, inlinedAt: !9461)
!9465 = !DILocation(line: 478, column: 63, scope: !4496, inlinedAt: !9461)
!9466 = !DILocation(line: 480, column: 15, scope: !4496, inlinedAt: !9461)
!9467 = !DILocation(line: 538, column: 45, scope: !4468, inlinedAt: !9450)
!9468 = !DILocation(line: 538, column: 57, scope: !4468, inlinedAt: !9450)
!9469 = !DILocation(line: 542, column: 16, scope: !4466, inlinedAt: !9450)
!9470 = !DILocalVariable(name: "udev", arg: 1, scope: !9445, file: !3, line: 258, type: !170)
!9471 = !DILocation(line: 258, column: 21, scope: !9445)
!9472 = !DILocalVariable(name: "pipe", arg: 2, scope: !9445, file: !3, line: 259, type: !168)
!9473 = !DILocation(line: 259, column: 8, scope: !9445)
!9474 = !DILocalVariable(name: "bytes", arg: 3, scope: !9445, file: !3, line: 260, type: !311)
!9475 = !DILocation(line: 260, column: 17, scope: !9445)
!9476 = !DILocalVariable(name: "transfer_flags", arg: 4, scope: !9445, file: !3, line: 261, type: !7)
!9477 = !DILocation(line: 261, column: 12, scope: !9445)
!9478 = !DILocalVariable(name: "offset", arg: 5, scope: !9445, file: !3, line: 262, type: !7)
!9479 = !DILocation(line: 262, column: 12, scope: !9445)
!9480 = !DILocalVariable(name: "bInterval", arg: 6, scope: !9445, file: !3, line: 263, type: !159)
!9481 = !DILocation(line: 263, column: 7, scope: !9445)
!9482 = !DILocalVariable(name: "complete_fn", arg: 7, scope: !9445, file: !3, line: 264, type: !4138)
!9483 = !DILocation(line: 264, column: 18, scope: !9445)
!9484 = !DILocalVariable(name: "urb", scope: !9445, file: !3, line: 266, type: !4089)
!9485 = !DILocation(line: 266, column: 15, scope: !9445)
!9486 = !DILocation(line: 268, column: 8, scope: !9445)
!9487 = !DILocation(line: 268, column: 6, scope: !9445)
!9488 = !DILocation(line: 269, column: 7, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 269, column: 6)
!9490 = !DILocation(line: 269, column: 6, scope: !9445)
!9491 = !DILocation(line: 270, column: 10, scope: !9489)
!9492 = !DILocation(line: 270, column: 3, scope: !9489)
!9493 = !DILocation(line: 272, column: 6, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 272, column: 6)
!9495 = !DILocation(line: 272, column: 6, scope: !9445)
!9496 = !DILocation(line: 273, column: 20, scope: !9494)
!9497 = !DILocation(line: 273, column: 25, scope: !9494)
!9498 = !DILocation(line: 273, column: 31, scope: !9494)
!9499 = !DILocation(line: 273, column: 43, scope: !9494)
!9500 = !DILocation(line: 273, column: 50, scope: !9494)
!9501 = !DILocation(line: 274, column: 11, scope: !9494)
!9502 = !DILocation(line: 273, column: 3, scope: !9494)
!9503 = !DILocation(line: 276, column: 21, scope: !9494)
!9504 = !DILocation(line: 276, column: 26, scope: !9494)
!9505 = !DILocation(line: 276, column: 32, scope: !9494)
!9506 = !DILocation(line: 276, column: 44, scope: !9494)
!9507 = !DILocation(line: 276, column: 51, scope: !9494)
!9508 = !DILocation(line: 276, column: 3, scope: !9494)
!9509 = !DILocation(line: 279, column: 19, scope: !9445)
!9510 = !DILocation(line: 279, column: 25, scope: !9445)
!9511 = !DILocation(line: 279, column: 31, scope: !9445)
!9512 = !DILocation(line: 279, column: 18, scope: !9445)
!9513 = !DILocation(line: 279, column: 2, scope: !9445)
!9514 = !DILocation(line: 279, column: 7, scope: !9445)
!9515 = !DILocation(line: 279, column: 16, scope: !9445)
!9516 = !DILocation(line: 282, column: 24, scope: !9445)
!9517 = !DILocation(line: 282, column: 2, scope: !9445)
!9518 = !DILocation(line: 282, column: 7, scope: !9445)
!9519 = !DILocation(line: 282, column: 22, scope: !9445)
!9520 = !DILocation(line: 283, column: 6, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 283, column: 6)
!9522 = !DILocation(line: 283, column: 6, scope: !9445)
!9523 = !DILocation(line: 284, column: 3, scope: !9521)
!9524 = !DILocation(line: 284, column: 8, scope: !9521)
!9525 = !DILocation(line: 284, column: 23, scope: !9521)
!9526 = !DILocation(line: 286, column: 7, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 286, column: 6)
!9528 = !DILocation(line: 286, column: 15, scope: !9527)
!9529 = !DILocation(line: 286, column: 13, scope: !9527)
!9530 = !DILocation(line: 286, column: 23, scope: !9527)
!9531 = !DILocation(line: 286, column: 6, scope: !9445)
!9532 = !DILocation(line: 287, column: 10, scope: !9527)
!9533 = !DILocation(line: 287, column: 3, scope: !9527)
!9534 = !DILocation(line: 289, column: 6, scope: !9451)
!9535 = !DILocation(line: 289, column: 11, scope: !9451)
!9536 = !DILocation(line: 289, column: 26, scope: !9451)
!9537 = !DILocation(line: 289, column: 6, scope: !9445)
!9538 = !DILocation(line: 290, column: 45, scope: !9451)
!9539 = !DILocation(line: 290, column: 51, scope: !9451)
!9540 = !DILocation(line: 290, column: 59, scope: !9451)
!9541 = !DILocation(line: 290, column: 57, scope: !9451)
!9542 = !DILocation(line: 291, column: 17, scope: !9451)
!9543 = !DILocation(line: 291, column: 22, scope: !9451)
!9544 = !DILocation(line: 290, column: 26, scope: !9451)
!9545 = !DILocation(line: 290, column: 3, scope: !9451)
!9546 = !DILocation(line: 290, column: 8, scope: !9451)
!9547 = !DILocation(line: 290, column: 24, scope: !9451)
!9548 = !DILocation(line: 293, column: 34, scope: !9451)
!9549 = !DILocation(line: 293, column: 42, scope: !9451)
!9550 = !DILocation(line: 293, column: 40, scope: !9451)
!9551 = !DILocation(line: 540, column: 27, scope: !4467, inlinedAt: !9450)
!9552 = !DILocation(line: 540, column: 6, scope: !4467, inlinedAt: !9450)
!9553 = !DILocation(line: 540, column: 6, scope: !4468, inlinedAt: !9450)
!9554 = !DILocation(line: 544, column: 7, scope: !4498, inlinedAt: !9450)
!9555 = !DILocation(line: 544, column: 12, scope: !4498, inlinedAt: !9450)
!9556 = !DILocation(line: 544, column: 7, scope: !4466, inlinedAt: !9450)
!9557 = !DILocation(line: 545, column: 25, scope: !4498, inlinedAt: !9450)
!9558 = !DILocation(line: 545, column: 31, scope: !4498, inlinedAt: !9450)
!9559 = !DILocation(line: 480, column: 33, scope: !4496, inlinedAt: !9461)
!9560 = !DILocation(line: 480, column: 23, scope: !4496, inlinedAt: !9461)
!9561 = !DILocation(line: 481, column: 29, scope: !4496, inlinedAt: !9461)
!9562 = !DILocation(line: 481, column: 35, scope: !4496, inlinedAt: !9461)
!9563 = !DILocation(line: 481, column: 42, scope: !4496, inlinedAt: !9461)
!9564 = !DILocation(line: 474, column: 23, scope: !4491, inlinedAt: !9460)
!9565 = !DILocation(line: 474, column: 29, scope: !4491, inlinedAt: !9460)
!9566 = !DILocation(line: 474, column: 36, scope: !4491, inlinedAt: !9460)
!9567 = !DILocation(line: 474, column: 9, scope: !4491, inlinedAt: !9460)
!9568 = !DILocation(line: 545, column: 4, scope: !4498, inlinedAt: !9450)
!9569 = !DILocation(line: 547, column: 25, scope: !4466, inlinedAt: !9450)
!9570 = !DILocation(line: 348, column: 7, scope: !4626, inlinedAt: !9458)
!9571 = !DILocation(line: 348, column: 6, scope: !4485, inlinedAt: !9458)
!9572 = !DILocation(line: 349, column: 3, scope: !4626, inlinedAt: !9458)
!9573 = !DILocation(line: 351, column: 6, scope: !4630, inlinedAt: !9458)
!9574 = !DILocation(line: 351, column: 11, scope: !4630, inlinedAt: !9458)
!9575 = !DILocation(line: 351, column: 6, scope: !4485, inlinedAt: !9458)
!9576 = !DILocation(line: 352, column: 3, scope: !4630, inlinedAt: !9458)
!9577 = !DILocation(line: 354, column: 32, scope: !4635, inlinedAt: !9458)
!9578 = !DILocation(line: 354, column: 37, scope: !4635, inlinedAt: !9458)
!9579 = !DILocation(line: 354, column: 42, scope: !4635, inlinedAt: !9458)
!9580 = !DILocation(line: 354, column: 45, scope: !4635, inlinedAt: !9458)
!9581 = !DILocation(line: 354, column: 50, scope: !4635, inlinedAt: !9458)
!9582 = !DILocation(line: 354, column: 6, scope: !4485, inlinedAt: !9458)
!9583 = !DILocation(line: 355, column: 3, scope: !4635, inlinedAt: !9458)
!9584 = !DILocation(line: 356, column: 32, scope: !4643, inlinedAt: !9458)
!9585 = !DILocation(line: 356, column: 37, scope: !4643, inlinedAt: !9458)
!9586 = !DILocation(line: 356, column: 43, scope: !4643, inlinedAt: !9458)
!9587 = !DILocation(line: 356, column: 46, scope: !4643, inlinedAt: !9458)
!9588 = !DILocation(line: 356, column: 51, scope: !4643, inlinedAt: !9458)
!9589 = !DILocation(line: 356, column: 6, scope: !4485, inlinedAt: !9458)
!9590 = !DILocation(line: 357, column: 3, scope: !4643, inlinedAt: !9458)
!9591 = !DILocation(line: 358, column: 6, scope: !4651, inlinedAt: !9458)
!9592 = !DILocation(line: 358, column: 11, scope: !4651, inlinedAt: !9458)
!9593 = !DILocation(line: 358, column: 6, scope: !4485, inlinedAt: !9458)
!9594 = !DILocation(line: 358, column: 26, scope: !4651, inlinedAt: !9458)
!9595 = !DILocation(line: 359, column: 6, scope: !4656, inlinedAt: !9458)
!9596 = !DILocation(line: 359, column: 11, scope: !4656, inlinedAt: !9458)
!9597 = !DILocation(line: 359, column: 6, scope: !4485, inlinedAt: !9458)
!9598 = !DILocation(line: 359, column: 26, scope: !4656, inlinedAt: !9458)
!9599 = !DILocation(line: 360, column: 6, scope: !4661, inlinedAt: !9458)
!9600 = !DILocation(line: 360, column: 11, scope: !4661, inlinedAt: !9458)
!9601 = !DILocation(line: 360, column: 6, scope: !4485, inlinedAt: !9458)
!9602 = !DILocation(line: 360, column: 26, scope: !4661, inlinedAt: !9458)
!9603 = !DILocation(line: 361, column: 6, scope: !4666, inlinedAt: !9458)
!9604 = !DILocation(line: 361, column: 11, scope: !4666, inlinedAt: !9458)
!9605 = !DILocation(line: 361, column: 6, scope: !4485, inlinedAt: !9458)
!9606 = !DILocation(line: 361, column: 26, scope: !4666, inlinedAt: !9458)
!9607 = !DILocation(line: 362, column: 6, scope: !4671, inlinedAt: !9458)
!9608 = !DILocation(line: 362, column: 11, scope: !4671, inlinedAt: !9458)
!9609 = !DILocation(line: 362, column: 6, scope: !4485, inlinedAt: !9458)
!9610 = !DILocation(line: 362, column: 26, scope: !4671, inlinedAt: !9458)
!9611 = !DILocation(line: 363, column: 6, scope: !4676, inlinedAt: !9458)
!9612 = !DILocation(line: 363, column: 11, scope: !4676, inlinedAt: !9458)
!9613 = !DILocation(line: 363, column: 6, scope: !4485, inlinedAt: !9458)
!9614 = !DILocation(line: 363, column: 26, scope: !4676, inlinedAt: !9458)
!9615 = !DILocation(line: 364, column: 6, scope: !4681, inlinedAt: !9458)
!9616 = !DILocation(line: 364, column: 11, scope: !4681, inlinedAt: !9458)
!9617 = !DILocation(line: 364, column: 6, scope: !4485, inlinedAt: !9458)
!9618 = !DILocation(line: 364, column: 26, scope: !4681, inlinedAt: !9458)
!9619 = !DILocation(line: 365, column: 6, scope: !4686, inlinedAt: !9458)
!9620 = !DILocation(line: 365, column: 11, scope: !4686, inlinedAt: !9458)
!9621 = !DILocation(line: 365, column: 6, scope: !4485, inlinedAt: !9458)
!9622 = !DILocation(line: 365, column: 26, scope: !4686, inlinedAt: !9458)
!9623 = !DILocation(line: 366, column: 6, scope: !4691, inlinedAt: !9458)
!9624 = !DILocation(line: 366, column: 11, scope: !4691, inlinedAt: !9458)
!9625 = !DILocation(line: 366, column: 6, scope: !4485, inlinedAt: !9458)
!9626 = !DILocation(line: 366, column: 26, scope: !4691, inlinedAt: !9458)
!9627 = !DILocation(line: 367, column: 6, scope: !4696, inlinedAt: !9458)
!9628 = !DILocation(line: 367, column: 11, scope: !4696, inlinedAt: !9458)
!9629 = !DILocation(line: 367, column: 6, scope: !4485, inlinedAt: !9458)
!9630 = !DILocation(line: 367, column: 26, scope: !4696, inlinedAt: !9458)
!9631 = !DILocation(line: 368, column: 6, scope: !4701, inlinedAt: !9458)
!9632 = !DILocation(line: 368, column: 11, scope: !4701, inlinedAt: !9458)
!9633 = !DILocation(line: 368, column: 6, scope: !4485, inlinedAt: !9458)
!9634 = !DILocation(line: 368, column: 26, scope: !4701, inlinedAt: !9458)
!9635 = !DILocation(line: 369, column: 6, scope: !4706, inlinedAt: !9458)
!9636 = !DILocation(line: 369, column: 11, scope: !4706, inlinedAt: !9458)
!9637 = !DILocation(line: 369, column: 6, scope: !4485, inlinedAt: !9458)
!9638 = !DILocation(line: 369, column: 26, scope: !4706, inlinedAt: !9458)
!9639 = !DILocation(line: 370, column: 6, scope: !4711, inlinedAt: !9458)
!9640 = !DILocation(line: 370, column: 11, scope: !4711, inlinedAt: !9458)
!9641 = !DILocation(line: 370, column: 6, scope: !4485, inlinedAt: !9458)
!9642 = !DILocation(line: 370, column: 26, scope: !4711, inlinedAt: !9458)
!9643 = !DILocation(line: 371, column: 6, scope: !4716, inlinedAt: !9458)
!9644 = !DILocation(line: 371, column: 11, scope: !4716, inlinedAt: !9458)
!9645 = !DILocation(line: 371, column: 6, scope: !4485, inlinedAt: !9458)
!9646 = !DILocation(line: 371, column: 26, scope: !4716, inlinedAt: !9458)
!9647 = !DILocation(line: 372, column: 6, scope: !4721, inlinedAt: !9458)
!9648 = !DILocation(line: 372, column: 11, scope: !4721, inlinedAt: !9458)
!9649 = !DILocation(line: 372, column: 6, scope: !4485, inlinedAt: !9458)
!9650 = !DILocation(line: 372, column: 26, scope: !4721, inlinedAt: !9458)
!9651 = !DILocation(line: 373, column: 6, scope: !4726, inlinedAt: !9458)
!9652 = !DILocation(line: 373, column: 11, scope: !4726, inlinedAt: !9458)
!9653 = !DILocation(line: 373, column: 6, scope: !4485, inlinedAt: !9458)
!9654 = !DILocation(line: 373, column: 26, scope: !4726, inlinedAt: !9458)
!9655 = !DILocation(line: 374, column: 6, scope: !4731, inlinedAt: !9458)
!9656 = !DILocation(line: 374, column: 11, scope: !4731, inlinedAt: !9458)
!9657 = !DILocation(line: 374, column: 6, scope: !4485, inlinedAt: !9458)
!9658 = !DILocation(line: 374, column: 26, scope: !4731, inlinedAt: !9458)
!9659 = !DILocation(line: 375, column: 6, scope: !4736, inlinedAt: !9458)
!9660 = !DILocation(line: 375, column: 11, scope: !4736, inlinedAt: !9458)
!9661 = !DILocation(line: 375, column: 6, scope: !4485, inlinedAt: !9458)
!9662 = !DILocation(line: 375, column: 27, scope: !4736, inlinedAt: !9458)
!9663 = !DILocation(line: 376, column: 6, scope: !4741, inlinedAt: !9458)
!9664 = !DILocation(line: 376, column: 11, scope: !4741, inlinedAt: !9458)
!9665 = !DILocation(line: 376, column: 6, scope: !4485, inlinedAt: !9458)
!9666 = !DILocation(line: 376, column: 32, scope: !4741, inlinedAt: !9458)
!9667 = !DILocation(line: 377, column: 6, scope: !4746, inlinedAt: !9458)
!9668 = !DILocation(line: 377, column: 11, scope: !4746, inlinedAt: !9458)
!9669 = !DILocation(line: 377, column: 6, scope: !4485, inlinedAt: !9458)
!9670 = !DILocation(line: 377, column: 32, scope: !4746, inlinedAt: !9458)
!9671 = !DILocation(line: 378, column: 6, scope: !4751, inlinedAt: !9458)
!9672 = !DILocation(line: 378, column: 11, scope: !4751, inlinedAt: !9458)
!9673 = !DILocation(line: 378, column: 6, scope: !4485, inlinedAt: !9458)
!9674 = !DILocation(line: 378, column: 32, scope: !4751, inlinedAt: !9458)
!9675 = !DILocation(line: 379, column: 6, scope: !4756, inlinedAt: !9458)
!9676 = !DILocation(line: 379, column: 11, scope: !4756, inlinedAt: !9458)
!9677 = !DILocation(line: 379, column: 6, scope: !4485, inlinedAt: !9458)
!9678 = !DILocation(line: 379, column: 33, scope: !4756, inlinedAt: !9458)
!9679 = !DILocation(line: 380, column: 6, scope: !4761, inlinedAt: !9458)
!9680 = !DILocation(line: 380, column: 11, scope: !4761, inlinedAt: !9458)
!9681 = !DILocation(line: 380, column: 6, scope: !4485, inlinedAt: !9458)
!9682 = !DILocation(line: 380, column: 33, scope: !4761, inlinedAt: !9458)
!9683 = !DILocation(line: 381, column: 6, scope: !4766, inlinedAt: !9458)
!9684 = !DILocation(line: 381, column: 11, scope: !4766, inlinedAt: !9458)
!9685 = !DILocation(line: 381, column: 6, scope: !4485, inlinedAt: !9458)
!9686 = !DILocation(line: 381, column: 33, scope: !4766, inlinedAt: !9458)
!9687 = !DILocation(line: 382, column: 2, scope: !4771, inlinedAt: !9458)
!9688 = !DILocation(line: 382, column: 2, scope: !4775, inlinedAt: !9458)
!9689 = !DILocation(line: 382, column: 2, scope: !4776, inlinedAt: !9458)
!9690 = !DILocation(line: 386, column: 1, scope: !4485, inlinedAt: !9458)
!9691 = !DILocation(line: 547, column: 9, scope: !4466, inlinedAt: !9450)
!9692 = !DILocation(line: 549, column: 8, scope: !4782, inlinedAt: !9450)
!9693 = !DILocation(line: 549, column: 7, scope: !4466, inlinedAt: !9450)
!9694 = !DILocation(line: 550, column: 4, scope: !4782, inlinedAt: !9450)
!9695 = !DILocation(line: 553, column: 33, scope: !4466, inlinedAt: !9450)
!9696 = !DILocation(line: 325, column: 6, scope: !4787, inlinedAt: !9456)
!9697 = !DILocation(line: 325, column: 6, scope: !4479, inlinedAt: !9456)
!9698 = !DILocation(line: 326, column: 3, scope: !4787, inlinedAt: !9456)
!9699 = !DILocation(line: 332, column: 9, scope: !4479, inlinedAt: !9456)
!9700 = !DILocation(line: 332, column: 15, scope: !4479, inlinedAt: !9456)
!9701 = !DILocation(line: 332, column: 2, scope: !4479, inlinedAt: !9456)
!9702 = !DILocation(line: 336, column: 1, scope: !4479, inlinedAt: !9456)
!9703 = !DILocation(line: 553, column: 5, scope: !4466, inlinedAt: !9450)
!9704 = !DILocation(line: 553, column: 41, scope: !4466, inlinedAt: !9450)
!9705 = !DILocation(line: 554, column: 5, scope: !4466, inlinedAt: !9450)
!9706 = !DILocation(line: 554, column: 12, scope: !4466, inlinedAt: !9450)
!9707 = !DILocation(line: 448, column: 31, scope: !4461, inlinedAt: !9449)
!9708 = !DILocation(line: 448, column: 34, scope: !4461, inlinedAt: !9449)
!9709 = !DILocation(line: 448, column: 14, scope: !4461, inlinedAt: !9449)
!9710 = !DILocation(line: 450, column: 22, scope: !4461, inlinedAt: !9449)
!9711 = !DILocation(line: 450, column: 25, scope: !4461, inlinedAt: !9449)
!9712 = !DILocation(line: 450, column: 30, scope: !4461, inlinedAt: !9449)
!9713 = !DILocation(line: 450, column: 36, scope: !4461, inlinedAt: !9449)
!9714 = !DILocation(line: 450, column: 8, scope: !4461, inlinedAt: !9449)
!9715 = !DILocation(line: 450, column: 6, scope: !4461, inlinedAt: !9449)
!9716 = !DILocation(line: 451, column: 9, scope: !4461, inlinedAt: !9449)
!9717 = !DILocation(line: 552, column: 3, scope: !4466, inlinedAt: !9450)
!9718 = !DILocation(line: 557, column: 19, scope: !4468, inlinedAt: !9450)
!9719 = !DILocation(line: 557, column: 25, scope: !4468, inlinedAt: !9450)
!9720 = !DILocation(line: 557, column: 9, scope: !4468, inlinedAt: !9450)
!9721 = !DILocation(line: 557, column: 2, scope: !4468, inlinedAt: !9450)
!9722 = !DILocation(line: 558, column: 1, scope: !4468, inlinedAt: !9450)
!9723 = !DILocation(line: 293, column: 3, scope: !9451)
!9724 = !DILocation(line: 293, column: 8, scope: !9451)
!9725 = !DILocation(line: 293, column: 24, scope: !9451)
!9726 = !DILocation(line: 295, column: 7, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 295, column: 6)
!9728 = !DILocation(line: 295, column: 12, scope: !9727)
!9729 = !DILocation(line: 295, column: 6, scope: !9445)
!9730 = !DILocation(line: 296, column: 16, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9727, file: !3, line: 295, column: 29)
!9732 = !DILocation(line: 296, column: 3, scope: !9731)
!9733 = !DILocation(line: 297, column: 3, scope: !9731)
!9734 = !DILocation(line: 302, column: 6, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 302, column: 6)
!9736 = !DILocation(line: 302, column: 6, scope: !9445)
!9737 = !DILocation(line: 303, column: 10, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 302, column: 14)
!9739 = !DILocation(line: 303, column: 15, scope: !9738)
!9740 = !DILocation(line: 303, column: 44, scope: !9738)
!9741 = !DILocation(line: 303, column: 3, scope: !9738)
!9742 = !DILocation(line: 304, column: 27, scope: !9738)
!9743 = !DILocation(line: 304, column: 3, scope: !9738)
!9744 = !DILocation(line: 304, column: 8, scope: !9738)
!9745 = !DILocation(line: 304, column: 24, scope: !9738)
!9746 = !DILocation(line: 305, column: 7, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 305, column: 7)
!9748 = !DILocation(line: 305, column: 12, scope: !9747)
!9749 = !DILocation(line: 305, column: 27, scope: !9747)
!9750 = !DILocation(line: 305, column: 7, scope: !9738)
!9751 = !DILocation(line: 306, column: 25, scope: !9747)
!9752 = !DILocation(line: 306, column: 4, scope: !9747)
!9753 = !DILocation(line: 306, column: 9, scope: !9747)
!9754 = !DILocation(line: 306, column: 22, scope: !9747)
!9755 = !DILocation(line: 307, column: 2, scope: !9738)
!9756 = !DILocation(line: 311, column: 9, scope: !9445)
!9757 = !DILocation(line: 311, column: 14, scope: !9445)
!9758 = !DILocation(line: 312, column: 4, scope: !9445)
!9759 = !DILocation(line: 311, column: 2, scope: !9445)
!9760 = !DILocation(line: 313, column: 4, scope: !9445)
!9761 = !DILocation(line: 314, column: 9, scope: !9445)
!9762 = !DILocation(line: 314, column: 2, scope: !9445)
!9763 = !DILocation(line: 315, column: 1, scope: !9445)
!9764 = distinct !DISubprogram(name: "simple_callback", scope: !3, file: !3, line: 252, type: !4140, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9765 = !DILocalVariable(name: "urb", arg: 1, scope: !9764, file: !3, line: 252, type: !4089)
!9766 = !DILocation(line: 252, column: 41, scope: !9764)
!9767 = !DILocation(line: 254, column: 11, scope: !9764)
!9768 = !DILocation(line: 254, column: 16, scope: !9764)
!9769 = !DILocation(line: 254, column: 2, scope: !9764)
!9770 = !DILocation(line: 255, column: 1, scope: !9764)
!9771 = distinct !DISubprogram(name: "usb_fill_int_urb", scope: !6, file: !6, line: 1688, type: !9772, scopeLine: 1696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9772 = !DISubroutineType(types: !9773)
!9773 = !{null, !4089, !170, !7, !169, !168, !4138, !169, !168}
!9774 = !DILocalVariable(name: "urb", arg: 1, scope: !9771, file: !6, line: 1688, type: !4089)
!9775 = !DILocation(line: 1688, column: 49, scope: !9771)
!9776 = !DILocalVariable(name: "dev", arg: 2, scope: !9771, file: !6, line: 1689, type: !170)
!9777 = !DILocation(line: 1689, column: 28, scope: !9771)
!9778 = !DILocalVariable(name: "pipe", arg: 3, scope: !9771, file: !6, line: 1690, type: !7)
!9779 = !DILocation(line: 1690, column: 22, scope: !9771)
!9780 = !DILocalVariable(name: "transfer_buffer", arg: 4, scope: !9771, file: !6, line: 1691, type: !169)
!9781 = !DILocation(line: 1691, column: 15, scope: !9771)
!9782 = !DILocalVariable(name: "buffer_length", arg: 5, scope: !9771, file: !6, line: 1692, type: !168)
!9783 = !DILocation(line: 1692, column: 13, scope: !9771)
!9784 = !DILocalVariable(name: "complete_fn", arg: 6, scope: !9771, file: !6, line: 1693, type: !4138)
!9785 = !DILocation(line: 1693, column: 24, scope: !9771)
!9786 = !DILocalVariable(name: "context", arg: 7, scope: !9771, file: !6, line: 1694, type: !169)
!9787 = !DILocation(line: 1694, column: 15, scope: !9771)
!9788 = !DILocalVariable(name: "interval", arg: 8, scope: !9771, file: !6, line: 1695, type: !168)
!9789 = !DILocation(line: 1695, column: 13, scope: !9771)
!9790 = !DILocation(line: 1697, column: 13, scope: !9771)
!9791 = !DILocation(line: 1697, column: 2, scope: !9771)
!9792 = !DILocation(line: 1697, column: 7, scope: !9771)
!9793 = !DILocation(line: 1697, column: 11, scope: !9771)
!9794 = !DILocation(line: 1698, column: 14, scope: !9771)
!9795 = !DILocation(line: 1698, column: 2, scope: !9771)
!9796 = !DILocation(line: 1698, column: 7, scope: !9771)
!9797 = !DILocation(line: 1698, column: 12, scope: !9771)
!9798 = !DILocation(line: 1699, column: 25, scope: !9771)
!9799 = !DILocation(line: 1699, column: 2, scope: !9771)
!9800 = !DILocation(line: 1699, column: 7, scope: !9771)
!9801 = !DILocation(line: 1699, column: 23, scope: !9771)
!9802 = !DILocation(line: 1700, column: 32, scope: !9771)
!9803 = !DILocation(line: 1700, column: 2, scope: !9771)
!9804 = !DILocation(line: 1700, column: 7, scope: !9771)
!9805 = !DILocation(line: 1700, column: 30, scope: !9771)
!9806 = !DILocation(line: 1701, column: 18, scope: !9771)
!9807 = !DILocation(line: 1701, column: 2, scope: !9771)
!9808 = !DILocation(line: 1701, column: 7, scope: !9771)
!9809 = !DILocation(line: 1701, column: 16, scope: !9771)
!9810 = !DILocation(line: 1702, column: 17, scope: !9771)
!9811 = !DILocation(line: 1702, column: 2, scope: !9771)
!9812 = !DILocation(line: 1702, column: 7, scope: !9771)
!9813 = !DILocation(line: 1702, column: 15, scope: !9771)
!9814 = !DILocation(line: 1704, column: 6, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9771, file: !6, line: 1704, column: 6)
!9816 = !DILocation(line: 1704, column: 11, scope: !9815)
!9817 = !DILocation(line: 1704, column: 17, scope: !9815)
!9818 = !DILocation(line: 1704, column: 35, scope: !9815)
!9819 = !DILocation(line: 1704, column: 38, scope: !9815)
!9820 = !DILocation(line: 1704, column: 43, scope: !9815)
!9821 = !DILocation(line: 1704, column: 49, scope: !9815)
!9822 = !DILocation(line: 1704, column: 6, scope: !9771)
!9823 = !DILocalVariable(name: "__UNIQUE_ID___x232", scope: !9824, file: !6, line: 1706, type: !168)
!9824 = distinct !DILexicalBlock(scope: !9825, file: !6, line: 1706, column: 14)
!9825 = distinct !DILexicalBlock(scope: !9815, file: !6, line: 1704, column: 69)
!9826 = !DILocation(line: 1706, column: 14, scope: !9824)
!9827 = !DILocalVariable(name: "__UNIQUE_ID___x230", scope: !9828, file: !6, line: 1706, type: !168)
!9828 = distinct !DILexicalBlock(scope: !9824, file: !6, line: 1706, column: 14)
!9829 = !DILocation(line: 1706, column: 14, scope: !9828)
!9830 = !DILocalVariable(name: "__UNIQUE_ID___y231", scope: !9828, file: !6, line: 1706, type: !168)
!9831 = !DILocalVariable(name: "__UNIQUE_ID___y233", scope: !9824, file: !6, line: 1706, type: !168)
!9832 = !DILocation(line: 1706, column: 12, scope: !9825)
!9833 = !DILocation(line: 1708, column: 25, scope: !9825)
!9834 = !DILocation(line: 1708, column: 34, scope: !9825)
!9835 = !DILocation(line: 1708, column: 21, scope: !9825)
!9836 = !DILocation(line: 1708, column: 3, scope: !9825)
!9837 = !DILocation(line: 1708, column: 8, scope: !9825)
!9838 = !DILocation(line: 1708, column: 17, scope: !9825)
!9839 = !DILocation(line: 1709, column: 2, scope: !9825)
!9840 = !DILocation(line: 1710, column: 19, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9815, file: !6, line: 1709, column: 9)
!9842 = !DILocation(line: 1710, column: 3, scope: !9841)
!9843 = !DILocation(line: 1710, column: 8, scope: !9841)
!9844 = !DILocation(line: 1710, column: 17, scope: !9841)
!9845 = !DILocation(line: 1713, column: 2, scope: !9771)
!9846 = !DILocation(line: 1713, column: 7, scope: !9771)
!9847 = !DILocation(line: 1713, column: 19, scope: !9771)
!9848 = !DILocation(line: 1714, column: 1, scope: !9771)
!9849 = distinct !DISubprogram(name: "usb_fill_bulk_urb", scope: !6, file: !6, line: 1647, type: !9850, scopeLine: 1654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9850 = !DISubroutineType(types: !9851)
!9851 = !{null, !4089, !170, !7, !169, !168, !4138, !169}
!9852 = !DILocalVariable(name: "urb", arg: 1, scope: !9849, file: !6, line: 1647, type: !4089)
!9853 = !DILocation(line: 1647, column: 50, scope: !9849)
!9854 = !DILocalVariable(name: "dev", arg: 2, scope: !9849, file: !6, line: 1648, type: !170)
!9855 = !DILocation(line: 1648, column: 29, scope: !9849)
!9856 = !DILocalVariable(name: "pipe", arg: 3, scope: !9849, file: !6, line: 1649, type: !7)
!9857 = !DILocation(line: 1649, column: 23, scope: !9849)
!9858 = !DILocalVariable(name: "transfer_buffer", arg: 4, scope: !9849, file: !6, line: 1650, type: !169)
!9859 = !DILocation(line: 1650, column: 16, scope: !9849)
!9860 = !DILocalVariable(name: "buffer_length", arg: 5, scope: !9849, file: !6, line: 1651, type: !168)
!9861 = !DILocation(line: 1651, column: 14, scope: !9849)
!9862 = !DILocalVariable(name: "complete_fn", arg: 6, scope: !9849, file: !6, line: 1652, type: !4138)
!9863 = !DILocation(line: 1652, column: 25, scope: !9849)
!9864 = !DILocalVariable(name: "context", arg: 7, scope: !9849, file: !6, line: 1653, type: !169)
!9865 = !DILocation(line: 1653, column: 16, scope: !9849)
!9866 = !DILocation(line: 1655, column: 13, scope: !9849)
!9867 = !DILocation(line: 1655, column: 2, scope: !9849)
!9868 = !DILocation(line: 1655, column: 7, scope: !9849)
!9869 = !DILocation(line: 1655, column: 11, scope: !9849)
!9870 = !DILocation(line: 1656, column: 14, scope: !9849)
!9871 = !DILocation(line: 1656, column: 2, scope: !9849)
!9872 = !DILocation(line: 1656, column: 7, scope: !9849)
!9873 = !DILocation(line: 1656, column: 12, scope: !9849)
!9874 = !DILocation(line: 1657, column: 25, scope: !9849)
!9875 = !DILocation(line: 1657, column: 2, scope: !9849)
!9876 = !DILocation(line: 1657, column: 7, scope: !9849)
!9877 = !DILocation(line: 1657, column: 23, scope: !9849)
!9878 = !DILocation(line: 1658, column: 32, scope: !9849)
!9879 = !DILocation(line: 1658, column: 2, scope: !9849)
!9880 = !DILocation(line: 1658, column: 7, scope: !9849)
!9881 = !DILocation(line: 1658, column: 30, scope: !9849)
!9882 = !DILocation(line: 1659, column: 18, scope: !9849)
!9883 = !DILocation(line: 1659, column: 2, scope: !9849)
!9884 = !DILocation(line: 1659, column: 7, scope: !9849)
!9885 = !DILocation(line: 1659, column: 16, scope: !9849)
!9886 = !DILocation(line: 1660, column: 17, scope: !9849)
!9887 = !DILocation(line: 1660, column: 2, scope: !9849)
!9888 = !DILocation(line: 1660, column: 7, scope: !9849)
!9889 = !DILocation(line: 1660, column: 15, scope: !9849)
!9890 = !DILocation(line: 1661, column: 1, scope: !9849)
!9891 = !DILocalVariable(name: "x", arg: 1, scope: !4417, file: !1480, line: 85, type: !1478)
!9892 = !DILocation(line: 85, column: 57, scope: !4417)
!9893 = !DILocation(line: 87, column: 2, scope: !4417)
!9894 = !DILocation(line: 87, column: 5, scope: !4417)
!9895 = !DILocation(line: 87, column: 10, scope: !4417)
!9896 = !DILocation(line: 88, column: 2, scope: !4417)
!9897 = !DILocation(line: 88, column: 2, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !4417, file: !1480, line: 88, column: 2)
!9899 = !DILocation(line: 89, column: 1, scope: !4417)
!9900 = distinct !DISubprogram(name: "simple_fill_buf", scope: !3, file: !3, line: 358, type: !4140, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9901 = !DILocalVariable(name: "urb", arg: 1, scope: !9900, file: !3, line: 358, type: !4089)
!9902 = !DILocation(line: 358, column: 41, scope: !9900)
!9903 = !DILocalVariable(name: "i", scope: !9900, file: !3, line: 360, type: !7)
!9904 = !DILocation(line: 360, column: 11, scope: !9900)
!9905 = !DILocalVariable(name: "buf", scope: !9900, file: !3, line: 361, type: !4540)
!9906 = !DILocation(line: 361, column: 7, scope: !9900)
!9907 = !DILocation(line: 361, column: 13, scope: !9900)
!9908 = !DILocation(line: 361, column: 18, scope: !9900)
!9909 = !DILocalVariable(name: "len", scope: !9900, file: !3, line: 362, type: !7)
!9910 = !DILocation(line: 362, column: 11, scope: !9900)
!9911 = !DILocation(line: 362, column: 17, scope: !9900)
!9912 = !DILocation(line: 362, column: 22, scope: !9900)
!9913 = !DILocalVariable(name: "maxpacket", scope: !9900, file: !3, line: 363, type: !7)
!9914 = !DILocation(line: 363, column: 11, scope: !9900)
!9915 = !DILocation(line: 365, column: 10, scope: !9900)
!9916 = !DILocation(line: 365, column: 2, scope: !9900)
!9917 = !DILocation(line: 365, column: 19, scope: !9900)
!9918 = !DILocation(line: 369, column: 10, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 365, column: 19)
!9920 = !DILocation(line: 369, column: 18, scope: !9919)
!9921 = !DILocation(line: 369, column: 3, scope: !9919)
!9922 = !DILocation(line: 370, column: 3, scope: !9919)
!9923 = !DILocation(line: 372, column: 29, scope: !9919)
!9924 = !DILocation(line: 372, column: 34, scope: !9919)
!9925 = !DILocation(line: 372, column: 39, scope: !9919)
!9926 = !DILocation(line: 372, column: 44, scope: !9919)
!9927 = !DILocation(line: 372, column: 15, scope: !9919)
!9928 = !DILocation(line: 372, column: 13, scope: !9919)
!9929 = !DILocation(line: 373, column: 10, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 373, column: 3)
!9931 = !DILocation(line: 373, column: 8, scope: !9930)
!9932 = !DILocation(line: 373, column: 15, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 373, column: 3)
!9934 = !DILocation(line: 373, column: 19, scope: !9933)
!9935 = !DILocation(line: 373, column: 17, scope: !9933)
!9936 = !DILocation(line: 373, column: 3, scope: !9930)
!9937 = !DILocation(line: 374, column: 20, scope: !9933)
!9938 = !DILocation(line: 374, column: 24, scope: !9933)
!9939 = !DILocation(line: 374, column: 22, scope: !9933)
!9940 = !DILocation(line: 374, column: 35, scope: !9933)
!9941 = !DILocation(line: 374, column: 13, scope: !9933)
!9942 = !DILocation(line: 374, column: 8, scope: !9933)
!9943 = !DILocation(line: 374, column: 11, scope: !9933)
!9944 = !DILocation(line: 374, column: 4, scope: !9933)
!9945 = !DILocation(line: 373, column: 25, scope: !9933)
!9946 = !DILocation(line: 373, column: 3, scope: !9933)
!9947 = distinct !{!9947, !9936, !9948}
!9948 = !DILocation(line: 374, column: 39, scope: !9930)
!9949 = !DILocation(line: 375, column: 3, scope: !9919)
!9950 = !DILocation(line: 377, column: 1, scope: !9900)
!9951 = distinct !DISubprogram(name: "simple_check_buf", scope: !3, file: !3, line: 400, type: !9952, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!9952 = !DISubroutineType(types: !9953)
!9953 = !{!168, !4522, !4089}
!9954 = !DILocalVariable(name: "tdev", arg: 1, scope: !9951, file: !3, line: 400, type: !4522)
!9955 = !DILocation(line: 400, column: 49, scope: !9951)
!9956 = !DILocalVariable(name: "urb", arg: 2, scope: !9951, file: !3, line: 400, type: !4089)
!9957 = !DILocation(line: 400, column: 67, scope: !9951)
!9958 = !DILocalVariable(name: "i", scope: !9951, file: !3, line: 402, type: !7)
!9959 = !DILocation(line: 402, column: 11, scope: !9951)
!9960 = !DILocalVariable(name: "expected", scope: !9951, file: !3, line: 403, type: !159)
!9961 = !DILocation(line: 403, column: 6, scope: !9951)
!9962 = !DILocalVariable(name: "buf", scope: !9951, file: !3, line: 404, type: !4540)
!9963 = !DILocation(line: 404, column: 7, scope: !9951)
!9964 = !DILocation(line: 404, column: 13, scope: !9951)
!9965 = !DILocation(line: 404, column: 18, scope: !9951)
!9966 = !DILocalVariable(name: "len", scope: !9951, file: !3, line: 405, type: !7)
!9967 = !DILocation(line: 405, column: 11, scope: !9951)
!9968 = !DILocation(line: 405, column: 17, scope: !9951)
!9969 = !DILocation(line: 405, column: 22, scope: !9951)
!9970 = !DILocalVariable(name: "maxpacket", scope: !9951, file: !3, line: 406, type: !7)
!9971 = !DILocation(line: 406, column: 11, scope: !9951)
!9972 = !DILocation(line: 406, column: 37, scope: !9951)
!9973 = !DILocation(line: 406, column: 42, scope: !9951)
!9974 = !DILocation(line: 406, column: 47, scope: !9951)
!9975 = !DILocation(line: 406, column: 52, scope: !9951)
!9976 = !DILocation(line: 406, column: 23, scope: !9951)
!9977 = !DILocalVariable(name: "ret", scope: !9951, file: !3, line: 408, type: !168)
!9978 = !DILocation(line: 408, column: 6, scope: !9951)
!9979 = !DILocation(line: 408, column: 30, scope: !9951)
!9980 = !DILocation(line: 408, column: 36, scope: !9951)
!9981 = !DILocation(line: 408, column: 12, scope: !9951)
!9982 = !DILocation(line: 409, column: 6, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 409, column: 6)
!9984 = !DILocation(line: 409, column: 6, scope: !9951)
!9985 = !DILocation(line: 410, column: 10, scope: !9983)
!9986 = !DILocation(line: 410, column: 3, scope: !9983)
!9987 = !DILocation(line: 412, column: 9, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 412, column: 2)
!9989 = !DILocation(line: 412, column: 7, scope: !9988)
!9990 = !DILocation(line: 412, column: 14, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9988, file: !3, line: 412, column: 2)
!9992 = !DILocation(line: 412, column: 18, scope: !9991)
!9993 = !DILocation(line: 412, column: 16, scope: !9991)
!9994 = !DILocation(line: 412, column: 2, scope: !9988)
!9995 = !DILocation(line: 413, column: 11, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 412, column: 35)
!9997 = !DILocation(line: 413, column: 3, scope: !9996)
!9998 = !DILocation(line: 416, column: 13, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9996, file: !3, line: 413, column: 20)
!10000 = !DILocation(line: 417, column: 4, scope: !9999)
!10001 = !DILocation(line: 424, column: 16, scope: !9999)
!10002 = !DILocation(line: 424, column: 20, scope: !9999)
!10003 = !DILocation(line: 424, column: 18, scope: !9999)
!10004 = !DILocation(line: 424, column: 31, scope: !9999)
!10005 = !DILocation(line: 424, column: 15, scope: !9999)
!10006 = !DILocation(line: 424, column: 13, scope: !9999)
!10007 = !DILocation(line: 425, column: 4, scope: !9999)
!10008 = !DILocation(line: 428, column: 17, scope: !9999)
!10009 = !DILocation(line: 428, column: 16, scope: !9999)
!10010 = !DILocation(line: 428, column: 15, scope: !9999)
!10011 = !DILocation(line: 428, column: 13, scope: !9999)
!10012 = !DILocation(line: 429, column: 4, scope: !9999)
!10013 = !DILocation(line: 431, column: 8, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !9996, file: !3, line: 431, column: 7)
!10015 = !DILocation(line: 431, column: 7, scope: !10014)
!10016 = !DILocation(line: 431, column: 15, scope: !10014)
!10017 = !DILocation(line: 431, column: 12, scope: !10014)
!10018 = !DILocation(line: 431, column: 7, scope: !9996)
!10019 = !DILocation(line: 432, column: 4, scope: !10014)
!10020 = !DILocation(line: 433, column: 3, scope: !9996)
!10021 = !DILocation(line: 434, column: 3, scope: !9996)
!10022 = !DILocation(line: 412, column: 24, scope: !9991)
!10023 = !DILocation(line: 412, column: 31, scope: !9991)
!10024 = !DILocation(line: 412, column: 2, scope: !9991)
!10025 = distinct !{!10025, !9994, !10026}
!10026 = !DILocation(line: 435, column: 2, scope: !9988)
!10027 = !DILocation(line: 436, column: 2, scope: !9951)
!10028 = !DILocation(line: 437, column: 1, scope: !9951)
!10029 = distinct !DISubprogram(name: "get_maxpacket", scope: !3, file: !3, line: 342, type: !10030, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10030 = !DISubroutineType(types: !10031)
!10031 = !{!7, !170, !168}
!10032 = !DILocalVariable(name: "p", arg: 1, scope: !10033, file: !10034, line: 64, type: !10037)
!10033 = distinct !DISubprogram(name: "__le16_to_cpup", scope: !10034, file: !10034, line: 64, type: !10035, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10034 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!10035 = !DISubroutineType(types: !10036)
!10036 = !{!142, !10037}
!10037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10038, size: 64)
!10038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!10039 = !DILocation(line: 64, column: 59, scope: !10033, inlinedAt: !10040)
!10040 = distinct !DILocation(line: 347, column: 9, scope: !10029)
!10041 = !DILocalVariable(name: "udev", arg: 1, scope: !10029, file: !3, line: 342, type: !170)
!10042 = !DILocation(line: 342, column: 50, scope: !10029)
!10043 = !DILocalVariable(name: "pipe", arg: 2, scope: !10029, file: !3, line: 342, type: !168)
!10044 = !DILocation(line: 342, column: 60, scope: !10029)
!10045 = !DILocalVariable(name: "ep", scope: !10029, file: !3, line: 344, type: !3987)
!10046 = !DILocation(line: 344, column: 28, scope: !10029)
!10047 = !DILocation(line: 346, column: 25, scope: !10029)
!10048 = !DILocation(line: 346, column: 31, scope: !10029)
!10049 = !DILocation(line: 346, column: 7, scope: !10029)
!10050 = !DILocation(line: 346, column: 5, scope: !10029)
!10051 = !DILocation(line: 347, column: 23, scope: !10029)
!10052 = !DILocation(line: 347, column: 27, scope: !10029)
!10053 = !DILocation(line: 347, column: 32, scope: !10029)
!10054 = !DILocation(line: 66, column: 25, scope: !10033, inlinedAt: !10040)
!10055 = !DILocation(line: 66, column: 24, scope: !10033, inlinedAt: !10040)
!10056 = !DILocation(line: 347, column: 9, scope: !10029)
!10057 = !DILocation(line: 347, column: 2, scope: !10029)
!10058 = distinct !DISubprogram(name: "usb_pipe_endpoint", scope: !6, file: !6, line: 1970, type: !10059, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10059 = !DISubroutineType(types: !10060)
!10060 = !{!3987, !170, !7}
!10061 = !DILocalVariable(name: "dev", arg: 1, scope: !10058, file: !6, line: 1970, type: !170)
!10062 = !DILocation(line: 1970, column: 38, scope: !10058)
!10063 = !DILocalVariable(name: "pipe", arg: 2, scope: !10058, file: !6, line: 1970, type: !7)
!10064 = !DILocation(line: 1970, column: 56, scope: !10058)
!10065 = !DILocalVariable(name: "eps", scope: !10058, file: !6, line: 1972, type: !5717)
!10066 = !DILocation(line: 1972, column: 29, scope: !10058)
!10067 = !DILocation(line: 1973, column: 8, scope: !10058)
!10068 = !DILocation(line: 1973, column: 27, scope: !10058)
!10069 = !DILocation(line: 1973, column: 32, scope: !10058)
!10070 = !DILocation(line: 1973, column: 40, scope: !10058)
!10071 = !DILocation(line: 1973, column: 45, scope: !10058)
!10072 = !DILocation(line: 1973, column: 6, scope: !10058)
!10073 = !DILocation(line: 1974, column: 9, scope: !10058)
!10074 = !DILocation(line: 1974, column: 13, scope: !10058)
!10075 = !DILocation(line: 1974, column: 2, scope: !10058)
!10076 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !6725, file: !6725, line: 308, type: !6726, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10077 = !DILocalVariable(name: "m", arg: 1, scope: !10076, file: !6725, line: 308, type: !2800)
!10078 = !DILocation(line: 308, column: 66, scope: !10076)
!10079 = !DILocation(line: 310, column: 10, scope: !10076)
!10080 = !DILocation(line: 310, column: 12, scope: !10076)
!10081 = !DILocation(line: 310, column: 34, scope: !10076)
!10082 = !DILocation(line: 310, column: 39, scope: !10076)
!10083 = !DILocation(line: 310, column: 2, scope: !10076)
!10084 = distinct !DISubprogram(name: "check_guard_bytes", scope: !3, file: !3, line: 384, type: !9952, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10085 = !DILocalVariable(name: "tdev", arg: 1, scope: !10084, file: !3, line: 384, type: !4522)
!10086 = !DILocation(line: 384, column: 50, scope: !10084)
!10087 = !DILocalVariable(name: "urb", arg: 2, scope: !10084, file: !3, line: 384, type: !4089)
!10088 = !DILocation(line: 384, column: 68, scope: !10084)
!10089 = !DILocalVariable(name: "buf", scope: !10084, file: !3, line: 386, type: !4540)
!10090 = !DILocation(line: 386, column: 6, scope: !10084)
!10091 = !DILocation(line: 386, column: 12, scope: !10084)
!10092 = !DILocation(line: 386, column: 17, scope: !10084)
!10093 = !DILocalVariable(name: "guard", scope: !10084, file: !3, line: 387, type: !4540)
!10094 = !DILocation(line: 387, column: 6, scope: !10084)
!10095 = !DILocation(line: 387, column: 14, scope: !10084)
!10096 = !DILocation(line: 387, column: 34, scope: !10084)
!10097 = !DILocation(line: 387, column: 20, scope: !10084)
!10098 = !DILocation(line: 387, column: 18, scope: !10084)
!10099 = !DILocalVariable(name: "i", scope: !10084, file: !3, line: 388, type: !7)
!10100 = !DILocation(line: 388, column: 11, scope: !10084)
!10101 = !DILocation(line: 390, column: 9, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 390, column: 2)
!10103 = !DILocation(line: 390, column: 7, scope: !10102)
!10104 = !DILocation(line: 390, column: 14, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 390, column: 2)
!10106 = !DILocation(line: 390, column: 22, scope: !10105)
!10107 = !DILocation(line: 390, column: 20, scope: !10105)
!10108 = !DILocation(line: 390, column: 2, scope: !10102)
!10109 = !DILocation(line: 391, column: 8, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10111, file: !3, line: 391, column: 7)
!10111 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 390, column: 41)
!10112 = !DILocation(line: 391, column: 7, scope: !10110)
!10113 = !DILocation(line: 391, column: 14, scope: !10110)
!10114 = !DILocation(line: 391, column: 7, scope: !10111)
!10115 = !DILocation(line: 392, column: 4, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 391, column: 29)
!10117 = !DILocation(line: 394, column: 4, scope: !10116)
!10118 = !DILocation(line: 396, column: 2, scope: !10111)
!10119 = !DILocation(line: 390, column: 28, scope: !10105)
!10120 = !DILocation(line: 390, column: 37, scope: !10105)
!10121 = !DILocation(line: 390, column: 2, scope: !10105)
!10122 = distinct !{!10122, !10108, !10123}
!10123 = !DILocation(line: 396, column: 2, scope: !10102)
!10124 = !DILocation(line: 397, column: 2, scope: !10084)
!10125 = !DILocation(line: 398, column: 1, scope: !10084)
!10126 = distinct !DISubprogram(name: "buffer_offset", scope: !3, file: !3, line: 379, type: !10127, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{!311, !169}
!10129 = !DILocalVariable(name: "buf", arg: 1, scope: !10126, file: !3, line: 379, type: !169)
!10130 = !DILocation(line: 379, column: 49, scope: !10126)
!10131 = !DILocation(line: 381, column: 24, scope: !10126)
!10132 = !DILocation(line: 381, column: 9, scope: !10126)
!10133 = !DILocation(line: 381, column: 28, scope: !10126)
!10134 = !DILocation(line: 381, column: 2, scope: !10126)
!10135 = distinct !DISubprogram(name: "kmalloc_array", scope: !127, file: !127, line: 584, type: !10136, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10136 = !DISubroutineType(types: !10137)
!10137 = !{!169, !308, !308, !149}
!10138 = !DILocation(line: 445, column: 72, scope: !4461, inlinedAt: !10139)
!10139 = distinct !DILocation(line: 552, column: 10, scope: !4466, inlinedAt: !10140)
!10140 = distinct !DILocation(line: 591, column: 10, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10135, file: !127, line: 590, column: 6)
!10142 = !DILocation(line: 446, column: 9, scope: !4461, inlinedAt: !10139)
!10143 = !DILocation(line: 446, column: 23, scope: !4461, inlinedAt: !10139)
!10144 = !DILocation(line: 448, column: 8, scope: !4461, inlinedAt: !10139)
!10145 = !DILocation(line: 318, column: 67, scope: !4479, inlinedAt: !10146)
!10146 = distinct !DILocation(line: 553, column: 20, scope: !4466, inlinedAt: !10140)
!10147 = !DILocation(line: 346, column: 58, scope: !4485, inlinedAt: !10148)
!10148 = distinct !DILocation(line: 547, column: 11, scope: !4466, inlinedAt: !10140)
!10149 = !DILocation(line: 472, column: 28, scope: !4491, inlinedAt: !10150)
!10150 = distinct !DILocation(line: 481, column: 9, scope: !4496, inlinedAt: !10151)
!10151 = distinct !DILocation(line: 545, column: 11, scope: !4498, inlinedAt: !10140)
!10152 = !DILocation(line: 472, column: 40, scope: !4491, inlinedAt: !10150)
!10153 = !DILocation(line: 472, column: 60, scope: !4491, inlinedAt: !10150)
!10154 = !DILocation(line: 478, column: 51, scope: !4496, inlinedAt: !10151)
!10155 = !DILocation(line: 478, column: 63, scope: !4496, inlinedAt: !10151)
!10156 = !DILocation(line: 480, column: 15, scope: !4496, inlinedAt: !10151)
!10157 = !DILocation(line: 538, column: 45, scope: !4468, inlinedAt: !10140)
!10158 = !DILocation(line: 538, column: 57, scope: !4468, inlinedAt: !10140)
!10159 = !DILocation(line: 542, column: 16, scope: !4466, inlinedAt: !10140)
!10160 = !DILocalVariable(name: "n", arg: 1, scope: !10135, file: !127, line: 584, type: !308)
!10161 = !DILocation(line: 584, column: 42, scope: !10135)
!10162 = !DILocalVariable(name: "size", arg: 2, scope: !10135, file: !127, line: 584, type: !308)
!10163 = !DILocation(line: 584, column: 52, scope: !10135)
!10164 = !DILocalVariable(name: "flags", arg: 3, scope: !10135, file: !127, line: 584, type: !149)
!10165 = !DILocation(line: 584, column: 64, scope: !10135)
!10166 = !DILocalVariable(name: "bytes", scope: !10135, file: !127, line: 586, type: !308)
!10167 = !DILocation(line: 586, column: 9, scope: !10135)
!10168 = !DILocalVariable(name: "__a", scope: !10169, file: !127, line: 588, type: !308)
!10169 = distinct !DILexicalBlock(scope: !10170, file: !127, line: 588, column: 6)
!10170 = distinct !DILexicalBlock(scope: !10135, file: !127, line: 588, column: 6)
!10171 = !DILocation(line: 588, column: 6, scope: !10169)
!10172 = !DILocalVariable(name: "__b", scope: !10169, file: !127, line: 588, type: !308)
!10173 = !DILocalVariable(name: "__d", scope: !10169, file: !127, line: 588, type: !10174)
!10174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!10175 = !DILocation(line: 588, column: 6, scope: !10170)
!10176 = !DILocation(line: 588, column: 6, scope: !10135)
!10177 = !DILocation(line: 589, column: 3, scope: !10170)
!10178 = !DILocation(line: 590, column: 27, scope: !10141)
!10179 = !DILocation(line: 590, column: 6, scope: !10141)
!10180 = !DILocation(line: 590, column: 30, scope: !10141)
!10181 = !DILocation(line: 590, column: 54, scope: !10141)
!10182 = !DILocation(line: 590, column: 33, scope: !10141)
!10183 = !DILocation(line: 590, column: 6, scope: !10135)
!10184 = !DILocation(line: 591, column: 18, scope: !10141)
!10185 = !DILocation(line: 591, column: 25, scope: !10141)
!10186 = !DILocation(line: 540, column: 27, scope: !4467, inlinedAt: !10140)
!10187 = !DILocation(line: 540, column: 6, scope: !4467, inlinedAt: !10140)
!10188 = !DILocation(line: 540, column: 6, scope: !4468, inlinedAt: !10140)
!10189 = !DILocation(line: 544, column: 7, scope: !4498, inlinedAt: !10140)
!10190 = !DILocation(line: 544, column: 12, scope: !4498, inlinedAt: !10140)
!10191 = !DILocation(line: 544, column: 7, scope: !4466, inlinedAt: !10140)
!10192 = !DILocation(line: 545, column: 25, scope: !4498, inlinedAt: !10140)
!10193 = !DILocation(line: 545, column: 31, scope: !4498, inlinedAt: !10140)
!10194 = !DILocation(line: 480, column: 33, scope: !4496, inlinedAt: !10151)
!10195 = !DILocation(line: 480, column: 23, scope: !4496, inlinedAt: !10151)
!10196 = !DILocation(line: 481, column: 29, scope: !4496, inlinedAt: !10151)
!10197 = !DILocation(line: 481, column: 35, scope: !4496, inlinedAt: !10151)
!10198 = !DILocation(line: 481, column: 42, scope: !4496, inlinedAt: !10151)
!10199 = !DILocation(line: 474, column: 23, scope: !4491, inlinedAt: !10150)
!10200 = !DILocation(line: 474, column: 29, scope: !4491, inlinedAt: !10150)
!10201 = !DILocation(line: 474, column: 36, scope: !4491, inlinedAt: !10150)
!10202 = !DILocation(line: 474, column: 9, scope: !4491, inlinedAt: !10150)
!10203 = !DILocation(line: 545, column: 4, scope: !4498, inlinedAt: !10140)
!10204 = !DILocation(line: 547, column: 25, scope: !4466, inlinedAt: !10140)
!10205 = !DILocation(line: 348, column: 7, scope: !4626, inlinedAt: !10148)
!10206 = !DILocation(line: 348, column: 6, scope: !4485, inlinedAt: !10148)
!10207 = !DILocation(line: 349, column: 3, scope: !4626, inlinedAt: !10148)
!10208 = !DILocation(line: 351, column: 6, scope: !4630, inlinedAt: !10148)
!10209 = !DILocation(line: 351, column: 11, scope: !4630, inlinedAt: !10148)
!10210 = !DILocation(line: 351, column: 6, scope: !4485, inlinedAt: !10148)
!10211 = !DILocation(line: 352, column: 3, scope: !4630, inlinedAt: !10148)
!10212 = !DILocation(line: 354, column: 32, scope: !4635, inlinedAt: !10148)
!10213 = !DILocation(line: 354, column: 37, scope: !4635, inlinedAt: !10148)
!10214 = !DILocation(line: 354, column: 42, scope: !4635, inlinedAt: !10148)
!10215 = !DILocation(line: 354, column: 45, scope: !4635, inlinedAt: !10148)
!10216 = !DILocation(line: 354, column: 50, scope: !4635, inlinedAt: !10148)
!10217 = !DILocation(line: 354, column: 6, scope: !4485, inlinedAt: !10148)
!10218 = !DILocation(line: 355, column: 3, scope: !4635, inlinedAt: !10148)
!10219 = !DILocation(line: 356, column: 32, scope: !4643, inlinedAt: !10148)
!10220 = !DILocation(line: 356, column: 37, scope: !4643, inlinedAt: !10148)
!10221 = !DILocation(line: 356, column: 43, scope: !4643, inlinedAt: !10148)
!10222 = !DILocation(line: 356, column: 46, scope: !4643, inlinedAt: !10148)
!10223 = !DILocation(line: 356, column: 51, scope: !4643, inlinedAt: !10148)
!10224 = !DILocation(line: 356, column: 6, scope: !4485, inlinedAt: !10148)
!10225 = !DILocation(line: 357, column: 3, scope: !4643, inlinedAt: !10148)
!10226 = !DILocation(line: 358, column: 6, scope: !4651, inlinedAt: !10148)
!10227 = !DILocation(line: 358, column: 11, scope: !4651, inlinedAt: !10148)
!10228 = !DILocation(line: 358, column: 6, scope: !4485, inlinedAt: !10148)
!10229 = !DILocation(line: 358, column: 26, scope: !4651, inlinedAt: !10148)
!10230 = !DILocation(line: 359, column: 6, scope: !4656, inlinedAt: !10148)
!10231 = !DILocation(line: 359, column: 11, scope: !4656, inlinedAt: !10148)
!10232 = !DILocation(line: 359, column: 6, scope: !4485, inlinedAt: !10148)
!10233 = !DILocation(line: 359, column: 26, scope: !4656, inlinedAt: !10148)
!10234 = !DILocation(line: 360, column: 6, scope: !4661, inlinedAt: !10148)
!10235 = !DILocation(line: 360, column: 11, scope: !4661, inlinedAt: !10148)
!10236 = !DILocation(line: 360, column: 6, scope: !4485, inlinedAt: !10148)
!10237 = !DILocation(line: 360, column: 26, scope: !4661, inlinedAt: !10148)
!10238 = !DILocation(line: 361, column: 6, scope: !4666, inlinedAt: !10148)
!10239 = !DILocation(line: 361, column: 11, scope: !4666, inlinedAt: !10148)
!10240 = !DILocation(line: 361, column: 6, scope: !4485, inlinedAt: !10148)
!10241 = !DILocation(line: 361, column: 26, scope: !4666, inlinedAt: !10148)
!10242 = !DILocation(line: 362, column: 6, scope: !4671, inlinedAt: !10148)
!10243 = !DILocation(line: 362, column: 11, scope: !4671, inlinedAt: !10148)
!10244 = !DILocation(line: 362, column: 6, scope: !4485, inlinedAt: !10148)
!10245 = !DILocation(line: 362, column: 26, scope: !4671, inlinedAt: !10148)
!10246 = !DILocation(line: 363, column: 6, scope: !4676, inlinedAt: !10148)
!10247 = !DILocation(line: 363, column: 11, scope: !4676, inlinedAt: !10148)
!10248 = !DILocation(line: 363, column: 6, scope: !4485, inlinedAt: !10148)
!10249 = !DILocation(line: 363, column: 26, scope: !4676, inlinedAt: !10148)
!10250 = !DILocation(line: 364, column: 6, scope: !4681, inlinedAt: !10148)
!10251 = !DILocation(line: 364, column: 11, scope: !4681, inlinedAt: !10148)
!10252 = !DILocation(line: 364, column: 6, scope: !4485, inlinedAt: !10148)
!10253 = !DILocation(line: 364, column: 26, scope: !4681, inlinedAt: !10148)
!10254 = !DILocation(line: 365, column: 6, scope: !4686, inlinedAt: !10148)
!10255 = !DILocation(line: 365, column: 11, scope: !4686, inlinedAt: !10148)
!10256 = !DILocation(line: 365, column: 6, scope: !4485, inlinedAt: !10148)
!10257 = !DILocation(line: 365, column: 26, scope: !4686, inlinedAt: !10148)
!10258 = !DILocation(line: 366, column: 6, scope: !4691, inlinedAt: !10148)
!10259 = !DILocation(line: 366, column: 11, scope: !4691, inlinedAt: !10148)
!10260 = !DILocation(line: 366, column: 6, scope: !4485, inlinedAt: !10148)
!10261 = !DILocation(line: 366, column: 26, scope: !4691, inlinedAt: !10148)
!10262 = !DILocation(line: 367, column: 6, scope: !4696, inlinedAt: !10148)
!10263 = !DILocation(line: 367, column: 11, scope: !4696, inlinedAt: !10148)
!10264 = !DILocation(line: 367, column: 6, scope: !4485, inlinedAt: !10148)
!10265 = !DILocation(line: 367, column: 26, scope: !4696, inlinedAt: !10148)
!10266 = !DILocation(line: 368, column: 6, scope: !4701, inlinedAt: !10148)
!10267 = !DILocation(line: 368, column: 11, scope: !4701, inlinedAt: !10148)
!10268 = !DILocation(line: 368, column: 6, scope: !4485, inlinedAt: !10148)
!10269 = !DILocation(line: 368, column: 26, scope: !4701, inlinedAt: !10148)
!10270 = !DILocation(line: 369, column: 6, scope: !4706, inlinedAt: !10148)
!10271 = !DILocation(line: 369, column: 11, scope: !4706, inlinedAt: !10148)
!10272 = !DILocation(line: 369, column: 6, scope: !4485, inlinedAt: !10148)
!10273 = !DILocation(line: 369, column: 26, scope: !4706, inlinedAt: !10148)
!10274 = !DILocation(line: 370, column: 6, scope: !4711, inlinedAt: !10148)
!10275 = !DILocation(line: 370, column: 11, scope: !4711, inlinedAt: !10148)
!10276 = !DILocation(line: 370, column: 6, scope: !4485, inlinedAt: !10148)
!10277 = !DILocation(line: 370, column: 26, scope: !4711, inlinedAt: !10148)
!10278 = !DILocation(line: 371, column: 6, scope: !4716, inlinedAt: !10148)
!10279 = !DILocation(line: 371, column: 11, scope: !4716, inlinedAt: !10148)
!10280 = !DILocation(line: 371, column: 6, scope: !4485, inlinedAt: !10148)
!10281 = !DILocation(line: 371, column: 26, scope: !4716, inlinedAt: !10148)
!10282 = !DILocation(line: 372, column: 6, scope: !4721, inlinedAt: !10148)
!10283 = !DILocation(line: 372, column: 11, scope: !4721, inlinedAt: !10148)
!10284 = !DILocation(line: 372, column: 6, scope: !4485, inlinedAt: !10148)
!10285 = !DILocation(line: 372, column: 26, scope: !4721, inlinedAt: !10148)
!10286 = !DILocation(line: 373, column: 6, scope: !4726, inlinedAt: !10148)
!10287 = !DILocation(line: 373, column: 11, scope: !4726, inlinedAt: !10148)
!10288 = !DILocation(line: 373, column: 6, scope: !4485, inlinedAt: !10148)
!10289 = !DILocation(line: 373, column: 26, scope: !4726, inlinedAt: !10148)
!10290 = !DILocation(line: 374, column: 6, scope: !4731, inlinedAt: !10148)
!10291 = !DILocation(line: 374, column: 11, scope: !4731, inlinedAt: !10148)
!10292 = !DILocation(line: 374, column: 6, scope: !4485, inlinedAt: !10148)
!10293 = !DILocation(line: 374, column: 26, scope: !4731, inlinedAt: !10148)
!10294 = !DILocation(line: 375, column: 6, scope: !4736, inlinedAt: !10148)
!10295 = !DILocation(line: 375, column: 11, scope: !4736, inlinedAt: !10148)
!10296 = !DILocation(line: 375, column: 6, scope: !4485, inlinedAt: !10148)
!10297 = !DILocation(line: 375, column: 27, scope: !4736, inlinedAt: !10148)
!10298 = !DILocation(line: 376, column: 6, scope: !4741, inlinedAt: !10148)
!10299 = !DILocation(line: 376, column: 11, scope: !4741, inlinedAt: !10148)
!10300 = !DILocation(line: 376, column: 6, scope: !4485, inlinedAt: !10148)
!10301 = !DILocation(line: 376, column: 32, scope: !4741, inlinedAt: !10148)
!10302 = !DILocation(line: 377, column: 6, scope: !4746, inlinedAt: !10148)
!10303 = !DILocation(line: 377, column: 11, scope: !4746, inlinedAt: !10148)
!10304 = !DILocation(line: 377, column: 6, scope: !4485, inlinedAt: !10148)
!10305 = !DILocation(line: 377, column: 32, scope: !4746, inlinedAt: !10148)
!10306 = !DILocation(line: 378, column: 6, scope: !4751, inlinedAt: !10148)
!10307 = !DILocation(line: 378, column: 11, scope: !4751, inlinedAt: !10148)
!10308 = !DILocation(line: 378, column: 6, scope: !4485, inlinedAt: !10148)
!10309 = !DILocation(line: 378, column: 32, scope: !4751, inlinedAt: !10148)
!10310 = !DILocation(line: 379, column: 6, scope: !4756, inlinedAt: !10148)
!10311 = !DILocation(line: 379, column: 11, scope: !4756, inlinedAt: !10148)
!10312 = !DILocation(line: 379, column: 6, scope: !4485, inlinedAt: !10148)
!10313 = !DILocation(line: 379, column: 33, scope: !4756, inlinedAt: !10148)
!10314 = !DILocation(line: 380, column: 6, scope: !4761, inlinedAt: !10148)
!10315 = !DILocation(line: 380, column: 11, scope: !4761, inlinedAt: !10148)
!10316 = !DILocation(line: 380, column: 6, scope: !4485, inlinedAt: !10148)
!10317 = !DILocation(line: 380, column: 33, scope: !4761, inlinedAt: !10148)
!10318 = !DILocation(line: 381, column: 6, scope: !4766, inlinedAt: !10148)
!10319 = !DILocation(line: 381, column: 11, scope: !4766, inlinedAt: !10148)
!10320 = !DILocation(line: 381, column: 6, scope: !4485, inlinedAt: !10148)
!10321 = !DILocation(line: 381, column: 33, scope: !4766, inlinedAt: !10148)
!10322 = !DILocation(line: 382, column: 2, scope: !4771, inlinedAt: !10148)
!10323 = !DILocation(line: 382, column: 2, scope: !4775, inlinedAt: !10148)
!10324 = !DILocation(line: 382, column: 2, scope: !4776, inlinedAt: !10148)
!10325 = !DILocation(line: 386, column: 1, scope: !4485, inlinedAt: !10148)
!10326 = !DILocation(line: 547, column: 9, scope: !4466, inlinedAt: !10140)
!10327 = !DILocation(line: 549, column: 8, scope: !4782, inlinedAt: !10140)
!10328 = !DILocation(line: 549, column: 7, scope: !4466, inlinedAt: !10140)
!10329 = !DILocation(line: 550, column: 4, scope: !4782, inlinedAt: !10140)
!10330 = !DILocation(line: 553, column: 33, scope: !4466, inlinedAt: !10140)
!10331 = !DILocation(line: 325, column: 6, scope: !4787, inlinedAt: !10146)
!10332 = !DILocation(line: 325, column: 6, scope: !4479, inlinedAt: !10146)
!10333 = !DILocation(line: 326, column: 3, scope: !4787, inlinedAt: !10146)
!10334 = !DILocation(line: 332, column: 9, scope: !4479, inlinedAt: !10146)
!10335 = !DILocation(line: 332, column: 15, scope: !4479, inlinedAt: !10146)
!10336 = !DILocation(line: 332, column: 2, scope: !4479, inlinedAt: !10146)
!10337 = !DILocation(line: 336, column: 1, scope: !4479, inlinedAt: !10146)
!10338 = !DILocation(line: 553, column: 5, scope: !4466, inlinedAt: !10140)
!10339 = !DILocation(line: 553, column: 41, scope: !4466, inlinedAt: !10140)
!10340 = !DILocation(line: 554, column: 5, scope: !4466, inlinedAt: !10140)
!10341 = !DILocation(line: 554, column: 12, scope: !4466, inlinedAt: !10140)
!10342 = !DILocation(line: 448, column: 31, scope: !4461, inlinedAt: !10139)
!10343 = !DILocation(line: 448, column: 34, scope: !4461, inlinedAt: !10139)
!10344 = !DILocation(line: 448, column: 14, scope: !4461, inlinedAt: !10139)
!10345 = !DILocation(line: 450, column: 22, scope: !4461, inlinedAt: !10139)
!10346 = !DILocation(line: 450, column: 25, scope: !4461, inlinedAt: !10139)
!10347 = !DILocation(line: 450, column: 30, scope: !4461, inlinedAt: !10139)
!10348 = !DILocation(line: 450, column: 36, scope: !4461, inlinedAt: !10139)
!10349 = !DILocation(line: 450, column: 8, scope: !4461, inlinedAt: !10139)
!10350 = !DILocation(line: 450, column: 6, scope: !4461, inlinedAt: !10139)
!10351 = !DILocation(line: 451, column: 9, scope: !4461, inlinedAt: !10139)
!10352 = !DILocation(line: 552, column: 3, scope: !4466, inlinedAt: !10140)
!10353 = !DILocation(line: 557, column: 19, scope: !4468, inlinedAt: !10140)
!10354 = !DILocation(line: 557, column: 25, scope: !4468, inlinedAt: !10140)
!10355 = !DILocation(line: 557, column: 9, scope: !4468, inlinedAt: !10140)
!10356 = !DILocation(line: 557, column: 2, scope: !4468, inlinedAt: !10140)
!10357 = !DILocation(line: 558, column: 1, scope: !4468, inlinedAt: !10140)
!10358 = !DILocation(line: 591, column: 3, scope: !10141)
!10359 = !DILocation(line: 592, column: 19, scope: !10135)
!10360 = !DILocation(line: 592, column: 26, scope: !10135)
!10361 = !DILocation(line: 592, column: 9, scope: !10135)
!10362 = !DILocation(line: 592, column: 2, scope: !10135)
!10363 = !DILocation(line: 593, column: 1, scope: !10135)
!10364 = distinct !DISubprogram(name: "sg_set_buf", scope: !4119, file: !4119, line: 139, type: !10365, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10365 = !DISubroutineType(types: !10366)
!10366 = !{null, !4117, !2100, !7}
!10367 = !DILocalVariable(name: "sg", arg: 1, scope: !10364, file: !4119, line: 139, type: !4117)
!10368 = !DILocation(line: 139, column: 51, scope: !10364)
!10369 = !DILocalVariable(name: "buf", arg: 2, scope: !10364, file: !4119, line: 139, type: !2100)
!10370 = !DILocation(line: 139, column: 67, scope: !10364)
!10371 = !DILocalVariable(name: "buflen", arg: 3, scope: !10364, file: !4119, line: 140, type: !7)
!10372 = !DILocation(line: 140, column: 23, scope: !10364)
!10373 = !DILocation(line: 145, column: 14, scope: !10364)
!10374 = !DILocation(line: 145, column: 18, scope: !10364)
!10375 = !DILocation(line: 145, column: 37, scope: !10364)
!10376 = !DILocation(line: 145, column: 45, scope: !10364)
!10377 = !DILocation(line: 145, column: 2, scope: !10364)
!10378 = !DILocation(line: 146, column: 1, scope: !10364)
!10379 = distinct !DISubprogram(name: "__must_check_overflow", scope: !10380, file: !10380, line: 52, type: !10381, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10380 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!10381 = !DISubroutineType(types: !10382)
!10382 = !{!472, !472}
!10383 = !DILocalVariable(name: "overflow", arg: 1, scope: !10379, file: !10380, line: 52, type: !472)
!10384 = !DILocation(line: 52, column: 60, scope: !10379)
!10385 = !DILocation(line: 54, column: 9, scope: !10379)
!10386 = !DILocation(line: 54, column: 2, scope: !10379)
!10387 = distinct !DISubprogram(name: "sg_set_page", scope: !4119, file: !4119, line: 116, type: !10388, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10388 = !DISubroutineType(types: !10389)
!10389 = !{null, !4117, !702, !7, !7}
!10390 = !DILocalVariable(name: "sg", arg: 1, scope: !10387, file: !4119, line: 116, type: !4117)
!10391 = !DILocation(line: 116, column: 52, scope: !10387)
!10392 = !DILocalVariable(name: "page", arg: 2, scope: !10387, file: !4119, line: 116, type: !702)
!10393 = !DILocation(line: 116, column: 69, scope: !10387)
!10394 = !DILocalVariable(name: "len", arg: 3, scope: !10387, file: !4119, line: 117, type: !7)
!10395 = !DILocation(line: 117, column: 24, scope: !10387)
!10396 = !DILocalVariable(name: "offset", arg: 4, scope: !10387, file: !4119, line: 117, type: !7)
!10397 = !DILocation(line: 117, column: 42, scope: !10387)
!10398 = !DILocation(line: 119, column: 17, scope: !10387)
!10399 = !DILocation(line: 119, column: 21, scope: !10387)
!10400 = !DILocation(line: 119, column: 2, scope: !10387)
!10401 = !DILocation(line: 120, column: 15, scope: !10387)
!10402 = !DILocation(line: 120, column: 2, scope: !10387)
!10403 = !DILocation(line: 120, column: 6, scope: !10387)
!10404 = !DILocation(line: 120, column: 13, scope: !10387)
!10405 = !DILocation(line: 121, column: 15, scope: !10387)
!10406 = !DILocation(line: 121, column: 2, scope: !10387)
!10407 = !DILocation(line: 121, column: 6, scope: !10387)
!10408 = !DILocation(line: 121, column: 13, scope: !10387)
!10409 = !DILocation(line: 122, column: 1, scope: !10387)
!10410 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !10411, file: !10411, line: 18, type: !10412, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10411 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!10412 = !DISubroutineType(types: !10413)
!10413 = !{!311, !311}
!10414 = !DILocalVariable(name: "x", arg: 1, scope: !10410, file: !10411, line: 18, type: !311)
!10415 = !DILocation(line: 18, column: 63, scope: !10410)
!10416 = !DILocalVariable(name: "y", scope: !10410, file: !10411, line: 20, type: !311)
!10417 = !DILocation(line: 20, column: 16, scope: !10410)
!10418 = !DILocation(line: 20, column: 20, scope: !10410)
!10419 = !DILocation(line: 20, column: 22, scope: !10410)
!10420 = !DILocation(line: 23, column: 6, scope: !10410)
!10421 = !DILocation(line: 23, column: 12, scope: !10410)
!10422 = !DILocation(line: 23, column: 16, scope: !10410)
!10423 = !DILocation(line: 23, column: 14, scope: !10410)
!10424 = !DILocation(line: 23, column: 11, scope: !10410)
!10425 = !DILocation(line: 23, column: 21, scope: !10410)
!10426 = !DILocation(line: 23, column: 55, scope: !10410)
!10427 = !DILocation(line: 23, column: 53, scope: !10410)
!10428 = !DILocation(line: 23, column: 8, scope: !10410)
!10429 = !DILocation(line: 23, column: 4, scope: !10410)
!10430 = !DILocation(line: 25, column: 9, scope: !10410)
!10431 = !DILocation(line: 25, column: 2, scope: !10410)
!10432 = distinct !DISubprogram(name: "sg_assign_page", scope: !4119, file: !4119, line: 87, type: !10433, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10433 = !DISubroutineType(types: !10434)
!10434 = !{null, !4117, !702}
!10435 = !DILocalVariable(name: "sg", arg: 1, scope: !10432, file: !4119, line: 87, type: !4117)
!10436 = !DILocation(line: 87, column: 55, scope: !10432)
!10437 = !DILocalVariable(name: "page", arg: 2, scope: !10432, file: !4119, line: 87, type: !702)
!10438 = !DILocation(line: 87, column: 72, scope: !10432)
!10439 = !DILocalVariable(name: "page_link", scope: !10432, file: !4119, line: 89, type: !311)
!10440 = !DILocation(line: 89, column: 16, scope: !10432)
!10441 = !DILocation(line: 89, column: 28, scope: !10432)
!10442 = !DILocation(line: 89, column: 32, scope: !10432)
!10443 = !DILocation(line: 89, column: 42, scope: !10432)
!10444 = !DILocation(line: 95, column: 2, scope: !10432)
!10445 = !DILocation(line: 95, column: 2, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10447, file: !4119, line: 95, column: 2)
!10447 = distinct !DILexicalBlock(scope: !10432, file: !4119, line: 95, column: 2)
!10448 = !DILocation(line: 95, column: 2, scope: !10447)
!10449 = !DILocation(line: 95, column: 2, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10446, file: !4119, line: 95, column: 2)
!10451 = !DILocation(line: 95, column: 2, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10450, file: !4119, line: 95, column: 2)
!10453 = !DILocation(line: 95, column: 2, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10450, file: !4119, line: 95, column: 2)
!10455 = !{i32 -2142290770, i32 -2142290741, i32 -2142290695, i32 -2142290637, i32 -2142290583, i32 -2142290529, i32 -2142290474, i32 -2142290443}
!10456 = !DILocation(line: 95, column: 2, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !4119, line: 95, column: 2)
!10458 = distinct !DILexicalBlock(scope: !10450, file: !4119, line: 95, column: 2)
!10459 = !{i32 -2142289994, i32 -2142289987, i32 -2142289933, i32 -2142289902, i32 -2142289872}
!10460 = !DILocation(line: 95, column: 2, scope: !10458)
!10461 = !DILocation(line: 99, column: 18, scope: !10432)
!10462 = !DILocation(line: 99, column: 46, scope: !10432)
!10463 = !DILocation(line: 99, column: 30, scope: !10432)
!10464 = !DILocation(line: 99, column: 28, scope: !10432)
!10465 = !DILocation(line: 99, column: 2, scope: !10432)
!10466 = !DILocation(line: 99, column: 6, scope: !10432)
!10467 = !DILocation(line: 99, column: 16, scope: !10432)
!10468 = !DILocation(line: 100, column: 1, scope: !10432)
!10469 = distinct !DISubprogram(name: "init_timer_on_stack_key", scope: !3537, file: !3537, line: 101, type: !10470, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10470 = !DISubroutineType(types: !10471)
!10471 = !{null, !3545, !3542, !7, !155, !10472}
!10472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!10473 = !DILocalVariable(name: "timer", arg: 1, scope: !10469, file: !3537, line: 101, type: !3545)
!10474 = !DILocation(line: 101, column: 63, scope: !10469)
!10475 = !DILocalVariable(name: "func", arg: 2, scope: !10469, file: !3537, line: 102, type: !3542)
!10476 = !DILocation(line: 102, column: 16, scope: !10469)
!10477 = !DILocalVariable(name: "flags", arg: 3, scope: !10469, file: !3537, line: 103, type: !7)
!10478 = !DILocation(line: 103, column: 22, scope: !10469)
!10479 = !DILocalVariable(name: "name", arg: 4, scope: !10469, file: !3537, line: 104, type: !155)
!10480 = !DILocation(line: 104, column: 21, scope: !10469)
!10481 = !DILocalVariable(name: "key", arg: 5, scope: !10469, file: !3537, line: 105, type: !10472)
!10482 = !DILocation(line: 105, column: 32, scope: !10469)
!10483 = !DILocation(line: 107, column: 17, scope: !10469)
!10484 = !DILocation(line: 107, column: 24, scope: !10469)
!10485 = !DILocation(line: 107, column: 30, scope: !10469)
!10486 = !DILocation(line: 107, column: 37, scope: !10469)
!10487 = !DILocation(line: 107, column: 43, scope: !10469)
!10488 = !DILocation(line: 107, column: 2, scope: !10469)
!10489 = !DILocation(line: 108, column: 1, scope: !10469)
!10490 = distinct !DISubprogram(name: "sg_timeout", scope: !3, file: !3, line: 593, type: !3543, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10491 = !DILocalVariable(name: "t", arg: 1, scope: !10490, file: !3, line: 593, type: !3545)
!10492 = !DILocation(line: 593, column: 43, scope: !10490)
!10493 = !DILocalVariable(name: "timeout", scope: !10490, file: !3, line: 595, type: !4073)
!10494 = !DILocation(line: 595, column: 21, scope: !10490)
!10495 = !DILocalVariable(name: "__mptr", scope: !10496, file: !3, line: 595, type: !169)
!10496 = distinct !DILexicalBlock(scope: !10490, file: !3, line: 595, column: 31)
!10497 = !DILocation(line: 595, column: 31, scope: !10496)
!10498 = !DILocation(line: 595, column: 31, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 595, column: 31)
!10500 = !DILocation(line: 597, column: 16, scope: !10490)
!10501 = !DILocation(line: 597, column: 25, scope: !10490)
!10502 = !DILocation(line: 597, column: 2, scope: !10490)
!10503 = !DILocation(line: 598, column: 1, scope: !10490)
!10504 = distinct !DISubprogram(name: "destroy_timer_on_stack", scope: !3537, file: !3537, line: 150, type: !3543, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10505 = !DILocalVariable(name: "timer", arg: 1, scope: !10504, file: !3537, line: 150, type: !3545)
!10506 = !DILocation(line: 150, column: 62, scope: !10504)
!10507 = !DILocation(line: 150, column: 71, scope: !10504)
!10508 = distinct !DISubprogram(name: "sg_page", scope: !4119, file: !4119, line: 124, type: !10509, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10509 = !DISubroutineType(types: !10510)
!10510 = !{!702, !4117}
!10511 = !DILocalVariable(name: "sg", arg: 1, scope: !10508, file: !4119, line: 124, type: !4117)
!10512 = !DILocation(line: 124, column: 56, scope: !10508)
!10513 = !DILocation(line: 129, column: 26, scope: !10508)
!10514 = !DILocation(line: 129, column: 31, scope: !10508)
!10515 = !DILocation(line: 129, column: 41, scope: !10508)
!10516 = !DILocation(line: 129, column: 9, scope: !10508)
!10517 = !DILocation(line: 129, column: 2, scope: !10508)
!10518 = distinct !DISubprogram(name: "sg_virt", scope: !4119, file: !4119, line: 256, type: !10519, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10519 = !DISubroutineType(types: !10520)
!10520 = !{!169, !4117}
!10521 = !DILocalVariable(name: "page", arg: 1, scope: !10522, file: !21, line: 1514, type: !10525)
!10522 = distinct !DISubprogram(name: "lowmem_page_address", scope: !21, file: !21, line: 1514, type: !10523, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10523 = !DISubroutineType(types: !10524)
!10524 = !{!169, !10525}
!10525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10526, size: 64)
!10526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !703)
!10527 = !DILocation(line: 1514, column: 69, scope: !10522, inlinedAt: !10528)
!10528 = distinct !DILocation(line: 258, column: 9, scope: !10518)
!10529 = !DILocalVariable(name: "sg", arg: 1, scope: !10518, file: !4119, line: 256, type: !4117)
!10530 = !DILocation(line: 256, column: 49, scope: !10518)
!10531 = !DILocation(line: 258, column: 9, scope: !10518)
!10532 = !DILocation(line: 1516, column: 9, scope: !10522, inlinedAt: !10528)
!10533 = !DILocation(line: 258, column: 37, scope: !10518)
!10534 = !DILocation(line: 258, column: 41, scope: !10518)
!10535 = !DILocation(line: 258, column: 35, scope: !10518)
!10536 = !DILocation(line: 258, column: 2, scope: !10518)
!10537 = distinct !DISubprogram(name: "get_altsetting", scope: !3, file: !3, line: 669, type: !7179, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10538 = !DILocalVariable(name: "dev", arg: 1, scope: !10537, file: !3, line: 669, type: !4522)
!10539 = !DILocation(line: 669, column: 47, scope: !10537)
!10540 = !DILocalVariable(name: "iface", scope: !10537, file: !3, line: 671, type: !3965)
!10541 = !DILocation(line: 671, column: 24, scope: !10537)
!10542 = !DILocation(line: 671, column: 32, scope: !10537)
!10543 = !DILocation(line: 671, column: 37, scope: !10537)
!10544 = !DILocalVariable(name: "udev", scope: !10537, file: !3, line: 672, type: !170)
!10545 = !DILocation(line: 672, column: 21, scope: !10537)
!10546 = !DILocation(line: 672, column: 48, scope: !10537)
!10547 = !DILocation(line: 672, column: 28, scope: !10537)
!10548 = !DILocalVariable(name: "retval", scope: !10537, file: !3, line: 673, type: !168)
!10549 = !DILocation(line: 673, column: 8, scope: !10537)
!10550 = !DILocation(line: 675, column: 27, scope: !10537)
!10551 = !DILocation(line: 675, column: 33, scope: !10537)
!10552 = !DILocation(line: 677, column: 7, scope: !10537)
!10553 = !DILocation(line: 677, column: 14, scope: !10537)
!10554 = !DILocation(line: 677, column: 28, scope: !10537)
!10555 = !DILocation(line: 677, column: 33, scope: !10537)
!10556 = !DILocation(line: 678, column: 4, scope: !10537)
!10557 = !DILocation(line: 678, column: 9, scope: !10537)
!10558 = !DILocation(line: 675, column: 11, scope: !10537)
!10559 = !DILocation(line: 675, column: 9, scope: !10537)
!10560 = !DILocation(line: 679, column: 10, scope: !10537)
!10561 = !DILocation(line: 679, column: 2, scope: !10537)
!10562 = !DILocation(line: 681, column: 10, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10537, file: !3, line: 679, column: 18)
!10564 = !DILocation(line: 681, column: 15, scope: !10563)
!10565 = !DILocation(line: 681, column: 3, scope: !10563)
!10566 = !DILocation(line: 683, column: 10, scope: !10563)
!10567 = !DILocation(line: 683, column: 3, scope: !10563)
!10568 = !DILocation(line: 686, column: 10, scope: !10563)
!10569 = !DILocation(line: 686, column: 3, scope: !10563)
!10570 = !DILocation(line: 688, column: 1, scope: !10537)
!10571 = distinct !DISubprogram(name: "is_good_ext", scope: !3, file: !3, line: 741, type: !10572, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10572 = !DISubroutineType(types: !10573)
!10573 = !{!168, !4522, !4540}
!10574 = !DILocalVariable(name: "tdev", arg: 1, scope: !10571, file: !3, line: 741, type: !4522)
!10575 = !DILocation(line: 741, column: 44, scope: !10571)
!10576 = !DILocalVariable(name: "buf", arg: 2, scope: !10571, file: !3, line: 741, type: !4540)
!10577 = !DILocation(line: 741, column: 54, scope: !10571)
!10578 = !DILocalVariable(name: "ext", scope: !10571, file: !3, line: 743, type: !3886)
!10579 = !DILocation(line: 743, column: 33, scope: !10571)
!10580 = !DILocalVariable(name: "attr", scope: !10571, file: !3, line: 744, type: !179)
!10581 = !DILocation(line: 744, column: 6, scope: !10571)
!10582 = !DILocation(line: 746, column: 42, scope: !10571)
!10583 = !DILocation(line: 746, column: 8, scope: !10571)
!10584 = !DILocation(line: 746, column: 6, scope: !10571)
!10585 = !DILocation(line: 748, column: 6, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 748, column: 6)
!10587 = !DILocation(line: 748, column: 11, scope: !10586)
!10588 = !DILocation(line: 748, column: 19, scope: !10586)
!10589 = !DILocation(line: 748, column: 6, scope: !10571)
!10590 = !DILocation(line: 749, column: 3, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 748, column: 47)
!10592 = !DILocation(line: 750, column: 3, scope: !10591)
!10593 = !DILocation(line: 753, column: 9, scope: !10571)
!10594 = !DILocation(line: 753, column: 7, scope: !10571)
!10595 = !DILocation(line: 755, column: 6, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 755, column: 6)
!10597 = !DILocation(line: 755, column: 11, scope: !10596)
!10598 = !DILocation(line: 755, column: 6, scope: !10571)
!10599 = !DILocation(line: 756, column: 3, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 755, column: 22)
!10601 = !DILocation(line: 757, column: 3, scope: !10600)
!10602 = !DILocation(line: 760, column: 2, scope: !10571)
!10603 = !DILocation(line: 761, column: 1, scope: !10571)
!10604 = distinct !DISubprogram(name: "is_good_ss_cap", scope: !3, file: !3, line: 763, type: !10572, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10605 = !DILocalVariable(name: "tdev", arg: 1, scope: !10604, file: !3, line: 763, type: !4522)
!10606 = !DILocation(line: 763, column: 47, scope: !10604)
!10607 = !DILocalVariable(name: "buf", arg: 2, scope: !10604, file: !3, line: 763, type: !4540)
!10608 = !DILocation(line: 763, column: 57, scope: !10604)
!10609 = !DILocalVariable(name: "ss", scope: !10604, file: !3, line: 765, type: !3894)
!10610 = !DILocation(line: 765, column: 32, scope: !10604)
!10611 = !DILocation(line: 767, column: 40, scope: !10604)
!10612 = !DILocation(line: 767, column: 7, scope: !10604)
!10613 = !DILocation(line: 767, column: 5, scope: !10604)
!10614 = !DILocation(line: 769, column: 6, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 769, column: 6)
!10616 = !DILocation(line: 769, column: 10, scope: !10615)
!10617 = !DILocation(line: 769, column: 18, scope: !10615)
!10618 = !DILocation(line: 769, column: 6, scope: !10604)
!10619 = !DILocation(line: 770, column: 3, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 769, column: 45)
!10621 = !DILocation(line: 771, column: 3, scope: !10620)
!10622 = !DILocation(line: 778, column: 6, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 778, column: 6)
!10624 = !DILocation(line: 778, column: 10, scope: !10623)
!10625 = !DILocation(line: 778, column: 23, scope: !10623)
!10626 = !DILocation(line: 778, column: 6, scope: !10604)
!10627 = !DILocation(line: 779, column: 3, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 778, column: 32)
!10629 = !DILocation(line: 780, column: 3, scope: !10628)
!10630 = !DILocation(line: 784, column: 6, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 784, column: 6)
!10632 = !DILocation(line: 784, column: 39, scope: !10631)
!10633 = !DILocation(line: 784, column: 6, scope: !10604)
!10634 = !DILocation(line: 785, column: 3, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10631, file: !3, line: 784, column: 48)
!10636 = !DILocation(line: 786, column: 3, scope: !10635)
!10637 = !DILocation(line: 789, column: 2, scope: !10604)
!10638 = !DILocation(line: 790, column: 1, scope: !10604)
!10639 = distinct !DISubprogram(name: "is_good_con_id", scope: !3, file: !3, line: 792, type: !10572, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10640 = !DILocalVariable(name: "tdev", arg: 1, scope: !10639, file: !3, line: 792, type: !4522)
!10641 = !DILocation(line: 792, column: 47, scope: !10639)
!10642 = !DILocalVariable(name: "buf", arg: 2, scope: !10639, file: !3, line: 792, type: !4540)
!10643 = !DILocation(line: 792, column: 57, scope: !10639)
!10644 = !DILocalVariable(name: "con_id", scope: !10639, file: !3, line: 794, type: !3919)
!10645 = !DILocation(line: 794, column: 41, scope: !10639)
!10646 = !DILocation(line: 796, column: 53, scope: !10639)
!10647 = !DILocation(line: 796, column: 11, scope: !10639)
!10648 = !DILocation(line: 796, column: 9, scope: !10639)
!10649 = !DILocation(line: 798, column: 6, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 798, column: 6)
!10651 = !DILocation(line: 798, column: 14, scope: !10650)
!10652 = !DILocation(line: 798, column: 22, scope: !10650)
!10653 = !DILocation(line: 798, column: 6, scope: !10639)
!10654 = !DILocation(line: 799, column: 3, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10650, file: !3, line: 798, column: 54)
!10656 = !DILocation(line: 800, column: 3, scope: !10655)
!10657 = !DILocation(line: 803, column: 6, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 803, column: 6)
!10659 = !DILocation(line: 803, column: 14, scope: !10658)
!10660 = !DILocation(line: 803, column: 6, scope: !10639)
!10661 = !DILocation(line: 804, column: 3, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 803, column: 25)
!10663 = !DILocation(line: 805, column: 3, scope: !10662)
!10664 = !DILocation(line: 808, column: 2, scope: !10639)
!10665 = !DILocation(line: 809, column: 1, scope: !10639)
!10666 = distinct !DISubprogram(name: "is_good_config", scope: !3, file: !3, line: 704, type: !5788, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10667 = !DILocalVariable(name: "tdev", arg: 1, scope: !10666, file: !3, line: 704, type: !4522)
!10668 = !DILocation(line: 704, column: 47, scope: !10666)
!10669 = !DILocalVariable(name: "len", arg: 2, scope: !10666, file: !3, line: 704, type: !168)
!10670 = !DILocation(line: 704, column: 57, scope: !10666)
!10671 = !DILocalVariable(name: "config", scope: !10666, file: !3, line: 706, type: !4170)
!10672 = !DILocation(line: 706, column: 32, scope: !10666)
!10673 = !DILocation(line: 708, column: 6, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 708, column: 6)
!10675 = !DILocation(line: 708, column: 10, scope: !10674)
!10676 = !DILocation(line: 708, column: 6, scope: !10666)
!10677 = !DILocation(line: 709, column: 3, scope: !10674)
!10678 = !DILocation(line: 710, column: 44, scope: !10666)
!10679 = !DILocation(line: 710, column: 50, scope: !10666)
!10680 = !DILocation(line: 710, column: 11, scope: !10666)
!10681 = !DILocation(line: 710, column: 9, scope: !10666)
!10682 = !DILocation(line: 712, column: 10, scope: !10666)
!10683 = !DILocation(line: 712, column: 18, scope: !10666)
!10684 = !DILocation(line: 712, column: 2, scope: !10666)
!10685 = !DILocation(line: 715, column: 7, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !3, line: 715, column: 7)
!10687 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 712, column: 35)
!10688 = !DILocation(line: 715, column: 15, scope: !10686)
!10689 = !DILocation(line: 715, column: 23, scope: !10686)
!10690 = !DILocation(line: 715, column: 7, scope: !10687)
!10691 = !DILocation(line: 716, column: 4, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 715, column: 29)
!10693 = !DILocation(line: 717, column: 4, scope: !10692)
!10694 = !DILocation(line: 720, column: 8, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10687, file: !3, line: 720, column: 7)
!10696 = !DILocation(line: 720, column: 18, scope: !10695)
!10697 = !DILocation(line: 720, column: 23, scope: !10695)
!10698 = !DILocation(line: 720, column: 31, scope: !10695)
!10699 = !DILocation(line: 720, column: 44, scope: !10695)
!10700 = !DILocation(line: 720, column: 7, scope: !10687)
!10701 = !DILocation(line: 721, column: 4, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 720, column: 53)
!10703 = !DILocation(line: 722, column: 4, scope: !10702)
!10704 = !DILocation(line: 724, column: 7, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10687, file: !3, line: 724, column: 7)
!10706 = !DILocation(line: 724, column: 15, scope: !10705)
!10707 = !DILocation(line: 724, column: 28, scope: !10705)
!10708 = !DILocation(line: 724, column: 7, scope: !10687)
!10709 = !DILocation(line: 725, column: 4, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10705, file: !3, line: 724, column: 36)
!10711 = !DILocation(line: 726, column: 4, scope: !10710)
!10712 = !DILocation(line: 728, column: 3, scope: !10687)
!10713 = !DILocation(line: 730, column: 3, scope: !10687)
!10714 = !DILocation(line: 733, column: 6, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 733, column: 6)
!10716 = !DILocation(line: 733, column: 43, scope: !10715)
!10717 = !DILocation(line: 733, column: 40, scope: !10715)
!10718 = !DILocation(line: 733, column: 6, scope: !10666)
!10719 = !DILocation(line: 734, column: 3, scope: !10715)
!10720 = !DILocation(line: 735, column: 6, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 735, column: 6)
!10722 = !DILocation(line: 735, column: 40, scope: !10721)
!10723 = !DILocation(line: 735, column: 6, scope: !10666)
!10724 = !DILocation(line: 736, column: 3, scope: !10721)
!10725 = !DILocation(line: 737, column: 2, scope: !10666)
!10726 = !DILocation(line: 738, column: 2, scope: !10666)
!10727 = !DILocation(line: 739, column: 1, scope: !10666)
!10728 = distinct !DISubprogram(name: "usb_get_std_status", scope: !6, file: !6, line: 1818, type: !10729, scopeLine: 1820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10729 = !DISubroutineType(types: !10730)
!10730 = !{!168, !170, !168, !168, !169}
!10731 = !DILocalVariable(name: "dev", arg: 1, scope: !10728, file: !6, line: 1818, type: !170)
!10732 = !DILocation(line: 1818, column: 57, scope: !10728)
!10733 = !DILocalVariable(name: "recip", arg: 2, scope: !10728, file: !6, line: 1819, type: !168)
!10734 = !DILocation(line: 1819, column: 6, scope: !10728)
!10735 = !DILocalVariable(name: "target", arg: 3, scope: !10728, file: !6, line: 1819, type: !168)
!10736 = !DILocation(line: 1819, column: 17, scope: !10728)
!10737 = !DILocalVariable(name: "data", arg: 4, scope: !10728, file: !6, line: 1819, type: !169)
!10738 = !DILocation(line: 1819, column: 31, scope: !10728)
!10739 = !DILocation(line: 1821, column: 24, scope: !10728)
!10740 = !DILocation(line: 1821, column: 29, scope: !10728)
!10741 = !DILocation(line: 1821, column: 62, scope: !10728)
!10742 = !DILocation(line: 1822, column: 3, scope: !10728)
!10743 = !DILocation(line: 1821, column: 9, scope: !10728)
!10744 = !DILocation(line: 1821, column: 2, scope: !10728)
!10745 = distinct !DISubprogram(name: "kcalloc", scope: !127, file: !127, line: 601, type: !10136, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10746 = !DILocalVariable(name: "n", arg: 1, scope: !10745, file: !127, line: 601, type: !308)
!10747 = !DILocation(line: 601, column: 36, scope: !10745)
!10748 = !DILocalVariable(name: "size", arg: 2, scope: !10745, file: !127, line: 601, type: !308)
!10749 = !DILocation(line: 601, column: 46, scope: !10745)
!10750 = !DILocalVariable(name: "flags", arg: 3, scope: !10745, file: !127, line: 601, type: !149)
!10751 = !DILocation(line: 601, column: 58, scope: !10745)
!10752 = !DILocation(line: 603, column: 23, scope: !10745)
!10753 = !DILocation(line: 603, column: 26, scope: !10745)
!10754 = !DILocation(line: 603, column: 32, scope: !10745)
!10755 = !DILocation(line: 603, column: 38, scope: !10745)
!10756 = !DILocation(line: 603, column: 9, scope: !10745)
!10757 = !DILocation(line: 603, column: 2, scope: !10745)
!10758 = distinct !DISubprogram(name: "ctrl_complete", scope: !3, file: !3, line: 1087, type: !4140, scopeLine: 1088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10759 = !DILocalVariable(name: "lock", arg: 1, scope: !10760, file: !7638, line: 352, type: !1043)
!10760 = distinct !DISubprogram(name: "spin_lock", scope: !7638, file: !7638, line: 352, type: !7639, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10761 = !DILocation(line: 352, column: 51, scope: !10760, inlinedAt: !10762)
!10762 = distinct !DILocation(line: 1166, column: 5, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 1157, column: 44)
!10764 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 1157, column: 4)
!10765 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 1157, column: 4)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 1141, column: 25)
!10767 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 1141, column: 7)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !3, line: 1139, column: 14)
!10769 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1139, column: 6)
!10770 = !DILocalVariable(name: "lock", arg: 1, scope: !10771, file: !7638, line: 392, type: !1043)
!10771 = distinct !DISubprogram(name: "spin_unlock", scope: !7638, file: !7638, line: 392, type: !7639, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10772 = !DILocation(line: 392, column: 53, scope: !10771, inlinedAt: !10773)
!10773 = distinct !DILocation(line: 1164, column: 5, scope: !10763)
!10774 = !DILocalVariable(name: "lock", arg: 1, scope: !10775, file: !7638, line: 407, type: !1043)
!10775 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !7638, file: !7638, line: 407, type: !10776, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!10776 = !DISubroutineType(types: !10777)
!10777 = !{null, !1043, !311}
!10778 = !DILocation(line: 407, column: 64, scope: !10775, inlinedAt: !10779)
!10779 = distinct !DILocation(line: 1197, column: 2, scope: !10758)
!10780 = !DILocalVariable(name: "flags", arg: 2, scope: !10775, file: !7638, line: 407, type: !311)
!10781 = !DILocation(line: 407, column: 84, scope: !10775, inlinedAt: !10779)
!10782 = !DILocation(line: 327, column: 67, scope: !7672, inlinedAt: !10783)
!10783 = distinct !DILocation(line: 1098, column: 2, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 1098, column: 2)
!10785 = distinct !DILexicalBlock(scope: !10786, file: !3, line: 1098, column: 2)
!10786 = distinct !DILexicalBlock(scope: !10787, file: !3, line: 1098, column: 2)
!10787 = distinct !DILexicalBlock(scope: !10788, file: !3, line: 1098, column: 2)
!10788 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1098, column: 2)
!10789 = !DILocalVariable(name: "urb", arg: 1, scope: !10758, file: !3, line: 1087, type: !4089)
!10790 = !DILocation(line: 1087, column: 39, scope: !10758)
!10791 = !DILocalVariable(name: "ctx", scope: !10758, file: !3, line: 1089, type: !10792)
!10792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7690, size: 64)
!10793 = !DILocation(line: 1089, column: 20, scope: !10758)
!10794 = !DILocation(line: 1089, column: 26, scope: !10758)
!10795 = !DILocation(line: 1089, column: 31, scope: !10758)
!10796 = !DILocalVariable(name: "reqp", scope: !10758, file: !3, line: 1090, type: !4171)
!10797 = !DILocation(line: 1090, column: 26, scope: !10758)
!10798 = !DILocalVariable(name: "subcase", scope: !10758, file: !3, line: 1091, type: !4179)
!10799 = !DILocation(line: 1091, column: 19, scope: !10758)
!10800 = !DILocalVariable(name: "status", scope: !10758, file: !3, line: 1092, type: !168)
!10801 = !DILocation(line: 1092, column: 8, scope: !10758)
!10802 = !DILocation(line: 1092, column: 17, scope: !10758)
!10803 = !DILocation(line: 1092, column: 22, scope: !10758)
!10804 = !DILocalVariable(name: "flags", scope: !10758, file: !3, line: 1093, type: !311)
!10805 = !DILocation(line: 1093, column: 17, scope: !10758)
!10806 = !DILocation(line: 1095, column: 35, scope: !10758)
!10807 = !DILocation(line: 1095, column: 40, scope: !10758)
!10808 = !DILocation(line: 1095, column: 9, scope: !10758)
!10809 = !DILocation(line: 1095, column: 7, scope: !10758)
!10810 = !DILocalVariable(name: "__mptr", scope: !10811, file: !3, line: 1096, type: !169)
!10811 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1096, column: 12)
!10812 = !DILocation(line: 1096, column: 12, scope: !10811)
!10813 = !DILocation(line: 1096, column: 12, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 1096, column: 12)
!10815 = !DILocation(line: 1096, column: 10, scope: !10758)
!10816 = !DILocation(line: 1098, column: 2, scope: !10758)
!10817 = !DILocation(line: 1098, column: 2, scope: !10788)
!10818 = !DILocalVariable(name: "__dummy", scope: !10819, file: !3, line: 1098, type: !311)
!10819 = distinct !DILexicalBlock(scope: !10787, file: !3, line: 1098, column: 2)
!10820 = !DILocation(line: 1098, column: 2, scope: !10819)
!10821 = !DILocalVariable(name: "__dummy2", scope: !10819, file: !3, line: 1098, type: !311)
!10822 = !DILocation(line: 1098, column: 2, scope: !10787)
!10823 = !DILocation(line: 1098, column: 2, scope: !10786)
!10824 = !DILocation(line: 1098, column: 2, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10786, file: !3, line: 1098, column: 2)
!10826 = !DILocalVariable(name: "__dummy", scope: !10827, file: !3, line: 1098, type: !311)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 1098, column: 2)
!10828 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 1098, column: 2)
!10829 = !DILocation(line: 1098, column: 2, scope: !10827)
!10830 = !DILocalVariable(name: "__dummy2", scope: !10827, file: !3, line: 1098, type: !311)
!10831 = !DILocation(line: 1098, column: 2, scope: !10828)
!10832 = !DILocation(line: 1098, column: 2, scope: !10785)
!10833 = !{i32 -2141817114}
!10834 = !DILocation(line: 1098, column: 2, scope: !10784)
!10835 = !DILocation(line: 329, column: 10, scope: !7672, inlinedAt: !10783)
!10836 = !DILocation(line: 329, column: 16, scope: !7672, inlinedAt: !10783)
!10837 = !DILocation(line: 1099, column: 2, scope: !10758)
!10838 = !DILocation(line: 1099, column: 7, scope: !10758)
!10839 = !DILocation(line: 1099, column: 12, scope: !10758)
!10840 = !DILocation(line: 1100, column: 2, scope: !10758)
!10841 = !DILocation(line: 1100, column: 7, scope: !10758)
!10842 = !DILocation(line: 1100, column: 14, scope: !10758)
!10843 = !DILocation(line: 1106, column: 6, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1106, column: 6)
!10845 = !DILocation(line: 1106, column: 15, scope: !10844)
!10846 = !DILocation(line: 1106, column: 22, scope: !10844)
!10847 = !DILocation(line: 1106, column: 6, scope: !10758)
!10848 = !DILocation(line: 1107, column: 8, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10850, file: !3, line: 1107, column: 7)
!10850 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 1106, column: 27)
!10851 = !DILocation(line: 1107, column: 17, scope: !10849)
!10852 = !DILocation(line: 1107, column: 26, scope: !10849)
!10853 = !DILocation(line: 1107, column: 31, scope: !10849)
!10854 = !DILocation(line: 1107, column: 24, scope: !10849)
!10855 = !DILocation(line: 1107, column: 37, scope: !10849)
!10856 = !DILocation(line: 1107, column: 7, scope: !10850)
!10857 = !DILocation(line: 1108, column: 4, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 1107, column: 43)
!10859 = !DILocation(line: 1111, column: 11, scope: !10858)
!10860 = !DILocation(line: 1112, column: 16, scope: !10858)
!10861 = !DILocation(line: 1112, column: 25, scope: !10858)
!10862 = !DILocation(line: 1112, column: 4, scope: !10858)
!10863 = !DILocation(line: 1112, column: 9, scope: !10858)
!10864 = !DILocation(line: 1112, column: 14, scope: !10858)
!10865 = !DILocation(line: 1113, column: 4, scope: !10858)
!10866 = !DILocation(line: 1115, column: 2, scope: !10850)
!10867 = !DILocation(line: 1116, column: 14, scope: !10758)
!10868 = !DILocation(line: 1116, column: 23, scope: !10758)
!10869 = !DILocation(line: 1116, column: 2, scope: !10758)
!10870 = !DILocation(line: 1116, column: 7, scope: !10758)
!10871 = !DILocation(line: 1116, column: 12, scope: !10758)
!10872 = !DILocation(line: 1119, column: 6, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1119, column: 6)
!10874 = !DILocation(line: 1119, column: 16, scope: !10873)
!10875 = !DILocation(line: 1119, column: 25, scope: !10873)
!10876 = !DILocation(line: 1119, column: 13, scope: !10873)
!10877 = !DILocation(line: 1119, column: 6, scope: !10758)
!10878 = !DILocation(line: 1120, column: 10, scope: !10873)
!10879 = !DILocation(line: 1120, column: 3, scope: !10873)
!10880 = !DILocation(line: 1123, column: 11, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1123, column: 11)
!10882 = !DILocation(line: 1123, column: 18, scope: !10881)
!10883 = !DILocation(line: 1123, column: 11, scope: !10873)
!10884 = !DILocation(line: 1126, column: 7, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10886, file: !3, line: 1126, column: 7)
!10886 = distinct !DILexicalBlock(scope: !10881, file: !3, line: 1123, column: 34)
!10887 = !DILocation(line: 1126, column: 16, scope: !10885)
!10888 = !DILocation(line: 1126, column: 25, scope: !10885)
!10889 = !DILocation(line: 1126, column: 29, scope: !10885)
!10890 = !DILocation(line: 1127, column: 8, scope: !10885)
!10891 = !DILocation(line: 1127, column: 19, scope: !10885)
!10892 = !DILocation(line: 1127, column: 28, scope: !10885)
!10893 = !DILocation(line: 1127, column: 18, scope: !10885)
!10894 = !DILocation(line: 1127, column: 15, scope: !10885)
!10895 = !DILocation(line: 1128, column: 7, scope: !10885)
!10896 = !DILocation(line: 1128, column: 10, scope: !10885)
!10897 = !DILocation(line: 1128, column: 17, scope: !10885)
!10898 = !DILocation(line: 1126, column: 7, scope: !10886)
!10899 = !DILocation(line: 1129, column: 11, scope: !10885)
!10900 = !DILocation(line: 1129, column: 4, scope: !10885)
!10901 = !DILocation(line: 1131, column: 12, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10885, file: !3, line: 1131, column: 12)
!10903 = !DILocation(line: 1131, column: 21, scope: !10902)
!10904 = !DILocation(line: 1131, column: 28, scope: !10902)
!10905 = !DILocation(line: 1131, column: 34, scope: !10902)
!10906 = !DILocation(line: 1131, column: 37, scope: !10902)
!10907 = !DILocation(line: 1131, column: 44, scope: !10902)
!10908 = !DILocation(line: 1131, column: 12, scope: !10885)
!10909 = !DILocation(line: 1132, column: 11, scope: !10902)
!10910 = !DILocation(line: 1132, column: 4, scope: !10902)
!10911 = !DILocation(line: 1134, column: 4, scope: !10902)
!10912 = !DILocation(line: 1136, column: 2, scope: !10886)
!10913 = !DILocation(line: 1139, column: 6, scope: !10769)
!10914 = !DILocation(line: 1139, column: 6, scope: !10758)
!10915 = !DILocation(line: 1139, column: 14, scope: !10769)
!10916 = !DILabel(scope: !10768, name: "error", file: !3, line: 1140)
!10917 = !DILocation(line: 1140, column: 1, scope: !10768)
!10918 = !DILocation(line: 1141, column: 7, scope: !10767)
!10919 = !DILocation(line: 1141, column: 12, scope: !10767)
!10920 = !DILocation(line: 1141, column: 19, scope: !10767)
!10921 = !DILocation(line: 1141, column: 7, scope: !10768)
!10922 = !DILocalVariable(name: "i", scope: !10766, file: !3, line: 1142, type: !168)
!10923 = !DILocation(line: 1142, column: 9, scope: !10766)
!10924 = !DILocation(line: 1144, column: 18, scope: !10766)
!10925 = !DILocation(line: 1144, column: 4, scope: !10766)
!10926 = !DILocation(line: 1144, column: 9, scope: !10766)
!10927 = !DILocation(line: 1144, column: 16, scope: !10766)
!10928 = !DILocation(line: 1145, column: 4, scope: !10766)
!10929 = !DILocation(line: 1157, column: 11, scope: !10765)
!10930 = !DILocation(line: 1157, column: 9, scope: !10765)
!10931 = !DILocation(line: 1157, column: 16, scope: !10764)
!10932 = !DILocation(line: 1157, column: 20, scope: !10764)
!10933 = !DILocation(line: 1157, column: 25, scope: !10764)
!10934 = !DILocation(line: 1157, column: 32, scope: !10764)
!10935 = !DILocation(line: 1157, column: 18, scope: !10764)
!10936 = !DILocation(line: 1157, column: 4, scope: !10765)
!10937 = !DILocalVariable(name: "u", scope: !10763, file: !3, line: 1158, type: !4089)
!10938 = !DILocation(line: 1158, column: 17, scope: !10763)
!10939 = !DILocation(line: 1158, column: 21, scope: !10763)
!10940 = !DILocation(line: 1158, column: 26, scope: !10763)
!10941 = !DILocation(line: 1159, column: 9, scope: !10763)
!10942 = !DILocation(line: 1159, column: 13, scope: !10763)
!10943 = !DILocation(line: 1159, column: 22, scope: !10763)
!10944 = !DILocation(line: 1159, column: 11, scope: !10763)
!10945 = !DILocation(line: 1160, column: 10, scope: !10763)
!10946 = !DILocation(line: 1160, column: 15, scope: !10763)
!10947 = !DILocation(line: 1160, column: 22, scope: !10763)
!10948 = !DILocation(line: 1160, column: 8, scope: !10763)
!10949 = !DILocation(line: 1162, column: 9, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 1162, column: 9)
!10951 = !DILocation(line: 1162, column: 14, scope: !10950)
!10952 = !DILocation(line: 1162, column: 11, scope: !10950)
!10953 = !DILocation(line: 1162, column: 18, scope: !10950)
!10954 = !DILocation(line: 1162, column: 22, scope: !10950)
!10955 = !DILocation(line: 1162, column: 25, scope: !10950)
!10956 = !DILocation(line: 1162, column: 9, scope: !10763)
!10957 = !DILocation(line: 1163, column: 6, scope: !10950)
!10958 = !DILocation(line: 1164, column: 18, scope: !10763)
!10959 = !DILocation(line: 1164, column: 23, scope: !10763)
!10960 = !DILocation(line: 394, column: 2, scope: !10961, inlinedAt: !10773)
!10961 = distinct !DILexicalBlock(scope: !10771, file: !7638, line: 394, column: 2)
!10962 = !{i32 -2145455537}
!10963 = !DILocation(line: 394, column: 2, scope: !10964, inlinedAt: !10773)
!10964 = distinct !DILexicalBlock(scope: !10961, file: !7638, line: 394, column: 2)
!10965 = !DILocation(line: 1165, column: 29, scope: !10763)
!10966 = !DILocation(line: 1165, column: 14, scope: !10763)
!10967 = !DILocation(line: 1165, column: 12, scope: !10763)
!10968 = !DILocation(line: 1166, column: 16, scope: !10763)
!10969 = !DILocation(line: 1166, column: 21, scope: !10763)
!10970 = !DILocation(line: 354, column: 2, scope: !10971, inlinedAt: !10762)
!10971 = distinct !DILexicalBlock(scope: !10760, file: !7638, line: 354, column: 2)
!10972 = !{i32 -2145457898}
!10973 = !DILocation(line: 354, column: 2, scope: !10974, inlinedAt: !10762)
!10974 = distinct !DILexicalBlock(scope: !10971, file: !7638, line: 354, column: 2)
!10975 = !DILocation(line: 1167, column: 13, scope: !10763)
!10976 = !DILocation(line: 1167, column: 5, scope: !10763)
!10977 = !DILocation(line: 1171, column: 6, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 1167, column: 21)
!10979 = !DILocation(line: 1173, column: 6, scope: !10978)
!10980 = !DILocation(line: 1175, column: 5, scope: !10978)
!10981 = !DILocation(line: 1176, column: 4, scope: !10763)
!10982 = !DILocation(line: 1157, column: 40, scope: !10764)
!10983 = !DILocation(line: 1157, column: 4, scope: !10764)
!10984 = distinct !{!10984, !10936, !10985}
!10985 = !DILocation(line: 1176, column: 4, scope: !10765)
!10986 = !DILocation(line: 1177, column: 13, scope: !10766)
!10987 = !DILocation(line: 1177, column: 18, scope: !10766)
!10988 = !DILocation(line: 1177, column: 11, scope: !10766)
!10989 = !DILocation(line: 1178, column: 3, scope: !10766)
!10990 = !DILocation(line: 1179, column: 2, scope: !10768)
!10991 = !DILocation(line: 1182, column: 7, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1182, column: 6)
!10993 = !DILocation(line: 1182, column: 14, scope: !10992)
!10994 = !DILocation(line: 1182, column: 20, scope: !10992)
!10995 = !DILocation(line: 1182, column: 24, scope: !10992)
!10996 = !DILocation(line: 1182, column: 29, scope: !10992)
!10997 = !DILocation(line: 1182, column: 39, scope: !10992)
!10998 = !DILocation(line: 1182, column: 44, scope: !10992)
!10999 = !DILocation(line: 1182, column: 37, scope: !10992)
!11000 = !DILocation(line: 1182, column: 6, scope: !10758)
!11001 = !DILocation(line: 1183, column: 27, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10992, file: !3, line: 1182, column: 52)
!11003 = !DILocation(line: 1183, column: 12, scope: !11002)
!11004 = !DILocation(line: 1183, column: 10, scope: !11002)
!11005 = !DILocation(line: 1184, column: 7, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 1184, column: 7)
!11007 = !DILocation(line: 1184, column: 14, scope: !11006)
!11008 = !DILocation(line: 1184, column: 7, scope: !11002)
!11009 = !DILocation(line: 1185, column: 4, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 1184, column: 20)
!11011 = !DILocation(line: 1188, column: 4, scope: !11010)
!11012 = !DILocation(line: 1188, column: 9, scope: !11010)
!11013 = !DILocation(line: 1188, column: 13, scope: !11010)
!11014 = !DILocation(line: 1189, column: 3, scope: !11010)
!11015 = !DILocation(line: 1190, column: 4, scope: !11006)
!11016 = !DILocation(line: 1190, column: 9, scope: !11006)
!11017 = !DILocation(line: 1190, column: 16, scope: !11006)
!11018 = !DILocation(line: 1191, column: 2, scope: !11002)
!11019 = !DILocation(line: 1192, column: 3, scope: !10992)
!11020 = !DILocation(line: 1192, column: 8, scope: !10992)
!11021 = !DILocation(line: 1192, column: 12, scope: !10992)
!11022 = !DILocation(line: 1195, column: 6, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1195, column: 6)
!11024 = !DILocation(line: 1195, column: 11, scope: !11023)
!11025 = !DILocation(line: 1195, column: 19, scope: !11023)
!11026 = !DILocation(line: 1195, column: 6, scope: !10758)
!11027 = !DILocation(line: 1196, column: 13, scope: !11023)
!11028 = !DILocation(line: 1196, column: 18, scope: !11023)
!11029 = !DILocation(line: 1196, column: 3, scope: !11023)
!11030 = !DILocation(line: 1197, column: 26, scope: !10758)
!11031 = !DILocation(line: 1197, column: 31, scope: !10758)
!11032 = !DILocation(line: 1197, column: 37, scope: !10758)
!11033 = !DILocalVariable(name: "__dummy", scope: !11034, file: !7638, line: 409, type: !311)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !7638, line: 409, column: 2)
!11035 = distinct !DILexicalBlock(scope: !10775, file: !7638, line: 409, column: 2)
!11036 = !DILocation(line: 409, column: 2, scope: !11034, inlinedAt: !10779)
!11037 = !DILocalVariable(name: "__dummy2", scope: !11034, file: !7638, line: 409, type: !311)
!11038 = !DILocalVariable(name: "__dummy", scope: !11039, file: !7638, line: 409, type: !311)
!11039 = distinct !DILexicalBlock(scope: !11040, file: !7638, line: 409, column: 2)
!11040 = distinct !DILexicalBlock(scope: !11041, file: !7638, line: 409, column: 2)
!11041 = distinct !DILexicalBlock(scope: !11042, file: !7638, line: 409, column: 2)
!11042 = distinct !DILexicalBlock(scope: !11035, file: !7638, line: 409, column: 2)
!11043 = !DILocation(line: 409, column: 2, scope: !11039, inlinedAt: !10779)
!11044 = !DILocalVariable(name: "__dummy2", scope: !11039, file: !7638, line: 409, type: !311)
!11045 = !DILocation(line: 409, column: 2, scope: !11040, inlinedAt: !10779)
!11046 = !DILocation(line: 409, column: 2, scope: !11047, inlinedAt: !10779)
!11047 = distinct !DILexicalBlock(scope: !11042, file: !7638, line: 409, column: 2)
!11048 = !{i32 -2145453211}
!11049 = !DILocation(line: 409, column: 2, scope: !11050, inlinedAt: !10779)
!11050 = distinct !DILexicalBlock(scope: !11047, file: !7638, line: 409, column: 2)
!11051 = !DILocation(line: 1198, column: 1, scope: !10758)
!11052 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !11053, file: !11053, line: 666, type: !11054, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11053 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!11054 = !DISubroutineType(types: !11055)
!11055 = !{!311}
!11056 = !DILocalVariable(name: "f", scope: !11052, file: !11053, line: 668, type: !311)
!11057 = !DILocation(line: 668, column: 16, scope: !11052)
!11058 = !DILocation(line: 670, column: 6, scope: !11052)
!11059 = !DILocation(line: 670, column: 4, scope: !11052)
!11060 = !DILocation(line: 671, column: 2, scope: !11052)
!11061 = !DILocation(line: 672, column: 9, scope: !11052)
!11062 = !DILocation(line: 672, column: 2, scope: !11052)
!11063 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !11053, file: !11053, line: 646, type: !11054, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11064 = !DILocalVariable(name: "__ret", scope: !11065, file: !11053, line: 648, type: !311)
!11065 = distinct !DILexicalBlock(scope: !11063, file: !11053, line: 648, column: 9)
!11066 = !DILocation(line: 648, column: 9, scope: !11065)
!11067 = !DILocalVariable(name: "__edi", scope: !11065, file: !11053, line: 648, type: !311)
!11068 = !DILocalVariable(name: "__esi", scope: !11065, file: !11053, line: 648, type: !311)
!11069 = !DILocalVariable(name: "__edx", scope: !11065, file: !11053, line: 648, type: !311)
!11070 = !DILocalVariable(name: "__ecx", scope: !11065, file: !11053, line: 648, type: !311)
!11071 = !DILocalVariable(name: "__eax", scope: !11065, file: !11053, line: 648, type: !311)
!11072 = !DILocation(line: 648, column: 9, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !11053, line: 648, column: 9)
!11074 = distinct !DILexicalBlock(scope: !11065, file: !11053, line: 648, column: 9)
!11075 = !{i32 -2145625588, i32 -2145623273, i32 -2145623039, i32 -2145622988, i32 -2145622960, i32 -2145622935, i32 -2145623251, i32 -2145623238, i32 -2145622800, i32 -2145622681, i32 -2145623146, i32 -2145623119, i32 -2145623091, i32 -2145623061}
!11076 = !DILocalVariable(name: "__mask", scope: !11077, file: !11053, line: 648, type: !311)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !11053, line: 648, column: 9)
!11078 = !DILocation(line: 648, column: 9, scope: !11077)
!11079 = !DILocation(line: 648, column: 9, scope: !11074)
!11080 = !DILocation(line: 648, column: 2, scope: !11063)
!11081 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !11053, file: !11053, line: 656, type: !1851, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11082 = !DILocalVariable(name: "__edi", scope: !11083, file: !11053, line: 658, type: !311)
!11083 = distinct !DILexicalBlock(scope: !11081, file: !11053, line: 658, column: 2)
!11084 = !DILocation(line: 658, column: 2, scope: !11083)
!11085 = !DILocalVariable(name: "__esi", scope: !11083, file: !11053, line: 658, type: !311)
!11086 = !DILocalVariable(name: "__edx", scope: !11083, file: !11053, line: 658, type: !311)
!11087 = !DILocalVariable(name: "__ecx", scope: !11083, file: !11053, line: 658, type: !311)
!11088 = !DILocalVariable(name: "__eax", scope: !11083, file: !11053, line: 658, type: !311)
!11089 = !{i32 -2145618494, i32 -2145617762, i32 -2145617528, i32 -2145617477, i32 -2145617449, i32 -2145617424, i32 -2145617740, i32 -2145617727, i32 -2145617289, i32 -2145617170, i32 -2145617635, i32 -2145617608, i32 -2145617580, i32 -2145617550}
!11090 = !DILocation(line: 659, column: 1, scope: !11081)
!11091 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !11053, file: !11053, line: 651, type: !11092, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11092 = !DISubroutineType(types: !11093)
!11093 = !{null, !311}
!11094 = !DILocalVariable(name: "f", arg: 1, scope: !11091, file: !11053, line: 651, type: !311)
!11095 = !DILocation(line: 651, column: 65, scope: !11091)
!11096 = !DILocalVariable(name: "__edi", scope: !11097, file: !11053, line: 653, type: !311)
!11097 = distinct !DILexicalBlock(scope: !11091, file: !11053, line: 653, column: 2)
!11098 = !DILocation(line: 653, column: 2, scope: !11097)
!11099 = !DILocalVariable(name: "__esi", scope: !11097, file: !11053, line: 653, type: !311)
!11100 = !DILocalVariable(name: "__edx", scope: !11097, file: !11053, line: 653, type: !311)
!11101 = !DILocalVariable(name: "__ecx", scope: !11097, file: !11053, line: 653, type: !311)
!11102 = !DILocalVariable(name: "__eax", scope: !11097, file: !11053, line: 653, type: !311)
!11103 = !{i32 -2145621121, i32 -2145620371, i32 -2145620137, i32 -2145620086, i32 -2145620058, i32 -2145620033, i32 -2145620349, i32 -2145620336, i32 -2145619898, i32 -2145619779, i32 -2145620244, i32 -2145620217, i32 -2145620189, i32 -2145620159}
!11104 = !DILocation(line: 654, column: 1, scope: !11091)
!11105 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !11053, file: !11053, line: 661, type: !1851, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11106 = !DILocalVariable(name: "__edi", scope: !11107, file: !11053, line: 663, type: !311)
!11107 = distinct !DILexicalBlock(scope: !11105, file: !11053, line: 663, column: 2)
!11108 = !DILocation(line: 663, column: 2, scope: !11107)
!11109 = !DILocalVariable(name: "__esi", scope: !11107, file: !11053, line: 663, type: !311)
!11110 = !DILocalVariable(name: "__edx", scope: !11107, file: !11053, line: 663, type: !311)
!11111 = !DILocalVariable(name: "__ecx", scope: !11107, file: !11053, line: 663, type: !311)
!11112 = !DILocalVariable(name: "__eax", scope: !11107, file: !11053, line: 663, type: !311)
!11113 = !{i32 -2145615910, i32 -2145615180, i32 -2145614946, i32 -2145614895, i32 -2145614867, i32 -2145614842, i32 -2145615158, i32 -2145615145, i32 -2145614707, i32 -2145614588, i32 -2145615053, i32 -2145615026, i32 -2145614998, i32 -2145614968}
!11114 = !DILocation(line: 664, column: 1, scope: !11105)
!11115 = distinct !DISubprogram(name: "unlink1", scope: !3, file: !3, line: 1435, type: !11116, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11116 = !DISubroutineType(types: !11117)
!11117 = !{!168, !4522, !168, !168, !168}
!11118 = !DILocalVariable(name: "dev", arg: 1, scope: !11115, file: !3, line: 1435, type: !4522)
!11119 = !DILocation(line: 1435, column: 40, scope: !11115)
!11120 = !DILocalVariable(name: "pipe", arg: 2, scope: !11115, file: !3, line: 1435, type: !168)
!11121 = !DILocation(line: 1435, column: 49, scope: !11115)
!11122 = !DILocalVariable(name: "size", arg: 3, scope: !11115, file: !3, line: 1435, type: !168)
!11123 = !DILocation(line: 1435, column: 59, scope: !11115)
!11124 = !DILocalVariable(name: "async", arg: 4, scope: !11115, file: !3, line: 1435, type: !168)
!11125 = !DILocation(line: 1435, column: 69, scope: !11115)
!11126 = !DILocalVariable(name: "urb", scope: !11115, file: !3, line: 1437, type: !4089)
!11127 = !DILocation(line: 1437, column: 15, scope: !11115)
!11128 = !DILocalVariable(name: "completion", scope: !11115, file: !3, line: 1438, type: !1479)
!11129 = !DILocation(line: 1438, column: 20, scope: !11115)
!11130 = !DILocalVariable(name: "retval", scope: !11115, file: !3, line: 1439, type: !168)
!11131 = !DILocation(line: 1439, column: 8, scope: !11115)
!11132 = !DILocation(line: 1441, column: 2, scope: !11115)
!11133 = !DILocation(line: 1442, column: 43, scope: !11115)
!11134 = !DILocation(line: 1442, column: 25, scope: !11115)
!11135 = !DILocation(line: 1442, column: 49, scope: !11115)
!11136 = !DILocation(line: 1442, column: 55, scope: !11115)
!11137 = !DILocation(line: 1442, column: 8, scope: !11115)
!11138 = !DILocation(line: 1442, column: 6, scope: !11115)
!11139 = !DILocation(line: 1443, column: 7, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 1443, column: 6)
!11141 = !DILocation(line: 1443, column: 6, scope: !11115)
!11142 = !DILocation(line: 1444, column: 3, scope: !11140)
!11143 = !DILocation(line: 1445, column: 17, scope: !11115)
!11144 = !DILocation(line: 1445, column: 2, scope: !11115)
!11145 = !DILocation(line: 1445, column: 7, scope: !11115)
!11146 = !DILocation(line: 1445, column: 15, scope: !11115)
!11147 = !DILocation(line: 1446, column: 2, scope: !11115)
!11148 = !DILocation(line: 1446, column: 7, scope: !11115)
!11149 = !DILocation(line: 1446, column: 16, scope: !11115)
!11150 = !DILocation(line: 1448, column: 6, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 1448, column: 6)
!11152 = !DILocation(line: 1448, column: 6, scope: !11115)
!11153 = !DILocation(line: 1449, column: 19, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11151, file: !3, line: 1448, column: 30)
!11155 = !DILocation(line: 1449, column: 3, scope: !11154)
!11156 = !DILocation(line: 1450, column: 3, scope: !11154)
!11157 = !DILocation(line: 1450, column: 8, scope: !11154)
!11158 = !DILocation(line: 1450, column: 23, scope: !11154)
!11159 = !DILocation(line: 1451, column: 2, scope: !11154)
!11160 = !DILocation(line: 1459, column: 26, scope: !11115)
!11161 = !DILocation(line: 1459, column: 11, scope: !11115)
!11162 = !DILocation(line: 1459, column: 9, scope: !11115)
!11163 = !DILocation(line: 1460, column: 6, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 1460, column: 6)
!11165 = !DILocation(line: 1460, column: 13, scope: !11164)
!11166 = !DILocation(line: 1460, column: 6, scope: !11115)
!11167 = !DILocation(line: 1461, column: 3, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 1460, column: 19)
!11169 = !DILocation(line: 1462, column: 10, scope: !11168)
!11170 = !DILocation(line: 1462, column: 3, scope: !11168)
!11171 = !DILocation(line: 1468, column: 9, scope: !11115)
!11172 = !DILocation(line: 1468, column: 17, scope: !11115)
!11173 = !DILocation(line: 1468, column: 2, scope: !11115)
!11174 = !DILocation(line: 1469, column: 6, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 1469, column: 6)
!11176 = !DILocation(line: 1469, column: 6, scope: !11115)
!11177 = !DILocation(line: 1470, column: 3, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 1469, column: 13)
!11179 = !DILocation(line: 1470, column: 11, scope: !11178)
!11180 = !DILocation(line: 1470, column: 10, scope: !11178)
!11181 = !DILocation(line: 1471, column: 28, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11178, file: !3, line: 1470, column: 41)
!11183 = !DILocation(line: 1471, column: 13, scope: !11182)
!11184 = !DILocation(line: 1471, column: 11, scope: !11182)
!11185 = !DILocation(line: 1473, column: 8, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 1473, column: 8)
!11187 = !DILocation(line: 1473, column: 15, scope: !11186)
!11188 = !DILocation(line: 1473, column: 20, scope: !11186)
!11189 = !DILocation(line: 1473, column: 23, scope: !11186)
!11190 = !DILocation(line: 1473, column: 8, scope: !11182)
!11191 = !DILocation(line: 1474, column: 31, scope: !11186)
!11192 = !DILocation(line: 1474, column: 36, scope: !11186)
!11193 = !DILocation(line: 1474, column: 14, scope: !11186)
!11194 = !DILocation(line: 1474, column: 12, scope: !11186)
!11195 = !DILocation(line: 1474, column: 5, scope: !11186)
!11196 = !DILocation(line: 1476, column: 12, scope: !11182)
!11197 = !DILocation(line: 1476, column: 4, scope: !11182)
!11198 = !DILocation(line: 1485, column: 5, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 1476, column: 20)
!11200 = !DILocation(line: 1486, column: 5, scope: !11199)
!11201 = distinct !{!11201, !11177, !11202}
!11202 = !DILocation(line: 1498, column: 3, scope: !11178)
!11203 = !DILocation(line: 1489, column: 5, scope: !11199)
!11204 = !DILocation(line: 1492, column: 5, scope: !11199)
!11205 = !DILocation(line: 1494, column: 12, scope: !11199)
!11206 = !DILocation(line: 1494, column: 5, scope: !11199)
!11207 = !DILocation(line: 1497, column: 4, scope: !11182)
!11208 = !DILocation(line: 1499, column: 2, scope: !11178)
!11209 = !DILocation(line: 1500, column: 16, scope: !11175)
!11210 = !DILocation(line: 1500, column: 3, scope: !11175)
!11211 = !DILocation(line: 1502, column: 2, scope: !11115)
!11212 = !DILocation(line: 1503, column: 11, scope: !11115)
!11213 = !DILocation(line: 1503, column: 16, scope: !11115)
!11214 = !DILocation(line: 1503, column: 9, scope: !11115)
!11215 = !DILocation(line: 1504, column: 18, scope: !11115)
!11216 = !DILocation(line: 1504, column: 2, scope: !11115)
!11217 = !DILocation(line: 1506, column: 6, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 1506, column: 6)
!11219 = !DILocation(line: 1506, column: 6, scope: !11115)
!11220 = !DILocation(line: 1507, column: 11, scope: !11218)
!11221 = !DILocation(line: 1507, column: 18, scope: !11218)
!11222 = !DILocation(line: 1507, column: 10, scope: !11218)
!11223 = !DILocation(line: 1507, column: 40, scope: !11218)
!11224 = !DILocation(line: 1507, column: 47, scope: !11218)
!11225 = !DILocation(line: 1507, column: 3, scope: !11218)
!11226 = !DILocation(line: 1509, column: 11, scope: !11218)
!11227 = !DILocation(line: 1509, column: 18, scope: !11218)
!11228 = !DILocation(line: 1509, column: 29, scope: !11218)
!11229 = !DILocation(line: 1509, column: 32, scope: !11218)
!11230 = !DILocation(line: 1509, column: 39, scope: !11218)
!11231 = !DILocation(line: 1509, column: 10, scope: !11218)
!11232 = !DILocation(line: 1510, column: 9, scope: !11218)
!11233 = !DILocation(line: 1510, column: 16, scope: !11218)
!11234 = !DILocation(line: 1509, column: 3, scope: !11218)
!11235 = !DILocation(line: 1511, column: 1, scope: !11115)
!11236 = distinct !DISubprogram(name: "unlink1_callback", scope: !3, file: !3, line: 1422, type: !4140, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11237 = !DILocalVariable(name: "urb", arg: 1, scope: !11236, file: !3, line: 1422, type: !4089)
!11238 = !DILocation(line: 1422, column: 42, scope: !11236)
!11239 = !DILocalVariable(name: "status", scope: !11236, file: !3, line: 1424, type: !168)
!11240 = !DILocation(line: 1424, column: 6, scope: !11236)
!11241 = !DILocation(line: 1424, column: 15, scope: !11236)
!11242 = !DILocation(line: 1424, column: 20, scope: !11236)
!11243 = !DILocation(line: 1427, column: 7, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 1427, column: 6)
!11245 = !DILocation(line: 1427, column: 6, scope: !11236)
!11246 = !DILocation(line: 1428, column: 27, scope: !11244)
!11247 = !DILocation(line: 1428, column: 12, scope: !11244)
!11248 = !DILocation(line: 1428, column: 10, scope: !11244)
!11249 = !DILocation(line: 1428, column: 3, scope: !11244)
!11250 = !DILocation(line: 1429, column: 6, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 1429, column: 6)
!11252 = !DILocation(line: 1429, column: 6, scope: !11236)
!11253 = !DILocation(line: 1430, column: 17, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 1429, column: 14)
!11255 = !DILocation(line: 1430, column: 3, scope: !11254)
!11256 = !DILocation(line: 1430, column: 8, scope: !11254)
!11257 = !DILocation(line: 1430, column: 15, scope: !11254)
!11258 = !DILocation(line: 1431, column: 12, scope: !11254)
!11259 = !DILocation(line: 1431, column: 17, scope: !11254)
!11260 = !DILocation(line: 1431, column: 3, scope: !11254)
!11261 = !DILocation(line: 1432, column: 2, scope: !11254)
!11262 = !DILocation(line: 1433, column: 1, scope: !11236)
!11263 = distinct !DISubprogram(name: "test_halt", scope: !3, file: !3, line: 1676, type: !11264, scopeLine: 1677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11264 = !DISubroutineType(types: !11265)
!11265 = !{!168, !4522, !168, !4089}
!11266 = !DILocalVariable(name: "tdev", arg: 1, scope: !11263, file: !3, line: 1676, type: !4522)
!11267 = !DILocation(line: 1676, column: 42, scope: !11263)
!11268 = !DILocalVariable(name: "ep", arg: 2, scope: !11263, file: !3, line: 1676, type: !168)
!11269 = !DILocation(line: 1676, column: 52, scope: !11263)
!11270 = !DILocalVariable(name: "urb", arg: 3, scope: !11263, file: !3, line: 1676, type: !4089)
!11271 = !DILocation(line: 1676, column: 68, scope: !11263)
!11272 = !DILocalVariable(name: "retval", scope: !11263, file: !3, line: 1678, type: !168)
!11273 = !DILocation(line: 1678, column: 6, scope: !11263)
!11274 = !DILocation(line: 1681, column: 29, scope: !11263)
!11275 = !DILocation(line: 1681, column: 35, scope: !11263)
!11276 = !DILocation(line: 1681, column: 39, scope: !11263)
!11277 = !DILocation(line: 1681, column: 11, scope: !11263)
!11278 = !DILocation(line: 1681, column: 9, scope: !11263)
!11279 = !DILocation(line: 1682, column: 6, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 1682, column: 6)
!11281 = !DILocation(line: 1682, column: 13, scope: !11280)
!11282 = !DILocation(line: 1682, column: 6, scope: !11263)
!11283 = !DILocation(line: 1683, column: 10, scope: !11280)
!11284 = !DILocation(line: 1683, column: 3, scope: !11280)
!11285 = !DILocation(line: 1686, column: 27, scope: !11263)
!11286 = !DILocation(line: 1686, column: 32, scope: !11263)
!11287 = !DILocation(line: 1686, column: 37, scope: !11263)
!11288 = !DILocation(line: 1688, column: 23, scope: !11263)
!11289 = !DILocation(line: 1686, column: 11, scope: !11263)
!11290 = !DILocation(line: 1686, column: 9, scope: !11263)
!11291 = !DILocation(line: 1690, column: 6, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 1690, column: 6)
!11293 = !DILocation(line: 1690, column: 13, scope: !11292)
!11294 = !DILocation(line: 1690, column: 6, scope: !11263)
!11295 = !DILocation(line: 1691, column: 3, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 1690, column: 18)
!11297 = !DILocation(line: 1692, column: 10, scope: !11296)
!11298 = !DILocation(line: 1692, column: 3, scope: !11296)
!11299 = !DILocation(line: 1694, column: 25, scope: !11263)
!11300 = !DILocation(line: 1694, column: 31, scope: !11263)
!11301 = !DILocation(line: 1694, column: 35, scope: !11263)
!11302 = !DILocation(line: 1694, column: 11, scope: !11263)
!11303 = !DILocation(line: 1694, column: 9, scope: !11263)
!11304 = !DILocation(line: 1695, column: 6, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 1695, column: 6)
!11306 = !DILocation(line: 1695, column: 13, scope: !11305)
!11307 = !DILocation(line: 1695, column: 6, scope: !11263)
!11308 = !DILocalVariable(name: "ret", scope: !11309, file: !3, line: 1696, type: !168)
!11309 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 1695, column: 18)
!11310 = !DILocation(line: 1696, column: 7, scope: !11309)
!11311 = !DILocation(line: 1699, column: 24, scope: !11309)
!11312 = !DILocation(line: 1699, column: 29, scope: !11309)
!11313 = !DILocation(line: 1699, column: 34, scope: !11309)
!11314 = !DILocation(line: 1699, column: 39, scope: !11309)
!11315 = !DILocation(line: 1699, column: 9, scope: !11309)
!11316 = !DILocation(line: 1699, column: 7, scope: !11309)
!11317 = !DILocation(line: 1700, column: 7, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 1700, column: 7)
!11319 = !DILocation(line: 1700, column: 7, scope: !11309)
!11320 = !DILocation(line: 1701, column: 4, scope: !11318)
!11321 = !DILocation(line: 1704, column: 10, scope: !11309)
!11322 = !DILocation(line: 1704, column: 3, scope: !11309)
!11323 = !DILocation(line: 1708, column: 26, scope: !11263)
!11324 = !DILocation(line: 1708, column: 31, scope: !11263)
!11325 = !DILocation(line: 1708, column: 36, scope: !11263)
!11326 = !DILocation(line: 1708, column: 41, scope: !11263)
!11327 = !DILocation(line: 1708, column: 11, scope: !11263)
!11328 = !DILocation(line: 1708, column: 9, scope: !11263)
!11329 = !DILocation(line: 1709, column: 6, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 1709, column: 6)
!11331 = !DILocation(line: 1709, column: 13, scope: !11330)
!11332 = !DILocation(line: 1709, column: 6, scope: !11263)
!11333 = !DILocation(line: 1710, column: 3, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 1709, column: 18)
!11335 = !DILocation(line: 1711, column: 10, scope: !11334)
!11336 = !DILocation(line: 1711, column: 3, scope: !11334)
!11337 = !DILocation(line: 1713, column: 29, scope: !11263)
!11338 = !DILocation(line: 1713, column: 35, scope: !11263)
!11339 = !DILocation(line: 1713, column: 39, scope: !11263)
!11340 = !DILocation(line: 1713, column: 11, scope: !11263)
!11341 = !DILocation(line: 1713, column: 9, scope: !11263)
!11342 = !DILocation(line: 1714, column: 6, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 1714, column: 6)
!11344 = !DILocation(line: 1714, column: 13, scope: !11343)
!11345 = !DILocation(line: 1714, column: 6, scope: !11263)
!11346 = !DILocation(line: 1715, column: 10, scope: !11343)
!11347 = !DILocation(line: 1715, column: 3, scope: !11343)
!11348 = !DILocation(line: 1719, column: 2, scope: !11263)
!11349 = !DILocation(line: 1720, column: 1, scope: !11263)
!11350 = distinct !DISubprogram(name: "verify_not_halted", scope: !3, file: !3, line: 1629, type: !11264, scopeLine: 1630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11351 = !DILocalVariable(name: "tdev", arg: 1, scope: !11350, file: !3, line: 1629, type: !4522)
!11352 = !DILocation(line: 1629, column: 50, scope: !11350)
!11353 = !DILocalVariable(name: "ep", arg: 2, scope: !11350, file: !3, line: 1629, type: !168)
!11354 = !DILocation(line: 1629, column: 60, scope: !11350)
!11355 = !DILocalVariable(name: "urb", arg: 3, scope: !11350, file: !3, line: 1629, type: !4089)
!11356 = !DILocation(line: 1629, column: 76, scope: !11350)
!11357 = !DILocalVariable(name: "retval", scope: !11350, file: !3, line: 1631, type: !168)
!11358 = !DILocation(line: 1631, column: 6, scope: !11350)
!11359 = !DILocalVariable(name: "status", scope: !11350, file: !3, line: 1632, type: !147)
!11360 = !DILocation(line: 1632, column: 6, scope: !11350)
!11361 = !DILocation(line: 1635, column: 30, scope: !11350)
!11362 = !DILocation(line: 1635, column: 35, scope: !11350)
!11363 = !DILocation(line: 1635, column: 60, scope: !11350)
!11364 = !DILocation(line: 1635, column: 64, scope: !11350)
!11365 = !DILocation(line: 1635, column: 11, scope: !11350)
!11366 = !DILocation(line: 1635, column: 9, scope: !11350)
!11367 = !DILocation(line: 1636, column: 6, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 1636, column: 6)
!11369 = !DILocation(line: 1636, column: 13, scope: !11368)
!11370 = !DILocation(line: 1636, column: 6, scope: !11350)
!11371 = !DILocation(line: 1637, column: 3, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11368, file: !3, line: 1636, column: 18)
!11373 = !DILocation(line: 1639, column: 10, scope: !11372)
!11374 = !DILocation(line: 1639, column: 3, scope: !11372)
!11375 = !DILocation(line: 1641, column: 6, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 1641, column: 6)
!11377 = !DILocation(line: 1641, column: 13, scope: !11376)
!11378 = !DILocation(line: 1641, column: 6, scope: !11350)
!11379 = !DILocation(line: 1642, column: 3, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11376, file: !3, line: 1641, column: 19)
!11381 = !DILocation(line: 1643, column: 3, scope: !11380)
!11382 = !DILocation(line: 1645, column: 21, scope: !11350)
!11383 = !DILocation(line: 1645, column: 27, scope: !11350)
!11384 = !DILocation(line: 1645, column: 11, scope: !11350)
!11385 = !DILocation(line: 1645, column: 9, scope: !11350)
!11386 = !DILocation(line: 1646, column: 6, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 1646, column: 6)
!11388 = !DILocation(line: 1646, column: 13, scope: !11387)
!11389 = !DILocation(line: 1646, column: 6, scope: !11350)
!11390 = !DILocation(line: 1647, column: 3, scope: !11387)
!11391 = !DILocation(line: 1648, column: 2, scope: !11350)
!11392 = !DILocation(line: 1649, column: 1, scope: !11350)
!11393 = distinct !DISubprogram(name: "verify_halted", scope: !3, file: !3, line: 1651, type: !11264, scopeLine: 1652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11394 = !DILocalVariable(name: "tdev", arg: 1, scope: !11393, file: !3, line: 1651, type: !4522)
!11395 = !DILocation(line: 1651, column: 46, scope: !11393)
!11396 = !DILocalVariable(name: "ep", arg: 2, scope: !11393, file: !3, line: 1651, type: !168)
!11397 = !DILocation(line: 1651, column: 56, scope: !11393)
!11398 = !DILocalVariable(name: "urb", arg: 3, scope: !11393, file: !3, line: 1651, type: !4089)
!11399 = !DILocation(line: 1651, column: 72, scope: !11393)
!11400 = !DILocalVariable(name: "retval", scope: !11393, file: !3, line: 1653, type: !168)
!11401 = !DILocation(line: 1653, column: 6, scope: !11393)
!11402 = !DILocalVariable(name: "status", scope: !11393, file: !3, line: 1654, type: !147)
!11403 = !DILocation(line: 1654, column: 6, scope: !11393)
!11404 = !DILocation(line: 1657, column: 30, scope: !11393)
!11405 = !DILocation(line: 1657, column: 35, scope: !11393)
!11406 = !DILocation(line: 1657, column: 60, scope: !11393)
!11407 = !DILocation(line: 1657, column: 64, scope: !11393)
!11408 = !DILocation(line: 1657, column: 11, scope: !11393)
!11409 = !DILocation(line: 1657, column: 9, scope: !11393)
!11410 = !DILocation(line: 1658, column: 6, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 1658, column: 6)
!11412 = !DILocation(line: 1658, column: 13, scope: !11411)
!11413 = !DILocation(line: 1658, column: 6, scope: !11393)
!11414 = !DILocation(line: 1659, column: 3, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 1658, column: 18)
!11416 = !DILocation(line: 1661, column: 10, scope: !11415)
!11417 = !DILocation(line: 1661, column: 3, scope: !11415)
!11418 = !DILocation(line: 1663, column: 6, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 1663, column: 6)
!11420 = !DILocation(line: 1663, column: 13, scope: !11419)
!11421 = !DILocation(line: 1663, column: 6, scope: !11393)
!11422 = !DILocation(line: 1664, column: 3, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11419, file: !3, line: 1663, column: 19)
!11424 = !DILocation(line: 1665, column: 3, scope: !11423)
!11425 = !DILocation(line: 1667, column: 21, scope: !11393)
!11426 = !DILocation(line: 1667, column: 27, scope: !11393)
!11427 = !DILocation(line: 1667, column: 11, scope: !11393)
!11428 = !DILocation(line: 1667, column: 9, scope: !11393)
!11429 = !DILocation(line: 1668, column: 6, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 1668, column: 6)
!11431 = !DILocation(line: 1668, column: 13, scope: !11430)
!11432 = !DILocation(line: 1668, column: 6, scope: !11393)
!11433 = !DILocation(line: 1669, column: 3, scope: !11430)
!11434 = !DILocation(line: 1670, column: 21, scope: !11393)
!11435 = !DILocation(line: 1670, column: 27, scope: !11393)
!11436 = !DILocation(line: 1670, column: 11, scope: !11393)
!11437 = !DILocation(line: 1670, column: 9, scope: !11393)
!11438 = !DILocation(line: 1671, column: 6, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 1671, column: 6)
!11440 = !DILocation(line: 1671, column: 13, scope: !11439)
!11441 = !DILocation(line: 1671, column: 6, scope: !11393)
!11442 = !DILocation(line: 1672, column: 3, scope: !11439)
!11443 = !DILocation(line: 1673, column: 2, scope: !11393)
!11444 = !DILocation(line: 1674, column: 1, scope: !11393)
!11445 = distinct !DISubprogram(name: "iso_alloc_urb", scope: !3, file: !3, line: 1974, type: !11446, scopeLine: 1981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11446 = !DISubroutineType(types: !11447)
!11447 = !{!4089, !170, !168, !4534, !297, !7}
!11448 = !DILocalVariable(name: "udev", arg: 1, scope: !11445, file: !3, line: 1975, type: !170)
!11449 = !DILocation(line: 1975, column: 21, scope: !11445)
!11450 = !DILocalVariable(name: "pipe", arg: 2, scope: !11445, file: !3, line: 1976, type: !168)
!11451 = !DILocation(line: 1976, column: 8, scope: !11445)
!11452 = !DILocalVariable(name: "desc", arg: 3, scope: !11445, file: !3, line: 1977, type: !4534)
!11453 = !DILocation(line: 1977, column: 34, scope: !11445)
!11454 = !DILocalVariable(name: "bytes", arg: 4, scope: !11445, file: !3, line: 1978, type: !297)
!11455 = !DILocation(line: 1978, column: 9, scope: !11445)
!11456 = !DILocalVariable(name: "offset", arg: 5, scope: !11445, file: !3, line: 1979, type: !7)
!11457 = !DILocation(line: 1979, column: 11, scope: !11445)
!11458 = !DILocalVariable(name: "urb", scope: !11445, file: !3, line: 1982, type: !4089)
!11459 = !DILocation(line: 1982, column: 15, scope: !11445)
!11460 = !DILocalVariable(name: "i", scope: !11445, file: !3, line: 1983, type: !7)
!11461 = !DILocation(line: 1983, column: 12, scope: !11445)
!11462 = !DILocalVariable(name: "maxp", scope: !11445, file: !3, line: 1983, type: !7)
!11463 = !DILocation(line: 1983, column: 15, scope: !11445)
!11464 = !DILocalVariable(name: "packets", scope: !11445, file: !3, line: 1983, type: !7)
!11465 = !DILocation(line: 1983, column: 21, scope: !11445)
!11466 = !DILocation(line: 1985, column: 6, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 1985, column: 6)
!11468 = !DILocation(line: 1985, column: 12, scope: !11467)
!11469 = !DILocation(line: 1985, column: 16, scope: !11467)
!11470 = !DILocation(line: 1985, column: 20, scope: !11467)
!11471 = !DILocation(line: 1985, column: 6, scope: !11445)
!11472 = !DILocation(line: 1986, column: 3, scope: !11467)
!11473 = !DILocation(line: 1988, column: 27, scope: !11445)
!11474 = !DILocation(line: 1988, column: 9, scope: !11445)
!11475 = !DILocation(line: 1988, column: 7, scope: !11445)
!11476 = !DILocation(line: 1989, column: 6, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 1989, column: 6)
!11478 = !DILocation(line: 1989, column: 12, scope: !11477)
!11479 = !DILocation(line: 1989, column: 18, scope: !11477)
!11480 = !DILocation(line: 1989, column: 6, scope: !11445)
!11481 = !DILocation(line: 1990, column: 34, scope: !11477)
!11482 = !DILocation(line: 1990, column: 40, scope: !11477)
!11483 = !DILocation(line: 1990, column: 11, scope: !11477)
!11484 = !DILocation(line: 1990, column: 8, scope: !11477)
!11485 = !DILocation(line: 1990, column: 3, scope: !11477)
!11486 = !DILocation(line: 1992, column: 34, scope: !11477)
!11487 = !DILocation(line: 1992, column: 11, scope: !11477)
!11488 = !DILocation(line: 1992, column: 8, scope: !11477)
!11489 = !DILocation(line: 1994, column: 12, scope: !11445)
!11490 = !DILocation(line: 1994, column: 10, scope: !11445)
!11491 = !DILocation(line: 1996, column: 22, scope: !11445)
!11492 = !DILocation(line: 1996, column: 8, scope: !11445)
!11493 = !DILocation(line: 1996, column: 6, scope: !11445)
!11494 = !DILocation(line: 1997, column: 7, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 1997, column: 6)
!11496 = !DILocation(line: 1997, column: 6, scope: !11445)
!11497 = !DILocation(line: 1998, column: 10, scope: !11495)
!11498 = !DILocation(line: 1998, column: 3, scope: !11495)
!11499 = !DILocation(line: 1999, column: 13, scope: !11445)
!11500 = !DILocation(line: 1999, column: 2, scope: !11445)
!11501 = !DILocation(line: 1999, column: 7, scope: !11445)
!11502 = !DILocation(line: 1999, column: 11, scope: !11445)
!11503 = !DILocation(line: 2000, column: 14, scope: !11445)
!11504 = !DILocation(line: 2000, column: 2, scope: !11445)
!11505 = !DILocation(line: 2000, column: 7, scope: !11445)
!11506 = !DILocation(line: 2000, column: 12, scope: !11445)
!11507 = !DILocation(line: 2002, column: 27, scope: !11445)
!11508 = !DILocation(line: 2002, column: 2, scope: !11445)
!11509 = !DILocation(line: 2002, column: 7, scope: !11445)
!11510 = !DILocation(line: 2002, column: 25, scope: !11445)
!11511 = !DILocation(line: 2003, column: 32, scope: !11445)
!11512 = !DILocation(line: 2003, column: 2, scope: !11445)
!11513 = !DILocation(line: 2003, column: 7, scope: !11445)
!11514 = !DILocation(line: 2003, column: 30, scope: !11445)
!11515 = !DILocation(line: 2004, column: 44, scope: !11445)
!11516 = !DILocation(line: 2004, column: 50, scope: !11445)
!11517 = !DILocation(line: 2004, column: 58, scope: !11445)
!11518 = !DILocation(line: 2004, column: 56, scope: !11445)
!11519 = !DILocation(line: 2006, column: 9, scope: !11445)
!11520 = !DILocation(line: 2006, column: 14, scope: !11445)
!11521 = !DILocation(line: 2004, column: 25, scope: !11445)
!11522 = !DILocation(line: 2004, column: 2, scope: !11445)
!11523 = !DILocation(line: 2004, column: 7, scope: !11445)
!11524 = !DILocation(line: 2004, column: 23, scope: !11445)
!11525 = !DILocation(line: 2007, column: 7, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 2007, column: 6)
!11527 = !DILocation(line: 2007, column: 12, scope: !11526)
!11528 = !DILocation(line: 2007, column: 6, scope: !11445)
!11529 = !DILocation(line: 2008, column: 16, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 2007, column: 29)
!11531 = !DILocation(line: 2008, column: 3, scope: !11530)
!11532 = !DILocation(line: 2009, column: 3, scope: !11530)
!11533 = !DILocation(line: 2011, column: 6, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 2011, column: 6)
!11535 = !DILocation(line: 2011, column: 6, scope: !11445)
!11536 = !DILocation(line: 2012, column: 10, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11534, file: !3, line: 2011, column: 14)
!11538 = !DILocation(line: 2012, column: 15, scope: !11537)
!11539 = !DILocation(line: 2012, column: 44, scope: !11537)
!11540 = !DILocation(line: 2012, column: 3, scope: !11537)
!11541 = !DILocation(line: 2013, column: 27, scope: !11537)
!11542 = !DILocation(line: 2013, column: 3, scope: !11537)
!11543 = !DILocation(line: 2013, column: 8, scope: !11537)
!11544 = !DILocation(line: 2013, column: 24, scope: !11537)
!11545 = !DILocation(line: 2014, column: 24, scope: !11537)
!11546 = !DILocation(line: 2014, column: 3, scope: !11537)
!11547 = !DILocation(line: 2014, column: 8, scope: !11537)
!11548 = !DILocation(line: 2014, column: 21, scope: !11537)
!11549 = !DILocation(line: 2015, column: 2, scope: !11537)
!11550 = !DILocation(line: 2018, column: 9, scope: !11445)
!11551 = !DILocation(line: 2018, column: 14, scope: !11445)
!11552 = !DILocation(line: 2019, column: 4, scope: !11445)
!11553 = !DILocation(line: 2018, column: 2, scope: !11445)
!11554 = !DILocation(line: 2020, column: 4, scope: !11445)
!11555 = !DILocation(line: 2022, column: 9, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 2022, column: 2)
!11557 = !DILocation(line: 2022, column: 7, scope: !11556)
!11558 = !DILocation(line: 2022, column: 14, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 2022, column: 2)
!11560 = !DILocation(line: 2022, column: 18, scope: !11559)
!11561 = !DILocation(line: 2022, column: 16, scope: !11559)
!11562 = !DILocation(line: 2022, column: 2, scope: !11556)
!11563 = !DILocalVariable(name: "__UNIQUE_ID___x244", scope: !11564, file: !3, line: 2024, type: !7)
!11564 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 2024, column: 35)
!11565 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 2022, column: 32)
!11566 = !DILocation(line: 2024, column: 35, scope: !11564)
!11567 = !DILocalVariable(name: "__UNIQUE_ID___y245", scope: !11564, file: !3, line: 2024, type: !7)
!11568 = !DILocation(line: 2024, column: 3, scope: !11565)
!11569 = !DILocation(line: 2024, column: 8, scope: !11565)
!11570 = !DILocation(line: 2024, column: 23, scope: !11565)
!11571 = !DILocation(line: 2024, column: 26, scope: !11565)
!11572 = !DILocation(line: 2024, column: 33, scope: !11565)
!11573 = !DILocation(line: 2025, column: 12, scope: !11565)
!11574 = !DILocation(line: 2025, column: 17, scope: !11565)
!11575 = !DILocation(line: 2025, column: 32, scope: !11565)
!11576 = !DILocation(line: 2025, column: 35, scope: !11565)
!11577 = !DILocation(line: 2025, column: 9, scope: !11565)
!11578 = !DILocation(line: 2027, column: 35, scope: !11565)
!11579 = !DILocation(line: 2027, column: 42, scope: !11565)
!11580 = !DILocation(line: 2027, column: 40, scope: !11565)
!11581 = !DILocation(line: 2027, column: 3, scope: !11565)
!11582 = !DILocation(line: 2027, column: 8, scope: !11565)
!11583 = !DILocation(line: 2027, column: 23, scope: !11565)
!11584 = !DILocation(line: 2027, column: 26, scope: !11565)
!11585 = !DILocation(line: 2027, column: 33, scope: !11565)
!11586 = !DILocation(line: 2028, column: 2, scope: !11565)
!11587 = !DILocation(line: 2022, column: 28, scope: !11559)
!11588 = !DILocation(line: 2022, column: 2, scope: !11559)
!11589 = distinct !{!11589, !11562, !11590}
!11590 = !DILocation(line: 2028, column: 2, scope: !11556)
!11591 = !DILocation(line: 2030, column: 2, scope: !11445)
!11592 = !DILocation(line: 2030, column: 7, scope: !11445)
!11593 = !DILocation(line: 2030, column: 16, scope: !11445)
!11594 = !DILocation(line: 2032, column: 24, scope: !11445)
!11595 = !DILocation(line: 2032, column: 30, scope: !11445)
!11596 = !DILocation(line: 2032, column: 40, scope: !11445)
!11597 = !DILocation(line: 2032, column: 20, scope: !11445)
!11598 = !DILocation(line: 2032, column: 2, scope: !11445)
!11599 = !DILocation(line: 2032, column: 7, scope: !11445)
!11600 = !DILocation(line: 2032, column: 16, scope: !11445)
!11601 = !DILocation(line: 2033, column: 2, scope: !11445)
!11602 = !DILocation(line: 2033, column: 7, scope: !11445)
!11603 = !DILocation(line: 2033, column: 22, scope: !11445)
!11604 = !DILocation(line: 2034, column: 9, scope: !11445)
!11605 = !DILocation(line: 2034, column: 2, scope: !11445)
!11606 = !DILocation(line: 2035, column: 1, scope: !11445)
!11607 = distinct !DISubprogram(name: "complicated_alloc_urb", scope: !3, file: !3, line: 327, type: !6704, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11608 = !DILocalVariable(name: "udev", arg: 1, scope: !11607, file: !3, line: 328, type: !170)
!11609 = !DILocation(line: 328, column: 21, scope: !11607)
!11610 = !DILocalVariable(name: "pipe", arg: 2, scope: !11607, file: !3, line: 329, type: !168)
!11611 = !DILocation(line: 329, column: 8, scope: !11607)
!11612 = !DILocalVariable(name: "bytes", arg: 3, scope: !11607, file: !3, line: 330, type: !311)
!11613 = !DILocation(line: 330, column: 17, scope: !11607)
!11614 = !DILocalVariable(name: "bInterval", arg: 4, scope: !11607, file: !3, line: 331, type: !159)
!11615 = !DILocation(line: 331, column: 7, scope: !11607)
!11616 = !DILocation(line: 333, column: 27, scope: !11607)
!11617 = !DILocation(line: 333, column: 33, scope: !11607)
!11618 = !DILocation(line: 333, column: 39, scope: !11607)
!11619 = !DILocation(line: 334, column: 4, scope: !11607)
!11620 = !DILocation(line: 333, column: 9, scope: !11607)
!11621 = !DILocation(line: 333, column: 2, scope: !11607)
!11622 = distinct !DISubprogram(name: "ss_isoc_get_packet_num", scope: !3, file: !3, line: 350, type: !11623, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11623 = !DISubroutineType(types: !11624)
!11624 = !{!168, !170, !168}
!11625 = !DILocalVariable(name: "udev", arg: 1, scope: !11622, file: !3, line: 350, type: !170)
!11626 = !DILocation(line: 350, column: 54, scope: !11622)
!11627 = !DILocalVariable(name: "pipe", arg: 2, scope: !11622, file: !3, line: 350, type: !168)
!11628 = !DILocation(line: 350, column: 64, scope: !11622)
!11629 = !DILocalVariable(name: "ep", scope: !11622, file: !3, line: 352, type: !3987)
!11630 = !DILocation(line: 352, column: 28, scope: !11622)
!11631 = !DILocation(line: 352, column: 51, scope: !11622)
!11632 = !DILocation(line: 352, column: 57, scope: !11622)
!11633 = !DILocation(line: 352, column: 33, scope: !11622)
!11634 = !DILocation(line: 354, column: 9, scope: !11622)
!11635 = !DILocation(line: 355, column: 10, scope: !11622)
!11636 = !DILocation(line: 355, column: 14, scope: !11622)
!11637 = !DILocation(line: 355, column: 25, scope: !11622)
!11638 = !DILocation(line: 355, column: 8, scope: !11622)
!11639 = !DILocation(line: 355, column: 3, scope: !11622)
!11640 = !DILocation(line: 354, column: 2, scope: !11622)
!11641 = distinct !DISubprogram(name: "usb_endpoint_maxp_mult", scope: !101, file: !101, line: 659, type: !5696, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11642 = !DILocalVariable(name: "epd", arg: 1, scope: !11641, file: !101, line: 659, type: !5698)
!11643 = !DILocation(line: 659, column: 62, scope: !11641)
!11644 = !DILocalVariable(name: "maxp", scope: !11641, file: !101, line: 661, type: !168)
!11645 = !DILocation(line: 661, column: 6, scope: !11641)
!11646 = !DILocation(line: 661, column: 13, scope: !11641)
!11647 = !DILocation(line: 663, column: 9, scope: !11641)
!11648 = !DILocation(line: 663, column: 32, scope: !11641)
!11649 = !DILocation(line: 663, column: 2, scope: !11641)
!11650 = distinct !DISubprogram(name: "usb_endpoint_maxp", scope: !101, file: !101, line: 647, type: !5696, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11651 = !DILocalVariable(name: "epd", arg: 1, scope: !11650, file: !101, line: 647, type: !5698)
!11652 = !DILocation(line: 647, column: 75, scope: !11650)
!11653 = !DILocation(line: 649, column: 9, scope: !11650)
!11654 = !DILocation(line: 649, column: 44, scope: !11650)
!11655 = !DILocation(line: 649, column: 2, scope: !11650)
!11656 = distinct !DISubprogram(name: "complicated_callback", scope: !3, file: !3, line: 1926, type: !4140, scopeLine: 1927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11657 = !DILocation(line: 407, column: 64, scope: !10775, inlinedAt: !11658)
!11658 = distinct !DILocation(line: 1971, column: 2, scope: !11656)
!11659 = !DILocation(line: 407, column: 84, scope: !10775, inlinedAt: !11658)
!11660 = !DILocation(line: 327, column: 67, scope: !7672, inlinedAt: !11661)
!11661 = distinct !DILocation(line: 1931, column: 2, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 1931, column: 2)
!11663 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 1931, column: 2)
!11664 = distinct !DILexicalBlock(scope: !11665, file: !3, line: 1931, column: 2)
!11665 = distinct !DILexicalBlock(scope: !11666, file: !3, line: 1931, column: 2)
!11666 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 1931, column: 2)
!11667 = !DILocalVariable(name: "urb", arg: 1, scope: !11656, file: !3, line: 1926, type: !4089)
!11668 = !DILocation(line: 1926, column: 46, scope: !11656)
!11669 = !DILocalVariable(name: "ctx", scope: !11656, file: !3, line: 1928, type: !11670)
!11670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8754, size: 64)
!11671 = !DILocation(line: 1928, column: 27, scope: !11656)
!11672 = !DILocation(line: 1928, column: 33, scope: !11656)
!11673 = !DILocation(line: 1928, column: 38, scope: !11656)
!11674 = !DILocalVariable(name: "flags", scope: !11656, file: !3, line: 1929, type: !311)
!11675 = !DILocation(line: 1929, column: 16, scope: !11656)
!11676 = !DILocation(line: 1931, column: 2, scope: !11656)
!11677 = !DILocation(line: 1931, column: 2, scope: !11666)
!11678 = !DILocalVariable(name: "__dummy", scope: !11679, file: !3, line: 1931, type: !311)
!11679 = distinct !DILexicalBlock(scope: !11665, file: !3, line: 1931, column: 2)
!11680 = !DILocation(line: 1931, column: 2, scope: !11679)
!11681 = !DILocalVariable(name: "__dummy2", scope: !11679, file: !3, line: 1931, type: !311)
!11682 = !DILocation(line: 1931, column: 2, scope: !11665)
!11683 = !DILocation(line: 1931, column: 2, scope: !11664)
!11684 = !DILocation(line: 1931, column: 2, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 1931, column: 2)
!11686 = !DILocalVariable(name: "__dummy", scope: !11687, file: !3, line: 1931, type: !311)
!11687 = distinct !DILexicalBlock(scope: !11688, file: !3, line: 1931, column: 2)
!11688 = distinct !DILexicalBlock(scope: !11685, file: !3, line: 1931, column: 2)
!11689 = !DILocation(line: 1931, column: 2, scope: !11687)
!11690 = !DILocalVariable(name: "__dummy2", scope: !11687, file: !3, line: 1931, type: !311)
!11691 = !DILocation(line: 1931, column: 2, scope: !11688)
!11692 = !DILocation(line: 1931, column: 2, scope: !11663)
!11693 = !{i32 -2141805600}
!11694 = !DILocation(line: 1931, column: 2, scope: !11662)
!11695 = !DILocation(line: 329, column: 10, scope: !7672, inlinedAt: !11661)
!11696 = !DILocation(line: 329, column: 16, scope: !7672, inlinedAt: !11661)
!11697 = !DILocation(line: 1932, column: 2, scope: !11656)
!11698 = !DILocation(line: 1932, column: 7, scope: !11656)
!11699 = !DILocation(line: 1932, column: 12, scope: !11656)
!11700 = !DILocation(line: 1934, column: 23, scope: !11656)
!11701 = !DILocation(line: 1934, column: 28, scope: !11656)
!11702 = !DILocation(line: 1934, column: 2, scope: !11656)
!11703 = !DILocation(line: 1934, column: 7, scope: !11656)
!11704 = !DILocation(line: 1934, column: 20, scope: !11656)
!11705 = !DILocation(line: 1935, column: 6, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 1935, column: 6)
!11707 = !DILocation(line: 1935, column: 11, scope: !11706)
!11708 = !DILocation(line: 1935, column: 23, scope: !11706)
!11709 = !DILocation(line: 1935, column: 6, scope: !11656)
!11710 = !DILocation(line: 1936, column: 18, scope: !11706)
!11711 = !DILocation(line: 1936, column: 23, scope: !11706)
!11712 = !DILocation(line: 1936, column: 3, scope: !11706)
!11713 = !DILocation(line: 1936, column: 8, scope: !11706)
!11714 = !DILocation(line: 1936, column: 15, scope: !11706)
!11715 = !DILocation(line: 1937, column: 11, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11706, file: !3, line: 1937, column: 11)
!11717 = !DILocation(line: 1937, column: 16, scope: !11716)
!11718 = !DILocation(line: 1937, column: 23, scope: !11716)
!11719 = !DILocation(line: 1937, column: 11, scope: !11706)
!11720 = !DILocation(line: 1938, column: 19, scope: !11716)
!11721 = !DILocation(line: 1938, column: 24, scope: !11716)
!11722 = !DILocation(line: 1938, column: 33, scope: !11716)
!11723 = !DILocation(line: 1938, column: 38, scope: !11716)
!11724 = !DILocation(line: 1938, column: 18, scope: !11716)
!11725 = !DILocation(line: 1938, column: 3, scope: !11716)
!11726 = !DILocation(line: 1938, column: 8, scope: !11716)
!11727 = !DILocation(line: 1938, column: 15, scope: !11716)
!11728 = !DILocation(line: 1939, column: 11, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 1939, column: 11)
!11730 = !DILocation(line: 1939, column: 16, scope: !11729)
!11731 = !DILocation(line: 1939, column: 33, scope: !11729)
!11732 = !DILocation(line: 1939, column: 38, scope: !11729)
!11733 = !DILocation(line: 1939, column: 30, scope: !11729)
!11734 = !DILocation(line: 1939, column: 11, scope: !11716)
!11735 = !DILocation(line: 1940, column: 3, scope: !11729)
!11736 = !DILocation(line: 1940, column: 8, scope: !11729)
!11737 = !DILocation(line: 1940, column: 14, scope: !11729)
!11738 = !DILocation(line: 1941, column: 29, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 1941, column: 11)
!11740 = !DILocation(line: 1941, column: 34, scope: !11739)
!11741 = !DILocation(line: 1941, column: 39, scope: !11739)
!11742 = !DILocation(line: 1941, column: 11, scope: !11739)
!11743 = !DILocation(line: 1941, column: 44, scope: !11739)
!11744 = !DILocation(line: 1941, column: 11, scope: !11729)
!11745 = !DILocation(line: 1942, column: 3, scope: !11739)
!11746 = !DILocation(line: 1942, column: 8, scope: !11739)
!11747 = !DILocation(line: 1942, column: 14, scope: !11739)
!11748 = !DILocation(line: 1944, column: 6, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 1944, column: 6)
!11750 = !DILocation(line: 1944, column: 11, scope: !11749)
!11751 = !DILocation(line: 1944, column: 18, scope: !11749)
!11752 = !DILocation(line: 1944, column: 23, scope: !11749)
!11753 = !DILocation(line: 1944, column: 26, scope: !11749)
!11754 = !DILocation(line: 1944, column: 31, scope: !11749)
!11755 = !DILocation(line: 1944, column: 40, scope: !11749)
!11756 = !DILocation(line: 1944, column: 45, scope: !11749)
!11757 = !DILocation(line: 1944, column: 53, scope: !11749)
!11758 = !DILocation(line: 1944, column: 37, scope: !11749)
!11759 = !DILocation(line: 1945, column: 4, scope: !11749)
!11760 = !DILocation(line: 1945, column: 8, scope: !11749)
!11761 = !DILocation(line: 1945, column: 13, scope: !11749)
!11762 = !DILocation(line: 1944, column: 6, scope: !11656)
!11763 = !DILocalVariable(name: "status", scope: !11764, file: !3, line: 1946, type: !168)
!11764 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 1945, column: 27)
!11765 = !DILocation(line: 1946, column: 7, scope: !11764)
!11766 = !DILocation(line: 1946, column: 31, scope: !11764)
!11767 = !DILocation(line: 1946, column: 16, scope: !11764)
!11768 = !DILocation(line: 1947, column: 11, scope: !11764)
!11769 = !DILocation(line: 1947, column: 3, scope: !11764)
!11770 = !DILocation(line: 1949, column: 4, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 1947, column: 19)
!11772 = !DILocation(line: 1951, column: 4, scope: !11771)
!11773 = !DILocation(line: 1957, column: 4, scope: !11771)
!11774 = !DILocation(line: 1957, column: 9, scope: !11771)
!11775 = !DILocation(line: 1957, column: 22, scope: !11771)
!11776 = !DILocation(line: 1958, column: 4, scope: !11771)
!11777 = !DILocation(line: 1960, column: 2, scope: !11764)
!11778 = !DILocation(line: 1962, column: 2, scope: !11656)
!11779 = !DILocation(line: 1962, column: 7, scope: !11656)
!11780 = !DILocation(line: 1962, column: 14, scope: !11656)
!11781 = !DILocation(line: 1963, column: 6, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 1963, column: 6)
!11783 = !DILocation(line: 1963, column: 11, scope: !11782)
!11784 = !DILocation(line: 1963, column: 19, scope: !11782)
!11785 = !DILocation(line: 1963, column: 6, scope: !11656)
!11786 = !DILocation(line: 1964, column: 7, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !3, line: 1964, column: 7)
!11788 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 1963, column: 25)
!11789 = !DILocation(line: 1964, column: 12, scope: !11787)
!11790 = !DILocation(line: 1964, column: 7, scope: !11788)
!11791 = !DILocation(line: 1965, column: 4, scope: !11787)
!11792 = !DILocation(line: 1968, column: 13, scope: !11788)
!11793 = !DILocation(line: 1968, column: 18, scope: !11788)
!11794 = !DILocation(line: 1968, column: 3, scope: !11788)
!11795 = !DILocation(line: 1969, column: 2, scope: !11788)
!11796 = !DILocation(line: 1963, column: 22, scope: !11782)
!11797 = !DILabel(scope: !11656, name: "done", file: !3, line: 1970)
!11798 = !DILocation(line: 1970, column: 1, scope: !11656)
!11799 = !DILocation(line: 1971, column: 26, scope: !11656)
!11800 = !DILocation(line: 1971, column: 31, scope: !11656)
!11801 = !DILocation(line: 1971, column: 37, scope: !11656)
!11802 = !DILocation(line: 409, column: 2, scope: !11034, inlinedAt: !11658)
!11803 = !DILocation(line: 409, column: 2, scope: !11039, inlinedAt: !11658)
!11804 = !DILocation(line: 409, column: 2, scope: !11040, inlinedAt: !11658)
!11805 = !DILocation(line: 409, column: 2, scope: !11047, inlinedAt: !11658)
!11806 = !DILocation(line: 409, column: 2, scope: !11050, inlinedAt: !11658)
!11807 = !DILocation(line: 1972, column: 1, scope: !11656)
!11808 = distinct !DISubprogram(name: "unlink_queued_callback", scope: !3, file: !3, line: 1534, type: !4140, scopeLine: 1535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11809 = !DILocation(line: 121, column: 64, scope: !9073, inlinedAt: !11810)
!11810 = distinct !DILocation(line: 749, column: 9, scope: !9080, inlinedAt: !11811)
!11811 = distinct !DILocation(line: 1550, column: 6, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 1550, column: 6)
!11813 = !DILocation(line: 123, column: 9, scope: !9085, inlinedAt: !11810)
!11814 = !DILocation(line: 99, column: 79, scope: !9088, inlinedAt: !11815)
!11815 = distinct !DILocation(line: 748, column: 2, scope: !9080, inlinedAt: !11811)
!11816 = !DILocation(line: 99, column: 89, scope: !9088, inlinedAt: !11815)
!11817 = !DILocation(line: 746, column: 31, scope: !9080, inlinedAt: !11811)
!11818 = !DILocalVariable(name: "urb", arg: 1, scope: !11808, file: !3, line: 1534, type: !4089)
!11819 = !DILocation(line: 1534, column: 48, scope: !11808)
!11820 = !DILocalVariable(name: "status", scope: !11808, file: !3, line: 1536, type: !168)
!11821 = !DILocation(line: 1536, column: 8, scope: !11808)
!11822 = !DILocation(line: 1536, column: 17, scope: !11808)
!11823 = !DILocation(line: 1536, column: 22, scope: !11808)
!11824 = !DILocalVariable(name: "ctx", scope: !11808, file: !3, line: 1537, type: !11825)
!11825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9159, size: 64)
!11826 = !DILocation(line: 1537, column: 21, scope: !11808)
!11827 = !DILocation(line: 1537, column: 27, scope: !11808)
!11828 = !DILocation(line: 1537, column: 32, scope: !11808)
!11829 = !DILocation(line: 1539, column: 6, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 1539, column: 6)
!11831 = !DILocation(line: 1539, column: 11, scope: !11830)
!11832 = !DILocation(line: 1539, column: 6, scope: !11808)
!11833 = !DILocation(line: 1540, column: 3, scope: !11830)
!11834 = !DILocation(line: 1541, column: 6, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 1541, column: 6)
!11836 = !DILocation(line: 1541, column: 13, scope: !11835)
!11837 = !DILocation(line: 1541, column: 18, scope: !11835)
!11838 = !DILocation(line: 1541, column: 23, scope: !11835)
!11839 = !DILocation(line: 1541, column: 28, scope: !11835)
!11840 = !DILocation(line: 1541, column: 32, scope: !11835)
!11841 = !DILocation(line: 1541, column: 10, scope: !11835)
!11842 = !DILocation(line: 1541, column: 37, scope: !11835)
!11843 = !DILocation(line: 1541, column: 40, scope: !11835)
!11844 = !DILocation(line: 1541, column: 47, scope: !11835)
!11845 = !DILocation(line: 1541, column: 52, scope: !11835)
!11846 = !DILocation(line: 1541, column: 57, scope: !11835)
!11847 = !DILocation(line: 1541, column: 62, scope: !11835)
!11848 = !DILocation(line: 1541, column: 66, scope: !11835)
!11849 = !DILocation(line: 1541, column: 44, scope: !11835)
!11850 = !DILocation(line: 1541, column: 6, scope: !11808)
!11851 = !DILocation(line: 1542, column: 7, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11853, file: !3, line: 1542, column: 7)
!11853 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 1541, column: 72)
!11854 = !DILocation(line: 1542, column: 14, scope: !11852)
!11855 = !DILocation(line: 1542, column: 7, scope: !11853)
!11856 = !DILocation(line: 1543, column: 4, scope: !11852)
!11857 = !DILocation(line: 1545, column: 2, scope: !11853)
!11858 = !DILocation(line: 1546, column: 6, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 1546, column: 6)
!11860 = !DILocation(line: 1546, column: 13, scope: !11859)
!11861 = !DILocation(line: 1546, column: 6, scope: !11808)
!11862 = !DILocation(line: 1547, column: 17, scope: !11859)
!11863 = !DILocation(line: 1547, column: 3, scope: !11859)
!11864 = !DILocation(line: 1547, column: 8, scope: !11859)
!11865 = !DILocation(line: 1547, column: 15, scope: !11859)
!11866 = !DILocation(line: 1546, column: 16, scope: !11859)
!11867 = !DILabel(scope: !11808, name: "done", file: !3, line: 1549)
!11868 = !DILocation(line: 1549, column: 2, scope: !11808)
!11869 = !DILocation(line: 1550, column: 27, scope: !11812)
!11870 = !DILocation(line: 1550, column: 32, scope: !11812)
!11871 = !DILocation(line: 748, column: 31, scope: !9080, inlinedAt: !11811)
!11872 = !DILocation(line: 101, column: 20, scope: !9088, inlinedAt: !11815)
!11873 = !DILocation(line: 101, column: 23, scope: !9088, inlinedAt: !11815)
!11874 = !DILocation(line: 101, column: 2, scope: !9088, inlinedAt: !11815)
!11875 = !DILocation(line: 102, column: 2, scope: !9088, inlinedAt: !11815)
!11876 = !DILocation(line: 749, column: 34, scope: !9080, inlinedAt: !11811)
!11877 = !DILocation(line: 1550, column: 6, scope: !11808)
!11878 = !DILocation(line: 1551, column: 13, scope: !11812)
!11879 = !DILocation(line: 1551, column: 18, scope: !11812)
!11880 = !DILocation(line: 1551, column: 3, scope: !11812)
!11881 = !DILocation(line: 1552, column: 1, scope: !11808)
!11882 = distinct !DISubprogram(name: "kasan_check_write", scope: !11883, file: !11883, line: 38, type: !11884, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11883 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11884 = !DISubroutineType(types: !11885)
!11885 = !{!472, !9092, !7}
!11886 = !DILocalVariable(name: "p", arg: 1, scope: !11882, file: !11883, line: 38, type: !9092)
!11887 = !DILocation(line: 38, column: 59, scope: !11882)
!11888 = !DILocalVariable(name: "size", arg: 2, scope: !11882, file: !11883, line: 38, type: !7)
!11889 = !DILocation(line: 38, column: 75, scope: !11882)
!11890 = !DILocation(line: 40, column: 2, scope: !11882)
!11891 = distinct !DISubprogram(name: "kcsan_check_access", scope: !11892, file: !11892, line: 178, type: !11893, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11892 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11893 = !DISubroutineType(types: !11894)
!11894 = !{null, !9092, !308, !168}
!11895 = !DILocalVariable(name: "ptr", arg: 1, scope: !11891, file: !11892, line: 178, type: !9092)
!11896 = !DILocation(line: 178, column: 60, scope: !11891)
!11897 = !DILocalVariable(name: "size", arg: 2, scope: !11891, file: !11892, line: 178, type: !308)
!11898 = !DILocation(line: 178, column: 72, scope: !11891)
!11899 = !DILocalVariable(name: "type", arg: 3, scope: !11891, file: !11892, line: 179, type: !168)
!11900 = !DILocation(line: 179, column: 15, scope: !11891)
!11901 = !DILocation(line: 179, column: 23, scope: !11891)
!11902 = distinct !DISubprogram(name: "test_toggle_sync", scope: !3, file: !3, line: 1722, type: !11264, scopeLine: 1723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !235)
!11903 = !DILocalVariable(name: "tdev", arg: 1, scope: !11902, file: !3, line: 1722, type: !4522)
!11904 = !DILocation(line: 1722, column: 49, scope: !11902)
!11905 = !DILocalVariable(name: "ep", arg: 2, scope: !11902, file: !3, line: 1722, type: !168)
!11906 = !DILocation(line: 1722, column: 59, scope: !11902)
!11907 = !DILocalVariable(name: "urb", arg: 3, scope: !11902, file: !3, line: 1722, type: !4089)
!11908 = !DILocation(line: 1722, column: 75, scope: !11902)
!11909 = !DILocalVariable(name: "retval", scope: !11902, file: !3, line: 1724, type: !168)
!11910 = !DILocation(line: 1724, column: 6, scope: !11902)
!11911 = !DILocation(line: 1727, column: 26, scope: !11902)
!11912 = !DILocation(line: 1727, column: 31, scope: !11902)
!11913 = !DILocation(line: 1727, column: 36, scope: !11902)
!11914 = !DILocation(line: 1727, column: 41, scope: !11902)
!11915 = !DILocation(line: 1727, column: 11, scope: !11902)
!11916 = !DILocation(line: 1727, column: 9, scope: !11902)
!11917 = !DILocation(line: 1728, column: 6, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11902, file: !3, line: 1728, column: 6)
!11919 = !DILocation(line: 1728, column: 13, scope: !11918)
!11920 = !DILocation(line: 1728, column: 6, scope: !11902)
!11921 = !DILocation(line: 1729, column: 3, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11918, file: !3, line: 1728, column: 18)
!11923 = !DILocation(line: 1730, column: 10, scope: !11922)
!11924 = !DILocation(line: 1730, column: 3, scope: !11922)
!11925 = !DILocation(line: 1734, column: 21, scope: !11902)
!11926 = !DILocation(line: 1734, column: 27, scope: !11902)
!11927 = !DILocation(line: 1734, column: 11, scope: !11902)
!11928 = !DILocation(line: 1734, column: 9, scope: !11902)
!11929 = !DILocation(line: 1735, column: 6, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11902, file: !3, line: 1735, column: 6)
!11931 = !DILocation(line: 1735, column: 13, scope: !11930)
!11932 = !DILocation(line: 1735, column: 6, scope: !11902)
!11933 = !DILocation(line: 1736, column: 3, scope: !11930)
!11934 = !DILocation(line: 1739, column: 26, scope: !11902)
!11935 = !DILocation(line: 1739, column: 31, scope: !11902)
!11936 = !DILocation(line: 1739, column: 36, scope: !11902)
!11937 = !DILocation(line: 1739, column: 41, scope: !11902)
!11938 = !DILocation(line: 1739, column: 11, scope: !11902)
!11939 = !DILocation(line: 1739, column: 9, scope: !11902)
!11940 = !DILocation(line: 1740, column: 6, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11902, file: !3, line: 1740, column: 6)
!11942 = !DILocation(line: 1740, column: 13, scope: !11941)
!11943 = !DILocation(line: 1740, column: 6, scope: !11902)
!11944 = !DILocation(line: 1741, column: 3, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11941, file: !3, line: 1740, column: 18)
!11946 = !DILocation(line: 1742, column: 10, scope: !11945)
!11947 = !DILocation(line: 1742, column: 3, scope: !11945)
!11948 = !DILocation(line: 1746, column: 21, scope: !11902)
!11949 = !DILocation(line: 1746, column: 27, scope: !11902)
!11950 = !DILocation(line: 1746, column: 11, scope: !11902)
!11951 = !DILocation(line: 1746, column: 9, scope: !11902)
!11952 = !DILocation(line: 1748, column: 9, scope: !11902)
!11953 = !DILocation(line: 1748, column: 2, scope: !11902)
!11954 = !DILocation(line: 1749, column: 1, scope: !11902)
